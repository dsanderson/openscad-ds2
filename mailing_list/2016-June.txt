From whareg12 at yahoo.com  Wed Jun  1 07:22:47 2016
From: whareg12 at yahoo.com (william)
Date: Wed, 1 Jun 2016 04:22:47 -0700 (MST)
Subject: [OpenSCAD] Errors when operating on an STL file generated by
	OpenSCAD
In-Reply-To: <1464484032988-17450.post@n5.nabble.com>
References: <1464427302932-17446.post@n5.nabble.com>
	<1464484032988-17450.post@n5.nabble.com>
Message-ID: <1464780167315-17499.post@n5.nabble.com>

Thanks all for the inputs.

I am not being careful when I say the 15 fobs stl file is generated by
OpenSCAD.  It is actually based on an original single-fob STL file given to
me (I think it might have been generated by Pro-Engineer as I was told).  I
used openscad to produce fifteen copies with different names engraved.

I thought the 15-fob STL file from the OpenSCAD should be "clean" and I
should be able to do anything with it.  Perhaps the original single-fob STL
file was not "clean" and I was lucky to produce the 15-fob STL file.  And
when I tried to manipulate the 15-fob STL file with OpenSCAD, I am not
allowed.

I have attached a link to a zip file which contains the original single-fob
STL file "leecostl(final).stl" and the openscad file that could create a
similar 15-fob stl file.

http://bit.ly/1O4NwDM

William



--
View this message in context: http://forum.openscad.org/Errors-when-operating-on-an-STL-file-generated-by-OpenSCAD-tp17446p17499.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From ben.suter at gmail.com  Wed Jun  1 07:28:30 2016
From: ben.suter at gmail.com (bsuter)
Date: Wed, 1 Jun 2016 04:28:30 -0700 (MST)
Subject: [OpenSCAD] STL without render?
Message-ID: <1464780510567-17500.post@n5.nabble.com>

Is it possible to save an STL file without going through the full render
step? 

It frustrates me that I can *see* the surface model using "preview", but
apparently can not simply save this as an STL file? 

Background: I am using OpenSCAD to generate surface models of neurons,
because the ability to programmatically define 3D surfaces from a set of
tapered cylinders closely matches the way in which neuronal geometry is
represented when derived from experimental measurements. My goal is to make
an STL file that I can use for 3D printing - I don't care about lighting,
viewpoints, textures, colors. Just the pure surface model. 

Currently the render takes 2.5 hours per neuron, severely limiting my
ability to process many neurons and making me doubt whether it's feasible
for me to assemble a single scene with ~50 neurons (as I had hoped). 

In any case, I'm very happy to have found OpenSCAD and have to say it's been
a great pleasure using it in my processing pipeline. Thank you, and keep up
the great work! 


PS: Currently my scene consists of a few thousand individual cylinders and
spheres, each with its own translation and rotation relative to the origin.
However, each of these segments naturally falls into a geometrical hierarchy
- so alternatively I could represent the scene as a hierarchy of rotations
and translations of each child segment relative to its parent. Is there
reason to believe that the hierarchical representation (with few root nodes)
would render faster? 

PPS: Here's the console output after my latest render - note this is on a
16-core Xeon / Windows 7 64-bit / 72 GB RAM / SSD / GTX 970 machine. Are
there any OpenSCAD settings I should modify to make better use of these
resources? 

Geometries in cache: 6514 
Geometry cache size in bytes: 60051248 
CGAL Polyhedrons in cache: 0 
CGAL cache size in bytes: 0 
Total rendering time: 2 hours, 19 minutes, 58 seconds 
Top level object is a 3D object: 
Simple: yes 
Vertices: 490328 
Halfedges: 1703918 
Edges: 851959 
Halffacets: 730078 
Facets: 365039 
Volumes: 3 
Rendering finished. 




--
View this message in context: http://forum.openscad.org/STL-without-render-tp17500.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From ben.suter at gmail.com  Wed Jun  1 07:30:39 2016
From: ben.suter at gmail.com (Ben Suter)
Date: Wed, 1 Jun 2016 13:30:39 +0200
Subject: [OpenSCAD] STL without render?
Message-ID: <CAMOM=9r70opGqK-=g7gz4+NfgZoPTivfZyJcWc_=2FjsF1p4DQ@mail.gmail.com>

Is it possible to save an STL file without going through the full render step?

It frustrates me that I can *see* the surface model using "preview",
but apparently can not simply save this as an STL file?

Background: I am using OpenSCAD to generate surface models of neurons,
because the ability to programmatically define 3D surfaces from a set
of tapered cylinders closely matches the way in which neuronal
geometry is represented when derived from experimental measurements.
My goal is to make an STL file that I can use for 3D printing - I
don't care about lighting, viewpoints, textures, colors. Just the pure
surface model.

Currently the render takes 2.5 hours per neuron, severely limiting my
ability to process many neurons and making me doubt whether it's
feasible for me to assemble a single scene with ~50 neurons (as I had
hoped).

In any case, I'm very happy to have found OpenSCAD and have to say
it's been a great pleasure using it in my processing pipeline. Thank
you, and please keep up the great work!


PS: Currently my scene consists of a few thousand individual cylinders
and spheres, each with its own translation and rotation relative to
the origin. However, each of these segments naturally falls into a
geometrical hierarchy - so alternatively I could represent the scene
as a hierarchy of rotations and translations of each child segment
relative to its parent. Is there reason to believe that the
hierarchical representation (with few root nodes) would render faster?

PPS: Here's the console output after my latest render - note this is
on a 16-core Xeon / Windows 7 64-bit / 72 GB RAM / SSD / GTX 970
machine. Are there any OpenSCAD settings I should modify to make
better use of these resources?

Geometries in cache: 6514
Geometry cache size in bytes: 60051248
CGAL Polyhedrons in cache: 0
CGAL cache size in bytes: 0
Total rendering time: 2 hours, 19 minutes, 58 seconds
Top level object is a 3D object:
Simple: yes
Vertices: 490328
Halfedges: 1703918
Edges: 851959
Halffacets: 730078
Facets: 365039
Volumes: 3
Rendering finished.


From whareg12 at yahoo.com  Wed Jun  1 07:31:34 2016
From: whareg12 at yahoo.com (william)
Date: Wed, 1 Jun 2016 04:31:34 -0700 (MST)
Subject: [OpenSCAD] Negative Zero (-0)
Message-ID: <1464780694536-17502.post@n5.nabble.com>

I know it is perhaps a bit pedantic but I report it anyway just to see if it
is just an issue with my understanding. 

I tried to produce the -0 result as described in the documentation.  My
attempt was:

<http://forum.openscad.org/file/n17502/20160601_19.jpg> 

Should the last two echo results be "-0" instead of "0".  

William



--
View this message in context: http://forum.openscad.org/Negative-Zero-0-tp17502.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Wed Jun  1 07:36:48 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 1 Jun 2016 12:36:48 +0100
Subject: [OpenSCAD] STL without render?
In-Reply-To: <CAMOM=9r70opGqK-=g7gz4+NfgZoPTivfZyJcWc_=2FjsF1p4DQ@mail.gmail.com>
References: <CAMOM=9r70opGqK-=g7gz4+NfgZoPTivfZyJcWc_=2FjsF1p4DQ@mail.gmail.com>
Message-ID: <CAEEmnrMRHAm0DSnt376Va2Y2hTVEwo=C3ziPWtN+6g47=y2k+A@mail.gmail.com>

No you can only save an image from the preview. The geometry hasn't been
calculated at the point, just a picture of it using graphic rendering
tricks.

On 1 June 2016 at 12:30, Ben Suter <ben.suter at gmail.com> wrote:

> Is it possible to save an STL file without going through the full render
> step?
>
> It frustrates me that I can *see* the surface model using "preview",
> but apparently can not simply save this as an STL file?
>
> Background: I am using OpenSCAD to generate surface models of neurons,
> because the ability to programmatically define 3D surfaces from a set
> of tapered cylinders closely matches the way in which neuronal
> geometry is represented when derived from experimental measurements.
> My goal is to make an STL file that I can use for 3D printing - I
> don't care about lighting, viewpoints, textures, colors. Just the pure
> surface model.
>
> Currently the render takes 2.5 hours per neuron, severely limiting my
> ability to process many neurons and making me doubt whether it's
> feasible for me to assemble a single scene with ~50 neurons (as I had
> hoped).
>
> In any case, I'm very happy to have found OpenSCAD and have to say
> it's been a great pleasure using it in my processing pipeline. Thank
> you, and please keep up the great work!
>
>
> PS: Currently my scene consists of a few thousand individual cylinders
> and spheres, each with its own translation and rotation relative to
> the origin. However, each of these segments naturally falls into a
> geometrical hierarchy - so alternatively I could represent the scene
> as a hierarchy of rotations and translations of each child segment
> relative to its parent. Is there reason to believe that the
> hierarchical representation (with few root nodes) would render faster?
>
> PPS: Here's the console output after my latest render - note this is
> on a 16-core Xeon / Windows 7 64-bit / 72 GB RAM / SSD / GTX 970
> machine. Are there any OpenSCAD settings I should modify to make
> better use of these resources?
>
> Geometries in cache: 6514
> Geometry cache size in bytes: 60051248
> CGAL Polyhedrons in cache: 0
> CGAL cache size in bytes: 0
> Total rendering time: 2 hours, 19 minutes, 58 seconds
> Top level object is a 3D object:
> Simple: yes
> Vertices: 490328
> Halfedges: 1703918
> Edges: 851959
> Halffacets: 730078
> Facets: 365039
> Volumes: 3
> Rendering finished.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160601/ec4f4c3e/attachment.html>

From rl.ward at bigpond.com  Wed Jun  1 08:29:19 2016
From: rl.ward at bigpond.com (Rob Ward)
Date: Wed, 1 Jun 2016 22:29:19 +1000
Subject: [OpenSCAD] STL without render?
In-Reply-To: <CAMOM=9r70opGqK-=g7gz4+NfgZoPTivfZyJcWc_=2FjsF1p4DQ@mail.gmail.com>
References: <CAMOM=9r70opGqK-=g7gz4+NfgZoPTivfZyJcWc_=2FjsF1p4DQ@mail.gmail.com>
Message-ID: <574ED51F.3020306@bigpond.com>

I like the idea of modeling cellular activity or constructions. OpenSCAD 
lends itself really well to visualizing these things, but 
computationally we are still limited compared to the biological 
capacity. I think a previous thread discussing narrowing bifurcating 
cylinders with smooth transitions, similar to what we could expect going 
from arteries to capillaries and back to veins, was running into a 
similar exponential growth in the computational challenge. It reminded 
me though that as every cell reproduces, it essentially spawns another 
two computational units in the nucleus of those new cells (The answer to 
the N squared problem?).  The programs in the DNA are applying their 
rules in the new environment for each new cell.  I can't see us 
surpassing this system too quickly with our silicon models, but I admire 
the efforts of people such as Ben who are investigating these areas.
Rob

On 01/06/16 21:30, Ben Suter wrote:
> Is it possible to save an STL file without going through the full render step?
>
> It frustrates me that I can *see* the surface model using "preview",
> but apparently can not simply save this as an STL file?
>
> Background: I am using OpenSCAD to generate surface models of neurons,
> because the ability to programmatically define 3D surfaces from a set
> of tapered cylinders closely matches the way in which neuronal
> geometry is represented when derived from experimental measurements.
> My goal is to make an STL file that I can use for 3D printing - I
> don't care about lighting, viewpoints, textures, colors. Just the pure
> surface model.
>
> Currently the render takes 2.5 hours per neuron, severely limiting my
> ability to process many neurons and making me doubt whether it's
> feasible for me to assemble a single scene with ~50 neurons (as I had
> hoped).
>
> In any case, I'm very happy to have found OpenSCAD and have to say
> it's been a great pleasure using it in my processing pipeline. Thank
> you, and please keep up the great work!
>
>
> PS: Currently my scene consists of a few thousand individual cylinders
> and spheres, each with its own translation and rotation relative to
> the origin. However, each of these segments naturally falls into a
> geometrical hierarchy - so alternatively I could represent the scene
> as a hierarchy of rotations and translations of each child segment
> relative to its parent. Is there reason to believe that the
> hierarchical representation (with few root nodes) would render faster?
>
> PPS: Here's the console output after my latest render - note this is
> on a 16-core Xeon / Windows 7 64-bit / 72 GB RAM / SSD / GTX 970
> machine. Are there any OpenSCAD settings I should modify to make
> better use of these resources?
>
> Geometries in cache: 6514
> Geometry cache size in bytes: 60051248
> CGAL Polyhedrons in cache: 0
> CGAL cache size in bytes: 0
> Total rendering time: 2 hours, 19 minutes, 58 seconds
> Top level object is a 3D object:
> Simple: yes
> Vertices: 490328
> Halfedges: 1703918
> Edges: 851959
> Halffacets: 730078
> Facets: 365039
> Volumes: 3
> Rendering finished.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>


From ben.suter at gmail.com  Wed Jun  1 09:27:41 2016
From: ben.suter at gmail.com (bsuter)
Date: Wed, 1 Jun 2016 06:27:41 -0700 (MST)
Subject: [OpenSCAD] STL without render?
In-Reply-To: <CAEEmnrMRHAm0DSnt376Va2Y2hTVEwo=C3ziPWtN+6g47=y2k+A@mail.gmail.com>
References: <CAMOM=9r70opGqK-=g7gz4+NfgZoPTivfZyJcWc_=2FjsF1p4DQ@mail.gmail.com>
	<CAEEmnrMRHAm0DSnt376Va2Y2hTVEwo=C3ziPWtN+6g47=y2k+A@mail.gmail.com>
Message-ID: <1464787661865-17506.post@n5.nabble.com>

Thank you both for your feedback and input!


nophead wrote
> No you can only save an image from the preview. The geometry hasn't been
> calculated at the point, just a picture of it using graphic rendering
> tricks.

Aha, so the GPU did all the hard work of tessellating, etc. but we can't
"recapture" that? Interesting how fast the GPU preview works (< 1 sec)
compared to how long the render takes (2.3 hours).

Three questions:

1. Are there any other tools like OpenSCAD that I could try, that also allow
declarative description of 3D surfaces using cylinder and sphere primitives
together with geometric transformations? Maybe tools that use the GPU or
multiple cores for the "render" step?

2. I'd very much appreciate any tips or suggestions for alternatives: I
don't need lighting, color, textures or such, I just want to describe the
geometry using tapered cylinders and spheres, and then have the software
convert this to a surface model (e.g. tessellate) suitable for 3D printing
(e.g. STL, OBJ, VRML).

3. Sticking with OpenSCAD, is it better to have a "flat" or "hierarchical"
scene graph?

bsuter wrote
>> PS: Currently my scene consists of a few thousand individual cylinders
>> and spheres, each with its own translation and rotation relative to
>> the origin. However, each of these segments naturally falls into a
>> geometrical hierarchy - so alternatively I could represent the scene
>> as a hierarchy of rotations and translations of each child segment
>> relative to its parent. Is there reason to believe that the
>> hierarchical representation (with few root nodes) would render faster?





--
View this message in context: http://forum.openscad.org/STL-without-render-tp17503p17506.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From ben.suter at gmail.com  Wed Jun  1 09:30:57 2016
From: ben.suter at gmail.com (Ben Suter)
Date: Wed, 1 Jun 2016 15:30:57 +0200
Subject: [OpenSCAD] STL without render?
In-Reply-To: <CAMOM=9r70opGqK-=g7gz4+NfgZoPTivfZyJcWc_=2FjsF1p4DQ@mail.gmail.com>
References: <CAMOM=9r70opGqK-=g7gz4+NfgZoPTivfZyJcWc_=2FjsF1p4DQ@mail.gmail.com>
Message-ID: <CAMOM=9rb7hx2ZLpwicVJrEJJVem6kO1WJ2AiDA_6XN3LhVFxBw@mail.gmail.com>

Thank you both for your feedback and input!

<quote author="nophead">
No you can only save an image from the preview. The geometry hasn't been
calculated at the point, just a picture of it using graphic rendering
tricks.
</quote>

Aha, so the GPU did all the hard work of tessellating, etc. but we
can't "recapture" that? Interesting how fast the GPU preview works (<
1 sec) compared to how long the render takes (2.3 hours).

Four questions:

1. Are there any other tools like OpenSCAD that I could try, that also
allow declarative description of 3D surfaces using cylinder and sphere
primitives together with geometric transformations? Maybe tools that
use the GPU or multiple cores for the "render" step?

2. I'd very much appreciate any tips or suggestions for alternatives:
I don't need lighting, color, textures or such, I just want to
describe the geometry using tapered cylinders and spheres, and then
have the software convert this to a surface model (e.g. tessellate)
suitable for 3D printing (e.g. STL, OBJ, VRML).

3. Sticking with OpenSCAD, is it better to have a "flat" or
"hierarchical" scene graph?
<quote author="bsuter">
> PS: Currently my scene consists of a few thousand individual cylinders
> and spheres, each with its own translation and rotation relative to
> the origin. However, each of these segments naturally falls into a
> geometrical hierarchy - so alternatively I could represent the scene
> as a hierarchy of rotations and translations of each child segment
> relative to its parent. Is there reason to believe that the
> hierarchical representation (with few root nodes) would render faster?
</quote>

4. I subscribed to this email list, but am not getting replies to this
thread in my inbox. On the web interface (Nabble) I can see replies,
but when I post a reply there myself, I get a message indicating that
my reply "was not yet accepted to the mailing list". Any advice on how
to improve this?


On Wed, Jun 1, 2016 at 1:30 PM, Ben Suter <ben.suter at gmail.com> wrote:
> Is it possible to save an STL file without going through the full render step?
>
> It frustrates me that I can *see* the surface model using "preview",
> but apparently can not simply save this as an STL file?
>
> Background: I am using OpenSCAD to generate surface models of neurons,
> because the ability to programmatically define 3D surfaces from a set
> of tapered cylinders closely matches the way in which neuronal
> geometry is represented when derived from experimental measurements.
> My goal is to make an STL file that I can use for 3D printing - I
> don't care about lighting, viewpoints, textures, colors. Just the pure
> surface model.
>
> Currently the render takes 2.5 hours per neuron, severely limiting my
> ability to process many neurons and making me doubt whether it's
> feasible for me to assemble a single scene with ~50 neurons (as I had
> hoped).
>
> In any case, I'm very happy to have found OpenSCAD and have to say
> it's been a great pleasure using it in my processing pipeline. Thank
> you, and please keep up the great work!
>
>
> PS: Currently my scene consists of a few thousand individual cylinders
> and spheres, each with its own translation and rotation relative to
> the origin. However, each of these segments naturally falls into a
> geometrical hierarchy - so alternatively I could represent the scene
> as a hierarchy of rotations and translations of each child segment
> relative to its parent. Is there reason to believe that the
> hierarchical representation (with few root nodes) would render faster?
>
> PPS: Here's the console output after my latest render - note this is
> on a 16-core Xeon / Windows 7 64-bit / 72 GB RAM / SSD / GTX 970
> machine. Are there any OpenSCAD settings I should modify to make
> better use of these resources?
>
> Geometries in cache: 6514
> Geometry cache size in bytes: 60051248
> CGAL Polyhedrons in cache: 0
> CGAL cache size in bytes: 0
> Total rendering time: 2 hours, 19 minutes, 58 seconds
> Top level object is a 3D object:
> Simple: yes
> Vertices: 490328
> Halfedges: 1703918
> Edges: 851959
> Halffacets: 730078
> Facets: 365039
> Volumes: 3
> Rendering finished.


From nop.head at gmail.com  Wed Jun  1 10:04:27 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 1 Jun 2016 15:04:27 +0100
Subject: [OpenSCAD] STL without render?
In-Reply-To: <CAMOM=9rb7hx2ZLpwicVJrEJJVem6kO1WJ2AiDA_6XN3LhVFxBw@mail.gmail.com>
References: <CAMOM=9r70opGqK-=g7gz4+NfgZoPTivfZyJcWc_=2FjsF1p4DQ@mail.gmail.com>
	<CAMOM=9rb7hx2ZLpwicVJrEJJVem6kO1WJ2AiDA_6XN3LhVFxBw@mail.gmail.com>
Message-ID: <CAEEmnrOfWeAXnwSg=eDjLZ_S=dagHAK855CGE94gdXte1bcckg@mail.gmail.com>

I am seeing all your messages twice on the mailing list so they are getting
there. When you post on the forum it always says it has not been accepted
to start with.

The preview works by rendering the primitive objects into the Z buffer and
using that to work out which bits are visible. For example when you union
two objects it just draws them both separately. It never actually works out
a 3D representation of the union, just a 2D picture of what it looks like
from one angle.

When you do F6 CGAL is used to calculate the 3D solids very accurately and
is very slow because it uses rational numbers instead of floating point.

Others maybe able to suggest faster alternatives. It is fast enough for the
designs I do so I haven't looked elsewhere.

On 1 June 2016 at 14:30, Ben Suter <ben.suter at gmail.com> wrote:

> Thank you both for your feedback and input!
>
> <quote author="nophead">
> No you can only save an image from the preview. The geometry hasn't been
> calculated at the point, just a picture of it using graphic rendering
> tricks.
> </quote>
>
> Aha, so the GPU did all the hard work of tessellating, etc. but we
> can't "recapture" that? Interesting how fast the GPU preview works (<
> 1 sec) compared to how long the render takes (2.3 hours).
>
> Four questions:
>
> 1. Are there any other tools like OpenSCAD that I could try, that also
> allow declarative description of 3D surfaces using cylinder and sphere
> primitives together with geometric transformations? Maybe tools that
> use the GPU or multiple cores for the "render" step?
>
> 2. I'd very much appreciate any tips or suggestions for alternatives:
> I don't need lighting, color, textures or such, I just want to
> describe the geometry using tapered cylinders and spheres, and then
> have the software convert this to a surface model (e.g. tessellate)
> suitable for 3D printing (e.g. STL, OBJ, VRML).
>
> 3. Sticking with OpenSCAD, is it better to have a "flat" or
> "hierarchical" scene graph?
> <quote author="bsuter">
> > PS: Currently my scene consists of a few thousand individual cylinders
> > and spheres, each with its own translation and rotation relative to
> > the origin. However, each of these segments naturally falls into a
> > geometrical hierarchy - so alternatively I could represent the scene
> > as a hierarchy of rotations and translations of each child segment
> > relative to its parent. Is there reason to believe that the
> > hierarchical representation (with few root nodes) would render faster?
> </quote>
>
> 4. I subscribed to this email list, but am not getting replies to this
> thread in my inbox. On the web interface (Nabble) I can see replies,
> but when I post a reply there myself, I get a message indicating that
> my reply "was not yet accepted to the mailing list". Any advice on how
> to improve this?
>
>
> On Wed, Jun 1, 2016 at 1:30 PM, Ben Suter <ben.suter at gmail.com> wrote:
> > Is it possible to save an STL file without going through the full render
> step?
> >
> > It frustrates me that I can *see* the surface model using "preview",
> > but apparently can not simply save this as an STL file?
> >
> > Background: I am using OpenSCAD to generate surface models of neurons,
> > because the ability to programmatically define 3D surfaces from a set
> > of tapered cylinders closely matches the way in which neuronal
> > geometry is represented when derived from experimental measurements.
> > My goal is to make an STL file that I can use for 3D printing - I
> > don't care about lighting, viewpoints, textures, colors. Just the pure
> > surface model.
> >
> > Currently the render takes 2.5 hours per neuron, severely limiting my
> > ability to process many neurons and making me doubt whether it's
> > feasible for me to assemble a single scene with ~50 neurons (as I had
> > hoped).
> >
> > In any case, I'm very happy to have found OpenSCAD and have to say
> > it's been a great pleasure using it in my processing pipeline. Thank
> > you, and please keep up the great work!
> >
> >
> > PS: Currently my scene consists of a few thousand individual cylinders
> > and spheres, each with its own translation and rotation relative to
> > the origin. However, each of these segments naturally falls into a
> > geometrical hierarchy - so alternatively I could represent the scene
> > as a hierarchy of rotations and translations of each child segment
> > relative to its parent. Is there reason to believe that the
> > hierarchical representation (with few root nodes) would render faster?
> >
> > PPS: Here's the console output after my latest render - note this is
> > on a 16-core Xeon / Windows 7 64-bit / 72 GB RAM / SSD / GTX 970
> > machine. Are there any OpenSCAD settings I should modify to make
> > better use of these resources?
> >
> > Geometries in cache: 6514
> > Geometry cache size in bytes: 60051248
> > CGAL Polyhedrons in cache: 0
> > CGAL cache size in bytes: 0
> > Total rendering time: 2 hours, 19 minutes, 58 seconds
> > Top level object is a 3D object:
> > Simple: yes
> > Vertices: 490328
> > Halfedges: 1703918
> > Edges: 851959
> > Halffacets: 730078
> > Facets: 365039
> > Volumes: 3
> > Rendering finished.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160601/a07483b7/attachment.html>

From marius at kintel.net  Wed Jun  1 12:42:40 2016
From: marius at kintel.net (Marius Kintel)
Date: Wed, 1 Jun 2016 12:42:40 -0400
Subject: [OpenSCAD] import - no warning on failure
In-Reply-To: <CAGV6i+NYJSO9vPhkeKVizLsf4rQtggbFOYY9SXOXG_hTiWQN5A@mail.gmail.com>
References: <1464708517228-17487.post@n5.nabble.com>
	<CAGV6i+NYJSO9vPhkeKVizLsf4rQtggbFOYY9SXOXG_hTiWQN5A@mail.gmail.com>
Message-ID: <7586DEE6-B02B-4FD1-BCD4-1C1707C6D3CF@kintel.net>

> On May 31, 2016, at 11:32 AM, doug moen <doug at moens.org> wrote:
> 
> This is a bug, it causes pain to lots of people. I think the problem is that we cache the result of a failed import. I think the fix is to not cache anything if the import fails.
> 
Failures can take significant time, so I think we should cache failures, but change the return value from just shapes to shapes + messages instead of messages being side effects to the console.

 -Marius



From rudolf at parkinbot.com  Wed Jun  1 13:22:37 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Wed, 1 Jun 2016 10:22:37 -0700 (MST)
Subject: [OpenSCAD] STL without render?
In-Reply-To: <CAMOM=9rb7hx2ZLpwicVJrEJJVem6kO1WJ2AiDA_6XN3LhVFxBw@mail.gmail.com>
References: <CAMOM=9r70opGqK-=g7gz4+NfgZoPTivfZyJcWc_=2FjsF1p4DQ@mail.gmail.com>
	<CAMOM=9rb7hx2ZLpwicVJrEJJVem6kO1WJ2AiDA_6XN3LhVFxBw@mail.gmail.com>
Message-ID: <1464801757860-17510.post@n5.nabble.com>

Can you share some image that shows your model in detail?

In OpenSCAD there are fast and slow alternatives to produce a design. If you
stack too many primitives on top of each other, use boolean operations over
too much detail (number of vertices) or special high-level operators like
minkowski() and hull(), rendering gets slow. And it gets even slower, when
you try to clone complex shapes into more complex structures like grids.

There are also ways to create complex shapes by doing most of triagulation
work on your own. So it depends much on the programming approach you use and
of course on the complexity of the design itself.



--
View this message in context: http://forum.openscad.org/STL-without-render-tp17503p17510.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Wed Jun  1 15:16:55 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Wed, 1 Jun 2016 21:16:55 +0200
Subject: [OpenSCAD] STL without render?
In-Reply-To: <CAMOM=9rb7hx2ZLpwicVJrEJJVem6kO1WJ2AiDA_6XN3LhVFxBw@mail.gmail.com>
References: <CAMOM=9r70opGqK-=g7gz4+NfgZoPTivfZyJcWc_=2FjsF1p4DQ@mail.gmail.com>
	<CAMOM=9rb7hx2ZLpwicVJrEJJVem6kO1WJ2AiDA_6XN3LhVFxBw@mail.gmail.com>
Message-ID: <574F34A7.2050108@arnholm.org>

On 01. juni 2016 15:30, Ben Suter wrote:
> 1. Are there any other tools like OpenSCAD that I could try, that also
> allow declarative description of 3D surfaces using cylinder and sphere
> primitives together with geometric transformations? Maybe tools that
> use the GPU or multiple cores for the "render" step?

You could try http://arnholm.org/angelscript-csg-ide/

Be warned that the current public version relies on OpenSCAD to do the 
booleans, so you don't gain anything in speed that way.

I do have an unreleased test version that does not use OpenSCAD for 
booleans and that is much faster. But it isn't released at this time.

Carsten Arnholm





From doug at moens.org  Wed Jun  1 16:07:56 2016
From: doug at moens.org (doug moen)
Date: Wed, 1 Jun 2016 16:07:56 -0400
Subject: [OpenSCAD] feedback on "C-style for"
Message-ID: <CAGV6i+MggHxsW4_6Cp0=cjZ7NR+1L6WpGg2e7syfGA4aQEo6Mg@mail.gmail.com>

I've been playing with "C-style for" (which is an experimental feature in
the dev build).

It gets a bit cumbersome for complex examples with multiple loop variables,
so I'd like to suggest an improvement.

What I'd like is a parallel, pattern matching assignment statement. For
example,

[x,y,z] = point;

requires 'point' to be a list with exactly 3 elements (otherwise an error
is reported). The 3 elements are assigned to x, y and z. This would be
really handy for updating multiple loop variables in the update step.

First example is the fibonacci sequence.

function fibonacci(n) =
[
  for (a=0, b=1; b <= n; t=a, a=b, b=a+t) b
];
echo(fibonacci(10)); // [1, 1, 2, 3, 5, 8]

I'd like to get rid of the temporary variable 't', which I need because I
can't do a parallel assignment of a and b in the update step.

function fibonacci2(n) =
[
  for (a=0, b=1; b <= n; [a,b]=[b, b=a+b]) b
];

Second example is prime factors.

function prime_factors(n) =
[
  for (n=n, f=2;
       n>1;
       n1 = n%f==0 ? n/f : n,
       f = n%f==0 ? f : f+1,
       n = n1)
    if (n%f==0) f
];
echo(prime_factors(20)); // [2,2,5]

There are two things I'd like to fix here: the extra variable n1, and the
need to duplicate the 'n%f==0 ? ... : ...' logic for updating n and f.

function prime_factors2(n) =
[
  for (n=n, f=2;
       n>1;
       [n,f] = n%f==0 ? [n/f,f] : [n,f+1])
    if (n%f==0) f
];

As you can see, with this change the code becomes a lot shorter.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160601/b0261ae9/attachment.html>

From who_doctor at hotmail.com  Wed Jun  1 16:15:39 2016
From: who_doctor at hotmail.com (FourthDr)
Date: Wed, 1 Jun 2016 13:15:39 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1464735505386-17498.post@n5.nabble.com>
References: <CAEEmnrMRKqEP1MAwH-DwBC95EDUKw=hP-Dq8V+Ln1euBaF_+aA@mail.gmail.com>
	<CAEEmnrPqtz57ghRfTyDpLMHNeVSG3_=M7nVnSx90qJA=YgiqvQ@mail.gmail.com>
	<1464518026773-17458.post@n5.nabble.com>
	<1464639469729-17475.post@n5.nabble.com>
	<1464644772356-17476.post@n5.nabble.com>
	<CAEEmnrPW_u9Jez1S9aj8wcZzC7pcdxA83E3Q1BTcwM8hBLYvgg@mail.gmail.com>
	<1464657121377-17479.post@n5.nabble.com>
	<1464674541947-17481.post@n5.nabble.com>
	<1464721162015-17491.post@n5.nabble.com>
	<1464735505386-17498.post@n5.nabble.com>
Message-ID: <1464812139424-17513.post@n5.nabble.com>

Hi: MichaelAtOz:

Unfortunately I don't know anyone with a larger printer. For hire places
charge a fortune for "making". I can't afford to pay someone $100/hour to do
nothing but click File>open, then File>Print. Anyone can do that. Wish I got
paid that much for something so simple. On top of that most places also want
the file ready to go to their specs so they don't have to do any work at
all. So not worth it. Guess I'll have to work on this for a little longer.

There is one other thing I have not been able to figure out. How would I
change the puzzle cut from the default "T" shape to a round cutout? Like a
ball and socket shape. I don't see where in the code that does that.



--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17513.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Wed Jun  1 16:27:56 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Wed, 1 Jun 2016 13:27:56 -0700 (MST)
Subject: [OpenSCAD] feedback on "C-style for"
In-Reply-To: <CAGV6i+MggHxsW4_6Cp0=cjZ7NR+1L6WpGg2e7syfGA4aQEo6Mg@mail.gmail.com>
References: <CAGV6i+MggHxsW4_6Cp0=cjZ7NR+1L6WpGg2e7syfGA4aQEo6Mg@mail.gmail.com>
Message-ID: <1464812876420-17514.post@n5.nabble.com>

I agree this allows to more concise code. But, why would only mutable
variable assignment have such a distinct privilege?



--
View this message in context: http://forum.openscad.org/feedback-on-C-style-for-tp17512p17514.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Wed Jun  1 16:38:02 2016
From: doug at moens.org (doug moen)
Date: Wed, 1 Jun 2016 16:38:02 -0400
Subject: [OpenSCAD] feedback on "C-style for"
In-Reply-To: <1464812876420-17514.post@n5.nabble.com>
References: <CAGV6i+MggHxsW4_6Cp0=cjZ7NR+1L6WpGg2e7syfGA4aQEo6Mg@mail.gmail.com>
	<1464812876420-17514.post@n5.nabble.com>
Message-ID: <CAGV6i+M2ntBMaJTA_73yBNVtiV6p5vJBhSciXk85tx08Hw6xQw@mail.gmail.com>

Pattern matching assignment is useful everywhere. (But my post was about "C
style for", and I didn't want to digress.)

The other place I would find it particularly useful (in my code, at least)
is for functions that take [x,y,z] points as arguments. Eg,

function f([x,y,z]) = ...;

f([0, 10, 10])



On 1 June 2016 at 16:27, Ronaldo <rcmpersiano at gmail.com> wrote:

> I agree this allows to more concise code. But, why would only mutable
> variable assignment have such a distinct privilege?
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/feedback-on-C-style-for-tp17512p17514.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160601/ef043c8e/attachment.html>

From wv99999 at gmail.com  Wed Jun  1 20:33:37 2016
From: wv99999 at gmail.com (wolf)
Date: Wed, 1 Jun 2016 17:33:37 -0700 (MST)
Subject: [OpenSCAD] feedback on "C-style for"
In-Reply-To: <CAGV6i+M2ntBMaJTA_73yBNVtiV6p5vJBhSciXk85tx08Hw6xQw@mail.gmail.com>
References: <CAGV6i+MggHxsW4_6Cp0=cjZ7NR+1L6WpGg2e7syfGA4aQEo6Mg@mail.gmail.com>
	<1464812876420-17514.post@n5.nabble.com>
	<CAGV6i+M2ntBMaJTA_73yBNVtiV6p5vJBhSciXk85tx08Hw6xQw@mail.gmail.com>
Message-ID: <1464827617732-17516.post@n5.nabble.com>

"Bei dem ist 'ne Schraube locker" (literally "He has a loose screw", more
idiomatic "NUTS") and "Daar l? 'n slang in die gras" (literally" "There
hides a snake in the grass", more idiomatic "that's very buggy code") were
my first impressions when I read doug.moen's proposal.

But let me quote someone else: <github.com/doug-moen/openscad2>

"OpenSCAD2 is a backward compatible redesign of the OpenSCAD language. The
goals are:

    to make OpenSCAD easier to use;
    to make OpenSCAD more expressive and powerful, not by adding complexity
and piling on features, but by making the core language simpler and more
uniform, and by removing restrictions on how language elements can be
composed together to create larger components."

I am not going to dig up here what OpenSCAD developers have written on this
forum about "C-style programming". Simply put, for non-C programmers,
C-style programming is very difficult to read. "barely readable" it was
called in the tutorial I used to learn OpenSCAD. Rather consider how many
new users have problems with conditionals, or with polygon(), or are
actually using list comprehension. 
On the latter, from what I can gather from this forum, only its creator
actually uses it, for everyone else it's too complicated. Or why would we
hear complaints about long render times? Look at the code samples provided,
and it soon becomes obvious that long render times arise from people
stuffing the renderer with work that is not truly needed for the creation of
the shape they are after. If they had but understood list comprehension, and
how lists can eliminate unused corners and faces before CGAL gets hold of
them, they could have saved themselves a lot of frustration . . .

If you live in a country where only a single language is spoken, your
thinking gets limited by the capabilities of that language. That's why
translating the initial quotes is so unsatisfactory and why they inevitably
loose their wittiness in translation. As doug.moen has pointed out in
another thread
(http://forum.openscad.org/Polygon-using-relative-points-rather-than-absolute-td17414.html
and https://github.com/openscad/openscad/wiki/Mutable-Variables), functional
programming is actually a dead end road, imperative-type programming had to
be introduced to achieve universality.

And that's why I object to "C-style for". Proper coding style should be
modelled as close to English language semantics as is possible. Conciseness
should not be an objective - easy learning should. And that means 
1. rewrite all manuals and replace the word "variable" with "constant". Have
that courage, and admit to yourself that when values are assigned at compile
time they become constants - calling them variables is fudging/evading the
issue.
2. introduce genuine variables (==mutable constants), as pointed out in
<https://github.com/openscad/openscad/wiki/Mutable-Variables>
3. forget about "C-style programming" as its use implies the OpenSCAD user
is already familiar with C, before he/she can consider learning OpenSCAD.
"C-style" constructs are admittedly easy for C-programmers, but mostly are
"barely readable" for people not familiar with C.
4. The for loop should take the form
for i:=1 to </endval/> step </stepval/>
because that is English, and thus accessible to everyone capable of reading
the OpenSCAD manual.


Consider that functional languages came about as a response to the ease with
which the (mis)use of pointers in C can generate buggy code. List
Comprehension (array or *struct in C) is just one way to get around the
potential trouble lurking here. Resist the objections raised by functional
language zealots, and keep the OpenSCAD language simple and readable,
without requiring a background in C. Introduce genuine (==mutable)
variables.

OpenSCAD2 is the way forward, not "C-style". Treat a function as a pointer
to a value, or a list of values. Whether these values were obtained at
compile time or at run time is important only the the developer, it is
immaterial to the user.




--
View this message in context: http://forum.openscad.org/feedback-on-C-style-for-tp17512p17516.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Wed Jun  1 21:51:31 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Wed, 1 Jun 2016 18:51:31 -0700 (MST)
Subject: [OpenSCAD] feedback on "C-style for"
In-Reply-To: <1464827617732-17516.post@n5.nabble.com>
References: <CAGV6i+MggHxsW4_6Cp0=cjZ7NR+1L6WpGg2e7syfGA4aQEo6Mg@mail.gmail.com>
	<1464812876420-17514.post@n5.nabble.com>
	<CAGV6i+M2ntBMaJTA_73yBNVtiV6p5vJBhSciXk85tx08Hw6xQw@mail.gmail.com>
	<1464827617732-17516.post@n5.nabble.com>
Message-ID: <1464832291069-17517.post@n5.nabble.com>

wolf wrote
> "Bei dem ist 'ne Schraube locker" (literally "He has a loose screw", more
> idiomatic "NUTS") and "Daar l? 'n slang in die gras" (literally" "There
> hides a snake in the grass", more idiomatic "that's very buggy code") were
> my first impressions when I read doug.moen's proposal.
> 
> But let me quote someone else: &lt;github.com/doug-moen/openscad2&gt;
> 
> "OpenSCAD2 is a backward compatible redesign of the OpenSCAD language. The
> goals are:
> 
>     to make OpenSCAD easier to use;
>     to make OpenSCAD more expressive and powerful, not by adding
> complexity and piling on features, but by making the core language simpler
> and more uniform, and by removing restrictions on how language elements
> can be composed together to create larger components."

Well said.

> I am not going to dig up here what OpenSCAD developers have written on
> this forum about "C-style programming". Simply put, for non-C programmers,
> C-style programming is very difficult to read. "barely readable" it was
> called in the tutorial I used to learn OpenSCAD. Rather consider how many
> new users have problems with conditionals, or with polygon(), or are
> actually using list comprehension. 
> On the latter, from what I can gather from this forum, only its creator
> actually uses it, for everyone else it's too complicated. Or why would we
> hear complaints about long render times? Look at the code samples
> provided, and it soon becomes obvious that long render times arise from
> people stuffing the renderer with work that is not truly needed for the
> creation of the shape they are after. If they had but understood list
> comprehension, and how lists can eliminate unused corners and faces before
> CGAL gets hold of them, they could have saved themselves a lot of
> frustration . . .
> 
> If you live in a country where only a single language is spoken, your
> thinking gets limited by the capabilities of that language. That's why
> translating the initial quotes is so unsatisfactory and why they
> inevitably loose their wittiness in translation. As doug.moen has pointed
> out in another thread
> (http://forum.openscad.org/Polygon-using-relative-points-rather-than-absolute-td17414.html
> and https://github.com/openscad/openscad/wiki/Mutable-Variables),
> functional programming is actually a dead end road, imperative-type
> programming had to be introduced to achieve universality.

I disagree here.

> And that's why I object to "C-style for". Proper coding style should be
> modelled as close to English language semantics as is possible.
> Conciseness should not be an objective - easy learning should.

+1

> And that means 
> 1. rewrite all manuals and replace the word "variable" with "constant".
> Have that courage, and admit to yourself that when values are assigned at
> compile time they become constants - calling them variables is
> fudging/evading the issue.

Worth considering. Really need to solve the overriding of 'identifiers'
(currently called variables) set in an include<> tho. Also fix command line
'-D var'.

> 2. introduce genuine variables (==mutable constants), as pointed out in
> &lt;https://github.com/openscad/openscad/wiki/Mutable-Variables&gt;

Still not for Frankenstein... also IMO "parallel, pattern matching
assignment statement" is just another head bolted on. I'm sure we all have
"gee, it would be nice to" have's, then suddenly the language explodes like
a multi-tool with everything open...
<http://forum.openscad.org/file/n17517/swiss-army-knife-1.jpg> 

> 3. forget about "C-style programming" as its use implies the OpenSCAD user
> is already familiar with C, before he/she can consider learning OpenSCAD.
> "C-style" constructs are admittedly easy for C-programmers, but mostly are
> "barely readable" for people not familiar with C.

Yes, keep OpenSCAD easy for beginners; while I'm an experienced coder and
can read most languages, I found the transition to OpenSCAD very easy and
hope it stays relatively uncomplicated for future newcomers.

> 4. The for loop should take the form
> for i:=1 to <
/
> endval
/
>> step <
/
> stepval
/
>>
> because that is English, and thus accessible to everyone capable of
> reading the OpenSCAD manual.

50/50

> Consider that functional languages came about as a response to the ease
> with which the (mis)use of pointers in C can generate buggy code. List
> Comprehension (array or *struct in C) is just one way to get around the
> potential trouble lurking here. Resist the objections raised by functional
> language zealots, and keep the OpenSCAD language simple and readable,
> without requiring a background in C. 

+1

> Introduce genuine (==mutable) variables.

-1

> OpenSCAD2 is the way forward, not "C-style". Treat a function as a pointer
> to a value, or a list of values. Whether these values were obtained at
> compile time or at run time is important only the the developer, it is
> immaterial to the user.





-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/feedback-on-C-style-for-tp17512p17517.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Wed Jun  1 23:27:11 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Wed, 1 Jun 2016 20:27:11 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1464812139424-17513.post@n5.nabble.com>
References: <CAEEmnrPqtz57ghRfTyDpLMHNeVSG3_=M7nVnSx90qJA=YgiqvQ@mail.gmail.com>
	<1464518026773-17458.post@n5.nabble.com>
	<1464639469729-17475.post@n5.nabble.com>
	<1464644772356-17476.post@n5.nabble.com>
	<CAEEmnrPW_u9Jez1S9aj8wcZzC7pcdxA83E3Q1BTcwM8hBLYvgg@mail.gmail.com>
	<1464657121377-17479.post@n5.nabble.com>
	<1464674541947-17481.post@n5.nabble.com>
	<1464721162015-17491.post@n5.nabble.com>
	<1464735505386-17498.post@n5.nabble.com>
	<1464812139424-17513.post@n5.nabble.com>
Message-ID: <1464838031957-17518.post@n5.nabble.com>

FourthDr wrote
> There is one other thing I have not been able to figure out. How would I
> change the puzzle cut from the default "T" shape to a round cutout? Like a
> ball and socket shape. I don't see where in the code that does that.

The T lock is shaped by the following lines of makePuzzleStamp() in the
puzzlecutlib.scad:

> translate([i,0,0])
>     cube ([(cutSize / 2) - kerf * 2, cutSize - kerf * 2,stampSize[2]],
> center = true);
> translate([i,cutSize / 2,0])
>     cube ([cutSize - kerf *  2,(cutSize / 2) - kerf * 2, stampSize[2]],
> center = true);

To get a ball socket substitute those lines by:

> translate([i,0,0]) ball_socket(cutSize, kerf, stampSize[2]);

and for a dovetail by:

> translate([i,0,0]) dovetail(cutSize, kerf, stampSize[2]);

where those modules should be defined as:

> module dovetail(cutSize, kerf, height) {
>     angle = 12;
>     offset = kerf*(1/2+tan(angle));
>     intersection(){
>         translate([-cutSize/2-offset, cutSize+kerf, -1])
>             rotate([0,0,-90+angle]) cube([cutSize*2, cutSize*2,
> height+2]);
>         scale([-1,1,1])
>             translate([-cutSize/2-offset, cutSize+kerf, -1])
>                 rotate([0,0,-90+angle]) cube([cutSize*2, cutSize*2,
> height+2]);
>         cube([2*(cutSize+kerf), 2*cutSize+kerf, 2*(height+1)], center =
> true);
>     }
> }
> 
> module ball_socket(cutSize, kerf, height){
>         cube ([(cutSize / 2) + kerf, cutSize - kerf * 2,height+2], center
> = true);
>     translate([0,cutSize/2,0])
>         cylinder(r=cutSize/2 + kerf/2, h = height+2, $fn=12, center =
> true);
> }

I guess dovetail is safer, stronger and easier to adjust.



--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17518.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From vector76 at gmail.com  Thu Jun  2 00:04:34 2016
From: vector76 at gmail.com (Jamie_K)
Date: Wed, 1 Jun 2016 21:04:34 -0700 (MST)
Subject: [OpenSCAD] feedback on "C-style for"
In-Reply-To: <1464832291069-17517.post@n5.nabble.com>
References: <CAGV6i+MggHxsW4_6Cp0=cjZ7NR+1L6WpGg2e7syfGA4aQEo6Mg@mail.gmail.com>
	<1464812876420-17514.post@n5.nabble.com>
	<CAGV6i+M2ntBMaJTA_73yBNVtiV6p5vJBhSciXk85tx08Hw6xQw@mail.gmail.com>
	<1464827617732-17516.post@n5.nabble.com>
	<1464832291069-17517.post@n5.nabble.com>
Message-ID: <1464840274818-17519.post@n5.nabble.com>

When it comes to mutable variables, it comes down to the deep question of
pure functional or not.  I disagree that pure functional is a dead-end road,
but the choice is a fork in the road where you need to decisively pick one
or the other.

If the answer is pure functional, then do{} introduces internal
inconsistency, and the "proper" (meaning internally coherent) way to support
mutation is via first-class functions, closures, and monads.  If OpenSCAD
does grow in this direction, then in a functional future looking /back/ at
do{}, it's going to be even more clumsy to retain coherence and work around
all the implications of backward compatibility and funky interactions.

I won't argue about whether functional or imperative is "better" or more
elegant, but I will argue that pure functional thinking is much more
/specialized/ than sequential style thinking.  I have heard it said that
functional programming is more like mathematics and less like programming,
and I would agree.  Yet I still believe that this mathematical style of
thinking is less common and less accessible to non-specialists, beginner or
not!  Anybody can bang out a bit of procedural code, but not everyone can
wrap their heads around closures, continuations, tail-recursion, or monads.

If the choice is to loosen the pure-functional requirement and forgo strict
referential transparency then I would /still/ suggest that do{} blocks are
not as good as if mutation were adopted as part of a more coherent
imperative language.




--
View this message in context: http://forum.openscad.org/feedback-on-C-style-for-tp17512p17519.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Thu Jun  2 00:17:27 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Wed, 1 Jun 2016 21:17:27 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1464812139424-17513.post@n5.nabble.com>
References: <CAEEmnrPqtz57ghRfTyDpLMHNeVSG3_=M7nVnSx90qJA=YgiqvQ@mail.gmail.com>
	<1464518026773-17458.post@n5.nabble.com>
	<1464639469729-17475.post@n5.nabble.com>
	<1464644772356-17476.post@n5.nabble.com>
	<CAEEmnrPW_u9Jez1S9aj8wcZzC7pcdxA83E3Q1BTcwM8hBLYvgg@mail.gmail.com>
	<1464657121377-17479.post@n5.nabble.com>
	<1464674541947-17481.post@n5.nabble.com>
	<1464721162015-17491.post@n5.nabble.com>
	<1464735505386-17498.post@n5.nabble.com>
	<1464812139424-17513.post@n5.nabble.com>
Message-ID: <1464841047699-17520.post@n5.nabble.com>

Well, I got the file manually repaired in Sketchup. It is now disgestible by
CGAL.
Cycl_XleftFrame-base_cut-repaired.stl
<http://forum.openscad.org/file/n17520/Cycl_XleftFrame-base_cut-repaired.stl>  

<http://forum.openscad.org/file/n17520/Cycl_XleftFrame.png> 

<http://forum.openscad.org/file/n17520/Cycl_XleftFrame2.png> 



--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17520.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Thu Jun  2 02:10:39 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Wed, 1 Jun 2016 23:10:39 -0700 (MST)
Subject: [OpenSCAD] feedback on "C-style for"
In-Reply-To: <1464840274818-17519.post@n5.nabble.com>
References: <CAGV6i+MggHxsW4_6Cp0=cjZ7NR+1L6WpGg2e7syfGA4aQEo6Mg@mail.gmail.com>
	<1464812876420-17514.post@n5.nabble.com>
	<CAGV6i+M2ntBMaJTA_73yBNVtiV6p5vJBhSciXk85tx08Hw6xQw@mail.gmail.com>
	<1464827617732-17516.post@n5.nabble.com>
	<1464832291069-17517.post@n5.nabble.com>
	<1464840274818-17519.post@n5.nabble.com>
Message-ID: <1464847839796-17521.post@n5.nabble.com>

@ Jamie K
I can't agree more.
Before OpenSCAD, I worked with Sketchup for almost two years. I think the
success of Sketchup relies on the elementary set of operators it provides.
Everybody is able to select an edge, extend a line, close a face, extrude a
rectangle. You don't need more than elementary geometry for that except... a
lot of manual work.

After using OpenSCAD for a little more than an year, my Sketchup
installation is outdated and unused. If you intend to do more than basic
cube and cylinder assembly in Sketchup without a enormous effort you will
have to find a plugin or write one yourself. But that means to write Ruby
code, deal with a enormous and confusing API and event oriented programming.
In short, you will have to divert a lot from your modelling focus.

What I found in OpenSCAD was the opposite. I am all the time concentrated in
my problem. And since geometric modelling is geometry, it is mathematics. In
the OpenSCAD world, again, if you only intend to assemble a few cubes and
cylinders, extrude a DXF, generate its stl file, you have support to do it.
But for me the main strength of OpenSCAD is to play with mathematical
objects. And in a mathematical framework.

I had not any previous experience with functional programming before. My
programming background was structured programming (anybody out there knows
what is that? :) ). I am still a Pascal programmer that tried reluctantly to
code in C and Ruby. But neither one fulfill my expectations. I would not
like to see the OpenSCAD language follow that roads. Now that I am about to
master list comprehension I don't want to step back.

I agree that OpenSCAD should be easy to learn but I think its main target
should be the more mathematical minded people. I have been writing a lot of
OpenSCAD code oriented to modelling with Bezier surfaces. I started a
experiment with f-rep, a modelling system based on implicity surface. Those
are examples of very powerful modelling framework but they require a good
mathematical background to be useful.

I feel some constraint in the OpenSCAD language possibly due to my limited
programming experience. What I would expect is a richer set of operators for
lists, first class functions and more efficiency both in the programming
interpretation and preview and render. I can live without mutable variables.



--
View this message in context: http://forum.openscad.org/feedback-on-C-style-for-tp17512p17521.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From wv99999 at gmail.com  Thu Jun  2 03:59:28 2016
From: wv99999 at gmail.com (wolf)
Date: Thu, 2 Jun 2016 00:59:28 -0700 (MST)
Subject: [OpenSCAD] Polygon using relative points rather than absolute?
In-Reply-To: <574E04AC.4030402@arnholm.org>
References: <CAGV6i+PN=Ke87p2Xcz6rEWL-ffhprb=11gVCKeGaosDgjgsViQ@mail.gmail.com>
	<1464491597872-17452.post@n5.nabble.com>
	<CAGV6i+NO6bNSQqr8rW0TW2bPpeOV_Pd8P1PGkRvR9ASkn41RLA@mail.gmail.com>
	<1464551449603-17465.post@n5.nabble.com>
	<CAGV6i+NuyiCW_b+yr1A+XpvSO_FGW8=-K_XJgGZjp_dqoJ6ULg@mail.gmail.com>
	<1464696653606-17483.post@n5.nabble.com>
	<CAGV6i+OM0Ey8J4nMVwx5jycYxqb=P83os=3DidND=oLhLmmfbQ@mail.gmail.com>
	<574DA3C5.5090808@arnholm.org>
	<CAOGVwen5+OQ4BP+DhEpOMXW7JFo_Y+i-HDp1AihhE=VFzb2-EQ@mail.gmail.com>
	<574E04AC.4030402@arnholm.org>
Message-ID: <1464854368691-17522.post@n5.nabble.com>

With "https://github.com/openscad/openscad/wiki/Mutable-Variables" doug.moen
has written a specification for imperative extensions to the
OpenSCADlanguage that in version 2.0 is full of design bugs. So are the
comments written so far.

Before I deal with them, remember that the lowest level of computer language
is assembler. Within assembler, you are permitted to MOV (write, in English)
a value from one location to another (e.g. from a register onto the stack).
If that MOV went to the location it was supposed to go, great. But if it
went somewhere else, you have a BUG! If you use a compiler as intermediate
between your program and assembler, you have a good chance of catching it
before the bug does irreparable damage, and your program fails. In catching
a bug, a functional language has an advantage over an imperative language,
since the compiler knows (almost) everything about the programmer's
intentions.

A Haskel fan has this to write
(http://www.haskellforall.com/2012/01/haskell-for-c-programmers-for-loops.html)
"Haskell is an excellent language because functional programming is the
perfect foundation for rigorously building more sophisticated abstractions.
Imperative languages can't do this because they can't opt-out of state and
side effects, making it incredibly difficult to reason about the correctness
of abstractions." 
"state and side effects" is just a way of fudging the real issue: if you
don't read or write the proper memory location, your program state is likely
to be busted, and you have side effects.

The Rust programming language (https://doc.rust-lang.org/book/unsafe.html)
is more clear about the issues at stake here. It clearly distinguishes
between writing safe and unsafe code:
"Safe, in the context of Rust, means ?doesn?t do anything unsafe?. It?s also
important to know that there are certain behaviors that are probably not
desirable in your code, but are expressly not unsafe. . . Rust cannot
prevent all kinds of software problems. Buggy code can and will be written
in Rust."
The paper then goes on to describe what the compiler cannot be expected to
catch, safe mode or unsafe mode.

Doug.moen has written his "Mutable-Variables" paper from the viewpoint of a
user. Had he used the viewpoint of a compiler, he would have realized the
bugs he has introduced.

Here they are:

c=3.1416;        // this defines an immutable variable (a constant). The
                          compiler does not need more information, it can
define
                          the data type itself
var x;
var x:=0;        // the compiler needs more information, it does not know is
                        this a double or single precision number, an
integer, or a 
                        character? There is a need for what in C is called a
header.
x=x+1;           // the use of a colon is not necessary and has been omitted
                         here. Since x is already defined as mutable
elsewhere, the 
                         compiler has all the necessary information. x=x+1
is perfectly
                         acceptable.
c=c+1;           // This is illegal code, as c is auto-typed by the compiler
                         as immutable. The compiler should flag it as
"Variable not 
                         assigned". If done so, no unexperienced user is
likely to lug 
                         his/her lack of understanding onto this forum.

With regards to the use of procedures (if, as I assume, he means Pascal-type
procedures), I fail to see their utility. A procedure does exactly the same
as a function, except that it does not return a value. Rather, I would like
to see a clean-up of how a function is currently written so that it is
possible to build a function from compound statements. This would also make
functions much more easily readable. Readability is more of an issue here
than capability, in particular if you want to scope a mutable variable to be
limited to that function. And from what I can gather from the paper, a "do
block" would be just another name for a procedure: another function that
writes some memory area, but does not return anything and would not expand
on OpenSCAD's ability to create shapes.

What "assert()" is supposed to do I cannot make out at all.

If, while and for are great to have, provided C-style programming is
avoided. What I want to have is an OpenSCAD that is easy to learn, without
first becoming an expert in C. Therefore, no C-style anywhere. C-style is
good for C programmers only, for all others it is a pain in the backside and
barely readable. If you can read English, you should be able to read
OpenSCAD. If not, improve the language and make it more like English. Be
verbose where you must; if you really want to be universal, program in
assembler. And if you want to be truly concise, maybe you should use
Haskell?

I am very much in favour of using "mutable variables". But there are limits,
as I pointed out elsewhere
(http://forum.openscad.org/feedback-on-quot-C-style-for-quot-td17512.html).
Rust has defined these limits in terms of "safe" vs "unsafe" code. I suggest
that the OpenSCAD developer community do something similar for OpenSCAD, if
they fear imperative programming taking over their beloved functional style
nonsense and poor readability (in places).

Keep OpenSCAD simple, focused upon the creation of shapes, and implement
OpenSCAD2 as soon as possible. For those who want extensions to the
language, allow them to write a library (and its associated manual) and add
it to OpenSCAD for a limited number of years, the same way MCAD got added.
Throw the library out if it, or its manual, is not maintained or does not
get used.

That is enough criticism (hopefully constructive). The other bugs in the
discussion so far you should be able to discern yourself, once to see the
issues from a compiler's perspective.


wolf



--
View this message in context: http://forum.openscad.org/Polygon-using-relative-points-rather-than-absolute-tp17414p17522.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From ben.suter at gmail.com  Thu Jun  2 06:15:02 2016
From: ben.suter at gmail.com (bsuter)
Date: Thu, 2 Jun 2016 03:15:02 -0700 (MST)
Subject: [OpenSCAD] STL without render?
In-Reply-To: <1464801757860-17510.post@n5.nabble.com>
References: <CAMOM=9r70opGqK-=g7gz4+NfgZoPTivfZyJcWc_=2FjsF1p4DQ@mail.gmail.com>
	<CAMOM=9rb7hx2ZLpwicVJrEJJVem6kO1WJ2AiDA_6XN3LhVFxBw@mail.gmail.com>
	<1464801757860-17510.post@n5.nabble.com>
Message-ID: <1464862502722-17523.post@n5.nabble.com>

Parkinbot wrote
> Can you share some image that shows your model in detail?

Sure, I'm attaching a view here.

CA3pyr-Amaral-c11571.png
<http://forum.openscad.org/file/n17523/CA3pyr-Amaral-c11571.png>  


Parkinbot wrote
> In OpenSCAD there are fast and slow alternatives to produce a design. If
> you stack too many primitives on top of each other, use boolean operations
> over too much detail (number of vertices) or special high-level operators
> like minkowski() and hull(), rendering gets slow. And it gets even slower,
> when you try to clone complex shapes into more complex structures like
> grids.

My model currently consists of a single sphere at the origin, and then about
1600 instances of a (tapered) cylinder with a sphere at the end (I add these
spheres where two non-parallel cylinders come together, to "fill out" the
join between them). I naively implemented each of these cylinder-sphere
pairs like this:

translate([-2.918, -7.452, 0.698])
rotate(93.4419, [0.800474,-0.596353,0])
cylinder($fn=20, 0.499704, 0.8, 0.5);
translate([-3.216, -7.852, 0.668])
sphere($fn=20, 0.5);

So the above 5 lines repeat roughly 1600 times, of course with different
values. The $fn values I chose basically to balance speed and beauty ...

As you can see in the image, this model is a naturally branched structure -
so for many of these cylinder-sphere segments, their translation and
rotation could naturally be defined as relative to their parent segment,
rather than using a flat structure with each segment oriented relative to
the origin (as I do now). Would you expect one of these approaches to be
faster?


Parkinbot wrote
> There are also ways to create complex shapes by doing most of triagulation
> work on your own. So it depends much on the programming approach you use
> and of course on the complexity of the design itself.

Interesting. Could you point me to some more info on the pre-triangulated
approach? I think I can maybe use Matlab (where I am analyzing the geometry
and generating the .scad now) to generate tessellated coordinates for each
cylinder, or at least the vertices.

Thank you very much!



--
View this message in context: http://forum.openscad.org/STL-without-render-tp17503p17523.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Thu Jun  2 07:24:58 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Thu, 2 Jun 2016 04:24:58 -0700 (MST)
Subject: [OpenSCAD] STL without render?
In-Reply-To: <1464862502722-17523.post@n5.nabble.com>
References: <CAMOM=9r70opGqK-=g7gz4+NfgZoPTivfZyJcWc_=2FjsF1p4DQ@mail.gmail.com>
	<CAMOM=9rb7hx2ZLpwicVJrEJJVem6kO1WJ2AiDA_6XN3LhVFxBw@mail.gmail.com>
	<1464801757860-17510.post@n5.nabble.com>
	<1464862502722-17523.post@n5.nabble.com>
Message-ID: <1464866698827-17524.post@n5.nabble.com>

How lovely! Nice to see, what people do with OpenSCAD. 

A similar problem, doing a union() of a large number of cylinder and sphere
primitives is currently discussed here. 
http://www.thingiverse.com/groups/openscad/topic:6515#comment-900694
CGAL rendering is not very efficient when (very) large numbers of shapes
come into play. 

I've implemented some Matlab class to generically describe arteries with an
interpolation scheme. The output is a winding 'wire' in 3D with free radius
a each point in STL-format. In lack of an own union or furcation operator
capable to do the intersection triangulation we currently use OpenSCAD and
Blender to compose porperly placed wires into tree structures which we again
cut into puzzle pieces for 3D print. 

You might be interested for inspiration or even build on at least part of
the code (in a non-commercial way), e.g. to implement this 'little' details
on your own. Send me a PM to get in further touch. 

I imagine some tree class, allowing for a (recursive) generic description of
path points with radii that can render its objects to STL. In your case, I
guess, you will add a net class to connect those tree objects formally into
a network to do functional simulation. 
OpenSCAD or any other CAD-Programm could be used to provide the final
union() operation connecting some number of precompiled trees (neurons) into
a printable unit. I wouldn't advise to do the programming natively in
OpenSCAD. 


Rudolf





--
View this message in context: http://forum.openscad.org/STL-without-render-tp17503p17524.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Thu Jun  2 07:50:36 2016
From: arnholm at arnholm.org (arnholm at arnholm.org)
Date: Thu, 02 Jun 2016 13:50:36 +0200
Subject: [OpenSCAD] feedback on "C-style for"
In-Reply-To: <1464840274818-17519.post@n5.nabble.com>
References: <CAGV6i+MggHxsW4_6Cp0=cjZ7NR+1L6WpGg2e7syfGA4aQEo6Mg@mail.gmail.com>
	<1464812876420-17514.post@n5.nabble.com>
	<CAGV6i+M2ntBMaJTA_73yBNVtiV6p5vJBhSciXk85tx08Hw6xQw@mail.gmail.com>
	<1464827617732-17516.post@n5.nabble.com>
	<1464832291069-17517.post@n5.nabble.com>
	<1464840274818-17519.post@n5.nabble.com>
Message-ID: <7b0de402186d416deed2f1497f6ee96d@arnholm.org>

On 2016-06-02 06:04, Jamie_K wrote:
> I won't argue about whether functional or imperative is "better" or 
> more
> elegant, but I will argue that pure functional thinking is much more
> /specialized/ than sequential style thinking.  I have heard it said 
> that
> functional programming is more like mathematics and less like 
> programming,
> and I would agree.  Yet I still believe that this mathematical style of
> thinking is less common and less accessible to non-specialists, 
> beginner or
> not!

Agreed. This is common sense.

I don't understand how the argument for a "functional" language follows 
from the objective of ease of use for beginners, except for trivial code 
which is really equally trivial in any language, "functional" or not.

> Anybody can bang out a bit of procedural code, but not everyone can
> wrap their heads around closures, continuations, tail-recursion, or 
> monads.

This is true, it can defeat the noble objective of OpenSCAD being 
accessible to non-specialists.

About a year ago on this list, I stated that I thought the focus of 
OpenSCAD was too much on language definition compared to other 
functionality, and that this follows from the fact that OpenSCAD defines 
it own language syntax. To me, it seems this is still the case.

Carsten Arnholm


From ben.suter at gmail.com  Thu Jun  2 08:11:46 2016
From: ben.suter at gmail.com (bsuter)
Date: Thu, 2 Jun 2016 05:11:46 -0700 (MST)
Subject: [OpenSCAD] STL without render?
In-Reply-To: <1464866698827-17524.post@n5.nabble.com>
References: <CAMOM=9r70opGqK-=g7gz4+NfgZoPTivfZyJcWc_=2FjsF1p4DQ@mail.gmail.com>
	<CAMOM=9rb7hx2ZLpwicVJrEJJVem6kO1WJ2AiDA_6XN3LhVFxBw@mail.gmail.com>
	<1464801757860-17510.post@n5.nabble.com>
	<1464862502722-17523.post@n5.nabble.com>
	<1464866698827-17524.post@n5.nabble.com>
Message-ID: <CAMOM=9rpJA=kjChJLi2cFM--A6+vLFAJoqs46617YOy0RU-DMA@mail.gmail.com>

Dear Rudolf, thank you for this info - it may take me some time to
fully understand, I'll try.

> A similar problem, doing a union() of a large number of cylinder and sphere
> primitives is currently discussed here.
> http://www.thingiverse.com/groups/openscad/topic:6515#comment-900694
> CGAL rendering is not very efficient when (very) large numbers of shapes
> come into play.

In that post you wrote "A single sweep() along a smoothed trajectory
will be faster than a union of cylinders and spheres describing the
same". Could you please explain further what you mean, in OpenSCAD
terms, by "single sweep() along a smoothed trajectory"? This sounds
useful. Certainly each of my branches can be modeled as a sequence of
nodes, where each node has an associated radius. Is there a way to
represent this directly in OpenSCAD? I.e. to specify a trajectory in
3D, and then extrude (ideally a circular cross-section, but a polygon
would work too) along this trajectory, with the extrusion radius
defined at each node?

Essentially this is what I tried to mimic using cylinder primitives
(and spheres at the nodes, to fill in the gaps between cylinder ends).

> I've implemented some Matlab class to generically describe arteries with an
> interpolation scheme. The output is a winding 'wire' in 3D with free radius
> a each point in STL-format.

This part I seem to understand. Arteries are quite similar, in the
present context, to dendritic arbors - tapered cylinders with branch
points. Ultimately all I want is STL. In my own Matlab code I am able
to generate a reasonable 3D figure (by using the cylinder() function
and, after some manipulations, passing the results to the surf()
function). I've toyed with the idea of instead taking the cylinder()
output (basically the vertices at the bottom and top edge of the
cylinder) and using these to generate a tessellated surface in STL
syntax. As long as I use a fixed # of vertices for all cylinders,
connecting the top of one to the base of the next via triangles should
be quite doable.

> In lack of an own union or furcation operator
> capable to do the intersection triangulation we currently use OpenSCAD and
> Blender to compose porperly placed wires into tree structures which we again
> cut into puzzle pieces for 3D print.

This part I don't understand ;(

> You might be interested for inspiration or even build on at least part of
> the code (in a non-commercial way), e.g. to implement this 'little' details
> on your own. Send me a PM to get in further touch.
Thank you!

> I imagine some tree class, allowing for a (recursive) generic description of
> path points with radii that can render its objects to STL. In your case, I
> guess, you will add a net class to connect those tree objects formally into
> a network to do functional simulation.

Such a class would be quite useful - seemingly to a variety of problem domains.

For functional simulations, the format we already use is quite
suitable (it's called SWC; a list of tuples, each tuple has <ID, type,
x, y, z, r, parent>) and widely used (see neuromorpho database if
curious).

My main goal is (a) virtual reality visualization of many neurons
together, and (b) 3D printing of individual neurons. For the latter,
there's a nice paper, but the code there is implemented within a
simulation environment (NEURON) and does not fit well with my current
pipeline.

McDougal, R. A. and G. M. Shepherd (2015). 3D-printer visualization of
neuron models. Frontiers in neuroinformatics 9.

> OpenSCAD or any other CAD-Programm could be used to provide the final
> union() operation connecting some number of precompiled trees (neurons) into
> a printable unit. I wouldn't advise to do the programming natively in
> OpenSCAD.
>
>
> Rudolf
>
>
>
> ________________________________
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/STL-without-render-tp17503p17524.html
> To unsubscribe from STL without render?, click here.
> NAML




--
View this message in context: http://forum.openscad.org/STL-without-render-tp17503p17526.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160602/dab4b951/attachment.html>

From lboyd at frontiernet.net  Thu Jun  2 08:27:14 2016
From: lboyd at frontiernet.net (L Boyd)
Date: Thu, 2 Jun 2016 05:27:14 -0700 (MST)
Subject: [OpenSCAD] Internal treatment of common expressions
Message-ID: <1464870434624-17527.post@n5.nabble.com>

A portion of my code, used many times, has the following segment:
	polyhedron(
	  points = [
		[cos(as)*Rroot, sin(as)*Rroot, z],		    //0
		[cos(as)*Rtipp, sin(as)*Rtipp, z+z1],		//1
		[cos(as)*Rroot, sin(as)*Rroot, z+z2],		//2
		[cos(ae)*Rroot, sin(ae)*Rroot, z+zd],		//3
		[cos(ae)*Rtipp, sin(ae)*Rtipp, z+zd+z1],	//4
		[cos(ae)*Rroot, sin(ae)*Rroot, z+zd+z2]],	//5

There a 2 values of sin and 2 of cos, each of which is used 3 times.

My question is for someone familiar with the OpenSCAD internals. 

Does it calculate each of these 3 times?  If so, is there a performance
advantage to assigning them to variables, thus calculating them only once? 



-----
Larry
--
View this message in context: http://forum.openscad.org/Internal-treatment-of-common-expressions-tp17527.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From who_doctor at hotmail.com  Thu Jun  2 08:53:41 2016
From: who_doctor at hotmail.com (FourthDr)
Date: Thu, 2 Jun 2016 05:53:41 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1464838031957-17518.post@n5.nabble.com>
References: <1464518026773-17458.post@n5.nabble.com>
	<1464639469729-17475.post@n5.nabble.com>
	<1464644772356-17476.post@n5.nabble.com>
	<CAEEmnrPW_u9Jez1S9aj8wcZzC7pcdxA83E3Q1BTcwM8hBLYvgg@mail.gmail.com>
	<1464657121377-17479.post@n5.nabble.com>
	<1464674541947-17481.post@n5.nabble.com>
	<1464721162015-17491.post@n5.nabble.com>
	<1464735505386-17498.post@n5.nabble.com>
	<1464812139424-17513.post@n5.nabble.com>
	<1464838031957-17518.post@n5.nabble.com>
Message-ID: <1464872021605-17528.post@n5.nabble.com>

Hi Ronaldo:

Thanks. I plugged your code in and it works so far. But I'm needing to
re-slice the entire part. The base cutting was just a first draft so to
speak. I've reevaluated my original idea and that first draft will not
shorten the longest dimension of the original part. So I will see if I can
cut in a different place and still make a part that holds together. I'll
reply once I've had a chance to tinker with it. 



--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17528.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Thu Jun  2 09:13:22 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Thu, 2 Jun 2016 15:13:22 +0200
Subject: [OpenSCAD] Internal treatment of common expressions
In-Reply-To: <1464870434624-17527.post@n5.nabble.com>
References: <1464870434624-17527.post@n5.nabble.com>
Message-ID: <trinity-ee8f321d-9028-4e77-b889-464192ecc5aa-1464873202522@3capp-gmx-bs65>

Von:?"L Boyd" <lboyd at frontiernet.net>
> polyhedron(
> points = [
> [cos(as)*Rroot, sin(as)*Rroot, z], //0
> [cos(as)*Rtipp, sin(as)*Rtipp, z+z1], //1
> [cos(as)*Rroot, sin(as)*Rroot, z+z2], //2
> [cos(ae)*Rroot, sin(ae)*Rroot, z+zd], //3
> [cos(ae)*Rtipp, sin(ae)*Rtipp, z+zd+z1], //4
> [cos(ae)*Rroot, sin(ae)*Rroot, z+zd+z2]], //5
> 
> Does it calculate each of these 3 times?
>
Yes

> If so, is there a performance advantage to assigning
> them to variables, thus calculating them only once?
>
Hard to say, probably not for sin() and cos(). In case
it would call a complicated user defined function, the
pre-calculation might help a bit.

In general any simple evaluation tends to be orders
of magnitude faster than the actual mesh calculation,
or even the preview, so there's not much to gain for
the overall time needed.

ciao,
  Torsten.


From rudolf at parkinbot.com  Thu Jun  2 10:29:04 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Thu, 2 Jun 2016 07:29:04 -0700 (MST)
Subject: [OpenSCAD] STL without render?
In-Reply-To: <CAMOM=9rpJA=kjChJLi2cFM--A6+vLFAJoqs46617YOy0RU-DMA@mail.gmail.com>
References: <CAMOM=9r70opGqK-=g7gz4+NfgZoPTivfZyJcWc_=2FjsF1p4DQ@mail.gmail.com>
	<CAMOM=9rb7hx2ZLpwicVJrEJJVem6kO1WJ2AiDA_6XN3LhVFxBw@mail.gmail.com>
	<1464801757860-17510.post@n5.nabble.com>
	<1464862502722-17523.post@n5.nabble.com>
	<1464866698827-17524.post@n5.nabble.com>
	<CAMOM=9rpJA=kjChJLi2cFM--A6+vLFAJoqs46617YOy0RU-DMA@mail.gmail.com>
Message-ID: <1464877744406-17530.post@n5.nabble.com>

bsuter wrote
> In that post you wrote "A single sweep() along a smoothed trajectory
> will be faster than a union of cylinders and spheres describing the
> same". Could you please explain further what you mean, in OpenSCAD
> terms, by "single sweep() along a smoothed trajectory"? 

This code is a good starting point and show case:
http://www.thingiverse.com/thing:547620/#files
to get an idea, how sweeps behave. The (implicit) union() is needed for
marriage of different sweep trajectories. 


> Certainly each of my branches can be modeled as a sequence of
> nodes, where each node has an associated radius. Is there a way to
> represent this directly in OpenSCAD? I.e. to specify a trajectory in
> 3D, and then extrude (ideally a circular cross-section, but a polygon
> would work too) along this trajectory, with the extrusion radius
> defined at each node?

There is no language support for general extrusion along trajectories, and
there is no data structure support (or let's say only weak array support)
for things like trees and so on. But there are libraries like sweep() and
skin() going into this direction. Also see here:
http://www.thingiverse.com/thing:900137


>> I've implemented some Matlab class to generically describe arteries with
>> an
>> interpolation scheme. The output is a winding 'wire' in 3D with free
>> radius
>> at each point in STL-format.

this is an example of the outcome: 
http://forum.openscad.org/Non-Linear-Transformations-tp14539p14597.html

The class simply does some nspline calculation over a sequence of 4D vectors
(x, y, z, r) describing a skeleton line. Most of the code is for handling
STL-triangulation and output. 


>> In lack of an own union or furcation operator
>> capable to do the intersection triangulation we currently use OpenSCAD
>> and
>> Blender to compose porperly placed wires into tree structures which we
>> again
>> cut into puzzle pieces for 3D print.
> This part I don't understand ;(

STL triagulation is easy and fast if you don't have to check for
self-intersection (SI). I.e. if the code can assume, no SI will happen, it
can skip all tests and calculations that would be needed to treat SI and
just knit some generic triangulation pattern in a straight forward manner.
Its helps to think about physical knitting to understand what is going on. 
For the puzzle part: It might be interesting to print a structure in pieces,
e.g. to compose a construction kit or similar (which can also be used for
moulding).  In your case, it might be advantegous to print the neurons and
the dendrits as destinct pieces and design a connector for piecing parts
together as puzzle. 
 
A union of any non-SI shapes might be SI - and will be SI at defined
locations in the case of furcations and trees. So, if SI is only happening
at furcation points, the intersection can be calculated somehow in a fast
manner, to get a proper triangulation. Have a look, how the union of two
cylinders is mapped into STL (to get a first impression, you can use F10 and
Ctrl+1 which only partly triangulates). 
This is the principle. OpenSCAD has this operator in form of union(). So,
one way is to import a bunch of branches (STLs) already correctly placed und
let OpenSCAD do the work dirty work in a general way. 
In fact at CSG-level (F5) this is done only virtually by the graphics card.
And when it comes to STL output (F6) CGAL is used, which takes its time. 

Knowing that all your branches will not SI, except at furcation points, you
can write your own specialized (and thus fast) union() that remeshes just
the furcation intersection part of the branches. 


> My main goal is (a) virtual reality visualization of many neurons
> together, and (b) 3D printing of individual neurons. 

It depends on how often this is repeated. If you model just some two or
three examples, long CGAL rendering times for that what you have, might be
tolerable, as recoding consumes much more time. 

For virtual visualization you might want to put in more effort. OpenSCAD has
some nice animation support on the CSG-level. Trygon used it to do some
amazing things.
http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-td15783.html.
Much more of course is offered by Blender. 

Rudolf




--
View this message in context: http://forum.openscad.org/STL-without-render-tp17503p17530.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Thu Jun  2 12:35:26 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 2 Jun 2016 17:35:26 +0100
Subject: [OpenSCAD] STL without render?
In-Reply-To: <1464877744406-17530.post@n5.nabble.com>
References: <CAMOM=9r70opGqK-=g7gz4+NfgZoPTivfZyJcWc_=2FjsF1p4DQ@mail.gmail.com>
	<CAMOM=9rb7hx2ZLpwicVJrEJJVem6kO1WJ2AiDA_6XN3LhVFxBw@mail.gmail.com>
	<1464801757860-17510.post@n5.nabble.com>
	<1464862502722-17523.post@n5.nabble.com>
	<1464866698827-17524.post@n5.nabble.com>
	<CAMOM=9rpJA=kjChJLi2cFM--A6+vLFAJoqs46617YOy0RU-DMA@mail.gmail.com>
	<1464877744406-17530.post@n5.nabble.com>
Message-ID: <CAEEmnrNB3eKHU6-LqhRpzwA5gbp=jFMV-S0YDf_AAfrrCei-nw@mail.gmail.com>

Simply replacing the unions with a cylinder by a hull of two spheres will
probably give a decent improvement in speed. Unioning a sphere with a
cylinder can be very slow.

On 2 June 2016 at 15:29, Parkinbot <rudolf at parkinbot.com> wrote:

> bsuter wrote
> > In that post you wrote "A single sweep() along a smoothed trajectory
> > will be faster than a union of cylinders and spheres describing the
> > same". Could you please explain further what you mean, in OpenSCAD
> > terms, by "single sweep() along a smoothed trajectory"?
>
> This code is a good starting point and show case:
> http://www.thingiverse.com/thing:547620/#files
> to get an idea, how sweeps behave. The (implicit) union() is needed for
> marriage of different sweep trajectories.
>
>
> > Certainly each of my branches can be modeled as a sequence of
> > nodes, where each node has an associated radius. Is there a way to
> > represent this directly in OpenSCAD? I.e. to specify a trajectory in
> > 3D, and then extrude (ideally a circular cross-section, but a polygon
> > would work too) along this trajectory, with the extrusion radius
> > defined at each node?
>
> There is no language support for general extrusion along trajectories, and
> there is no data structure support (or let's say only weak array support)
> for things like trees and so on. But there are libraries like sweep() and
> skin() going into this direction. Also see here:
> http://www.thingiverse.com/thing:900137
>
>
> >> I've implemented some Matlab class to generically describe arteries with
> >> an
> >> interpolation scheme. The output is a winding 'wire' in 3D with free
> >> radius
> >> at each point in STL-format.
>
> this is an example of the outcome:
> http://forum.openscad.org/Non-Linear-Transformations-tp14539p14597.html
>
> The class simply does some nspline calculation over a sequence of 4D
> vectors
> (x, y, z, r) describing a skeleton line. Most of the code is for handling
> STL-triangulation and output.
>
>
> >> In lack of an own union or furcation operator
> >> capable to do the intersection triangulation we currently use OpenSCAD
> >> and
> >> Blender to compose porperly placed wires into tree structures which we
> >> again
> >> cut into puzzle pieces for 3D print.
> > This part I don't understand ;(
>
> STL triagulation is easy and fast if you don't have to check for
> self-intersection (SI). I.e. if the code can assume, no SI will happen, it
> can skip all tests and calculations that would be needed to treat SI and
> just knit some generic triangulation pattern in a straight forward manner.
> Its helps to think about physical knitting to understand what is going on.
> For the puzzle part: It might be interesting to print a structure in
> pieces,
> e.g. to compose a construction kit or similar (which can also be used for
> moulding).  In your case, it might be advantegous to print the neurons and
> the dendrits as destinct pieces and design a connector for piecing parts
> together as puzzle.
>
> A union of any non-SI shapes might be SI - and will be SI at defined
> locations in the case of furcations and trees. So, if SI is only happening
> at furcation points, the intersection can be calculated somehow in a fast
> manner, to get a proper triangulation. Have a look, how the union of two
> cylinders is mapped into STL (to get a first impression, you can use F10
> and
> Ctrl+1 which only partly triangulates).
> This is the principle. OpenSCAD has this operator in form of union(). So,
> one way is to import a bunch of branches (STLs) already correctly placed
> und
> let OpenSCAD do the work dirty work in a general way.
> In fact at CSG-level (F5) this is done only virtually by the graphics card.
> And when it comes to STL output (F6) CGAL is used, which takes its time.
>
> Knowing that all your branches will not SI, except at furcation points, you
> can write your own specialized (and thus fast) union() that remeshes just
> the furcation intersection part of the branches.
>
>
> > My main goal is (a) virtual reality visualization of many neurons
> > together, and (b) 3D printing of individual neurons.
>
> It depends on how often this is repeated. If you model just some two or
> three examples, long CGAL rendering times for that what you have, might be
> tolerable, as recoding consumes much more time.
>
> For virtual visualization you might want to put in more effort. OpenSCAD
> has
> some nice animation support on the CSG-level. Trygon used it to do some
> amazing things.
> http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-td15783.html
> .
> Much more of course is offered by Blender.
>
> Rudolf
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/STL-without-render-tp17503p17530.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160602/bbfa6428/attachment.html>

From ben.suter at gmail.com  Thu Jun  2 13:05:22 2016
From: ben.suter at gmail.com (bsuter)
Date: Thu, 2 Jun 2016 10:05:22 -0700 (MST)
Subject: [OpenSCAD] STL without render?
In-Reply-To: <CAEEmnrNB3eKHU6-LqhRpzwA5gbp=jFMV-S0YDf_AAfrrCei-nw@mail.gmail.com>
References: <CAMOM=9r70opGqK-=g7gz4+NfgZoPTivfZyJcWc_=2FjsF1p4DQ@mail.gmail.com>
	<CAMOM=9rb7hx2ZLpwicVJrEJJVem6kO1WJ2AiDA_6XN3LhVFxBw@mail.gmail.com>
	<1464801757860-17510.post@n5.nabble.com>
	<1464862502722-17523.post@n5.nabble.com>
	<1464866698827-17524.post@n5.nabble.com>
	<CAMOM=9rpJA=kjChJLi2cFM--A6+vLFAJoqs46617YOy0RU-DMA@mail.gmail.com>
	<1464877744406-17530.post@n5.nabble.com>
	<CAEEmnrNB3eKHU6-LqhRpzwA5gbp=jFMV-S0YDf_AAfrrCei-nw@mail.gmail.com>
Message-ID: <CAMOM=9oeYBSREJnd6=MgTyvkVuVsgvNVhSoD=dA010FfRUEH6Q@mail.gmail.com>

Aha, I think I see what you mean:
1. What I'm doing now: cylinder from point A to point B, a sphere at
point B, another cylinder from point B to point C

2. What you suggest: spheres at points A, B and C; plus hull() of each
pair of spheres? But would I need to duplicate the sphere at point B,
since it's part of two hulls?

Did I understand that correctly? I'll try this.

I found another thread that discusses something similar. Interestingly
it starts with someone doing a hull() of two spheres, and hoping for a
faster solution.
http://forum.openscad.org/Rods-between-3D-points-td13104.html

3. User runsun then suggested: "It will be much faster if you can
generate points on both end points and use polyhedron.", followed by
detailed instructions.

In my case, I am able to generate the points framing a circle at each
end of the intended segment, call this pts_base and pts_top. So it
sounds like I could try:
pts = concat(pts_base, pts_top);
faces = faces(shape="rod", nside= len(pts_base), nseg=1);
polyhedron(points=pts, faces=faces("rod", nside=12));

However, this still needs some way to "fill the joint" at the
intersection of two such rods, and from what I've been reading in this
thread, it sounds like maybe it's precisely this problem (which I
"solved" by inserting a sphere at each joint) that is computationally
expensive?


On Thu, Jun 2, 2016 at 6:36 PM, nophead [via OpenSCAD]
<ml-node+s1091067n17531h31 at n5.nabble.com> wrote:
> Simply replacing the unions with a cylinder by a hull of two spheres will
> probably give a decent improvement in speed. Unioning a sphere with a
> cylinder can be very slow.
>
> On 2 June 2016 at 15:29, Parkinbot <[hidden email]> wrote:
>>
>> bsuter wrote
>> > In that post you wrote "A single sweep() along a smoothed trajectory
>> > will be faster than a union of cylinders and spheres describing the
>> > same". Could you please explain further what you mean, in OpenSCAD
>> > terms, by "single sweep() along a smoothed trajectory"?
>>
>> This code is a good starting point and show case:
>> http://www.thingiverse.com/thing:547620/#files
>> to get an idea, how sweeps behave. The (implicit) union() is needed for
>> marriage of different sweep trajectories.
>>
>>
>> > Certainly each of my branches can be modeled as a sequence of
>> > nodes, where each node has an associated radius. Is there a way to
>> > represent this directly in OpenSCAD? I.e. to specify a trajectory in
>> > 3D, and then extrude (ideally a circular cross-section, but a polygon
>> > would work too) along this trajectory, with the extrusion radius
>> > defined at each node?
>>
>> There is no language support for general extrusion along trajectories, and
>> there is no data structure support (or let's say only weak array support)
>> for things like trees and so on. But there are libraries like sweep() and
>> skin() going into this direction. Also see here:
>> http://www.thingiverse.com/thing:900137
>>
>>
>> >> I've implemented some Matlab class to generically describe arteries
>> >> with
>> >> an
>> >> interpolation scheme. The output is a winding 'wire' in 3D with free
>> >> radius
>> >> at each point in STL-format.
>>
>> this is an example of the outcome:
>> http://forum.openscad.org/Non-Linear-Transformations-tp14539p14597.html
>>
>> The class simply does some nspline calculation over a sequence of 4D
>> vectors
>> (x, y, z, r) describing a skeleton line. Most of the code is for handling
>> STL-triangulation and output.
>>
>>
>> >> In lack of an own union or furcation operator
>> >> capable to do the intersection triangulation we currently use OpenSCAD
>> >> and
>> >> Blender to compose porperly placed wires into tree structures which we
>> >> again
>> >> cut into puzzle pieces for 3D print.
>> > This part I don't understand ;(
>>
>> STL triagulation is easy and fast if you don't have to check for
>> self-intersection (SI). I.e. if the code can assume, no SI will happen, it
>> can skip all tests and calculations that would be needed to treat SI and
>> just knit some generic triangulation pattern in a straight forward manner.
>> Its helps to think about physical knitting to understand what is going on.
>> For the puzzle part: It might be interesting to print a structure in
>> pieces,
>> e.g. to compose a construction kit or similar (which can also be used for
>> moulding).  In your case, it might be advantegous to print the neurons and
>> the dendrits as destinct pieces and design a connector for piecing parts
>> together as puzzle.
>>
>> A union of any non-SI shapes might be SI - and will be SI at defined
>> locations in the case of furcations and trees. So, if SI is only happening
>> at furcation points, the intersection can be calculated somehow in a fast
>> manner, to get a proper triangulation. Have a look, how the union of two
>> cylinders is mapped into STL (to get a first impression, you can use F10
>> and
>> Ctrl+1 which only partly triangulates).
>> This is the principle. OpenSCAD has this operator in form of union(). So,
>> one way is to import a bunch of branches (STLs) already correctly placed
>> und
>> let OpenSCAD do the work dirty work in a general way.
>> In fact at CSG-level (F5) this is done only virtually by the graphics
>> card.
>> And when it comes to STL output (F6) CGAL is used, which takes its time.
>>
>> Knowing that all your branches will not SI, except at furcation points,
>> you
>> can write your own specialized (and thus fast) union() that remeshes just
>> the furcation intersection part of the branches.
>>
>>
>> > My main goal is (a) virtual reality visualization of many neurons
>> > together, and (b) 3D printing of individual neurons.
>>
>> It depends on how often this is repeated. If you model just some two or
>> three examples, long CGAL rendering times for that what you have, might be
>> tolerable, as recoding consumes much more time.
>>
>> For virtual visualization you might want to put in more effort. OpenSCAD
>> has
>> some nice animation support on the CSG-level. Trygon used it to do some
>> amazing things.
>>
>> http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-td15783.html.
>> Much more of course is offered by Blender.
>>
>> Rudolf
>>
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/STL-without-render-tp17503p17530.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> [hidden email]
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email]
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> ________________________________
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/STL-without-render-tp17503p17531.html
> To unsubscribe from STL without render?, click here.
> NAML




--
View this message in context: http://forum.openscad.org/STL-without-render-tp17503p17532.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160602/9cd890a0/attachment.html>

From nop.head at gmail.com  Thu Jun  2 13:20:56 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 2 Jun 2016 18:20:56 +0100
Subject: [OpenSCAD] STL without render?
In-Reply-To: <CAMOM=9oeYBSREJnd6=MgTyvkVuVsgvNVhSoD=dA010FfRUEH6Q@mail.gmail.com>
References: <CAMOM=9r70opGqK-=g7gz4+NfgZoPTivfZyJcWc_=2FjsF1p4DQ@mail.gmail.com>
	<CAMOM=9rb7hx2ZLpwicVJrEJJVem6kO1WJ2AiDA_6XN3LhVFxBw@mail.gmail.com>
	<1464801757860-17510.post@n5.nabble.com>
	<1464862502722-17523.post@n5.nabble.com>
	<1464866698827-17524.post@n5.nabble.com>
	<CAMOM=9rpJA=kjChJLi2cFM--A6+vLFAJoqs46617YOy0RU-DMA@mail.gmail.com>
	<1464877744406-17530.post@n5.nabble.com>
	<CAEEmnrNB3eKHU6-LqhRpzwA5gbp=jFMV-S0YDf_AAfrrCei-nw@mail.gmail.com>
	<CAMOM=9oeYBSREJnd6=MgTyvkVuVsgvNVhSoD=dA010FfRUEH6Q@mail.gmail.com>
Message-ID: <CAEEmnrO3MtK5xR+2Bon=oHJSAs2OT_TnKfrbok03R1J=ay6DqQ@mail.gmail.com>

On 2 June 2016 at 18:05, bsuter <ben.suter at gmail.com> wrote:

> Aha, I think I see what you mean:
> 1. What I'm doing now: cylinder from point A to point B, a sphere at
> point B, another cylinder from point B to point C
>
> 2. What you suggest: spheres at points A, B and C; plus hull() of each
> pair of spheres? But would I need to duplicate the sphere at point B,
> since it's part of two hulls?
>

Yes but duplicating a sphere takes no time at all because it is cached.
Hull is faster than union in later versions of OpenScad but you still need
to union the results so it won't be very fast but perhaps twice the current
speed at a guess.


>
> Did I understand that correctly? I'll try this.
>
> I found another thread that discusses something similar. Interestingly
> it starts with someone doing a hull() of two spheres, and hoping for a
> faster solution.
> http://forum.openscad.org/Rods-between-3D-points-td13104.html
>
> 3. User runsun then suggested: "It will be much faster if you can
> generate points on both end points and use polyhedron.", followed by
> detailed instructions.
>
> In my case, I am able to generate the points framing a circle at each
> end of the intended segment, call this pts_base and pts_top. So it
> sounds like I could try:
> pts = concat(pts_base, pts_top);
> faces = faces(shape="rod", nside= len(pts_base), nseg=1);
> polyhedron(points=pts, faces=faces("rod", nside=12));
>
> However, this still needs some way to "fill the joint" at the
> intersection of two such rods, and from what I've been reading in this
> thread, it sounds like maybe it's precisely this problem (which I
> "solved" by inserting a sphere at each joint) that is computationally
> expensive?
>

Unioning things that have lots of vertices is very expensive. Generating
polyhedra from points is very fast but you have to be able to fully
describe the shape mathematically. That is not easy where there is a
branch, so best case I think you will need a union per branch or a very
clever recursive function that makes one big polyhedron.


>
>
> On Thu, Jun 2, 2016 at 6:36 PM, nophead [via OpenSCAD]
> <[hidden email] <http:///user/SendEmail.jtp?type=node&node=17532&i=0>>
> wrote:
>
> > Simply replacing the unions with a cylinder by a hull of two spheres
> will
> > probably give a decent improvement in speed. Unioning a sphere with a
> > cylinder can be very slow.
> >
> > On 2 June 2016 at 15:29, Parkinbot <[hidden email]> wrote:
> >>
> >> bsuter wrote
> >> > In that post you wrote "A single sweep() along a smoothed trajectory
> >> > will be faster than a union of cylinders and spheres describing the
> >> > same". Could you please explain further what you mean, in OpenSCAD
> >> > terms, by "single sweep() along a smoothed trajectory"?
> >>
> >> This code is a good starting point and show case:
> >> http://www.thingiverse.com/thing:547620/#files
> >> to get an idea, how sweeps behave. The (implicit) union() is needed for
> >> marriage of different sweep trajectories.
> >>
> >>
> >> > Certainly each of my branches can be modeled as a sequence of
> >> > nodes, where each node has an associated radius. Is there a way to
> >> > represent this directly in OpenSCAD? I.e. to specify a trajectory in
> >> > 3D, and then extrude (ideally a circular cross-section, but a polygon
> >> > would work too) along this trajectory, with the extrusion radius
> >> > defined at each node?
> >>
> >> There is no language support for general extrusion along trajectories,
> and
> >> there is no data structure support (or let's say only weak array
> support)
> >> for things like trees and so on. But there are libraries like sweep()
> and
> >> skin() going into this direction. Also see here:
> >> http://www.thingiverse.com/thing:900137
> >>
> >>
> >> >> I've implemented some Matlab class to generically describe arteries
> >> >> with
> >> >> an
> >> >> interpolation scheme. The output is a winding 'wire' in 3D with free
> >> >> radius
> >> >> at each point in STL-format.
> >>
> >> this is an example of the outcome:
> >> http://forum.openscad.org/Non-Linear-Transformations-tp14539p14597.html
> >>
> >> The class simply does some nspline calculation over a sequence of 4D
> >> vectors
> >> (x, y, z, r) describing a skeleton line. Most of the code is for
> handling
> >> STL-triangulation and output.
> >>
> >>
> >> >> In lack of an own union or furcation operator
> >> >> capable to do the intersection triangulation we currently use
> OpenSCAD
> >> >> and
> >> >> Blender to compose porperly placed wires into tree structures which
> we
> >> >> again
> >> >> cut into puzzle pieces for 3D print.
> >> > This part I don't understand ;(
> >>
> >> STL triagulation is easy and fast if you don't have to check for
> >> self-intersection (SI). I.e. if the code can assume, no SI will happen,
> it
> >> can skip all tests and calculations that would be needed to treat SI
> and
> >> just knit some generic triangulation pattern in a straight forward
> manner.
> >> Its helps to think about physical knitting to understand what is going
> on.
> >> For the puzzle part: It might be interesting to print a structure in
> >> pieces,
> >> e.g. to compose a construction kit or similar (which can also be used
> for
> >> moulding).  In your case, it might be advantegous to print the neurons
> and
> >> the dendrits as destinct pieces and design a connector for piecing
> parts
> >> together as puzzle.
> >>
> >> A union of any non-SI shapes might be SI - and will be SI at defined
> >> locations in the case of furcations and trees. So, if SI is only
> happening
> >> at furcation points, the intersection can be calculated somehow in a
> fast
> >> manner, to get a proper triangulation. Have a look, how the union of
> two
> >> cylinders is mapped into STL (to get a first impression, you can use
> F10
> >> and
> >> Ctrl+1 which only partly triangulates).
> >> This is the principle. OpenSCAD has this operator in form of union().
> So,
> >> one way is to import a bunch of branches (STLs) already correctly
> placed
> >> und
> >> let OpenSCAD do the work dirty work in a general way.
> >> In fact at CSG-level (F5) this is done only virtually by the graphics
> >> card.
> >> And when it comes to STL output (F6) CGAL is used, which takes its
> time.
> >>
> >> Knowing that all your branches will not SI, except at furcation points,
> >> you
> >> can write your own specialized (and thus fast) union() that remeshes
> just
> >> the furcation intersection part of the branches.
> >>
> >>
> >> > My main goal is (a) virtual reality visualization of many neurons
> >> > together, and (b) 3D printing of individual neurons.
> >>
> >> It depends on how often this is repeated. If you model just some two or
> >> three examples, long CGAL rendering times for that what you have, might
> be
> >> tolerable, as recoding consumes much more time.
> >>
> >> For virtual visualization you might want to put in more effort.
> OpenSCAD
> >> has
> >> some nice animation support on the CSG-level. Trygon used it to do some
> >> amazing things.
> >>
> >>
> http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-td15783.html.
>
> >> Much more of course is offered by Blender.
> >>
> >> Rudolf
> >>
> >>
> >>
> >>
> >> --
> >> View this message in context:
> >> http://forum.openscad.org/STL-without-render-tp17503p17530.html
> >> Sent from the OpenSCAD mailing list archive at Nabble.com.
> >>
> >> _______________________________________________
> >> OpenSCAD mailing list
> >> [hidden email]
> >> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> >
> >
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > [hidden email]
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> >
> >
> > ________________________________
> > If you reply to this email, your message will be added to the discussion
> > below:
> > http://forum.openscad.org/STL-without-render-tp17503p17531.html
> > To unsubscribe from STL without render?, click here.
> > NAML
>
> ------------------------------
> View this message in context: Re: STL without render?
> <http://forum.openscad.org/STL-without-render-tp17503p17532.html>
>
> Sent from the OpenSCAD mailing list archive <http://forum.openscad.org/>
> at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160602/b8495f80/attachment.html>

From Torsten.Paul at gmx.de  Thu Jun  2 14:12:48 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Thu, 2 Jun 2016 20:12:48 +0200
Subject: [OpenSCAD] feedback on "C-style for"
In-Reply-To: <7b0de402186d416deed2f1497f6ee96d@arnholm.org>
References: <CAGV6i+MggHxsW4_6Cp0=cjZ7NR+1L6WpGg2e7syfGA4aQEo6Mg@mail.gmail.com>
	<1464812876420-17514.post@n5.nabble.com>
	<CAGV6i+M2ntBMaJTA_73yBNVtiV6p5vJBhSciXk85tx08Hw6xQw@mail.gmail.com>
	<1464827617732-17516.post@n5.nabble.com>
	<1464832291069-17517.post@n5.nabble.com>
	<1464840274818-17519.post@n5.nabble.com>
	<7b0de402186d416deed2f1497f6ee96d@arnholm.org>
Message-ID: <57507720.3080106@gmx.de>

On 06/02/2016 01:50 PM, arnholm at arnholm.org wrote:
> This is true, it can defeat the noble objective of OpenSCAD
> being accessible to non-specialists.
>
It *is* used by non-specialists, looking at the various post
all over the internet. I believe it certainly should stay that
way. I don't think that means it's impossible to add some more
advanced features.

> About a year ago on this list, I stated that I thought the
> focus of OpenSCAD was too much on language definition
> compared to other functionality, and that this follows from
> the fact that OpenSCAD defines it own language syntax. To me,
> it seems this is still the case.
> 
Based on what? There's quite some discussion on the list here,
and that's good. It's a big topic, so seeing different viewpoints
is nice. The work Doug does in writing down the ideas and
driving the discussion is just awesome.

As far as development goes, looking at the github history,
there's only a very very tiny effort to already include some
of the ideas that fit nicely into the existing code.

So I see only one "problem", the wishlist is very long compared
to the available development power. But that's just how things
tend to go with open source projects. There's a number of nice
things waiting to be finished, it's just taking time...

ciao,
  Torsten.




From mschafer at wireframe.biz  Thu Jun  2 16:22:57 2016
From: mschafer at wireframe.biz (Neon22)
Date: Thu, 2 Jun 2016 13:22:57 -0700 (MST)
Subject: [OpenSCAD] STL without render?
In-Reply-To: <CAEEmnrO3MtK5xR+2Bon=oHJSAs2OT_TnKfrbok03R1J=ay6DqQ@mail.gmail.com>
References: <CAMOM=9r70opGqK-=g7gz4+NfgZoPTivfZyJcWc_=2FjsF1p4DQ@mail.gmail.com>
	<CAMOM=9rb7hx2ZLpwicVJrEJJVem6kO1WJ2AiDA_6XN3LhVFxBw@mail.gmail.com>
	<1464801757860-17510.post@n5.nabble.com>
	<1464862502722-17523.post@n5.nabble.com>
	<1464866698827-17524.post@n5.nabble.com>
	<CAMOM=9rpJA=kjChJLi2cFM--A6+vLFAJoqs46617YOy0RU-DMA@mail.gmail.com>
	<1464877744406-17530.post@n5.nabble.com>
	<CAEEmnrNB3eKHU6-LqhRpzwA5gbp=jFMV-S0YDf_AAfrrCei-nw@mail.gmail.com>
	<CAMOM=9oeYBSREJnd6=MgTyvkVuVsgvNVhSoD=dA010FfRUEH6Q@mail.gmail.com>
	<CAEEmnrO3MtK5xR+2Bon=oHJSAs2OT_TnKfrbok03R1J=ay6DqQ@mail.gmail.com>
Message-ID: <1464898977669-17535.post@n5.nabble.com>

As pointed out above. Nophead's solution of "hull between spheres at junction
points" is the least effort for speedup. You can set the sphere resolution
low ($fn) for faster preview.

The route best suited to your specific problem is extruding a cross sectiin
along a 'wire' for which there is code linked above. You' d make many
'wires' and then skin them, finally union these together if you needed a
single solid object.



--
View this message in context: http://forum.openscad.org/STL-without-render-tp17503p17535.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From who_doctor at hotmail.com  Thu Jun  2 16:30:32 2016
From: who_doctor at hotmail.com (FourthDr)
Date: Thu, 2 Jun 2016 13:30:32 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1464838031957-17518.post@n5.nabble.com>
References: <1464518026773-17458.post@n5.nabble.com>
	<1464639469729-17475.post@n5.nabble.com>
	<1464644772356-17476.post@n5.nabble.com>
	<CAEEmnrPW_u9Jez1S9aj8wcZzC7pcdxA83E3Q1BTcwM8hBLYvgg@mail.gmail.com>
	<1464657121377-17479.post@n5.nabble.com>
	<1464674541947-17481.post@n5.nabble.com>
	<1464721162015-17491.post@n5.nabble.com>
	<1464735505386-17498.post@n5.nabble.com>
	<1464812139424-17513.post@n5.nabble.com>
	<1464838031957-17518.post@n5.nabble.com>
Message-ID: <1464899432875-17536.post@n5.nabble.com>

Hi Ronaldo:

Here is the revision I think will work for me to be able to print. Currently
I'm using the default T puzzle piece because naturally the thing won't
render and I can't clearly see the cuts with the other code. I'll want to do
this for both prints Cycl_XrightFrame.stl and Cycl_XrleftFrame.stl. Please
see attached.

Cycl_XleftFrame.stl
<http://forum.openscad.org/file/n17536/Cycl_XleftFrame.stl>  
Cycl_XrightFrame.stl
<http://forum.openscad.org/file/n17536/Cycl_XrightFrame.stl>  
puzzlecutdemo2-cut-test2.scad
<http://forum.openscad.org/file/n17536/puzzlecutdemo2-cut-test2.scad>  
puzzlecutlib.scad <http://forum.openscad.org/file/n17536/puzzlecutlib.scad>  





--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17536.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From ben.suter at gmail.com  Thu Jun  2 16:38:30 2016
From: ben.suter at gmail.com (bsuter)
Date: Thu, 2 Jun 2016 13:38:30 -0700 (MST)
Subject: [OpenSCAD] STL without render?
In-Reply-To: <1464898977669-17535.post@n5.nabble.com>
References: <CAMOM=9rb7hx2ZLpwicVJrEJJVem6kO1WJ2AiDA_6XN3LhVFxBw@mail.gmail.com>
	<1464801757860-17510.post@n5.nabble.com>
	<1464862502722-17523.post@n5.nabble.com>
	<1464866698827-17524.post@n5.nabble.com>
	<CAMOM=9rpJA=kjChJLi2cFM--A6+vLFAJoqs46617YOy0RU-DMA@mail.gmail.com>
	<1464877744406-17530.post@n5.nabble.com>
	<CAEEmnrNB3eKHU6-LqhRpzwA5gbp=jFMV-S0YDf_AAfrrCei-nw@mail.gmail.com>
	<CAMOM=9oeYBSREJnd6=MgTyvkVuVsgvNVhSoD=dA010FfRUEH6Q@mail.gmail.com>
	<CAEEmnrO3MtK5xR+2Bon=oHJSAs2OT_TnKfrbok03R1J=ay6DqQ@mail.gmail.com>
	<1464898977669-17535.post@n5.nabble.com>
Message-ID: <CAMOM=9pC_0MENxMdUdDqwvjbejFCnrc6_dd7Cvu525soyFwYsg@mail.gmail.com>

> As pointed out above. Nophead's solution of "hull between spheres at
> junction points" is the least effort for speedup. You can set the sphere
> resolution low ($fn) for faster preview.

Thank you - preview is instantaneous (sub-second) for my current
solution (cylinders and spheres), but render takes 2.5 hours per
neuron (and I have many neurons to render). I will try the "hull
between spheres at junction points" and report back.

> The route best suited to your specific problem is extruding a cross sectiin
> along a 'wire' for which there is code linked above. You' d make many
> 'wires' and then skin them, finally union these together if you needed a
> single solid object.

What I don't yet understand about this solution is how the "joint" or
"junctions" are handled: does the extrusion "turn the bend", so to
speak, or does this solution still require additional spheres (or ?)
at the points where the wire changes direction?

Many thanks!

>
> ________________________________
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/STL-without-render-tp17503p17535.html
> To unsubscribe from STL without render?, click here.
> NAML




--
View this message in context: http://forum.openscad.org/STL-without-render-tp17503p17537.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160602/91a742ff/attachment.html>

From rudolf at parkinbot.com  Thu Jun  2 17:38:17 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Thu, 2 Jun 2016 14:38:17 -0700 (MST)
Subject: [OpenSCAD] No bounding box test for union() before entering CGAL?
Message-ID: <1464903497739-17538.post@n5.nabble.com>

There has been a lot of discussion going on about F6 rendering time. I never
had to fight with a design with many non-intersecting clones, so I didn't do
any testing on it. Now I did - with astonishing results. 

Have a look at this simple code, which F5-displays immediately but
F6-renders several minutes on my machine. It clearly shows that there is not
even a simple boundingbox test done before CGAL invoke.
 

> for (i = [1:30])
>   for (j = [1:30])
>     translate([i*20, j*20, 0])
>       cylinder(r = 5, h = 10); 

And I'd say from its O(n?) behavior, that also CGAL doesn't seem to make any
effort to use boundingbox tests itself. Maybe this because of the way, how
it is invoked ... 

Wouldn't it speed up things a lot if 
1. boundingbox intersection checks of chached elements were introduced to be
able to call CGAL separately - and multithreaded - for obviously
non-intersecting chunks.
2. to invoke CGAL only once for non-intersecting chached elements occurring
multiple times (= apply last affine mapping after CGAL)

It could also make sense, to introduce a directive (or a switch) for
indicating multiple elements with non intersecting bounding boxes to
OpenSCAD. (conditional analysis) 
Also have a look here:
http://www8.cs.umu.se/education/examina/Rapporter/NilsBaeckman.pdf




--
View this message in context: http://forum.openscad.org/No-bounding-box-test-for-union-before-entering-CGAL-tp17538.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Thu Jun  2 17:44:03 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Thu, 2 Jun 2016 14:44:03 -0700 (MST)
Subject: [OpenSCAD] STL without render?
In-Reply-To: <CAMOM=9pC_0MENxMdUdDqwvjbejFCnrc6_dd7Cvu525soyFwYsg@mail.gmail.com>
References: <1464801757860-17510.post@n5.nabble.com>
	<1464862502722-17523.post@n5.nabble.com>
	<1464866698827-17524.post@n5.nabble.com>
	<CAMOM=9rpJA=kjChJLi2cFM--A6+vLFAJoqs46617YOy0RU-DMA@mail.gmail.com>
	<1464877744406-17530.post@n5.nabble.com>
	<CAEEmnrNB3eKHU6-LqhRpzwA5gbp=jFMV-S0YDf_AAfrrCei-nw@mail.gmail.com>
	<CAMOM=9oeYBSREJnd6=MgTyvkVuVsgvNVhSoD=dA010FfRUEH6Q@mail.gmail.com>
	<CAEEmnrO3MtK5xR+2Bon=oHJSAs2OT_TnKfrbok03R1J=ay6DqQ@mail.gmail.com>
	<1464898977669-17535.post@n5.nabble.com>
	<CAMOM=9pC_0MENxMdUdDqwvjbejFCnrc6_dd7Cvu525soyFwYsg@mail.gmail.com>
Message-ID: <1464903843457-17539.post@n5.nabble.com>

the problem is that a general union() will check each edge against each edge
of each other shape. This is a quadratic problem, if no optimization or
short cut scheme is employed. Double number of edges (shapes) four times
longer execution. 



--
View this message in context: http://forum.openscad.org/STL-without-render-tp17503p17539.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From vector76 at gmail.com  Thu Jun  2 18:57:43 2016
From: vector76 at gmail.com (Jamie_K)
Date: Thu, 2 Jun 2016 15:57:43 -0700 (MST)
Subject: [OpenSCAD] feedback on "C-style for"
In-Reply-To: <57507720.3080106@gmx.de>
References: <CAGV6i+MggHxsW4_6Cp0=cjZ7NR+1L6WpGg2e7syfGA4aQEo6Mg@mail.gmail.com>
	<1464812876420-17514.post@n5.nabble.com>
	<CAGV6i+M2ntBMaJTA_73yBNVtiV6p5vJBhSciXk85tx08Hw6xQw@mail.gmail.com>
	<1464827617732-17516.post@n5.nabble.com>
	<1464832291069-17517.post@n5.nabble.com>
	<1464840274818-17519.post@n5.nabble.com>
	<7b0de402186d416deed2f1497f6ee96d@arnholm.org>
	<57507720.3080106@gmx.de>
Message-ID: <1464908263695-17540.post@n5.nabble.com>

A minor point I'd like to clarify, is when I speak of accessibility to
non-specialists, I'm talking about the more advanced programming aspects,
such as defining and using functions or list comprehensions.  There is no
question that ordinary geometry and modules are tremendously useful and
easily accessible.

When it comes to offset a polygon, or convert relative points to absolute,
what should be easy becomes a test of whether you understand tail recursion.

Opening up the programming aspects to non-specialists could expand creation
and sharing of operators (dilate, generate-mold, slice,
cleanup-non-manifold, voronoi-subdivide, or whatever).  As it is now, almost
all creation and sharing is of models, not operators.  With a proliferation
of operators, the designer who can't (or doesn't want to) write code could
see a lot of benefit too.

-Jamie




--
View this message in context: http://forum.openscad.org/feedback-on-C-style-for-tp17512p17540.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Jun  2 20:03:53 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 2 Jun 2016 17:03:53 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1464899432875-17536.post@n5.nabble.com>
References: <1464639469729-17475.post@n5.nabble.com>
	<1464644772356-17476.post@n5.nabble.com>
	<CAEEmnrPW_u9Jez1S9aj8wcZzC7pcdxA83E3Q1BTcwM8hBLYvgg@mail.gmail.com>
	<1464657121377-17479.post@n5.nabble.com>
	<1464674541947-17481.post@n5.nabble.com>
	<1464721162015-17491.post@n5.nabble.com>
	<1464735505386-17498.post@n5.nabble.com>
	<1464812139424-17513.post@n5.nabble.com>
	<1464838031957-17518.post@n5.nabble.com>
	<1464899432875-17536.post@n5.nabble.com>
Message-ID: <1464912233803-17541.post@n5.nabble.com>

FourthDr wrote
> naturally the thing won't render and I can't clearly see the cuts with the
> other code.

Not sure if this is part of the problem but, add convexity=8 to you import
and it previews better.



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17541.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From who_doctor at hotmail.com  Thu Jun  2 21:47:23 2016
From: who_doctor at hotmail.com (FourthDr)
Date: Thu, 2 Jun 2016 18:47:23 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1464912233803-17541.post@n5.nabble.com>
References: <1464644772356-17476.post@n5.nabble.com>
	<CAEEmnrPW_u9Jez1S9aj8wcZzC7pcdxA83E3Q1BTcwM8hBLYvgg@mail.gmail.com>
	<1464657121377-17479.post@n5.nabble.com>
	<1464674541947-17481.post@n5.nabble.com>
	<1464721162015-17491.post@n5.nabble.com>
	<1464735505386-17498.post@n5.nabble.com>
	<1464812139424-17513.post@n5.nabble.com>
	<1464838031957-17518.post@n5.nabble.com>
	<1464899432875-17536.post@n5.nabble.com>
	<1464912233803-17541.post@n5.nabble.com>
Message-ID: <1464918443989-17542.post@n5.nabble.com>

Hi MichaelAtOz:

I get this error when I added that code:
     
     ERROR: Parser error in line 146: syntax error 
     ERROR: Compilation failed! 



--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17542.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Thu Jun  2 21:58:36 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Thu, 2 Jun 2016 18:58:36 -0700 (MST)
Subject: [OpenSCAD] STL without render?
In-Reply-To: <CAEEmnrO3MtK5xR+2Bon=oHJSAs2OT_TnKfrbok03R1J=ay6DqQ@mail.gmail.com>
References: <CAMOM=9r70opGqK-=g7gz4+NfgZoPTivfZyJcWc_=2FjsF1p4DQ@mail.gmail.com>
	<CAMOM=9rb7hx2ZLpwicVJrEJJVem6kO1WJ2AiDA_6XN3LhVFxBw@mail.gmail.com>
	<1464801757860-17510.post@n5.nabble.com>
	<1464862502722-17523.post@n5.nabble.com>
	<1464866698827-17524.post@n5.nabble.com>
	<CAMOM=9rpJA=kjChJLi2cFM--A6+vLFAJoqs46617YOy0RU-DMA@mail.gmail.com>
	<1464877744406-17530.post@n5.nabble.com>
	<CAEEmnrNB3eKHU6-LqhRpzwA5gbp=jFMV-S0YDf_AAfrrCei-nw@mail.gmail.com>
	<CAMOM=9oeYBSREJnd6=MgTyvkVuVsgvNVhSoD=dA010FfRUEH6Q@mail.gmail.com>
	<CAEEmnrO3MtK5xR+2Bon=oHJSAs2OT_TnKfrbok03R1J=ay6DqQ@mail.gmail.com>
Message-ID: <1464919116760-17543.post@n5.nabble.com>

I did some very basic speed tests and even so the results were very
surprising.

A sphere with 250000 facets ($fn=500) takes virtually no time to render
(less than 1sec). But if you render the union of a few disjoint spheres the
time grows very fast:

>                total #        total         total #
>                facets         time        of spheres ($fn=20)
> 		   362          0s              1 
> 		  3100        31s            10
> 		 31000      550s           100

The union of 10 coincident spheres (r=10, $fn=20) spent 800s!, that is much
more than 10 similar disjoint spheres.

What was a lot surprising for me was the time only one refined cylinder
spent to render.

> 		# facets           time
> 		 50000               7s
> 		100000             29s
> 		200000           129s
> 		250000           212s

To confirm that using polyhedron is faster, I wrote the following code that
is able to generate a set (union) of disjoint "spheres"  using only one call
of polyhedron:

> n = 20; // $fn
> m = n/2;
> N = 2000; // number of spheres
> radius = 10;
> 
> unitary_circle = [ for(i=[0:n]) [ cos(360*i/n), sin(360*i/n), 0 ] ];
> // sphere 
> sphere_vertices  = radius*[ for( j=[-m/2:m/2], p=unitary_circle ) 
>                             cos(180*j/m) * p + [0, 0, sin(180*j/m)] ];
> nvert = len(sphere_vertices);
> 
> // triangulated faces of the sphere
> faces = concat(
>             [ for(i=[0:n-1]) 
>                     [ 0, n+i+1, n+i+2 ] ] ,
>             [ for(j=[1:m-1], i=[0:n-1]) 
>                     [ (n+1)*j+i+1, (n+1)*j+i, (n+1)*(j+1)+i ] ] ,
>             [ for(j=[1:m-1], i=[0:n-1]) 
>                     [ (n+1)*j+i+1, (n+1)*(j+1)+i, (n+1)*(j+1)+i+1 ] ] ,
>             [ for(i=[0:n-1]) 
>                     [ (n+1)*(m-1)+i, (n+1)*(m+1)-1, (n+1)*(m-1)+i+1] ] ) ; 
> 
> // vertices of the union of N spheres
> unispheres = [ for(k=[1:N], p=sphere_vertices) p+[25*k,0,0] ];
> 
> // facets of the union of N spheres
> unifaces  = [ for(k=[1:N], f=faces) [for(i=f) i+nvert*(k-1) ] ];
> 
> polyhedron( points = unispheres, faces = unifaces);
> sphere(10); // a regular sphere

As expected, the set of spheres generated by this code renders a lot faster
than the regular union of OpenSCAD spheres. And the time seems to grow
linearly:

> timing of a set of sphere in one polyhedron
>                # facets       time        # spheres
>                  40000            2s         100
> 		400000          22s        1000 

A neuron with just 1600 disjoint $fn=20 spheres will require a lot of time
to render. I don't believe that doing hulls between spheres and the
cylinders would result in a significant gain because those parts need to be
unioned and that is the bottleneck. To get a significant reduction in the
render time you will need to code the generation of vertices and facets to
be sent to polyhedron as the code above do. Doing that for a whole neuron is
a huge task.

The lesson here is: to do CSG operations with B-rep (the internal
representation CGAL uses) works only for small number of primitives. To deal
with a great number of primitives OpenSCAD needs to look for alternative
internal representations.




--
View this message in context: http://forum.openscad.org/STL-without-render-tp17503p17543.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Fri Jun  3 02:23:49 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 2 Jun 2016 23:23:49 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1464918443989-17542.post@n5.nabble.com>
References: <CAEEmnrPW_u9Jez1S9aj8wcZzC7pcdxA83E3Q1BTcwM8hBLYvgg@mail.gmail.com>
	<1464657121377-17479.post@n5.nabble.com>
	<1464674541947-17481.post@n5.nabble.com>
	<1464721162015-17491.post@n5.nabble.com>
	<1464735505386-17498.post@n5.nabble.com>
	<1464812139424-17513.post@n5.nabble.com>
	<1464838031957-17518.post@n5.nabble.com>
	<1464899432875-17536.post@n5.nabble.com>
	<1464912233803-17541.post@n5.nabble.com>
	<1464918443989-17542.post@n5.nabble.com>
Message-ID: <1464935029765-17544.post@n5.nabble.com>

Like this

import("Cycl_XleftFrame_fixed_ml.stl", convexity=8);




-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17544.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Fri Jun  3 02:52:35 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Fri, 3 Jun 2016 08:52:35 +0200
Subject: [OpenSCAD] STL without render?
In-Reply-To: <1464919116760-17543.post@n5.nabble.com>
References: <CAMOM=9r70opGqK-=g7gz4+NfgZoPTivfZyJcWc_=2FjsF1p4DQ@mail.gmail.com>
	<CAMOM=9rb7hx2ZLpwicVJrEJJVem6kO1WJ2AiDA_6XN3LhVFxBw@mail.gmail.com>
	<1464801757860-17510.post@n5.nabble.com>
	<1464862502722-17523.post@n5.nabble.com>
	<1464866698827-17524.post@n5.nabble.com>
	<CAMOM=9rpJA=kjChJLi2cFM--A6+vLFAJoqs46617YOy0RU-DMA@mail.gmail.com>
	<1464877744406-17530.post@n5.nabble.com>
	<CAEEmnrNB3eKHU6-LqhRpzwA5gbp=jFMV-S0YDf_AAfrrCei-nw@mail.gmail.com>
	<CAMOM=9oeYBSREJnd6=MgTyvkVuVsgvNVhSoD=dA010FfRUEH6Q@mail.gmail.com>
	<CAEEmnrO3MtK5xR+2Bon=oHJSAs2OT_TnKfrbok03R1J=ay6DqQ@mail.gmail.com>
	<1464919116760-17543.post@n5.nabble.com>
Message-ID: <57512933.9010802@gmx.de>

On 06/03/2016 03:58 AM, Ronaldo wrote:
> The lesson here is: to do CSG operations with B-rep (the internal
> representation CGAL uses) works only for small number of primitives.
> To deal with a great number of primitives OpenSCAD needs to look
> for alternative internal representations.
> 
Yes, this is all pretty much known, and the discussion about
alternatives is also not new. The Problem is that there's no
real alternative in sight.

The page collecting some info is:
https://github.com/openscad/openscad/wiki/Project%3A-Survey-of-CSG-algorithms

ciao,
  Torsten.



From who_doctor at hotmail.com  Fri Jun  3 03:37:50 2016
From: who_doctor at hotmail.com (FourthDr)
Date: Fri, 3 Jun 2016 00:37:50 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1464935029765-17544.post@n5.nabble.com>
References: <1464657121377-17479.post@n5.nabble.com>
	<1464674541947-17481.post@n5.nabble.com>
	<1464721162015-17491.post@n5.nabble.com>
	<1464735505386-17498.post@n5.nabble.com>
	<1464812139424-17513.post@n5.nabble.com>
	<1464838031957-17518.post@n5.nabble.com>
	<1464899432875-17536.post@n5.nabble.com>
	<1464912233803-17541.post@n5.nabble.com>
	<1464918443989-17542.post@n5.nabble.com>
	<1464935029765-17544.post@n5.nabble.com>
Message-ID: <1464939470989-17546.post@n5.nabble.com>

Hi MichaelAtOz:

Definitely an improvement! Much more detail. It's a wonder it doesn't just
do that by default.



--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17546.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From who_doctor at hotmail.com  Fri Jun  3 03:54:57 2016
From: who_doctor at hotmail.com (FourthDr)
Date: Fri, 3 Jun 2016 00:54:57 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1464935029765-17544.post@n5.nabble.com>
References: <1464657121377-17479.post@n5.nabble.com>
	<1464674541947-17481.post@n5.nabble.com>
	<1464721162015-17491.post@n5.nabble.com>
	<1464735505386-17498.post@n5.nabble.com>
	<1464812139424-17513.post@n5.nabble.com>
	<1464838031957-17518.post@n5.nabble.com>
	<1464899432875-17536.post@n5.nabble.com>
	<1464912233803-17541.post@n5.nabble.com>
	<1464918443989-17542.post@n5.nabble.com>
	<1464935029765-17544.post@n5.nabble.com>
Message-ID: <1464940497679-17547.post@n5.nabble.com>

Hi MichaelAtOz:

I've been searching around for something that can fix/repair SLT or the
original source format that the STL's for the mill came in. Not much luck on
the source files original format. But along the way I found an interesting
plugin for commercial CAD apps like AutoCAD and Solidworks etc. called
3dprinttech. Links below:

https://blog.adafruit.com/2014/07/31/split-large-designs-into-printable-parts/
http://labs.cctech.co.in/3dprinttech/
https://apps.autodesk.com/en/Detail/Index?id=7059401767782074929&appLang=en&os=Win32_64

Unfortunately, it is 3 years old and has not been updated. The companies
website no longer has a labs sub-domain and you can only download it from
the AutoCAD app store. I'm not going to run out and buy AutoCAD obviously
for a plugin that probably doesn't work with the latest version.

Would be neat if OpenSCAD could do that. With the exception of also being
able to create connectors other than pegs as my printer doesn't handle small
hole/pegs/pins accurately enough for that to work.



--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17547.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Fri Jun  3 04:23:11 2016
From: nop.head at gmail.com (nop head)
Date: Fri, 3 Jun 2016 09:23:11 +0100
Subject: [OpenSCAD] STL without render?
In-Reply-To: <57512933.9010802@gmx.de>
References: <CAMOM=9r70opGqK-=g7gz4+NfgZoPTivfZyJcWc_=2FjsF1p4DQ@mail.gmail.com>
	<CAMOM=9rb7hx2ZLpwicVJrEJJVem6kO1WJ2AiDA_6XN3LhVFxBw@mail.gmail.com>
	<1464801757860-17510.post@n5.nabble.com>
	<1464862502722-17523.post@n5.nabble.com>
	<1464866698827-17524.post@n5.nabble.com>
	<CAMOM=9rpJA=kjChJLi2cFM--A6+vLFAJoqs46617YOy0RU-DMA@mail.gmail.com>
	<1464877744406-17530.post@n5.nabble.com>
	<CAEEmnrNB3eKHU6-LqhRpzwA5gbp=jFMV-S0YDf_AAfrrCei-nw@mail.gmail.com>
	<CAMOM=9oeYBSREJnd6=MgTyvkVuVsgvNVhSoD=dA010FfRUEH6Q@mail.gmail.com>
	<CAEEmnrO3MtK5xR+2Bon=oHJSAs2OT_TnKfrbok03R1J=ay6DqQ@mail.gmail.com>
	<1464919116760-17543.post@n5.nabble.com> <57512933.9010802@gmx.de>
Message-ID: <CAEEmnrN+rE4JA5a_Kahph_y1Y=5go6gY9+1YK28T5bB2A2pehw@mail.gmail.com>

I don't think B-rep is the problem. It is the fact that CGAL appears to do
nothing to short cut unions. I.e. it doesn't check for completely disjoint
objects and it doesn't seem to look for facets with no intersections and
pass those straight through. The only real work union needs to do is on the
facets where the objects overlap.

On 3 June 2016 at 07:52, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 06/03/2016 03:58 AM, Ronaldo wrote:
> > The lesson here is: to do CSG operations with B-rep (the internal
> > representation CGAL uses) works only for small number of primitives.
> > To deal with a great number of primitives OpenSCAD needs to look
> > for alternative internal representations.
> >
> Yes, this is all pretty much known, and the discussion about
> alternatives is also not new. The Problem is that there's no
> real alternative in sight.
>
> The page collecting some info is:
>
> https://github.com/openscad/openscad/wiki/Project%3A-Survey-of-CSG-algorithms
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160603/b22c4909/attachment.html>

From rcmpersiano at gmail.com  Fri Jun  3 08:46:23 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Fri, 3 Jun 2016 05:46:23 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1464899432875-17536.post@n5.nabble.com>
References: <1464639469729-17475.post@n5.nabble.com>
	<1464644772356-17476.post@n5.nabble.com>
	<CAEEmnrPW_u9Jez1S9aj8wcZzC7pcdxA83E3Q1BTcwM8hBLYvgg@mail.gmail.com>
	<1464657121377-17479.post@n5.nabble.com>
	<1464674541947-17481.post@n5.nabble.com>
	<1464721162015-17491.post@n5.nabble.com>
	<1464735505386-17498.post@n5.nabble.com>
	<1464812139424-17513.post@n5.nabble.com>
	<1464838031957-17518.post@n5.nabble.com>
	<1464899432875-17536.post@n5.nabble.com>
Message-ID: <1464957983236-17549.post@n5.nabble.com>

FourthDr wrote
> I'll want to do this for both prints Cycl_XrightFrame.stl and
> Cycl_XrleftFrame.stl. Please see attached.

Those two files have problems too. You probably could not puzzlecut them.
Have you tried to fix them with Netfabb or Meshlab? Sketchup was not helpful
this time. I have them fixed using Meshlab AND Netfabb site Torsten linked
above. Both are free.
Cycl_XleftFrame_fixed_ML.stl
<http://forum.openscad.org/file/n17549/Cycl_XleftFrame_fixed_ML.stl>  
Cycl_XrightFrame_Sk_fixed.stl
<http://forum.openscad.org/file/n17549/Cycl_XrightFrame_Sk_fixed.stl>  

> I'm using the default T puzzle piece because naturally the thing won't
> render and I can't clearly see the cuts with the other code. 

A change in the dovetail code could provide a larger peg.

> I've been searching around for something that can fix/repair SLT or the
> original source format that the STL's for the mill came in. Not much luck
> on
> the source files original format.

https://en.wikipedia.org/wiki/STL_%28file_format%29
<https://en.wikipedia.org/wiki/STL_%28file_format%29>  

> Would be neat if OpenSCAD could do that. With the exception of also being
> able to create connectors other than pegs as my printer doesn't handle
> small
> hole/pegs/pins accurately enough for that to work.

OpenSCAD already do that with a simple user code like puzzlecutlib.scad. No
reason to include it in the core. There is nothing fundamentally wrong with
puzzlecutlib.scad. The problems you had came from problematic stl's. For
this, there are tools out there.




--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17549.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Fri Jun  3 08:59:07 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Fri, 3 Jun 2016 05:59:07 -0700 (MST)
Subject: [OpenSCAD] STL without render?
In-Reply-To: <CAEEmnrN+rE4JA5a_Kahph_y1Y=5go6gY9+1YK28T5bB2A2pehw@mail.gmail.com>
References: <1464862502722-17523.post@n5.nabble.com>
	<1464866698827-17524.post@n5.nabble.com>
	<CAMOM=9rpJA=kjChJLi2cFM--A6+vLFAJoqs46617YOy0RU-DMA@mail.gmail.com>
	<1464877744406-17530.post@n5.nabble.com>
	<CAEEmnrNB3eKHU6-LqhRpzwA5gbp=jFMV-S0YDf_AAfrrCei-nw@mail.gmail.com>
	<CAMOM=9oeYBSREJnd6=MgTyvkVuVsgvNVhSoD=dA010FfRUEH6Q@mail.gmail.com>
	<CAEEmnrO3MtK5xR+2Bon=oHJSAs2OT_TnKfrbok03R1J=ay6DqQ@mail.gmail.com>
	<1464919116760-17543.post@n5.nabble.com> <57512933.9010802@gmx.de>
	<CAEEmnrN+rE4JA5a_Kahph_y1Y=5go6gY9+1YK28T5bB2A2pehw@mail.gmail.com>
Message-ID: <1464958747485-17550.post@n5.nabble.com>

nophead wrote
> I don't think B-rep is the problem. It is the fact that CGAL appears to do
> nothing to short cut unions. I.e. it doesn't check for completely disjoint
> objects and it doesn't seem to look for facets with no intersections and
> pass those straight through. The only real work union needs to do is on
> the
> facets where the objects overlap.

Bounding boxes could alleviate the problem. But bounding boxes grow after
each rotation for instance. It is good for simple cases.



--
View this message in context: http://forum.openscad.org/STL-without-render-tp17503p17550.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Fri Jun  3 09:16:19 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Fri, 3 Jun 2016 06:16:19 -0700 (MST)
Subject: [OpenSCAD] STL without render?
In-Reply-To: <57512933.9010802@gmx.de>
References: <1464801757860-17510.post@n5.nabble.com>
	<1464862502722-17523.post@n5.nabble.com>
	<1464866698827-17524.post@n5.nabble.com>
	<CAMOM=9rpJA=kjChJLi2cFM--A6+vLFAJoqs46617YOy0RU-DMA@mail.gmail.com>
	<1464877744406-17530.post@n5.nabble.com>
	<CAEEmnrNB3eKHU6-LqhRpzwA5gbp=jFMV-S0YDf_AAfrrCei-nw@mail.gmail.com>
	<CAMOM=9oeYBSREJnd6=MgTyvkVuVsgvNVhSoD=dA010FfRUEH6Q@mail.gmail.com>
	<CAEEmnrO3MtK5xR+2Bon=oHJSAs2OT_TnKfrbok03R1J=ay6DqQ@mail.gmail.com>
	<1464919116760-17543.post@n5.nabble.com> <57512933.9010802@gmx.de>
Message-ID: <1464959779723-17551.post@n5.nabble.com>

tp3 wrote
> Yes, this is all pretty much known, and the discussion about
> alternatives is also not new. The Problem is that there's no
> real alternative in sight.
> 
> The page collecting some info is:
> https://github.com/openscad/openscad/wiki/Project%3A-Survey-of-CSG-algorithms

Thank you for the reference. I am playing with F-rep (implicit
representation) that Doug has mentioned elsewhere. I have implemented simple
modelling and rendering techniques using just OpenSCAD language. It is
certainly not efficient that way but promising. Here is an example of a
twist of a holed cube:
<http://forum.openscad.org/file/n17551/Holed_cube_twist.png> 
The twisted hole was made in the F-rep form. The vertical hole was done by
CGAL from regular OpenSCAD cylinder. Imagine do that with B-rep directly...

Note that voxel based methods leads naturally to bounding box benefits. The
edges in the above image are rough because I have not implemented a feature
recognition method like a B-rep boolean operation inside a voxel.



--
View this message in context: http://forum.openscad.org/STL-without-render-tp17503p17551.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Fri Jun  3 11:13:30 2016
From: marius at kintel.net (Marius Kintel)
Date: Fri, 3 Jun 2016 11:13:30 -0400
Subject: [OpenSCAD] STL without render?
In-Reply-To: <CAEEmnrN+rE4JA5a_Kahph_y1Y=5go6gY9+1YK28T5bB2A2pehw@mail.gmail.com>
References: <CAMOM=9r70opGqK-=g7gz4+NfgZoPTivfZyJcWc_=2FjsF1p4DQ@mail.gmail.com>
	<CAMOM=9rb7hx2ZLpwicVJrEJJVem6kO1WJ2AiDA_6XN3LhVFxBw@mail.gmail.com>
	<1464801757860-17510.post@n5.nabble.com>
	<1464862502722-17523.post@n5.nabble.com>
	<1464866698827-17524.post@n5.nabble.com>
	<CAMOM=9rpJA=kjChJLi2cFM--A6+vLFAJoqs46617YOy0RU-DMA@mail.gmail.com>
	<1464877744406-17530.post@n5.nabble.com>
	<CAEEmnrNB3eKHU6-LqhRpzwA5gbp=jFMV-S0YDf_AAfrrCei-nw@mail.gmail.com>
	<CAMOM=9oeYBSREJnd6=MgTyvkVuVsgvNVhSoD=dA010FfRUEH6Q@mail.gmail.com>
	<CAEEmnrO3MtK5xR+2Bon=oHJSAs2OT_TnKfrbok03R1J=ay6DqQ@mail.gmail.com>
	<1464919116760-17543.post@n5.nabble.com> <57512933.9010802@gmx.de>
	<CAEEmnrN+rE4JA5a_Kahph_y1Y=5go6gY9+1YK28T5bB2A2pehw@mail.gmail.com>
Message-ID: <09930453-CC60-4BA1-8782-0505D570E4D9@kintel.net>

> On Jun 3, 2016, at 04:23 AM, nop head <nop.head at gmail.com> wrote:
> 
> I don't think B-rep is the problem. It is the fact that CGAL appears to do nothing to short cut unions. I.e. it doesn't check for completely disjoint objects and it doesn't seem to look for facets with no intersections and pass those straight through.

..which I believe is an effect of CGAL defining its B-Rep as Nef polyhedrons, which is an intersection of infinite planes, which makes it expensive to calculate the bounding box. I?m not 100% certain of the internals, but it?s pretty clear that they haven?t spend much (or any) time on performance optimization.

 -Marius



From rudolf at parkinbot.com  Fri Jun  3 16:53:54 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 3 Jun 2016 13:53:54 -0700 (MST)
Subject: [OpenSCAD] STL without render?
In-Reply-To: <09930453-CC60-4BA1-8782-0505D570E4D9@kintel.net>
References: <1464866698827-17524.post@n5.nabble.com>
	<CAMOM=9rpJA=kjChJLi2cFM--A6+vLFAJoqs46617YOy0RU-DMA@mail.gmail.com>
	<1464877744406-17530.post@n5.nabble.com>
	<CAEEmnrNB3eKHU6-LqhRpzwA5gbp=jFMV-S0YDf_AAfrrCei-nw@mail.gmail.com>
	<CAMOM=9oeYBSREJnd6=MgTyvkVuVsgvNVhSoD=dA010FfRUEH6Q@mail.gmail.com>
	<CAEEmnrO3MtK5xR+2Bon=oHJSAs2OT_TnKfrbok03R1J=ay6DqQ@mail.gmail.com>
	<1464919116760-17543.post@n5.nabble.com> <57512933.9010802@gmx.de>
	<CAEEmnrN+rE4JA5a_Kahph_y1Y=5go6gY9+1YK28T5bB2A2pehw@mail.gmail.com>
	<09930453-CC60-4BA1-8782-0505D570E4D9@kintel.net>
Message-ID: <1464987234992-17553.post@n5.nabble.com>

So, do you think one could 'spend this time' and some extra effort in
OpenSCAD before entering CGAL? That was my suggestion in the thread I'd
especially opened for discussion on this theme. 



--
View this message in context: http://forum.openscad.org/STL-without-render-tp17503p17553.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Fri Jun  3 17:06:54 2016
From: marius at kintel.net (Marius Kintel)
Date: Fri, 3 Jun 2016 17:06:54 -0400
Subject: [OpenSCAD] STL without render?
In-Reply-To: <1464987234992-17553.post@n5.nabble.com>
References: <1464866698827-17524.post@n5.nabble.com>
	<CAMOM=9rpJA=kjChJLi2cFM--A6+vLFAJoqs46617YOy0RU-DMA@mail.gmail.com>
	<1464877744406-17530.post@n5.nabble.com>
	<CAEEmnrNB3eKHU6-LqhRpzwA5gbp=jFMV-S0YDf_AAfrrCei-nw@mail.gmail.com>
	<CAMOM=9oeYBSREJnd6=MgTyvkVuVsgvNVhSoD=dA010FfRUEH6Q@mail.gmail.com>
	<CAEEmnrO3MtK5xR+2Bon=oHJSAs2OT_TnKfrbok03R1J=ay6DqQ@mail.gmail.com>
	<1464919116760-17543.post@n5.nabble.com> <57512933.9010802@gmx.de>
	<CAEEmnrN+rE4JA5a_Kahph_y1Y=5go6gY9+1YK28T5bB2A2pehw@mail.gmail.com>
	<09930453-CC60-4BA1-8782-0505D570E4D9@kintel.net>
	<1464987234992-17553.post@n5.nabble.com>
Message-ID: <1C5D5654-F51F-4B1A-8A0B-D47B6F8FB4F5@kintel.net>

> On Jun 3, 2016, at 16:53 PM, Parkinbot <rudolf at parkinbot.com> wrote:
> 
> So, do you think one could 'spend this time' and some extra effort in
> OpenSCAD before entering CGAL?

Yes, we could definitely do some optimization on our own if we have access to the bounding boxes.
My main concern is whether developer time is better spent moving away from CGAL rather than optimizing for CGAL.
..but if we write good code, we could potentially reuse some of that for future back-ends as well.

 -Marius



From db5765 at outlook.com  Fri Jun  3 17:10:42 2016
From: db5765 at outlook.com (Trygon)
Date: Fri, 3 Jun 2016 14:10:42 -0700 (MST)
Subject: [OpenSCAD] import - no warning on failure
In-Reply-To: <7586DEE6-B02B-4FD1-BCD4-1C1707C6D3CF@kintel.net>
References: <1464708517228-17487.post@n5.nabble.com>
	<CAGV6i+NYJSO9vPhkeKVizLsf4rQtggbFOYY9SXOXG_hTiWQN5A@mail.gmail.com>
	<7586DEE6-B02B-4FD1-BCD4-1C1707C6D3CF@kintel.net>
Message-ID: <1464988242273-17555.post@n5.nabble.com>

What still puzzles me about this issue, is the following:

As before simple OpenSCAD script:
  import("test1.dxf");

Preview (F5): "WARNING: Can't open DXF file 'C:\Program
Files\OpenSCAD\test1.dxf'."

Preview (F5): (no warning)

Now create file test1.dxf

Preview (F5): test1.dxf is displayed (no warning)

Delete file test1.dxf

Preview (F5): nothing displayed (no warning)

This behaviour may be obvious to those who understand the inner workings.

-Trygon




--
View this message in context: http://forum.openscad.org/import-no-warning-on-failure-tp17487p17555.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Fri Jun  3 17:24:28 2016
From: marius at kintel.net (Marius Kintel)
Date: Fri, 3 Jun 2016 17:24:28 -0400
Subject: [OpenSCAD] import - no warning on failure
In-Reply-To: <1464988242273-17555.post@n5.nabble.com>
References: <1464708517228-17487.post@n5.nabble.com>
	<CAGV6i+NYJSO9vPhkeKVizLsf4rQtggbFOYY9SXOXG_hTiWQN5A@mail.gmail.com>
	<7586DEE6-B02B-4FD1-BCD4-1C1707C6D3CF@kintel.net>
	<1464988242273-17555.post@n5.nabble.com>
Message-ID: <A1C767C1-2AF0-46B4-980A-834396FAC7A7@kintel.net>


> On Jun 3, 2016, at 17:10 PM, Trygon <db5765 at outlook.com> wrote:
> 
> What still puzzles me about this issue, is the following:
> [?]

We cache each import statement separately, including the last modification timestamp of the file.
If the file is not found, we thus cache that separately as an empty object (no timestamp).
..so your last refresh, after deleting the file, is hitting the earlier cached empty object.

 -Marius



From rudolf at parkinbot.com  Fri Jun  3 18:09:57 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 3 Jun 2016 15:09:57 -0700 (MST)
Subject: [OpenSCAD] STL without render?
In-Reply-To: <1C5D5654-F51F-4B1A-8A0B-D47B6F8FB4F5@kintel.net>
References: <1464877744406-17530.post@n5.nabble.com>
	<CAEEmnrNB3eKHU6-LqhRpzwA5gbp=jFMV-S0YDf_AAfrrCei-nw@mail.gmail.com>
	<CAMOM=9oeYBSREJnd6=MgTyvkVuVsgvNVhSoD=dA010FfRUEH6Q@mail.gmail.com>
	<CAEEmnrO3MtK5xR+2Bon=oHJSAs2OT_TnKfrbok03R1J=ay6DqQ@mail.gmail.com>
	<1464919116760-17543.post@n5.nabble.com> <57512933.9010802@gmx.de>
	<CAEEmnrN+rE4JA5a_Kahph_y1Y=5go6gY9+1YK28T5bB2A2pehw@mail.gmail.com>
	<09930453-CC60-4BA1-8782-0505D570E4D9@kintel.net>
	<1464987234992-17553.post@n5.nabble.com>
	<1C5D5654-F51F-4B1A-8A0B-D47B6F8FB4F5@kintel.net>
Message-ID: <1464991797385-17557.post@n5.nabble.com>

With  3D Fast Intersection and Distance Computation (AABB Tree)
<http://doc.cgal.org/latest/AABB_tree/index.html#aabb_tree_introduction>  
CGAL has some fast built-in intersection support that also offers a
predicate to do some fast intersection testing. I don't know whether
OpenSCAD employs this package at all or data formats are compatible, but in
my eyes it is a more than obvious optimization to check for intersection
*before* invoking any costly boolean operation. Also I'd try to restrict the
operation to at least a common bounding box if the test returns true. 



--
View this message in context: http://forum.openscad.org/STL-without-render-tp17503p17557.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jon at jonbondy.com  Sat Jun  4 13:31:37 2016
From: jon at jonbondy.com (jon)
Date: Sat, 4 Jun 2016 13:31:37 -0400
Subject: [OpenSCAD] puzzling behavior
Message-ID: <3f80cb35-d7b8-068f-47c4-ef6063982f06@jonbondy.com>

A friend demonstrated this to me: is this a known problem? It seems as 
if the implicit union() fails

Jon


module trimod(b, d, y, h){
polyhedron( points = [

[0, 0, 0], //point 0
[b, 0, 0], //point 1
[d, y, 0], //point 2
[0, 0, h], //point 3
[b, 0, h], //point 4
[d, y, h]], //point 5
faces = [
[3,4,5],
[0,3,4,1],
[4,5,2,1],
[0,1,2],
[0,2,5,3],
]
);
}

module ThisIsOK()
     trimod(3,4,6,1);

module ThisFails() {
     // when run with F6 the trimod loses most of its faces
     trimod(3,4,6,1);
     sphere(3);
     }

ThisIsOK();
!ThisFails();



From Torsten.Paul at gmx.de  Sat Jun  4 13:43:45 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sat, 4 Jun 2016 19:43:45 +0200
Subject: [OpenSCAD] puzzling behavior
In-Reply-To: <3f80cb35-d7b8-068f-47c4-ef6063982f06@jonbondy.com>
References: <3f80cb35-d7b8-068f-47c4-ef6063982f06@jonbondy.com>
Message-ID: <57531351.20903@gmx.de>

On 06/04/2016 07:31 PM, jon wrote:
> A friend demonstrated this to me: is this a known problem? 

Wrong winding order of one of the polygons.

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/FAQ#Why_is_my_model_showing_up_with_F5_but_not_F6.3F

ciao,
  Torsten.



From jon at jonbondy.com  Sat Jun  4 13:55:39 2016
From: jon at jonbondy.com (jon)
Date: Sat, 4 Jun 2016 13:55:39 -0400
Subject: [OpenSCAD] puzzling behavior
In-Reply-To: <57531351.20903@gmx.de>
References: <3f80cb35-d7b8-068f-47c4-ef6063982f06@jonbondy.com>
	<57531351.20903@gmx.de>
Message-ID: <c7e181e1-f256-f539-588e-4d1d727336ce@jonbondy.com>

Ah.  And this is invisible (and unreported) unless you show Thrown 
Together in F5 mode.

Thank you


On 6/4/2016 1:43 PM, Torsten Paul wrote:
> On 06/04/2016 07:31 PM, jon wrote:
>> A friend demonstrated this to me: is this a known problem?
> Wrong winding order of one of the polygons.
>
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/FAQ#Why_is_my_model_showing_up_with_F5_but_not_F6.3F
>
> ciao,
>    Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
> -----
> No virus found in this message.
> Checked by AVG - www.avg.com
> Version: 2016.0.7639 / Virus Database: 4591/12358 - Release Date: 06/04/16
>
>



From Torsten.Paul at gmx.de  Sat Jun  4 14:48:23 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sat, 4 Jun 2016 20:48:23 +0200
Subject: [OpenSCAD] puzzling behavior
In-Reply-To: <c7e181e1-f256-f539-588e-4d1d727336ce@jonbondy.com>
References: <3f80cb35-d7b8-068f-47c4-ef6063982f06@jonbondy.com>
	<57531351.20903@gmx.de>
	<c7e181e1-f256-f539-588e-4d1d727336ce@jonbondy.com>
Message-ID: <57532277.6030509@gmx.de>

On 06/04/2016 07:55 PM, jon wrote:
> Ah.  And this is invisible (and unreported) unless you show
> Thrown Together in F5 mode.
> 
Yes, I guess that really needs a better solution, both regarding
the visualization by default and also some additional error
checking.

ciao,
  Torsten.



From who_doctor at hotmail.com  Sun Jun  5 01:00:00 2016
From: who_doctor at hotmail.com (FourthDr)
Date: Sat, 4 Jun 2016 22:00:00 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1464957983236-17549.post@n5.nabble.com>
References: <1464644772356-17476.post@n5.nabble.com>
	<CAEEmnrPW_u9Jez1S9aj8wcZzC7pcdxA83E3Q1BTcwM8hBLYvgg@mail.gmail.com>
	<1464657121377-17479.post@n5.nabble.com>
	<1464674541947-17481.post@n5.nabble.com>
	<1464721162015-17491.post@n5.nabble.com>
	<1464735505386-17498.post@n5.nabble.com>
	<1464812139424-17513.post@n5.nabble.com>
	<1464838031957-17518.post@n5.nabble.com>
	<1464899432875-17536.post@n5.nabble.com>
	<1464957983236-17549.post@n5.nabble.com>
Message-ID: <1465102800925-17562.post@n5.nabble.com>

Hi Ronaldo:

Thanks for the fix. For future reference, what tools did you use to fix the
stl's? Other than netfabb/meshlab/sketchup are there any other useful
utilities you could recommend? You said yourself any one of those alone may
not find a problem or be able to fix a problem. Also, how did you actually
fix the stl files? Did you just use the automatic fix function or did you
have to go through a more elaborate repair procedure?

Now that I can actually render the files without errors, I have run into
another problem. The puzzlecutlib.scad simply slices the part in half and
places all the cuts on that one slice plain. It looks like I need some of
the cuts offset to avoid creating a thin peninsula in one area since the cut
goes the entire length of the width where I want to make a cut. Not sure if
I an explaining that clearly or not. See model.

puzzlecutdemo2-cut-test2.scad
<http://forum.openscad.org/file/n17562/puzzlecutdemo2-cut-test2.scad>  
Cycl_XrightFrame_Sk_fixed.stl
<http://forum.openscad.org/file/n17562/Cycl_XrightFrame_Sk_fixed.stl>  
puzzlecutlib.scad <http://forum.openscad.org/file/n17562/puzzlecutlib.scad>  



--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17562.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sun Jun  5 02:10:46 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 4 Jun 2016 23:10:46 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1465102800925-17562.post@n5.nabble.com>
References: <CAEEmnrPW_u9Jez1S9aj8wcZzC7pcdxA83E3Q1BTcwM8hBLYvgg@mail.gmail.com>
	<1464657121377-17479.post@n5.nabble.com>
	<1464674541947-17481.post@n5.nabble.com>
	<1464721162015-17491.post@n5.nabble.com>
	<1464735505386-17498.post@n5.nabble.com>
	<1464812139424-17513.post@n5.nabble.com>
	<1464838031957-17518.post@n5.nabble.com>
	<1464899432875-17536.post@n5.nabble.com>
	<1464957983236-17549.post@n5.nabble.com>
	<1465102800925-17562.post@n5.nabble.com>
Message-ID: <1465107046925-17563.post@n5.nabble.com>

If all you need is "for a 150mm^3 printing volume"

Why not cut it like so, each is <=100mm;

<http://forum.openscad.org/file/n17563/puzzlecut.jpg> 



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17563.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Sun Jun  5 12:19:41 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Sun, 5 Jun 2016 09:19:41 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1465102800925-17562.post@n5.nabble.com>
References: <CAEEmnrPW_u9Jez1S9aj8wcZzC7pcdxA83E3Q1BTcwM8hBLYvgg@mail.gmail.com>
	<1464657121377-17479.post@n5.nabble.com>
	<1464674541947-17481.post@n5.nabble.com>
	<1464721162015-17491.post@n5.nabble.com>
	<1464735505386-17498.post@n5.nabble.com>
	<1464812139424-17513.post@n5.nabble.com>
	<1464838031957-17518.post@n5.nabble.com>
	<1464899432875-17536.post@n5.nabble.com>
	<1464957983236-17549.post@n5.nabble.com>
	<1465102800925-17562.post@n5.nabble.com>
Message-ID: <1465143581708-17564.post@n5.nabble.com>

I don't recommend the use of Sketchup. I had used it because I am used to it
and had not much experience with other tools. But it is cumbersome. I think
Netfabb should be the first choice. The site Torsten referred is easy to use
and the results are usually good. You always can submit the fixed part again
if the first fixing wasn't enough. I think that was my procedure. You should
try it. Meshlab is a big software with lots of options but requires some
experience.

Regarding your cuts: I understand that you want to puzzlecut the part at
that line in order to strenght the joints by the mounting bolts. But I would
not cut it upright like you did because the printing will require support to
deal with the notches when the part is laid down on the printer table. I
would cut it laid down so the notches goes vertically as Torsten's image
shows. Anyway, you should choose the cutSize and xCut1 parameters to avoid
interference with part features and thin surfaces. With cutSize=6, your cut
seems to work. 

I still think dovetails are a better choice. I did not understood what were
your troubles with them. 



--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17564.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rl.ward at bigpond.com  Sun Jun  5 16:50:35 2016
From: rl.ward at bigpond.com (Rob Ward)
Date: Mon, 06 Jun 2016 06:50:35 +1000
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
	Current top level object is empty.
In-Reply-To: <1465143581708-17564.post@n5.nabble.com>
References: <CAEEmnrPW_u9Jez1S9aj8wcZzC7pcdxA83E3Q1BTcwM8hBLYvgg@mail.gmail.com>
	<1464657121377-17479.post@n5.nabble.com>
	<1464674541947-17481.post@n5.nabble.com>
	<1464721162015-17491.post@n5.nabble.com>
	<1464735505386-17498.post@n5.nabble.com>
	<1464812139424-17513.post@n5.nabble.com>
	<1464838031957-17518.post@n5.nabble.com>
	<1464899432875-17536.post@n5.nabble.com>
	<1464957983236-17549.post@n5.nabble.com>
	<1465102800925-17562.post@n5.nabble.com>
	<1465143581708-17564.post@n5.nabble.com>
Message-ID: <27DB34DF-13FD-4E94-A137-AA72268CC475@bigpond.com>

Just to throw in an experience I had of a small 'L' bracket part that snapped. There was no way I could brace it any more than I had, so I made up a batch of 5min epoxy and with a toothpick smeared and poked the glue back into the 30% fill. Then a point of weakness became very strong.
So my question is could you over dimension the parts to be joined, then remove the excess 'skin' and bond the two parts in that fashion? On a bigger area an old tooth brush could help penetrate the fill matrix quickly.  Marker indentations into the faces to be joined could help determine how much plastic to remove.

Rob

On 6 June 2016 2:19:41 AM AEST, Ronaldo <rcmpersiano at gmail.com> wrote:
>I don't recommend the use of Sketchup. I had used it because I am used
>to it
>and had not much experience with other tools. But it is cumbersome. I
>think
>Netfabb should be the first choice. The site Torsten referred is easy
>to use
>and the results are usually good. You always can submit the fixed part
>again
>if the first fixing wasn't enough. I think that was my procedure. You
>should
>try it. Meshlab is a big software with lots of options but requires
>some
>experience.
>
>Regarding your cuts: I understand that you want to puzzlecut the part
>at
>that line in order to strenght the joints by the mounting bolts. But I
>would
>not cut it upright like you did because the printing will require
>support to
>deal with the notches when the part is laid down on the printer table.
>I
>would cut it laid down so the notches goes vertically as Torsten's
>image
>shows. Anyway, you should choose the cutSize and xCut1 parameters to
>avoid
>interference with part features and thin surfaces. With cutSize=6, your
>cut
>seems to work. 
>
>I still think dovetails are a better choice. I did not understood what
>were
>your troubles with them. 
>
>
>
>--
>View this message in context:
>http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17564.html
>Sent from the OpenSCAD mailing list archive at Nabble.com.
>
>_______________________________________________
>OpenSCAD mailing list
>Discuss at lists.openscad.org
>http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

-- 
Sent from my Android
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160606/4a88455b/attachment.html>

From rcmpersiano at gmail.com  Sun Jun  5 17:19:55 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Sun, 5 Jun 2016 14:19:55 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <27DB34DF-13FD-4E94-A137-AA72268CC475@bigpond.com>
References: <1464674541947-17481.post@n5.nabble.com>
	<1464721162015-17491.post@n5.nabble.com>
	<1464735505386-17498.post@n5.nabble.com>
	<1464812139424-17513.post@n5.nabble.com>
	<1464838031957-17518.post@n5.nabble.com>
	<1464899432875-17536.post@n5.nabble.com>
	<1464957983236-17549.post@n5.nabble.com>
	<1465102800925-17562.post@n5.nabble.com>
	<1465143581708-17564.post@n5.nabble.com>
	<27DB34DF-13FD-4E94-A137-AA72268CC475@bigpond.com>
Message-ID: <1465161595947-17566.post@n5.nabble.com>

I am not sure I have understood well your problem, solution and question. Are
they about puzzlecutlib.scad cuts? In the puzzlecutlib demos, the parameter
"kerf" allows for control how tight or loose the joint will be. FourDr, who
is dealing with those issues, may have an experience to share.



--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17566.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rk-list at simple-is-better.org  Mon Jun  6 12:55:20 2016
From: rk-list at simple-is-better.org (Roland Koebler)
Date: Mon, 6 Jun 2016 18:55:20 +0200
Subject: [OpenSCAD] modifying default-parameters / accessing children of
	children?
Message-ID: <20160606165520.GA28531@localhost>

Hi,

I'm heavily using modules with default-parameters. Now, I would like to
locally use different default-parameters, so I don't need to give the
"new default parameters" at each module-invokation.

One way that looked sensible to me, is using a wrapper-module with
different default-parameters, but that doesn't work when using
children(i) in the module.

Questions:

- Is there a way to locally modify default-parameters?
- Is there a way to access the children of children or to unpack a group?


Details:

1. Example of a working wrapper-module:

   - Original module:

	module foo(a=1, b=2, c=3, d=4)
	{
	    ...
	}

    - Wrapper-module, to locally use different default-parameters, e.g. a=5, b=6.

	module myfoo(a=5, b=6, c=3, d=4)
	{
	    foo(a,b,c,d);
	}

    This works well, as long as "foo" doesn't use children(i).

2. Example with children:

   - Original module + invocation
     (slightly modified example from the documentation):

	module lineup(space=10)
	{
	    for(i=[0:$children-1])
		translate([space*i,0,0]) children(i);
	}

	lineup() {
	    sphere(d=8);
	    cube(7, center=true);
	    cylinder(d=7.5, h=8, center=true);
	}

    - Wrapper-module + invocation:
    
	module mylineup(space=20)
	{
	    lineup(space)
	    children();
	}

	mylineup() {
	    sphere(d=8);
	    cube(7, center=true);
	    cylinder(d=7.5, h=8, center=true);
	}

    Now, this fails, since lineup() now only sees 1 child, which
    consists of sphere+cube+cylinder.

    The following would work, but only for a defined number of children:

	module mylineup(space=20)
	{
	    lineup(space) {
		children(0);
		children(1);
		children(2);
	    }
	}

    So, is it possible to (a) unpack children, (b) access the children
    of children or (c) use some other way/workaround?


Best regards
Roland


From doug at moens.org  Mon Jun  6 15:36:20 2016
From: doug at moens.org (doug moen)
Date: Mon, 6 Jun 2016 15:36:20 -0400
Subject: [OpenSCAD] modifying default-parameters / accessing children of
	children?
In-Reply-To: <20160606165520.GA28531@localhost>
References: <20160606165520.GA28531@localhost>
Message-ID: <CAGV6i+OqRw03A8K1KeopFajfKK=QkkBf+d1YyLjg9mvcJbBK=w@mail.gmail.com>

I don't know a good answer to this, except that this has bitten me as well.
I'm interested to know if there is a better way in the current language.

If this turns into a feature request, then I'll note that this is related
to the "lazy union" proposal. Also, OpenSCAD2 has slightly different
semantics for when groups are formed, in order to fix this problem. In
OpenSCAD2, you could use any of the following to implement module myfoo and
mylineup:

        // no { } around the body means no extra group is constructed
        module myfoo(a=5, b=6, c=3, d=4)
            foo(a,b,c,d);

        // { } creates a group, 'each' unpacks a group
        module myfoo(a=5, b=6, c=3, d=4)
        {
            each foo(a,b,c,d);
        }

        // this works because an extra group is not constructed around
children()
        module mylineup(space=20)
        {
            lineup(space)
            children();
        }

Of course, I've left out the issue of backward compatibility, which would
need to be considered for any such change. Perhaps the 'each' operator from
OpenSCAD2 could be added for explicitly unpacking a group, without breaking
compatibility.

On 6 June 2016 at 12:55, Roland Koebler <rk-list at simple-is-better.org>
wrote:

> Hi,
>
> I'm heavily using modules with default-parameters. Now, I would like to
> locally use different default-parameters, so I don't need to give the
> "new default parameters" at each module-invokation.
>
> One way that looked sensible to me, is using a wrapper-module with
> different default-parameters, but that doesn't work when using
> children(i) in the module.
>
> Questions:
>
> - Is there a way to locally modify default-parameters?
> - Is there a way to access the children of children or to unpack a group?
>
>
> Details:
>
> 1. Example of a working wrapper-module:
>
>    - Original module:
>
>         module foo(a=1, b=2, c=3, d=4)
>         {
>             ...
>         }
>
>     - Wrapper-module, to locally use different default-parameters, e.g.
> a=5, b=6.
>
>         module myfoo(a=5, b=6, c=3, d=4)
>         {
>             foo(a,b,c,d);
>         }
>
>     This works well, as long as "foo" doesn't use children(i).
>
> 2. Example with children:
>
>    - Original module + invocation
>      (slightly modified example from the documentation):
>
>         module lineup(space=10)
>         {
>             for(i=[0:$children-1])
>                 translate([space*i,0,0]) children(i);
>         }
>
>         lineup() {
>             sphere(d=8);
>             cube(7, center=true);
>             cylinder(d=7.5, h=8, center=true);
>         }
>
>     - Wrapper-module + invocation:
>
>         module mylineup(space=20)
>         {
>             lineup(space)
>             children();
>         }
>
>         mylineup() {
>             sphere(d=8);
>             cube(7, center=true);
>             cylinder(d=7.5, h=8, center=true);
>         }
>
>     Now, this fails, since lineup() now only sees 1 child, which
>     consists of sphere+cube+cylinder.
>
>     The following would work, but only for a defined number of children:
>
>         module mylineup(space=20)
>         {
>             lineup(space) {
>                 children(0);
>                 children(1);
>                 children(2);
>             }
>         }
>
>     So, is it possible to (a) unpack children, (b) access the children
>     of children or (c) use some other way/workaround?
>
>
> Best regards
> Roland
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160606/f414c55a/attachment.html>

From who_doctor at hotmail.com  Mon Jun  6 16:07:19 2016
From: who_doctor at hotmail.com (FourthDr)
Date: Mon, 6 Jun 2016 13:07:19 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1465107046925-17563.post@n5.nabble.com>
References: <1464657121377-17479.post@n5.nabble.com>
	<1464674541947-17481.post@n5.nabble.com>
	<1464721162015-17491.post@n5.nabble.com>
	<1464735505386-17498.post@n5.nabble.com>
	<1464812139424-17513.post@n5.nabble.com>
	<1464838031957-17518.post@n5.nabble.com>
	<1464899432875-17536.post@n5.nabble.com>
	<1464957983236-17549.post@n5.nabble.com>
	<1465102800925-17562.post@n5.nabble.com>
	<1465107046925-17563.post@n5.nabble.com>
Message-ID: <1465243639369-17569.post@n5.nabble.com>

Hi:

That was my original design. But I thought is would come apart. I finally
did get the two parts cut with dove tail and separated into 4 individual
parts for printing over the weekend using the design you suggested.

As usual, I thought to myself what if the parts don't fit? So I quickly
created a sample coin shaped part and cut it in half for a test pint.

The first print was way too tight and the two half would not join. So I
revised the design using KERF, and printed a second version.

The second revision didn't fit either, the only change with kerf of .4 was a
gap at the bottom of the female dovetail cut outs. I though kerf would add a
gap along the entire cut? But apparently not. Or could it be a problem with
the dovetail code which was not originally part of the puzzlecutlib?

So how would I adjust the fit on the two parts of kerf doesn't do it?



--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17569.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From who_doctor at hotmail.com  Mon Jun  6 16:22:30 2016
From: who_doctor at hotmail.com (FourthDr)
Date: Mon, 6 Jun 2016 13:22:30 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1465161595947-17566.post@n5.nabble.com>
References: <1464721162015-17491.post@n5.nabble.com>
	<1464735505386-17498.post@n5.nabble.com>
	<1464812139424-17513.post@n5.nabble.com>
	<1464838031957-17518.post@n5.nabble.com>
	<1464899432875-17536.post@n5.nabble.com>
	<1464957983236-17549.post@n5.nabble.com>
	<1465102800925-17562.post@n5.nabble.com>
	<1465143581708-17564.post@n5.nabble.com>
	<27DB34DF-13FD-4E94-A137-AA72268CC475@bigpond.com>
	<1465161595947-17566.post@n5.nabble.com>
Message-ID: <1465244550987-17570.post@n5.nabble.com>

Hi Ronaldo:

I created a test coin over the weekend to test the fit of the split parts.
This only took a few minute per print compared to several hours for the
final parts. In my tests, the first print had a kerf of 0 and was so tight
the parts would not fit. On the second print with kerf of .4, again the
parts did not fit and the only difference was a gap at the bottom of the
dovetail cut instead of along the entire puzzle cut. What do you think is
the cause? See files below:

Test_Cylinder.scad
<http://forum.openscad.org/file/n17570/Test_Cylinder.scad>  
puzzlecutlib.scad <http://forum.openscad.org/file/n17570/puzzlecutlib.scad>  
Cylinder.stl <http://forum.openscad.org/file/n17570/Cylinder.stl>  



--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17570.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Mon Jun  6 19:15:33 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Mon, 6 Jun 2016 16:15:33 -0700 (MST)
Subject: [OpenSCAD] Advice optimizing render for large object
In-Reply-To: <1465248911484-17571.post@n5.nabble.com>
References: <1465248911484-17571.post@n5.nabble.com>
Message-ID: <1465254933032-17572.post@n5.nabble.com>

stuartlynn wrote
> Hi I am looking for some advice on how to optimize rendering on OpenSCAD.
> I am using geodata to produce a model of the US with counties heights
> sized by some associated value. Pulling the data from a database and
> generating the scad file using a python script. 
> 
> It takes a really long time to render (I actually haven't see it complete
> yet) and I was wondering if I am missing some optimisation tricks. In
> particular the geometries for each county shouldn't overlap at but I worry
> that SCAD is trying to compute unions assuming that they do. 
> 
> Would really appreciate any advice. 
> 
> The scad file can be grabbed here :
> https://github.com/stuartlynn/data_sculpture/blob/master/us_model2.scad
> 
> Thanks
> 
> Stuart

Unfortunately, ATM OpenSCAD does a top level union of all objects.
There is a change in the system to stop that, but I doubt it will be any
time soon.

As you basically do many render() linear_extrude()  polygon(); there is
little to optimise. 

It may be worth trying the development snapshot, It will often be more
efficient than the official release, but not by huge amounts.

BTW, I have had renders of over 24hrs on complex things.



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Advice-optimizing-render-for-large-object-tp17571p17572.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Mon Jun  6 20:39:37 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Mon, 6 Jun 2016 17:39:37 -0700 (MST)
Subject: [OpenSCAD] Advice optimizing render for large object
In-Reply-To: <1465248911484-17571.post@n5.nabble.com>
References: <1465248911484-17571.post@n5.nabble.com>
Message-ID: <1465259977709-17573.post@n5.nabble.com>

A union including about 3200 shapes will be very slow. OpenSCAD does not seem
to use any optimization for non-intersection arrangements. I did some
testing on that, and  results
<http://forum.openscad.org/No-bounding-box-test-for-union-before-entering-CGAL-tp17538.html>  
were discouraging.

I just did some fast test also for your code, using the first 200 of your
polygons and measured how long F6 will take. It took about 80s, which means,
that with suspected O(n?) full rendering will take about 6h. 
BTW it is not worth investing this time, because I got (as expected): 

WARNING: Object may not be a valid 2-manifold and may need repair! 

This is because of numeric problems with shapes having closely adjacent
faces, not being matched exactly. 

Don't know how good your programming is. In cases like this, you always have
the option to compose the full shape on your own by use of polyhedron. This
means, you have to either retrieve or calculate neighborhood relations first
to be able to do the facing. 
I don't see more land with current OpenSCAD. What about using Blender? 





--
View this message in context: http://forum.openscad.org/Advice-optimizing-render-for-large-object-tp17571p17573.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Mon Jun  6 22:27:24 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Mon, 6 Jun 2016 19:27:24 -0700 (MST)
Subject: [OpenSCAD] Advice optimizing render for large object
In-Reply-To: <1465248911484-17571.post@n5.nabble.com>
References: <1465248911484-17571.post@n5.nabble.com>
Message-ID: <1465266444165-17574.post@n5.nabble.com>

It took 2 hours, 32 minutes, 11 seconds on my 2.5GHz system. But got the
errors below.
The exported STL had lots of holes and degenerate faces.


Compiling design (CSG Tree generation)...
Rendering Polygon Mesh using CGAL...
ERROR: CGAL error in CGAL_Nef_polyhedron3(): CGAL ERROR: assertion
violation! Expr: e->incident_sface() != SFace_const_handle() File:
/opt/mxe/usr/x86_64-w64-mingw32.static/include/CGAL/Nef_S2/SM_const_decorator.h
Line: 326 
Geometries in cache: 9676
Geometry cache size in bytes: 38935640
CGAL Polyhedrons in cache: 13
CGAL cache size in bytes: 316064560
Total rendering time: 2 hours, 32 minutes, 11 seconds
   Top level object is a 3D object:
   Simple:         no
   Vertices:   112591
   Halfedges:  348212
   Edges:      174106
   Halffacets: 105486
   Facets:      52743
   Volumes:        20
WARNING: Object may not be a valid 2-manifold and may need repair! 
Rendering finished.



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Advice-optimizing-render-for-large-object-tp17571p17574.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Tue Jun  7 03:56:50 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Tue, 7 Jun 2016 00:56:50 -0700 (MST)
Subject: [OpenSCAD] Advice optimizing render for large object
In-Reply-To: <1465266444165-17574.post@n5.nabble.com>
References: <1465248911484-17571.post@n5.nabble.com>
	<1465266444165-17574.post@n5.nabble.com>
Message-ID: <1465286210447-17575.post@n5.nabble.com>

MichaelAtOz wrote
> It took 2 hours, 32 minutes, 11 seconds on my 2.5GHz system. But got the
> errors below.

As I read it, it took this time until an error was encounterd and the task
got dropped.



--
View this message in context: http://forum.openscad.org/Advice-optimizing-render-for-large-object-tp17571p17575.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From stuart.lynn at gmail.com  Tue Jun  7 09:03:39 2016
From: stuart.lynn at gmail.com (stuartlynn)
Date: Tue, 7 Jun 2016 06:03:39 -0700 (MST)
Subject: [OpenSCAD] Advice optimizing render for large object
In-Reply-To: <1465286210447-17575.post@n5.nabble.com>
References: <1465248911484-17571.post@n5.nabble.com>
	<1465266444165-17574.post@n5.nabble.com>
	<1465286210447-17575.post@n5.nabble.com>
Message-ID: <1465304619855-17576.post@n5.nabble.com>

Thanks everyone! That was such a fast and helpful approach. Ok so it sounds
like this might be a bit of a dead end. My next plan was to try and
construct the entire model in one go but I might try a few alternatives
first. 

Thanks again





--
View this message in context: http://forum.openscad.org/Advice-optimizing-render-for-large-object-tp17571p17576.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Tue Jun  7 11:59:56 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Tue, 7 Jun 2016 08:59:56 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1465244550987-17570.post@n5.nabble.com>
References: <1464735505386-17498.post@n5.nabble.com>
	<1464812139424-17513.post@n5.nabble.com>
	<1464838031957-17518.post@n5.nabble.com>
	<1464899432875-17536.post@n5.nabble.com>
	<1464957983236-17549.post@n5.nabble.com>
	<1465102800925-17562.post@n5.nabble.com>
	<1465143581708-17564.post@n5.nabble.com>
	<27DB34DF-13FD-4E94-A137-AA72268CC475@bigpond.com>
	<1465161595947-17566.post@n5.nabble.com>
	<1465244550987-17570.post@n5.nabble.com>
Message-ID: <1465315196206-17577.post@n5.nabble.com>

If you comment out the translate([0,-20,0]) in cutInTwo(), the render will
display the two parts joined together. And you will see the gap between them
around the peg when kerf is greater than 0. A low kerf will require more
precision from the 3D printer. If your printer is not well calibrated you
should try to enlarge the kerf.



--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17577.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From who_doctor at hotmail.com  Tue Jun  7 16:12:45 2016
From: who_doctor at hotmail.com (FourthDr)
Date: Tue, 7 Jun 2016 13:12:45 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1465315196206-17577.post@n5.nabble.com>
References: <1464812139424-17513.post@n5.nabble.com>
	<1464838031957-17518.post@n5.nabble.com>
	<1464899432875-17536.post@n5.nabble.com>
	<1464957983236-17549.post@n5.nabble.com>
	<1465102800925-17562.post@n5.nabble.com>
	<1465143581708-17564.post@n5.nabble.com>
	<27DB34DF-13FD-4E94-A137-AA72268CC475@bigpond.com>
	<1465161595947-17566.post@n5.nabble.com>
	<1465244550987-17570.post@n5.nabble.com>
	<1465315196206-17577.post@n5.nabble.com>
Message-ID: <1465330365286-17578.post@n5.nabble.com>

Hi Ronaldo:

That's what I did finally when I tested the kerf with the original T shaped
cut. Which worked correctly with a -.4 kerf. But when I switched back to the
dovetail code, the kerf is not working correctly. What happens is with a +.4
I get a gap at the top of the dovetails and when I use a -.4 I get a gap at
the bottom of the dovetails. Not what is suppose to happen. What I expected
it to do was change the gap size along the entire dovetail, larger gap with
negative values and smaller gap with positive values. But that is not what
is happening.



--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17578.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Tue Jun  7 19:06:22 2016
From: doug at moens.org (doug moen)
Date: Tue, 7 Jun 2016 19:06:22 -0400
Subject: [OpenSCAD] Negative Zero (-0)
In-Reply-To: <1464780694536-17502.post@n5.nabble.com>
References: <1464780694536-17502.post@n5.nabble.com>
Message-ID: <CAGV6i+POJ3Z8aMV9Fvok8s77GgbUyojwq_hwX0irT6C-bYYN_Q@mail.gmail.com>

Yes, I consider this a bug.

echo( 1 / (-0) ); // -inf
echo ( 1 / 0 ); // inf

Yup, negative zero exists and produces different results than positive zero.

echo ( -0 ); // 0

That's a bug, -0 should print as -0.

On 1 June 2016 at 07:31, william <whareg12 at yahoo.com> wrote:

> I know it is perhaps a bit pedantic but I report it anyway just to see if
> it
> is just an issue with my understanding.
>
> I tried to produce the -0 result as described in the documentation.  My
> attempt was:
>
> <http://forum.openscad.org/file/n17502/20160601_19.jpg>
>
> Should the last two echo results be "-0" instead of "0".
>
> William
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Negative-Zero-0-tp17502.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160607/19cf408c/attachment.html>

From wv99999 at gmail.com  Tue Jun  7 19:21:32 2016
From: wv99999 at gmail.com (wolf)
Date: Tue, 7 Jun 2016 16:21:32 -0700 (MST)
Subject: [OpenSCAD] Improve rendering speed
Message-ID: <1465341692808-17580.post@n5.nabble.com>

The attached code implements another strategy to generate complex shapes. It
avoids boolean operations, and thus can speed up shape generation by a
factor of 1000-10 000 times, reducing rendering times from hours to seconds.
The code is work-in-progress, and as such is likely to contain bugs. Please
feel free to tell me. It has been developed using OpenSCAD 15.3.

The code is based upon the idea that polyhedron(vertexlist,facelist) needs
two lists to create any possible shape. The list of vertices is user
defined, and from this list the list of faces is automatically generated. 

To do so, the shape-to-be-generated is built up of a list of vertices,
called a slice, having the same z coordinate. These slices are then stacked
one on top of the other, by concatenating the lists of slices into a single
vertex list and changing the z coordinate, to generate the shape. Since
changing the z coordinate amounts to moving the slices around in space, this
is the time to change the x and y coordinates as well, implementing a
shearing action.
This is as far as the code presented goes.

Language use: implementing rotations and translations using lists of
vertices differs substantially from rotating and translating shapes. To do
so in OpenSCAD, functions have to be nested one in another, making for code
that is difficult to read and maintain. Thus, I replace rotating and
translating with tilting and moving, as an outside recognition that the
words carry the same meaning only insofar their effects on the outside (i.e.
on the eventual shape) are concerned. The inside effects (i.e. on how the
code is designed to obtain the desired results) are very different.

Tilting the slices has so far not been implemented:  Tilting the slices in
space is more demanding, since unless the tilting axes are carefully chosen,
the resulting shape will be unrecognizably distorted.

Results: To create this shape
<http://forum.openscad.org/file/n17580/Screenshot_20160608_110911.png> 
generated this output:
Rendering Polygon Mesh using CGAL...
Geometries in cache: 2
Geometry cache size in bytes: 14421616
CGAL Polyhedrons in cache: 0
CGAL cache size in bytes: 0
Total rendering time: 0 hours, 2 minutes, 7 seconds
   Top level object is a 3D object:
   Simple:        yes
   Vertices:   100200
   Halfedges:  592184
   Edges:      296092
   Halffacets: 391788
   Facets:     195894
   Volumes:         2

Doing the same shape without the centre hole generated this output:
Rendering Polygon Mesh using CGAL...
Geometries in cache: 2
Geometry cache size in bytes: 28814128
CGAL Polyhedrons in cache: 0
CGAL cache size in bytes: 0
Total rendering time: 0 hours, 0 minutes, 5 seconds
   Top level object is a 3D object:
   Facets:     200396

For both runs, the cache has been flushed beforehand.

Let me know what you think

wolf


// Reverse Slicer
// build a complex shape from user definable functions
// as a faster alternative to multiple unions


// Start user definable data
$fn=100;
Slices=1000;
SliceAngle=[for( i=[0:1:Slices-1]) [3.6*i,0,0]];         // angle by which
each slice is tilted, currently not implemented
SlicePosition=[for( i=[1:1:Slices]) [0,0,(i-1)/50]];       // position of
each slice relative to origin
SliceRadius=[for( i=[1:1:Slices]) 10/pow(i,.3)];
function CircularSlice(r=1)= // returns a list of vertices, called a slice,
centered around the origin, by which a circle of radius r and height 0 will
be approximated
                         [let(Step=360/$fn)  for( i=[0:1:$fn-1])
[r*cos(i*Step),r*sin(i*Step),0]];
// End user definable data


// Start generating list
Offset_X=flatten([for( i=[0:1:Slices-1])
MinElement_X(CircularSlice(SliceRadius[i]))]);     // list of all slices
needed to construct shape
VertexList=flatten([for( i=[0:1:Slices-1])
MoveSlice(CircularSlice(SliceRadius[i]),SlicePosition[i])]);     // list of
all slices needed to construct shape
EndFace1=[for( i=[2:1:$fn-1]) [0,i-1,i]];     // list of all triangular
faces needed to close shape at one end
EndFace2=[let(F=(Slices-1)*$fn) for( i=[F:1:F+$fn-3]) [F,i+2,i+1]];      //
list of all triangular faces needed to close shape at other end
SideFaces=flatten([for( i=[0:1:$fn-1]) for( k=[0:1:Slices])
[[i+k*$fn,(i+$fn)+k*$fn,((i+1)%$fn)+k*$fn],[((i+1)%$fn)+k*$fn,(i+$fn)+k*$fn,((i+1)%$fn+$fn)+k*$fn]]
]); 
FacesList=concat(EndFace1,SideFaces,EndFace2);

function MinElement_X(Sl,A)=  // Element of slice farthest out on negative y
axis, defines distance of tilting (rotation) axis from x axis
                         min([for( i=[0:1:$fn-1]) let (m=ExtractSlice(Sl,i))
m[1]]);                        
function flatten(l) = [ for (a = l) for (b = a) b ] ;  
function ExtractSlice(List,Element)=flatten([for( i=Element) List[i]]);   //
extract a vector from a slice
function MoveSlice(Sl,SP)=   // move slice to [x,y,z]
                         [for( i=[0:1:$fn-1]) let (v=ExtractSlice(Sl,i))
[v[0]+SP[0], v[1]+SP[1], v[2]+SP[2]]];
// end generating list
                         
// generate shape from list                       
//difference() {   // test for CSG compatibility
polyhedron(VertexList,FacesList);
//cylinder(h=1000,r=1);}







--
View this message in context: http://forum.openscad.org/Improve-rendering-speed-tp17580.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Tue Jun  7 21:01:53 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Tue, 7 Jun 2016 18:01:53 -0700 (MST)
Subject: [OpenSCAD] Advice optimizing render for large object
In-Reply-To: <1465286210447-17575.post@n5.nabble.com>
References: <1465248911484-17571.post@n5.nabble.com>
	<1465266444165-17574.post@n5.nabble.com>
	<1465286210447-17575.post@n5.nabble.com>
Message-ID: <1465347713807-17581.post@n5.nabble.com>

Parkinbot wrote
> 
> MichaelAtOz wrote
>> It took 2 hours, 32 minutes, 11 seconds on my 2.5GHz system. But got the
>> errors below.
> As I read it, it took this time until an error was encounterd and the task
> got dropped.

No, I don't think so, a complete looking STL was exported.



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Advice-optimizing-render-for-large-object-tp17571p17581.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Wed Jun  8 01:56:13 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Tue, 7 Jun 2016 22:56:13 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1465330365286-17578.post@n5.nabble.com>
References: <1464838031957-17518.post@n5.nabble.com>
	<1464899432875-17536.post@n5.nabble.com>
	<1464957983236-17549.post@n5.nabble.com>
	<1465102800925-17562.post@n5.nabble.com>
	<1465143581708-17564.post@n5.nabble.com>
	<27DB34DF-13FD-4E94-A137-AA72268CC475@bigpond.com>
	<1465161595947-17566.post@n5.nabble.com>
	<1465244550987-17570.post@n5.nabble.com>
	<1465315196206-17577.post@n5.nabble.com>
	<1465330365286-17578.post@n5.nabble.com>
Message-ID: <1465365373459-17582.post@n5.nabble.com>

You are right. There is an error in the way dovetail() deals with kerf. 

Although it can be corrected I found a better way to define the joints.
Redefine makePuzzleStamp as:

> module makePuzzleStamp(kerf = 0) {
> 	difference() {
> 		//make the cube
> 		translate ([0,stampSize[0] / 2 - kerf,0])
> 			cube (stampSize, center = true);
> 		
> 		//make the cuts
> 		for ( i = cutLocations )
> 			translate([i,0,0]) tenon(cutSize, kerf, stampSize[2]); 

and at the beginning of puzzlecutlib.scad add:

> // profiles
> t = tan(12);
> dovetail = [ [-3/8, 1], [3/8, 1], [3/8-t, -0.1], [-3/8+t, -0.1] ] ;
> // rounded dovetail
> round_dt = [ [-1/2+1/7, 1-1/10], [-1/3+1/8,  1], [1/3-1/8,  1], [1/2-1/7,
> 1-1/10], 
>              [1/2-1/8,   1-2/7], [3/16,   -0.1], [-3/16, -0.1], [-1/2+1/8,
> 1-2/7], ] ;
> 
> t_lock  = [ [-1/4, -0.1], [-1/4, 1/3], [-1/2, 1/3], [-1/2,  3/4],
>             [ 1/2,  3/4], [ 1/2, 1/3], [ 1/4, 1/3], [ 1/4, -0.1] ];
> 
> profile = dovetail; // choose any of above profiles
> 
> module tenon(size=6, kerf=0, h=100) {
>     translate([0,0,-1])
>         linear_extrude(height = h+2)
>             offset(delta=-kerf) 
>                 polygon(size*profile);
> }

To define a new cut shape it is enough to provide its list of points as a
new profile. The profile round_dt is an example.



--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17582.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From maurizio.butti at gmail.com  Wed Jun  8 04:18:08 2016
From: maurizio.butti at gmail.com (maurizio butti)
Date: Wed, 8 Jun 2016 10:18:08 +0200
Subject: [OpenSCAD] Abbreviations
Message-ID: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>

I often use the Scite editor, based on the same Scintilla component as
OpenSCAD. As such I am really missing a very good Scite feature:
abbreviations. I implemented (in a rather crude way) abbreviation expansion
for common OpenSCAD constructs. This should allow for really fast coding.
As a bonus I added folding toggle as a keyboard shortcut (CTRL+*, also
added to the edit menu as "Toggle current fold").

*How this works:
Type a single character abbreviation in the editor, for example "c". Then
hit CTRL+B. The typed character has been replaced by "cube([]);". The
cursor is now positioned after the open square bracket for you to enter the
cube's dimensions.

*Full list of abreviations (the | character is not included but shows where
the caret will be positioned):
c cube([|]);
d difference() {\n\t|\n}
f for (i=[|]) {\n\t\n}
i intersection() {\n\t|\n}
m module |() {\n\t\n}
r rotate([|]);
s sphere(r=|);
t translate([|])
u union() {\n\t|\n}
x ,center=true|
y cylinder(r=|,h=);
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160608/5e63a776/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: editor-improvement.patch
Type: application/octet-stream
Size: 2928 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160608/5e63a776/attachment.patch>

From rudolf at parkinbot.com  Wed Jun  8 05:00:48 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Wed, 8 Jun 2016 02:00:48 -0700 (MST)
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <1465341692808-17580.post@n5.nabble.com>
References: <1465341692808-17580.post@n5.nabble.com>
Message-ID: <1465376448588-17584.post@n5.nabble.com>

I've played around with this approach for a while
http://www.thingiverse.com/thing:900137
and connected it with some interpolation scheme
http://www.thingiverse.com/thing:1208001
into a very general solution. 

Also this works astoundingly well, the solution completely ignores the
wicked self intersection problem, by leaving all burden to the user. It
executes amazingly fast for the price that it can not be formalized into a
general pattern without a lot of effort (also in time).

The implementation you show, could indeed find its way into the language
e.g. in the sense of a more flexible linear_extrude() taking a vector of
polygons plus a height for equi-distantanly or even a height vector for
freely Z-extruding along the polygon shapes. Also this is a linear scenario
the operator will have to fight with well-definedness of the polygon
sequence: 
1. each polygon has to be tested to be simple
2. the sequence has to be tested for self-intersection which is not trivial.
I guess, you will have to 
restrict the (simple) polygons to be convex, which is a strong restriction
and even then you will have to employ some intelligent scheme for
triangulation between the layers (see skin()). 

In my eyes, a first generalization step for language integration could be to
allow for a linear_extrude() with a height or/and a scale vector (or a
user-defined function) describing the Z coordinates and the scale of the
slices. Maybe also twisting could be done this way. 

Any *bending or rotation* will introduce non-linearity and a hole bunch of
self-intersection issues. 

Another much easier approach could be an operator that just piles a set of
3D-shapes on top (or aside) of each other using the first one (or z=0)  as
base. This will avoid the intersection and union problem by definition and
all knitting can be done before entering CGAL. See this example (which is
kept in 2D, because z-coordinate of a 3D shape cannot be quested in current
OpenSCAD to grand for non-interscection).
<http://forum.openscad.org/file/n17584/pile.png> 

> Z_pile(100)
> {
>   square(10, center = true);
>   square(20, center = true);
>   square(30, center = true);
>   square(10, center = true);
> }
> 
> module Z_pile(h = 100)
> {
>   echo($children); 
>   dh = h/$children; 
>  for(i=[0:$children-1])
>    translate([0, 0, i*dh])
>    linear_extrude(height = dh)
>     children(i); 
> }


  



--
View this message in context: http://forum.openscad.org/Improve-rendering-speed-tp17580p17584.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From alex at alexgibson.net  Wed Jun  8 05:57:39 2016
From: alex at alexgibson.net (alex at alexgibson.net)
Date: Wed, 08 Jun 2016 02:57:39 -0700
Subject: [OpenSCAD] Abbreviations
Message-ID: <20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>

Hi Maurizio,

This sounds great!!!
For stupid/busy people - how do I install your patch to try it in Linux
and/or Windows please?

Cheers
Alex


> -------- Original Message --------
> Subject: [OpenSCAD] Abbreviations
> From: maurizio butti <maurizio.butti at gmail.com>
> Date: Wed, June 08, 2016 9:18 am
> To: discuss at lists.openscad.org
> 
> 
> I often use the Scite editor, based on the same Scintilla component as
> OpenSCAD. As such I am really missing a very good Scite feature:
> abbreviations. I implemented (in a rather crude way) abbreviation expansion
> for common OpenSCAD constructs. This should allow for really fast coding.
> As a bonus I added folding toggle as a keyboard shortcut (CTRL+*, also
> added to the edit menu as "Toggle current fold").
> 
> *How this works:
> Type a single character abbreviation in the editor, for example "c". Then
> hit CTRL+B. The typed character has been replaced by "cube([]);". The
> cursor is now positioned after the open square bracket for you to enter the
> cube's dimensions.
> 
> *Full list of abreviations (the | character is not included but shows where
> the caret will be positioned):
> c cube([|]);
> d difference() {\n\t|\n}
> f for (i=[|]) {\n\t\n}
> i intersection() {\n\t|\n}
> m module |() {\n\t\n}
> r rotate([|]);
> s sphere(r=|);
> t translate([|])
> u union() {\n\t|\n}
> x ,center=true|
> y cylinder(r=|,h=);<hr>_______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


From Torsten.Paul at gmx.de  Wed Jun  8 06:20:46 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Wed, 8 Jun 2016 12:20:46 +0200
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
Message-ID: <trinity-ef074695-3a67-4365-bfc2-880b2e42d263-1465381246005@3capp-gmx-bs71>

I think that could be integrated into: https://github.com/openscad/openscad/pull/905

The main thing missing there (and in the attached patch) is to move
the substituions into a separate configuration file.

ciao,
  Torsten.


From maurizio.butti at gmail.com  Wed Jun  8 08:22:20 2016
From: maurizio.butti at gmail.com (buttim)
Date: Wed, 8 Jun 2016 05:22:20 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <trinity-ef074695-3a67-4365-bfc2-880b2e42d263-1465381246005@3capp-gmx-bs71>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<trinity-ef074695-3a67-4365-bfc2-880b2e42d263-1465381246005@3capp-gmx-bs71>
Message-ID: <1465388540429-17587.post@n5.nabble.com>

It would be great to see my little mod integrated!
As I said the code is quite crude. I thought about moving the subs in a cfg
but was not sure of the correct way of doing it. Still I'm not sure if that
would really help since the language seems pretty stable and in any case the
most basic and often used "bricks" are not going to change any time soon.

tp3 wrote
> I think that could be integrated into:
> https://github.com/openscad/openscad/pull/905
> 
> The main thing missing there (and in the attached patch) is to move
> the substituions into a separate configuration file.
> 
> ciao,
>   Torsten.
> 
> _______________________________________________
> OpenSCAD mailing list

> Discuss at .openscad

> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org





--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17587.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From maurizio.butti at gmail.com  Wed Jun  8 08:32:43 2016
From: maurizio.butti at gmail.com (buttim)
Date: Wed, 8 Jun 2016 05:32:43 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>
Message-ID: <1465389163871-17588.post@n5.nabble.com>

I'm not the best one to reply to this question but I'll do my best.
Basically you should download the source, apply the patch i submitted (via
the patch command) and the compile everything.
The steps for compiling can be found in OpenSCAD README.md file.

Although building for Linux is feasible it is still quite a lengthy process.
The Windows build is quite a nightmare though.

Though, since this little mod seems to have spread some interest you'd
better wait for it to be integrated and the binary be available in the
development snapshots.


alexgibson wrote
> This sounds great!!!
> For stupid/busy people - how do I install your patch to try it in Linux
> and/or Windows please?





--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17588.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Wed Jun  8 08:43:07 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Wed, 8 Jun 2016 14:43:07 +0200
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <1465388540429-17587.post@n5.nabble.com>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<trinity-ef074695-3a67-4365-bfc2-880b2e42d263-1465381246005@3capp-gmx-bs71>,
	<1465388540429-17587.post@n5.nabble.com>
Message-ID: <trinity-bf09bf36-2c2a-44bd-9ccc-39c2b32fec5a-1465389787417@3capp-gmx-bs71>

Yes, I agree the feature would be nice to have. It's not so
much about the language changing, but about the possibility
to enable/disable it (basically https://xkcd.com/1172/) and
give the option for power users to extend this by editing the
config file (I don't think there's a huge chance of getting
this easily configurable anytime soon).
The infrastructure for that is mostly there and already used
to configure the editor and render color schemes.

ciao,
  Torsten.


From Torsten.Paul at gmx.de  Wed Jun  8 08:47:09 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Wed, 8 Jun 2016 14:47:09 +0200
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <1465389163871-17588.post@n5.nabble.com>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>,
	<1465389163871-17588.post@n5.nabble.com>
Message-ID: <trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>

> Though, since this little mod seems to have spread some interest you'd
> better wait for it to be integrated and the binary be available in the
> development snapshots.
>
The Linux nightly builds are always based on the master branch, so
it would pick it up only when officially included.

I can try to kick off a special Windows build though.

ciao,
  Torsten.


From maurizio.butti at gmail.com  Wed Jun  8 08:48:27 2016
From: maurizio.butti at gmail.com (buttim)
Date: Wed, 8 Jun 2016 05:48:27 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <trinity-bf09bf36-2c2a-44bd-9ccc-39c2b32fec5a-1465389787417@3capp-gmx-bs71>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<trinity-ef074695-3a67-4365-bfc2-880b2e42d263-1465381246005@3capp-gmx-bs71>
	<1465388540429-17587.post@n5.nabble.com>
	<trinity-bf09bf36-2c2a-44bd-9ccc-39c2b32fec5a-1465389787417@3capp-gmx-bs71>
Message-ID: <CALe4i4u_eZ+Y6LEapZcb9+6JZvb9etwKTErw=5K3DPXLTm+F+w@mail.gmail.com>

Got it!
What about integrating the mod as-is and adding the external cfg in the
near future?
(A bit greedy for having the abbrevs on my windows machine; trying hard to
recompile for windows)

On Wed, Jun 8, 2016 at 2:44 PM, tp3 [via OpenSCAD] <
ml-node+s1091067n17589h34 at n5.nabble.com> wrote:

> Yes, I agree the feature would be nice to have. It's not so
> much about the language changing, but about the possibility
> to enable/disable it (basically https://xkcd.com/1172/) and
> give the option for power users to extend this by editing the
> config file (I don't think there's a huge chance of getting
> this easily configurable anytime soon).
> The infrastructure for that is mostly there and already used
> to configure the editor and render color schemes.
>
> ciao,
>   Torsten.
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17589&i=0>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> -- Torsten
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/Abbreviations-tp17583p17589.html
> To unsubscribe from Abbreviations, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17583&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3NTgzfDE4OTg0NTUyNTk=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17591.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160608/9356982b/attachment.html>

From jon at jonbondy.com  Wed Jun  8 09:30:25 2016
From: jon at jonbondy.com (jon)
Date: Wed, 8 Jun 2016 09:30:25 -0400
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <trinity-bf09bf36-2c2a-44bd-9ccc-39c2b32fec5a-1465389787417@3capp-gmx-bs71>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<trinity-ef074695-3a67-4365-bfc2-880b2e42d263-1465381246005@3capp-gmx-bs71>
	<1465388540429-17587.post@n5.nabble.com>
	<trinity-bf09bf36-2c2a-44bd-9ccc-39c2b32fec5a-1465389787417@3capp-gmx-bs71>
Message-ID: <315524a5-7a7c-5169-6eb3-af3fd52fd0a5@jonbondy.com>

I can type "cube([" faster than I can type "c" and then some bizarre key 
combination.  I am pleased that this feels like progress to some of you, 
but for me, it is just awkward.  I am not a complex-shortcut-key kind of 
a guy (but recognize that many of you are).  So.  Are there other 
options, such as a simpler key (like <escape>) or a delay?

Thanks for listening!

Jon


On 6/8/2016 8:43 AM, Torsten Paul wrote:
> Yes, I agree the feature would be nice to have. It's not so
> much about the language changing, but about the possibility
> to enable/disable it (basically https://xkcd.com/1172/) and
> give the option for power users to extend this by editing the
> config file (I don't think there's a huge chance of getting
> this easily configurable anytime soon).
> The infrastructure for that is mostly there and already used
> to configure the editor and render color schemes.
>
> ciao,
>    Torsten.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
> -----
> No virus found in this message.
> Checked by AVG - www.avg.com
> Version: 2016.0.7639 / Virus Database: 4598/12382 - Release Date: 06/08/16
>
>



From maurizio.butti at gmail.com  Wed Jun  8 09:50:01 2016
From: maurizio.butti at gmail.com (buttim)
Date: Wed, 8 Jun 2016 06:50:01 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <315524a5-7a7c-5169-6eb3-af3fd52fd0a5@jonbondy.com>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<trinity-ef074695-3a67-4365-bfc2-880b2e42d263-1465381246005@3capp-gmx-bs71>
	<1465388540429-17587.post@n5.nabble.com>
	<trinity-bf09bf36-2c2a-44bd-9ccc-39c2b32fec5a-1465389787417@3capp-gmx-bs71>
	<315524a5-7a7c-5169-6eb3-af3fd52fd0a5@jonbondy.com>
Message-ID: <CALe4i4vgqsUzrU-UPJjoKx+WTk6j=RuTX7poiD3D5kzMFyJTFA@mail.gmail.com>

I wouldn't define CTRL+B as a bizarre shortcut. Not more than the standard
copy CTRL+C and surely less than CTRL+SHIFT+F that OpenSCAD already uses
for replace. The expansion is actually accessible via the menu (which lists
the shortcut so that one can learn it for the next time).
Il will become even less bizarre since 90%+ of the constructs are
expandable that way; hence a very frequent use of the shortcut.
In terms of speed the right comparison is for cube([]);<left><left>left>
(not 6 keystrokes but 12). And it is even more evident for intersection (2
keystrokes against 20+).
I chose the keystroke because Scite already uses the same. ESC would be
nice but seems a bit nonstandard/dangerous to me. A timeout would be
definitely not desirable for most users  I'm afraid.
A possible alternative would be the combo CTRL+SPACE, which some editors
use for keyword completion. But it still is as "complex" as the current one
(although the space key is bigger and therefore easier to hit).
The occasional OpenSCAD users probably won't gain anything from
abbreviations, but people who spend a few hours with the editor would
probably benefit.

On Wed, Jun 8, 2016 at 3:31 PM, jon_bondy [via OpenSCAD] <
ml-node+s1091067n17592h27 at n5.nabble.com> wrote:

> I can type "cube([" faster than I can type "c" and then some bizarre key
> combination.  I am pleased that this feels like progress to some of you,
> but for me, it is just awkward.  I am not a complex-shortcut-key kind of
> a guy (but recognize that many of you are).  So.  Are there other
> options, such as a simpler key (like <escape>) or a delay?
>
> Thanks for listening!
>
> Jon
>
>
> On 6/8/2016 8:43 AM, Torsten Paul wrote:
>
> > Yes, I agree the feature would be nice to have. It's not so
> > much about the language changing, but about the possibility
> > to enable/disable it (basically https://xkcd.com/1172/) and
> > give the option for power users to extend this by editing the
> > config file (I don't think there's a huge chance of getting
> > this easily configurable anytime soon).
> > The infrastructure for that is mostly there and already used
> > to configure the editor and render color schemes.
> >
> > ciao,
> >    Torsten.
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > [hidden email] <http:///user/SendEmail.jtp?type=node&node=17592&i=0>
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> >
> >
> >
> > -----
> > No virus found in this message.
> > Checked by AVG - www.avg.com
> > Version: 2016.0.7639 / Virus Database: 4598/12382 - Release Date:
> 06/08/16
> >
> >
>
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17592&i=1>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/Abbreviations-tp17583p17592.html
> To unsubscribe from Abbreviations, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17583&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3NTgzfDE4OTg0NTUyNTk=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17593.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160608/033a1f64/attachment.html>

From doug at moens.org  Wed Jun  8 09:57:42 2016
From: doug at moens.org (doug moen)
Date: Wed, 8 Jun 2016 09:57:42 -0400
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <315524a5-7a7c-5169-6eb3-af3fd52fd0a5@jonbondy.com>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<trinity-ef074695-3a67-4365-bfc2-880b2e42d263-1465381246005@3capp-gmx-bs71>
	<1465388540429-17587.post@n5.nabble.com>
	<trinity-bf09bf36-2c2a-44bd-9ccc-39c2b32fec5a-1465389787417@3capp-gmx-bs71>
	<315524a5-7a7c-5169-6eb3-af3fd52fd0a5@jonbondy.com>
Message-ID: <CAGV6i+M2ah4fdJfkSMHeK74F847pyYXC-XhkN2A+4xZmqJz2YQ@mail.gmail.com>

Jon's response is why we need a separate config file, in order for this to
be useable. This is a power user feature, and power users like to configure
things.

My keyboard layout is obviously different from Jon's, since I can type
ctrl-B far more easily than hit Esc. I would personally prefer Tab for
keyword expansion, since I'm already used to that from using the bash shell.

On 8 June 2016 at 09:30, jon <jon at jonbondy.com> wrote:

> I can type "cube([" faster than I can type "c" and then some bizarre key
> combination.  I am pleased that this feels like progress to some of you,
> but for me, it is just awkward.  I am not a complex-shortcut-key kind of a
> guy (but recognize that many of you are).  So.  Are there other options,
> such as a simpler key (like <escape>) or a delay?
>
> Thanks for listening!
>
> Jon
>
>
>
> On 6/8/2016 8:43 AM, Torsten Paul wrote:
>
>> Yes, I agree the feature would be nice to have. It's not so
>> much about the language changing, but about the possibility
>> to enable/disable it (basically https://xkcd.com/1172/) and
>> give the option for power users to extend this by editing the
>> config file (I don't think there's a huge chance of getting
>> this easily configurable anytime soon).
>> The infrastructure for that is mostly there and already used
>> to configure the editor and render color schemes.
>>
>> ciao,
>>    Torsten.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>> -----
>> No virus found in this message.
>> Checked by AVG - www.avg.com
>> Version: 2016.0.7639 / Virus Database: 4598/12382 - Release Date: 06/08/16
>>
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160608/f44d609d/attachment.html>

From maurizio.butti at gmail.com  Wed Jun  8 10:02:57 2016
From: maurizio.butti at gmail.com (buttim)
Date: Wed, 8 Jun 2016 07:02:57 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <CAGV6i+M2ah4fdJfkSMHeK74F847pyYXC-XhkN2A+4xZmqJz2YQ@mail.gmail.com>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<trinity-ef074695-3a67-4365-bfc2-880b2e42d263-1465381246005@3capp-gmx-bs71>
	<1465388540429-17587.post@n5.nabble.com>
	<trinity-bf09bf36-2c2a-44bd-9ccc-39c2b32fec5a-1465389787417@3capp-gmx-bs71>
	<315524a5-7a7c-5169-6eb3-af3fd52fd0a5@jonbondy.com>
	<CAGV6i+M2ah4fdJfkSMHeK74F847pyYXC-XhkN2A+4xZmqJz2YQ@mail.gmail.com>
Message-ID: <CALe4i4tL4ZgugYgu+q_C4q=_edz=EtY_8=WU2a4bAAdRTNo6Hg@mail.gmail.com>

An external cfg is not a problem for me;I'd be glad to implement it (or
even better steal the implementation from Scite)

But a configurable shortcut modifiable by the settings page is something
that goes beyond my knowledge of the Qt environment and OpenSCAD source
code.

On Wed, Jun 8, 2016 at 3:58 PM, doug.moen [via OpenSCAD] <
ml-node+s1091067n17594h89 at n5.nabble.com> wrote:

> Jon's response is why we need a separate config file, in order for this to
> be useable. This is a power user feature, and power users like to configure
> things.
>
> My keyboard layout is obviously different from Jon's, since I can type
> ctrl-B far more easily than hit Esc. I would personally prefer Tab for
> keyword expansion, since I'm already used to that from using the bash shell.
>
> On 8 June 2016 at 09:30, jon <[hidden email]
> <http:///user/SendEmail.jtp?type=node&node=17594&i=0>> wrote:
>
>> I can type "cube([" faster than I can type "c" and then some bizarre key
>> combination.  I am pleased that this feels like progress to some of you,
>> but for me, it is just awkward.  I am not a complex-shortcut-key kind of a
>> guy (but recognize that many of you are).  So.  Are there other options,
>> such as a simpler key (like <escape>) or a delay?
>>
>> Thanks for listening!
>>
>> Jon
>>
>>
>>
>> On 6/8/2016 8:43 AM, Torsten Paul wrote:
>>
>>> Yes, I agree the feature would be nice to have. It's not so
>>> much about the language changing, but about the possibility
>>> to enable/disable it (basically https://xkcd.com/1172/) and
>>> give the option for power users to extend this by editing the
>>> config file (I don't think there's a huge chance of getting
>>> this easily configurable anytime soon).
>>> The infrastructure for that is mostly there and already used
>>> to configure the editor and render color schemes.
>>>
>>> ciao,
>>>    Torsten.
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17594&i=1>
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>>
>>> -----
>>> No virus found in this message.
>>> Checked by AVG - www.avg.com
>>> Version: 2016.0.7639 / Virus Database: 4598/12382 - Release Date:
>>> 06/08/16
>>>
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17594&i=2>
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17594&i=3>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/Abbreviations-tp17583p17594.html
> To unsubscribe from Abbreviations, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17583&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3NTgzfDE4OTg0NTUyNTk=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17595.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160608/95aef825/attachment.html>

From R.E.Wolff at BitWizard.nl  Wed Jun  8 10:18:09 2016
From: R.E.Wolff at BitWizard.nl (Rogier Wolff)
Date: Wed, 8 Jun 2016 16:18:09 +0200
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <CAGV6i+M2ah4fdJfkSMHeK74F847pyYXC-XhkN2A+4xZmqJz2YQ@mail.gmail.com>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<trinity-ef074695-3a67-4365-bfc2-880b2e42d263-1465381246005@3capp-gmx-bs71>
	<1465388540429-17587.post@n5.nabble.com>
	<trinity-bf09bf36-2c2a-44bd-9ccc-39c2b32fec5a-1465389787417@3capp-gmx-bs71>
	<315524a5-7a7c-5169-6eb3-af3fd52fd0a5@jonbondy.com>
	<CAGV6i+M2ah4fdJfkSMHeK74F847pyYXC-XhkN2A+4xZmqJz2YQ@mail.gmail.com>
Message-ID: <20160608141808.GE5425@BitWizard.nl>

On Wed, Jun 08, 2016 at 09:57:42AM -0400, doug moen wrote:
> Jon's response is why we need a separate config file, in order for this to
> be useable. This is a power user feature, and power users like to configure
> things.
> 
> My keyboard layout is obviously different from Jon's, since I can type
> ctrl-B far more easily than hit Esc. I would personally prefer Tab for
> keyword expansion, since I'm already used to that from using the bash shell.

I'm used to "left-alt - / " to do the expansion. It expands what I've
typed so far to the closest matching string. So while editing openscad
stuff, c<leftalt-/> will probably expand to cube. Alas, not the
parentheses and brackets. To explain this some more: cl<leftalt-/>
will expand to "closest". because its' there 4 lines up.

If there is a shortcut I think I'd like alt-C to be say cube([]) with
after this the cursor inside the brackets.... Problem is that
cylinders start with a c too. :-(

IMHO, when you work with openscad, you use the primitives to make
modules you use. So quickly after starting a project you're no longer
using cubes and cylinders but higher level objects that you defined...

	Roger. 

> On 8 June 2016 at 09:30, jon <jon at jonbondy.com> wrote:
> 
> > I can type "cube([" faster than I can type "c" and then some bizarre key
> > combination.  I am pleased that this feels like progress to some of you,
> > but for me, it is just awkward.  I am not a complex-shortcut-key kind of a
> > guy (but recognize that many of you are).  So.  Are there other options,
> > such as a simpler key (like <escape>) or a delay?
> >
> > Thanks for listening!
> >
> > Jon
> >
> >
> >
> > On 6/8/2016 8:43 AM, Torsten Paul wrote:
> >
> >> Yes, I agree the feature would be nice to have. It's not so
> >> much about the language changing, but about the possibility
> >> to enable/disable it (basically https://xkcd.com/1172/) and
> >> give the option for power users to extend this by editing the
> >> config file (I don't think there's a huge chance of getting
> >> this easily configurable anytime soon).
> >> The infrastructure for that is mostly there and already used
> >> to configure the editor and render color schemes.
> >>
> >> ciao,
> >>    Torsten.
> >>
> >> _______________________________________________
> >> OpenSCAD mailing list
> >> Discuss at lists.openscad.org
> >> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> >>
> >>
> >>
> >> -----
> >> No virus found in this message.
> >> Checked by AVG - www.avg.com
> >> Version: 2016.0.7639 / Virus Database: 4598/12382 - Release Date: 06/08/16
> >>
> >>
> >>
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> >
> >
> >

> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


-- 
** R.E.Wolff at BitWizard.nl ** http://www.BitWizard.nl/ ** +31-15-2600998 **
**    Delftechpark 26 2628 XH  Delft, The Netherlands. KVK: 27239233    **
*-- BitWizard writes Linux device drivers for any device you may have! --*
The plan was simple, like my brother-in-law Phil. But unlike
Phil, this plan just might work.


From maurizio.butti at gmail.com  Wed Jun  8 10:27:10 2016
From: maurizio.butti at gmail.com (buttim)
Date: Wed, 8 Jun 2016 07:27:10 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <20160608141808.GE5425@BitWizard.nl>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<trinity-ef074695-3a67-4365-bfc2-880b2e42d263-1465381246005@3capp-gmx-bs71>
	<1465388540429-17587.post@n5.nabble.com>
	<trinity-bf09bf36-2c2a-44bd-9ccc-39c2b32fec5a-1465389787417@3capp-gmx-bs71>
	<315524a5-7a7c-5169-6eb3-af3fd52fd0a5@jonbondy.com>
	<CAGV6i+M2ah4fdJfkSMHeK74F847pyYXC-XhkN2A+4xZmqJz2YQ@mail.gmail.com>
	<20160608141808.GE5425@BitWizard.nl>
Message-ID: <CALe4i4ubP_XzBRV-g209x=-pfhoh6crSSW2JGvD_joew+MSx3g@mail.gmail.com>

Not sure I understood the "left-alt - / " stuff. Is it in OpenSCAD's editor?

You're definitely right on cube/cylinder/sphere expansion perhaps not so
useful when using modules. Still you get rotate translate, union,
difference intersection and for still quite useful.

I thought about a single shortcut for every abbreviations but stealing a
dozen shortcuts seems not fair

On Wed, Jun 8, 2016 at 4:19 PM, rew [via OpenSCAD] <
ml-node+s1091067n17596h51 at n5.nabble.com> wrote:

> On Wed, Jun 08, 2016 at 09:57:42AM -0400, doug moen wrote:
> > Jon's response is why we need a separate config file, in order for this
> to
> > be useable. This is a power user feature, and power users like to
> configure
> > things.
> >
> > My keyboard layout is obviously different from Jon's, since I can type
> > ctrl-B far more easily than hit Esc. I would personally prefer Tab for
> > keyword expansion, since I'm already used to that from using the bash
> shell.
>
> I'm used to "left-alt - / " to do the expansion. It expands what I've
> typed so far to the closest matching string. So while editing openscad
> stuff, c<leftalt-/> will probably expand to cube. Alas, not the
> parentheses and brackets. To explain this some more: cl<leftalt-/>
> will expand to "closest". because its' there 4 lines up.
>
> If there is a shortcut I think I'd like alt-C to be say cube([]) with
> after this the cursor inside the brackets.... Problem is that
> cylinders start with a c too. :-(
>
> IMHO, when you work with openscad, you use the primitives to make
> modules you use. So quickly after starting a project you're no longer
> using cubes and cylinders but higher level objects that you defined...
>
>         Roger.
>
> > On 8 June 2016 at 09:30, jon <[hidden email]
> <http:///user/SendEmail.jtp?type=node&node=17596&i=0>> wrote:
> >
> > > I can type "cube([" faster than I can type "c" and then some bizarre
> key
> > > combination.  I am pleased that this feels like progress to some of
> you,
> > > but for me, it is just awkward.  I am not a complex-shortcut-key kind
> of a
> > > guy (but recognize that many of you are).  So.  Are there other
> options,
> > > such as a simpler key (like <escape>) or a delay?
> > >
> > > Thanks for listening!
> > >
> > > Jon
> > >
> > >
> > >
> > > On 6/8/2016 8:43 AM, Torsten Paul wrote:
> > >
> > >> Yes, I agree the feature would be nice to have. It's not so
> > >> much about the language changing, but about the possibility
> > >> to enable/disable it (basically https://xkcd.com/1172/) and
> > >> give the option for power users to extend this by editing the
> > >> config file (I don't think there's a huge chance of getting
> > >> this easily configurable anytime soon).
> > >> The infrastructure for that is mostly there and already used
> > >> to configure the editor and render color schemes.
> > >>
> > >> ciao,
> > >>    Torsten.
> > >>
> > >> _______________________________________________
> > >> OpenSCAD mailing list
> > >> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17596&i=1>
> > >> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> > >>
> > >>
> > >>
> > >> -----
> > >> No virus found in this message.
> > >> Checked by AVG - www.avg.com
> > >> Version: 2016.0.7639 / Virus Database: 4598/12382 - Release Date:
> 06/08/16
> > >>
> > >>
> > >>
> > >
> > > _______________________________________________
> > > OpenSCAD mailing list
> > > [hidden email] <http:///user/SendEmail.jtp?type=node&node=17596&i=2>
> > > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> > >
> > >
> > >
>
> > _______________________________________________
> > OpenSCAD mailing list
> > [hidden email] <http:///user/SendEmail.jtp?type=node&node=17596&i=3>
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> --
> ** [hidden email] <http:///user/SendEmail.jtp?type=node&node=17596&i=4>
> ** http://www.BitWizard.nl/ ** +31-15-2600998 **
> **    Delftechpark 26 2628 XH  Delft, The Netherlands. KVK: 27239233    **
> *-- BitWizard writes Linux device drivers for any device you may have! --*
> The plan was simple, like my brother-in-law Phil. But unlike
> Phil, this plan just might work.
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17596&i=5>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/Abbreviations-tp17583p17596.html
> To unsubscribe from Abbreviations, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17583&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3NTgzfDE4OTg0NTUyNTk=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17597.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160608/f6b0c513/attachment.html>

From Torsten.Paul at gmx.de  Wed Jun  8 10:32:48 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Wed, 8 Jun 2016 16:32:48 +0200
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <20160608141808.GE5425@BitWizard.nl>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<trinity-ef074695-3a67-4365-bfc2-880b2e42d263-1465381246005@3capp-gmx-bs71>
	<1465388540429-17587.post@n5.nabble.com>
	<trinity-bf09bf36-2c2a-44bd-9ccc-39c2b32fec5a-1465389787417@3capp-gmx-bs71>
	<315524a5-7a7c-5169-6eb3-af3fd52fd0a5@jonbondy.com>
	<CAGV6i+M2ah4fdJfkSMHeK74F847pyYXC-XhkN2A+4xZmqJz2YQ@mail.gmail.com>,
	<20160608141808.GE5425@BitWizard.nl>
Message-ID: <trinity-44e728c5-e463-4561-8c5e-9bc9c5b709ce-1465396368732@3capp-gmx-bs71>

Von:?"Rogier Wolff" <R.E.Wolff at BitWizard.nl>
> IMHO, when you work with openscad, you use the primitives to make
> modules you use. So quickly after starting a project you're no longer
> using cubes and cylinders but higher level objects that you defined...
>
Right, that's basically the reason why the pull request I've linked
before has 2 parts.

Autocompletion: This will probably have the built-in names first, but
should integrate later with the parser to pick up user defined modules
too.

Insert-Template: Also called snippets or similar in other editors.
This is intended to insert whole structured code snippets, e.g. for
loops but of cause could also provide simple "cube([]);" snippets.

That said, we still need to find a balance between possible features
and what is maintainable, so while I personally would find it nice
to have more advanced IDE features, it's a concern how to maintain
those in the future.

ciao,
  Torsten.


From who_doctor at hotmail.com  Wed Jun  8 12:06:40 2016
From: who_doctor at hotmail.com (FourthDr)
Date: Wed, 8 Jun 2016 09:06:40 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1465365373459-17582.post@n5.nabble.com>
References: <1464899432875-17536.post@n5.nabble.com>
	<1464957983236-17549.post@n5.nabble.com>
	<1465102800925-17562.post@n5.nabble.com>
	<1465143581708-17564.post@n5.nabble.com>
	<27DB34DF-13FD-4E94-A137-AA72268CC475@bigpond.com>
	<1465161595947-17566.post@n5.nabble.com>
	<1465244550987-17570.post@n5.nabble.com>
	<1465315196206-17577.post@n5.nabble.com>
	<1465330365286-17578.post@n5.nabble.com>
	<1465365373459-17582.post@n5.nabble.com>
Message-ID: <1465402000639-17599.post@n5.nabble.com>

Hi Ronaldo:

I added that code. It did fix the dovetail. But it is doing something weird
at the origin 0,0,0. Also, the T and the ballsocket do not render now. With
the ballsock code I get a dovetail with a half ballsocket at the origin and
with the T code I get a zigzag at the origin on one of the cuts the rest
stay as a dovetail.



--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17599.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jart3 at verizon.net  Wed Jun  8 12:19:59 2016
From: jart3 at verizon.net (John Tucker)
Date: Wed, 08 Jun 2016 12:19:59 -0400
Subject: [OpenSCAD] Abbreviations
Message-ID: <201606081219.59490.jart3@verizon.net>

Isn't this why F4 and  Automatic load and Recompile exist? Or have they 
disappeared as options?


From rudolf at parkinbot.com  Wed Jun  8 13:44:34 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Wed, 8 Jun 2016 10:44:34 -0700 (MST)
Subject: [OpenSCAD] No bounding box test for union() before entering
	CGAL?
In-Reply-To: <1464903497739-17538.post@n5.nabble.com>
References: <1464903497739-17538.post@n5.nabble.com>
Message-ID: <1465407874253-17601.post@n5.nabble.com>

I forgot to add, there is of course a way to F6-render this specific problem
even for 40000 cylinders within 5 seconds (F5 takes about a minute)


> linear_extrude(height = 10)
> for (i = [1:200])
>   for (j = [1:200])
>     translate([i*20, j*20, 0])
>       circle(r = 5); 

this demonstrates even more how OpenSCAD could win using some boundary box
testing. 



--
View this message in context: http://forum.openscad.org/No-bounding-box-test-for-union-before-entering-CGAL-tp17538p17601.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Wed Jun  8 15:13:02 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Wed, 8 Jun 2016 21:13:02 +0200
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>
	<1465389163871-17588.post@n5.nabble.com>
	<trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>
Message-ID: <89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>

On 06/08/2016 02:47 PM, Torsten Paul wrote:
> I can try to kick off a special Windows build though.
> 
http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-32_abbrev-patch-Installer.exe
http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-32_abbrev-patch.zip
http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-64_abbrev-patch-Installer.exe
http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-64_abbrev-patch.zip

ciao,
  Torsten.


From maurizio.butti at gmail.com  Wed Jun  8 15:17:08 2016
From: maurizio.butti at gmail.com (buttim)
Date: Wed, 8 Jun 2016 12:17:08 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>
	<1465389163871-17588.post@n5.nabble.com>
	<trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>
	<89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
Message-ID: <CALe4i4s8xeRRxvsrA7S83OHPKhBE1Qg2AgBm8yH3n8_H9O=+uw@mail.gmail.com>

Wooooooooo Hoooooooooooooo!

Thanks!!
Il 08/giu/2016 21:13, "tp3 [via OpenSCAD]" <
ml-node+s1091067n17602h37 at n5.nabble.com> ha scritto:

> On 06/08/2016 02:47 PM, Torsten Paul wrote:
> > I can try to kick off a special Windows build though.
> >
>
> http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-32_abbrev-patch-Installer.exe
>
> http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-32_abbrev-patch.zip
>
> http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-64_abbrev-patch-Installer.exe
>
> http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-64_abbrev-patch.zip
>
> ciao,
>   Torsten.
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17602&i=0>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> -- Torsten
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/Abbreviations-tp17583p17602.html
> To unsubscribe from Abbreviations, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17583&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3NTgzfDE4OTg0NTUyNTk=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17603.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160608/e7ba102d/attachment.html>

From doug at moens.org  Wed Jun  8 15:18:26 2016
From: doug at moens.org (doug moen)
Date: Wed, 8 Jun 2016 15:18:26 -0400
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <201606081219.59490.jart3@verizon.net>
References: <201606081219.59490.jart3@verizon.net>
Message-ID: <CAGV6i+M-wr2p75BRAz7Z-gtw00owb1eZ+t__0B0A+c0xHsKXiw@mail.gmail.com>

It's true that Automatic Load and Recompile let you use your favourite
editor, but the integration is incomplete.

My favourite editor lets me run 'make', collects the error messages, lets
me click on an error message and jump to the file and line where the error
occurred so I can fix it. The missing OpenSCAD features are:
* better error reporting when something goes wrong
* better error messages with accurate location information
* external editor integration so that my favourite editor can process the
error messages and let me jump to the error location.

I'm not sure how the third part would actually work. Anybody have
experience in this area?

On 8 June 2016 at 12:19, John Tucker <jart3 at verizon.net> wrote:

> Isn't this why F4 and  Automatic load and Recompile exist? Or have they
> disappeared as options?
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160608/d16abd50/attachment.html>

From runsun at gmail.com  Wed Jun  8 15:27:32 2016
From: runsun at gmail.com (runsun)
Date: Wed, 8 Jun 2016 12:27:32 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <315524a5-7a7c-5169-6eb3-af3fd52fd0a5@jonbondy.com>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<trinity-ef074695-3a67-4365-bfc2-880b2e42d263-1465381246005@3capp-gmx-bs71>
	<1465388540429-17587.post@n5.nabble.com>
	<trinity-bf09bf36-2c2a-44bd-9ccc-39c2b32fec5a-1465389787417@3capp-gmx-bs71>
	<315524a5-7a7c-5169-6eb3-af3fd52fd0a5@jonbondy.com>
Message-ID: <1465414052978-17605.post@n5.nabble.com>

jon_bondy wrote
> I can type "cube([" faster than I can type "c" and then some bizarre key 
> combination. 

I feel the same way. In a plugin to SynWrite I am working on, I use Cap-Cap
(hit cap twice) to trigger a popup menu for what's needed, so it won't
interfere the typing flow that much.  




-----

$  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ), runscad.py ( 2 , git ), synwrite ( 2 ); &nbsp; $ tips: hash ( 2 ), matrix ( 2 ), sweep ( 2 ), var ( 2 ), lerp , animation ( gif , prodVid , animlib ), precision ( 2 ), xl-control , type , rounded polygon , chfont , tailRecur ( 2, 3 ), isosphere , area , vol/center , RGB 
--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17605.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Wed Jun  8 16:05:35 2016
From: runsun at gmail.com (runsun)
Date: Wed, 8 Jun 2016 13:05:35 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
Message-ID: <1465416335455-17606.post@n5.nabble.com>

buttim wrote
> *Full list of abreviations (the | character is not included but shows
> where
> the caret will be positioned):
> c cube([|]);
> d difference() {\n\t|\n}
> f for (i=[|]) {\n\t\n}
> i intersection() {\n\t|\n}
> m module |() {\n\t\n}
> r rotate([|]);
> s sphere(r=|);
> t translate([|])
> u union() {\n\t|\n}
> x ,center=true|
> y cylinder(r=|,h=);

Cool! Since we are here, some more ideas that I have in mind for a while: 

 Note that cube() can be used in the following ways:

   cube();
   cube(center=true);
   cube(3);
   cube(3, center=true);
   cube([2,3,4]);
   cube([2,3,4], center=true);

That is, total of 6 ways of usage. But the shortcut presented in this thread
only handles one. It would mean that if a user gets used to that shortcut,
he/she will have to manually delete [ ] to proceed in many cases.  To me it
introduces additional mental barrier: first has to remember ctrl-B, then
secondly has to remember when to and not to use ctrl-B, then if that fail,
has to spend more key strokes to clean up, which means significant slowing
down and thus a backward approach. This happens, of course, in other
function/modules. 

My suggestion, therefore, is:

  c ==> [TAB] => cube(size=|);   // user can either type number or [ . Note
that the argument name is shown. This will be a huge help especially for new
users.

  If user types a number ==> cube(size=3|); 
  or a vector ==> cube( size=[2,3,4]|);

Note that the cursor is still within ( ). At this moment, hit "," brings
you:

  cube(size=3, center=true|);
  cube(size=[3,4,5], center=true|);

At this moment, user can hit either [TAB] or ",":

  : "," will jump the cursor to the end:

    cube(size=3, center=true); |
    cube(size=[3,4,5], center=true); |

  : and [TAB] will cycle through permitted values of the last argument: 

    cube(size=3, center=false|); 
    cube(size=[3,4,5], center=false|); 

So this pattern, *[TAB] for cycling values and "," for next argument*, will
be followed in ALL function/module, making it a universal usage, no matter
if it's shortcut or not.

  



-----

$  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ), runscad.py ( 2 , git ), synwrite ( 2 ); &nbsp; $ tips: hash ( 2 ), matrix ( 2 ), sweep ( 2 ), var ( 2 ), lerp , animation ( gif , prodVid , animlib ), precision ( 2 ), xl-control , type , rounded polygon , chfont , tailRecur ( 2, 3 ), isosphere , area , vol/center , RGB 
--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17606.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Wed Jun  8 17:26:21 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Wed, 8 Jun 2016 23:26:21 +0200
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>
	<1465389163871-17588.post@n5.nabble.com>
	<trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>
	<89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
Message-ID: <37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>

On 06/08/2016 02:47 PM, Torsten Paul wrote:
> I can try to kick off a special Windows build though.
>
...aaaaaand for completeness, that's the version with the
AutoComplete/CallTip and Template implementation based on
the QScintilla features.

http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-32_issue905-Installer.exe
http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-32_issue905.zip
http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-64_issue905-Installer.exe
http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-64_issue905.zip

The template popup should be triggered by CTRL+Enter

ciao,
  Torsten.



From rcmpersiano at gmail.com  Wed Jun  8 18:35:16 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Wed, 8 Jun 2016 15:35:16 -0700 (MST)
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <1465341692808-17580.post@n5.nabble.com>
References: <1465341692808-17580.post@n5.nabble.com>
Message-ID: <1465425316172-17608.post@n5.nabble.com>

Hi, Wolf.

I have been using this approach a lot. Bellow you will find an experiment I
did that helped me to debug the equations of two deformations: twist and
taper. In the code, I define a module to twist a polyhedron with triangular
faces and a function that taper a similar kind of polyhedron. The faces are
subdivided and the deformation is applied to each vertex of the subdivision.
This is the result:
<http://forum.openscad.org/file/n17608/Twist%26Taper.png> 
and here is the code:
deform.scad <http://forum.openscad.org/file/n17608/deform.scad>  
As you may see, the function and the module let to the user the burden of
triangulating the non-triangular faces of the polyhedron. And, as Parkingbot
pointed out, it doesn't check for self-intersections that is hard to
implement and process. Finally if the polyhedron data doesn't define a
manifold, the deformed object will not be acceptable by CGAL. 

Ronaldo



--
View this message in context: http://forum.openscad.org/Improve-rendering-speed-tp17580p17608.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Wed Jun  8 21:31:41 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Wed, 8 Jun 2016 18:31:41 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1465402000639-17599.post@n5.nabble.com>
References: <1464957983236-17549.post@n5.nabble.com>
	<1465102800925-17562.post@n5.nabble.com>
	<1465143581708-17564.post@n5.nabble.com>
	<27DB34DF-13FD-4E94-A137-AA72268CC475@bigpond.com>
	<1465161595947-17566.post@n5.nabble.com>
	<1465244550987-17570.post@n5.nabble.com>
	<1465315196206-17577.post@n5.nabble.com>
	<1465330365286-17578.post@n5.nabble.com>
	<1465365373459-17582.post@n5.nabble.com>
	<1465402000639-17599.post@n5.nabble.com>
Message-ID: <1465435901969-17609.post@n5.nabble.com>

FourthDr,

I could not find any trouble with the new dovetail at the origin neither
with the t_lock shape. Are you sure your xCut1 positions are correctly
spaced? If you have two of them too close, you may get strange results.

I did not include the ballsocket in my last version. As I said, to have any
other cut shape it is enough to write a list of points of the new profile.
For the ballsocket I propose something like this:

> ball_sock = concat( [ for(i=[245:-31:-65]) 0.4*[cos(i), 1.5+sin(i)] ],
>                    [ [0.4*cos(-65),-0.1], [-0.4*cos(-65),-0.1] ] );
> profile = ball_sock;

The previous round_dt shape is indeed a crude form of a rounded dovetail.



--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17609.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From maurizio.butti at gmail.com  Thu Jun  9 02:42:49 2016
From: maurizio.butti at gmail.com (buttim)
Date: Wed, 8 Jun 2016 23:42:49 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>
	<1465389163871-17588.post@n5.nabble.com>
	<trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>
	<89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
	<37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
Message-ID: <CALe4i4tfzbwnw0vM05n3QN3aXYAFpgdv-gmOvUqHet5HVhgi4A@mail.gmail.com>

Interesting approach. But I think you should check what's on the left of
the cursor to restrict choices. For example: if there's a 'c' the choices
should only be 'cube' and 'cylinder'; if you find 'cy' you just complete to
'cylinder' with no menu appearing. Most IDEs I've seen work that way.
Scintilla has a very nice 'wordlist completion' based on whatever is in the
document you're editing. That means you can easily complete long
identifiers hitting CTRL+ENTER. I'm thinking about trying to add this
functionality, it might be straightforward but I'm not sure.

On Wed, Jun 8, 2016 at 11:27 PM, tp3 [via OpenSCAD] <
ml-node+s1091067n17607h92 at n5.nabble.com> wrote:

> On 06/08/2016 02:47 PM, Torsten Paul wrote:
> > I can try to kick off a special Windows build though.
> >
> ...aaaaaand for completeness, that's the version with the
> AutoComplete/CallTip and Template implementation based on
> the QScintilla features.
>
>
> http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-32_issue905-Installer.exe
> http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-32_issue905.zip
>
> http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-64_issue905-Installer.exe
> http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-64_issue905.zip
>
> The template popup should be triggered by CTRL+Enter
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17607&i=0>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> -- Torsten
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/Abbreviations-tp17583p17607.html
> To unsubscribe from Abbreviations, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17583&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3NTgzfDE4OTg0NTUyNTk=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17610.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160608/f2a8aef5/attachment.html>

From db5765 at outlook.com  Thu Jun  9 04:35:35 2016
From: db5765 at outlook.com (Trygon)
Date: Thu, 9 Jun 2016 01:35:35 -0700 (MST)
Subject: [OpenSCAD] 2D Geometry Constraints Library
Message-ID: <1465461335216-17611.post@n5.nabble.com>

I have written a set of functions to solve constraint based 2D geometry
problems such as finding the intersection points between two circles.  These
functions are contained in the library 2DGeometryConstraints.scad which can
be downloaded from the OpenSCAD folder on my Microsoft OneDrive cloud
server:

https://onedrive.live.com/redir?resid=625391B4CF1D545D!115&authkey=!AHZ3rqfLOct19dU&ithint=folder%2c

I have also included the script 2DGeometryConstraints_examples.scad which
graphically demonstrates each of the functions. I hope these prove useful.

-Trygon

<http://forum.openscad.org/file/n17611/CirclesTangents.png> 



--
View this message in context: http://forum.openscad.org/2D-Geometry-Constraints-Library-tp17611.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Jun  9 05:01:52 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 9 Jun 2016 02:01:52 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <CALe4i4tfzbwnw0vM05n3QN3aXYAFpgdv-gmOvUqHet5HVhgi4A@mail.gmail.com>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>
	<1465389163871-17588.post@n5.nabble.com>
	<trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>
	<89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
	<37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
	<CALe4i4tfzbwnw0vM05n3QN3aXYAFpgdv-gmOvUqHet5HVhgi4A@mail.gmail.com>
Message-ID: <1465462912778-17612.post@n5.nabble.com>


http://www.thingiverse.com/thing:15363
http://www.thingiverse.com/thing:26537
http://www.thingiverse.com/thing:26853
http://www.thingiverse.com/thing:29505
http://www.thingiverse.com/thing:167899
http://www.thingiverse.com/thing:280319
http://www.thingiverse.com/thing:681028

May relate.

+1 to tp's config file, there are many personal preferences to how to do
this. Personally I like np++'s style.




-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17612.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From wv99999 at gmail.com  Thu Jun  9 05:29:52 2016
From: wv99999 at gmail.com (wolf)
Date: Thu, 9 Jun 2016 02:29:52 -0700 (MST)
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <1465425316172-17608.post@n5.nabble.com>
References: <1465341692808-17580.post@n5.nabble.com>
	<1465425316172-17608.post@n5.nabble.com>
Message-ID: <1465464592495-17613.post@n5.nabble.com>

I am now in a position to quantify my claims about improved rendering speed.
Parkinbot  published <http://www.thingiverse.com/thing:648813>  has 
published a routine to generate a coil. When set to 200 slices per winding
and 10 windings, this routine renders on my machine in 52 minutes. The
equivalent coil, also having 2000 slices, renders in 11 seconds using my
approach:

// Reverse Slicer
// build a complex shape from user definable functions
// as a faster alternative to multiple unions


// Start user definable data
$fn=100;
Slices=2000;
SliceAngle=[for( i=[0:1:Slices-1]) 1.8*i];         // angle by which each
slice is tilted
SlicePosition=[for( i=[1:1:Slices]) [0.125*i,50,0]];       // position of
each slice relative to origin
SliceRadius=[for( i=[1:1:Slices]) 10];
function CircularSlice(r=1)=[let(Step=360/$fn)  for( i=[0:1:$fn-1])
[r*cos(i*Step),r*sin(i*Step),0]]; // returns a list of vertices, called a
slice, centered around the origin, by which a circle of radius r and height
0 will be approximated
// End user definable data


// Start shape generating list
VertexList=flatten([for( i=[0:1:Slices-1]) 
 
TiltSlice_X(MoveSlice(CircularSlice(SliceRadius[i]),SlicePosition[i]),SliceAngle[i])]);    
// list of all vertices needed to construct shape
EndFace1=[for( i=[2:1:$fn-1]) [0,i-1,i]];                                //
list of all triangular faces needed to close shape at one end
EndFace2=[let(F=(Slices-1)*$fn) for( i=[F:1:F+$fn-3]) [F,i+2,i+1]];      //
list of all triangular faces needed to close shape at other end
SideFaces=flatten([for( i=[0:1:$fn-1]) for( k=[0:1:Slices])
[[i+k*$fn,(i+$fn)+k*$fn,((i+1)%$fn)+k*$fn],[((i+1)%$fn)+k*$fn,(i+$fn)+k*$fn,((i+1)%$fn+$fn)+k*$fn]]
]); 
FacesList=concat(EndFace1,SideFaces,EndFace2);                      // list
of all faces needed to close shape

function flatten(l) = [ for (a = l) for (b = a) b ] ;                                                              
// remove brackets
function ExtractSlice(List,Element)=flatten([for( i=Element) List[i]]);                                             
// extract a vector from a slice
function TiltSlice_X(Sl,A) = [for( i=[0:1:$fn-1]) let (v=ExtractSlice(Sl,i))
[v[0], v[1]*cos(A), v[1]*sin(A)]];         // tilt slice around x axis
function MoveSlice(Sl,SP) = [for( i=[0:1:$fn-1]) let (v=ExtractSlice(Sl,i))
[v[0]+SP[0], v[1]+SP[1], v[2]+SP[2] ]];   // move slice to SP=[x,y,z]
// End shape generating list


polyhedron(VertexList,FacesList); 

Except for the increase in speed, my approach also does away with the need
to have a faces list. A few extra brackets in the VertexList is all it takes
for the computer to be able to generate the faces list by itself. But it
also exposes shortcomings in the language: nested lists can currently be
read only one level deep, and thus I was forced to develop,  with function
ExtractSlice, the ability to access deeper nesting levels.
The current implementation has only two nesting levels and thus cannot
handle holes. By adding a third nesting level, I expect that holes can also
be accomodated.
Vertices, innermost nesting level, contains a list of numbers to define a
vertex.
Slices, second nesting level, contains the list of all vertices belonging to
a slice.
Groups of slices, third nesting level: counting from the outside, the first
slice represents material, the second a hole, the third material, etc. That
this works will have to be demonstrated, though.

Thanks, Ronaldo, for pointing out that my approach is not quite new. Were
you aware of the gains in rendering speed that are achieved using this
approach over the more conventional approach of using unions() or hulls()?
Or that the faces list can be computer generated and need not be provided by
the user?

Parkinbot, I have difficulties understanding what you mean: what properties
does a polygon need to have that you will call it simple? Can you explain?
Self-intersection is not a problem for me, as I design by eye, and my eye
will pick up any funny shapes immediately. Whether self-intersection is a
problem with CGAL remains to be seen, as at some stage I will have to try to
design a Klein bottle in OpenSCAD. If CGAL is true to its mathematical
roots, then I do not foresee any problem in constructing the bottle, nor do
I foresee restrictions regarding convex or concave slices. 
Lastly, what do you mean with "because z-coordinate of a 3D shape cannot be
quested in current OpenSCAD to grand for non-interscection" With "quested" I
suppose you wanted to write "queried", but what in a Palainian hell is "to
grand" supposed to mean?

wolf






--
View this message in context: http://forum.openscad.org/Improve-rendering-speed-tp17580p17613.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From maurizio.butti at gmail.com  Thu Jun  9 07:39:59 2016
From: maurizio.butti at gmail.com (buttim)
Date: Thu, 9 Jun 2016 04:39:59 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>
	<1465389163871-17588.post@n5.nabble.com>
	<trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>
	<89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
	<37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
Message-ID: <CALe4i4v9obv98sOTcKRyHE5aKEvy3ihNJ1Yg6vxwBmdztUmPiA@mail.gmail.com>

If you specify

qsci->setAutoCompletionShowSingle(true);

the dropdown menu is not shown when there is a single choice available

On Thu, Jun 9, 2016 at 8:42 AM, maurizio butti <maurizio.butti at gmail.com>
wrote:

> Interesting approach. But I think you should check what's on the left of
> the cursor to restrict choices. For example: if there's a 'c' the choices
> should only be 'cube' and 'cylinder'; if you find 'cy' you just complete to
> 'cylinder' with no menu appearing. Most IDEs I've seen work that way.
> Scintilla has a very nice 'wordlist completion' based on whatever is in
> the document you're editing. That means you can easily complete long
> identifiers hitting CTRL+ENTER. I'm thinking about trying to add this
> functionality, it might be straightforward but I'm not sure.
>
> On Wed, Jun 8, 2016 at 11:27 PM, tp3 [via OpenSCAD] <
> ml-node+s1091067n17607h92 at n5.nabble.com> wrote:
>
>> On 06/08/2016 02:47 PM, Torsten Paul wrote:
>> > I can try to kick off a special Windows build though.
>> >
>> ...aaaaaand for completeness, that's the version with the
>> AutoComplete/CallTip and Template implementation based on
>> the QScintilla features.
>>
>>
>> http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-32_issue905-Installer.exe
>>
>> http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-32_issue905.zip
>>
>> http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-64_issue905-Installer.exe
>>
>> http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-64_issue905.zip
>>
>> The template popup should be triggered by CTRL+Enter
>>
>> ciao,
>>   Torsten.
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17607&i=0>
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>> -- Torsten
>>
>>
>> ------------------------------
>> If you reply to this email, your message will be added to the discussion
>> below:
>> http://forum.openscad.org/Abbreviations-tp17583p17607.html
>> To unsubscribe from Abbreviations, click here
>> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17583&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3NTgzfDE4OTg0NTUyNTk=>
>> .
>> NAML
>> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>>
>
>




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17614.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160609/51cbf87b/attachment.html>

From rudolf at parkinbot.com  Thu Jun  9 08:01:52 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Thu, 9 Jun 2016 05:01:52 -0700 (MST)
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <1465464592495-17613.post@n5.nabble.com>
References: <1465341692808-17580.post@n5.nabble.com>
	<1465425316172-17608.post@n5.nabble.com>
	<1465464592495-17613.post@n5.nabble.com>
Message-ID: <1465473712712-17615.post@n5.nabble.com>

Wolf, 
Sorry about the 'typos' (English is not my first language). Of course I
meant ?queried? and ?ensure/guarantee?. 

I perfectly agree with you: If you know what you do (self-restriction),
avoiding superfluous tests is a perfect way to get fast results. 
But I can assure you: Self-intersection *is* a problem with CGAL - and
dealing formally with it is the main reason why CGAL is slow.
A general scheme or a language feature cannot rely on self-restriction (e.g.
pointers in C language follow this way, and we all know, what was the result
in the history of computing). 
About "simple polygons" and "convexity" you can find good articles in the
net, e.g. Wikipedia. We also had some discussion on it in this forum. 

wolf wrote
> I am now in a position to quantify my claims about improved rendering
> speed. Parkinbot 
> published <http://www.thingiverse.com/thing:648813>  
> has  published a routine to generate a coil. When set to 200 slices per
> winding and 10 windings, this routine renders on my machine in 52 minutes.
> The equivalent coil, also having 2000 slices, renders in 11 seconds using
> my approach:

The slowness of the hull-approach is obvious and mainly comes from the large
number of union() operations being involved. But it is still the only way to
tackle things like that with OpenSCAD language means (and was discussed e.g. 
here
<http://forum.openscad.org/Non-Linear-Transformations-tp14539p16673.html> 
). Also my next step was to switch to polyhedron(), which means you are
programming the whole shape mostly from the scratch - and nobody will
understand your code anymore, unless you put it into a well-documented
library with a simple interface like  skin()
<https://github.com/openscad/list-comprehension-demos/blob/master/skin.scad> 
.
Have fun with the Klein bottle. Let me know, how you solve the
self-intersection part ;-) 

Rudolf




--
View this message in context: http://forum.openscad.org/Improve-rendering-speed-tp17580p17615.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From maurizio.butti at gmail.com  Thu Jun  9 10:30:37 2016
From: maurizio.butti at gmail.com (buttim)
Date: Thu, 9 Jun 2016 07:30:37 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>
	<1465389163871-17588.post@n5.nabble.com>
	<trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>
	<89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
	<37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
Message-ID: <CALe4i4ubmXuKSHz0+amK2Gk2hng0zyVWVq2kTeiFeX3GujWGUA@mail.gmail.com>

I added the "document autocomplete" feature. Basically CTRL+Return triggers
an autocompletion based on the list of words in the document you're editing.

Beware that Return means the key on the alphabetic portion of your
keyboard, not in the numeric keypad.

I'm thinking about moving the abbreviation list to an external file. Can
someone point me in the right direction for choosing a format and location
for the file? I was thinking about a per-user JSON file.
The format might be something like this:
{
  "t" : {
        "l" : "translate([",
        "r" : "])"
      }
}

where l and r stand for left and right of cursor

Is it too complicated? Should I stick to the very same format
<https://sourceforge.net/p/scintilla/scite/ci/default/tree/src/abbrev.properties>
SciTE uses ?


On Thu, Jun 9, 2016 at 1:39 PM, maurizio butti <maurizio.butti at gmail.com>
wrote:

> If you specify
>
> qsci->setAutoCompletionShowSingle(true);
>
> the dropdown menu is not shown when there is a single choice available
>
> On Thu, Jun 9, 2016 at 8:42 AM, maurizio butti <maurizio.butti at gmail.com>
> wrote:
>
>> Interesting approach. But I think you should check what's on the left of
>> the cursor to restrict choices. For example: if there's a 'c' the choices
>> should only be 'cube' and 'cylinder'; if you find 'cy' you just complete to
>> 'cylinder' with no menu appearing. Most IDEs I've seen work that way.
>> Scintilla has a very nice 'wordlist completion' based on whatever is in
>> the document you're editing. That means you can easily complete long
>> identifiers hitting CTRL+ENTER. I'm thinking about trying to add this
>> functionality, it might be straightforward but I'm not sure.
>>
>> On Wed, Jun 8, 2016 at 11:27 PM, tp3 [via OpenSCAD] <
>> ml-node+s1091067n17607h92 at n5.nabble.com> wrote:
>>
>>> On 06/08/2016 02:47 PM, Torsten Paul wrote:
>>> > I can try to kick off a special Windows build though.
>>> >
>>> ...aaaaaand for completeness, that's the version with the
>>> AutoComplete/CallTip and Template implementation based on
>>> the QScintilla features.
>>>
>>>
>>> http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-32_issue905-Installer.exe
>>>
>>> http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-32_issue905.zip
>>>
>>> http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-64_issue905-Installer.exe
>>>
>>> http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-64_issue905.zip
>>>
>>> The template popup should be triggered by CTRL+Enter
>>>
>>> ciao,
>>>   Torsten.
>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17607&i=0>
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>> -- Torsten
>>>
>>>
>>> ------------------------------
>>> If you reply to this email, your message will be added to the discussion
>>> below:
>>> http://forum.openscad.org/Abbreviations-tp17583p17607.html
>>> To unsubscribe from Abbreviations, click here
>>> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17583&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3NTgzfDE4OTg0NTUyNTk=>
>>> .
>>> NAML
>>> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>>>
>>
>>
>


editor-improvement2.patch (4K) <http://forum.openscad.org/attachment/17616/0/editor-improvement2.patch>




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17616.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160609/baa78d2d/attachment.html>

From rcmpersiano at gmail.com  Thu Jun  9 11:00:50 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Thu, 9 Jun 2016 08:00:50 -0700 (MST)
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <1465464592495-17613.post@n5.nabble.com>
References: <1465341692808-17580.post@n5.nabble.com>
	<1465425316172-17608.post@n5.nabble.com>
	<1465464592495-17613.post@n5.nabble.com>
Message-ID: <1465484450055-17617.post@n5.nabble.com>

wolf wrote
> Self-intersection is not a problem for me, as I design by eye, and my eye
> will pick up any funny shapes immediately. Whether self-intersection is a
> problem with CGAL remains to be seen, as at some stage I will have to try
> to design a Klein bottle in OpenSCAD. If CGAL is true to its mathematical
> roots, then I do not foresee any problem in constructing the bottle, nor
> do I foresee restrictions regarding convex or concave slices. 

Wolf, change the first three lines of your code to:

> // Start user definable data
> $fn=100;
> Slices=200;
> SliceAngle=[for( i=[0:1:Slices-1]) 6.6*i];//1.8*i];         // angle by
> which each slice is tilted

and you get self-intersection (SI). It renders fine and fast. However, you
may get a CGAL warning that "PolySet has degenerate polygons". But if you
also change the last line to:

> intersection(){
>     polyhedron(VertexList,FacesList);
>     cube(100);
> }

you get in trouble. To find what caused the trouble may be a greater
trouble.

> Were you aware of the gains in rendering speed that are achieved using
> this
> approach over the more conventional approach of using unions() or hulls()?
> Or that the faces list can be computer generated and need not be provided
> by
> the user?

Your slice approach to the spring modelling is the same of Oskar Linde's
sweep that encloses all the face list computations. A more general
construction is his skin that do the same. I have been using a similar more
general approach to model solids enclosed by Bezier surfaces and "almost"
planar faces. All face lists computation are inside a general module that
process the user meshes. It works provided that the surface patches created
by the user meet at boundaries and define a manifold. And that they have no
SI! So, a lot of care is left to user.

However, I don't see any approach that effectively avoid non-manifolds
created by users. With OpenSCAD union, you may build a non-manifold with two
cubes having only one vertex in common. Or intersecting to cubes with just
one face in common. But I agree that those are simpler to understand and
avoidable than other cases.

The only approach I know that deals well and naturally with SI is f-rep
(implicit representation). If carefully implemented it may "makeup" all
model singulaties.



--
View this message in context: http://forum.openscad.org/Improve-rendering-speed-tp17580p17617.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Thu Jun  9 11:36:17 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Thu, 9 Jun 2016 17:36:17 +0200
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <CALe4i4ubmXuKSHz0+amK2Gk2hng0zyVWVq2kTeiFeX3GujWGUA@mail.gmail.com>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>
	<1465389163871-17588.post@n5.nabble.com>
	<trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>
	<89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
	<37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>,
	<CALe4i4ubmXuKSHz0+amK2Gk2hng0zyVWVq2kTeiFeX3GujWGUA@mail.gmail.com>
Message-ID: <trinity-5170919a-2515-4da8-9568-62aa6a61160f-1465486577527@3capp-gmx-bs24>

Von:?buttim <maurizio.butti at gmail.com>
> I'm thinking about moving the abbreviation list to an external
> file. Can someone point me in the right direction for choosing
> a format and location for the file? I was thinking about a
>?per-user?JSON file.
>
I guess it would be best to follow the logic that already exists
for render and editor color schemes, e.g.:

https://github.com/openscad/openscad/blob/master/src/scintillaeditor.cpp#L400

This allows to read the configuration from an application folder
location as well as overwrite from the user directory.

> The format might be something like this:
> {
>?  "t" : {?
>? ?  ? ? "l" : "translate([",
>?  ? ? ? "r" : "])"
>?  ? ? }
> }
>
Using JSON makes sense as the other configs are using this format
too and there's a simple file parser in Boost to read those files.

The l/r looks a bit strange, but it does not really matter much.
How would that handle multi-line cases / indentation? I think JSON
supports escaping like \t and \n, but I did not try that yet.

I think it would be good to merge the features from both solutions
as they do complete each other (like the CallTips are probably
quite useful for people getting started).

ciao,
  Torsten.


From rcmpersiano at gmail.com  Thu Jun  9 11:40:55 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Thu, 9 Jun 2016 08:40:55 -0700 (MST)
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <1465473712712-17615.post@n5.nabble.com>
References: <1465341692808-17580.post@n5.nabble.com>
	<1465425316172-17608.post@n5.nabble.com>
	<1465464592495-17613.post@n5.nabble.com>
	<1465473712712-17615.post@n5.nabble.com>
Message-ID: <1465486855136-17619.post@n5.nabble.com>

Parkinbot wrote
> Have fun with the Klein bottle. Let me know, how you solve the
> self-intersection part ;-) 

Rudolf, don't be so skeptical. :)

The Klein bottle is a non-orientable surface. So it is the Roman surface. I
processed the Roman surface with my f-rep evaluation system and got the
following rendered image:
<http://forum.openscad.org/file/n17619/Roman_surface-sphere.png> 
where the surface was unioned with a OpenSCAD sphere. It is a crude
representation of a yet rudimentary (but large and complex) f-rep processing
code. The gaps you see are the natural "makeup" of the SI the surface has.

To produce that image (and its stl), it is only required the Roman surface
definition:

> function cushion_surface_eval(pt, a) =
> // http://mathworld.wolfram.com/CushionSurface.html
>     let( x = pt[0], y = pt[1], z = pt[2], 
>          x2 = x*x, y2 = y*y,
>          z2 = z*z, z3 = z*z2, z4 = z2*z2 )
>     a*(z2*x2 - z4 - 2*z*x2 + 2*z3 + x2 - z2 
>     - pow(x2-z,2) - y2*y2 - 2*x2*y2 - y2*z2 + 2*y2*z + y2);

and then create the f-rep representation and display:

> prim_data = [ROMAN, 5, 1, 1];
> roman = f_scale(f_primitive(prim_data), 6);
> mseh = f_mesh_evaluation(roman, [-33,-33,-33], 66, 66, 66, 40, 40, 40);
> union(){
>     mesh_surface(mesh);
>     sphere(12);
> }

The gaps in the model can be reduced by refining the discretization of the
mesh. This is the bottleneck of the approach: the time to render is O(n^3)
where n is the discretization of each axis. For that image, the console
output was:

> Compiling design (CSG Tree generation)...
> ECHO: "
> INFO: mesh_surface id = 0 > received 5632 polygons to display
> "
> ECHO: "
> INFO: mesh_surface id = 0 > generated 19488 triangles with 26592 vertices
> on polyhedron
> "
> Rendering Polygon Mesh using CGAL...
> Geometries in cache: 130
> Geometry cache size in bytes: 25310688
> CGAL Polyhedrons in cache: 2
> CGAL cache size in bytes: 47539440
> Total rendering time: 0 hours, 2 minutes, 12 seconds
>    Top level object is a 3D object:
>    Simple:        yes
>    Vertices:     9615
>    Halfedges:   55420
>    Edges:       27710
>    Halffacets:  36226
>    Facets:      18113
>    Volumes:        10
> Rendering finished.

Bounding boxes would help here.

Ronaldo



--
View this message in context: http://forum.openscad.org/Improve-rendering-speed-tp17580p17619.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From maurizio.butti at gmail.com  Thu Jun  9 12:15:18 2016
From: maurizio.butti at gmail.com (buttim)
Date: Thu, 9 Jun 2016 09:15:18 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <trinity-5170919a-2515-4da8-9568-62aa6a61160f-1465486577527@3capp-gmx-bs24>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>
	<1465389163871-17588.post@n5.nabble.com>
	<trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>
	<89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
	<37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
	<CALe4i4ubmXuKSHz0+amK2Gk2hng0zyVWVq2kTeiFeX3GujWGUA@mail.gmail.com>
	<trinity-5170919a-2515-4da8-9568-62aa6a61160f-1465486577527@3capp-gmx-bs24>
Message-ID: <CALe4i4vFfg49GPzHiK_18afv5fBdnAkFoehLRNYO8BP83CBvGw@mail.gmail.com>

Yes, the l/r thing is a bit weird. But the alternatives I see are even
weirder:
1. "translate([|])" SciTE style: the \ marks the position of the cursor
2. indicate the position of the cursor with a number (not really intuitive)

Regarding the special characters I'm pretty confident JSON will handle them.

I'll study the code related to the color schemes handling.

Thanks for your help

On Thu, Jun 9, 2016 at 5:37 PM, tp3 [via OpenSCAD] <
ml-node+s1091067n17618h33 at n5.nabble.com> wrote:

> Von: buttim <[hidden email]
> <http:///user/SendEmail.jtp?type=node&node=17618&i=0>>
> > I'm thinking about moving the abbreviation list to an external
> > file. Can someone point me in the right direction for choosing
> > a format and location for the file? I was thinking about a
> > per-user JSON file.
> >
> I guess it would be best to follow the logic that already exists
> for render and editor color schemes, e.g.:
>
>
> https://github.com/openscad/openscad/blob/master/src/scintillaeditor.cpp#L400
>
> This allows to read the configuration from an application folder
> location as well as overwrite from the user directory.
>
> > The format might be something like this:
> > {
> >   "t" : {
> >         "l" : "translate([",
> >         "r" : "])"
> >       }
> > }
> >
> Using JSON makes sense as the other configs are using this format
> too and there's a simple file parser in Boost to read those files.
>
> The l/r looks a bit strange, but it does not really matter much.
> How would that handle multi-line cases / indentation? I think JSON
> supports escaping like \t and \n, but I did not try that yet.
>
> I think it would be good to merge the features from both solutions
> as they do complete each other (like the CallTips are probably
> quite useful for people getting started).
>
> ciao,
>   Torsten.
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17618&i=1>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> -- Torsten
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/Abbreviations-tp17583p17618.html
> To unsubscribe from Abbreviations, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17583&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3NTgzfDE4OTg0NTUyNTk=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17620.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160609/a1102785/attachment.html>

From oz.at.michael at gmail.com  Thu Jun  9 14:57:23 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 9 Jun 2016 11:57:23 -0700 (MST)
Subject: [OpenSCAD] Printing and slicing an object not working with Image
In-Reply-To: <1465489092168-17621.post@n5.nabble.com>
References: <1465489092168-17621.post@n5.nabble.com>
Message-ID: <1465498643437-17622.post@n5.nabble.com>

You need to close the trapezoid as part of the polyhedron, not by adding a
cube to the bottom.
It is not a manifold object.



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Printing-and-slicing-an-object-not-working-with-Image-tp17621p17622.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Jun  9 14:59:15 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 9 Jun 2016 11:59:15 -0700 (MST)
Subject: [OpenSCAD] Printing and slicing an object not working with Image
In-Reply-To: <1465489092168-17621.post@n5.nabble.com>
References: <1465489092168-17621.post@n5.nabble.com>
Message-ID: <1465498755057-17623.post@n5.nabble.com>

Also, your post is still flagged as "This post has NOT been accepted by the
mailing list yet", so nobody gets it unless they look. 
You need to subscribe to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.






-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Printing-and-slicing-an-object-not-working-with-Image-tp17621p17623.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Thu Jun  9 15:06:07 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Thu, 9 Jun 2016 12:06:07 -0700 (MST)
Subject: [OpenSCAD] Printing and slicing an object not working with Image
In-Reply-To: <1465489092168-17621.post@n5.nabble.com>
References: <1465489092168-17621.post@n5.nabble.com>
Message-ID: <1465499167956-17624.post@n5.nabble.com>

This works:


> TrapezoidFaces =[
> [0, 1, 2, 3], //front face
> [0,4,5,1], //left side face
> [1,5,6,2], //top face
> [2,6,7,3], //right side face
> [7,6,5,4],
> [3,7,4,0]        //bottom
> 
> ]; //back trapezoid face





--
View this message in context: http://forum.openscad.org/Printing-and-slicing-an-object-not-working-with-Image-tp17621p17624.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Thu Jun  9 15:30:46 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Thu, 9 Jun 2016 12:30:46 -0700 (MST)
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <1465486855136-17619.post@n5.nabble.com>
References: <1465341692808-17580.post@n5.nabble.com>
	<1465425316172-17608.post@n5.nabble.com>
	<1465464592495-17613.post@n5.nabble.com>
	<1465473712712-17615.post@n5.nabble.com>
	<1465486855136-17619.post@n5.nabble.com>
Message-ID: <1465500646897-17625.post@n5.nabble.com>

Cool stuff, Ronaldo

The refinement problem reminds me on my first attempt to render some Schwarz
p surfaces. The most famous one almost looks like the OpenSCAD logo. 



--
View this message in context: http://forum.openscad.org/Improve-rendering-speed-tp17580p17625.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jpmendes54 at gmail.com  Thu Jun  9 16:32:54 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Thu, 9 Jun 2016 13:32:54 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <CALe4i4s8xeRRxvsrA7S83OHPKhBE1Qg2AgBm8yH3n8_H9O=+uw@mail.gmail.com>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>
	<1465389163871-17588.post@n5.nabble.com>
	<trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>
	<89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
	<CALe4i4s8xeRRxvsrA7S83OHPKhBE1Qg2AgBm8yH3n8_H9O=+uw@mail.gmail.com>
Message-ID: <1465504374687-17627.post@n5.nabble.com>

Thanks buttim for sharing, thanks Torsten for the release. This is very
handy, i like it.
With CTRL+Alt instead of  CTRL+B would be even better. Nevertheless it is
good enough.
I prefer this solution to the pop-up menu. I don't like automatic pop-ups.

jpmendes





--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17627.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From maurizio.butti at gmail.com  Thu Jun  9 18:53:35 2016
From: maurizio.butti at gmail.com (buttim)
Date: Thu, 9 Jun 2016 15:53:35 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <1465504374687-17627.post@n5.nabble.com>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>
	<1465389163871-17588.post@n5.nabble.com>
	<trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>
	<89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
	<CALe4i4s8xeRRxvsrA7S83OHPKhBE1Qg2AgBm8yH3n8_H9O=+uw@mail.gmail.com>
	<1465504374687-17627.post@n5.nabble.com>
Message-ID: <CALe4i4t9YvpAnDUP9z2dgTqtLOy83g37psDSDvzeWF3OoFVqMg@mail.gmail.com>

I have no clue of how something like CRTL+ALT or a simple TAB should be
handled in code. And everybody seems to have a personal preference on the
ideal shortcut. So I'll stick to CTRL+B, LOL.
Thanks for the encouragement, I hope more editor improvement will come soon.

On Thu, Jun 9, 2016 at 10:32 PM, jpmendes [via OpenSCAD] <
ml-node+s1091067n17627h12 at n5.nabble.com> wrote:

> Thanks buttim for sharing, thanks Torsten for the release. This is very
> handy, i like it.
> With CTRL+Alt instead of  CTRL+B would be even better. Nevertheless it is
> good enough.
> I prefer this solution to the pop-up menu. I don't like automatic pop-ups.
>
> jpmendes
>
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/Abbreviations-tp17583p17627.html
> To unsubscribe from Abbreviations, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17583&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3NTgzfDE4OTg0NTUyNTk=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17628.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160609/01944d3f/attachment.html>

From rcmpersiano at gmail.com  Thu Jun  9 23:17:48 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Thu, 9 Jun 2016 20:17:48 -0700 (MST)
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <1465500646897-17625.post@n5.nabble.com>
References: <1465341692808-17580.post@n5.nabble.com>
	<1465425316172-17608.post@n5.nabble.com>
	<1465464592495-17613.post@n5.nabble.com>
	<1465473712712-17615.post@n5.nabble.com>
	<1465486855136-17619.post@n5.nabble.com>
	<1465500646897-17625.post@n5.nabble.com>
Message-ID: <1465528668597-17629.post@n5.nabble.com>

Here you have it in my interpretation.
<http://forum.openscad.org/file/n17629/Schwartz_surface.png> 
I used a primitive evaluated by:

function Schwartz_p(pt, a,b,c) = a*cos(pt[0]) + b*cos(pt[1]) + c*cos(pt[2])
;

and the following main code to render it:

S   = f_primitive([ SCHWARTZ, 1, 1, 1 ]);
msh = f_mesh_evaluation(S, [-500,-500,-167], 1000, 1000, 666, 50,50,33);
mesh_surface(msh);  

The process generated 64984 triangles with 91958 vertices and required 9min
and 20sec to render.






--
View this message in context: http://forum.openscad.org/Improve-rendering-speed-tp17580p17629.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From maurizio.butti at gmail.com  Fri Jun 10 08:26:16 2016
From: maurizio.butti at gmail.com (buttim)
Date: Fri, 10 Jun 2016 05:26:16 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <trinity-5170919a-2515-4da8-9568-62aa6a61160f-1465486577527@3capp-gmx-bs24>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>
	<1465389163871-17588.post@n5.nabble.com>
	<trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>
	<89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
	<37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
	<CALe4i4ubmXuKSHz0+amK2Gk2hng0zyVWVq2kTeiFeX3GujWGUA@mail.gmail.com>
	<trinity-5170919a-2515-4da8-9568-62aa6a61160f-1465486577527@3capp-gmx-bs24>
Message-ID: <CALe4i4uWkKu9wxaGFQAZypnh6Kxtfdj9UqqGNLz0=4_NbkTB2w@mail.gmail.com>

I implemented the configurable abbreviation list.
Together with the patch I'm sending you an example file (equivalent to what
was previously hard coded).

The file location follows the same logic as the color schemes cfgs.

The two other features are still present:
CTRL+* to toggle current folding
CTRL+Return to complete the word preceding the cursor

On Thu, Jun 9, 2016 at 5:37 PM, tp3 [via OpenSCAD] <
ml-node+s1091067n17618h33 at n5.nabble.com> wrote:

> Von: buttim <[hidden email]
> <http:///user/SendEmail.jtp?type=node&node=17618&i=0>>
> > I'm thinking about moving the abbreviation list to an external
> > file. Can someone point me in the right direction for choosing
> > a format and location for the file? I was thinking about a
> > per-user JSON file.
> >
> I guess it would be best to follow the logic that already exists
> for render and editor color schemes, e.g.:
>
>
> https://github.com/openscad/openscad/blob/master/src/scintillaeditor.cpp#L400
>
> This allows to read the configuration from an application folder
> location as well as overwrite from the user directory.
>
> > The format might be something like this:
> > {
> >   "t" : {
> >         "l" : "translate([",
> >         "r" : "])"
> >       }
> > }
> >
> Using JSON makes sense as the other configs are using this format
> too and there's a simple file parser in Boost to read those files.
>
> The l/r looks a bit strange, but it does not really matter much.
> How would that handle multi-line cases / indentation? I think JSON
> supports escaping like \t and \n, but I did not try that yet.
>
> I think it would be good to merge the features from both solutions
> as they do complete each other (like the CallTips are probably
> quite useful for people getting started).
>
> ciao,
>   Torsten.
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17618&i=1>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> -- Torsten
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/Abbreviations-tp17583p17618.html
> To unsubscribe from Abbreviations, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17583&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3NTgzfDE4OTg0NTUyNTk=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>


editor-improvement3.patch (5K) <http://forum.openscad.org/attachment/17630/0/editor-improvement3.patch>
abbrev.json (640 bytes) <http://forum.openscad.org/attachment/17630/1/abbrev.json>




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17630.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160610/ae0c19b9/attachment.html>

From rudolf at parkinbot.com  Fri Jun 10 08:43:13 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 10 Jun 2016 05:43:13 -0700 (MST)
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <1465528668597-17629.post@n5.nabble.com>
References: <1465341692808-17580.post@n5.nabble.com>
	<1465425316172-17608.post@n5.nabble.com>
	<1465464592495-17613.post@n5.nabble.com>
	<1465473712712-17615.post@n5.nabble.com>
	<1465486855136-17619.post@n5.nabble.com>
	<1465500646897-17625.post@n5.nabble.com>
	<1465528668597-17629.post@n5.nabble.com>
Message-ID: <1465562593161-17631.post@n5.nabble.com>

Hi Ronaldo, 

this looks good and shows that your Frep-stuff is working well, besides that
it could profit from some (implicit) grid refining scheme near the borders.
Ok, you use the triple cosine shortcut instead of the minimal surface
calculation, but this is another theme. 
To be able to print it, one would also like to have a skin extruded
structure, which was the point where my effort (and time) ended. 

BTW, I used an ordinary R?->R function plot after resolving the implict
equation to z and discretrizing it over a domain restricted to the partial
symmetry. While this gives you a nice border around the top hole, you can
use union operations to repeat the rendered chuck for all symmetries with
the required orientation. 




--
View this message in context: http://forum.openscad.org/Improve-rendering-speed-tp17580p17631.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jon at jonbondy.com  Fri Jun 10 08:48:20 2016
From: jon at jonbondy.com (jon)
Date: Fri, 10 Jun 2016 08:48:20 -0400
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <1465562593161-17631.post@n5.nabble.com>
References: <1465341692808-17580.post@n5.nabble.com>
	<1465425316172-17608.post@n5.nabble.com>
	<1465464592495-17613.post@n5.nabble.com>
	<1465473712712-17615.post@n5.nabble.com>
	<1465486855136-17619.post@n5.nabble.com>
	<1465500646897-17625.post@n5.nabble.com>
	<1465528668597-17629.post@n5.nabble.com>
	<1465562593161-17631.post@n5.nabble.com>
Message-ID: <8bdbabe1-e612-fcd1-d6a9-c57f001f83d3@jonbondy.com>

"I use an ordinary R?->R function plot after resolving the implicit 
equation to z and discretrizing it over a domain restricted to the 
partial symmetry"

Yeah <I said casually>.  I do that all of the time!  In my sleep, in 
fact!  LOL!

Kudos to you, Parkinbot!  What would we do without people like you!

Jon


On 6/10/2016 8:43 AM, Parkinbot wrote:
> Hi Ronaldo,
>
> this looks good and shows that your Frep-stuff is working well, besides that
> it could profit from some (implicit) grid refining scheme near the borders.
> Ok, you use the triple cosine shortcut instead of the minimal surface
> calculation, but this is another theme.
> To be able to print it, one would also like to have a skin extruded
> structure, which was the point where my effort (and time) ended.
>
> BTW, I used an ordinary R?->R function plot after resolving the implict
> equation to z and discretrizing it over a domain restricted to the partial
> symmetry. While this gives you a nice border around the top hole, you can
> use union operations to repeat the rendered chuck for all symmetries with
> the required orientation.
>



From maurizio.butti at gmail.com  Fri Jun 10 11:23:28 2016
From: maurizio.butti at gmail.com (buttim)
Date: Fri, 10 Jun 2016 08:23:28 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>
	<1465389163871-17588.post@n5.nabble.com>
	<trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>
	<89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
	<37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
Message-ID: <CALe4i4t863sOfFpYwUdq02vPPNc9--9i2kdP_Eb+DZB5NuzgFQ@mail.gmail.com>

Torsten, would you mind sharing the code you used for call tips?
I'm trying to implement them myself but I'm stuck

On Wed, Jun 8, 2016 at 11:27 PM, tp3 [via OpenSCAD] <
ml-node+s1091067n17607h92 at n5.nabble.com> wrote:

> On 06/08/2016 02:47 PM, Torsten Paul wrote:
> > I can try to kick off a special Windows build though.
> >
> ...aaaaaand for completeness, that's the version with the
> AutoComplete/CallTip and Template implementation based on
> the QScintilla features.
>
>
> http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-32_issue905-Installer.exe
> http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-32_issue905.zip
>
> http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-64_issue905-Installer.exe
> http://files.openscad.org/snapshots/OpenSCAD-2016.06.08-x86-64_issue905.zip
>
> The template popup should be triggered by CTRL+Enter
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17607&i=0>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> -- Torsten
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/Abbreviations-tp17583p17607.html
> To unsubscribe from Abbreviations, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17583&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3NTgzfDE4OTg0NTUyNTk=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17633.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160610/92033924/attachment.html>

From rudolf at parkinbot.com  Fri Jun 10 12:21:22 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 10 Jun 2016 09:21:22 -0700 (MST)
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <8bdbabe1-e612-fcd1-d6a9-c57f001f83d3@jonbondy.com>
References: <1465341692808-17580.post@n5.nabble.com>
	<1465425316172-17608.post@n5.nabble.com>
	<1465464592495-17613.post@n5.nabble.com>
	<1465473712712-17615.post@n5.nabble.com>
	<1465486855136-17619.post@n5.nabble.com>
	<1465500646897-17625.post@n5.nabble.com>
	<1465528668597-17629.post@n5.nabble.com>
	<1465562593161-17631.post@n5.nabble.com>
	<8bdbabe1-e612-fcd1-d6a9-c57f001f83d3@jonbondy.com>
Message-ID: <1465575682202-17634.post@n5.nabble.com>

Jon, we are talking about explicitly rendering shapes and rendering speed of
the polyhedron approach. Sorry, if that gets boring for you. 



--
View this message in context: http://forum.openscad.org/Improve-rendering-speed-tp17580p17634.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Fri Jun 10 12:46:37 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Fri, 10 Jun 2016 18:46:37 +0200
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <CALe4i4t863sOfFpYwUdq02vPPNc9--9i2kdP_Eb+DZB5NuzgFQ@mail.gmail.com>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>
	<1465389163871-17588.post@n5.nabble.com>
	<trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>
	<89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
	<37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
	<CALe4i4t863sOfFpYwUdq02vPPNc9--9i2kdP_Eb+DZB5NuzgFQ@mail.gmail.com>
Message-ID: <19b3528c-0e5a-31c6-5926-27dc0ea84c7a@gmx.de>

On 06/10/2016 05:23 PM, buttim wrote:
> Torsten, would you mind sharing the code you used for call tips?
> I'm trying to implement them myself but I'm stuck
> 
Sure, this is the autocomplete-2 branch:

https://github.com/openscad/openscad/tree/autocomplete-2

ciao,
  Torsten.


From rcmpersiano at gmail.com  Fri Jun 10 12:56:22 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Fri, 10 Jun 2016 09:56:22 -0700 (MST)
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <1465562593161-17631.post@n5.nabble.com>
References: <1465341692808-17580.post@n5.nabble.com>
	<1465425316172-17608.post@n5.nabble.com>
	<1465464592495-17613.post@n5.nabble.com>
	<1465473712712-17615.post@n5.nabble.com>
	<1465486855136-17619.post@n5.nabble.com>
	<1465500646897-17625.post@n5.nabble.com>
	<1465528668597-17629.post@n5.nabble.com>
	<1465562593161-17631.post@n5.nabble.com>
Message-ID: <1465577782277-17636.post@n5.nabble.com>

Parkinbot wrote
> this looks good and shows that your Frep-stuff is working well, besides
> that it could profit from some (implicit) grid refining scheme near the
> borders.

Yes, the borders are a lot rough. I did not implemented any feature
detection scheme. They are a lot harder to implement. A local refining
scheme would improve the edges but they would be rough anyway.

> Ok, you use the triple cosine shortcut instead of the minimal surface
> calculation, but this is another theme. 
> To be able to print it, one would also like to have a skin extruded
> structure, which was the point where my effort (and time) ended. 

I used the approximation I found in Wikipedia. I am not acquainted to the
minimal surface theory and have not found any exact implicit form of the
surface.

By changing the code a little and redefining the Schwartz primitive, I got
the following:
<http://forum.openscad.org/file/n17636/Schwartz_surface_skin.png> 
<http://forum.openscad.org/file/n17636/Schwartz_surface_skin_0.png> 
The upper image represents just the surface and it is not a manyfold. It was
obtained by commenting 4 lines of the f_mesh_evaluation code eliminating the
six bounding box of the mesh.

The lower image seems to be what you wanted. The Schwartz primitive for that
was simply redefined as:

> function Schwartz_p(pt, a,b,c,d) =
>     let( s = a*cos(pt[0]) + b*cos(pt[1]) + c*cos(pt[2]) )
>     min( s, - s + d);

So, the inside surface was obtained just by doing an "offset" of the
original function value and the min() is equivalent to an intersection. That
is one of the marvelous things of the implicit representation of f-reps.

This last run took a longer time to preview: 20min. So, I think we are in
the wrong thread to discuss this subject :)

> BTW, I used an ordinary R?->R function plot after resolving the implict
> equation to z and discretrizing it over a domain restricted to the partial
> symmetry. While this gives you a nice border around the top hole, you can
> use union operations to repeat the rendered chuck for all symmetries with
> the required orientation.

I have no idea of what you are saying here. But I tip my hat to you.

@jon, I could not say it better.




--
View this message in context: http://forum.openscad.org/Improve-rendering-speed-tp17580p17636.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Fri Jun 10 13:08:48 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Fri, 10 Jun 2016 14:08:48 -0300
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <1465577782277-17636.post@n5.nabble.com>
References: <1465341692808-17580.post@n5.nabble.com>
	<1465425316172-17608.post@n5.nabble.com>
	<1465464592495-17613.post@n5.nabble.com>
	<1465473712712-17615.post@n5.nabble.com>
	<1465486855136-17619.post@n5.nabble.com>
	<1465500646897-17625.post@n5.nabble.com>
	<1465528668597-17629.post@n5.nabble.com>
	<1465562593161-17631.post@n5.nabble.com>
	<1465577782277-17636.post@n5.nabble.com>
Message-ID: <CA+i9EaA=x2JbouS16Ur6r0A9nc7aWZ-3udVujiNK3WCOTETe6A@mail.gmail.com>

One more point: Rudolf, who I suppose is German, referred to a minimal
surface created by Schwartz, who I suppose is German too. I would like to
render a minimal surface created by a Brazilian mathematician (I am a
Brazilian too): the Costa surface. But I have not found any implicit form
of it. If someone give me a reference for that I would be very grateful.

Ronaldo

2016-06-10 13:56 GMT-03:00 Ronaldo <rcmpersiano at gmail.com>:

> Parkinbot wrote
> > this looks good and shows that your Frep-stuff is working well, besides
> > that it could profit from some (implicit) grid refining scheme near the
> > borders.
>
> Yes, the borders are a lot rough. I did not implemented any feature
> detection scheme. They are a lot harder to implement. A local refining
> scheme would improve the edges but they would be rough anyway.
>
> > Ok, you use the triple cosine shortcut instead of the minimal surface
> > calculation, but this is another theme.
> > To be able to print it, one would also like to have a skin extruded
> > structure, which was the point where my effort (and time) ended.
>
> I used the approximation I found in Wikipedia. I am not acquainted to the
> minimal surface theory and have not found any exact implicit form of the
> surface.
>
> By changing the code a little and redefining the Schwartz primitive, I got
> the following:
> <http://forum.openscad.org/file/n17636/Schwartz_surface_skin.png>
> <http://forum.openscad.org/file/n17636/Schwartz_surface_skin_0.png>
> The upper image represents just the surface and it is not a manyfold. It
> was
> obtained by commenting 4 lines of the f_mesh_evaluation code eliminating
> the
> six bounding box of the mesh.
>
> The lower image seems to be what you wanted. The Schwartz primitive for
> that
> was simply redefined as:
>
> > function Schwartz_p(pt, a,b,c,d) =
> >     let( s = a*cos(pt[0]) + b*cos(pt[1]) + c*cos(pt[2]) )
> >     min( s, - s + d);
>
> So, the inside surface was obtained just by doing an "offset" of the
> original function value and the min() is equivalent to an intersection.
> That
> is one of the marvelous things of the implicit representation of f-reps.
>
> This last run took a longer time to preview: 20min. So, I think we are in
> the wrong thread to discuss this subject :)
>
> > BTW, I used an ordinary R?->R function plot after resolving the implict
> > equation to z and discretrizing it over a domain restricted to the
> partial
> > symmetry. While this gives you a nice border around the top hole, you can
> > use union operations to repeat the rendered chuck for all symmetries with
> > the required orientation.
>
> I have no idea of what you are saying here. But I tip my hat to you.
>
> @jon, I could not say it better.
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Improve-rendering-speed-tp17580p17636.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160610/6d345bb9/attachment.html>

From jon at jonbondy.com  Fri Jun 10 13:39:16 2016
From: jon at jonbondy.com (jon)
Date: Fri, 10 Jun 2016 13:39:16 -0400
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <1465575682202-17634.post@n5.nabble.com>
References: <1465341692808-17580.post@n5.nabble.com>
	<1465425316172-17608.post@n5.nabble.com>
	<1465464592495-17613.post@n5.nabble.com>
	<1465473712712-17615.post@n5.nabble.com>
	<1465486855136-17619.post@n5.nabble.com>
	<1465500646897-17625.post@n5.nabble.com>
	<1465528668597-17629.post@n5.nabble.com>
	<1465562593161-17631.post@n5.nabble.com>
	<8bdbabe1-e612-fcd1-d6a9-c57f001f83d3@jonbondy.com>
	<1465575682202-17634.post@n5.nabble.com>
Message-ID: <efd0d54b-1921-fcbf-0f76-3d2be6a15a6b@jonbondy.com>

Parkinbot:

Not boring!  Just above my head!  I really am amazed at what some of you 
are doing.  As I said, Kudos!

Jon


On 6/10/2016 12:21 PM, Parkinbot wrote:
> Jon, we are talking about explicitly rendering shapes and rendering speed of
> the polyhedron approach. Sorry, if that gets boring for you.
>



From rudolf at parkinbot.com  Fri Jun 10 14:51:10 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 10 Jun 2016 11:51:10 -0700 (MST)
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <CA+i9EaA=x2JbouS16Ur6r0A9nc7aWZ-3udVujiNK3WCOTETe6A@mail.gmail.com>
References: <1465341692808-17580.post@n5.nabble.com>
	<1465425316172-17608.post@n5.nabble.com>
	<1465464592495-17613.post@n5.nabble.com>
	<1465473712712-17615.post@n5.nabble.com>
	<1465486855136-17619.post@n5.nabble.com>
	<1465500646897-17625.post@n5.nabble.com>
	<1465528668597-17629.post@n5.nabble.com>
	<1465562593161-17631.post@n5.nabble.com>
	<1465577782277-17636.post@n5.nabble.com>
	<CA+i9EaA=x2JbouS16Ur6r0A9nc7aWZ-3udVujiNK3WCOTETe6A@mail.gmail.com>
Message-ID: <1465584670046-17639.post@n5.nabble.com>

Ronaldo, 

thanks again, for showing how mighty your approach is. I tried to dig out my
code on that, but found only my first approach, which I did in OpenSCAD. I
think I changed to Matlab after that. I remember there was a point, I got
frustrated on calculating the skin part - in which your approach seems to be
very good. 
<http://forum.openscad.org/file/n17639/SchwarzP.png> 

its better here 
http://www.indiana.edu/~minimal/archive/Triply/genus3/PLines/web/

For the R?->R part: You can resolve the skin equation
0 = cos(x) + cos(y) + cos(z)
for z
z = acos(-cos(x) - cos(y))

and then solve this system for any (feasible) z-discretrization, while
restricting x and y (out of R?) to the symmetry region (shown by the lines
in linked picture). Not such a big deal.


> So, the inside surface was obtained just by doing an "offset" of the
> original function value and the min() is equivalent to an intersection.
> That
> is one of the marvelous things of the implicit representation of f-reps.

yes, this is indeed marvelous. I'll have to dig into that one day. 

Hermann Schwarz was a German mathematican. Can't help you with Costa ...
Surface math is not my world by the way.



--
View this message in context: http://forum.openscad.org/Improve-rendering-speed-tp17580p17639.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Fri Jun 10 16:33:05 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 10 Jun 2016 13:33:05 -0700 (MST)
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <1465577782277-17636.post@n5.nabble.com>
References: <1465341692808-17580.post@n5.nabble.com>
	<1465425316172-17608.post@n5.nabble.com>
	<1465464592495-17613.post@n5.nabble.com>
	<1465473712712-17615.post@n5.nabble.com>
	<1465486855136-17619.post@n5.nabble.com>
	<1465500646897-17625.post@n5.nabble.com>
	<1465528668597-17629.post@n5.nabble.com>
	<1465562593161-17631.post@n5.nabble.com>
	<1465577782277-17636.post@n5.nabble.com>
Message-ID: <1465590785362-17640.post@n5.nabble.com>

A good way to get nice borders for the Schwarz-p even with an unrefined grid
is to do the meshing over a slightly enlarged domain and then intersect with
a cube ...  



--
View this message in context: http://forum.openscad.org/Improve-rendering-speed-tp17580p17640.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Fri Jun 10 20:28:53 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 10 Jun 2016 17:28:53 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <CALe4i4uWkKu9wxaGFQAZypnh6Kxtfdj9UqqGNLz0=4_NbkTB2w@mail.gmail.com>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>
	<1465389163871-17588.post@n5.nabble.com>
	<trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>
	<89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
	<37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
	<CALe4i4ubmXuKSHz0+amK2Gk2hng0zyVWVq2kTeiFeX3GujWGUA@mail.gmail.com>
	<trinity-5170919a-2515-4da8-9568-62aa6a61160f-1465486577527@3capp-gmx-bs24>
	<CALe4i4uWkKu9wxaGFQAZypnh6Kxtfdj9UqqGNLz0=4_NbkTB2w@mail.gmail.com>
Message-ID: <1465604933463-17641.post@n5.nabble.com>

buttim wrote
> The two other features are still present:
> CTRL+* to toggle current folding
> CTRL+Return to complete the word preceding the cursor

Is that (Ctrl+*) the numeric keypad '*'? Presumably not Ctrl-Shift-8.

Many keybords today don't have the numeric keypad. But if it will be
configurable then it doesn't matter.

Note, keyboard usage is documented  here
<https://github.com/openscad/openscad/wiki/Keyboard-Shortcuts>  



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17641.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Fri Jun 10 21:05:33 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Fri, 10 Jun 2016 18:05:33 -0700 (MST)
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <1465590785362-17640.post@n5.nabble.com>
References: <1465341692808-17580.post@n5.nabble.com>
	<1465425316172-17608.post@n5.nabble.com>
	<1465464592495-17613.post@n5.nabble.com>
	<1465473712712-17615.post@n5.nabble.com>
	<1465486855136-17619.post@n5.nabble.com>
	<1465500646897-17625.post@n5.nabble.com>
	<1465528668597-17629.post@n5.nabble.com>
	<1465562593161-17631.post@n5.nabble.com>
	<1465577782277-17636.post@n5.nabble.com>
	<1465590785362-17640.post@n5.nabble.com>
Message-ID: <1465607133980-17642.post@n5.nabble.com>

Parkinbot wrote
> A good way to get nice borders for the Schwarz-p even with an unrefined
> grid is to do the meshing over a slightly enlarged domain and then
> intersect with a cube ...

Done.
<http://forum.openscad.org/file/n17642/Schwartz_surface_skin_0.png> 
For easy comparison, I have left the top and bottom surfaces uncut. I have
refined the mesh a lot this time: it has 140000 points. The final model has
43000 polygons, subdivided in 137000 triangles with a total of 197000
vertices. It took 38min to render. 

I agree, jon, this is definitely not an appropriate example for this thread.
:)

Ronaldo



--
View this message in context: http://forum.openscad.org/Improve-rendering-speed-tp17580p17642.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From who_doctor at hotmail.com  Fri Jun 10 22:10:49 2016
From: who_doctor at hotmail.com (FourthDr)
Date: Fri, 10 Jun 2016 19:10:49 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1465435901969-17609.post@n5.nabble.com>
References: <1465102800925-17562.post@n5.nabble.com>
	<1465143581708-17564.post@n5.nabble.com>
	<27DB34DF-13FD-4E94-A137-AA72268CC475@bigpond.com>
	<1465161595947-17566.post@n5.nabble.com>
	<1465244550987-17570.post@n5.nabble.com>
	<1465315196206-17577.post@n5.nabble.com>
	<1465330365286-17578.post@n5.nabble.com>
	<1465365373459-17582.post@n5.nabble.com>
	<1465402000639-17599.post@n5.nabble.com>
	<1465435901969-17609.post@n5.nabble.com>
Message-ID: <1465611049021-17643.post@n5.nabble.com>

Hi :

Your previous code generates errors:

Compiling design (CSG Tree generation)...
WARNING: Ignoring unknown variable 'i'. 
WARNING: Ignoring unknown variable 'i'. 

Not sure what is causing that, since it does compile and export ok.

Was not able to get the other code for T and ballsocket to work at all. The
cut simply stays a dovetail.



--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17643.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Fri Jun 10 23:34:44 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 10 Jun 2016 20:34:44 -0700 (MST)
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <1465607133980-17642.post@n5.nabble.com>
References: <1465425316172-17608.post@n5.nabble.com>
	<1465464592495-17613.post@n5.nabble.com>
	<1465473712712-17615.post@n5.nabble.com>
	<1465486855136-17619.post@n5.nabble.com>
	<1465500646897-17625.post@n5.nabble.com>
	<1465528668597-17629.post@n5.nabble.com>
	<1465562593161-17631.post@n5.nabble.com>
	<1465577782277-17636.post@n5.nabble.com>
	<1465590785362-17640.post@n5.nabble.com>
	<1465607133980-17642.post@n5.nabble.com>
Message-ID: <1465616084602-17644.post@n5.nabble.com>

Well done. Now you see that it is not harmonic. The minimal surface connects
with circles. 

But I'll vote for it to get the logo of multithreaded OpenSCAD.



--
View this message in context: http://forum.openscad.org/Improve-rendering-speed-tp17580p17644.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From maurizio.butti at gmail.com  Sat Jun 11 05:40:06 2016
From: maurizio.butti at gmail.com (buttim)
Date: Sat, 11 Jun 2016 02:40:06 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <1465604933463-17641.post@n5.nabble.com>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>
	<1465389163871-17588.post@n5.nabble.com>
	<trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>
	<89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
	<37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
	<CALe4i4ubmXuKSHz0+amK2Gk2hng0zyVWVq2kTeiFeX3GujWGUA@mail.gmail.com>
	<trinity-5170919a-2515-4da8-9568-62aa6a61160f-1465486577527@3capp-gmx-bs24>
	<CALe4i4uWkKu9wxaGFQAZypnh6Kxtfdj9UqqGNLz0=4_NbkTB2w@mail.gmail.com>
	<1465604933463-17641.post@n5.nabble.com>
Message-ID: <CALe4i4tvWiS9zv0m62tvq9kj1=eiarm=j+h1Hh=dc-3oD02OMQ@mail.gmail.com>

You can use both *. I choose this shortcut because SciTE already uses it
and OpenSCAD has CTRL++ and CTRL+- so it should not sound too exotic to
OpenSCAD users.
It's just a menu shortcut so it won't be configurable (unless the whole
menu system becomes confgurable one day)

On Sat, Jun 11, 2016 at 2:28 AM, MichaelAtOz [via OpenSCAD] <
ml-node+s1091067n17641h46 at n5.nabble.com> wrote:

> buttim wrote
> The two other features are still present:
> CTRL+* to toggle current folding
> CTRL+Return to complete the word preceding the cursor
>
> Is that (Ctrl+*) the numeric keypad '*'? Presumably not Ctrl-Shift-8.
>
> Many keybords today don't have the numeric keypad. But if it will be
> configurable then it doesn't matter.
>
> Note, keyboard usage is documented here
> <https://github.com/openscad/openscad/wiki/Keyboard-Shortcuts>
> *Admin - PM me if you need anything, *
> or if I've done something stupid...
>
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; to the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work.
> Obviously inclusion of works of previous authors is not included in the
> above.
>
> The *TPP* is no simple *?trade agreement.?* *Fight it!*
> http://www.ourfairdeal.org/ *time is running out!*
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/Abbreviations-tp17583p17641.html
> To unsubscribe from Abbreviations, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17583&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3NTgzfDE4OTg0NTUyNTk=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17645.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160611/8724adfc/attachment.html>

From rcmpersiano at gmail.com  Sat Jun 11 11:31:31 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Sat, 11 Jun 2016 08:31:31 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1465611049021-17643.post@n5.nabble.com>
References: <1465143581708-17564.post@n5.nabble.com>
	<27DB34DF-13FD-4E94-A137-AA72268CC475@bigpond.com>
	<1465161595947-17566.post@n5.nabble.com>
	<1465244550987-17570.post@n5.nabble.com>
	<1465315196206-17577.post@n5.nabble.com>
	<1465330365286-17578.post@n5.nabble.com>
	<1465365373459-17582.post@n5.nabble.com>
	<1465402000639-17599.post@n5.nabble.com>
	<1465435901969-17609.post@n5.nabble.com>
	<1465611049021-17643.post@n5.nabble.com>
Message-ID: <1465659091702-17646.post@n5.nabble.com>

I could not reproduce the errors you mentioned with my codes. Try these ones:
puzzlecutlib3.scad
<http://forum.openscad.org/file/n17646/puzzlecutlib3.scad>  
Test_Cylinder.scad
<http://forum.openscad.org/file/n17646/Test_Cylinder.scad>  



--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17646.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From lucas.hartmann at gmail.com  Sat Jun 11 17:33:15 2016
From: lucas.hartmann at gmail.com (Lucas Vinicius Hartmann)
Date: Sat, 11 Jun 2016 18:33:15 -0300
Subject: [OpenSCAD] Matrix inversion
Message-ID: <CAMbFyDTjRmQrjxzx87XCL7KZSeW7O=s8j5DL6zBSYmhU6CVvXQ@mail.gmail.com>

(Sorry if this is a double post, I sent this message the first time before
completing registration on the mailing list.)

Sometime ago I wrote a small set of functions for construction and use
transformation matrices, including matrix inversion. Here is the code:
https://github.com/lhartmann/openscad_m4lib/blob/master/m4.scad

Matrix inversion code works most of the time, except I just detected a bug
I can not solve. A simple dual rotation matrix, 90? around Y then 90?
around Z, is yielding nan+inf on all elements of the inverse. Works nicely
for other angles, though...

M = m4rz(90) * m4ry(90); // Rotates around Y first, then Z
Minv = m4inv(M); // Fails

I managed to narrow it down to m4inv_solve(...) which does diagonal zero
detection. This is the testing code I used to isolate the error:

M = m4rz(90)*m4ry(90); // Test matrix
echo( // Failing
    m4inv_solve(0, // Solve row 0: Detect diagonal zero, swap rows, calls
solve2(...).
        m4inv_mx(M) // Expand to Row-Reduced Echelon Format
    )
);
echo( // Working by bypassing m4inv_solve(...)
    m4inv_solve2(0, // Solve row 0 (normalize, scale and subtract from all
other rows)
        m4inv_rowswap(0,2, // Swap rows 0 and 2 by hand
            m4inv_mx(M) // Expand to Row-Reduced Echelon Format
        )
    )
);

This is the code for the misbehaving function, it should check move zeroes
away from the diagonal of row i:

// Solve one step, ensure nonzero at diagonal element.
function m4inv_zero(x) = abs(x) < 1e-5;
function m4inv_solve(i,mx) =
                 !m4inv_zero(mx[i][i  ]) ?
m4inv_solve2(i,                     mx ) :
        i+1<4 && !m4inv_zero(mx[i][i+1]) ? m4inv_solve2(i,
m4inv_rowswap(i,i+1,mx)) :
        i+2<4 && !m4inv_zero(mx[i][i+2]) ? m4inv_solve2(i,
m4inv_rowswap(i,i+2,mx)) :
        i+3<4 && !m4inv_zero(mx[i][i+3]) ? m4inv_solve2(i,
m4inv_rowswap(i,i+3,mx)) :
        m4identity(); // Singular matrix, reset to identity

I looked at the code for m4inv_solve(...) above for a while, but don't get
why it is failing... Any ideas?

--
Lucas Vinicius Hartmann

Dizem que se voc? rodar o CD do Windows ao contr?rio ele mostra uma
mensagem demon?aca... Mas isso nem ? o pior, se voc? rodar ele normal ele
instala o Windows!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160611/f03c9cfb/attachment.html>

From rudolf at parkinbot.com  Sat Jun 11 20:07:34 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Sat, 11 Jun 2016 17:07:34 -0700 (MST)
Subject: [OpenSCAD] Matrix inversion
In-Reply-To: <CAMbFyDTjRmQrjxzx87XCL7KZSeW7O=s8j5DL6zBSYmhU6CVvXQ@mail.gmail.com>
References: <CAMbFyDTjRmQrjxzx87XCL7KZSeW7O=s8j5DL6zBSYmhU6CVvXQ@mail.gmail.com>
Message-ID: <1465690054832-17648.post@n5.nabble.com>

Are you sure this code ever run properly on a matrix with 0 in diagonal?

look at this trace: 


> mx = m4rx(90)*m4ry(90);
> i=0; 
> echo(m4inv_solve(0,m4inv_mx(mx)));  // first call evaluated in m4inv(mx)
> echo(i+2<4 && !m4inv_zero(mx[i][i+2]) ? m4inv_solve2(i,
> m4inv_rowswap(i,i+2,mx)):"not taken");  // echo(m4inv_rowswap(i,i+2,mx)); 
> // d
> echo((i==0) ? mx[i]/mx[i][i]:"not taken"); 
> 
> Answer:
> ECHO: [[0, 0, 1, 0], [1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 0, 1]] // mx
> ECHO: [[nan, inf, nan, nan, nan, nan, inf, nan], [nan, -inf, nan, nan,
> nan, nan, -inf, nan], [nan, nan, nan, nan, nan, nan, nan, nan], [nan, nan,
> nan, nan, nan, nan, nan, nan]]
> ECHO: [[nan, inf, nan, nan], [nan, -inf, nan, nan], [nan, nan, nan, nan],
> [nan, nan, nan, nan]]
> ECHO: [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]] // row swap
> ECHO: [nan, nan, inf, nan]

So, you test for a column
  !m4inv_zero(mx[i][i+2]) 
then do a row swap 
  m4inv_rowswap(i,i+2,mx)) 
and then divide by 0
 mx[0]/mx[0][0]

You don't know, what you are "buying" by the row swap. 
You should test for the row with first element non-zero and swap this one




--
View this message in context: http://forum.openscad.org/Matrix-inversion-tp17647p17648.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Sat Jun 11 20:14:50 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Sat, 11 Jun 2016 17:14:50 -0700 (MST)
Subject: [OpenSCAD] Matrix inversion
In-Reply-To: <1465690054832-17648.post@n5.nabble.com>
References: <CAMbFyDTjRmQrjxzx87XCL7KZSeW7O=s8j5DL6zBSYmhU6CVvXQ@mail.gmail.com>
	<1465690054832-17648.post@n5.nabble.com>
Message-ID: <1465690490940-17649.post@n5.nabble.com>

Ups I pressed the wrong button ... 

I'd say this works better:


> function m4inv_solve(i,mx) = 
> 	         !m4inv_zero(mx[i][i  ]) ? m4inv_solve2(i,                     mx
> ) :
> 	i+1<4 && !m4inv_zero(mx[i+1][i]) ? m4inv_solve2(i,
> m4inv_rowswap(i,i+1,mx)) :
> 	i+2<4 && !m4inv_zero(mx[i+2][i]) ? m4inv_solve2(i,
> m4inv_rowswap(i,i+2,mx)) :
> 	i+3<4 && !m4inv_zero(mx[i+3][i]) ? m4inv_solve2(i,
> m4inv_rowswap(i,i+3,mx)) :
> 	m4identity(); // Singular matrix, reset to identity





--
View this message in context: http://forum.openscad.org/Matrix-inversion-tp17647p17649.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From lucas.hartmann at gmail.com  Sat Jun 11 21:07:17 2016
From: lucas.hartmann at gmail.com (Lucas Vinicius Hartmann)
Date: Sat, 11 Jun 2016 22:07:17 -0300
Subject: [OpenSCAD] Matrix inversion
In-Reply-To: <1465690490940-17649.post@n5.nabble.com>
References: <CAMbFyDTjRmQrjxzx87XCL7KZSeW7O=s8j5DL6zBSYmhU6CVvXQ@mail.gmail.com>
	<1465690054832-17648.post@n5.nabble.com>
	<1465690490940-17649.post@n5.nabble.com>
Message-ID: <CAMbFyDR1CYSKSsHoWcvSCXXMWfouLj7KMk5S0+Mt9-cEZ0RnGg@mail.gmail.com>

You are absolutely right. Thanks!

Somehow I ended up swapping rows and columns there... Fix commited to
github.

--
Lucas Vinicius Hartmann

Dizem que se voc? rodar o CD do Windows ao contr?rio ele mostra uma
mensagem demon?aca... Mas isso nem ? o pior, se voc? rodar ele normal ele
instala o Windows!

2016-06-11 21:14 GMT-03:00 Parkinbot <rudolf at parkinbot.com>:

> Ups I pressed the wrong button ...
>
> I'd say this works better:
>
>
> > function m4inv_solve(i,mx) =
> >                !m4inv_zero(mx[i][i  ]) ? m4inv_solve2(i,
>      mx
> > ) :
> >       i+1<4 && !m4inv_zero(mx[i+1][i]) ? m4inv_solve2(i,
> > m4inv_rowswap(i,i+1,mx)) :
> >       i+2<4 && !m4inv_zero(mx[i+2][i]) ? m4inv_solve2(i,
> > m4inv_rowswap(i,i+2,mx)) :
> >       i+3<4 && !m4inv_zero(mx[i+3][i]) ? m4inv_solve2(i,
> > m4inv_rowswap(i,i+3,mx)) :
> >       m4identity(); // Singular matrix, reset to identity
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Matrix-inversion-tp17647p17649.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160611/9323011a/attachment.html>

From jart3 at verizon.net  Sat Jun 11 23:12:36 2016
From: jart3 at verizon.net (John Tucker)
Date: Sat, 11 Jun 2016 23:12:36 -0400
Subject: [OpenSCAD] Please explain error I made on torus
Message-ID: <201606112312.36533.jart3@verizon.net>

Took a break to do something "arty" rather then my usual mechanical stuff. At 
the core was a torus that I defined as:

rotate_extrude(convexity = 10, $fn = 64)
translate([5, 0, 0])
circle(r = 1, $fn = 64);

Never checked the dimensions in blender and rest was visually scaled about the 
torus. Got the print back today and torus is exactly 2X too big.  I checked:
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/2D_Primitives
and see:
"d  : circle diameter (only available in versions later than 2014.03. Debian 
is currently know to be behind" 
Behind? I'm running Debian and so using OpenSCAD 2012.05.26 (maybe some decade 
they'll update).
The cross section diameter on the print is 4mm Dia., the OD of the ring =28mm 
and the ID=20mm and that makes no sense to me.
TIA for explanation.


From oz.at.michael at gmail.com  Sun Jun 12 01:18:10 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 11 Jun 2016 22:18:10 -0700 (MST)
Subject: [OpenSCAD] Please explain error I made on torus
In-Reply-To: <201606112312.36533.jart3@verizon.net>
References: <201606112312.36533.jart3@verizon.net>
Message-ID: <1465708690719-17652.post@n5.nabble.com>

John Tucker wrote
> Got the print back today and torus is exactly 2X too big. 
> The cross section diameter on the print is 4mm Dia., the OD of the ring
> =28mm 
> and the ID=20mm and that makes no sense to me.
> TIA for explanation.

My best guess is inches v's mm and a badly calibrated printer(?)

ID from OpenSCAD 8mm x 2.54 (inch) = 20.32
OD  "           "         12mm  "                 = 30.48 (~28mm?)
Cross section d "     2mm  "                 = 5.08 (~4mm?)






-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Please-explain-error-I-made-on-torus-tp17651p17652.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sun Jun 12 01:19:28 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 11 Jun 2016 22:19:28 -0700 (MST)
Subject: [OpenSCAD] Please explain error I made on torus
In-Reply-To: <1465708690719-17652.post@n5.nabble.com>
References: <201606112312.36533.jart3@verizon.net>
	<1465708690719-17652.post@n5.nabble.com>
Message-ID: <1465708768095-17653.post@n5.nabble.com>

forgot this
<http://forum.openscad.org/file/n17653/td17651.jpg> 



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Please-explain-error-I-made-on-torus-tp17651p17653.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Sun Jun 12 08:07:38 2016
From: marius at kintel.net (Marius Kintel)
Date: Sun, 12 Jun 2016 08:07:38 -0400
Subject: [OpenSCAD] Please explain error I made on torus
In-Reply-To: <201606112312.36533.jart3@verizon.net>
References: <201606112312.36533.jart3@verizon.net>
Message-ID: <7B11CD06-7F28-4E55-8DB0-1A004FD3746E@kintel.net>

I agree with Michael,

Either, the code you posted isn?t accurate, or someone messed up the printing configuration pretty badly.
Since you?re using ?r=? for the circle, the ?d=? doesn?t apply. Even if it did, it wouldn?t magically turn it into a radius.

 -Marius



From jart3 at verizon.net  Sun Jun 12 12:35:53 2016
From: jart3 at verizon.net (John Tucker)
Date: Sun, 12 Jun 2016 12:35:53 -0400
Subject: [OpenSCAD] Please explain error I made on torus
Message-ID: <201606121235.53892.jart3@verizon.net>

thanks MichaelAtz
                          O
and Marius
The thing was a mish-mash of blender, inkscape and (mostly) openscad, 
importing stls etc. Sifting through dozens of files looking for where I made 
error. Your assurances that it isn't in openscad is very helpful and I'm 
looking elsewhere. 
BTW it's not the printer's fault it's obviously my fault. Finished object is 
quite good just wound up off size with visual proportioning done from wrong 
point. Take away for me .... even arty stuff ... keep better records and 
organize workflow better. Thanks again for helping me out, I'll keep digging.


From maurizio.butti at gmail.com  Mon Jun 13 06:04:27 2016
From: maurizio.butti at gmail.com (buttim)
Date: Mon, 13 Jun 2016 03:04:27 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <19b3528c-0e5a-31c6-5926-27dc0ea84c7a@gmx.de>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>
	<1465389163871-17588.post@n5.nabble.com>
	<trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>
	<89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
	<37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
	<CALe4i4t863sOfFpYwUdq02vPPNc9--9i2kdP_Eb+DZB5NuzgFQ@mail.gmail.com>
	<19b3528c-0e5a-31c6-5926-27dc0ea84c7a@gmx.de>
Message-ID: <CALe4i4vLzeQMDWYQejSoJFzbtN3Qay4bbJDoXAA7gp_+u9jBvg@mail.gmail.com>

Thanks to careful examination of your code I managed to get the call tips
functionality working.

My approach is quite different and leads to a much more compact code (but I
might be missing some features of your version). Basically I used the
already available QsciAPIs class instead of defining my own inherited from
QsciAbstractAPIs.

A good thing about my code is that the templates are configurable (file
scad.api, usual locations).

Another small goodie is the (automatical) highlighting of the current
parameter.

I added a new menu entry (and shortcut) for toggling all folds in the
document, once more SciTE-style.

On Fri, Jun 10, 2016 at 6:47 PM, tp3 [via OpenSCAD] <
ml-node+s1091067n17635h60 at n5.nabble.com> wrote:

> On 06/10/2016 05:23 PM, buttim wrote:
> > Torsten, would you mind sharing the code you used for call tips?
> > I'm trying to implement them myself but I'm stuck
> >
> Sure, this is the autocomplete-2 branch:
>
> https://github.com/openscad/openscad/tree/autocomplete-2
>
> ciao,
>   Torsten.
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17635&i=0>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> -- Torsten
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/Abbreviations-tp17583p17635.html
> To unsubscribe from Abbreviations, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17583&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3NTgzfDE4OTg0NTUyNTk=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>


editor-improvement4.patch (7K) <http://forum.openscad.org/attachment/17656/0/editor-improvement4.patch>
scad.api (168 bytes) <http://forum.openscad.org/attachment/17656/1/scad.api>




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17656.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160613/2aeea53b/attachment.html>

From rudolf at parkinbot.com  Mon Jun 13 09:10:10 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Mon, 13 Jun 2016 06:10:10 -0700 (MST)
Subject: [OpenSCAD] Animation $vpr
Message-ID: <1465823410507-17657.post@n5.nabble.com>

Trying to render some animations with OpenSCAD 2016.04.06. 

For roundtravel of view I use:

$vpr = [70, 0, $t*360];

but this produces some unwanted height changes in outputted frame sequence.
This is the effect: https://www.youtube.com/watch?v=NA3Zcl2nfVA

This is the frames and their sizes: 
<http://forum.openscad.org/file/n17657/Ani.png> 

Any idea? Is this a known bug?





--
View this message in context: http://forum.openscad.org/Animation-vpr-tp17657.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mysatyre at gmail.com  Mon Jun 13 13:50:30 2016
From: mysatyre at gmail.com (=?UTF-8?Q?Martin_K=C3=BChne?=)
Date: Mon, 13 Jun 2016 19:50:30 +0200
Subject: [OpenSCAD] Fwd: check validity feature
In-Reply-To: <CAONKL1AKsdDbf=Z0Y7Syx+S0wriuELS3GgOJ-jx49wFcPgMM+Q@mail.gmail.com>
References: <CAONKL1CnnyzqtyzyUZ=GXuaCq=gceRUPWQk7pL3SGgr1k7YdQQ@mail.gmail.com>
	<CAONKL1AKsdDbf=Z0Y7Syx+S0wriuELS3GgOJ-jx49wFcPgMM+Q@mail.gmail.com>
Message-ID: <CAONKL1C2TF753w=_fs-gdpZknRwzO3maX5OvFPrUa7WwEOiuuw@mail.gmail.com>

Hello list,

I'm not sure I understood openscad's "check validity" feature
correctly, so I thought I'd be asking about it here.
The output I'm getting for [0] is this:

ERROR:
CGAL error in CGAL_Nef_polyhedron3():
CGAL ERROR: assertion violation!
Expr: e->incident_sface() != SFace_const_handle()
File: /usr/include/CGAL/Nef_S2/SM_const_decorator.h
Line: 326
Valid: no

The main reason I'm asking is that the error message doesn't seem to
have anything to do with whatever form of geometric analysis of the
shape in question is done.

cheers!
mar77i

[0] https://gist.github.com/mar77i/c97245aa3ecc87a0000da569e02988cf


From marius at kintel.net  Mon Jun 13 15:22:03 2016
From: marius at kintel.net (Marius Kintel)
Date: Mon, 13 Jun 2016 15:22:03 -0400
Subject: [OpenSCAD] Animation $vpr
In-Reply-To: <1465823410507-17657.post@n5.nabble.com>
References: <1465823410507-17657.post@n5.nabble.com>
Message-ID: <C7CC8CFA-E628-4645-9029-77D14476C08C@kintel.net>

> On Jun 13, 2016, at 09:10 AM, Parkinbot <rudolf at parkinbot.com> wrote:
> 
> but this produces some unwanted height changes in outputted frame sequence.
> [?]
> Any idea? Is this a known bug?
> 
It?s not a known problem.
Can you reproduce this with a trivial example and minimal # of frames?

 -Marius



From marius at kintel.net  Mon Jun 13 15:24:23 2016
From: marius at kintel.net (Marius Kintel)
Date: Mon, 13 Jun 2016 15:24:23 -0400
Subject: [OpenSCAD] check validity feature
In-Reply-To: <CAONKL1C2TF753w=_fs-gdpZknRwzO3maX5OvFPrUa7WwEOiuuw@mail.gmail.com>
References: <CAONKL1CnnyzqtyzyUZ=GXuaCq=gceRUPWQk7pL3SGgr1k7YdQQ@mail.gmail.com>
	<CAONKL1AKsdDbf=Z0Y7Syx+S0wriuELS3GgOJ-jx49wFcPgMM+Q@mail.gmail.com>
	<CAONKL1C2TF753w=_fs-gdpZknRwzO3maX5OvFPrUa7WwEOiuuw@mail.gmail.com>
Message-ID: <5D4C9D2E-80C9-4AE4-93FF-45BB052259F8@kintel.net>

Martin,

This could be related to wrong winding order of the manually created polyhedron.
See https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/FAQ#Why_is_my_model_showing_up_with_F5_but_not_F6.3F

 -Marius



From rcmpersiano at gmail.com  Mon Jun 13 15:52:14 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Mon, 13 Jun 2016 12:52:14 -0700 (MST)
Subject: [OpenSCAD] Animation $vpr
In-Reply-To: <1465823410507-17657.post@n5.nabble.com>
References: <1465823410507-17657.post@n5.nabble.com>
Message-ID: <1465847534077-17661.post@n5.nabble.com>

Rudolf,

I think everything works right if you set $vpt = [0,0,h] for any h. If you
don't set $vpt, the z movement depends on the initial $vpt value which may
be changed by interaction. I understand that $vpt is the center of the
rotation set by $vpr.

Ronaldo



--
View this message in context: http://forum.openscad.org/Animation-vpr-tp17657p17661.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Mon Jun 13 16:05:11 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 13 Jun 2016 22:05:11 +0200
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <CALe4i4vLzeQMDWYQejSoJFzbtN3Qay4bbJDoXAA7gp_+u9jBvg@mail.gmail.com>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>
	<1465389163871-17588.post@n5.nabble.com>
	<trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>
	<89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
	<37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
	<CALe4i4t863sOfFpYwUdq02vPPNc9--9i2kdP_Eb+DZB5NuzgFQ@mail.gmail.com>
	<19b3528c-0e5a-31c6-5926-27dc0ea84c7a@gmx.de>
	<CALe4i4vLzeQMDWYQejSoJFzbtN3Qay4bbJDoXAA7gp_+u9jBvg@mail.gmail.com>
Message-ID: <b7edbb8a-933d-3f41-5ca5-13232efe11c5@gmx.de>

On 06/13/2016 12:04 PM, buttim wrote:
> Thanks to careful examination of your code I managed to get the call
> tips functionality working.
> 
Could you please send that as unified diff (e.g. "diff -up")?

ciao,
  Torsten.


From rudolf at parkinbot.com  Mon Jun 13 16:13:20 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Mon, 13 Jun 2016 13:13:20 -0700 (MST)
Subject: [OpenSCAD] Animation $vpr
In-Reply-To: <C7CC8CFA-E628-4645-9029-77D14476C08C@kintel.net>
References: <1465823410507-17657.post@n5.nabble.com>
	<C7CC8CFA-E628-4645-9029-77D14476C08C@kintel.net>
Message-ID: <1465848800333-17662.post@n5.nabble.com>

I traced it down. Was somehow homemade. I had a typo when naming colors and
ignored the warnings issued.

This reproduces it. Use >1 timesteps ;-) 

if ($t<0.5) color("golden") cube([10, 20, 10]); 

You can see in the status line, how the size is jumping. 



--
View this message in context: http://forum.openscad.org/Animation-vpr-tp17657p17662.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mysatyre at gmail.com  Mon Jun 13 16:20:31 2016
From: mysatyre at gmail.com (=?UTF-8?Q?Martin_K=C3=BChne?=)
Date: Mon, 13 Jun 2016 22:20:31 +0200
Subject: [OpenSCAD] check validity feature
In-Reply-To: <5D4C9D2E-80C9-4AE4-93FF-45BB052259F8@kintel.net>
References: <CAONKL1CnnyzqtyzyUZ=GXuaCq=gceRUPWQk7pL3SGgr1k7YdQQ@mail.gmail.com>
	<CAONKL1AKsdDbf=Z0Y7Syx+S0wriuELS3GgOJ-jx49wFcPgMM+Q@mail.gmail.com>
	<CAONKL1C2TF753w=_fs-gdpZknRwzO3maX5OvFPrUa7WwEOiuuw@mail.gmail.com>
	<5D4C9D2E-80C9-4AE4-93FF-45BB052259F8@kintel.net>
Message-ID: <CAONKL1DXYdMc8A78QrDaV3o=WvusA15k6LPPG8rKqONMN77jnA@mail.gmail.com>

It appears that was indeed the problem. Thanks a lot for your assistance.

cheers!
mar77i


From maurizio.butti at gmail.com  Mon Jun 13 18:39:28 2016
From: maurizio.butti at gmail.com (buttim)
Date: Mon, 13 Jun 2016 15:39:28 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <b7edbb8a-933d-3f41-5ca5-13232efe11c5@gmx.de>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>
	<1465389163871-17588.post@n5.nabble.com>
	<trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>
	<89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
	<37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
	<CALe4i4t863sOfFpYwUdq02vPPNc9--9i2kdP_Eb+DZB5NuzgFQ@mail.gmail.com>
	<19b3528c-0e5a-31c6-5926-27dc0ea84c7a@gmx.de>
	<CALe4i4vLzeQMDWYQejSoJFzbtN3Qay4bbJDoXAA7gp_+u9jBvg@mail.gmail.com>
	<b7edbb8a-933d-3f41-5ca5-13232efe11c5@gmx.de>
Message-ID: <CALe4i4u_49JiBSqmFvTFHDjh0bkedxsasq6hbeyp7j=AwqkqBg@mail.gmail.com>

As always a Win64 build would be appreciated, but don't get mad at that,
really.

On Mon, Jun 13, 2016 at 10:16 PM, tp3 [via OpenSCAD] <
ml-node+s1091067n17663h28 at n5.nabble.com> wrote:

> On 06/13/2016 12:04 PM, buttim wrote:
> > Thanks to careful examination of your code I managed to get the call
> > tips functionality working.
> >
> Could you please send that as unified diff (e.g. "diff -up")?
>
> ciao,
>   Torsten.
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17663&i=0>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> -- Torsten
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/Abbreviations-tp17583p17663.html
> To unsubscribe from Abbreviations, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17583&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3NTgzfDE4OTg0NTUyNTk=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>


editor-improvement5.patch (12K) <http://forum.openscad.org/attachment/17665/0/editor-improvement5.patch>




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17665.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160613/6836d6a4/attachment.html>

From rudolf at parkinbot.com  Mon Jun 13 19:34:19 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Mon, 13 Jun 2016 16:34:19 -0700 (MST)
Subject: [OpenSCAD] Animation $vpr
In-Reply-To: <1465848800333-17662.post@n5.nabble.com>
References: <1465823410507-17657.post@n5.nabble.com>
	<C7CC8CFA-E628-4645-9029-77D14476C08C@kintel.net>
	<1465848800333-17662.post@n5.nabble.com>
Message-ID: <1465860859872-17666.post@n5.nabble.com>

So it's actually any warning being issued. This IS a bug!

cube([1,1,1]);
  if ($t<0.5)
    max(x); 



--
View this message in context: http://forum.openscad.org/Animation-vpr-tp17657p17666.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Mon Jun 13 20:01:51 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Mon, 13 Jun 2016 21:01:51 -0300
Subject: [OpenSCAD] Animation $vpr
In-Reply-To: <1465860859872-17666.post@n5.nabble.com>
References: <1465823410507-17657.post@n5.nabble.com>
	<C7CC8CFA-E628-4645-9029-77D14476C08C@kintel.net>
	<1465848800333-17662.post@n5.nabble.com>
	<1465860859872-17666.post@n5.nabble.com>
Message-ID: <CA+i9EaAnt85ixrA6uhQLdjrP70fnvTkY2T4t4YsRguE2U+B5nQ@mail.gmail.com>

Are you sure? I got "WARNING: Ignoring unknown module 'max'".

2016-06-13 20:34 GMT-03:00 Parkinbot <rudolf at parkinbot.com>:

> So it's actually any warning being issued. This IS a bug!
>
> cube([1,1,1]);
>   if ($t<0.5)
>     max(x);
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Animation-vpr-tp17657p17666.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160613/4db37c97/attachment.html>

From rudolf at parkinbot.com  Mon Jun 13 20:57:41 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Mon, 13 Jun 2016 17:57:41 -0700 (MST)
Subject: [OpenSCAD] Animation $vpr
In-Reply-To: <CA+i9EaAnt85ixrA6uhQLdjrP70fnvTkY2T4t4YsRguE2U+B5nQ@mail.gmail.com>
References: <1465823410507-17657.post@n5.nabble.com>
	<C7CC8CFA-E628-4645-9029-77D14476C08C@kintel.net>
	<1465848800333-17662.post@n5.nabble.com>
	<1465860859872-17666.post@n5.nabble.com>
	<CA+i9EaAnt85ixrA6uhQLdjrP70fnvTkY2T4t4YsRguE2U+B5nQ@mail.gmail.com>
Message-ID: <1465865861909-17668.post@n5.nabble.com>

As I wrote: any warning issued during animation will change the size of the
frame - by 30 pixels. 

max() is a built-in function and should be known. But x is unknown and this
issues a warning. 

First I thought it was the $vpr. Found the simple but nasty reason now:
Stacked upon the output window there is a panel shown, that indicates the
warning - and thus alters the frame height. 

So its more a feature then a bug. But it should be switched off during
animations. 





--
View this message in context: http://forum.openscad.org/Animation-vpr-tp17657p17668.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Mon Jun 13 21:50:25 2016
From: marius at kintel.net (Marius Kintel)
Date: Mon, 13 Jun 2016 21:50:25 -0400
Subject: [OpenSCAD] Animation $vpr
In-Reply-To: <1465865861909-17668.post@n5.nabble.com>
References: <1465823410507-17657.post@n5.nabble.com>
	<C7CC8CFA-E628-4645-9029-77D14476C08C@kintel.net>
	<1465848800333-17662.post@n5.nabble.com>
	<1465860859872-17666.post@n5.nabble.com>
	<CA+i9EaAnt85ixrA6uhQLdjrP70fnvTkY2T4t4YsRguE2U+B5nQ@mail.gmail.com>
	<1465865861909-17668.post@n5.nabble.com>
Message-ID: <9CD75E18-DB90-4F0F-875A-ECB18E9E2B61@kintel.net>

> On Jun 13, 2016, at 20:57 PM, Parkinbot <rudolf at parkinbot.com> wrote:
> 
> max() is a built-in function and should be known. But x is unknown and this
> issues a warning. 
> 
Built-in _function_, which is not syntactically correct to use here. It would need to be a module.

I agree that warnings messages probably shouldn?t eat into the 3D viewport.
Nice catch.

 -Marius



From oz.at.michael at gmail.com  Tue Jun 14 02:37:23 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Mon, 13 Jun 2016 23:37:23 -0700 (MST)
Subject: [OpenSCAD] part not rendering properly?
In-Reply-To: <1465884823977-17670.post@n5.nabble.com>
References: <1465884823977-17670.post@n5.nabble.com>
Message-ID: <1465886243095-17671.post@n5.nabble.com>

shinokozo wrote
> an area that is supposed to have a slot appears to be missing slightly. I
> say slightly because if you zoom in really close some of it is partially
> differenced. I just want to know if it is a problem with my code or
> something else. 
> 
> Windows 10 64-bit
> OpenScad 2015.03-2 64-bit
> Part.scad <http://forum.openscad.org/file/n17670/Part.scad>  
> 
> Thanks.

This is what I get. Not sure what it is meant to look like, but look ok.
<http://forum.openscad.org/file/n17671/td17670.jpg> 

Windows 10 has had some problems, try
Edit/Preferences/Advanced/Force_Goldfeather. (for some reason I always have
to check whether that is Goldfinger...)



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/part-not-rendering-properly-tp17670p17671.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Tue Jun 14 05:46:18 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Tue, 14 Jun 2016 02:46:18 -0700 (MST)
Subject: [OpenSCAD] Animation $vpr
In-Reply-To: <9CD75E18-DB90-4F0F-875A-ECB18E9E2B61@kintel.net>
References: <1465823410507-17657.post@n5.nabble.com>
	<C7CC8CFA-E628-4645-9029-77D14476C08C@kintel.net>
	<1465848800333-17662.post@n5.nabble.com>
	<1465860859872-17666.post@n5.nabble.com>
	<CA+i9EaAnt85ixrA6uhQLdjrP70fnvTkY2T4t4YsRguE2U+B5nQ@mail.gmail.com>
	<1465865861909-17668.post@n5.nabble.com>
	<9CD75E18-DB90-4F0F-875A-ECB18E9E2B61@kintel.net>
Message-ID: <1465897578749-17672.post@n5.nabble.com>

You are both perfectly right. I used just something unknown to generate a
warning. 




--
View this message in context: http://forum.openscad.org/Animation-vpr-tp17657p17672.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Tue Jun 14 08:39:24 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Tue, 14 Jun 2016 05:39:24 -0700 (MST)
Subject: [OpenSCAD] part not rendering properly?
In-Reply-To: <1465884823977-17670.post@n5.nabble.com>
References: <1465884823977-17670.post@n5.nabble.com>
Message-ID: <1465907964030-17673.post@n5.nabble.com>

without having analyzed your code let me remark something, as it takes a long
time to show up with F5. 

There is some problems in OpenSCAD with closely attaching shapes.

<http://forum.openscad.org/file/n17673/od.png> 

As your result 'lives' in 2D it might be a better idea to start and compose
everything in 2D using circle() and square() modules instead of doing it in
3D and projecting it down. A 2D-shape you can linear_extrude() to have it
3D. This is fast.   

Here is a different approach, as a start. Not exactly your measures (didn't
understand your outer slot description), but fast, and easy to understand
and alter. 



> grate_od = 59.5;
> grate_id = 58;
> grate_thickness = 1;
> slot_height = 0.5; //inner slot 
> slot_width = 1.06; //inner slot
> number_of_slot = 24; //number of inner slot
> outer_slot_height = 1;
> outer_slot_width = 0.625;
> number_of_outer_slot = 8;
> outerslotradius=0.156; //inside the outer slot hole
> outerslotradius2=0.312; //the two hole on outside slot hole
> totalouterslotwidth=2.5;
> number_of_slot_holes=8; //number of outer slots
> 
> rot_offset = 360/number_of_slot/2; 
> 
> 
> $fn=100; 
> difference()
> {
>    added(); 
>    subtracted(); 
> }
> 
> module subtracted()
> {
>     circle(grate_id);
>     for(i=[0:360/number_of_slot:359.9]) // inner slots
>       rotate(i+rot_offset) translate([grate_id, 0])
>         square([2*slot_height, slot_width], center = true); 
> 
>     for(i=[0:360/number_of_outer_slot:359.9]) // outer slots
>       rotate(i) translate([grate_od+outer_slot_height/2, 0])
>          square([2*outer_slot_height, outer_slot_width], center = true); 
> }
> 
> module added()
> {
>     circle(grate_od);
>     for(i=[0:360/number_of_outer_slot:359.9]) // outer slot support
>       rotate(i)   translate([grate_od, 0])
>         square([2*(outer_slot_height), totalouterslotwidth], center =
> true); 
> }





--
View this message in context: http://forum.openscad.org/part-not-rendering-properly-tp17670p17673.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From whareg12 at yahoo.com  Tue Jun 14 13:29:17 2016
From: whareg12 at yahoo.com (william)
Date: Tue, 14 Jun 2016 10:29:17 -0700 (MST)
Subject: [OpenSCAD] Chromebook 13 (Acer) to run OpenSCAD?
Message-ID: <1465925357747-17676.post@n5.nabble.com>

I know it may not be appropriate to ask this question here.  I am supporting
a charity organisation which will run a summer camp for the underprivileged
free of charge.  I intend to bring a few printers into the camp and one of
the things I want to show them is OpenSCAD.  However, the organisation has
quite a number of Acer Chromebook 13's (sponsorship or donation, I don't
know) and I wonder how I can run OpenSCAD on them.

I check that some of the chromebook models may be converted to Windows but
it seems that this one is not listed.  Perhaps the article was written
before this model was put on the market.

https://www.reddit.com/r/chrultrabook/comments/3gtjfe/windows_10_fully_supported_on_acer_c720c720p/
<https://www.reddit.com/r/chrultrabook/comments/3gtjfe/windows_10_fully_supported_on_acer_c720c720p/>  

Any suggestions?
Thx.



--
View this message in context: http://forum.openscad.org/Chromebook-13-Acer-to-run-OpenSCAD-tp17676.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Tue Jun 14 17:04:05 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Tue, 14 Jun 2016 23:04:05 +0200
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <CALe4i4u_49JiBSqmFvTFHDjh0bkedxsasq6hbeyp7j=AwqkqBg@mail.gmail.com>
References: <CALe4i4tiWseg1qRvmiqQGfMWCsycMWy+KYb=fstLCocG8VZ2yQ@mail.gmail.com>
	<20160608025739.ff6adf689bdadc0c877d244c2165f773.cc984462bd.wbe@email24.godaddy.com>
	<1465389163871-17588.post@n5.nabble.com>
	<trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>
	<89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
	<37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
	<CALe4i4t863sOfFpYwUdq02vPPNc9--9i2kdP_Eb+DZB5NuzgFQ@mail.gmail.com>
	<19b3528c-0e5a-31c6-5926-27dc0ea84c7a@gmx.de>
	<CALe4i4vLzeQMDWYQejSoJFzbtN3Qay4bbJDoXAA7gp_+u9jBvg@mail.gmail.com>
	<b7edbb8a-933d-3f41-5ca5-13232efe11c5@gmx.de>
	<CALe4i4u_49JiBSqmFvTFHDjh0bkedxsasq6hbeyp7j=AwqkqBg@mail.gmail.com>
Message-ID: <68720d97-585b-c428-38ea-e6266d52658a@gmx.de>

On 06/14/2016 12:39 AM, buttim wrote:
> As always a Win64 build would be appreciated, but don't get mad at that, really.
> 
Yep, that's why I was asking for the unified diff, much easier to patch
multiple files.

http://files.openscad.org/snapshots/OpenSCAD-2016.06.14-x86-32_abbrev-patch-Installer.exe
http://files.openscad.org/snapshots/OpenSCAD-2016.06.14-x86-32_abbrev_patch.zip
http://files.openscad.org/snapshots/OpenSCAD-2016.06.14-x86-64_abbrev-patch-Installer.exe
http://files.openscad.org/snapshots/OpenSCAD-2016.06.14-x86-64_abbrev-patch.zip

As the config file is not included, it will probably crash when just using the
packages above.

Can you send an example "abbrev.json" file?

ciao,
  Torsten.



From maurizio.butti at gmail.com  Tue Jun 14 18:30:57 2016
From: maurizio.butti at gmail.com (buttim)
Date: Tue, 14 Jun 2016 15:30:57 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <68720d97-585b-c428-38ea-e6266d52658a@gmx.de>
References: <1465389163871-17588.post@n5.nabble.com>
	<trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>
	<89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
	<37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
	<CALe4i4t863sOfFpYwUdq02vPPNc9--9i2kdP_Eb+DZB5NuzgFQ@mail.gmail.com>
	<19b3528c-0e5a-31c6-5926-27dc0ea84c7a@gmx.de>
	<CALe4i4vLzeQMDWYQejSoJFzbtN3Qay4bbJDoXAA7gp_+u9jBvg@mail.gmail.com>
	<b7edbb8a-933d-3f41-5ca5-13232efe11c5@gmx.de>
	<CALe4i4u_49JiBSqmFvTFHDjh0bkedxsasq6hbeyp7j=AwqkqBg@mail.gmail.com>
	<68720d97-585b-c428-38ea-e6266d52658a@gmx.de>
Message-ID: <CALe4i4sH8ktzMQJ-W8F1i4s=bx1nLioVpzpNs=TxapJYG=nkKQ@mail.gmail.com>

Sorry, I thought I had it attached already. Here it is.
And thanks for the build

On Tue, Jun 14, 2016 at 11:05 PM, tp3 [via OpenSCAD] <
ml-node+s1091067n17677h62 at n5.nabble.com> wrote:

> On 06/14/2016 12:39 AM, buttim wrote:
> > As always a Win64 build would be appreciated, but don't get mad at that,
> really.
> >
> Yep, that's why I was asking for the unified diff, much easier to patch
> multiple files.
>
>
> http://files.openscad.org/snapshots/OpenSCAD-2016.06.14-x86-32_abbrev-patch-Installer.exe
>
> http://files.openscad.org/snapshots/OpenSCAD-2016.06.14-x86-32_abbrev_patch.zip
>
> http://files.openscad.org/snapshots/OpenSCAD-2016.06.14-x86-64_abbrev-patch-Installer.exe
>
> http://files.openscad.org/snapshots/OpenSCAD-2016.06.14-x86-64_abbrev-patch.zip
>
> As the config file is not included, it will probably crash when just using
> the
> packages above.
>
> Can you send an example "abbrev.json" file?
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17677&i=0>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> -- Torsten
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/Abbreviations-tp17583p17677.html
> To unsubscribe from Abbreviations, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17583&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3NTgzfDE4OTg0NTUyNTk=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>


abbrev.json (656 bytes) <http://forum.openscad.org/attachment/17678/0/abbrev.json>




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17678.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160614/f1121ec4/attachment.html>

From Torsten.Paul at gmx.de  Tue Jun 14 18:55:51 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Wed, 15 Jun 2016 00:55:51 +0200
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <CALe4i4sH8ktzMQJ-W8F1i4s=bx1nLioVpzpNs=TxapJYG=nkKQ@mail.gmail.com>
References: <1465389163871-17588.post@n5.nabble.com>
	<trinity-c297f12a-f6ee-494c-8234-2c38c6fe7c10-1465390028901@3capp-gmx-bs71>
	<89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
	<37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
	<CALe4i4t863sOfFpYwUdq02vPPNc9--9i2kdP_Eb+DZB5NuzgFQ@mail.gmail.com>
	<19b3528c-0e5a-31c6-5926-27dc0ea84c7a@gmx.de>
	<CALe4i4vLzeQMDWYQejSoJFzbtN3Qay4bbJDoXAA7gp_+u9jBvg@mail.gmail.com>
	<b7edbb8a-933d-3f41-5ca5-13232efe11c5@gmx.de>
	<CALe4i4u_49JiBSqmFvTFHDjh0bkedxsasq6hbeyp7j=AwqkqBg@mail.gmail.com>
	<68720d97-585b-c428-38ea-e6266d52658a@gmx.de>
	<CALe4i4sH8ktzMQJ-W8F1i4s=bx1nLioVpzpNs=TxapJYG=nkKQ@mail.gmail.com>
Message-ID: <cb7e1529-d739-5324-6c8d-e88503931d48@gmx.de>

On 06/15/2016 12:30 AM, buttim wrote:
> Sorry, I thought I had it attached already. Here it is.
> And thanks for the build
> 
With that file, I'm getting:

$ ./openscad
Gtk-Message: Failed to load module "canberra-gtk-module"
terminate called after throwing an instance of
'boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::io::too_many_args> >'
  what():  boost::too_many_args: format-string referred to less arguments than were passed
Aborted

I did not have time to have a closer look yet...

ciao,
  Torsten.



From maurizio.butti at gmail.com  Tue Jun 14 18:59:26 2016
From: maurizio.butti at gmail.com (buttim)
Date: Tue, 14 Jun 2016 15:59:26 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <cb7e1529-d739-5324-6c8d-e88503931d48@gmx.de>
References: <89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
	<37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
	<CALe4i4t863sOfFpYwUdq02vPPNc9--9i2kdP_Eb+DZB5NuzgFQ@mail.gmail.com>
	<19b3528c-0e5a-31c6-5926-27dc0ea84c7a@gmx.de>
	<CALe4i4vLzeQMDWYQejSoJFzbtN3Qay4bbJDoXAA7gp_+u9jBvg@mail.gmail.com>
	<b7edbb8a-933d-3f41-5ca5-13232efe11c5@gmx.de>
	<CALe4i4u_49JiBSqmFvTFHDjh0bkedxsasq6hbeyp7j=AwqkqBg@mail.gmail.com>
	<68720d97-585b-c428-38ea-e6266d52658a@gmx.de>
	<CALe4i4sH8ktzMQJ-W8F1i4s=bx1nLioVpzpNs=TxapJYG=nkKQ@mail.gmail.com>
	<cb7e1529-d739-5324-6c8d-e88503931d48@gmx.de>
Message-ID: <CALe4i4uA6-VxqfEpF6stqQaO4_Z+m1LpnWfJ9izvM0AbRF1qZA@mail.gmail.com>

It worked for me under win64. Did you put it where the executable is?
Il 15/giu/2016 00:56, "tp3 [via OpenSCAD]" <
ml-node+s1091067n17679h24 at n5.nabble.com> ha scritto:

> On 06/15/2016 12:30 AM, buttim wrote:
> > Sorry, I thought I had it attached already. Here it is.
> > And thanks for the build
> >
> With that file, I'm getting:
>
> $ ./openscad
> Gtk-Message: Failed to load module "canberra-gtk-module"
> terminate called after throwing an instance of
> 'boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::io::too_many_args>
> >'
>   what():  boost::too_many_args: format-string referred to less arguments
> than were passed
> Aborted
>
> I did not have time to have a closer look yet...
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17679&i=0>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> -- Torsten
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/Abbreviations-tp17583p17679.html
> To unsubscribe from Abbreviations, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17583&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3NTgzfDE4OTg0NTUyNTk=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17680.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160614/e3904ffa/attachment.html>

From rcmpersiano at gmail.com  Wed Jun 15 01:18:37 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Wed, 15 Jun 2016 02:18:37 -0300
Subject: [OpenSCAD] Animation $vpr
In-Reply-To: <1465897578749-17672.post@n5.nabble.com>
References: <1465823410507-17657.post@n5.nabble.com>
	<C7CC8CFA-E628-4645-9029-77D14476C08C@kintel.net>
	<1465848800333-17662.post@n5.nabble.com>
	<1465860859872-17666.post@n5.nabble.com>
	<CA+i9EaAnt85ixrA6uhQLdjrP70fnvTkY2T4t4YsRguE2U+B5nQ@mail.gmail.com>
	<1465865861909-17668.post@n5.nabble.com>
	<9CD75E18-DB90-4F0F-875A-ECB18E9E2B61@kintel.net>
	<1465897578749-17672.post@n5.nabble.com>
Message-ID: <CA+i9EaA44OKwyxd52LyzqQQTShbJX6tcWcKLzbJBn+RfSS2RZQ@mail.gmail.com>

Hitchhiking Rudolf's thread: when I dump pictures with the Animate feature
I get just full black .png images. Any ideas?

2016-06-14 6:46 GMT-03:00 Parkinbot <rudolf at parkinbot.com>:

> You are both perfectly right. I used just something unknown to generate a
> warning.
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Animation-vpr-tp17657p17672.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160615/f7c2d986/attachment.html>

From atex76 at shaw.ca  Wed Jun 15 02:07:21 2016
From: atex76 at shaw.ca (username)
Date: Tue, 14 Jun 2016 23:07:21 -0700 (MST)
Subject: [OpenSCAD] Evaluating imported STL's
Message-ID: <1465970841871-17682.post@n5.nabble.com>

Hi everyone, first time poster here. Just learned about OpenSCAD and I really
like the concept, being familiar with coding it's quite easy to get the hang
of it.

Would like to create a batch script which would load and STL (no faults,
procedurally generated by another app), check for certain
features/measurements...append some geometry in function of those
measurements then save it back into an STL. Currently doing this manually,
which is time consuming given the number of models we have to go though.

Question is: are there any functions available to check where two objects
would intersect or collide ? I mean kinda like raytracing form a given
coordinate with a given vector and see where that ray would intersect our
loaded mesh ? Or is there any feedback I could use ?

Thanks.



--
View this message in context: http://forum.openscad.org/Evaluating-imported-STL-s-tp17682.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Wed Jun 15 02:25:53 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Tue, 14 Jun 2016 23:25:53 -0700 (MST)
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <1465970841871-17682.post@n5.nabble.com>
References: <1465970841871-17682.post@n5.nabble.com>
Message-ID: <1465971953559-17683.post@n5.nabble.com>

No.



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17683.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From maurizio.butti at gmail.com  Wed Jun 15 02:34:34 2016
From: maurizio.butti at gmail.com (buttim)
Date: Tue, 14 Jun 2016 23:34:34 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <cb7e1529-d739-5324-6c8d-e88503931d48@gmx.de>
References: <89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
	<37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
	<CALe4i4t863sOfFpYwUdq02vPPNc9--9i2kdP_Eb+DZB5NuzgFQ@mail.gmail.com>
	<19b3528c-0e5a-31c6-5926-27dc0ea84c7a@gmx.de>
	<CALe4i4vLzeQMDWYQejSoJFzbtN3Qay4bbJDoXAA7gp_+u9jBvg@mail.gmail.com>
	<b7edbb8a-933d-3f41-5ca5-13232efe11c5@gmx.de>
	<CALe4i4u_49JiBSqmFvTFHDjh0bkedxsasq6hbeyp7j=AwqkqBg@mail.gmail.com>
	<68720d97-585b-c428-38ea-e6266d52658a@gmx.de>
	<CALe4i4sH8ktzMQJ-W8F1i4s=bx1nLioVpzpNs=TxapJYG=nkKQ@mail.gmail.com>
	<cb7e1529-d739-5324-6c8d-e88503931d48@gmx.de>
Message-ID: <CALe4i4u1WiBOq+Z13Kmfu3S2Cr8g4wDikg0XL9RYigimXACcjQ@mail.gmail.com>

There is a problem with the Windows version.
If I try to close a curly bracket, the CTRL+SHIFT+* shortcut triggers.
I'm using an italian keyboard on which the curly bracket is produced by the
key combination AltGr+Shift++. The + key is used to produce a * in
combination with shift. This does not happen in Ubuntu, so it seems a
QScintilla (or Scintilla) bug.
I also verified the crash when the scad.api file is missing, which I'll try
to solve.

On Wed, Jun 15, 2016 at 12:59 AM, maurizio butti <maurizio.butti at gmail.com>
wrote:

> It worked for me under win64. Did you put it where the executable is?
> Il 15/giu/2016 00:56, "tp3 [via OpenSCAD]" <
> ml-node+s1091067n17679h24 at n5.nabble.com> ha scritto:
>
>> On 06/15/2016 12:30 AM, buttim wrote:
>> > Sorry, I thought I had it attached already. Here it is.
>> > And thanks for the build
>> >
>> With that file, I'm getting:
>>
>> $ ./openscad
>> Gtk-Message: Failed to load module "canberra-gtk-module"
>> terminate called after throwing an instance of
>> 'boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::io::too_many_args>
>> >'
>>   what():  boost::too_many_args: format-string referred to less arguments
>> than were passed
>> Aborted
>>
>> I did not have time to have a closer look yet...
>>
>> ciao,
>>   Torsten.
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17679&i=0>
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>> -- Torsten
>>
>>
>> ------------------------------
>> If you reply to this email, your message will be added to the discussion
>> below:
>> http://forum.openscad.org/Abbreviations-tp17583p17679.html
>> To unsubscribe from Abbreviations, click here
>> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17583&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3NTgzfDE4OTg0NTUyNTk=>
>> .
>> NAML
>> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>>
>




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17684.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160614/f05912d1/attachment.html>

From Torsten.Paul at gmx.de  Wed Jun 15 06:24:55 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Wed, 15 Jun 2016 12:24:55 +0200
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <CALe4i4u1WiBOq+Z13Kmfu3S2Cr8g4wDikg0XL9RYigimXACcjQ@mail.gmail.com>
References: <89062776-6e62-a503-d6e7-6c68cfe51b69@gmx.de>
	<37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
	<CALe4i4t863sOfFpYwUdq02vPPNc9--9i2kdP_Eb+DZB5NuzgFQ@mail.gmail.com>
	<19b3528c-0e5a-31c6-5926-27dc0ea84c7a@gmx.de>
	<CALe4i4vLzeQMDWYQejSoJFzbtN3Qay4bbJDoXAA7gp_+u9jBvg@mail.gmail.com>
	<b7edbb8a-933d-3f41-5ca5-13232efe11c5@gmx.de>
	<CALe4i4u_49JiBSqmFvTFHDjh0bkedxsasq6hbeyp7j=AwqkqBg@mail.gmail.com>
	<68720d97-585b-c428-38ea-e6266d52658a@gmx.de>
	<CALe4i4sH8ktzMQJ-W8F1i4s=bx1nLioVpzpNs=TxapJYG=nkKQ@mail.gmail.com>
	<cb7e1529-d739-5324-6c8d-e88503931d48@gmx.de>,
	<CALe4i4u1WiBOq+Z13Kmfu3S2Cr8g4wDikg0XL9RYigimXACcjQ@mail.gmail.com>
Message-ID: <trinity-980652e4-e060-4007-831d-605768d597d0-1465986295106@3capp-gmx-bs25>

An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160615/7bb2dbdd/attachment.html>

From lucas.hartmann at gmail.com  Wed Jun 15 07:34:41 2016
From: lucas.hartmann at gmail.com (Lucas Vinicius Hartmann)
Date: Wed, 15 Jun 2016 08:34:41 -0300
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <1465970841871-17682.post@n5.nabble.com>
References: <1465970841871-17682.post@n5.nabble.com>
Message-ID: <CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>

I am going to take Michael's word that there is no immediate way to do
that, but since you are procedurally generating solids I assume you are no
stranger to some programming.

You may use project(...) to grab a slice from your solid. From the command
line you can then modify a transformation so that project(...) gets a slice
of your interest, and export slices to dxf. Coding a 2D raytracer should be
an order of magnitude easier than a 3D one.

If all you need to know is IF 2 objects are colliding, then you may use
intersection(), export via commandline, and check for a non-empty resulting
STL (filesize maybe?).

If you need to know WHERE they are colliding then again use intersection(),
but this time you will need to parse the output STL and read the
coordinates. Still easier than calculating the collision yourself.
Em 15/06/2016 03:08, "username" <atex76 at shaw.ca> escreveu:

> Hi everyone, first time poster here. Just learned about OpenSCAD and I
> really
> like the concept, being familiar with coding it's quite easy to get the
> hang
> of it.
>
> Would like to create a batch script which would load and STL (no faults,
> procedurally generated by another app), check for certain
> features/measurements...append some geometry in function of those
> measurements then save it back into an STL. Currently doing this manually,
> which is time consuming given the number of models we have to go though.
>
> Question is: are there any functions available to check where two objects
> would intersect or collide ? I mean kinda like raytracing form a given
> coordinate with a given vector and see where that ray would intersect our
> loaded mesh ? Or is there any feedback I could use ?
>
> Thanks.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Evaluating-imported-STL-s-tp17682.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160615/7910b17b/attachment.html>

From jon at jonbondy.com  Wed Jun 15 07:42:37 2016
From: jon at jonbondy.com (jon)
Date: Wed, 15 Jun 2016 07:42:37 -0400
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
Message-ID: <2b3cbcac-6d58-4763-a0f2-6547175f214c@jonbondy.com>

Seems like it would be possible to change the language to create an 
intersects() function that returns a boolean


On 6/15/2016 7:34 AM, Lucas Vinicius Hartmann wrote:
> If all you need to know is IF 2 objects are colliding, then you may 
> use intersection(), export via commandline, and check for a non-empty 
> resulting STL (filesize maybe?).



From rudolf at parkinbot.com  Wed Jun 15 08:07:24 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Wed, 15 Jun 2016 05:07:24 -0700 (MST)
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
Message-ID: <1465992444997-17688.post@n5.nabble.com>

lhartmann wrote
> If all you need to know is IF 2 objects are colliding, then you may use
> intersection(), export via commandline, and check for a non-empty
> resulting
> STL (filesize maybe?).

This could work, but I doubt OpenSCAD will export an empty STL. So you'd
have to catch some error, which is viable. 

There is also a fast heuristic way to do a batched collision test, with no
extra rendering involved 
- count the number of vertices v_i and faces f_i in all ingoing STLs and
v_a, f_i of the combined STL. 
- test for sum(v_i) != v_a && sum(f_i) != f_a

Its heuristic, because depending on your problem, there might be a *very*
small probability to get a false result. This is, when two shapes intersect
and have the same number of vertices AND faces.  



--
View this message in context: http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17688.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Wed Jun 15 08:32:01 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Wed, 15 Jun 2016 05:32:01 -0700 (MST)
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <2b3cbcac-6d58-4763-a0f2-6547175f214c@jonbondy.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<2b3cbcac-6d58-4763-a0f2-6547175f214c@jonbondy.com>
Message-ID: <1465993921991-17689.post@n5.nabble.com>

jon_bondy wrote
> Seems like it would be possible to change the language to 

As I said, NO.

There have/are proposals to...

but now, NO.

Even then, F5 v's F6 (full render) make such proposals reliant on full F6
render, thus losing the advantage of fast development which current F5
provides.

Any such proposals further weaken the current OpenSCAD advantages, which the
progression to things like resize() etc. which denude the F5 performance
advantage.



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17689.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Wed Jun 15 08:37:27 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Wed, 15 Jun 2016 05:37:27 -0700 (MST)
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
Message-ID: <1465994247036-17690.post@n5.nabble.com>

lhartmann wrote
> but since you are procedurally generating solids I assume you are no
> stranger to some programming.
> 
> You may use ...
> 
> Coding a 2D raytracer should be
> an order of magnitude easier than a 3D one.
> 
> you may use intersection(), export via commandline, and check for a
> non-empty resulting
> STL (filesize maybe?).
> 
> Still easier than calculating the collision yourself.

You could probably do it with a batch script...

But then you would be better off using a language designed to do the job.

Sorry, I have elevated Grump-Old-Man levels ATM...



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17690.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Wed Jun 15 09:02:12 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Wed, 15 Jun 2016 06:02:12 -0700 (MST)
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <1465992444997-17688.post@n5.nabble.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<1465992444997-17688.post@n5.nabble.com>
Message-ID: <1465995732858-17692.post@n5.nabble.com>

sorry, there was a typo: 

- test for sum(v_i) == v_a && sum(f_i) == f_a



Parkinbot wrote
> There is also a fast heuristic way to do a batched collision test, with no
> extra rendering involved 
> - count the number of vertices v_i and faces f_i in all ingoing STLs and
> v_a, f_i of the combined STL. 
> - test for sum(v_i) != v_a && sum(f_i) != f_a





--
View this message in context: http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17692.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Wed Jun 15 10:10:57 2016
From: arnholm at arnholm.org (arnholm at arnholm.org)
Date: Wed, 15 Jun 2016 16:10:57 +0200
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
Message-ID: <ef87ef1263f47f90061484af76e52ea5@arnholm.org>

On 2016-06-15 13:34, Lucas Vinicius Hartmann wrote:
> If all you need to know is IF 2 objects are colliding, then you may
> use intersection(), export via commandline, and check for a non-empty
> resulting STL (filesize maybe?).

Based on 2 STL files (or better: 2 AMF files), it would be trivially 
easy and fast to determine many cases of non-intersection, based on 
bounding boxes. However, there will be cases where bounding boxes 
intersect but where the bodies still do not intersect. For these cases a 
more detailed intersection algorithm is needed.

However, I am not aware of any way something like this can be done in 
OpenSCAD.

Carsten Arnholm


From atex76 at shaw.ca  Wed Jun 15 10:39:02 2016
From: atex76 at shaw.ca (username)
Date: Wed, 15 Jun 2016 07:39:02 -0700 (MST)
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <1465970841871-17682.post@n5.nabble.com>
References: <1465970841871-17682.post@n5.nabble.com>
Message-ID: <1466001542430-17694.post@n5.nabble.com>

Thanks for the responses



--
View this message in context: http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17694.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From lucas.hartmann at gmail.com  Wed Jun 15 11:39:47 2016
From: lucas.hartmann at gmail.com (Lucas Vinicius Hartmann)
Date: Wed, 15 Jun 2016 12:39:47 -0300
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <ef87ef1263f47f90061484af76e52ea5@arnholm.org>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<ef87ef1263f47f90061484af76e52ea5@arnholm.org>
Message-ID: <CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>

Attached is a NON-WORKING code that would be a solid-if if openscad behaved
as I had anticipated... I doesn't...

This is a simpler test case to demonstrate what I expected OpenSCAD to
do... Not sure if this is intentional or  should be considered a bug...

// Test inputs
module nothing() {
    difference() {
        sphere(r=1);
        sphere(r=2);
    }
}
module something() {
    sphere(r=1);
}

// Should return nothing, but returns something.
intersection() {
    nothing();
    something();
}

// Should return nothing, but returns something.
minkowski() {
    nothing();
    something();
}

The intersection case is pretty straight forward, intersection with an
empty set should always return empty.

Minkowski is not as easy but, to my understanding of it something() should
actually be the result of minkowski operating on something() and a single
point at (0,0,0). As I understand it, minkowski decomposes each solid (S1
and S2) as an infinite set of (x,y,z) points, combines all points from S1
to all points from S2 by adding their coordinates, and takes the resulting
set as the output solid...

>From what I saw (never looked at the code) I believe OpenSCAD is simply
discarding empty solids and, by doing so, it actually promotes nothing() to
everything() on intersections, and nothing() to a single point (0,0,0) on
minkowski operations.

--
Lucas Vinicius Hartmann

Dizem que se voc? rodar o CD do Windows ao contr?rio ele mostra uma
mensagem demon?aca... Mas isso nem ? o pior, se voc? rodar ele normal ele
instala o Windows!

2016-06-15 11:10 GMT-03:00 <arnholm at arnholm.org>:

> On 2016-06-15 13:34, Lucas Vinicius Hartmann wrote:
>
>> If all you need to know is IF 2 objects are colliding, then you may
>> use intersection(), export via commandline, and check for a non-empty
>> resulting STL (filesize maybe?).
>>
>
> Based on 2 STL files (or better: 2 AMF files), it would be trivially easy
> and fast to determine many cases of non-intersection, based on bounding
> boxes. However, there will be cases where bounding boxes intersect but
> where the bodies still do not intersect. For these cases a more detailed
> intersection algorithm is needed.
>
> However, I am not aware of any way something like this can be done in
> OpenSCAD.
>
> Carsten Arnholm
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160615/9db1641a/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ifsolid.scad
Type: application/x-openscad
Size: 911 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160615/9db1641a/attachment.scad>

From who_doctor at hotmail.com  Wed Jun 15 13:48:54 2016
From: who_doctor at hotmail.com (FourthDr)
Date: Wed, 15 Jun 2016 10:48:54 -0700 (MST)
Subject: [OpenSCAD] puzzlecutlib rendering problem & STL export error
 Current top level object is empty.
In-Reply-To: <1465659091702-17646.post@n5.nabble.com>
References: <27DB34DF-13FD-4E94-A137-AA72268CC475@bigpond.com>
	<1465161595947-17566.post@n5.nabble.com>
	<1465244550987-17570.post@n5.nabble.com>
	<1465315196206-17577.post@n5.nabble.com>
	<1465330365286-17578.post@n5.nabble.com>
	<1465365373459-17582.post@n5.nabble.com>
	<1465402000639-17599.post@n5.nabble.com>
	<1465435901969-17609.post@n5.nabble.com>
	<1465611049021-17643.post@n5.nabble.com>
	<1465659091702-17646.post@n5.nabble.com>
Message-ID: <1466012934439-17696.post@n5.nabble.com>

Hi Ronaldo:

Thanks for all your help, along with everyone else that contributed to this
thread. I was able to get all three shapes working. And I got my parts 3D
printed. They fit perfectly after making several test coins with different
kerfs. The final parts used a kerf of -.275 and are tight enough that they
look like they won't need to be glued. 



--
View this message in context: http://forum.openscad.org/puzzlecutlib-rendering-problem-STL-export-error-Current-top-level-object-is-empty-tp17440p17696.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Wed Jun 15 16:02:02 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Wed, 15 Jun 2016 13:02:02 -0700 (MST)
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
Message-ID: <1466020922191-17697.post@n5.nabble.com>

Don't understand your point. On my system your code behaves like I'd expect
it to behave. 


> intersection() {   nothing();   something();}

result is nothing. This is correct!


> minkowski() {  nothing();   something(); }

result is something. This is also correct 






--
View this message in context: http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17697.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Wed Jun 15 16:47:55 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Wed, 15 Jun 2016 17:47:55 -0300
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <1466020922191-17697.post@n5.nabble.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
	<1466020922191-17697.post@n5.nabble.com>
Message-ID: <CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>

The sum of Minkowski of a sets A and B is defined as: the set of points c
such that c=a+b where a belongs to A and b belongs to B. So Lucas is
mathematically right, the Minkowsky sum of A and void is void. The neutral
element of Minkowski sum is not a void set but the set with [0,0,0] as its
only element.

2016-06-15 17:02 GMT-03:00 Parkinbot <rudolf at parkinbot.com>:

> Don't understand your point. On my system your code behaves like I'd expect
> it to behave.
>
>
> > intersection() {   nothing();   something();}
>
> result is nothing. This is correct!
>
>
> > minkowski() {  nothing();   something(); }
>
> result is something. This is also correct
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17697.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160615/939004ed/attachment.html>

From lucas.hartmann at gmail.com  Wed Jun 15 17:52:23 2016
From: lucas.hartmann at gmail.com (Lucas Vinicius Hartmann)
Date: Wed, 15 Jun 2016 18:52:23 -0300
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
	<1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
Message-ID: <CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>

I guess I messed up half my example. The difference() operation actually
created a correct result for intersection() {...}, but an empty module() {}
or an empty union() {} did not. Shouldn't these be the same?

The problem stands either way for the minkowski() {...} operator.

--
Lucas Vinicius Hartmann

Dizem que se voc? rodar o CD do Windows ao contr?rio ele mostra uma
mensagem demon?aca... Mas isso nem ? o pior, se voc? rodar ele normal ele
instala o Windows!

2016-06-15 17:47 GMT-03:00 Ronaldo Persiano <rcmpersiano at gmail.com>:

> The sum of Minkowski of a sets A and B is defined as: the set of points c
> such that c=a+b where a belongs to A and b belongs to B. So Lucas is
> mathematically right, the Minkowsky sum of A and void is void. The neutral
> element of Minkowski sum is not a void set but the set with [0,0,0] as its
> only element.
>
> 2016-06-15 17:02 GMT-03:00 Parkinbot <rudolf at parkinbot.com>:
>
>> Don't understand your point. On my system your code behaves like I'd
>> expect
>> it to behave.
>>
>>
>> > intersection() {   nothing();   something();}
>>
>> result is nothing. This is correct!
>>
>>
>> > minkowski() {  nothing();   something(); }
>>
>> result is something. This is also correct
>>
>>
>>
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17697.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160615/2438fe30/attachment.html>

From jpmendes54 at gmail.com  Wed Jun 15 19:00:53 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Wed, 15 Jun 2016 16:00:53 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <CALe4i4u1WiBOq+Z13Kmfu3S2Cr8g4wDikg0XL9RYigimXACcjQ@mail.gmail.com>
References: <37f83f34-1950-69eb-20b3-68cb0fae3bb5@gmx.de>
	<CALe4i4t863sOfFpYwUdq02vPPNc9--9i2kdP_Eb+DZB5NuzgFQ@mail.gmail.com>
	<19b3528c-0e5a-31c6-5926-27dc0ea84c7a@gmx.de>
	<CALe4i4vLzeQMDWYQejSoJFzbtN3Qay4bbJDoXAA7gp_+u9jBvg@mail.gmail.com>
	<b7edbb8a-933d-3f41-5ca5-13232efe11c5@gmx.de>
	<CALe4i4u_49JiBSqmFvTFHDjh0bkedxsasq6hbeyp7j=AwqkqBg@mail.gmail.com>
	<68720d97-585b-c428-38ea-e6266d52658a@gmx.de>
	<CALe4i4sH8ktzMQJ-W8F1i4s=bx1nLioVpzpNs=TxapJYG=nkKQ@mail.gmail.com>
	<cb7e1529-d739-5324-6c8d-e88503931d48@gmx.de>
	<CALe4i4u1WiBOq+Z13Kmfu3S2Cr8g4wDikg0XL9RYigimXACcjQ@mail.gmail.com>
Message-ID: <1466031653374-17700.post@n5.nabble.com>

Hi

In addition I would suggest "k" for minkowski, "h" for hull, and "z" for
scale.
The abbrev.json file would be then:
{
	"c" : { "l": "cube([", "r":"]);"},
	"d" : { "l": "difference() {\n\t", "r":"\n}"},
	"f" : { "l": "for (i=[", "r":"]) {\n\t\n}"},
	"i" : { "l": "intersection() {\n\t", "r":"\n}"},
	"m" : { "l": "module ", "r":"() {\n\t\n}"},
	"r" : { "l": "rotate([", "r":"]);"},
	"s" : { "l": "sphere(r=", "r":");"},
	"t" : { "l": "translate([", "r":"])"},
	"u" : { "l": "union() {\n\t", "r":"\n}"},
	"x" : { "l": ",center=true", "r":""},
	"y" : { "l": "cylinder(r=", "r":",h=);"},
	"z" : { "l": "scale([", "r":"]);"},
	"k" : { "l": "minkowski() {\n\t", "r":"\n\t}"},
	"h" : { "l": "hull() {\n\t", "r":"\n\t}"}
}

jpmendes




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17700.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Wed Jun 15 19:15:10 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Wed, 15 Jun 2016 16:15:10 -0700 (MST)
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
	<1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
	<CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
Message-ID: <1466032510092-17701.post@n5.nabble.com>

I have reported this bug before:
http://forum.openscad.org/Void-set-operations-issue-td15686.html
<http://forum.openscad.org/Void-set-operations-issue-td15686.html>  
Michael said:
"Looks like it is fixed in 2015.03-2"
but it is not.




--
View this message in context: http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17701.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Wed Jun 15 19:45:51 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Wed, 15 Jun 2016 16:45:51 -0700 (MST)
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
	<1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
	<CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
Message-ID: <1466034351484-17702.post@n5.nabble.com>

This is one of the typical pathological cases, not worth discussing much in
programming context. You are both right, mathematically an empty set used as
operand for Minkowski will "eat up" any other operand. 

But in programming an operator is better defined and implemented to be as
robust as possible.

It is easy to "prove", that there is no [0,0,0] involved, otherwise the
following code would not evaluate to a cube. 


> hull()
> {
>   translate([10, 0])
>   cube(5); 
>   difference() // nothing
>   {
>     sphere(1);
>     sphere(2);
>   }
> }

OpenSCAD implements Minkowski as I would expect it, and do it myself. 

I would want


> minkowski(){}

not to throw an error. And


> minkowski(){
> cube[a,b,c]; 
> }; 

to have cube[a,b,c] as unchanged result, instead of getting a not-defined
error. Same applies for intersection(), union() and so on. 

Second, I would not want any shape evaluating to empty to eat up everthing.


> minkowski(){
> A();
> B();
> C();
> ...
> }

Imagine C() is not defined (missing library) and a warning is issued. Should
the result then be empty? For what? For mathematical correctness? 





--
View this message in context: http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17702.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From lucas.hartmann at gmail.com  Wed Jun 15 20:13:04 2016
From: lucas.hartmann at gmail.com (Lucas Vinicius Hartmann)
Date: Wed, 15 Jun 2016 21:13:04 -0300
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <1466034351484-17702.post@n5.nabble.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
	<1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
	<CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
	<1466034351484-17702.post@n5.nabble.com>
Message-ID: <CAMbFyDTnm=10khXQgpYu8WnkKGFBKsAssm4efO5eU9Lgj1YPnw@mail.gmail.com>

The hull() case WOULD evaluate to a cube despite having void as the second
operand. The hull definition is the minimal convex shape that encloses all
solids in it, and despite the differece returninig void the first operand
is still a solid.

For the minkowski it is another story... If our math is not supposed to be
right what would be the point of a programming language? The only example
you found to justify the current behavior is based on a preexisting
error... Openscad should warn that C() is void, but do exactly as
instructed. Remember: Computers (especially programming languages) are not
supposed to do what they believe you want, they are supposed to do exactly
what you tell them to.

Anyway... I just finished compiling 2016.06.15 (wow, that's today!) and the
issue is still the same.

- If a nothing() is originated from a difference or a previous
intersection, then intersection() { nothing(); something();} works.
- intersection with void module or void union fails.
- minkowski fails with any voids.

*And I got ifsolid() to work!* I just made sure the condition is never void
by adding a far_far_away() particle, and limiting the result to universe().
See attached files, animated, from above.

--
Lucas Vinicius Hartmann

Dizem que se voc? rodar o CD do Windows ao contr?rio ele mostra uma
mensagem demon?aca... Mas isso nem ? o pior, se voc? rodar ele normal ele
instala o Windows!

2016-06-15 20:45 GMT-03:00 Parkinbot <rudolf at parkinbot.com>:

> This is one of the typical pathological cases, not worth discussing much in
> programming context. You are both right, mathematically an empty set used
> as
> operand for Minkowski will "eat up" any other operand.
>
> But in programming an operator is better defined and implemented to be as
> robust as possible.
>
> It is easy to "prove", that there is no [0,0,0] involved, otherwise the
> following code would not evaluate to a cube.
>
>
> > hull()
> > {
> >   translate([10, 0])
> >   cube(5);
> >   difference() // nothing
> >   {
> >     sphere(1);
> >     sphere(2);
> >   }
> > }
>
> OpenSCAD implements Minkowski as I would expect it, and do it myself.
>
> I would want
>
>
> > minkowski(){}
>
> not to throw an error. And
>
>
> > minkowski(){
> > cube[a,b,c];
> > };
>
> to have cube[a,b,c] as unchanged result, instead of getting a not-defined
> error. Same applies for intersection(), union() and so on.
>
> Second, I would not want any shape evaluating to empty to eat up everthing.
>
>
> > minkowski(){
> > A();
> > B();
> > C();
> > ...
> > }
>
> Imagine C() is not defined (missing library) and a warning is issued.
> Should
> the result then be empty? For what? For mathematical correctness?
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17702.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160615/c2a17af7/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ifsolid-test.scad
Type: application/x-openscad
Size: 453 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160615/c2a17af7/attachment.scad>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ifsolid.scad
Type: application/x-openscad
Size: 1046 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160615/c2a17af7/attachment-0001.scad>

From lucas.hartmann at gmail.com  Wed Jun 15 20:52:09 2016
From: lucas.hartmann at gmail.com (Lucas Vinicius Hartmann)
Date: Wed, 15 Jun 2016 21:52:09 -0300
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <CAMbFyDTnm=10khXQgpYu8WnkKGFBKsAssm4efO5eU9Lgj1YPnw@mail.gmail.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
	<1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
	<CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
	<1466034351484-17702.post@n5.nabble.com>
	<CAMbFyDTnm=10khXQgpYu8WnkKGFBKsAssm4efO5eU9Lgj1YPnw@mail.gmail.com>
Message-ID: <CAMbFyDTs8k33b_fMLa6kiB5d58P6yS-BL_QKDKRDfQJVvmERHQ@mail.gmail.com>

And, of course, there had to be a bug left in ifsolid (forgot to intersect
the results with universe() as I thought I had done).

I feel I am talking too much, so I put the code on github, where I can
update it silently should there be any other mistakes:
https://github.com/lhartmann/HCAD

--
Lucas Vinicius Hartmann

Dizem que se voc? rodar o CD do Windows ao contr?rio ele mostra uma
mensagem demon?aca... Mas isso nem ? o pior, se voc? rodar ele normal ele
instala o Windows!

2016-06-15 21:13 GMT-03:00 Lucas Vinicius Hartmann <lucas.hartmann at gmail.com
>:

> The hull() case WOULD evaluate to a cube despite having void as the second
> operand. The hull definition is the minimal convex shape that encloses all
> solids in it, and despite the differece returninig void the first operand
> is still a solid.
>
> For the minkowski it is another story... If our math is not supposed to be
> right what would be the point of a programming language? The only example
> you found to justify the current behavior is based on a preexisting
> error... Openscad should warn that C() is void, but do exactly as
> instructed. Remember: Computers (especially programming languages) are not
> supposed to do what they believe you want, they are supposed to do exactly
> what you tell them to.
>
> Anyway... I just finished compiling 2016.06.15 (wow, that's today!) and
> the issue is still the same.
>
> - If a nothing() is originated from a difference or a previous
> intersection, then intersection() { nothing(); something();} works.
> - intersection with void module or void union fails.
> - minkowski fails with any voids.
>
> *And I got ifsolid() to work!* I just made sure the condition is never
> void by adding a far_far_away() particle, and limiting the result to
> universe(). See attached files, animated, from above.
>
> --
> Lucas Vinicius Hartmann
>
> Dizem que se voc? rodar o CD do Windows ao contr?rio ele mostra uma
> mensagem demon?aca... Mas isso nem ? o pior, se voc? rodar ele normal ele
> instala o Windows!
>
> 2016-06-15 20:45 GMT-03:00 Parkinbot <rudolf at parkinbot.com>:
>
>> This is one of the typical pathological cases, not worth discussing much
>> in
>> programming context. You are both right, mathematically an empty set used
>> as
>> operand for Minkowski will "eat up" any other operand.
>>
>> But in programming an operator is better defined and implemented to be as
>> robust as possible.
>>
>> It is easy to "prove", that there is no [0,0,0] involved, otherwise the
>> following code would not evaluate to a cube.
>>
>>
>> > hull()
>> > {
>> >   translate([10, 0])
>> >   cube(5);
>> >   difference() // nothing
>> >   {
>> >     sphere(1);
>> >     sphere(2);
>> >   }
>> > }
>>
>> OpenSCAD implements Minkowski as I would expect it, and do it myself.
>>
>> I would want
>>
>>
>> > minkowski(){}
>>
>> not to throw an error. And
>>
>>
>> > minkowski(){
>> > cube[a,b,c];
>> > };
>>
>> to have cube[a,b,c] as unchanged result, instead of getting a not-defined
>> error. Same applies for intersection(), union() and so on.
>>
>> Second, I would not want any shape evaluating to empty to eat up
>> everthing.
>>
>>
>> > minkowski(){
>> > A();
>> > B();
>> > C();
>> > ...
>> > }
>>
>> Imagine C() is not defined (missing library) and a warning is issued.
>> Should
>> the result then be empty? For what? For mathematical correctness?
>>
>>
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17702.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160615/63b5fc4c/attachment.html>

From doug at moens.org  Wed Jun 15 21:14:09 2016
From: doug at moens.org (doug moen)
Date: Wed, 15 Jun 2016 21:14:09 -0400
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <1466034351484-17702.post@n5.nabble.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
	<1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
	<CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
	<1466034351484-17702.post@n5.nabble.com>
Message-ID: <CAGV6i+MVFzQesTAxHJaJvqcJH36ShchA91mpv0nKPkcqTYSqiA@mail.gmail.com>

Parkinbot said:
> minkowski(){
> A();
> B();
> C();
> ...
> }

> Imagine C() is not defined (missing library) and a warning is issued.
Should
> the result then be empty? For what? For mathematical correctness?

What I personally want is this:

if C() is not defined, I want the evaluator to halt, highlight the
expression C()
in the editor, and display an error message, so that I can quickly fix my
typo
and try again. I can't get a correct result if C() is undefined, so the
best thing
the system can do for me is help me to correct the error as quickly as
possible.

I don't want the system to keep going, making me wait for a bad result.

Also, mathematical correctness is a good thing.

Deliberately making the operations mathematically incorrect so that I can
get partial results because the system won't stop and let me fix errors
is not a good deal. I'd rather have mathematical correctness so that
my code works the way I expect it to in the case where there aren't errors.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160615/099ac267/attachment.html>

From rcmpersiano at gmail.com  Wed Jun 15 21:36:23 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Wed, 15 Jun 2016 18:36:23 -0700 (MST)
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <1466034351484-17702.post@n5.nabble.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
	<1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
	<CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
	<1466034351484-17702.post@n5.nabble.com>
Message-ID: <1466040983375-17706.post@n5.nabble.com>

Parkinbot wrote
> This is one of the typical pathological cases, not worth discussing much
> in programming context. You are both right, mathematically an empty set
> used as operand for Minkowski will "eat up" any other operand. 
> 
> But in programming an operator is better defined and implemented to be as
> robust as possible.

Rudolf,

I agree with Lucas. You may redefine Minkovsky as you like -giving another
name to it - but you should be prepared to unexpected discontinities and
different properties. Try this animation:

> minkowski() { 
>     cube(1); 
>     translate([1,1,1]) intersection() {
>        cube(1);
>        translate([-3*$t,-3*$t,-3*$t]) cube(1);
>     }
> }

Would you say the result is reasonable?

Minkowski of sets and translations are commutative operations. So:

    minkovski() { translate(p) A(); translate(q) B(); }

should be the same as;

    translate(p)  translate(q) minkovski() { A(); B(); }

However that doesn't hold with OpenSCAD minkowski() if some of the sets is
void. Test it with the above code.

Why would this

> minkowski(){}

throw an error? It should evaluate as void, the same as that

> minkowski(){
> cube[a,b,c]; 
> }; 


Parkinbot wrote
> Second, I would not want any shape evaluating to empty to eat up
> everthing.

Well, this happens with intersections, doesn't it?


Parkinbot wrote
> Imagine C() is not defined (missing library) and a warning is issued.
> Should the result then be empty? For what? For mathematical correctness?

Yes, it should as any undef logical expression evaluates as false. I don't
like this solution. They are both not robust. I would prefer a halt as doug
said. Do you think it is robust a system that keeps running after warning a
variable is unknown?

Anyway, robustness can't be granted with leniency.




--
View this message in context: http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17706.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Wed Jun 15 21:44:28 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Wed, 15 Jun 2016 18:44:28 -0700 (MST)
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <CAMbFyDTnm=10khXQgpYu8WnkKGFBKsAssm4efO5eU9Lgj1YPnw@mail.gmail.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
	<1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
	<CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
	<1466034351484-17702.post@n5.nabble.com>
	<CAMbFyDTnm=10khXQgpYu8WnkKGFBKsAssm4efO5eU9Lgj1YPnw@mail.gmail.com>
Message-ID: <1466041468953-17707.post@n5.nabble.com>

Lucas,

Here you have a broader set of tests with void sets and surprising results:

> module void1() {};
> module void2() difference() { sphere(1); sphere(2); }
> module void3() intersection() { sphere(1); translate([0,0,3]) sphere(1); }
> module void4() union() { void2(); void1(); }
> module void5() union() { void1(); void3(); }
> module void6() union() { void2(); void3(); }
> module void7() hull(){ void1(); void2(); void3(); void4(); void5();
> void6(); }
> 
> module Int1() intersection(){ children(); cube(1); }
> module Int2() intersection(){ cube(1); children(); }
> 
> module Diff() difference()  { children(); cube(1); }
> 
> module Mink1() minkowski()  { children(); cube(1); }
> module Mink2() minkowski()  { cube(1); children(); }
> 
> void1(); void2(); void3(); void4(); void5(); void6(); void7();
> 
> translate([ 2,0,0]) Int1() void1(); // non-void
> translate([ 4,0,0]) Int2() void1(); // non-void
> translate([ 6,0,0]) Int1() void2(); 
> translate([ 8,0,0]) Int2() void2();
> translate([10,0,0]) Int1() void3(); // non-void
> translate([12,0,0]) Int2() void3(); // non-void
> translate([14,0,0]) Int1() void4(); 
> translate([16,0,0]) Int2() void4(); 
> translate([18,0,0]) Int1() void5(); // non-void
> translate([20,0,0]) Int2() void5(); // non-void
> translate([22,0,0]) Int1() void6(); 
> translate([24,0,0]) Int2() void6(); 
> translate([26,0,0]) Int1() void7();  // non-void
> 
> translate([0, 2,0]) Mink1() void1(); // all non-void
> translate([0, 4,0]) Mink1() void2();
> translate([0, 6,0]) Mink1() void3();
> translate([0, 8,0]) Mink1() void4();
> translate([0,10,0]) Mink1() void5();
> translate([0,12,0]) Mink1() void6();
> translate([0,14,0]) Mink2() void1();
> translate([0,16,0]) Mink2() void2();
> translate([0,18,0]) Mink2() void3();
> translate([0,20,0]) Mink2() void4();
> translate([0,22,0]) Mink2() void5();
> translate([0,24,0]) Mink1() void6();
> translate([0,26,0]) Mink1() void7();
> 
> translate([0, -2,0]) Diff() void1(); // non-void
> translate([0, -4,0]) Diff() void2();
> translate([0, -6,0]) Diff() void3(); // non-void
> translate([0, -8,0]) Diff() void4(); 
> translate([0,-10,0]) Diff() void5(); // non-void
> translate([0,-12,0]) Diff() void6(); 
> translate([0,-14,0]) Diff() void7(); // non-void





--
View this message in context: http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17707.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Wed Jun 15 22:10:16 2016
From: marius at kintel.net (Marius Kintel)
Date: Wed, 15 Jun 2016 22:10:16 -0400
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <1466032510092-17701.post@n5.nabble.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
	<1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
	<CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
	<1466032510092-17701.post@n5.nabble.com>
Message-ID: <271F08E0-1348-4AFC-8F41-20D6ADEE72C2@kintel.net>

Hi Ronaldo and Lucas,

Would you mind reporting this on the github issue tracker (https://github.com/openscad/openscad/issues)?
It?s a lot easier to track and discuss actual bugs there.

 -Marius



From R.E.Wolff at BitWizard.nl  Thu Jun 16 00:41:09 2016
From: R.E.Wolff at BitWizard.nl (Rogier Wolff)
Date: Thu, 16 Jun 2016 06:41:09 +0200
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <CAGV6i+MVFzQesTAxHJaJvqcJH36ShchA91mpv0nKPkcqTYSqiA@mail.gmail.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
	<1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
	<CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
	<1466034351484-17702.post@n5.nabble.com>
	<CAGV6i+MVFzQesTAxHJaJvqcJH36ShchA91mpv0nKPkcqTYSqiA@mail.gmail.com>
Message-ID: <20160616044109.GB11261@BitWizard.nl>

On Wed, Jun 15, 2016 at 09:14:09PM -0400, doug moen wrote:

> if C() is not defined, I want the evaluator to halt, highlight the
> expression C() in the editor, and display an error message, so that
> I can quickly fix my typo and try again. I can't get a correct
> result if C() is undefined, so the best thing the system can do for
> me is help me to correct the error as quickly as possible.
 
> I don't want the system to keep going, making me wait for a bad result.

The thing is: What costs time? The evaluation until you get there, or
the "keep going"?

Yesterday I spent an hour gathering the dependencies of a software
package. I would run "./configure" it would spend three minutes
checking for header files, and then it would say: Can't find XXXX and
bomb out.

So, normally my strategy is to fix the first error (or occasionally a
random error) and try again. But if it works like yesterday where the
wait until the error occurs I'll quickly switch to fixing ALL errors
before I try again.

For openSCAD as I know it, the "ignore undefined modules" strategy has
its merits. But a bigger "warning: ignored 3 undefined modules" would
IMHO be better...

	Roger. 

-- 
** R.E.Wolff at BitWizard.nl ** http://www.BitWizard.nl/ ** +31-15-2600998 **
**    Delftechpark 26 2628 XH  Delft, The Netherlands. KVK: 27239233    **
*-- BitWizard writes Linux device drivers for any device you may have! --*
The plan was simple, like my brother-in-law Phil. But unlike
Phil, this plan just might work.


From maurizio.butti at gmail.com  Thu Jun 16 03:16:50 2016
From: maurizio.butti at gmail.com (buttim)
Date: Thu, 16 Jun 2016 00:16:50 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <1466031653374-17700.post@n5.nabble.com>
References: <CALe4i4t863sOfFpYwUdq02vPPNc9--9i2kdP_Eb+DZB5NuzgFQ@mail.gmail.com>
	<19b3528c-0e5a-31c6-5926-27dc0ea84c7a@gmx.de>
	<CALe4i4vLzeQMDWYQejSoJFzbtN3Qay4bbJDoXAA7gp_+u9jBvg@mail.gmail.com>
	<b7edbb8a-933d-3f41-5ca5-13232efe11c5@gmx.de>
	<CALe4i4u_49JiBSqmFvTFHDjh0bkedxsasq6hbeyp7j=AwqkqBg@mail.gmail.com>
	<68720d97-585b-c428-38ea-e6266d52658a@gmx.de>
	<CALe4i4sH8ktzMQJ-W8F1i4s=bx1nLioVpzpNs=TxapJYG=nkKQ@mail.gmail.com>
	<cb7e1529-d739-5324-6c8d-e88503931d48@gmx.de>
	<CALe4i4u1WiBOq+Z13Kmfu3S2Cr8g4wDikg0XL9RYigimXACcjQ@mail.gmail.com>
	<1466031653374-17700.post@n5.nabble.com>
Message-ID: <CALe4i4u5+X7CORwFCo4riZYoM_URJgKWn3qRtmzU2MqReHwj9g@mail.gmail.com>

That's ok form me. I did not include abbreviations for minkowski and hull
because they're used less often than say cube or translate.
But that's why the abbrevs are customizable!

May I suggest something more intuitive for scale like '+'? Indeed you're
not constrained to using alphabetic characters.
Whatever you use it's better to leave off the trailing ';' since you want
to scale something actually.

Revised version would go like this:

{
"c" : { "l": "cube([", "r":"]);"},
"d" : { "l": "difference() {\n\t", "r":"\n}"},
"f" : { "l": "for (i=[", "r":"]) {\n\t\n}"},
"i" : { "l": "intersection() {\n\t", "r":"\n}"},
"m" : { "l": "module ", "r":"() {\n\t\n}"},
"r" : { "l": "rotate([", "r":"]);"},
"s" : { "l": "sphere(r=", "r":");"},
"t" : { "l": "translate([", "r":"])"},
"u" : { "l": "union() {\n\t", "r":"\n}"},
"x" : { "l": ",center=true", "r":""},
"y" : { "l": "cylinder(r=", "r":",h=);"},
"+" : { "l": "scale([", "r":"])"},
        "k" : { "l": "minkowski() {\n\t", "r":"\n\t}"},
        "h" : { "l": "hull() {\n\t", "r":"\n\t}"}
}

On Thu, Jun 16, 2016 at 1:00 AM, jpmendes [via OpenSCAD] <
ml-node+s1091067n17700h75 at n5.nabble.com> wrote:

> Hi
>
> In addition I would suggest "k" for minkowski, "h" for hull, and "z" for
> scale.
> The abbrev.json file would be then:
> {
>         "c" : { "l": "cube([", "r":"]);"},
>         "d" : { "l": "difference() {\n\t", "r":"\n}"},
>         "f" : { "l": "for (i=[", "r":"]) {\n\t\n}"},
>         "i" : { "l": "intersection() {\n\t", "r":"\n}"},
>         "m" : { "l": "module ", "r":"() {\n\t\n}"},
>         "r" : { "l": "rotate([", "r":"]);"},
>         "s" : { "l": "sphere(r=", "r":");"},
>         "t" : { "l": "translate([", "r":"])"},
>         "u" : { "l": "union() {\n\t", "r":"\n}"},
>         "x" : { "l": ",center=true", "r":""},
>         "y" : { "l": "cylinder(r=", "r":",h=);"},
>         "z" : { "l": "scale([", "r":"]);"},
>         "k" : { "l": "minkowski() {\n\t", "r":"\n\t}"},
>         "h" : { "l": "hull() {\n\t", "r":"\n\t}"}
> }
>
> jpmendes
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/Abbreviations-tp17583p17700.html
> To unsubscribe from Abbreviations, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17583&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3NTgzfDE4OTg0NTUyNTk=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17710.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160616/69ea67d0/attachment.html>

From maurizio.butti at gmail.com  Thu Jun 16 03:20:11 2016
From: maurizio.butti at gmail.com (buttim)
Date: Thu, 16 Jun 2016 00:20:11 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <trinity-980652e4-e060-4007-831d-605768d597d0-1465986295106@3capp-gmx-bs25>
References: <CALe4i4t863sOfFpYwUdq02vPPNc9--9i2kdP_Eb+DZB5NuzgFQ@mail.gmail.com>
	<19b3528c-0e5a-31c6-5926-27dc0ea84c7a@gmx.de>
	<CALe4i4vLzeQMDWYQejSoJFzbtN3Qay4bbJDoXAA7gp_+u9jBvg@mail.gmail.com>
	<b7edbb8a-933d-3f41-5ca5-13232efe11c5@gmx.de>
	<CALe4i4u_49JiBSqmFvTFHDjh0bkedxsasq6hbeyp7j=AwqkqBg@mail.gmail.com>
	<68720d97-585b-c428-38ea-e6266d52658a@gmx.de>
	<CALe4i4sH8ktzMQJ-W8F1i4s=bx1nLioVpzpNs=TxapJYG=nkKQ@mail.gmail.com>
	<cb7e1529-d739-5324-6c8d-e88503931d48@gmx.de>
	<CALe4i4u1WiBOq+Z13Kmfu3S2Cr8g4wDikg0XL9RYigimXACcjQ@mail.gmail.com>
	<trinity-980652e4-e060-4007-831d-605768d597d0-1465986295106@3capp-gmx-bs25>
Message-ID: <CALe4i4uBbC6tMUiPRUvugOQsKCu88ybTyb1uLgYs1ywEDPtYuA@mail.gmail.com>

Seems like my problem with braces is a well known Qt bug (
https://bugreports.qt.io/browse/QTCREATORBUG-10269).

Not sure if it has been fixed in Qt5 but it seems so.

On Wed, Jun 15, 2016 at 12:26 PM, tp3 [via OpenSCAD] <
ml-node+s1091067n17685h10 at n5.nabble.com> wrote:

> Von: buttim <[hidden email]
> <http:///user/SendEmail.jtp?type=node&node=17685&i=0>>
> > I'm using an italian keyboard on which the curly
> > bracket is produced by the key combination AltGr+Shift++.
> > The + key is used to produce a * in combination with
> > shift. This does not happen in Ubuntu, so it seems a
> > QScintilla (or Scintilla) bug.
> >
> It could also be one of the (a bit annoying) platform
> differences which all the Qt stuff is supposed to hide.
>
> > I also verified the crash when the scad.api file is
> > missing, which I'll try to solve.
> >
> Yep, I found the crash is gone after putting in the
> scad.api file. I just missed it's two files that need
> to be put there.
>
> I still could not get it to expand the shortcuts, yet.
> I'll have to have a closer look again, for which I
> might not have the time in the next couple of days.
> I hope the build is still useful for others, we can
> try adding the files to the next build...
>
> ciao,
>   Torsten.
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17685&i=1>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> -- Torsten
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/Abbreviations-tp17583p17685.html
> To unsubscribe from Abbreviations, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17583&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3NTgzfDE4OTg0NTUyNTk=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17711.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160616/cc67b5f7/attachment.html>

From doug at moens.org  Thu Jun 16 09:48:28 2016
From: doug at moens.org (doug moen)
Date: Thu, 16 Jun 2016 09:48:28 -0400
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <20160616044109.GB11261@BitWizard.nl>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
	<1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
	<CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
	<1466034351484-17702.post@n5.nabble.com>
	<CAGV6i+MVFzQesTAxHJaJvqcJH36ShchA91mpv0nKPkcqTYSqiA@mail.gmail.com>
	<20160616044109.GB11261@BitWizard.nl>
Message-ID: <CAGV6i+PaNJD7wLM5W5S-FV6wTDH2ewskD18+ORxFb5iiWxKT_A@mail.gmail.com>

Roger said:
> The thing is: What costs time? The evaluation until you get there, or
> the "keep going"?
>
> Yesterday I spent an hour gathering the dependencies of a software
> package. I would run "./configure" it would spend three minutes
> checking for header files, and then it would say: Can't find XXXX and
> bomb out.
>
> So, normally my strategy is to fix the first error (or occasionally a
> random error) and try again. But if it works like yesterday where the
> wait until the error occurs I'll quickly switch to fixing ALL errors
> before I try again.
>
> For openSCAD as I know it, the "ignore undefined modules" strategy has
> its merits. But a bigger "warning: ignored 3 undefined modules" would
> IMHO be better...

You raise a good point.

OpenSCAD has an evaluation phase (which generates the CSG tree), then a
rendering phase (which generates the mesh).

Normally, the evaluation phase is quick (milliseconds). This is the phase
where undefined modules are detected. Since there's normally no wait, I
want this phase to abort on first error and highlight in the text editor
the subexpression where the error occurred, because that would be the most
productive way for me to fix errors. That's what works for me. If other
people disagree, maybe this should be configurable?

The rendering phase is slow, and takes minutes or hours for any serious
model. During this phase, it would make sense to print informative error
messages and keep going, so that you can fix all the errors in a batch.
Unfortunately, CGAL assertion messages don't give you helpful information
that points back at the location in the source where the error occurred.
This is something that I think may improve in the future, based on active
pull requests.

Now, there is pressure from some parts of the community to support
geometric evaluation during the evaluation phase. (Recently, a request for
a boolean function to test if two shapes intersect, but there's a long
history of similar requests.) And, there are other parts of the community
who push back on this, and uphold the benefits of a fast evaluation phase
and fast preview. If we do go in the direction of making OpenSCAD more
powerful, at the expensive of long evaluation times, then the tradeoff
changes, and maybe abort on first error starts to make less sense.

The goal is to provide a productive workflow. Since we have a fully
integrated system with our own GUI and our own evaluator, we have the
ability to make this work very nicely. I would like the ability to jump
into the editor at the error location the instant an error occurs so that I
can fix the bug, regardless of whether evaluation continues past that
point. If evaluation does continue, then a button to advance to the next
error would be desirable.

On 16 June 2016 at 00:41, Rogier Wolff <R.E.Wolff at bitwizard.nl> wrote:

> On Wed, Jun 15, 2016 at 09:14:09PM -0400, doug moen wrote:
>
> > if C() is not defined, I want the evaluator to halt, highlight the
> > expression C() in the editor, and display an error message, so that
> > I can quickly fix my typo and try again. I can't get a correct
> > result if C() is undefined, so the best thing the system can do for
> > me is help me to correct the error as quickly as possible.
>
> > I don't want the system to keep going, making me wait for a bad result.
>
> The thing is: What costs time? The evaluation until you get there, or
> the "keep going"?
>
> Yesterday I spent an hour gathering the dependencies of a software
> package. I would run "./configure" it would spend three minutes
> checking for header files, and then it would say: Can't find XXXX and
> bomb out.
>
> So, normally my strategy is to fix the first error (or occasionally a
> random error) and try again. But if it works like yesterday where the
> wait until the error occurs I'll quickly switch to fixing ALL errors
> before I try again.
>
> For openSCAD as I know it, the "ignore undefined modules" strategy has
> its merits. But a bigger "warning: ignored 3 undefined modules" would
> IMHO be better...
>
>         Roger.
>
> --
> ** R.E.Wolff at BitWizard.nl ** http://www.BitWizard.nl/ ** +31-15-2600998 **
> **    Delftechpark 26 2628 XH  Delft, The Netherlands. KVK: 27239233    **
> *-- BitWizard writes Linux device drivers for any device you may have! --*
> The plan was simple, like my brother-in-law Phil. But unlike
> Phil, this plan just might work.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160616/31a347d7/attachment.html>

From nop.head at gmail.com  Thu Jun 16 10:16:44 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 16 Jun 2016 15:16:44 +0100
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <CAGV6i+PaNJD7wLM5W5S-FV6wTDH2ewskD18+ORxFb5iiWxKT_A@mail.gmail.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
	<1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
	<CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
	<1466034351484-17702.post@n5.nabble.com>
	<CAGV6i+MVFzQesTAxHJaJvqcJH36ShchA91mpv0nKPkcqTYSqiA@mail.gmail.com>
	<20160616044109.GB11261@BitWizard.nl>
	<CAGV6i+PaNJD7wLM5W5S-FV6wTDH2ewskD18+ORxFb5iiWxKT_A@mail.gmail.com>
Message-ID: <CAEEmnrO+1W4wpuJb3ZwABubk=sS_9bwmaATtL3WePSzCxB=Hxw@mail.gmail.com>

I think querying the geometry during evaluation and the attendant slow down
is fine as long as it only happens when the user explicitly invokes it. It
is no worse than the current situation with render(). Those of us who don't
need it would still get a fast preview.

On 16 June 2016 at 14:48, doug moen <doug at moens.org> wrote:

> Roger said:
> > The thing is: What costs time? The evaluation until you get there, or
> > the "keep going"?
> >
> > Yesterday I spent an hour gathering the dependencies of a software
> > package. I would run "./configure" it would spend three minutes
> > checking for header files, and then it would say: Can't find XXXX and
> > bomb out.
> >
> > So, normally my strategy is to fix the first error (or occasionally a
> > random error) and try again. But if it works like yesterday where the
> > wait until the error occurs I'll quickly switch to fixing ALL errors
> > before I try again.
> >
> > For openSCAD as I know it, the "ignore undefined modules" strategy has
> > its merits. But a bigger "warning: ignored 3 undefined modules" would
> > IMHO be better...
>
> You raise a good point.
>
> OpenSCAD has an evaluation phase (which generates the CSG tree), then a
> rendering phase (which generates the mesh).
>
> Normally, the evaluation phase is quick (milliseconds). This is the phase
> where undefined modules are detected. Since there's normally no wait, I
> want this phase to abort on first error and highlight in the text editor
> the subexpression where the error occurred, because that would be the most
> productive way for me to fix errors. That's what works for me. If other
> people disagree, maybe this should be configurable?
>
> The rendering phase is slow, and takes minutes or hours for any serious
> model. During this phase, it would make sense to print informative error
> messages and keep going, so that you can fix all the errors in a batch.
> Unfortunately, CGAL assertion messages don't give you helpful information
> that points back at the location in the source where the error occurred.
> This is something that I think may improve in the future, based on active
> pull requests.
>
> Now, there is pressure from some parts of the community to support
> geometric evaluation during the evaluation phase. (Recently, a request for
> a boolean function to test if two shapes intersect, but there's a long
> history of similar requests.) And, there are other parts of the community
> who push back on this, and uphold the benefits of a fast evaluation phase
> and fast preview. If we do go in the direction of making OpenSCAD more
> powerful, at the expensive of long evaluation times, then the tradeoff
> changes, and maybe abort on first error starts to make less sense.
>
> The goal is to provide a productive workflow. Since we have a fully
> integrated system with our own GUI and our own evaluator, we have the
> ability to make this work very nicely. I would like the ability to jump
> into the editor at the error location the instant an error occurs so that I
> can fix the bug, regardless of whether evaluation continues past that
> point. If evaluation does continue, then a button to advance to the next
> error would be desirable.
>
> On 16 June 2016 at 00:41, Rogier Wolff <R.E.Wolff at bitwizard.nl> wrote:
>
>> On Wed, Jun 15, 2016 at 09:14:09PM -0400, doug moen wrote:
>>
>> > if C() is not defined, I want the evaluator to halt, highlight the
>> > expression C() in the editor, and display an error message, so that
>> > I can quickly fix my typo and try again. I can't get a correct
>> > result if C() is undefined, so the best thing the system can do for
>> > me is help me to correct the error as quickly as possible.
>>
>> > I don't want the system to keep going, making me wait for a bad result.
>>
>> The thing is: What costs time? The evaluation until you get there, or
>> the "keep going"?
>>
>> Yesterday I spent an hour gathering the dependencies of a software
>> package. I would run "./configure" it would spend three minutes
>> checking for header files, and then it would say: Can't find XXXX and
>> bomb out.
>>
>> So, normally my strategy is to fix the first error (or occasionally a
>> random error) and try again. But if it works like yesterday where the
>> wait until the error occurs I'll quickly switch to fixing ALL errors
>> before I try again.
>>
>> For openSCAD as I know it, the "ignore undefined modules" strategy has
>> its merits. But a bigger "warning: ignored 3 undefined modules" would
>> IMHO be better...
>>
>>         Roger.
>>
>> --
>> ** R.E.Wolff at BitWizard.nl ** http://www.BitWizard.nl/ ** +31-15-2600998
>> **
>> **    Delftechpark 26 2628 XH  Delft, The Netherlands. KVK: 27239233    **
>> *-- BitWizard writes Linux device drivers for any device you may have! --*
>> The plan was simple, like my brother-in-law Phil. But unlike
>> Phil, this plan just might work.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160616/f1e4572c/attachment.html>

From rudolf at parkinbot.com  Thu Jun 16 10:19:38 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Thu, 16 Jun 2016 07:19:38 -0700 (MST)
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <1466040983375-17706.post@n5.nabble.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
	<1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
	<CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
	<1466034351484-17702.post@n5.nabble.com>
	<1466040983375-17706.post@n5.nabble.com>
Message-ID: <1466086778550-17714.post@n5.nabble.com>

I agree, that OpenSCAD has no explicit definition of a void shape, like
'undef'. This might lead to some unclearness in understanding, what the
language actually does in some situations, without probing it. And I agree
that this is the region, where a language might have to be changed with the
risk of breaking legacy code - latest when the deficiency starts to get a
problem. 

But is it a problem right now?

Having programmed with about 30 different programming languages multiplied
by an uncounted number of new versions and updates in my life, I never got
very far by just reading the reference or using my understanding of math,
especially when abstract operations solely defined for real values are in
play, but some finite number representations are being used. Minkowski
definitely falls into that category. 

"Offside is, when the referee whistles". The idiosyncrasies of a language
are mostly a matter of taste AND of compromises that have to be made. 

E.g. Would you want your cube to vanish in the first frame in an animation
like that? 


>   minkowski() {  cube();   scale([$t, $t, $t])  sphere(); }

I wouldn't. With your understanding, you would have to use some IF-construct
to sort out the empy result. But how would you do that? What about the value
0? Here it is again. Isn't it more a matter of something being smaler than
some epsilon? So, you wanna test against some epsilon, which is an internal
constant, that might chance with every release? You will never get a defined
result with this approach. 
Anyway you put it, it has to be probed. 

BTW: I would never use a minkowski() to generate a void result. Void results
are not desired in rendering, as they only cost time. 

OpenSCAD's 'binary' operators operate over a set of shapes, which may have
n>=0 elements. Thus they are NOT binary operators as you are used to, but
some interpretation for their application on a batch of operands. Should
they be named differently for that? Why trying to be more Catholic than the
pope?

I would argue for a more instant mechanism to interactively stop F5 and F6
rendering, but never to convert warnings into an error. Is this also a
matter of taste? Other programming languages use customizable priority
levels to convert warnings into errors. Are we this far? 

Before any of this will go into the language, many other by far more
important features have to be tackled. 
To have functions for querying boundingboxes and polygons/polyhedra of
shapes are the most important ones. Also colors should not get lost on F6
... 

Being able to play with a NULL more or less, nothing is gained for practical
use. 






--
View this message in context: http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17714.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Thu Jun 16 10:30:38 2016
From: doug at moens.org (doug moen)
Date: Thu, 16 Jun 2016 10:30:38 -0400
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <CAMbFyDTnm=10khXQgpYu8WnkKGFBKsAssm4efO5eU9Lgj1YPnw@mail.gmail.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
	<1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
	<CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
	<1466034351484-17702.post@n5.nabble.com>
	<CAMbFyDTnm=10khXQgpYu8WnkKGFBKsAssm4efO5eU9Lgj1YPnw@mail.gmail.com>
Message-ID: <CAGV6i+PO_WawPo_v7Qvf1boae6UVcJ+GvyNpRF8p-Cd3sNTn7g@mail.gmail.com>

I thought about degenerate shapes some more.

Mathematically, a degenerate shape is one with zero volume. There is an
infinite family of degenerate 3D shapes: 0D points, 1D lines, 2D surfaces,
plus the empty set which contains no points at all. Mathematically,
operations like minkowski sum and convex hull behave differently depending
on what kind of degenerate shape is passed.

Pragmatically, it's different. OpenSCAD can't represent arbitrary 3D
shapes, only polyhedra. Degenerate shapes are a problem. Internally, we use
two different representations. With the mesh representation, a well formed
mesh must not contain any triangles with zero area. With the Nef Polyhedron
representation, AFAIK there is only one degenerate Nef Polyhedron (the
empty set), and not an infinite family.

So in practice, I think OpenSCAD can only have 1 degenerate shape, which we
should treat as the empty set. So union() {}, cube(0), cube([10,0,0]) and
others should all be treated the same way, as the unique degenerate shape.

Minkowski sum treats the empty set as the zero element and the point
[0,0,0] as the identity element, but we can have only one degenerate shape,
so we can't implement these semantics exactly. I think our unique
degenerate shape should be consistently treated as the empty set, so we
don't support an identity element for minkowski sum, only a zero element.

So that means, if you pass the degenerate shape as an argument to
minkowski, then I think the result should be the degenerate shape. It's
like multiplying a number by zero, the result is zero.

Right now, it appears that degenerate shapes aren't treated consistently.
Minkowski treats the void as its identity element, ie as [0,0,0], while
other operations I tested treat it as the empty set.

But, I just read Parkinbot's analysis, and I think he makes a good argument
with this example:
>   minkowski() {  cube();   scale([$t, $t, $t])  sphere(); }

Since we only get to have one degenerate shape, we get to choose how it
works for each operation.

On 15 June 2016 at 20:13, Lucas Vinicius Hartmann <lucas.hartmann at gmail.com>
wrote:

> The hull() case WOULD evaluate to a cube despite having void as the second
> operand. The hull definition is the minimal convex shape that encloses all
> solids in it, and despite the differece returninig void the first operand
> is still a solid.
>
> For the minkowski it is another story... If our math is not supposed to be
> right what would be the point of a programming language? The only example
> you found to justify the current behavior is based on a preexisting
> error... Openscad should warn that C() is void, but do exactly as
> instructed. Remember: Computers (especially programming languages) are not
> supposed to do what they believe you want, they are supposed to do exactly
> what you tell them to.
>
> Anyway... I just finished compiling 2016.06.15 (wow, that's today!) and
> the issue is still the same.
>
> - If a nothing() is originated from a difference or a previous
> intersection, then intersection() { nothing(); something();} works.
> - intersection with void module or void union fails.
> - minkowski fails with any voids.
>
> *And I got ifsolid() to work!* I just made sure the condition is never
> void by adding a far_far_away() particle, and limiting the result to
> universe(). See attached files, animated, from above.
>
> --
> Lucas Vinicius Hartmann
>
> Dizem que se voc? rodar o CD do Windows ao contr?rio ele mostra uma
> mensagem demon?aca... Mas isso nem ? o pior, se voc? rodar ele normal ele
> instala o Windows!
>
> 2016-06-15 20:45 GMT-03:00 Parkinbot <rudolf at parkinbot.com>:
>
>> This is one of the typical pathological cases, not worth discussing much
>> in
>> programming context. You are both right, mathematically an empty set used
>> as
>> operand for Minkowski will "eat up" any other operand.
>>
>> But in programming an operator is better defined and implemented to be as
>> robust as possible.
>>
>> It is easy to "prove", that there is no [0,0,0] involved, otherwise the
>> following code would not evaluate to a cube.
>>
>>
>> > hull()
>> > {
>> >   translate([10, 0])
>> >   cube(5);
>> >   difference() // nothing
>> >   {
>> >     sphere(1);
>> >     sphere(2);
>> >   }
>> > }
>>
>> OpenSCAD implements Minkowski as I would expect it, and do it myself.
>>
>> I would want
>>
>>
>> > minkowski(){}
>>
>> not to throw an error. And
>>
>>
>> > minkowski(){
>> > cube[a,b,c];
>> > };
>>
>> to have cube[a,b,c] as unchanged result, instead of getting a not-defined
>> error. Same applies for intersection(), union() and so on.
>>
>> Second, I would not want any shape evaluating to empty to eat up
>> everthing.
>>
>>
>> > minkowski(){
>> > A();
>> > B();
>> > C();
>> > ...
>> > }
>>
>> Imagine C() is not defined (missing library) and a warning is issued.
>> Should
>> the result then be empty? For what? For mathematical correctness?
>>
>>
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17702.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160616/bc327357/attachment.html>

From doug at moens.org  Thu Jun 16 11:45:07 2016
From: doug at moens.org (doug moen)
Date: Thu, 16 Jun 2016 11:45:07 -0400
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <1466086778550-17714.post@n5.nabble.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
	<1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
	<CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
	<1466034351484-17702.post@n5.nabble.com>
	<1466040983375-17706.post@n5.nabble.com>
	<1466086778550-17714.post@n5.nabble.com>
Message-ID: <CAGV6i+M1fJsJY0E47u4mTcnmzxBMVtMWFZ7xvLFJqAccUTQTxg@mail.gmail.com>

Parkinbot said:
> E.g. Would you want your cube to vanish in the first frame in an animation
> like that?
>
>>   minkowski() {  cube();   scale([$t, $t, $t])  sphere(); }

No, I wouldn't want the cube to vanish. The mathematically correct result
at $t=0 is that you just get a cube, which is exactly what happens in our
implementation.

It's no coincidence that "the mathematically correct result" is the same as
what you naturally expect to happen. In this case, "scale(0) sphere()"
should mathematically produce a degenerate solid, the point [0,0,0], which
is the identity element for minkowski, so you get a cube. And that's what
you actually get in practice.

Unfortunately, OpenSCAD doesn't produce the correct result all the time,
and it's hard to predict what will work and what will fail.

For example, this produces the correct result:
> minkowski() { translate([20,0,0]) scale($t) cube(10); sphere(3); }

But this produce an incorrect result at $t=0:
> minkowski() { translate([20,0,0]) cube(10*$t); sphere(3); }

It looks like the two versions should produce the same result, but they
don't. The situation with degenerate solids is more complicated than what I
thought. In the first version, "translate([20,0,0]) scale(0) cube(10)"
should produce a degenerate solid with a point at [20,0,0], and that's
apparently what happens, because the output is correct: the sphere is
centered at [20,0,0].

If I render
    translate([20,0,0]) scale($t) cube(10);
then it says:

   Top level object is a 3D object:

   Facets: 6

And if I export this as STL, then I get an empty STL file (no triangles).

So that's good. It's the "mathematically correct" result.


In my previous post, I said that OpenSCAD can't represent an infinite
family of degenerate solids, therefore we can't make minkowski work
correctly. But my experiment shows that we do have a proper representation
for different kinds of degenerate solids, and minkowski does work
correctly, if you know how to work around the bugs.


I tried another experiment. This one is to construct the convex hull of two
different degenerate solids, to make a square based pyramid:

hull() {

   translate([0,0,10]) scale(0) cube(); // apex of pyramid

   cube([10,10,0], center=true); // base of pyramid

}


Unfortunately, this creates a scary popup error dialog, and then the render
hangs:


A critical error was caught. The application may have become unstable:

CGAL ERROR: precondition violation!

Expr: point2_it != points.end()

File:
/Users/kintel/code/OpenSCAD/openscad/../libraries/install/include/CGAL/convex_hull_3.h

Line: 922

Explanation: All points are equal; cannot construct polyhedron.

On 16 June 2016 at 10:19, Parkinbot <rudolf at parkinbot.com> wrote:

> I agree, that OpenSCAD has no explicit definition of a void shape, like
> 'undef'. This might lead to some unclearness in understanding, what the
> language actually does in some situations, without probing it. And I agree
> that this is the region, where a language might have to be changed with the
> risk of breaking legacy code - latest when the deficiency starts to get a
> problem.
>
> But is it a problem right now?
>
> Having programmed with about 30 different programming languages multiplied
> by an uncounted number of new versions and updates in my life, I never got
> very far by just reading the reference or using my understanding of math,
> especially when abstract operations solely defined for real values are in
> play, but some finite number representations are being used. Minkowski
> definitely falls into that category.
>
> "Offside is, when the referee whistles". The idiosyncrasies of a language
> are mostly a matter of taste AND of compromises that have to be made.
>
> E.g. Would you want your cube to vanish in the first frame in an animation
> like that?
>
>
> >   minkowski() {  cube();   scale([$t, $t, $t])  sphere(); }
>
> I wouldn't. With your understanding, you would have to use some
> IF-construct
> to sort out the empy result. But how would you do that? What about the
> value
> 0? Here it is again. Isn't it more a matter of something being smaler than
> some epsilon? So, you wanna test against some epsilon, which is an internal
> constant, that might chance with every release? You will never get a
> defined
> result with this approach.
> Anyway you put it, it has to be probed.
>
> BTW: I would never use a minkowski() to generate a void result. Void
> results
> are not desired in rendering, as they only cost time.
>
> OpenSCAD's 'binary' operators operate over a set of shapes, which may have
> n>=0 elements. Thus they are NOT binary operators as you are used to, but
> some interpretation for their application on a batch of operands. Should
> they be named differently for that? Why trying to be more Catholic than the
> pope?
>
> I would argue for a more instant mechanism to interactively stop F5 and F6
> rendering, but never to convert warnings into an error. Is this also a
> matter of taste? Other programming languages use customizable priority
> levels to convert warnings into errors. Are we this far?
>
> Before any of this will go into the language, many other by far more
> important features have to be tackled.
> To have functions for querying boundingboxes and polygons/polyhedra of
> shapes are the most important ones. Also colors should not get lost on F6
> ...
>
> Being able to play with a NULL more or less, nothing is gained for
> practical
> use.
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17714.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160616/ff10a826/attachment.html>

From rcmpersiano at gmail.com  Thu Jun 16 12:16:39 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Thu, 16 Jun 2016 09:16:39 -0700 (MST)
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <1466086778550-17714.post@n5.nabble.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
	<1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
	<CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
	<1466034351484-17702.post@n5.nabble.com>
	<1466040983375-17706.post@n5.nabble.com>
	<1466086778550-17714.post@n5.nabble.com>
Message-ID: <1466093799095-17717.post@n5.nabble.com>

Rudolf,

You raised good points but I will keep mine about Minkowski. The example you
have shown of a vanishing cube is idiosyncratic but for other reasons. I
would expect that 

           scale(0) sphere;

to be a point, the origin, and not a void set.

In Mathematics, you have a non-void set by doing a Minkowski sum of a point
and a non-void set. I thought we have no way in OpenSCAD to do a Minkowski
sum of a set with only a point or a line segment or a 2D shape due to the
simple fact that we can't express such sets or mix 2D shapes with 3D shapes
in OpenSCAD operations. However, we can at least in Minkowski operations.

> minkowski() {
>      cube(1);
>      intersection() {
>         cube(1);
>         translate([$t-1,$t-1,$t-1]) cube(1);
>      }
> }

And that is not idiosyncratic. It does exactly what I would expect. The
intersection is not void, it is a square that shrinks to the origin when
$t=0. The scaled sphere should do the same.

BTW, the above "technique" may be very usefull for rounding only some edges
of a solid.

There is much more complexities behind the scene... :)



--
View this message in context: http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17717.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Thu Jun 16 12:54:39 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Thu, 16 Jun 2016 09:54:39 -0700 (MST)
Subject: [OpenSCAD] Black dumped images
Message-ID: <1466096079009-17718.post@n5.nabble.com>

I have been playing with animation in OpenSCAD 2015.03-2 in a Windows 7
environment. After marking the Dump pictures button during animations, I
only get full black .png images. I have tried with different models and
always got the same result. Any help is welcome.



--
View this message in context: http://forum.openscad.org/Black-dumped-images-tp17718.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Thu Jun 16 13:35:24 2016
From: marius at kintel.net (Marius Kintel)
Date: Thu, 16 Jun 2016 13:35:24 -0400
Subject: [OpenSCAD] Black dumped images
In-Reply-To: <1466096079009-17718.post@n5.nabble.com>
References: <1466096079009-17718.post@n5.nabble.com>
Message-ID: <F64343B0-C751-464E-8DD0-0C0FCB01CE6D@kintel.net>

Hi Ronaldo,

Could you paste the contents of Help->Library Info?

FYI: The images are dumped by taking saving the actual contents of the framebuffer of the 3D view. This could be related to how Windows 7 manages on-screen content. Perhaps we don?t have access to that information.

One way of working around that could also be to use our offscreen renderer for this purpose rather than reading the framebuffer.

 -Marius



From jpmendes54 at gmail.com  Thu Jun 16 14:41:39 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Thu, 16 Jun 2016 11:41:39 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <CALe4i4u5+X7CORwFCo4riZYoM_URJgKWn3qRtmzU2MqReHwj9g@mail.gmail.com>
References: <19b3528c-0e5a-31c6-5926-27dc0ea84c7a@gmx.de>
	<CALe4i4vLzeQMDWYQejSoJFzbtN3Qay4bbJDoXAA7gp_+u9jBvg@mail.gmail.com>
	<b7edbb8a-933d-3f41-5ca5-13232efe11c5@gmx.de>
	<CALe4i4u_49JiBSqmFvTFHDjh0bkedxsasq6hbeyp7j=AwqkqBg@mail.gmail.com>
	<68720d97-585b-c428-38ea-e6266d52658a@gmx.de>
	<CALe4i4sH8ktzMQJ-W8F1i4s=bx1nLioVpzpNs=TxapJYG=nkKQ@mail.gmail.com>
	<cb7e1529-d739-5324-6c8d-e88503931d48@gmx.de>
	<CALe4i4u1WiBOq+Z13Kmfu3S2Cr8g4wDikg0XL9RYigimXACcjQ@mail.gmail.com>
	<1466031653374-17700.post@n5.nabble.com>
	<CALe4i4u5+X7CORwFCo4riZYoM_URJgKWn3qRtmzU2MqReHwj9g@mail.gmail.com>
Message-ID: <1466102499559-17720.post@n5.nabble.com>

Hi,

I think "z" for scale is better because z suggests zoom (up, down) and scale
can be seen as a "kind of zoom". The "+" has a  variable position on
international keyboards and sometimes we need to press "shift" to get the
"+". Scale less than 1 suggests "-".  
The "k" for minkowski is because k is repeated, so it is easy to remember.
As you said, being configurable, any one can choose the letters they feel
more comfortable with.

Thanks.

jpmendes
 



--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17720.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Thu Jun 16 14:57:12 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Thu, 16 Jun 2016 11:57:12 -0700 (MST)
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <1466093799095-17717.post@n5.nabble.com>
References: <CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
	<1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
	<CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
	<1466034351484-17702.post@n5.nabble.com>
	<1466040983375-17706.post@n5.nabble.com>
	<1466086778550-17714.post@n5.nabble.com>
	<1466093799095-17717.post@n5.nabble.com>
Message-ID: <1466103432059-17721.post@n5.nabble.com>

For me this is all a lot of speculations about internal representations. We
know that F5 translates to CSG and rendering is done in graphics
hardware/driver only, which I guess will be using its own NULLs. 
 
As long as I can't evalute a shape in the sense of: 

v = vertices(MyShape()); 
f = facesertices(MyShape()); 

everything can be in the black box. 

Look at this: You can F5 it

> scale(0)cube();

and obviously get a "Normalized CSG tree has 1 elements". And CSG Tree Dump
shows:


> multmatrix([[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1]]) {
> 	cube(size = [1, 1, 1], center = false);
> }

You even can F6 it and export it to STL. But there you find: 


> solid OpenSCAD_Model
> endsolid OpenSCAD_Model

So where is the math point of view?







--
View this message in context: http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17721.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Thu Jun 16 17:26:25 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Thu, 16 Jun 2016 14:26:25 -0700 (MST)
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <1466103432059-17721.post@n5.nabble.com>
References: <ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
	<1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
	<CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
	<1466034351484-17702.post@n5.nabble.com>
	<1466040983375-17706.post@n5.nabble.com>
	<1466086778550-17714.post@n5.nabble.com>
	<1466093799095-17717.post@n5.nabble.com>
	<1466103432059-17721.post@n5.nabble.com>
Message-ID: <1466112385984-17723.post@n5.nabble.com>

Rudolf,

I had taken mistakenly your scale(0) sphere(). I had assumed (without
testing it) that it is incorrectly evaluated as an empty set. But no, it is
a point: the origin! Preview that:

> hull() {
>     sphere(5);
>     translate([0,0,12]) scale(0) sphere();
> }

The result is mathematically correct: the convex hull of the sphere(5) with
the point [0,0,12]. So, scale(0) (or equivalently your multmatrix stuff)
transform anything into a point, the origin, in a way that can be
translated, rotated and scaled again.

Why didn't you get anything in the stl file? Because there is no facets in
scale(0) sphere() just one vertex.

Besides,

> minkovsky() {
>     cube(5);
>     translate([0,0,12]) scale(0) sphere();
> }

 is equivalent to translate([0,0,12])  cube(5), which is correct because
scale(0) sphere() is not the empty set.



--
View this message in context: http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17723.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Thu Jun 16 17:46:16 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Thu, 16 Jun 2016 14:46:16 -0700 (MST)
Subject: [OpenSCAD] Black dumped images
In-Reply-To: <F64343B0-C751-464E-8DD0-0C0FCB01CE6D@kintel.net>
References: <1466096079009-17718.post@n5.nabble.com>
	<F64343B0-C751-464E-8DD0-0C0FCB01CE6D@kintel.net>
Message-ID: <1466113576397-17724.post@n5.nabble.com>

Have fun :)

> OpenSCAD Version: 2015.03-2
> System information: Windows 7 SP1 (v6.1.1.0) 4 CPUs 7.80 GB RAM
> Compiler: GCC "5.2.0" 64bit
> Boost version: 1_57
> Eigen version: 3.2.5
> CGAL version, kernels: 4.5, Cartesian, Extended_cartesian, Epeck
> OpenCSG version: OpenCSG 1.4.0
> Qt version: 5.5.1
> QScintilla version: 2.8.4
> MingW build: MingW64
> GLib version: 2.44.1
> Application Path: C:/Program Files/OpenSCAD
> Documents Path: C:\Users\ronaldo\Documents
> Resource Path: C:/Program Files/OpenSCAD
> User Library Path: C:/Users/ronaldo/Documents/OpenSCAD/libraries
> User Config Path: C:\Users\ronaldo\AppData\Local/OpenSCAD
> Backup Path: C:/Users/ronaldo/Documents/OpenSCAD/backups
> OPENSCADPATH: 
> OpenSCAD library path:
> C:/Users/ronaldo/Documents/OpenSCAD/libraries
> C:/Program Files/OpenSCAD\libraries
> 
> OPENSCAD_FONT_PATH: 
> OpenSCAD font path:
> C:/windows/fonts
> C:/Users/ronaldo/.local/share/fonts
> C:/Users/ronaldo/.fonts
> GLEW version: 1.12.0
> OpenGL Version: 2.1.0 - Build 8.15.10.2104
> GL Renderer: Intel(R) HD Graphics
> GL Vendor: Intel
> RGBA(8888), depth(24), stencil(8)
> GL_ARB_framebuffer_object: no
> GL_EXT_framebuffer_object: yes
> GL_EXT_packed_depth_stencil: yes
> 
> Using QGLWidget
> 
> GL Extensions:
> GL_3DFX_texture_compression_FXT1
> GL_ARB_color_buffer_float
> GL_ARB_depth_buffer_float
> GL_ARB_depth_texture
> GL_ARB_draw_buffers
> GL_ARB_draw_instanced
> GL_ARB_fragment_program
> GL_ARB_fragment_shader
> GL_ARB_framebuffer_sRGB
> GL_ARB_half_float_pixel
> GL_ARB_half_float_vertex
> GL_ARB_multitexture
> GL_ARB_occlusion_query
> GL_ARB_pixel_buffer_object
> GL_ARB_point_parameters
> GL_ARB_point_sprite
> GL_ARB_shader_objects
> GL_ARB_shading_language_100
> GL_ARB_shadow
> GL_ARB_texture_border_clamp
> GL_ARB_texture_compression
> GL_ARB_texture_compression_rgtc
> GL_ARB_texture_cube_map
> GL_ARB_texture_env_add
> GL_ARB_texture_env_combine
> GL_ARB_texture_env_crossbar
> GL_ARB_texture_env_dot3
> GL_ARB_texture_float
> GL_ARB_texture_non_power_of_two
> GL_ARB_texture_rectangle
> GL_ARB_texture_rg
> GL_ARB_transpose_matrix
> GL_ARB_vertex_array_object
> GL_ARB_vertex_buffer_object
> GL_ARB_vertex_program
> GL_ARB_vertex_shader
> GL_ARB_window_pos
> GL_ATI_separate_stencil
> GL_EXT_abgr
> GL_EXT_bgra
> GL_EXT_blend_color
> GL_EXT_blend_equation_separate
> GL_EXT_blend_func_separate
> GL_EXT_blend_minmax
> GL_EXT_blend_subtract
> GL_EXT_clip_volume_hint
> GL_EXT_compiled_vertex_array
> GL_EXT_draw_buffers2
> GL_EXT_draw_range_elements
> GL_EXT_fog_coord
> GL_EXT_framebuffer_blit
> GL_EXT_framebuffer_object
> GL_EXT_multi_draw_arrays
> GL_EXT_packed_depth_stencil
> GL_EXT_packed_float
> GL_EXT_packed_pixels
> GL_EXT_rescale_normal
> GL_EXT_secondary_color
> GL_EXT_separate_specular_color
> GL_EXT_shadow_funcs
> GL_EXT_stencil_two_side
> GL_EXT_stencil_wrap
> GL_EXT_texture3D
> GL_EXT_texture_compression_s3tc
> GL_EXT_texture_edge_clamp
> GL_EXT_texture_env_add
> GL_EXT_texture_env_combine
> GL_EXT_texture_filter_anisotropic
> GL_EXT_texture_lod_bias
> GL_EXT_texture_rectangle
> GL_EXT_texture_sRGB
> GL_EXT_texture_shared_exponent
> GL_EXT_texture_swizzle
> GL_EXT_transform_feedback
> GL_IBM_texture_mirrored_repeat
> GL_NV_blend_square
> GL_NV_conditional_render
> GL_NV_texgen_reflection
> GL_SGIS_generate_mipmap
> GL_SGIS_texture_edge_clamp
> GL_SGIS_texture_lod
> GL_WIN_swap_hint





--
View this message in context: http://forum.openscad.org/Black-dumped-images-tp17718p17724.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From lucas.hartmann at gmail.com  Thu Jun 16 21:33:51 2016
From: lucas.hartmann at gmail.com (Lucas Vinicius Hartmann)
Date: Thu, 16 Jun 2016 22:33:51 -0300
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <1466093799095-17717.post@n5.nabble.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
	<1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
	<CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
	<1466034351484-17702.post@n5.nabble.com>
	<1466040983375-17706.post@n5.nabble.com>
	<1466086778550-17714.post@n5.nabble.com>
	<1466093799095-17717.post@n5.nabble.com>
Message-ID: <CAMbFyDRfad3oSgiOawVt6hAnE0mj1TQSOerkpST-q=+FS=TUuw@mail.gmail.com>

Interesting concept that of degenerate solids, very interesting
implications:

Say goobye to differentiating 2D from 3D shapes. All objects could be
represented as a set of vertices, and faces. An object with:
- No vertexes is a void().
- One vertex, no faces is a point().
- Two vertexes in a face is a line().
- Several coplanar vertexes and faces is a single 2d face().
- Several watertight faces is a solid().

Best of all is that this would allow us to mix them up in any configuration.

- scale([0,0,0]) degenerates any non-void thing to a point at (0,0,0). Void
stays void.
- scale([1,1,0]) would do pretty much the same as project(), by killing off
the Z coordinate, but could be used to project to ZX and ZY planes too.
- scale([0,0,1]) could be used to get a line along the Z axis exactly the
same height as out solids.
- minkowski() { point(); thing(); } would act exactly as translate thing.
- minkowski() { line(); face(); } would act like linear_extrude, except the
line could be any angle. If the line is coplanar to the original face, then
the result ends up being another face().
- minkowski() { line(); solid(); } would extrude a solid! Pretty much like
a hull(), but would work for concave shapes too.
- minkowski() { face1(); face2(); } might end up building a larger face(),
or a solid if faces are not coplanar.
- hull() would work on non-coplanar faces() and result in a solid().

However, I assume this would be a massive amount of work, and should not be
expected anytime soon...

--
Lucas Vinicius Hartmann

Dizem que se voc? rodar o CD do Windows ao contr?rio ele mostra uma
mensagem demon?aca... Mas isso nem ? o pior, se voc? rodar ele normal ele
instala o Windows!

2016-06-16 13:16 GMT-03:00 Ronaldo <rcmpersiano at gmail.com>:

> Rudolf,
>
> You raised good points but I will keep mine about Minkowski. The example
> you
> have shown of a vanishing cube is idiosyncratic but for other reasons. I
> would expect that
>
>            scale(0) sphere;
>
> to be a point, the origin, and not a void set.
>
> In Mathematics, you have a non-void set by doing a Minkowski sum of a point
> and a non-void set. I thought we have no way in OpenSCAD to do a Minkowski
> sum of a set with only a point or a line segment or a 2D shape due to the
> simple fact that we can't express such sets or mix 2D shapes with 3D shapes
> in OpenSCAD operations. However, we can at least in Minkowski operations.
>
> > minkowski() {
> >      cube(1);
> >      intersection() {
> >         cube(1);
> >         translate([$t-1,$t-1,$t-1]) cube(1);
> >      }
> > }
>
> And that is not idiosyncratic. It does exactly what I would expect. The
> intersection is not void, it is a square that shrinks to the origin when
> $t=0. The scaled sphere should do the same.
>
> BTW, the above "technique" may be very usefull for rounding only some edges
> of a solid.
>
> There is much more complexities behind the scene... :)
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17717.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160616/e47107b6/attachment.html>

From lucas.hartmann at gmail.com  Thu Jun 16 21:36:42 2016
From: lucas.hartmann at gmail.com (Lucas Vinicius Hartmann)
Date: Thu, 16 Jun 2016 22:36:42 -0300
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <1466112385984-17723.post@n5.nabble.com>
References: <ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
	<1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
	<CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
	<1466034351484-17702.post@n5.nabble.com>
	<1466040983375-17706.post@n5.nabble.com>
	<1466086778550-17714.post@n5.nabble.com>
	<1466093799095-17717.post@n5.nabble.com>
	<1466103432059-17721.post@n5.nabble.com>
	<1466112385984-17723.post@n5.nabble.com>
Message-ID: <CAMbFyDQ2Eiae3DcBUAbKRdUK8AtWwoH_h+eBkFjPwgUVNgQ7uA@mail.gmail.com>

Unfortunately the point hacked with scale(0) is not well behaved. The code
below crashed openscad every time I asked it to render...

module point(at=[0,0,0]) {
    translate(at) scale(0) cube();
}

minkowski() {
    point([0,0,0]);
    point([1,0,0]);
    point([0,1,1]);
    point([0,0,1]);
}


--
Lucas Vinicius Hartmann

Dizem que se voc? rodar o CD do Windows ao contr?rio ele mostra uma
mensagem demon?aca... Mas isso nem ? o pior, se voc? rodar ele normal ele
instala o Windows!

2016-06-16 18:26 GMT-03:00 Ronaldo <rcmpersiano at gmail.com>:

> Rudolf,
>
> I had taken mistakenly your scale(0) sphere(). I had assumed (without
> testing it) that it is incorrectly evaluated as an empty set. But no, it is
> a point: the origin! Preview that:
>
> > hull() {
> >     sphere(5);
> >     translate([0,0,12]) scale(0) sphere();
> > }
>
> The result is mathematically correct: the convex hull of the sphere(5) with
> the point [0,0,12]. So, scale(0) (or equivalently your multmatrix stuff)
> transform anything into a point, the origin, in a way that can be
> translated, rotated and scaled again.
>
> Why didn't you get anything in the stl file? Because there is no facets in
> scale(0) sphere() just one vertex.
>
> Besides,
>
> > minkovsky() {
> >     cube(5);
> >     translate([0,0,12]) scale(0) sphere();
> > }
>
>  is equivalent to translate([0,0,12])  cube(5), which is correct because
> scale(0) sphere() is not the empty set.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17723.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160616/7d49446d/attachment.html>

From oz.at.michael at gmail.com  Thu Jun 16 21:47:25 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 16 Jun 2016 18:47:25 -0700 (MST)
Subject: [OpenSCAD] text on stars
In-Reply-To: <1466103691283-17722.post@n5.nabble.com>
References: <1466103691283-17722.post@n5.nabble.com>
Message-ID: <1466128045196-17727.post@n5.nabble.com>

Lucy wrote
> Hi there! Quick openscad question: When placing text on a solid, how can
> you control the location? This code works for a different solid but not
> this one. Any suggestions are helpful. Here's what I've got:
> 
> // LetterBlock.scad - Basic usage of text() and linear_extrude()
> 
> // Module instantiation
> LetterBlock("proxima centauri");
> 
> // Module definition.
> // size=30 defines an optional parameter with a default value.
> module LetterBlock(letter, size=1000) {
>     difference() {
> hull(){ translate([95.0,-163.904109589,151.164383562])cube(0.1,0.1,0.1);
> translate([74.4927536232,-15.5072463768,158.043478261])cube(0.1,0.1,0.1);
> translate([95.0,5.0,35.0])cube(0.1,0.1,0.1);
> translate([95.0,-25.4301075269,171.935483871])cube(0.1,0.1,0.1);
> translate([68.0,-22.0,-149.6])cube(0.1,0.1,0.1);
> translate([95.0,5.0,-137.0])cube(0.1,0.1,0.1);
> translate([39.2764397906,-161.705759162,-188.248167539])cube(0.1,0.1,0.1);
> translate([95.0,-247.647058824,-158.235294118])cube(0.1,0.1,0.1);
> translate([59.9502982107,-110.546719682,-180.188866799])cube(0.1,0.1,0.1);
> translate([95.0,-77.6,-164.533333333])cube(0.1,0.1,0.1);
> translate([95.0,-254.594594595,-151.891891892])cube(0.1,0.1,0.1);
> translate([95.0,-270.688622754,121.706586826])cube(0.1,0.1,0.1);
> translate([63.2793546108,-274.709103757,110.753150395])cube(0.1,0.1,0.1);
> translate([-4.26742331864,-281.601632117,59.0591876935])cube(0.1,0.1,0.1);
> translate([10.2365415987,-272.349102773,-61.9738988581])cube(0.1,0.1,0.1);
> translate([-53.1773399015,-143.177339901,43.1403940887])cube(0.1,0.1,0.1);
> translate([-34.5580110497,-124.55801105,-129.08839779])cube(0.1,0.1,0.1);
> translate([-23.0774962742,-148.90461997,-145.715350224])cube(0.1,0.1,0.1);
> }       translate([-80,40,0])
> 
> {
>             // convexity is needed for correct preview
>             // since characters can be highly concave
>             linear_extrude(height=size, convexity=4)
>                 text(letter,
>                      size=size*3/30,
>                      font="Bitstream Vera Sans",
>                      halign="center",
>                      valign="center");
>         }
>     }
> }

Hi Lucy, welcome to the forum. 
Firstly, your post is still flagged as "This post has NOT been accepted by
the mailing list yet", so nobody gets it unless they look. 
You need to subscribe to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.

Re positioning text, you use either rotate() and/or translate() to position
the text.
In your code you don't see the text because it is beside the solid. Add a
'#' at the front of the linear_extrude, ie #linear_extrude(height=size,
convexity=4), and you will see the text. It is way to big ATM.

So you need

translate([n,n,n])
  rotate([a,a,a])
   #linear_extrude(...)
      ...

Play with the numbers to move it around.




-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/text-on-stars-tp17722p17727.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Jun 16 22:23:53 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 16 Jun 2016 19:23:53 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <1466102499559-17720.post@n5.nabble.com>
References: <CALe4i4vLzeQMDWYQejSoJFzbtN3Qay4bbJDoXAA7gp_+u9jBvg@mail.gmail.com>
	<b7edbb8a-933d-3f41-5ca5-13232efe11c5@gmx.de>
	<CALe4i4u_49JiBSqmFvTFHDjh0bkedxsasq6hbeyp7j=AwqkqBg@mail.gmail.com>
	<68720d97-585b-c428-38ea-e6266d52658a@gmx.de>
	<CALe4i4sH8ktzMQJ-W8F1i4s=bx1nLioVpzpNs=TxapJYG=nkKQ@mail.gmail.com>
	<cb7e1529-d739-5324-6c8d-e88503931d48@gmx.de>
	<CALe4i4u1WiBOq+Z13Kmfu3S2Cr8g4wDikg0XL9RYigimXACcjQ@mail.gmail.com>
	<1466031653374-17700.post@n5.nabble.com>
	<CALe4i4u5+X7CORwFCo4riZYoM_URJgKWn3qRtmzU2MqReHwj9g@mail.gmail.com>
	<1466102499559-17720.post@n5.nabble.com>
Message-ID: <1466130233568-17728.post@n5.nabble.com>

The various np++ (Scintilla based) language definitions recognise keywords
starting with the same letters, they show a dialogue with the options, you
just need to type the next letter, or use up/down to select. That is a much
better approach than bastardising things like k for minkowski.

http://docs.notepad-plus-plus.org/index.php/Auto_Completion

Personally I like the 'Additionally there is a setting "From X th
character", accepting a the minimum length of a prefix needed before the
completion list is shown (some people like 2, some 3, some 4...)' set to 2,
so you just type tr<tab|enter> for translate etc, that covers most
conflicting prefixes.

np++ is open source (but Windows only), but based on Scintilla, so perhaps
some of its autocomplete code (https://github.com/notepad-plus-plus) could
be harvested?



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17728.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Jun 16 22:40:10 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 16 Jun 2016 19:40:10 -0700 (MST)
Subject: [OpenSCAD] Chromebook 13 (Acer) to run OpenSCAD?
In-Reply-To: <1465925357747-17676.post@n5.nabble.com>
References: <1465925357747-17676.post@n5.nabble.com>
Message-ID: <1466131210561-17729.post@n5.nabble.com>

cb13 is not x86 based so it would be hard to do Windows.

It is a SoC, which usually supports only OpenGL ES, but according to
wikipedia "Nvidia?s Tegra K1 (codenamed "Logan") features ARM Cortex-A15
cores in a 4+1 configuration similar to Tegra 4, or Nvidia's 64-bit Project
Denver dual-core processor as well as a Kepler graphics processing unit with
support for Direct3D 12, OpenGL ES 3.1, CUDA 6.5, OpenGL 4.4/OpenGL 4.5, and
Vulkan", seems it supports full OpenGL, you _may_ be able to get a non
android linux running...



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Chromebook-13-Acer-to-run-OpenSCAD-tp17676p17729.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Thu Jun 16 23:54:56 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Thu, 16 Jun 2016 20:54:56 -0700 (MST)
Subject: [OpenSCAD] Unusual hull() and minkowski modelling
Message-ID: <1466135696411-17730.post@n5.nabble.com>

I have found from a discussion in another thread a whole new set of
possibilities of modelling with hull() and minkowski(). I will present here
some of them.

To start consider the following module definitions:

> module square3(a,b) scale([a,b,0]) cube(1,center=true);
> module circle3(r=1) scale([1,1,0]) cylinder(r=r);
> module point3(p)    translate(p)   scale(0) cube();

Essentially, the first and second are a cube and a cylinder smashed onto the
xy plane, and the third a  cube shrinked to the origin. They don't have
volume and the last one does not have even an area. They are 2D and 0D
"shapes" but they are 3D objects in some sense (the reason I added a 3 in
their names).

If you try to preview any of them you will see nothing. But they are not
empty sets. For instance, you can hull() the point3() with a sphere and get
a drop like model:

> hull() { sphere(5); point3([0,0,12]); }

or start the model of a T-joint:

> hull() { translate([0,-10,0]) rotate([90,0,0]) circle3(5,10);
> cylinder(r=5,h=20,center=true); }

It is possible to do intersections of those shapes with real 3D forms before
the hull:

> hull() { 
>     intersection(){ cube(20); circle3(7); }
>     translate([0,0,20]) sphere(10);}

Or even make the hull() of just those strange forms to make a cone:
 
> translate([0,-20,0]) hull() { circle3(5); point3([0,0,10]); }

Let us add one 1D object to the arsenal:

> module segment3(p,p0=[0,0,0]) {
>     q = p-p0;
>     l = norm(q);
>     b = acos(q[2]/l);
>     c = atan2(q[1],q[0]);
>     translate(p0)
>         rotate([0, b, c]) 
>             scale([0,0,l]) 
>                 cube(1);
> }

Now the cube is smashed to an edge then rotate and scaled in such a way to
bring the edge (a line segment) to lay between the points p and p0. Again
you can't see any preview of segment3(). But it appears when you do the hull
of a set of them:

> module tetrahedron(h){
>     hull() { 
>         segment3([0,0,h]); // a segment from [0,0,h] to [0,0,0]
>         segment3([h,0,0]);
>         segment3([0,h,0]);  
>     }
> }

Now minkowski. This operator is more restricted. To do a minkowski you need
at least one real 3D object. So when I tried change the hull() in the
tetrahedron() to a minkowski I got a system crash. In other trials, I got
one CGAL error message or nothing at all.

But there is a lot of interesting thing to do with the operator. For
instance, a solid linear extrusion:

> module solid_linear_extrude(h=1){
>     minkowski(){
>         children();
>         segment3([0,0,h]);
>     }
> }
> solid_linear_extrude(20) difference(){ sphere(10); cylinder(r=5,
> h=30,center=true); }

This code took a longer time to preview but it worked. It is easy and faster
do it with hull().

But hull() does not solve the sweep operation. Minkowski does with the
module:

> module sweep_solid(line) {
>     for(i=[0:len(line)-2])
>         minkowski(){
>             children();
>             segment3(line[i],line[i+1]);
>         }
> }

We cannot sweep a 2D shape with sweep_solid() but it is possible to sweep a
sphere(), a cube or, if you have plenty of time, any 3D model. Note that
this is a translational sweep.

Finally, an interesting approach to morphing using minkowski:

> module morphing(t) {
>     minkowski() {
>         scale((1-t)) children(0);
>         scale(t) children(1);
>     }
> }

that is applied here to a sphere and a cylinder in an animation:

> morphing(1/2-cos(360*$t)/2) { A(); B(); }
> module A() rotate([90,0,0]) cylinder(r=3,h=15,center=true);
> module B() translate([20,0,0]) sphere(5);

For any given 0<t<1,  morphing(t) is a blend of the two children.



--
View this message in context: http://forum.openscad.org/Unusual-hull-and-minkowski-modelling-tp17730.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Fri Jun 17 00:07:50 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Thu, 16 Jun 2016 21:07:50 -0700 (MST)
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <CAMbFyDQ2Eiae3DcBUAbKRdUK8AtWwoH_h+eBkFjPwgUVNgQ7uA@mail.gmail.com>
References: <1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
	<CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
	<1466034351484-17702.post@n5.nabble.com>
	<1466040983375-17706.post@n5.nabble.com>
	<1466086778550-17714.post@n5.nabble.com>
	<1466093799095-17717.post@n5.nabble.com>
	<1466103432059-17721.post@n5.nabble.com>
	<1466112385984-17723.post@n5.nabble.com>
	<CAMbFyDQ2Eiae3DcBUAbKRdUK8AtWwoH_h+eBkFjPwgUVNgQ7uA@mail.gmail.com>
Message-ID: <1466136470188-17731.post@n5.nabble.com>

Lucas,

Although in Mathematics we can apply the operators convex hull and Minkowski
sum to any set of sets. I did not saw until today how to do it in OpenSCAD.
The properties and object you have summarized open up a whole set of
possibilities to modelling with OpenSCAD. That is why a started a new thread
a while ago showing some of them and to concentrate the discussion on the
subject.

Although hull() works well with 2D, 1D and 0D objects alone, the minkowski()
on fact requires that at least one of the operands to be a real 3D object,
and possibly a manifold. This seems to be a restriction of CGAL.



--
View this message in context: http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17731.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From maurizio.butti at gmail.com  Fri Jun 17 02:12:10 2016
From: maurizio.butti at gmail.com (buttim)
Date: Thu, 16 Jun 2016 23:12:10 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <1466102499559-17720.post@n5.nabble.com>
References: <CALe4i4vLzeQMDWYQejSoJFzbtN3Qay4bbJDoXAA7gp_+u9jBvg@mail.gmail.com>
	<b7edbb8a-933d-3f41-5ca5-13232efe11c5@gmx.de>
	<CALe4i4u_49JiBSqmFvTFHDjh0bkedxsasq6hbeyp7j=AwqkqBg@mail.gmail.com>
	<68720d97-585b-c428-38ea-e6266d52658a@gmx.de>
	<CALe4i4sH8ktzMQJ-W8F1i4s=bx1nLioVpzpNs=TxapJYG=nkKQ@mail.gmail.com>
	<cb7e1529-d739-5324-6c8d-e88503931d48@gmx.de>
	<CALe4i4u1WiBOq+Z13Kmfu3S2Cr8g4wDikg0XL9RYigimXACcjQ@mail.gmail.com>
	<1466031653374-17700.post@n5.nabble.com>
	<CALe4i4u5+X7CORwFCo4riZYoM_URJgKWn3qRtmzU2MqReHwj9g@mail.gmail.com>
	<1466102499559-17720.post@n5.nabble.com>
Message-ID: <CALe4i4siFNWU8T_Cnya6T_YmBX2K_xJccob1G6d9pADW=4NzAA@mail.gmail.com>

They're both reasonable choices. In any case abbreviations are not really
useful for constructs that are not used often enough. But having them in
the definitions file won't do any harm.

On Thu, Jun 16, 2016 at 8:41 PM, jpmendes [via OpenSCAD] <
ml-node+s1091067n17720h95 at n5.nabble.com> wrote:

> Hi,
>
> I think "z" for scale is better because z suggests zoom (up, down) and
> scale can be seen as a "kind of zoom". The "+" has a  variable position on
> international keyboards and sometimes we need to press "shift" to get the
> "+". Scale less than 1 suggests "-".
> The "k" for minkowski is because k is repeated, so it is easy to remember.
> As you said, being configurable, any one can choose the letters they feel
> more comfortable with.
>
> Thanks.
>
> jpmendes
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/Abbreviations-tp17583p17720.html
> To unsubscribe from Abbreviations, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17583&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3NTgzfDE4OTg0NTUyNTk=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17732.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160616/8bc67aa0/attachment.html>

From maurizio.butti at gmail.com  Fri Jun 17 02:18:52 2016
From: maurizio.butti at gmail.com (buttim)
Date: Thu, 16 Jun 2016 23:18:52 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <1466130233568-17728.post@n5.nabble.com>
References: <b7edbb8a-933d-3f41-5ca5-13232efe11c5@gmx.de>
	<CALe4i4u_49JiBSqmFvTFHDjh0bkedxsasq6hbeyp7j=AwqkqBg@mail.gmail.com>
	<68720d97-585b-c428-38ea-e6266d52658a@gmx.de>
	<CALe4i4sH8ktzMQJ-W8F1i4s=bx1nLioVpzpNs=TxapJYG=nkKQ@mail.gmail.com>
	<cb7e1529-d739-5324-6c8d-e88503931d48@gmx.de>
	<CALe4i4u1WiBOq+Z13Kmfu3S2Cr8g4wDikg0XL9RYigimXACcjQ@mail.gmail.com>
	<1466031653374-17700.post@n5.nabble.com>
	<CALe4i4u5+X7CORwFCo4riZYoM_URJgKWn3qRtmzU2MqReHwj9g@mail.gmail.com>
	<1466102499559-17720.post@n5.nabble.com>
	<1466130233568-17728.post@n5.nabble.com>
Message-ID: <CALe4i4v71PUJ8eFZk=Ysd1tR09hHDe7R1Z7aKqu55JyMN=yBAg@mail.gmail.com>

What you're talking about here is "autocompletion", while the main subject
is abbreviations. The two functionalities are aimed at different users.
While autocompletion helps novices which do not know or remember easily the
language constructs, abbreviations helps experts in being more productive.
The second kind of users would be quite annoyed by popups flickering around
every couple of seconds.
Actually we ended up implementing both of them, so you'll be free to chose
what you like best.
np++ uses Scintilla directly, not the QScintilla layer; so I guess reusing
portions of code would not be feasible.

On Fri, Jun 17, 2016 at 4:23 AM, MichaelAtOz [via OpenSCAD] <
ml-node+s1091067n17728h43 at n5.nabble.com> wrote:

> The various np++ (Scintilla based) language definitions recognise keywords
> starting with the same letters, they show a dialogue with the options, you
> just need to type the next letter, or use up/down to select. That is a much
> better approach than bastardising things like k for minkowski.
>
> http://docs.notepad-plus-plus.org/index.php/Auto_Completion
>
> Personally I like the 'Additionally there is a setting "From X th
> character", accepting a the minimum length of a prefix needed before the
> completion list is shown (some people like 2, some 3, some 4...)' set to 2,
> so you just type tr<tab|enter> for translate etc, that covers most
> conflicting prefixes.
>
> np++ is open source (but Windows only), but based on Scintilla, so perhaps
> some of its autocomplete code (https://github.com/notepad-plus-plus)
> could be harvested?
> *Admin - PM me if you need anything, *
> or if I've done something stupid...
>
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; to the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work.
> Obviously inclusion of works of previous authors is not included in the
> above.
>
> The *TPP* is no simple *?trade agreement.?* *Fight it!*
> http://www.ourfairdeal.org/ *time is running out!*
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/Abbreviations-tp17583p17728.html
> To unsubscribe from Abbreviations, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17583&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3NTgzfDE4OTg0NTUyNTk=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17733.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160616/8756f0cf/attachment.html>

From nop.head at gmail.com  Fri Jun 17 02:20:30 2016
From: nop.head at gmail.com (nop head)
Date: Fri, 17 Jun 2016 07:20:30 +0100
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <1466136470188-17731.post@n5.nabble.com>
References: <1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
	<CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
	<1466034351484-17702.post@n5.nabble.com>
	<1466040983375-17706.post@n5.nabble.com>
	<1466086778550-17714.post@n5.nabble.com>
	<1466093799095-17717.post@n5.nabble.com>
	<1466103432059-17721.post@n5.nabble.com>
	<1466112385984-17723.post@n5.nabble.com>
	<CAMbFyDQ2Eiae3DcBUAbKRdUK8AtWwoH_h+eBkFjPwgUVNgQ7uA@mail.gmail.com>
	<1466136470188-17731.post@n5.nabble.com>
Message-ID: <CAEEmnrOHfpbwZPuDHjLOYyPLC9hi8ve-2SeSLU3KSYdPAF=o3Q@mail.gmail.com>

scale(0) doesn't make a single point. It shrinks the shape to zero size so
all its vertices are coincident and then it is not a manifold hence CGAL
doesn't like it.

On 17 June 2016 at 05:07, Ronaldo <rcmpersiano at gmail.com> wrote:

> Lucas,
>
> Although in Mathematics we can apply the operators convex hull and
> Minkowski
> sum to any set of sets. I did not saw until today how to do it in OpenSCAD.
> The properties and object you have summarized open up a whole set of
> possibilities to modelling with OpenSCAD. That is why a started a new
> thread
> a while ago showing some of them and to concentrate the discussion on the
> subject.
>
> Although hull() works well with 2D, 1D and 0D objects alone, the
> minkowski()
> on fact requires that at least one of the operands to be a real 3D object,
> and possibly a manifold. This seems to be a restriction of CGAL.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17731.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160617/c71c5f12/attachment.html>

From maurizio.butti at gmail.com  Fri Jun 17 08:21:39 2016
From: maurizio.butti at gmail.com (buttim)
Date: Fri, 17 Jun 2016 05:21:39 -0700 (MST)
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <trinity-980652e4-e060-4007-831d-605768d597d0-1465986295106@3capp-gmx-bs25>
References: <CALe4i4t863sOfFpYwUdq02vPPNc9--9i2kdP_Eb+DZB5NuzgFQ@mail.gmail.com>
	<19b3528c-0e5a-31c6-5926-27dc0ea84c7a@gmx.de>
	<CALe4i4vLzeQMDWYQejSoJFzbtN3Qay4bbJDoXAA7gp_+u9jBvg@mail.gmail.com>
	<b7edbb8a-933d-3f41-5ca5-13232efe11c5@gmx.de>
	<CALe4i4u_49JiBSqmFvTFHDjh0bkedxsasq6hbeyp7j=AwqkqBg@mail.gmail.com>
	<68720d97-585b-c428-38ea-e6266d52658a@gmx.de>
	<CALe4i4sH8ktzMQJ-W8F1i4s=bx1nLioVpzpNs=TxapJYG=nkKQ@mail.gmail.com>
	<cb7e1529-d739-5324-6c8d-e88503931d48@gmx.de>
	<CALe4i4u1WiBOq+Z13Kmfu3S2Cr8g4wDikg0XL9RYigimXACcjQ@mail.gmail.com>
	<trinity-980652e4-e060-4007-831d-605768d597d0-1465986295106@3capp-gmx-bs25>
Message-ID: <CALe4i4sW_PWr+hi=34cevyP6HMfyieFHUDy4xOwVLogFfQ7=Ug@mail.gmail.com>

A few improvements. Separated "complete word" (from document) and new
"complete symbol" (from APIs). Shortcuts are CTRL+Return as before for the
first and CTRL+SPACE for the second (same as SciTE editor and quite handy I
think).
I added the abbreviations suggested by jpmendes (z for scale jp :) ), and
many APIs definitions from your code

On Wed, Jun 15, 2016 at 12:26 PM, tp3 [via OpenSCAD] <
ml-node+s1091067n17685h10 at n5.nabble.com> wrote:

> Von: buttim <[hidden email]
> <http:///user/SendEmail.jtp?type=node&node=17685&i=0>>
> > I'm using an italian keyboard on which the curly
> > bracket is produced by the key combination AltGr+Shift++.
> > The + key is used to produce a * in combination with
> > shift. This does not happen in Ubuntu, so it seems a
> > QScintilla (or Scintilla) bug.
> >
> It could also be one of the (a bit annoying) platform
> differences which all the Qt stuff is supposed to hide.
>
> > I also verified the crash when the scad.api file is
> > missing, which I'll try to solve.
> >
> Yep, I found the crash is gone after putting in the
> scad.api file. I just missed it's two files that need
> to be put there.
>
> I still could not get it to expand the shortcuts, yet.
> I'll have to have a closer look again, for which I
> might not have the time in the next couple of days.
> I hope the build is still useful for others, we can
> try adding the files to the next build...
>
> ciao,
>   Torsten.
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17685&i=1>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> -- Torsten
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/Abbreviations-tp17583p17685.html
> To unsubscribe from Abbreviations, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17583&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3NTgzfDE4OTg0NTUyNTk=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>


editor-improvement6.patch (14K) <http://forum.openscad.org/attachment/17744/0/editor-improvement6.patch>
abbrev.json (852 bytes) <http://forum.openscad.org/attachment/17744/1/abbrev.json>
scad.api (684 bytes) <http://forum.openscad.org/attachment/17744/2/scad.api>




--
View this message in context: http://forum.openscad.org/Abbreviations-tp17583p17744.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160617/124967fc/attachment.html>

From rudolf at parkinbot.com  Fri Jun 17 11:02:08 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 17 Jun 2016 08:02:08 -0700 (MST)
Subject: [OpenSCAD] Unusual hull() and minkowski modelling
In-Reply-To: <1466135696411-17730.post@n5.nabble.com>
References: <1466135696411-17730.post@n5.nabble.com>
Message-ID: <1466175728725-17745.post@n5.nabble.com>

Ronaldo, 

there are people shuffling eggs with wheel loaders ... ;-) 
Others find themselves using  Mathematica
<https://de.wikipedia.org/wiki/Mathematica>   sooner or later.

For a Mathematician it can be fun to study this degenerate stuff, and it can
indeed discover some crash scenarios in OpenSCAD. 
But to be honest, I don't see any practical use in working with pathological
constructs, beyond curiosity. Implementation will change over time, and any
of this code might be broken sooner or later. 

Again, F5 uses your graphics system for rendering. OpenSCAD 'calculates' its
stuff by feeding proper representations into subsystems, which are supposed
to do the dirty work. It might be enough to install a new OpenGL driver to
change CSG view results. And finally CGAL's Nef polyhedra implementation
might have its own 'opinion' about these things and also change it some day.

As I understand it, OpenSCAD currently bypasses CGAL for 2D shapes and does
some own (fast) calculations on them. So, there are at least three worlds -
and representations - involved ... 

I would always decide (and advise) to use a more common or 'straight'
solution instead of 'peek and poke' for *robustness* and execution time.
Instead of 

> hull() { sphere(5); point3([0,0,12]); 

I'd always apply 'Occam's razor' and simply write:

> hull() { sphere(5); cylinder(12, 0.1, 0); } 

And everybody (including myself even after a year) will be able to read it. 

What do you think, will be gained? More language expressiblity?




--
View this message in context: http://forum.openscad.org/Unusual-hull-and-minkowski-modelling-tp17730p17745.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Fri Jun 17 12:41:45 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Fri, 17 Jun 2016 18:41:45 +0200
Subject: [OpenSCAD] Abbreviations
In-Reply-To: <1466130233568-17728.post@n5.nabble.com>
References: <CALe4i4vLzeQMDWYQejSoJFzbtN3Qay4bbJDoXAA7gp_+u9jBvg@mail.gmail.com>
	<b7edbb8a-933d-3f41-5ca5-13232efe11c5@gmx.de>
	<CALe4i4u_49JiBSqmFvTFHDjh0bkedxsasq6hbeyp7j=AwqkqBg@mail.gmail.com>
	<68720d97-585b-c428-38ea-e6266d52658a@gmx.de>
	<CALe4i4sH8ktzMQJ-W8F1i4s=bx1nLioVpzpNs=TxapJYG=nkKQ@mail.gmail.com>
	<cb7e1529-d739-5324-6c8d-e88503931d48@gmx.de>
	<CALe4i4u1WiBOq+Z13Kmfu3S2Cr8g4wDikg0XL9RYigimXACcjQ@mail.gmail.com>
	<1466031653374-17700.post@n5.nabble.com>
	<CALe4i4u5+X7CORwFCo4riZYoM_URJgKWn3qRtmzU2MqReHwj9g@mail.gmail.com>
	<1466102499559-17720.post@n5.nabble.com>
	<1466130233568-17728.post@n5.nabble.com>
Message-ID: <d0a22165-b046-3993-02b5-b8a9e2433990@gmx.de>

On 06/17/2016 04:23 AM, MichaelAtOz wrote:
> np++ is open source (but Windows only), but based on Scintilla, so
> perhaps some of its autocomplete code (https://github.com/notepad-plus-plus)
> could be harvested?
> 
I think that's not really possible (or easy...) unfortunately. QScintilla
and Scintilla are quite different in some cases, even with the first being
based on the latter one.

That said, the autocomplete is built-in as shown in the screencasts in
https://github.com/openscad/openscad/pull/905 - only the selection of what's
displayed is actually part of the application.

I guess all those features are similar enough to just have all the variations
and let the user decide what to enable.

ciao,
  Torsten.




From rcmpersiano at gmail.com  Fri Jun 17 13:18:41 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Fri, 17 Jun 2016 10:18:41 -0700 (MST)
Subject: [OpenSCAD] Unusual hull() and minkowski modelling
In-Reply-To: <1466175728725-17745.post@n5.nabble.com>
References: <1466135696411-17730.post@n5.nabble.com>
	<1466175728725-17745.post@n5.nabble.com>
Message-ID: <1466183921438-17747.post@n5.nabble.com>

Rudolf,

I usually like your approach, your way of thinking, and certainly the
experience you bring to the discussions. For me, it is like a counterpoint
to mine ways. And I like diversity.

I agree that the ideas I expressed will have a short live. May be in the
next version. My intention however was to show the gain in expressiveness
when you mix 3D objects with lower dimension ones. I can't see anything
clearer then express a sweep as a minkowski of a solid with a curve or
polyline. And it would be a gain to express the sweep as such. I am not
saying that it should be done that way now because minkowski is lot
expensive yet. May be in the future.

I disagree however that your 'Occam's razor' solution to the drop code is
clearer then mine. I agree that the definition point3() is polemics due to
its use of degenerescence but the drop code is clearer then using a almost
degenerated cylinder. The ideal would be to have primitives point(), edge(),
polygon(), etc that were mixable with 3D solids in a proper way. In that
case, who would code a drop like yours?

Observe that minkowski is processed by CGAL and the library accepts and
process correctly the mix of 3D with lower dimension figures. There is no
real complexities or break in robustness in those mixing. Neither
theoretically nor in the algorithms. What is missing is a way to express
this without to resort to degenerated codes.

Ronaldo



--
View this message in context: http://forum.openscad.org/Unusual-hull-and-minkowski-modelling-tp17730p17747.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Fri Jun 17 13:29:16 2016
From: nop.head at gmail.com (nop head)
Date: Fri, 17 Jun 2016 18:29:16 +0100
Subject: [OpenSCAD] Unusual hull() and minkowski modelling
In-Reply-To: <1466183921438-17747.post@n5.nabble.com>
References: <1466135696411-17730.post@n5.nabble.com>
	<1466175728725-17745.post@n5.nabble.com>
	<1466183921438-17747.post@n5.nabble.com>
Message-ID: <CAEEmnrOkbpZACMpsX7SeHAGTnrKkU7rUpseYE8JYOc8Aw3t29A@mail.gmail.com>

Is 3D Minkowski still processed with CGAL? I think there was some work to
bypass CGAL for hull and minkowski to speed them up in the convex case,
which is simple and in the concave case I think it now does a convex
decomposition and unions the results. The union will be done in CGAL and
hence slow. Not sure as my memory is failing.

On 17 June 2016 at 18:18, Ronaldo <rcmpersiano at gmail.com> wrote:

> Rudolf,
>
> I usually like your approach, your way of thinking, and certainly the
> experience you bring to the discussions. For me, it is like a counterpoint
> to mine ways. And I like diversity.
>
> I agree that the ideas I expressed will have a short live. May be in the
> next version. My intention however was to show the gain in expressiveness
> when you mix 3D objects with lower dimension ones. I can't see anything
> clearer then express a sweep as a minkowski of a solid with a curve or
> polyline. And it would be a gain to express the sweep as such. I am not
> saying that it should be done that way now because minkowski is lot
> expensive yet. May be in the future.
>
> I disagree however that your 'Occam's razor' solution to the drop code is
> clearer then mine. I agree that the definition point3() is polemics due to
> its use of degenerescence but the drop code is clearer then using a almost
> degenerated cylinder. The ideal would be to have primitives point(),
> edge(),
> polygon(), etc that were mixable with 3D solids in a proper way. In that
> case, who would code a drop like yours?
>
> Observe that minkowski is processed by CGAL and the library accepts and
> process correctly the mix of 3D with lower dimension figures. There is no
> real complexities or break in robustness in those mixing. Neither
> theoretically nor in the algorithms. What is missing is a way to express
> this without to resort to degenerated codes.
>
> Ronaldo
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Unusual-hull-and-minkowski-modelling-tp17730p17747.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160617/a26e0816/attachment.html>

From marius at kintel.net  Fri Jun 17 15:57:19 2016
From: marius at kintel.net (Marius Kintel)
Date: Fri, 17 Jun 2016 15:57:19 -0400
Subject: [OpenSCAD] Unusual hull() and minkowski modelling
In-Reply-To: <CAEEmnrOkbpZACMpsX7SeHAGTnrKkU7rUpseYE8JYOc8Aw3t29A@mail.gmail.com>
References: <1466135696411-17730.post@n5.nabble.com>
	<1466175728725-17745.post@n5.nabble.com>
	<1466183921438-17747.post@n5.nabble.com>
	<CAEEmnrOkbpZACMpsX7SeHAGTnrKkU7rUpseYE8JYOc8Aw3t29A@mail.gmail.com>
Message-ID: <B1FC891D-C4E4-49C4-B504-5FF1655A59B5@kintel.net>

> On Jun 17, 2016, at 13:29 PM, nop head <nop.head at gmail.com> wrote:
> 
> Is 3D Minkowski still processed with CGAL? I think there was some work to bypass CGAL for hull and minkowski to speed them up in the convex case, which is simple and in the concave case I think it now does a convex decomposition and unions the results. The union will be done in CGAL and hence slow. Not sure as my memory is failing. 
> 
We try to process 3D minkowski using convex hulls and convex decomposition. The hulls themselves are processed using CGAL (although not using Nef polyhedrons, it?s pretty performant). This is an optimization that ideally should already be done within CGAL.
Yes, unions are still slow.

 -Marius




From rcmpersiano at gmail.com  Fri Jun 17 16:27:34 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Fri, 17 Jun 2016 13:27:34 -0700 (MST)
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <CAEEmnrOHfpbwZPuDHjLOYyPLC9hi8ve-2SeSLU3KSYdPAF=o3Q@mail.gmail.com>
References: <CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
	<1466034351484-17702.post@n5.nabble.com>
	<1466040983375-17706.post@n5.nabble.com>
	<1466086778550-17714.post@n5.nabble.com>
	<1466093799095-17717.post@n5.nabble.com>
	<1466103432059-17721.post@n5.nabble.com>
	<1466112385984-17723.post@n5.nabble.com>
	<CAMbFyDQ2Eiae3DcBUAbKRdUK8AtWwoH_h+eBkFjPwgUVNgQ7uA@mail.gmail.com>
	<1466136470188-17731.post@n5.nabble.com>
	<CAEEmnrOHfpbwZPuDHjLOYyPLC9hi8ve-2SeSLU3KSYdPAF=o3Q@mail.gmail.com>
Message-ID: <1466195254828-17750.post@n5.nabble.com>

nophead wrote
> scale(0) doesn't make a single point. It shrinks the shape to zero size so
> all its vertices are coincident and then it is not a manifold hence CGAL
> doesn't like it.

I checked the assumption by substituting the cube by a sphere with $fn=256.
There were no significant increase in processing time. So I think the
vertices are collapsed to a point. 

Besides, although CGAL doesn't like non-manifold objects, the whole process
works with this version. 



--
View this message in context: http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17750.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Fri Jun 17 18:43:28 2016
From: doug at moens.org (doug moen)
Date: Fri, 17 Jun 2016 18:43:28 -0400
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <CAMbFyDRfad3oSgiOawVt6hAnE0mj1TQSOerkpST-q=+FS=TUuw@mail.gmail.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
	<1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
	<CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
	<1466034351484-17702.post@n5.nabble.com>
	<1466040983375-17706.post@n5.nabble.com>
	<1466086778550-17714.post@n5.nabble.com>
	<1466093799095-17717.post@n5.nabble.com>
	<CAMbFyDRfad3oSgiOawVt6hAnE0mj1TQSOerkpST-q=+FS=TUuw@mail.gmail.com>
Message-ID: <CAGV6i+PKYp6CtM078=s2GqycxDdSPVQLG5=wb06PYWGvmHn04w@mail.gmail.com>

Lucas said:
Interesting concept that of degenerate solids, very interesting
implications:
Say goodbye to differentiating 2D from 3D shapes. All objects could be
represented as a set of vertices, and faces. An object with:
- No vertexes is a void().
- One vertex, no faces is a point().
- Two vertexes in a face is a line().
- Several coplanar vertexes and faces is a single 2d face().
- Several watertight faces is a solid().
Best of all is that this would allow us to mix them up in any configuration.

"However, I assume this would be a massive amount of work..."

I'm not sure this would make practical sense, even if you are implementing
a new geometry engine from scratch. Although this idea would work in the
realm of pure mathematics, I don't think it would survive contact with
floating point numbers and STL files. In addition, it might create a lot of
unexpected behaviour.

Our current geometry system considers 2D objects and 3D objects to be
different types, and I think that is necessary for practical reasons. One
issue is that we use different libraries for 2D and 3D objects: CGAL for 3D
CSG operations, Clipper for 2D. Another issue is that this plan implies
that a 2D object could be created as the output of an operation on 3D
objects, and then operations with 2D arguments like rotate_extrude would be
expected to recognize these objects as 2D and accept them as legal input.
In that case, floating point imprecision could be the deciding factor in
whether an object is considered 2D or 3D. It's cleaner and more robust to
distinguish 2D and 3D objects using different types.

The second issue is this: in what situations do operations on 3D objects
produce degenerate results which are then treated as valid input to other
operations?

Suppose you do this:
  intersection() {
      cube([10,10,10]);
      translate([10,10,10]) cube([10,10,10]);
   }
Mathematically, these two cubes intersect at exactly one geometric point,
[10,10,10]. Should the intersection operation produce a degenerate 3D
object, which can be used as valid input to minkowski() and other
operators? Currently, the CSG operations discard these kinds of degenerate
results (eg, intersecting at a point, line or plane). Do we really want to
change this behaviour?

If we really wanted to support degenerate objects (eg, because they allow
minkowski() to work in an intuitively correct way in Parkinbot's example),
then I think that degenerate objects would need to have a distinct type,
and objects of this type should only be generated under well defined
circumstances. For example, we could define cube(0), sphere(0) and scale(0)
X to return geometric point objects, and we could explicitly define what
happens when geometric points are passed as arguments to various geometric
operations. For sure, CGAL won't tolerate degenerate input, so we need to
do something different than just feed degenerate input to CGAL like we do
now.

I'm not sure it's worthwhile to formalize geometric points like this. I
think that a higher priority is to make OpenSCAD stop crashing when
degenerate objects are constructed. The simplest fix might be to
discard degenerate objects, or map them onto void whenever they are
constructed. This would break certain uses of minkowski(), but would also
make OpenSCAD have more predictable and robust behaviour. The question then
becomes, how important are these minkowski edge cases?



On 16 June 2016 at 21:33, Lucas Vinicius Hartmann <lucas.hartmann at gmail.com>
wrote:

> Interesting concept that of degenerate solids, very interesting
> implications:
>
> Say goobye to differentiating 2D from 3D shapes. All objects could be
> represented as a set of vertices, and faces. An object with:
> - No vertexes is a void().
> - One vertex, no faces is a point().
> - Two vertexes in a face is a line().
> - Several coplanar vertexes and faces is a single 2d face().
> - Several watertight faces is a solid().
>
> Best of all is that this would allow us to mix them up in any
> configuration.
>
> - scale([0,0,0]) degenerates any non-void thing to a point at (0,0,0).
> Void stays void.
> - scale([1,1,0]) would do pretty much the same as project(), by killing
> off the Z coordinate, but could be used to project to ZX and ZY planes too.
> - scale([0,0,1]) could be used to get a line along the Z axis exactly the
> same height as out solids.
> - minkowski() { point(); thing(); } would act exactly as translate thing.
> - minkowski() { line(); face(); } would act like linear_extrude, except
> the line could be any angle. If the line is coplanar to the original face,
> then the result ends up being another face().
> - minkowski() { line(); solid(); } would extrude a solid! Pretty much like
> a hull(), but would work for concave shapes too.
> - minkowski() { face1(); face2(); } might end up building a larger face(),
> or a solid if faces are not coplanar.
> - hull() would work on non-coplanar faces() and result in a solid().
>
> However, I assume this would be a massive amount of work, and should not
> be expected anytime soon...
>
> --
> Lucas Vinicius Hartmann
>
> Dizem que se voc? rodar o CD do Windows ao contr?rio ele mostra uma
> mensagem demon?aca... Mas isso nem ? o pior, se voc? rodar ele normal ele
> instala o Windows!
>
> 2016-06-16 13:16 GMT-03:00 Ronaldo <rcmpersiano at gmail.com>:
>
>> Rudolf,
>>
>> You raised good points but I will keep mine about Minkowski. The example
>> you
>> have shown of a vanishing cube is idiosyncratic but for other reasons. I
>> would expect that
>>
>>            scale(0) sphere;
>>
>> to be a point, the origin, and not a void set.
>>
>> In Mathematics, you have a non-void set by doing a Minkowski sum of a
>> point
>> and a non-void set. I thought we have no way in OpenSCAD to do a Minkowski
>> sum of a set with only a point or a line segment or a 2D shape due to the
>> simple fact that we can't express such sets or mix 2D shapes with 3D
>> shapes
>> in OpenSCAD operations. However, we can at least in Minkowski operations.
>>
>> > minkowski() {
>> >      cube(1);
>> >      intersection() {
>> >         cube(1);
>> >         translate([$t-1,$t-1,$t-1]) cube(1);
>> >      }
>> > }
>>
>> And that is not idiosyncratic. It does exactly what I would expect. The
>> intersection is not void, it is a square that shrinks to the origin when
>> $t=0. The scaled sphere should do the same.
>>
>> BTW, the above "technique" may be very usefull for rounding only some
>> edges
>> of a solid.
>>
>> There is much more complexities behind the scene... :)
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17717.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160617/871191ef/attachment.html>

From rudolf at parkinbot.com  Fri Jun 17 19:34:59 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 17 Jun 2016 16:34:59 -0700 (MST)
Subject: [OpenSCAD] Unusual hull() and minkowski modelling
In-Reply-To: <1466183921438-17747.post@n5.nabble.com>
References: <1466135696411-17730.post@n5.nabble.com>
	<1466175728725-17745.post@n5.nabble.com>
	<1466183921438-17747.post@n5.nabble.com>
Message-ID: <1466206499713-17752.post@n5.nabble.com>

It's also allowed to code the drop without the typo! Sorry, about that. 

> hull() { sphere(5); cylinder(12, 5, 0); } 

I agree, that it would be nice to have a mixed 0D, 1D, 2D, 3D world instead
of only 2D and 3D - which already comes along with a lot of crudities. But
this needs a well thought out approach and would be a step of very high
impact, also with respect to backward compatibility and general language
design. It needs all constructors, all operators, actually the whole
language revised. Possible, but who will work it out, who will implement it.
Maybe there are reasons, why it wasn't been done. One of it definitely might
have been simplicty.

But I perfectly well understand your point. No doubt, it has charming side:

You feed a hull with a couple of points, lines, 2D shapes and get a convex
3D shape hulling all of them. 
You feed a minkowski with two polygons - a nonclosed one and closed one - or
a polygon and a 2D shape and get a sweep. 
You feed an intersection with a 2D shape living in 3D and get a projection 
and so on. 

This might gain something, especially the sweep, but I doubt, we will ever
see it this way. Personally I would be happy with much less (get hands on
the f***g points and faces of an OpenSCAD shape, be it only 2D, or minimum
of imported STL and DXF), because I doubt, Minkowski will ever be fast
enough for somebody, who knows what he is doing. 





--
View this message in context: http://forum.openscad.org/Unusual-hull-and-minkowski-modelling-tp17730p17752.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Fri Jun 17 19:53:47 2016
From: doug at moens.org (doug moen)
Date: Fri, 17 Jun 2016 19:53:47 -0400
Subject: [OpenSCAD] Unusual hull() and minkowski modelling
In-Reply-To: <1466135696411-17730.post@n5.nabble.com>
References: <1466135696411-17730.post@n5.nabble.com>
Message-ID: <CAGV6i+PKdN=N6T_2ZdF7bMc5LKuEB=Lu13Vb9UqmiV+ZC_gENg@mail.gmail.com>

This stuff is really cool, Ronaldo.

I was familiar with the morph() operation from other CSG systems, but I
just assumed it was impossible in OpenSCAD. So I'm impressed. I notice it
only works correctly if scale(0) returns a 0D point (as opposed to
returning nothing).

On 16 June 2016 at 23:54, Ronaldo <rcmpersiano at gmail.com> wrote:

> I have found from a discussion in another thread a whole new set of
> possibilities of modelling with hull() and minkowski(). I will present here
> some of them.
>
> To start consider the following module definitions:
>
> > module square3(a,b) scale([a,b,0]) cube(1,center=true);
> > module circle3(r=1) scale([1,1,0]) cylinder(r=r);
> > module point3(p)    translate(p)   scale(0) cube();
>
> Essentially, the first and second are a cube and a cylinder smashed onto
> the
> xy plane, and the third a  cube shrinked to the origin. They don't have
> volume and the last one does not have even an area. They are 2D and 0D
> "shapes" but they are 3D objects in some sense (the reason I added a 3 in
> their names).
>
> If you try to preview any of them you will see nothing. But they are not
> empty sets. For instance, you can hull() the point3() with a sphere and get
> a drop like model:
>
> > hull() { sphere(5); point3([0,0,12]); }
>
> or start the model of a T-joint:
>
> > hull() { translate([0,-10,0]) rotate([90,0,0]) circle3(5,10);
> > cylinder(r=5,h=20,center=true); }
>
> It is possible to do intersections of those shapes with real 3D forms
> before
> the hull:
>
> > hull() {
> >     intersection(){ cube(20); circle3(7); }
> >     translate([0,0,20]) sphere(10);}
>
> Or even make the hull() of just those strange forms to make a cone:
>
> > translate([0,-20,0]) hull() { circle3(5); point3([0,0,10]); }
>
> Let us add one 1D object to the arsenal:
>
> > module segment3(p,p0=[0,0,0]) {
> >     q = p-p0;
> >     l = norm(q);
> >     b = acos(q[2]/l);
> >     c = atan2(q[1],q[0]);
> >     translate(p0)
> >         rotate([0, b, c])
> >             scale([0,0,l])
> >                 cube(1);
> > }
>
> Now the cube is smashed to an edge then rotate and scaled in such a way to
> bring the edge (a line segment) to lay between the points p and p0. Again
> you can't see any preview of segment3(). But it appears when you do the
> hull
> of a set of them:
>
> > module tetrahedron(h){
> >     hull() {
> >         segment3([0,0,h]); // a segment from [0,0,h] to [0,0,0]
> >         segment3([h,0,0]);
> >         segment3([0,h,0]);
> >     }
> > }
>
> Now minkowski. This operator is more restricted. To do a minkowski you need
> at least one real 3D object. So when I tried change the hull() in the
> tetrahedron() to a minkowski I got a system crash. In other trials, I got
> one CGAL error message or nothing at all.
>
> But there is a lot of interesting thing to do with the operator. For
> instance, a solid linear extrusion:
>
> > module solid_linear_extrude(h=1){
> >     minkowski(){
> >         children();
> >         segment3([0,0,h]);
> >     }
> > }
> > solid_linear_extrude(20) difference(){ sphere(10); cylinder(r=5,
> > h=30,center=true); }
>
> This code took a longer time to preview but it worked. It is easy and
> faster
> do it with hull().
>
> But hull() does not solve the sweep operation. Minkowski does with the
> module:
>
> > module sweep_solid(line) {
> >     for(i=[0:len(line)-2])
> >         minkowski(){
> >             children();
> >             segment3(line[i],line[i+1]);
> >         }
> > }
>
> We cannot sweep a 2D shape with sweep_solid() but it is possible to sweep a
> sphere(), a cube or, if you have plenty of time, any 3D model. Note that
> this is a translational sweep.
>
> Finally, an interesting approach to morphing using minkowski:
>
> > module morphing(t) {
> >     minkowski() {
> >         scale((1-t)) children(0);
> >         scale(t) children(1);
> >     }
> > }
>
> that is applied here to a sphere and a cylinder in an animation:
>
> > morphing(1/2-cos(360*$t)/2) { A(); B(); }
> > module A() rotate([90,0,0]) cylinder(r=3,h=15,center=true);
> > module B() translate([20,0,0]) sphere(5);
>
> For any given 0<t<1,  morphing(t) is a blend of the two children.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Unusual-hull-and-minkowski-modelling-tp17730.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160617/a171c153/attachment.html>

From doug at moens.org  Fri Jun 17 23:24:16 2016
From: doug at moens.org (doug moen)
Date: Fri, 17 Jun 2016 23:24:16 -0400
Subject: [OpenSCAD] Unusual hull() and minkowski modelling
In-Reply-To: <1466135696411-17730.post@n5.nabble.com>
References: <1466135696411-17730.post@n5.nabble.com>
Message-ID: <CAGV6i+OAiPLW7ZCGnHJsHiaKnhw-ikUFBBq9pAuWqDuzDtUGYw@mail.gmail.com>

There are some open issues requesting point, line segment and path objects
in the 2D plane, for the purpose of DXF export for laser cutting. Eg,
https://github.com/openscad/openscad/issues/508

I don't consider laser cutting a good enough reason by itself to add these
features. However, if these features are important for supporting solid
sweep, morph, and other modelling operations, then it looks more
worthwhile, and laser cutter support is just an added bonus.

Proper support for these kinds of objects would obviously include being
able to see them in preview, and having well defined semantics when used
with all geometric operations (eg, CGAL doesn't crash).

In the 2D subsystem, a reasonable set of degenerate shape constructors
might be
* point([x,y])
* path([[x1,y1], [x2,y2], ...], open=true)
* boundary() 2dShape

A path is a connected series of line segments. An open path has a start and
end point, while a closed path is a loop where the start and end are
connected. So, you can sweep along a path. The boundary() operation
converts a proper 2D shape into the closed path representing its perimeter.

In 3D, we'd have the same primitives, plus a mesh primitive for
constructing a surface, with the same arguments as polyhedron, but the mesh
wouldn't have to be manifold. The boundary() operation on a 3D object would
also return a surface.

Plus, of course, we add some special rules, eg so that scale(0) shape
returns a point.


On 16 June 2016 at 23:54, Ronaldo <rcmpersiano at gmail.com> wrote:

> I have found from a discussion in another thread a whole new set of
> possibilities of modelling with hull() and minkowski(). I will present here
> some of them.
>
> To start consider the following module definitions:
>
> > module square3(a,b) scale([a,b,0]) cube(1,center=true);
> > module circle3(r=1) scale([1,1,0]) cylinder(r=r);
> > module point3(p)    translate(p)   scale(0) cube();
>
> Essentially, the first and second are a cube and a cylinder smashed onto
> the
> xy plane, and the third a  cube shrinked to the origin. They don't have
> volume and the last one does not have even an area. They are 2D and 0D
> "shapes" but they are 3D objects in some sense (the reason I added a 3 in
> their names).
>
> If you try to preview any of them you will see nothing. But they are not
> empty sets. For instance, you can hull() the point3() with a sphere and get
> a drop like model:
>
> > hull() { sphere(5); point3([0,0,12]); }
>
> or start the model of a T-joint:
>
> > hull() { translate([0,-10,0]) rotate([90,0,0]) circle3(5,10);
> > cylinder(r=5,h=20,center=true); }
>
> It is possible to do intersections of those shapes with real 3D forms
> before
> the hull:
>
> > hull() {
> >     intersection(){ cube(20); circle3(7); }
> >     translate([0,0,20]) sphere(10);}
>
> Or even make the hull() of just those strange forms to make a cone:
>
> > translate([0,-20,0]) hull() { circle3(5); point3([0,0,10]); }
>
> Let us add one 1D object to the arsenal:
>
> > module segment3(p,p0=[0,0,0]) {
> >     q = p-p0;
> >     l = norm(q);
> >     b = acos(q[2]/l);
> >     c = atan2(q[1],q[0]);
> >     translate(p0)
> >         rotate([0, b, c])
> >             scale([0,0,l])
> >                 cube(1);
> > }
>
> Now the cube is smashed to an edge then rotate and scaled in such a way to
> bring the edge (a line segment) to lay between the points p and p0. Again
> you can't see any preview of segment3(). But it appears when you do the
> hull
> of a set of them:
>
> > module tetrahedron(h){
> >     hull() {
> >         segment3([0,0,h]); // a segment from [0,0,h] to [0,0,0]
> >         segment3([h,0,0]);
> >         segment3([0,h,0]);
> >     }
> > }
>
> Now minkowski. This operator is more restricted. To do a minkowski you need
> at least one real 3D object. So when I tried change the hull() in the
> tetrahedron() to a minkowski I got a system crash. In other trials, I got
> one CGAL error message or nothing at all.
>
> But there is a lot of interesting thing to do with the operator. For
> instance, a solid linear extrusion:
>
> > module solid_linear_extrude(h=1){
> >     minkowski(){
> >         children();
> >         segment3([0,0,h]);
> >     }
> > }
> > solid_linear_extrude(20) difference(){ sphere(10); cylinder(r=5,
> > h=30,center=true); }
>
> This code took a longer time to preview but it worked. It is easy and
> faster
> do it with hull().
>
> But hull() does not solve the sweep operation. Minkowski does with the
> module:
>
> > module sweep_solid(line) {
> >     for(i=[0:len(line)-2])
> >         minkowski(){
> >             children();
> >             segment3(line[i],line[i+1]);
> >         }
> > }
>
> We cannot sweep a 2D shape with sweep_solid() but it is possible to sweep a
> sphere(), a cube or, if you have plenty of time, any 3D model. Note that
> this is a translational sweep.
>
> Finally, an interesting approach to morphing using minkowski:
>
> > module morphing(t) {
> >     minkowski() {
> >         scale((1-t)) children(0);
> >         scale(t) children(1);
> >     }
> > }
>
> that is applied here to a sphere and a cylinder in an animation:
>
> > morphing(1/2-cos(360*$t)/2) { A(); B(); }
> > module A() rotate([90,0,0]) cylinder(r=3,h=15,center=true);
> > module B() translate([20,0,0]) sphere(5);
>
> For any given 0<t<1,  morphing(t) is a blend of the two children.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Unusual-hull-and-minkowski-modelling-tp17730.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160617/c2aaecaa/attachment.html>

From nop.head at gmail.com  Sat Jun 18 07:11:36 2016
From: nop.head at gmail.com (nop head)
Date: Sat, 18 Jun 2016 12:11:36 +0100
Subject: [OpenSCAD] Evaluating imported STL's
In-Reply-To: <CAGV6i+PKYp6CtM078=s2GqycxDdSPVQLG5=wb06PYWGvmHn04w@mail.gmail.com>
References: <1465970841871-17682.post@n5.nabble.com>
	<CAMbFyDRbPpWn_Ohii+d7etOYqMHjHZpy-kgXTRV0jkKoRyxrqA@mail.gmail.com>
	<ef87ef1263f47f90061484af76e52ea5@arnholm.org>
	<CAMbFyDTAwvyDEbRBm2aWa1QZP6ZOc2FsWwviyDXwrMT4MOuuig@mail.gmail.com>
	<1466020922191-17697.post@n5.nabble.com>
	<CA+i9EaCm04rc4eXRsUWM3TvzAJa_uXrmVdsx-+EU9FDBU9qYZQ@mail.gmail.com>
	<CAMbFyDTif=ODef8qrH8cM330cv_Twp56XooJy3qQb6RyqibVTQ@mail.gmail.com>
	<1466034351484-17702.post@n5.nabble.com>
	<1466040983375-17706.post@n5.nabble.com>
	<1466086778550-17714.post@n5.nabble.com>
	<1466093799095-17717.post@n5.nabble.com>
	<CAMbFyDRfad3oSgiOawVt6hAnE0mj1TQSOerkpST-q=+FS=TUuw@mail.gmail.com>
	<CAGV6i+PKYp6CtM078=s2GqycxDdSPVQLG5=wb06PYWGvmHn04w@mail.gmail.com>
Message-ID: <CAEEmnrP20=AXsViBXq=FAAwFeSYJBojoG1Htcm9PcbOEOJ+z9w@mail.gmail.com>

I think hull() and minkowski() (which can be made using hull) are special
cases because they only need to consider the vertices, not edges or faces.
That is why they will accept degenerate shapes and make valid 3D shapes
from them. Perhaps that could be a documented feature of openscad without
having to re-write it.

On 17 June 2016 at 23:43, doug moen <doug at moens.org> wrote:

> Lucas said:
> Interesting concept that of degenerate solids, very interesting
> implications:
> Say goodbye to differentiating 2D from 3D shapes. All objects could be
> represented as a set of vertices, and faces. An object with:
> - No vertexes is a void().
> - One vertex, no faces is a point().
> - Two vertexes in a face is a line().
> - Several coplanar vertexes and faces is a single 2d face().
> - Several watertight faces is a solid().
> Best of all is that this would allow us to mix them up in any
> configuration.
>
> "However, I assume this would be a massive amount of work..."
>
> I'm not sure this would make practical sense, even if you are implementing
> a new geometry engine from scratch. Although this idea would work in the
> realm of pure mathematics, I don't think it would survive contact with
> floating point numbers and STL files. In addition, it might create a lot of
> unexpected behaviour.
>
> Our current geometry system considers 2D objects and 3D objects to be
> different types, and I think that is necessary for practical reasons. One
> issue is that we use different libraries for 2D and 3D objects: CGAL for 3D
> CSG operations, Clipper for 2D. Another issue is that this plan implies
> that a 2D object could be created as the output of an operation on 3D
> objects, and then operations with 2D arguments like rotate_extrude would be
> expected to recognize these objects as 2D and accept them as legal input.
> In that case, floating point imprecision could be the deciding factor in
> whether an object is considered 2D or 3D. It's cleaner and more robust to
> distinguish 2D and 3D objects using different types.
>
> The second issue is this: in what situations do operations on 3D objects
> produce degenerate results which are then treated as valid input to other
> operations?
>
> Suppose you do this:
>   intersection() {
>       cube([10,10,10]);
>       translate([10,10,10]) cube([10,10,10]);
>    }
> Mathematically, these two cubes intersect at exactly one geometric point,
> [10,10,10]. Should the intersection operation produce a degenerate 3D
> object, which can be used as valid input to minkowski() and other
> operators? Currently, the CSG operations discard these kinds of degenerate
> results (eg, intersecting at a point, line or plane). Do we really want to
> change this behaviour?
>
> If we really wanted to support degenerate objects (eg, because they allow
> minkowski() to work in an intuitively correct way in Parkinbot's example),
> then I think that degenerate objects would need to have a distinct type,
> and objects of this type should only be generated under well defined
> circumstances. For example, we could define cube(0), sphere(0) and scale(0)
> X to return geometric point objects, and we could explicitly define what
> happens when geometric points are passed as arguments to various geometric
> operations. For sure, CGAL won't tolerate degenerate input, so we need to
> do something different than just feed degenerate input to CGAL like we do
> now.
>
> I'm not sure it's worthwhile to formalize geometric points like this. I
> think that a higher priority is to make OpenSCAD stop crashing when
> degenerate objects are constructed. The simplest fix might be to
> discard degenerate objects, or map them onto void whenever they are
> constructed. This would break certain uses of minkowski(), but would also
> make OpenSCAD have more predictable and robust behaviour. The question then
> becomes, how important are these minkowski edge cases?
>
>
>
> On 16 June 2016 at 21:33, Lucas Vinicius Hartmann <
> lucas.hartmann at gmail.com> wrote:
>
>> Interesting concept that of degenerate solids, very interesting
>> implications:
>>
>> Say goobye to differentiating 2D from 3D shapes. All objects could be
>> represented as a set of vertices, and faces. An object with:
>> - No vertexes is a void().
>> - One vertex, no faces is a point().
>> - Two vertexes in a face is a line().
>> - Several coplanar vertexes and faces is a single 2d face().
>> - Several watertight faces is a solid().
>>
>> Best of all is that this would allow us to mix them up in any
>> configuration.
>>
>> - scale([0,0,0]) degenerates any non-void thing to a point at (0,0,0).
>> Void stays void.
>> - scale([1,1,0]) would do pretty much the same as project(), by killing
>> off the Z coordinate, but could be used to project to ZX and ZY planes too.
>> - scale([0,0,1]) could be used to get a line along the Z axis exactly the
>> same height as out solids.
>> - minkowski() { point(); thing(); } would act exactly as translate thing.
>> - minkowski() { line(); face(); } would act like linear_extrude, except
>> the line could be any angle. If the line is coplanar to the original face,
>> then the result ends up being another face().
>> - minkowski() { line(); solid(); } would extrude a solid! Pretty much
>> like a hull(), but would work for concave shapes too.
>> - minkowski() { face1(); face2(); } might end up building a larger
>> face(), or a solid if faces are not coplanar.
>> - hull() would work on non-coplanar faces() and result in a solid().
>>
>> However, I assume this would be a massive amount of work, and should not
>> be expected anytime soon...
>>
>> --
>> Lucas Vinicius Hartmann
>>
>> Dizem que se voc? rodar o CD do Windows ao contr?rio ele mostra uma
>> mensagem demon?aca... Mas isso nem ? o pior, se voc? rodar ele normal ele
>> instala o Windows!
>>
>> 2016-06-16 13:16 GMT-03:00 Ronaldo <rcmpersiano at gmail.com>:
>>
>>> Rudolf,
>>>
>>> You raised good points but I will keep mine about Minkowski. The example
>>> you
>>> have shown of a vanishing cube is idiosyncratic but for other reasons. I
>>> would expect that
>>>
>>>            scale(0) sphere;
>>>
>>> to be a point, the origin, and not a void set.
>>>
>>> In Mathematics, you have a non-void set by doing a Minkowski sum of a
>>> point
>>> and a non-void set. I thought we have no way in OpenSCAD to do a
>>> Minkowski
>>> sum of a set with only a point or a line segment or a 2D shape due to the
>>> simple fact that we can't express such sets or mix 2D shapes with 3D
>>> shapes
>>> in OpenSCAD operations. However, we can at least in Minkowski operations.
>>>
>>> > minkowski() {
>>> >      cube(1);
>>> >      intersection() {
>>> >         cube(1);
>>> >         translate([$t-1,$t-1,$t-1]) cube(1);
>>> >      }
>>> > }
>>>
>>> And that is not idiosyncratic. It does exactly what I would expect. The
>>> intersection is not void, it is a square that shrinks to the origin when
>>> $t=0. The scaled sphere should do the same.
>>>
>>> BTW, the above "technique" may be very usefull for rounding only some
>>> edges
>>> of a solid.
>>>
>>> There is much more complexities behind the scene... :)
>>>
>>>
>>>
>>> --
>>> View this message in context:
>>> http://forum.openscad.org/Evaluating-imported-STL-s-tp17682p17717.html
>>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160618/f03ba4d1/attachment.html>

From rudolf at parkinbot.com  Sat Jun 18 10:23:02 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Sat, 18 Jun 2016 07:23:02 -0700 (MST)
Subject: [OpenSCAD] Unusual hull() and minkowski modelling
In-Reply-To: <1466206499713-17752.post@n5.nabble.com>
References: <1466135696411-17730.post@n5.nabble.com>
	<1466175728725-17745.post@n5.nabble.com>
	<1466183921438-17747.post@n5.nabble.com>
	<1466206499713-17752.post@n5.nabble.com>
Message-ID: <1466259782402-17756.post@n5.nabble.com>

Ronaldo, 


Parkinbot wrote
> You feed a minkowski with two polygons - a nonclosed one and closed one -
> or a polygon and a 2D shape and get a sweep. 
> ...
> because I doubt, Minkowski will ever be fast enough for somebody, who
> knows what he is doing.

here is your Minkowski-tweaked sweep() using a path and a 3D shape, which I
called extrude() - also allowing for self-intersection. It is a 'weak'
peek&poke solution, because hull() insists on some 'flesh' in the Z
direction (crashes OpenSCAD otherwise). Also not all Z-trajectories seem to
be 'allowed'. 

<http://forum.openscad.org/file/n17756/sweep.png> 


> p =   [for (x=[0:10:360]) 30*[cos(x), sin(2*x), x/100]]; 
> p1 =   [for (x=[0:4:360]) 30*[cos(x), sin(4*x), -cos(x)]]; 
> 
> extrude(p) cylinder(3);
> extrude(p1) sphere(3);
> 
> module extrude(p)  minkowski() {polygon2path(p); children();}
> 
> module polygon2path(p) for(i=[0:len(p)-2]) line(p[i], p[i+1]);
> module line(a, b) hull(){ point(a); point(b);}  
> module point(t) translate(t) scale([0, 0, 0.0001]) cube([]);

Of course, either polygon2path() could get a built-in operator (avoiding
hull()), or minkowski() could be overloaded to directly accept and process a
vec3D set. 

BTW, this is an old solution of mine, the only difference, I used
non-degenerate 'sufficiently small' shapes to hull the path into a solid
then.

Anyway you put it, degenrate or not, I don't see much progress because the
approach is expectedly very slow. Therefore I'd always opt for a dedicated
extrude() operator that could internally use minkowski PLUS some shortcuts
if boundingbox checks allow for them, to speed up things dramatically. 

Concerning runtime, don't try the following one. Looks harmless, but I guess
it takes hours to process, due to its convexity. 


> extrude(p) {sphere(3);translate([2,0,0]) sphere(3);}

I also guess a render() will speed it up a bit to several minutes, but to
get the 'hires' shot (step=2) I preferred to use a convex decomposition,
which tweaked it down to a minute.  

>   extrude(p) sphere(3);
>   translate([2,0,0]) 
>   extrude(p) sphere(3);
> 
>    Top level object is a 3D object:
>    Simple:        yes
>    Vertices:     3027
>    Halfedges:   14294
>    Edges:        7147
>    Halffacets:   8244
>    Facets:       4122
>    Volumes:         2

Therefore, I really don't see much chance for the minkowski approach when
implementing extrude().

@Marius 
aren't you always looking for some compact crasher code? I never encountered
a higher crash rate before writing this post ;-) 

<http://forum.openscad.org/file/n17756/sweep2.png> 






--
View this message in context: http://forum.openscad.org/Unusual-hull-and-minkowski-modelling-tp17730p17756.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Sat Jun 18 17:15:22 2016
From: doug at moens.org (doug moen)
Date: Sat, 18 Jun 2016 17:15:22 -0400
Subject: [OpenSCAD] Chromebook 13 (Acer) to run OpenSCAD?
In-Reply-To: <1465925357747-17676.post@n5.nabble.com>
References: <1465925357747-17676.post@n5.nabble.com>
Message-ID: <CAGV6i+OpTUY57smV0BdV9gYq4sRM-yhh9PiDYQA2XBPUs16Riw@mail.gmail.com>

I suggest BlocksCAD, since it should run in a browser on a ChromeBook with
no difficulty, and presents an OpenSCAD like programming model with a more
kid friendly interface.

https://blockscad.einsteinsworkshop.com/

On 14 June 2016 at 13:29, william <whareg12 at yahoo.com> wrote:

> I know it may not be appropriate to ask this question here.  I am
> supporting
> a charity organisation which will run a summer camp for the underprivileged
> free of charge.  I intend to bring a few printers into the camp and one of
> the things I want to show them is OpenSCAD.  However, the organisation has
> quite a number of Acer Chromebook 13's (sponsorship or donation, I don't
> know) and I wonder how I can run OpenSCAD on them.
>
> I check that some of the chromebook models may be converted to Windows but
> it seems that this one is not listed.  Perhaps the article was written
> before this model was put on the market.
>
>
> https://www.reddit.com/r/chrultrabook/comments/3gtjfe/windows_10_fully_supported_on_acer_c720c720p/
> <
> https://www.reddit.com/r/chrultrabook/comments/3gtjfe/windows_10_fully_supported_on_acer_c720c720p/
> >
>
> Any suggestions?
> Thx.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Chromebook-13-Acer-to-run-OpenSCAD-tp17676.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160618/11171502/attachment.html>

From rcmpersiano at gmail.com  Sat Jun 18 17:27:24 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Sat, 18 Jun 2016 14:27:24 -0700 (MST)
Subject: [OpenSCAD] Unusual hull() and minkowski modelling
In-Reply-To: <1466259782402-17756.post@n5.nabble.com>
References: <1466135696411-17730.post@n5.nabble.com>
	<1466175728725-17745.post@n5.nabble.com>
	<1466183921438-17747.post@n5.nabble.com>
	<1466206499713-17752.post@n5.nabble.com>
	<1466259782402-17756.post@n5.nabble.com>
Message-ID: <1466285244834-17758.post@n5.nabble.com>

Rudolf,

We have two different tricks to do the same thing. In mine, I hack the
system to generate a path that is not provided by the language. In yours, a
very thin polyhedron takes the place of my hack. I agree that my hack has a
short live and your trick should be valid in the future, but that is the
only advantage of it.

I have compared the running time of my sweep with yours. The preview of your
paths with my sweep took less than a second and the render spent 4min. I
gave up to preview that paths with your sweep in my old machine so I
shortened the paths. With a 16 segment path, the preview of your sweep took
more than 6min. On the other hand, the double sphere sweep with my hack took
13min to preview. I didn't try render any of them.

So, your robust trick is a lot slower than doing the right thing: minkowski
the solid with a real line. The reasons are clear to me. The path simulated
by thin polyhedron is a non-convex polyhedron with a lot of vertices. Even
if you do a convex decomposition of the solid to be swept, the path remains
non convex and it will require a lot of effort to be decomposed and
processed. If you have a real polyline, its convex decomposition is trivial.
So, the main effort will be the convex decomposition of the solid and the
union of the extrusions.

I insist that the main point is not the particular hack I devised but the
simplicity and efficiency of mixing 3D objects with lower dimension ones in
some cases. I see no additional complexity in mixing different dimensions in
OpenSCAD. It is enough not to send lower dimension shapes to CGAL and ignore
them in STL generation. The lower dimension objects would be used only for
display purposes and as input of some operations. Observe that the object
circle3() I defined above is able to be boolean operated with real 3D
solids. They seems to be witchcraft but they are real!

I miss lower dimension primitives like segment() in OpenSCAD from my first
experience with the system. So I created my own library to draw them in a
similar way you did. I use them a lot to display lines and facets during
model building debugging. But I cannot render them because the time CGAL
requires to union them is 
unaffordable.



--
View this message in context: http://forum.openscad.org/Unusual-hull-and-minkowski-modelling-tp17730p17758.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sat Jun 18 17:28:53 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sat, 18 Jun 2016 23:28:53 +0200
Subject: [OpenSCAD] Chromebook 13 (Acer) to run OpenSCAD?
In-Reply-To: <CAGV6i+OpTUY57smV0BdV9gYq4sRM-yhh9PiDYQA2XBPUs16Riw@mail.gmail.com>
References: <1465925357747-17676.post@n5.nabble.com>
	<CAGV6i+OpTUY57smV0BdV9gYq4sRM-yhh9PiDYQA2XBPUs16Riw@mail.gmail.com>
Message-ID: <acfe8e3a-2d2c-0316-6ea6-0a9b47e9cba9@gmx.de>

For just showing how OpenSCAD works, the RollApp version might
be an option too:

https://www.rollapp.com/launch/openscad

ciao,
  Torsten.


From rudolf at parkinbot.com  Sat Jun 18 21:49:08 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Sat, 18 Jun 2016 18:49:08 -0700 (MST)
Subject: [OpenSCAD] Unusual hull() and minkowski modelling
In-Reply-To: <1466285244834-17758.post@n5.nabble.com>
References: <1466135696411-17730.post@n5.nabble.com>
	<1466175728725-17745.post@n5.nabble.com>
	<1466183921438-17747.post@n5.nabble.com>
	<1466206499713-17752.post@n5.nabble.com>
	<1466259782402-17756.post@n5.nabble.com>
	<1466285244834-17758.post@n5.nabble.com>
Message-ID: <1466300948430-17760.post@n5.nabble.com>

Ronaldo 

As a programmer, I wouldn't call all that a 'trick'. It's a full-grown
backdoor, and in its implication it is quite similar to the C-style loop,
which unwillingly imports imperative style programming into OpenSCAD. The
only difference: Those defective objects currently tend to destabilize the
system. See it as a bug or a feature, there has to be found a solution, how
to treat that door. One can close it with just a bunch of extra checks. Or
one can open it, and will change the language - to the positive I admit -
but at what price, and of what gain. It will be a lot, a lot, of work, to
implement that seamlessly. Will people start printing dots and lines then?
Or write their own slicers or even draw cartoons?

Let me remind you that this would mean for instance to release 2D shapes
into 3D, which I proposed some time ago in another thread. I remember the
restrained reaction. 
The interface between 2D and 3D for now is linear_extrude(),
rotate_extrude(), and projection(). Did I forget something? Polygon and
Polyhedron are constructors interfacing between vectors of points and
solids. A polygon is always closed into 2D. A polyhedron may be ... anything
(see below).  That's it. 
Boolean operations as well as hull and minkowski() are defined for both
worlds, but currently not meant to process a mixture of both types of
operands.

Others will know better than me, how the extra dimensions will/can fit into
OpenSCAD2. 

We are talking about backdoors. There seems a much more stable, built-in
constructor for all this things - which obviously refuses to work with
minkowski, but hull() seems to be its friend. 

@Marius: While this crashes OpenSCAD 

> minkowski(){  cube();   polyhedron([[0, 0, 12]], [[0]]);   cube(); }

hull() does all you want. Here is your drop:

> hull(){  polyhedron(points = [[0, 0, 12]], faces = [[0]]);   sphere(5); }

here a double drop

> hull(){  polyhedron(points = [[0, 0, 12], [0, 0, -12]], faces = [[0, 1]]);  
> sphere(5); }

and here is your world: 

> hull(){  polygon3D(10*[[0, 0, 1], [1, 0, 0], [0, 1, 0], [0, 0, 0]]); }
> 
> module point(p) polyhedron(points = [p], faces = [[0]]);   
> module line(p1, p2) polyhedron(points = [p1, p2], faces = [[0], [1]]);   
> module face(p1, p2, p3) polyhedron(points = [p1, p2, p3], faces = [[0],
> [1], [2]]);   
> module polygon3D(P) polyhedron(points = P, faces = [for(i=[0:len(P)-1])
> [i]]);   

can also do it with points,

> hull() {   point([0, 0, 10]);   point([10, 0, 0]);   point([0, 10, 0]);  
> point([0, 0, 0]); }

or with lines

> hull() {  line([0, 0, 10], [10, 0, 0]);   line([0, 10, 0], [0, 0, 0]);  }

and this is your triple drop, e.g. by use of face()

> hull() {  face([0, 0, 10], [10, 0, 0], [0, 10, 0]);   sphere(4, $fn=100);
> }

<http://forum.openscad.org/file/n17760/tirple.png> 

To sum it up: To be able to hull a couple of points into a (convex) solid,
is very charming, and extremly useful for design. 

Rudolf




--
View this message in context: http://forum.openscad.org/Unusual-hull-and-minkowski-modelling-tp17730p17760.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Sun Jun 19 08:34:04 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Sun, 19 Jun 2016 05:34:04 -0700 (MST)
Subject: [OpenSCAD] Unusual hull() and minkowski modelling
In-Reply-To: <CAGV6i+PKdN=N6T_2ZdF7bMc5LKuEB=Lu13Vb9UqmiV+ZC_gENg@mail.gmail.com>
References: <1466135696411-17730.post@n5.nabble.com>
	<CAGV6i+PKdN=N6T_2ZdF7bMc5LKuEB=Lu13Vb9UqmiV+ZC_gENg@mail.gmail.com>
Message-ID: <1466339644736-17761.post@n5.nabble.com>

doug.moen wrote
> This stuff is really cool, Ronaldo.
> 
> I was familiar with the morph() operation from other CSG systems, but I
> just assumed it was impossible in OpenSCAD. So I'm impressed. I notice it
> only works correctly if scale(0) returns a 0D point (as opposed to
> returning nothing).

Although mophing operator is appealing, singularities may be raised by it
independent on how it is defined. Imagine what happens when morphing a solid
with disjoint parts with another one with just one part. Or morphing a torus
and a sphere. For some value of t, the morphing will be a non-manifold. 



--
View this message in context: http://forum.openscad.org/Unusual-hull-and-minkowski-modelling-tp17730p17761.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From whareg12 at yahoo.com  Sun Jun 19 10:45:36 2016
From: whareg12 at yahoo.com (william)
Date: Sun, 19 Jun 2016 07:45:36 -0700 (MST)
Subject: [OpenSCAD] Chromebook 13 (Acer) to run OpenSCAD?
In-Reply-To: <acfe8e3a-2d2c-0316-6ea6-0a9b47e9cba9@gmx.de>
References: <1465925357747-17676.post@n5.nabble.com>
	<CAGV6i+OpTUY57smV0BdV9gYq4sRM-yhh9PiDYQA2XBPUs16Riw@mail.gmail.com>
	<acfe8e3a-2d2c-0316-6ea6-0a9b47e9cba9@gmx.de>
Message-ID: <1466347536384-17762.post@n5.nabble.com>

Thanks all for the suggestions.  They are all good.  I never know there are
such options.

However, I need to run a proprietary software for the printers as well (it's
Robox).  I will try out the Linux option as the printer software can run on
it.

Thanks once again.

William



--
View this message in context: http://forum.openscad.org/Chromebook-13-Acer-to-run-OpenSCAD-tp17676p17762.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From whareg12 at yahoo.com  Sun Jun 19 11:14:24 2016
From: whareg12 at yahoo.com (william)
Date: Sun, 19 Jun 2016 08:14:24 -0700 (MST)
Subject: [OpenSCAD] Chromebook 13 (Acer) to run OpenSCAD?
In-Reply-To: <1466347536384-17762.post@n5.nabble.com>
References: <1465925357747-17676.post@n5.nabble.com>
	<CAGV6i+OpTUY57smV0BdV9gYq4sRM-yhh9PiDYQA2XBPUs16Riw@mail.gmail.com>
	<acfe8e3a-2d2c-0316-6ea6-0a9b47e9cba9@gmx.de>
	<1466347536384-17762.post@n5.nabble.com>
Message-ID: <1466349264186-17763.post@n5.nabble.com>

I just found out that the RollApps may implement custom applications.  I am
asking to see if they can shelf the printer software in their cloud.  If
they can do it (with a charge), it will solve all the problems!!

Great suggestions guys!!

William



--
View this message in context: http://forum.openscad.org/Chromebook-13-Acer-to-run-OpenSCAD-tp17676p17763.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Sun Jun 19 11:41:08 2016
From: marius at kintel.net (Marius Kintel)
Date: Sun, 19 Jun 2016 11:41:08 -0400
Subject: [OpenSCAD] Unusual hull() and minkowski modelling
In-Reply-To: <1466259782402-17756.post@n5.nabble.com>
References: <1466135696411-17730.post@n5.nabble.com>
	<1466175728725-17745.post@n5.nabble.com>
	<1466183921438-17747.post@n5.nabble.com>
	<1466206499713-17752.post@n5.nabble.com>
	<1466259782402-17756.post@n5.nabble.com>
Message-ID: <9FDF8E37-B7BC-414F-89C4-C75CED9CB422@kintel.net>

On Jun 18, 2016, at 10:23 AM, Parkinbot <rudolf at parkinbot.com> wrote:
> 
> @Marius 
> aren't you always looking for some compact crasher code? I never encountered
> a higher crash rate before writing this post ;-) 
> 
Thx - I?ve created an issue: https://github.com/openscad/openscad/issues/1671

FYI: The problem is that we perform minkowski calculations as pairwise hulls, and CGAL?s hull algorithm doesn?t allow for results without a volume.
CGAL?s built-in minkowski algorithm has a similar problem and won?t create the resulting object, but it?s unknown why. If someone wants to dig, it might make sense to submit an issue on the latter to CGAL.

 -Marius



From doug at moens.org  Sun Jun 19 20:50:23 2016
From: doug at moens.org (doug moen)
Date: Sun, 19 Jun 2016 20:50:23 -0400
Subject: [OpenSCAD] Unusual hull() and minkowski modelling
In-Reply-To: <1466339644736-17761.post@n5.nabble.com>
References: <1466135696411-17730.post@n5.nabble.com>
	<CAGV6i+PKdN=N6T_2ZdF7bMc5LKuEB=Lu13Vb9UqmiV+ZC_gENg@mail.gmail.com>
	<1466339644736-17761.post@n5.nabble.com>
Message-ID: <CAGV6i+OAb2R5-W-oZhV-5i_VYbYyMoJN5ABSoLNwRjeanB2m4Q@mail.gmail.com>

Ronaldo wrote: "Although mophing operator is appealing, singularities may
be raised by it
independent on how it is defined. Imagine what happens when morphing a solid
with disjoint parts with another one with just one part. Or morphing a torus
and a sphere. For some value of t, the morphing will be a non-manifold."

Sure morphing will produce singularities, but so will minkowski(),
difference() and union(). So morphing is nothing special.

A basic challenge with implementing CSG using a mesh representation is that
CSG operations are not closed over 2-manifold meshes. Even if the inputs
are 2-manifold, the outputs might not be, because singularities can be
introduced. The best way to handle with this is to make all of the CSG
operations tolerant of singularities. Our current implementation is
tolerant of singularities in a lot of common cases, and this has improved
over time.

On 19 June 2016 at 08:34, Ronaldo <rcmpersiano at gmail.com> wrote:

> doug.moen wrote
> > This stuff is really cool, Ronaldo.
> >
> > I was familiar with the morph() operation from other CSG systems, but I
> > just assumed it was impossible in OpenSCAD. So I'm impressed. I notice it
> > only works correctly if scale(0) returns a 0D point (as opposed to
> > returning nothing).
>
> Although mophing operator is appealing, singularities may be raised by it
> independent on how it is defined. Imagine what happens when morphing a
> solid
> with disjoint parts with another one with just one part. Or morphing a
> torus
> and a sphere. For some value of t, the morphing will be a non-manifold.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Unusual-hull-and-minkowski-modelling-tp17730p17761.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160619/5031ece8/attachment.html>

From vector76 at gmail.com  Mon Jun 20 01:03:13 2016
From: vector76 at gmail.com (Jamie_K)
Date: Sun, 19 Jun 2016 22:03:13 -0700 (MST)
Subject: [OpenSCAD] Compiling for Windows
Message-ID: <1466398993554-17766.post@n5.nabble.com>

Hey all, I've tried following the instructions here:

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Cross-compiling_for_Windows_on_Linux_or_Mac_OS_X

And I've been having a hell of a time.

1. Installed fresh Fedora 23 (64-bit) on a VM
2. Installed mxe dependencies 
dnf install \
    autoconf automake bash bison bzip2 flex gcc-c++ \
    gdk-pixbuf2-devel gettext git gperf intltool make \
    sed libffi-devel libtool openssl-devel p7zip patch \
    perl pkgconfig python ruby scons unzip wget xz
3. Downloaded and built mxe
git clone git://github.com/mxe/mxe.git
cd mxe
make mpfr eigen opencsg cgal qt
export PATH=/home/jamie/usr/bin:$PATH
since this make command succeeds without errors, I believe it worked.
4. Download and prepare to build OpenSCAD
cd
git clone git://github.com/openscad/openscad.git
cd openscad
git submodule init
git submodule update
ln -s /home/jamie/mxe/usr/i686-w64-mingw32.static/ mingw-cross-env

At this point nothing I try seems to work.
This works but I'm unsure if it populates the correct values:
source ./scripts/setenv-mingw-xbuild.sh 64

Trying this script gives me an error about missing cmake:
./scripts/mingw-x-build-dependencies.sh
But I have cmake (or the nearest thing) at 
/home/jamie/mxe/usr/bin/i686-w64-mingw32.static-cmake
but plain 'cmake' is nowhere in the path according to 'which cmake'

I also tried what look like explicit instructions for building, adapting the
qmake command line from near the bottom of the wiki page to the nearest
qmake in my path:
i686-w64-mingw32.static-qmake-qt4 CONFIG+=mingw-cross-env openscad.pro

And it complains about eigen3 (and harfbuzz and freetype2) not being found
in pkg-config search path.

I have also tried the commands from the README.md file, with similar
results.

Is there a complete set of instructions somewhere?  Or is there a specific
set of component versions that is known to work?  

-Jamie




--
View this message in context: http://forum.openscad.org/Compiling-for-Windows-tp17766.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From maurizio.butti at gmail.com  Mon Jun 20 06:13:54 2016
From: maurizio.butti at gmail.com (buttim)
Date: Mon, 20 Jun 2016 03:13:54 -0700 (MST)
Subject: [OpenSCAD] Compiling for Windows
In-Reply-To: <1466398993554-17766.post@n5.nabble.com>
References: <1466398993554-17766.post@n5.nabble.com>
Message-ID: <1466417634113-17767.post@n5.nabble.com>

Which version of cmake have you installed? I seem to remember I had the same
problem and solved it downgrading cmake to version 2.8.4



--
View this message in context: http://forum.openscad.org/Compiling-for-Windows-tp17766p17767.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Mon Jun 20 09:22:40 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Mon, 20 Jun 2016 06:22:40 -0700 (MST)
Subject: [OpenSCAD] Unusual hull() and minkowski modelling
In-Reply-To: <CAGV6i+OAb2R5-W-oZhV-5i_VYbYyMoJN5ABSoLNwRjeanB2m4Q@mail.gmail.com>
References: <1466135696411-17730.post@n5.nabble.com>
	<CAGV6i+PKdN=N6T_2ZdF7bMc5LKuEB=Lu13Vb9UqmiV+ZC_gENg@mail.gmail.com>
	<1466339644736-17761.post@n5.nabble.com>
	<CAGV6i+OAb2R5-W-oZhV-5i_VYbYyMoJN5ABSoLNwRjeanB2m4Q@mail.gmail.com>
Message-ID: <1466428960350-17768.post@n5.nabble.com>

doug.moen wrote
> Sure morphing will produce singularities, but so will minkowski(),
> difference() and union(). So morphing is nothing special.
> 
> A basic challenge with implementing CSG using a mesh representation is
> that
> CSG operations are not closed over 2-manifold meshes. Even if the inputs
> are 2-manifold, the outputs might not be, because singularities can be
> introduced. 

Correctly implemented minkowski should not have any problem with it as it is
the most general operation to all of this. But being the most general
operation it is a much too large piece of artillery to tackle this task. To
do things like that, there are several by far more efficient approaches
(e.g. mesh mapping), addressing vertex reduction, topological aspects, and
singularities more explictly. 





--
View this message in context: http://forum.openscad.org/Unusual-hull-and-minkowski-modelling-tp17730p17768.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Mon Jun 20 10:36:57 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Mon, 20 Jun 2016 07:36:57 -0700 (MST)
Subject: [OpenSCAD] Unusual hull() and minkowski modelling
In-Reply-To: <1466428960350-17768.post@n5.nabble.com>
References: <1466135696411-17730.post@n5.nabble.com>
	<CAGV6i+PKdN=N6T_2ZdF7bMc5LKuEB=Lu13Vb9UqmiV+ZC_gENg@mail.gmail.com>
	<1466339644736-17761.post@n5.nabble.com>
	<CAGV6i+OAb2R5-W-oZhV-5i_VYbYyMoJN5ABSoLNwRjeanB2m4Q@mail.gmail.com>
	<1466428960350-17768.post@n5.nabble.com>
Message-ID: <1466433417306-17769.post@n5.nabble.com>

Parkinbot wrote
> To do things like that, there are several by far more efficient approaches
> (e.g. mesh mapping), addressing vertex reduction, topological aspects, and
> singularities more explictly.

Would you mind to deepen this?



--
View this message in context: http://forum.openscad.org/Unusual-hull-and-minkowski-modelling-tp17730p17769.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Mon Jun 20 11:05:57 2016
From: marius at kintel.net (Marius Kintel)
Date: Mon, 20 Jun 2016 11:05:57 -0400
Subject: [OpenSCAD] Compiling for Windows
In-Reply-To: <1466398993554-17766.post@n5.nabble.com>
References: <1466398993554-17766.post@n5.nabble.com>
Message-ID: <1FF85DE7-BF5E-460F-A156-6E3D8BEA9B00@kintel.net>

Hard to say without attempting to reproduce, but some ideas:

o Could this be a 32-bit/64-bit mixup? The scripts you?re using take an argument specifying which Windows architecture to build for. That could explain path issues.
o It?s also possible to build natively under Windows (experimental), see https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Building_on_Microsoft_Windows

If you?re a skilled Windows user it might be better to start off with the second option.
(but I also say that because we?d love some help on improving support for Windows as we don?t have any Windows devs on the team right now :))

Cheers,

 -Marius



From whareg12 at yahoo.com  Mon Jun 20 11:52:17 2016
From: whareg12 at yahoo.com (william)
Date: Mon, 20 Jun 2016 08:52:17 -0700 (MST)
Subject: [OpenSCAD] Chromebook 13 (Acer) to run OpenSCAD?
In-Reply-To: <1466349264186-17763.post@n5.nabble.com>
References: <1465925357747-17676.post@n5.nabble.com>
	<CAGV6i+OpTUY57smV0BdV9gYq4sRM-yhh9PiDYQA2XBPUs16Riw@mail.gmail.com>
	<acfe8e3a-2d2c-0316-6ea6-0a9b47e9cba9@gmx.de>
	<1466347536384-17762.post@n5.nabble.com>
	<1466349264186-17763.post@n5.nabble.com>
Message-ID: <1466437937550-17771.post@n5.nabble.com>

My friend did a little research for me.  Seems that while it is possible to
install Linux on the Acer Chromebook 13
(https://www.reddit.com/r/chrubuntu/comments/2hhb31/), the openscad build
for this ARM/Linux may have problems and can be quite buggy
(https://github.com/dnschneid/crouton/issues/2401).

And rollApp just told me the following:

 it would not be possible to provide low-level access to a USB device
connected to a Chromebook for application running in the cloud on rollApp.
Applications running in the browser are very limited in the ways they can
interface with the devices and our platform does not support general purpose
USB virtualization yet.

But they said we might still port this up on rollApp and used by
participants to create/prepare the models on Chromebooks and then send /
transfer them to computers physically attached to 3D printers.

(Any chrome app functions like remote desktop / VNC?  I wonder.)

Just to provide some information on the above leads.  Please feel free to 
comment further or suggest other ideas.

Rgds William



--
View this message in context: http://forum.openscad.org/Chromebook-13-Acer-to-run-OpenSCAD-tp17676p17771.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Mon Jun 20 12:54:40 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Mon, 20 Jun 2016 09:54:40 -0700 (MST)
Subject: [OpenSCAD] Black dumped images
In-Reply-To: <1466113576397-17724.post@n5.nabble.com>
References: <1466096079009-17718.post@n5.nabble.com>
	<F64343B0-C751-464E-8DD0-0C0FCB01CE6D@kintel.net>
	<1466113576397-17724.post@n5.nabble.com>
Message-ID: <1466441680655-17772.post@n5.nabble.com>

I still can't get dump images. Any suggestion?



--
View this message in context: http://forum.openscad.org/Black-dumped-images-tp17718p17772.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Mon Jun 20 12:59:47 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Mon, 20 Jun 2016 09:59:47 -0700 (MST)
Subject: [OpenSCAD] Unusual hull() and minkowski modelling
In-Reply-To: <1466433417306-17769.post@n5.nabble.com>
References: <1466135696411-17730.post@n5.nabble.com>
	<CAGV6i+PKdN=N6T_2ZdF7bMc5LKuEB=Lu13Vb9UqmiV+ZC_gENg@mail.gmail.com>
	<1466339644736-17761.post@n5.nabble.com>
	<CAGV6i+OAb2R5-W-oZhV-5i_VYbYyMoJN5ABSoLNwRjeanB2m4Q@mail.gmail.com>
	<1466428960350-17768.post@n5.nabble.com>
	<1466433417306-17769.post@n5.nabble.com>
Message-ID: <1466441987333-17773.post@n5.nabble.com>

As some entry point to the state of the art in this discipline have a look
here: https://graphics.tudelft.nl/Publications-new/2016/BVH16/BVH16.pdf


Ronaldo wrote
> Would you mind to deepen this?





--
View this message in context: http://forum.openscad.org/Unusual-hull-and-minkowski-modelling-tp17730p17773.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Mon Jun 20 13:39:43 2016
From: marius at kintel.net (Marius Kintel)
Date: Mon, 20 Jun 2016 13:39:43 -0400
Subject: [OpenSCAD] Black dumped images
In-Reply-To: <1466441680655-17772.post@n5.nabble.com>
References: <1466096079009-17718.post@n5.nabble.com>
	<F64343B0-C751-464E-8DD0-0C0FCB01CE6D@kintel.net>
	<1466113576397-17724.post@n5.nabble.com>
	<1466441680655-17772.post@n5.nabble.com>
Message-ID: <A7ED5DA9-7DC4-4217-BFFB-B39F4943BBE9@kintel.net>


> On Jun 20, 2016, at 12:54 PM, Ronaldo <rcmpersiano at gmail.com> wrote:
> 
> I still can't get dump images. Any suggestion?
> 
Your OpenGL driver (Intel HD 8.15.10.2104) is > 6 years old.
Intel has a long history of OpenGL drivers of dubious quality, but it has improved over the years.
Upgrading to the latest version would be a good start.

 -Marius



From rcmpersiano at gmail.com  Mon Jun 20 18:21:05 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Mon, 20 Jun 2016 19:21:05 -0300
Subject: [OpenSCAD] Black dumped images
In-Reply-To: <A7ED5DA9-7DC4-4217-BFFB-B39F4943BBE9@kintel.net>
References: <1466096079009-17718.post@n5.nabble.com>
	<F64343B0-C751-464E-8DD0-0C0FCB01CE6D@kintel.net>
	<1466113576397-17724.post@n5.nabble.com>
	<1466441680655-17772.post@n5.nabble.com>
	<A7ED5DA9-7DC4-4217-BFFB-B39F4943BBE9@kintel.net>
Message-ID: <CA+i9EaBGHbWZ1F2YFbOqHX3r3ds0YsBhOkLA6TRMxo7Vs-tb-A@mail.gmail.com>

Thank you, Kintel. I could not find any newer Intel graphics driver for my
very_old_i5-1st_generation notebook. I think it is time for an upgrade...

2016-06-20 14:39 GMT-03:00 Marius Kintel <marius at kintel.net>:

>
> > On Jun 20, 2016, at 12:54 PM, Ronaldo <rcmpersiano at gmail.com> wrote:
> >
> > I still can't get dump images. Any suggestion?
> >
> Your OpenGL driver (Intel HD 8.15.10.2104) is > 6 years old.
> Intel has a long history of OpenGL drivers of dubious quality, but it has
> improved over the years.
> Upgrading to the latest version would be a good start.
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160620/86952549/attachment.html>

From marius at kintel.net  Tue Jun 21 00:24:50 2016
From: marius at kintel.net (Marius Kintel)
Date: Tue, 21 Jun 2016 00:24:50 -0400
Subject: [OpenSCAD] Black dumped images
In-Reply-To: <CA+i9EaBGHbWZ1F2YFbOqHX3r3ds0YsBhOkLA6TRMxo7Vs-tb-A@mail.gmail.com>
References: <1466096079009-17718.post@n5.nabble.com>
	<F64343B0-C751-464E-8DD0-0C0FCB01CE6D@kintel.net>
	<1466113576397-17724.post@n5.nabble.com>
	<1466441680655-17772.post@n5.nabble.com>
	<A7ED5DA9-7DC4-4217-BFFB-B39F4943BBE9@kintel.net>
	<CA+i9EaBGHbWZ1F2YFbOqHX3r3ds0YsBhOkLA6TRMxo7Vs-tb-A@mail.gmail.com>
Message-ID: <95EBC95F-347B-492D-9BAE-4E00039399A0@kintel.net>

> On Jun 20, 2016, at 18:21 PM, Ronaldo Persiano <rcmpersiano at gmail.com> wrote:
> 
> Thank you, Kintel. I could not find any newer Intel graphics driver for my very_old_i5-1st_generation notebook. I think it is time for an upgrade? 
> 
Sometimes, laptop vendors stop providing packaged updates, and you?d have to go directly to Intel, and figure out how to get the drivers installed from there. This is far away from my area of expertise though : /

 -Marius



From dj at deadhat.com  Tue Jun 21 01:26:35 2016
From: dj at deadhat.com (David Johnston)
Date: Mon, 20 Jun 2016 22:26:35 -0700
Subject: [OpenSCAD] Black dumped images
In-Reply-To: <95EBC95F-347B-492D-9BAE-4E00039399A0@kintel.net>
References: <1466096079009-17718.post@n5.nabble.com>
	<F64343B0-C751-464E-8DD0-0C0FCB01CE6D@kintel.net>
	<1466113576397-17724.post@n5.nabble.com>
	<1466441680655-17772.post@n5.nabble.com>
	<A7ED5DA9-7DC4-4217-BFFB-B39F4943BBE9@kintel.net>
	<CA+i9EaBGHbWZ1F2YFbOqHX3r3ds0YsBhOkLA6TRMxo7Vs-tb-A@mail.gmail.com>
	<95EBC95F-347B-492D-9BAE-4E00039399A0@kintel.net>
Message-ID: <c3b17d18-5f6a-de27-4403-6cd177ceb01c@deadhat.com>

Have you tried here? 
http://www.intel.com/content/www/us/en/support/detect.html?iid=dc_iduu



On 6/20/16 9:24 PM, Marius Kintel wrote:
>> On Jun 20, 2016, at 18:21 PM, Ronaldo Persiano <rcmpersiano at gmail.com> wrote:
>>
>> Thank you, Kintel. I could not find any newer Intel graphics driver for my very_old_i5-1st_generation notebook. I think it is time for an upgrade?
>>
> Sometimes, laptop vendors stop providing packaged updates, and you?d have to go directly to Intel, and figure out how to get the drivers installed from there. This is far away from my area of expertise though : /
>
>   -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From vector76 at gmail.com  Tue Jun 21 01:56:36 2016
From: vector76 at gmail.com (Jamie_K)
Date: Mon, 20 Jun 2016 22:56:36 -0700 (MST)
Subject: [OpenSCAD] Compiling for Windows
In-Reply-To: <1FF85DE7-BF5E-460F-A156-6E3D8BEA9B00@kintel.net>
References: <1466398993554-17766.post@n5.nabble.com>
	<1FF85DE7-BF5E-460F-A156-6E3D8BEA9B00@kintel.net>
Message-ID: <1466488596071-17778.post@n5.nabble.com>

Ok I feel silly.  I was missing cmake, just like the error message was
telling me.  I had a cross-environment cmake binary but I was missing the
/native/ cmake, so it was sufficient to install it:

dnf install cmake

I'm still building openscad_deps now, and it is progressing well enough, I
think it might work this time.

Once all is done, I think I might report back on what went well and what
tripped me up.

-Jamie



--
View this message in context: http://forum.openscad.org/Compiling-for-Windows-tp17766p17778.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From wv99999 at gmail.com  Tue Jun 21 05:44:05 2016
From: wv99999 at gmail.com (wolf)
Date: Tue, 21 Jun 2016 02:44:05 -0700 (MST)
Subject: [OpenSCAD] Unusual hull() and minkowski modelling
In-Reply-To: <1466441987333-17773.post@n5.nabble.com>
References: <1466135696411-17730.post@n5.nabble.com>
	<CAGV6i+PKdN=N6T_2ZdF7bMc5LKuEB=Lu13Vb9UqmiV+ZC_gENg@mail.gmail.com>
	<1466339644736-17761.post@n5.nabble.com>
	<CAGV6i+OAb2R5-W-oZhV-5i_VYbYyMoJN5ABSoLNwRjeanB2m4Q@mail.gmail.com>
	<1466428960350-17768.post@n5.nabble.com>
	<1466433417306-17769.post@n5.nabble.com>
	<1466441987333-17773.post@n5.nabble.com>
Message-ID: <1466502245621-17780.post@n5.nabble.com>

Just before anyone gets too excited about zero-thickness shapes:
if you preview the truncated pyramid

$fn=4;
scale([1,1,0])  cylinder(r1=10, r2=3);

with both Thrown Together and Show Axes activated, you'll see that the
pyramid still has all its 8 corners, 12 edges and 12 triagonal faces. And if
you built its STL, you'll see that its thickness is very small, but not
zero.
On the positive side, when the trick is used to render Parkinbot's Helicoil,
rendering time is only 40% of what it is without the trick.

wolf



--
View this message in context: http://forum.openscad.org/Unusual-hull-and-minkowski-modelling-tp17730p17780.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Tue Jun 21 11:43:45 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Tue, 21 Jun 2016 12:43:45 -0300
Subject: [OpenSCAD] Black dumped images
In-Reply-To: <c3b17d18-5f6a-de27-4403-6cd177ceb01c@deadhat.com>
References: <1466096079009-17718.post@n5.nabble.com>
	<F64343B0-C751-464E-8DD0-0C0FCB01CE6D@kintel.net>
	<1466113576397-17724.post@n5.nabble.com>
	<1466441680655-17772.post@n5.nabble.com>
	<A7ED5DA9-7DC4-4217-BFFB-B39F4943BBE9@kintel.net>
	<CA+i9EaBGHbWZ1F2YFbOqHX3r3ds0YsBhOkLA6TRMxo7Vs-tb-A@mail.gmail.com>
	<95EBC95F-347B-492D-9BAE-4E00039399A0@kintel.net>
	<c3b17d18-5f6a-de27-4403-6cd177ceb01c@deadhat.com>
Message-ID: <CA+i9EaBYGRMMVasCFZOHa8s8V9B=OjTtRMht7Kf9+AR3zJScaA@mail.gmail.com>

Well, I tried the Lenovo driver update software: it reported that my
notebook is updated. Then, I tried the Intel Driver Update Utility and that
reported there is no drivers for my hardware. The last graphic driver found
in Lenovo site for my notebook was released in 2012! A dead road. :(

<https://www.avast.com/sig-email?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail>
Livre
de v?rus. www.avast.com
<https://www.avast.com/sig-email?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail>.
<#DDB4FAA8-2DD7-40BB-A1B8-4E2AA1F9FDF2>

2016-06-21 2:26 GMT-03:00 David Johnston <dj at deadhat.com>:

> Have you tried here?
> http://www.intel.com/content/www/us/en/support/detect.html?iid=dc_iduu
>
>
>
>
> On 6/20/16 9:24 PM, Marius Kintel wrote:
>
>> On Jun 20, 2016, at 18:21 PM, Ronaldo Persiano <rcmpersiano at gmail.com>
>>> wrote:
>>>
>>> Thank you, Kintel. I could not find any newer Intel graphics driver for
>>> my very_old_i5-1st_generation notebook. I think it is time for an upgrade?
>>>
>>> Sometimes, laptop vendors stop providing packaged updates, and you?d
>> have to go directly to Intel, and figure out how to get the drivers
>> installed from there. This is far away from my area of expertise though : /
>>
>>   -Marius
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160621/335a0f27/attachment.html>

From rcmpersiano at gmail.com  Tue Jun 21 12:55:13 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Tue, 21 Jun 2016 13:55:13 -0300
Subject: [OpenSCAD] Black dumped images
In-Reply-To: <CA+i9EaBYGRMMVasCFZOHa8s8V9B=OjTtRMht7Kf9+AR3zJScaA@mail.gmail.com>
References: <1466096079009-17718.post@n5.nabble.com>
	<F64343B0-C751-464E-8DD0-0C0FCB01CE6D@kintel.net>
	<1466113576397-17724.post@n5.nabble.com>
	<1466441680655-17772.post@n5.nabble.com>
	<A7ED5DA9-7DC4-4217-BFFB-B39F4943BBE9@kintel.net>
	<CA+i9EaBGHbWZ1F2YFbOqHX3r3ds0YsBhOkLA6TRMxo7Vs-tb-A@mail.gmail.com>
	<95EBC95F-347B-492D-9BAE-4E00039399A0@kintel.net>
	<c3b17d18-5f6a-de27-4403-6cd177ceb01c@deadhat.com>
	<CA+i9EaBYGRMMVasCFZOHa8s8V9B=OjTtRMht7Kf9+AR3zJScaA@mail.gmail.com>
Message-ID: <CA+i9EaBxwXwzKHVCxTEc6nJzn-q8Dn2G3ddj1NSxpuDm8WFhHA@mail.gmail.com>

BTW, I got the animation dumped in an i3 2nd. generation desktop I use as
HTPC. It worked nice. Thank you to all.

2016-06-21 12:43 GMT-03:00 Ronaldo Persiano <rcmpersiano at gmail.com>:

> Well, I tried the Lenovo driver update software: it reported that my
> notebook is updated. Then, I tried the Intel Driver Update Utility and that
> reported there is no drivers for my hardware. The last graphic driver found
> in Lenovo site for my notebook was released in 2012! A dead road. :(
>
>
> <https://www.avast.com/sig-email?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail> Livre
> de v?rus. www.avast.com
> <https://www.avast.com/sig-email?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail>.
> <#m_3759077572595867392_DDB4FAA8-2DD7-40BB-A1B8-4E2AA1F9FDF2>
>
> 2016-06-21 2:26 GMT-03:00 David Johnston <dj at deadhat.com>:
>
>> Have you tried here?
>> http://www.intel.com/content/www/us/en/support/detect.html?iid=dc_iduu
>>
>>
>>
>>
>> On 6/20/16 9:24 PM, Marius Kintel wrote:
>>
>>> On Jun 20, 2016, at 18:21 PM, Ronaldo Persiano <rcmpersiano at gmail.com>
>>>> wrote:
>>>>
>>>> Thank you, Kintel. I could not find any newer Intel graphics driver for
>>>> my very_old_i5-1st_generation notebook. I think it is time for an upgrade?
>>>>
>>>> Sometimes, laptop vendors stop providing packaged updates, and you?d
>>> have to go directly to Intel, and figure out how to get the drivers
>>> installed from there. This is far away from my area of expertise though : /
>>>
>>>   -Marius
>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160621/053edd19/attachment.html>

From rudolf at parkinbot.com  Tue Jun 21 13:02:51 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Tue, 21 Jun 2016 10:02:51 -0700 (MST)
Subject: [OpenSCAD] Black dumped images
In-Reply-To: <CA+i9EaBGHbWZ1F2YFbOqHX3r3ds0YsBhOkLA6TRMxo7Vs-tb-A@mail.gmail.com>
References: <1466096079009-17718.post@n5.nabble.com>
	<F64343B0-C751-464E-8DD0-0C0FCB01CE6D@kintel.net>
	<1466113576397-17724.post@n5.nabble.com>
	<1466441680655-17772.post@n5.nabble.com>
	<A7ED5DA9-7DC4-4217-BFFB-B39F4943BBE9@kintel.net>
	<CA+i9EaBGHbWZ1F2YFbOqHX3r3ds0YsBhOkLA6TRMxo7Vs-tb-A@mail.gmail.com>
Message-ID: <1466528571630-17783.post@n5.nabble.com>

You could try to use a tool that allows for automatizing screenshots of
OpenGL content. 



--
View this message in context: http://forum.openscad.org/Black-dumped-images-tp17718p17783.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Tue Jun 21 13:15:40 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Tue, 21 Jun 2016 19:15:40 +0200
Subject: [OpenSCAD] Black dumped images
In-Reply-To: <1466528571630-17783.post@n5.nabble.com>
References: <1466096079009-17718.post@n5.nabble.com>
	<F64343B0-C751-464E-8DD0-0C0FCB01CE6D@kintel.net>
	<1466113576397-17724.post@n5.nabble.com>
	<1466441680655-17772.post@n5.nabble.com>
	<A7ED5DA9-7DC4-4217-BFFB-B39F4943BBE9@kintel.net>
	<CA+i9EaBGHbWZ1F2YFbOqHX3r3ds0YsBhOkLA6TRMxo7Vs-tb-A@mail.gmail.com>
	<1466528571630-17783.post@n5.nabble.com>
Message-ID: <f9e91667-5086-3889-d7d0-38f9a3c6394f@gmx.de>

Another option could be to see how it works with the Mesa software OpenGL
renderer. OpenSCAD does not use much of the GPU hardware features anyway,
so it might be still usable.

It should be possible to find precompiled versions of the Mesa OpenGL.dll
which should work by just dropping it into the folder where OpenSCAD
is installed (It's possible to swap the system dll too, but of cause that
could impact other programs).

ciao,
  Torsten.


From rcmpersiano at gmail.com  Tue Jun 21 15:49:10 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Tue, 21 Jun 2016 16:49:10 -0300
Subject: [OpenSCAD] Black dumped images
In-Reply-To: <f9e91667-5086-3889-d7d0-38f9a3c6394f@gmx.de>
References: <1466096079009-17718.post@n5.nabble.com>
	<F64343B0-C751-464E-8DD0-0C0FCB01CE6D@kintel.net>
	<1466113576397-17724.post@n5.nabble.com>
	<1466441680655-17772.post@n5.nabble.com>
	<A7ED5DA9-7DC4-4217-BFFB-B39F4943BBE9@kintel.net>
	<CA+i9EaBGHbWZ1F2YFbOqHX3r3ds0YsBhOkLA6TRMxo7Vs-tb-A@mail.gmail.com>
	<1466528571630-17783.post@n5.nabble.com>
	<f9e91667-5086-3889-d7d0-38f9a3c6394f@gmx.de>
Message-ID: <CA+i9EaAgCaAOS_mA8kKH3=GDjn02tz=BaK1k9bEzGvKYQrQBKA@mail.gmail.com>

There is no precompiled version of mesa.dll in the Mesa3D site. I found
many sites with mesa.dll to be downloaded. But it seems that some of those
files are malware.

Any pointer to a tool that allows for automatizing screenshots of
OpenGL content will be welcome.

2016-06-21 14:15 GMT-03:00 Torsten Paul <Torsten.Paul at gmx.de>:

> Another option could be to see how it works with the Mesa software OpenGL
> renderer. OpenSCAD does not use much of the GPU hardware features anyway,
> so it might be still usable.
>
> It should be possible to find precompiled versions of the Mesa OpenGL.dll
> which should work by just dropping it into the folder where OpenSCAD
> is installed (It's possible to swap the system dll too, but of cause that
> could impact other programs).
>
> ciao,
>   Torsten.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160621/0e112ce2/attachment.html>

From Torsten.Paul at gmx.de  Tue Jun 21 15:57:12 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Tue, 21 Jun 2016 21:57:12 +0200
Subject: [OpenSCAD] Black dumped images
In-Reply-To: <CA+i9EaAgCaAOS_mA8kKH3=GDjn02tz=BaK1k9bEzGvKYQrQBKA@mail.gmail.com>
References: <1466096079009-17718.post@n5.nabble.com>
	<F64343B0-C751-464E-8DD0-0C0FCB01CE6D@kintel.net>
	<1466113576397-17724.post@n5.nabble.com>
	<1466441680655-17772.post@n5.nabble.com>
	<A7ED5DA9-7DC4-4217-BFFB-B39F4943BBE9@kintel.net>
	<CA+i9EaBGHbWZ1F2YFbOqHX3r3ds0YsBhOkLA6TRMxo7Vs-tb-A@mail.gmail.com>
	<1466528571630-17783.post@n5.nabble.com>
	<f9e91667-5086-3889-d7d0-38f9a3c6394f@gmx.de>
	<CA+i9EaAgCaAOS_mA8kKH3=GDjn02tz=BaK1k9bEzGvKYQrQBKA@mail.gmail.com>
Message-ID: <8023e9a8-355e-ebca-785d-acd5522b2370@gmx.de>

On 06/21/2016 09:49 PM, Ronaldo Persiano wrote:
> There is no precompiled version of mesa.dll in the Mesa3D site. I
> found many sites with mesa.dll to be downloaded. But it seems that
> some of those files are malware.
> 
I've used the MSYS2 packages before as mentioned in the manual
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Building_on_Microsoft_Windows#OpenGL_.28Optional.29

(Packages are on SF: https://sourceforge.net/projects/msys2/)

It's probably possible to extract the driver without full MSYS2
installation...

ciao,
  Torsten.





From rcmpersiano at gmail.com  Tue Jun 21 16:02:14 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Tue, 21 Jun 2016 13:02:14 -0700 (MST)
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <1465616084602-17644.post@n5.nabble.com>
References: <1465464592495-17613.post@n5.nabble.com>
	<1465473712712-17615.post@n5.nabble.com>
	<1465486855136-17619.post@n5.nabble.com>
	<1465500646897-17625.post@n5.nabble.com>
	<1465528668597-17629.post@n5.nabble.com>
	<1465562593161-17631.post@n5.nabble.com>
	<1465577782277-17636.post@n5.nabble.com>
	<1465590785362-17640.post@n5.nabble.com>
	<1465607133980-17642.post@n5.nabble.com>
	<1465616084602-17644.post@n5.nabble.com>
Message-ID: <1466539334481-17787.post@n5.nabble.com>

Hi, Rudolf.

I have built a simple animation with the Schwarz surface generated by my
f-rep library. Here is the file:

Schwarz.mp4 <http://forum.openscad.org/file/n17787/Schwarz.mp4>  

I could not display the video with the online software but it can be
downloaded to be played offline. The animation loosely suggests that an
OpenSCAD model is made of the combination of small parts. 



--
View this message in context: http://forum.openscad.org/Improve-rendering-speed-tp17580p17787.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Tue Jun 21 17:31:12 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Tue, 21 Jun 2016 14:31:12 -0700 (MST)
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <1466539334481-17787.post@n5.nabble.com>
References: <1465473712712-17615.post@n5.nabble.com>
	<1465486855136-17619.post@n5.nabble.com>
	<1465500646897-17625.post@n5.nabble.com>
	<1465528668597-17629.post@n5.nabble.com>
	<1465562593161-17631.post@n5.nabble.com>
	<1465577782277-17636.post@n5.nabble.com>
	<1465590785362-17640.post@n5.nabble.com>
	<1465607133980-17642.post@n5.nabble.com>
	<1465616084602-17644.post@n5.nabble.com>
	<1466539334481-17787.post@n5.nabble.com>
Message-ID: <1466544672830-17788.post@n5.nabble.com>

Hi Ronaldo, 

sorry, I can't play the video. None of my players will accept it. To animate
OpenSCAD frames into an video MovieMaker is a good choice. 

BTW: this is one the YouTube films from the guy who coauthored the papier.
https://www.youtube.com/watch?v=WWLHPKsExaI 
You can find more films in his channel. 



--
View this message in context: http://forum.openscad.org/Improve-rendering-speed-tp17580p17788.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Tue Jun 21 18:34:46 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Tue, 21 Jun 2016 19:34:46 -0300
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <1466544672830-17788.post@n5.nabble.com>
References: <1465473712712-17615.post@n5.nabble.com>
	<1465486855136-17619.post@n5.nabble.com>
	<1465500646897-17625.post@n5.nabble.com>
	<1465528668597-17629.post@n5.nabble.com>
	<1465562593161-17631.post@n5.nabble.com>
	<1465577782277-17636.post@n5.nabble.com>
	<1465590785362-17640.post@n5.nabble.com>
	<1465607133980-17642.post@n5.nabble.com>
	<1465616084602-17644.post@n5.nabble.com>
	<1466539334481-17787.post@n5.nabble.com>
	<1466544672830-17788.post@n5.nabble.com>
Message-ID: <CA+i9EaCij-De=nP34T2K_=r5j3ACZ639Kz3EWux1k+j9xrHhXw@mail.gmail.com>

What a shame your players don't play it. I use VLC as media player and it
plays everything I throw to it.

The Youtube video is awesome! It is one more motivation to read the paper.
Thank you.

2016-06-21 18:31 GMT-03:00 Parkinbot <rudolf at parkinbot.com>:

> Hi Ronaldo,
>
> sorry, I can't play the video. None of my players will accept it. To
> animate
> OpenSCAD frames into an video MovieMaker is a good choice.
>
> BTW: this is one the YouTube films from the guy who coauthored the papier.
> https://www.youtube.com/watch?v=WWLHPKsExaI
> You can find more films in his channel.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Improve-rendering-speed-tp17580p17788.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160621/dffdbe0a/attachment.html>

From rudolf at parkinbot.com  Tue Jun 21 19:44:01 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Tue, 21 Jun 2016 16:44:01 -0700 (MST)
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <CA+i9EaCij-De=nP34T2K_=r5j3ACZ639Kz3EWux1k+j9xrHhXw@mail.gmail.com>
References: <1465500646897-17625.post@n5.nabble.com>
	<1465528668597-17629.post@n5.nabble.com>
	<1465562593161-17631.post@n5.nabble.com>
	<1465577782277-17636.post@n5.nabble.com>
	<1465590785362-17640.post@n5.nabble.com>
	<1465607133980-17642.post@n5.nabble.com>
	<1465616084602-17644.post@n5.nabble.com>
	<1466539334481-17787.post@n5.nabble.com>
	<1466544672830-17788.post@n5.nabble.com>
	<CA+i9EaCij-De=nP34T2K_=r5j3ACZ639Kz3EWux1k+j9xrHhXw@mail.gmail.com>
Message-ID: <1466552641167-17790.post@n5.nabble.com>

I had to update VLC (was still running 1.11) and now it plays the film. Nice.
Well done. Is it rendered with OpenSCAD?



--
View this message in context: http://forum.openscad.org/Improve-rendering-speed-tp17580p17790.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Tue Jun 21 20:14:43 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Tue, 21 Jun 2016 21:14:43 -0300
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <1466552641167-17790.post@n5.nabble.com>
References: <1465500646897-17625.post@n5.nabble.com>
	<1465528668597-17629.post@n5.nabble.com>
	<1465562593161-17631.post@n5.nabble.com>
	<1465577782277-17636.post@n5.nabble.com>
	<1465590785362-17640.post@n5.nabble.com>
	<1465607133980-17642.post@n5.nabble.com>
	<1465616084602-17644.post@n5.nabble.com>
	<1466539334481-17787.post@n5.nabble.com>
	<1466544672830-17788.post@n5.nabble.com>
	<CA+i9EaCij-De=nP34T2K_=r5j3ACZ639Kz3EWux1k+j9xrHhXw@mail.gmail.com>
	<1466552641167-17790.post@n5.nabble.com>
Message-ID: <CA+i9EaABXLjjy87MX0YU_M5MAv0m1WVVT9SN3ZxfEFM3kzaOhQ@mail.gmail.com>

Yes. I rendered the Schwarz surface with the f-rep system with 8 increasing
resolutions and saved their stls. For lower resolution, the rendered model
is disconnected in many parts. For intermediate resolution, the model is
rendered with some holes. In another OpenSCAD code, I load the stl files
and do the camera animation, fading in and fading out each stl model in
turn. The dumped images were sequenced with ffmpeg. I borrowed the fade
functions from D.Bramley's AnimationMotionLibrary for OpenSCAD.

2016-06-21 20:44 GMT-03:00 Parkinbot <rudolf at parkinbot.com>:

> I had to update VLC (was still running 1.11) and now it plays the film.
> Nice.
> Well done. Is it rendered with OpenSCAD?
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Improve-rendering-speed-tp17580p17790.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160621/ebe0befb/attachment.html>

From maurizio.butti at gmail.com  Wed Jun 22 04:44:04 2016
From: maurizio.butti at gmail.com (buttim)
Date: Wed, 22 Jun 2016 01:44:04 -0700 (MST)
Subject: [OpenSCAD] Compiling for Windows
In-Reply-To: <1466488596071-17778.post@n5.nabble.com>
References: <1466398993554-17766.post@n5.nabble.com>
	<1FF85DE7-BF5E-460F-A156-6E3D8BEA9B00@kintel.net>
	<1466488596071-17778.post@n5.nabble.com>
Message-ID: <1466585044433-17793.post@n5.nabble.com>

Your report will be greatly appreciated! I had some luck in the past trying
to rebuild under Windows but am not currently able to do it.



--
View this message in context: http://forum.openscad.org/Compiling-for-Windows-tp17766p17793.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Wed Jun 22 05:28:27 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Wed, 22 Jun 2016 11:28:27 +0200
Subject: [OpenSCAD] Compiling for Windows
In-Reply-To: <1466585044433-17793.post@n5.nabble.com>
References: <1466398993554-17766.post@n5.nabble.com>
	<1FF85DE7-BF5E-460F-A156-6E3D8BEA9B00@kintel.net>
	<1466488596071-17778.post@n5.nabble.com>,
	<1466585044433-17793.post@n5.nabble.com>
Message-ID: <trinity-6ccd87b0-dce4-4fb3-bad0-8bf03721bfda-1466587706948@3capp-gmx-bs45>

Von:?buttim <maurizio.butti at gmail.com>
> Your report will be greatly appreciated! I had some luck in the past trying
> to rebuild under Windows but am not currently able to do it.
>
That seems to be a different topic. What Jamie is doing is the same
way the official Windows binaries are built.
Those are created on a Linux system using the MXE build environment
(See http://mxe.cc/).

For "native" Windows compilation (meaning using Visual Studio and
friends) there is currently no known solution as we don't have
someone who works with that and could give a guideline.

What I tried successfully is building in the MSYS2 environment which
is basically a Unix environment layer on Windows. This is documented
in the manual:
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Building_on_Microsoft_Windows

This at least works with the QtCreator as IDE. I don't know if that
still works, but some people did use that procedure successfully in
the past.

ciao,
  Torsten.


From rudolf at parkinbot.com  Wed Jun 22 05:52:19 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Wed, 22 Jun 2016 02:52:19 -0700 (MST)
Subject: [OpenSCAD] Improve rendering speed
In-Reply-To: <CA+i9EaABXLjjy87MX0YU_M5MAv0m1WVVT9SN3ZxfEFM3kzaOhQ@mail.gmail.com>
References: <1465562593161-17631.post@n5.nabble.com>
	<1465577782277-17636.post@n5.nabble.com>
	<1465590785362-17640.post@n5.nabble.com>
	<1465607133980-17642.post@n5.nabble.com>
	<1465616084602-17644.post@n5.nabble.com>
	<1466539334481-17787.post@n5.nabble.com>
	<1466544672830-17788.post@n5.nabble.com>
	<CA+i9EaCij-De=nP34T2K_=r5j3ACZ639Kz3EWux1k+j9xrHhXw@mail.gmail.com>
	<1466552641167-17790.post@n5.nabble.com>
	<CA+i9EaABXLjjy87MX0YU_M5MAv0m1WVVT9SN3ZxfEFM3kzaOhQ@mail.gmail.com>
Message-ID: <1466589139912-17795.post@n5.nabble.com>

Ah I see. This is a lot of work (and too much time) when doing it with
OpenSCAD. I wouldn't do more than basic animated functional descriptions of
designs made for 3D-printing with OpenSCAD.

There is a lot specialized Software for this: 
https://www.youtube.com/watch?v=FIPu9_OGFgc
https://www.youtube.com/watch?v=Hw89cwVW_Lo
https://player.vimeo.com/video/80829002?title=0&byline=0&portrait=0&color=e84c3d

Your mp4 reports a framesize of 16x160. Maybe this is the problem, why most
players don't accept it. 



--
View this message in context: http://forum.openscad.org/Improve-rendering-speed-tp17580p17795.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From xelisus at yahoo.com  Wed Jun 22 06:58:42 2016
From: xelisus at yahoo.com (Radu T)
Date: Wed, 22 Jun 2016 13:58:42 +0300
Subject: [OpenSCAD] Build error
Message-ID: <576A6F62.5070108@yahoo.com>

Hi,
I followed the steps from wiki to build Openscad for an *Ubuntu 16.04LTS.*
After running the script ./scripts/*uni-build-dependencies.sh*,  I 
received the error: *symbol lookup error: 
/usr/lib/x86_64-linux-gnu/libhogweed.so.4: undefined symbol: 
__gmpn_cnd_add_n* during building of *CGAL 4.4* .

 From google I understand that is something related with gmp library. 
*uni-build-dependencies.sh* says that "gmp already installed" but 
*check-dependencies.sh* shows that gmp is not installed.

Please give me some hints .
Thank you,
Radu



From Torsten.Paul at gmx.de  Wed Jun 22 10:17:23 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Wed, 22 Jun 2016 16:17:23 +0200
Subject: [OpenSCAD] Build error
In-Reply-To: <576A6F62.5070108@yahoo.com>
References: <576A6F62.5070108@yahoo.com>
Message-ID: <trinity-d03a37cb-46a5-434c-923f-8c57fb51e3be-1466605043399@3capp-gmx-bs45>

There should be no need to manually build dependencies on
most current Linux distributions, including Ubuntu 16.04.
Installing development packages for all dependencies should
be sufficient.

However, we currently don't have the ressources to update
those scripts for all combinations and versions of distributions,
so the get-dependencies script may not catch all packages.
(e.g. see https://github.com/openscad/openscad/issues/1661)

ciao,
  Torsten.


From maurizio.butti at gmail.com  Wed Jun 22 10:47:59 2016
From: maurizio.butti at gmail.com (buttim)
Date: Wed, 22 Jun 2016 07:47:59 -0700 (MST)
Subject: [OpenSCAD] Compiling for Windows
In-Reply-To: <trinity-6ccd87b0-dce4-4fb3-bad0-8bf03721bfda-1466587706948@3capp-gmx-bs45>
References: <1466398993554-17766.post@n5.nabble.com>
	<1FF85DE7-BF5E-460F-A156-6E3D8BEA9B00@kintel.net>
	<1466488596071-17778.post@n5.nabble.com>
	<1466585044433-17793.post@n5.nabble.com>
	<trinity-6ccd87b0-dce4-4fb3-bad0-8bf03721bfda-1466587706948@3capp-gmx-bs45>
Message-ID: <1466606879574-17798.post@n5.nabble.com>

Sorry, what I actually meant was "for Windows". I am trying the cross
compilation route too.
Still struggling with strange errors in compiling dependencies, namely glib.
The errors seems to be "m4_copy: won't overwrite defined macro: glib_DEFUN".
Still checking for trivial errors though.


tp3 wrote
> Von:?buttim &lt;

> maurizio.butti@

> &gt;
>> Your report will be greatly appreciated! I had some luck in the past
>> trying
>> to rebuild under Windows but am not currently able to do it.
>>
> That seems to be a different topic. What Jamie is doing is the same
> way the official Windows binaries are built.
> Those are created on a Linux system using the MXE build environment
> (See http://mxe.cc/).
> 
> For "native" Windows compilation (meaning using Visual Studio and
> friends) there is currently no known solution as we don't have
> someone who works with that and could give a guideline.
> 
> What I tried successfully is building in the MSYS2 environment which
> is basically a Unix environment layer on Windows. This is documented
> in the manual:
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Building_on_Microsoft_Windows
> 
> This at least works with the QtCreator as IDE. I don't know if that
> still works, but some people did use that procedure successfully in
> the past.
> 
> ciao,
>   Torsten.
> 
> _______________________________________________
> OpenSCAD mailing list

> Discuss at .openscad

> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org





--
View this message in context: http://forum.openscad.org/Compiling-for-Windows-tp17766p17798.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Wed Jun 22 14:02:13 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Wed, 22 Jun 2016 20:02:13 +0200
Subject: [OpenSCAD] Compiling for Windows
In-Reply-To: <1466606879574-17798.post@n5.nabble.com>
References: <1466398993554-17766.post@n5.nabble.com>
	<1FF85DE7-BF5E-460F-A156-6E3D8BEA9B00@kintel.net>
	<1466488596071-17778.post@n5.nabble.com>
	<1466585044433-17793.post@n5.nabble.com>
	<trinity-6ccd87b0-dce4-4fb3-bad0-8bf03721bfda-1466587706948@3capp-gmx-bs45>
	<1466606879574-17798.post@n5.nabble.com>
Message-ID: <7a3c2274-8951-30a1-68b8-816b1d83afb9@gmx.de>

On 06/22/2016 04:47 PM, buttim wrote:
> Sorry, what I actually meant was "for Windows". I am trying the cross
> compilation route too.
>
Hmm, that's strange as this process and the scripts are used
for the official builds and MXE is pretty self-contained.

Although we don't compile all the dependencies for every build,
so there could be an actual MXE issue too. But in general it's
quite stable - especially for the more commonly used packages.

ciao,
  Torsten.



From maurizio.butti at gmail.com  Thu Jun 23 05:31:38 2016
From: maurizio.butti at gmail.com (buttim)
Date: Thu, 23 Jun 2016 02:31:38 -0700 (MST)
Subject: [OpenSCAD] Compiling for Windows
In-Reply-To: <7a3c2274-8951-30a1-68b8-816b1d83afb9@gmx.de>
References: <1466398993554-17766.post@n5.nabble.com>
	<1FF85DE7-BF5E-460F-A156-6E3D8BEA9B00@kintel.net>
	<1466488596071-17778.post@n5.nabble.com>
	<1466585044433-17793.post@n5.nabble.com>
	<trinity-6ccd87b0-dce4-4fb3-bad0-8bf03721bfda-1466587706948@3capp-gmx-bs45>
	<1466606879574-17798.post@n5.nabble.com>
	<7a3c2274-8951-30a1-68b8-816b1d83afb9@gmx.de>
Message-ID: <1466674298977-17800.post@n5.nabble.com>

What I discovered right now is that having libgl2.0-dev installed caused the
problem.

It manifested with the following message in the build  log
"error: m4_copy: won't overwrite defined macro: glib_DEFUN"

I'm using Ubuntu 16.04



--
View this message in context: http://forum.openscad.org/Compiling-for-Windows-tp17766p17800.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From vector76 at gmail.com  Thu Jun 23 06:00:07 2016
From: vector76 at gmail.com (Jamie_K)
Date: Thu, 23 Jun 2016 03:00:07 -0700 (MST)
Subject: [OpenSCAD] Compiling for Windows
In-Reply-To: <7a3c2274-8951-30a1-68b8-816b1d83afb9@gmx.de>
References: <1466398993554-17766.post@n5.nabble.com>
	<1FF85DE7-BF5E-460F-A156-6E3D8BEA9B00@kintel.net>
	<1466488596071-17778.post@n5.nabble.com>
	<1466585044433-17793.post@n5.nabble.com>
	<trinity-6ccd87b0-dce4-4fb3-bad0-8bf03721bfda-1466587706948@3capp-gmx-bs45>
	<1466606879574-17798.post@n5.nabble.com>
	<7a3c2274-8951-30a1-68b8-816b1d83afb9@gmx.de>
Message-ID: <1466676007168-17801.post@n5.nabble.com>

First I'd like to say buttim's comment about the cmake version dependency was
spot on.  Later versions of cmake (not exactly sure but guessing cmake 3.3.0
and later) will fail on the version of cgal (4.5) pulled by the openscad
fork of mxe (https://github.com/openscad/mxe).

Unfortunately it appears my Fedora 23 cannot downgrade cmake low enough for
it to work with cgal 4.5.  It might have been possible to get an older cmake
by going outside the package manager to install the older cmake, but that's
beyond what I have patience for, so I'm basically stuck with the newer,
incompatible cmake.

Ultimately I was able to build two ways:
1. By using the latest mxe and fixing a dynamic vs. static bug in it
2. By fixing cgal 4.5 to be compatible with cmake 3.4.3


For the first method, pointing to the latest mxe was fairly simple:
1. Get all the openscad stuff
git clone https://github.com/openscad/openscad.git
2. modify scripts/mingw-x-build-dependencies.sh to point to mxe/mxe.git
instead of openscad/mxe.git by modifying line 69 to be:
git clone git://github.com/mxe/mxe.git $MXEDIR
and also remove "git checkout openscad-snapshot-build", to get master
instead of branch
3. within release-common.sh, change references 'i686-pc-mingw32-makensis' to
'i686-w64-mingw32.static-makensis' instead, since that's the name of the
makensis binary (lines 136 and 144)
4. There is apparently a bug in the latest mxe, where it will always build
shared libraries for cgal regardless of whether static or dynamic is
requested.  I believe this update introduced the problem:
https://github.com/mxe/mxe/commit/9f0dbfafc60b725dc09c85059b5b58c3298e3319
This update removed "-DBUILD_SHARED_LIBS=OFF" and added
"-DCGAL_BUILD_SHARED_LIBS=$(CMAKE_SHARED_BOOL)"
but it seems that cgal makefiles don't much care about the value of
CGAL_BUILD_SHARED_LIBS and when BUILD_SHARED_LIBS is unspecified, it
defaults to dynamic.
I submitted an issue https://github.com/mxe/mxe/issues/1402
And as a workaround, I modified the ~/openscad_deps/mxe-w64/src/cgal.mk,
changing back to '-DBUILD_SHARED_LIBS=FALSE'
5. The static and dynamic libraries can't both be present, so if you've
accidentally built the dynamic ones libCGAL.dll.a, libCGAL_Core.dll.a,
libCGAL_ImageIO.dll.a, and libCGAL_Qt4.dll.a, these must be removed or else
the final linking of the .exe will fail.  They reside in
~/openscad_deps/mxe-w64/usr/i686-w64-mingw32.static/lib/  Remove the
".dll.a" versions and leave the ".a" versions.
6. Then building openscad works, via ./scripts/release-common.sh mingw32


Now, to fix cgal 4.5 so that it doesn't fail with newer cmake...  this was a
challenge.
First I observed that it generated two log files, one here, which seemed
useless:
~/openscad_deps/mxe/tmp-cgal-i686-w64-mingw32.static/CGAL-4.5/CMakeFiles/CMakeOutput.log
and another one here, which was more informative:
~/openscad_deps/mxe/log/cgal_i686-w64-mingw32.static

The latter gave this as the error:

> -- Sources for CGAL component library 'CGAL_Qt4/CMakeLists.txt' detected
> CMake Error at src/CMakeLists.txt:81 (add_subdirectory):
>   add_subdirectory given source
>  
> "/home/vector/openscad_deps/mxe/tmp-cgal-i686-w64-mingw32.static/CGAL-4.5/src/CGAL_Qt4/CMakeLists.txt"
>   which is not an existing directory.

Apparently it was choking from being given a file (.../CMakeLists.txt) when
it was expecting a directory.  After a LOT of digging I found the place
where the string was generated, coinciding with a commit on the CGAL source
tree with a promising comment:
https://github.com/CGAL/cgal/commit/61e61220eb43ea8c3d4a6ebd84d44b0510d8533d
This seemed like a 'smoking gun' for the string being messed up due to a
cmake version dependence.
To fix it, I modified the CGAL package, at
~/openscad_deps/mxe/CGAL-4.5.tar.xz.  I opened the archive and essentially
applied the patch, replacing "string(REPLACE ...)" with
"get_filename_component(...)" as shown in the commit.  The proper way to do
this would be to insert a patch into the mxe/src, but I don't know the
details of how to do that.
I then recompiled cgal (from mxe directory, "make
build-only-cgal_i686-w64-mingw32.static"), using build-only to prevent
checksum failure and re-download from wiping my changes to CGAL-4.5.tar.xz.

Finally, I was ready to try compiling openscad itself:
./scripts/release-common.sh mingw32
This went without a hitch, and the resulting .exe worked.

-Jamie



--
View this message in context: http://forum.openscad.org/Compiling-for-Windows-tp17766p17801.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Thu Jun 23 09:10:26 2016
From: marius at kintel.net (Marius Kintel)
Date: Thu, 23 Jun 2016 09:10:26 -0400
Subject: [OpenSCAD] Compiling for Windows
In-Reply-To: <1466676007168-17801.post@n5.nabble.com>
References: <1466398993554-17766.post@n5.nabble.com>
	<1FF85DE7-BF5E-460F-A156-6E3D8BEA9B00@kintel.net>
	<1466488596071-17778.post@n5.nabble.com>
	<1466585044433-17793.post@n5.nabble.com>
	<trinity-6ccd87b0-dce4-4fb3-bad0-8bf03721bfda-1466587706948@3capp-gmx-bs45>
	<1466606879574-17798.post@n5.nabble.com>
	<7a3c2274-8951-30a1-68b8-816b1d83afb9@gmx.de>
	<1466676007168-17801.post@n5.nabble.com>
Message-ID: <A58E4255-FCE0-4002-8F8C-8A38D6EB3EE8@kintel.net>

Hi Jamie,

Thanks for the digging!

> On Jun 23, 2016, at 06:00 AM, Jamie_K <vector76 at gmail.com> wrote:
> 
> 2. By fixing cgal 4.5 to be compatible with cmake 3.4.3
> 
The latest MXE has CGAL 4.6.3 - perhaps that works better.
..but the better option is probably to upgrade MXE all the way to 4.8.1, to avoid having to maintain legacy code.

 -Marius



From denber at mindspring.com  Thu Jun 23 12:50:46 2016
From: denber at mindspring.com (Michele Denber)
Date: Thu, 23 Jun 2016 12:50:46 -0400
Subject: [OpenSCAD] Close command
In-Reply-To: <A58E4255-FCE0-4002-8F8C-8A38D6EB3EE8@kintel.net>
References: <1466398993554-17766.post@n5.nabble.com>	<1FF85DE7-BF5E-460F-A156-6E3D8BEA9B00@kintel.net>	<1466488596071-17778.post@n5.nabble.com>	<1466585044433-17793.post@n5.nabble.com>	<trinity-6ccd87b0-dce4-4fb3-bad0-8bf03721bfda-1466587706948@3capp-gmx-bs45>	<1466606879574-17798.post@n5.nabble.com>	<7a3c2274-8951-30a1-68b8-816b1d83afb9@gmx.de>	<1466676007168-17801.post@n5.nabble.com>
	<A58E4255-FCE0-4002-8F8C-8A38D6EB3EE8@kintel.net>
Message-ID: <576C1366.2030103@mindspring.com>

The Close command from the File menu, is performing an Exit.  I'd expect 
it to close the current file but leave the program running.  That is 
AFAIK, the standard meaning of "close".  Is this fixed in some newer 
version?

Windows version 2014.12.25 (git 73163f2)

             - Michele

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160623/f60c7cec/attachment.html>

From Torsten.Paul at gmx.de  Thu Jun 23 13:20:32 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Thu, 23 Jun 2016 19:20:32 +0200
Subject: [OpenSCAD] Compiling for Windows
In-Reply-To: <A58E4255-FCE0-4002-8F8C-8A38D6EB3EE8@kintel.net>
References: <1466398993554-17766.post@n5.nabble.com>
	<1FF85DE7-BF5E-460F-A156-6E3D8BEA9B00@kintel.net>
	<1466488596071-17778.post@n5.nabble.com>
	<1466585044433-17793.post@n5.nabble.com>
	<trinity-6ccd87b0-dce4-4fb3-bad0-8bf03721bfda-1466587706948@3capp-gmx-bs45>
	<1466606879574-17798.post@n5.nabble.com>
	<7a3c2274-8951-30a1-68b8-816b1d83afb9@gmx.de>
	<1466676007168-17801.post@n5.nabble.com>
	<A58E4255-FCE0-4002-8F8C-8A38D6EB3EE8@kintel.net>
Message-ID: <d2a0bf58-8987-f5c1-a077-ab8d53bda8ea@gmx.de>

Oh, that sounds like a bumpy road ahead with CGAL on MXE. If the
upgrade works, it would be very cool if that could be pushed to
the official MXE project.

I don't know if it became easier, but upgrading earlier versions
was quite tricky as they need to ship some kind of pre-generated
configuration file for the cmake process.

The MXE clone in the openscad project on github is only there
as staging area to prevent unexpected upgrades and help when we
need to add new packages.

ciao,
  Torsten.


From marius at kintel.net  Thu Jun 23 18:07:39 2016
From: marius at kintel.net (Marius Kintel)
Date: Thu, 23 Jun 2016 18:07:39 -0400
Subject: [OpenSCAD] Close command
In-Reply-To: <576C1366.2030103@mindspring.com>
References: <1466398993554-17766.post@n5.nabble.com>
	<1FF85DE7-BF5E-460F-A156-6E3D8BEA9B00@kintel.net>
	<1466488596071-17778.post@n5.nabble.com>
	<1466585044433-17793.post@n5.nabble.com>
	<trinity-6ccd87b0-dce4-4fb3-bad0-8bf03721bfda-1466587706948@3capp-gmx-bs45>
	<1466606879574-17798.post@n5.nabble.com>
	<7a3c2274-8951-30a1-68b8-816b1d83afb9@gmx.de>
	<1466676007168-17801.post@n5.nabble.com>
	<A58E4255-FCE0-4002-8F8C-8A38D6EB3EE8@kintel.net>
	<576C1366.2030103@mindspring.com>
Message-ID: <9DAE4A47-2375-4824-A83E-97A0945CC446@kintel.net>

Hi Michele,

We will close the program if you close the last open file.

 -Marius

PS. Your version is pretty old. The latest official release is 2015.03-2.

> On Jun 23, 2016, at 12:50 PM, Michele Denber <denber at mindspring.com> wrote:
> 
> The Close command from the File menu, is performing an Exit.  I'd expect it to close the current file but leave the program running.  That is AFAIK, the standard meaning of "close".  Is this fixed in some newer version?
> 
> Windows version 2014.12.25 (git 73163f2) 
> 
>             - Michele
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From oz.at.michael at gmail.com  Thu Jun 23 21:44:25 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 23 Jun 2016 18:44:25 -0700 (MST)
Subject: [OpenSCAD] Simple file causes crash on Windows 8
In-Reply-To: <1466497192520-17779.post@n5.nabble.com>
References: <1466497192520-17779.post@n5.nabble.com>
Message-ID: <1466732665776-17806.post@n5.nabble.com>

Welcome to the forum. Your post is still flagged as "This post has NOT been
accepted by the mailing list yet", so nobody gets it unless they look. Hence
why this reply took so long.
You need to subscribe to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.

Your code works ok on the latest release 2015.03-2 (64 bit on Windows), if
you're not on the  latest <http://www.openscad.org/downloads.html>   try it.

p.s. $fn=200 is rather high and has a performance hit, try smaller (~20)
values initially, use a high (~60) one when producing your final result.



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Simple-file-causes-crash-on-Windows-8-tp17779p17806.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Jun 23 21:51:53 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 23 Jun 2016 18:51:53 -0700 (MST)
Subject: [OpenSCAD] Close command
In-Reply-To: <576C1366.2030103@mindspring.com>
References: <1466398993554-17766.post@n5.nabble.com>
	<1FF85DE7-BF5E-460F-A156-6E3D8BEA9B00@kintel.net>
	<1466488596071-17778.post@n5.nabble.com>
	<1466585044433-17793.post@n5.nabble.com>
	<trinity-6ccd87b0-dce4-4fb3-bad0-8bf03721bfda-1466587706948@3capp-gmx-bs45>
	<1466606879574-17798.post@n5.nabble.com>
	<7a3c2274-8951-30a1-68b8-816b1d83afb9@gmx.de>
	<1466676007168-17801.post@n5.nabble.com>
	<A58E4255-FCE0-4002-8F8C-8A38D6EB3EE8@kintel.net>
	<576C1366.2030103@mindspring.com>
Message-ID: <1466733113545-17807.post@n5.nabble.com>

Michele wrote
> The Close command from the File menu, is performing an Exit.  I'd expect 
> it to close the current file but leave the program running.  That is 
> AFAIK, the standard meaning of "close".  Is this fixed in some newer 
> version?
> 
> Windows version 2014.12.25 (git 73163f2)
> 
>              - Michele
> 
> 
> _______________________________________________
> OpenSCAD mailing list

> Discuss at .openscad

> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

I'm not sure if it is in 2014.12.25 but current versions have an 'allow
opening multiple documents' advanced preference. 
When set it operates the way you expect with multiple files, except closing
the final document closes the program. Which is logical, as the graphic
display window is undefined without a source file.



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Compiling-for-Windows-tp17766p17807.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jon at jonbondy.com  Fri Jun 24 18:31:13 2016
From: jon at jonbondy.com (jon)
Date: Fri, 24 Jun 2016 18:31:13 -0400
Subject: [OpenSCAD] redundant question
Message-ID: <4483765a-9682-c348-9f70-cf984e4c8f50@jonbondy.com>

I'm sure this has been covered before, but how would one take the 
example in sweep-path.scad and preserve the circular rotations, but 
eliminate the rotations of the object around its own axis. That is, how 
would one keep the object flat (for example)?

Thank you

Jon



From rcmpersiano at gmail.com  Sat Jun 25 11:06:39 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Sat, 25 Jun 2016 08:06:39 -0700 (MST)
Subject: [OpenSCAD] redundant question
In-Reply-To: <4483765a-9682-c348-9f70-cf984e4c8f50@jonbondy.com>
References: <4483765a-9682-c348-9f70-cf984e4c8f50@jonbondy.com>
Message-ID: <1466867199677-17810.post@n5.nabble.com>

What you want is to control the sweep torsion. However, there is no such
control in the sweep.scad. A modified version was proposed by Oskar Linde to
minimize the torsion along the path. It may be found in
http://forum.openscad.org/Twisty-problem-with-scad-utils-quot-sweep-quot-tc9775.html#a9784
<http://forum.openscad.org/Twisty-problem-with-scad-utils-quot-sweep-quot-tc9775.html#a9784>  
However, that is not enough to avoid unwanted torsions in all cases. The
following code calculate an addition (or subtraction) of a specified
rotation angle of the path_transforms:

> // a simple rotation in Z
> function zrotation(ang) = 
>   let(c = cos(ang), s = sin(ang))
>      [[  c, s, 0], [ -s, c, 0], [  0, 0, 1]]; 
>       
> // a sequence of acumulated r transform
> function accumulated_transform(r,n,_r=[]) = 
>     (n==0)? 
>         _r: 
>         accumulated_transform(
>             r, 
>             n-1, 
>             (len(_r)==0)? [r]
>                 : concat( _r, [r * _r[len(_r)-1]] ) 
>                              );
> // changes the initial and final rotation angle
> function adjust_rotations(angi, angtot, path_transf) = 
>      let( l    = len(path_transf),
>           rot  = zrotation(angtot/l),
>           rini = zrotation(angi),
>           w    = [0,0,0,1],
>           rots = accumulated_transform(rot,l))
>      [ for(i=[0:l-1])
> path_transf[i]*construct_rt(rots[i],w)*construct_rt(rini,w) ];

A tipical use of it i:

>   path_transf = construct_transform_path(path);
>   path_transforms = adjust_rotations(ini_ang,final_ang, path_transf);
>   sweep(section(), path_transforms, path);

where ini_ang and final_ang is the additional initial angle and final angle
of the section rotations.

Hope it helps.



--
View this message in context: http://forum.openscad.org/redundant-question-tp17808p17810.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From denber at mindspring.com  Sat Jun 25 13:36:29 2016
From: denber at mindspring.com (Michele Denber)
Date: Sat, 25 Jun 2016 13:36:29 -0400
Subject: [OpenSCAD] Close command
In-Reply-To: <1466733113545-17807.post@n5.nabble.com>
References: <1466398993554-17766.post@n5.nabble.com>	<1FF85DE7-BF5E-460F-A156-6E3D8BEA9B00@kintel.net>	<1466488596071-17778.post@n5.nabble.com>	<1466585044433-17793.post@n5.nabble.com>	<trinity-6ccd87b0-dce4-4fb3-bad0-8bf03721bfda-1466587706948@3capp-gmx-bs45>	<1466606879574-17798.post@n5.nabble.com>	<7a3c2274-8951-30a1-68b8-816b1d83afb9@gmx.de>	<1466676007168-17801.post@n5.nabble.com>	<A58E4255-FCE0-4002-8F8C-8A38D6EB3EE8@kintel.net>	<576C1366.2030103@mindspring.com>
	<1466733113545-17807.post@n5.nabble.com>
Message-ID: <576EC11D.2020904@mindspring.com>

On 06-23-2016 9:51 PM, MichaelAtOz wrote:
>
> I'm not sure if it is in 2014.12.25 but current versions have an 'allow
> opening multiple documents' advanced preference.
> When set it operates the way you expect with multiple files, except closing
> the final document closes the program. Which is logical, as the graphic
> display window is undefined without a source file.
>    
Yes, but that does not require exiting the program.  When you first 
start the program, the graphics window is blank until you start writing 
code and rendering.  This is the way Microsoft Word, CorelDraw, and 
Photoshop all work.  If you have one file open and click Close, the file 
is closed but the program remains running with a blank text or graphics 
window.

That's the way every program I've ever used that offers a Close command 
works.  Closing the last file leaves the program running with a blank 
window ready to either open a new file or start creating a new 
document.  I submit that Openscad is non-standard in that regard.

             - Michele




From kennethrsloan at gmail.com  Sat Jun 25 15:39:31 2016
From: kennethrsloan at gmail.com (Kenneth Sloan)
Date: Sat, 25 Jun 2016 12:39:31 -0700
Subject: [OpenSCAD] Close command
In-Reply-To: <576EC11D.2020904@mindspring.com>
References: <1466398993554-17766.post@n5.nabble.com>
	<1FF85DE7-BF5E-460F-A156-6E3D8BEA9B00@kintel.net>
	<1466488596071-17778.post@n5.nabble.com>
	<1466585044433-17793.post@n5.nabble.com>
	<trinity-6ccd87b0-dce4-4fb3-bad0-8bf03721bfda-1466587706948@3capp-gmx-bs45>
	<1466606879574-17798.post@n5.nabble.com>
	<7a3c2274-8951-30a1-68b8-816b1d83afb9@gmx.de>
	<1466676007168-17801.post@n5.nabble.com>
	<A58E4255-FCE0-4002-8F8C-8A38D6EB3EE8@kintel.net>
	<576C1366.2030103@mindspring.com>
	<1466733113545-17807.post@n5.nabble.com>
	<576EC11D.2020904@mindspring.com>
Message-ID: <92B9E588-D263-418A-85E7-AB5961EAEC58@gmail.com>

Heh?

I nominate ?Openscad is non-s
--
Kenneth Sloan
KennethRSloan at gmail.com
Vision is the art of seeing what is invisible to others.




> On Jun 25, 2016, at 10:36 , Michele Denber <denber at mindspring.com> wrote:
> 
> On 06-23-2016 9:51 PM, MichaelAtOz wrote:
>> 
>> I'm not sure if it is in 2014.12.25 but current versions have an 'allow
>> opening multiple documents' advanced preference.
>> When set it operates the way you expect with multiple files, except closing
>> the final document closes the program. Which is logical, as the graphic
>> display window is undefined without a source file.
>>   
> Yes, but that does not require exiting the program.  When you first start the program, the graphics window is blank until you start writing code and rendering.  This is the way Microsoft Word, CorelDraw, and Photoshop all work.  If you have one file open and click Close, the file is closed but the program remains running with a blank text or graphics window.
> 
> That's the way every program I've ever used that offers a Close command works.  Closing the last file leaves the program running with a blank window ready to either open a new file or start creating a new document.  I submit that Openscad is non-standard in that regard.
> 
>            - Michele
> 
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From kennethrsloan at gmail.com  Sat Jun 25 15:44:33 2016
From: kennethrsloan at gmail.com (Kenneth Sloan)
Date: Sat, 25 Jun 2016 12:44:33 -0700
Subject: [OpenSCAD] Close command
In-Reply-To: <576EC11D.2020904@mindspring.com>
References: <1466398993554-17766.post@n5.nabble.com>
	<1FF85DE7-BF5E-460F-A156-6E3D8BEA9B00@kintel.net>
	<1466488596071-17778.post@n5.nabble.com>
	<1466585044433-17793.post@n5.nabble.com>
	<trinity-6ccd87b0-dce4-4fb3-bad0-8bf03721bfda-1466587706948@3capp-gmx-bs45>
	<1466606879574-17798.post@n5.nabble.com>
	<7a3c2274-8951-30a1-68b8-816b1d83afb9@gmx.de>
	<1466676007168-17801.post@n5.nabble.com>
	<A58E4255-FCE0-4002-8F8C-8A38D6EB3EE8@kintel.net>
	<576C1366.2030103@mindspring.com>
	<1466733113545-17807.post@n5.nabble.com>
	<576EC11D.2020904@mindspring.com>
Message-ID: <4D4B1C54-8DFD-46B8-90F0-C587AE06B3F6@gmail.com>

Heh?

I nominate ?Openscad is non-standard? as the understatement of the year.

In a language where a cube may have different H,W,D, and where coders specify hex-nuts as ?cylinder?s, I don?t think the slightly different handling of ?Close? makes it on to the first page of examples of ?non-standard? usage.

You were surprised.  Get over it.  I wouldn?t be surprised if there were not 10 existing OpenSCAD users who would complain about things ?breaking? if the behavior were changed.

and, besides - working differently from Microsoft Word, CorelDraw, and Photoshop is not prima facie evidence of being ?wrong?.

Being ?different? is not always a bad thing.

--
Kenneth Sloan
KennethRSloan at gmail.com
Vision is the art of seeing what is invisible to others.




> On Jun 25, 2016, at 10:36 , Michele Denber <denber at mindspring.com> wrote:
> 
> On 06-23-2016 9:51 PM, MichaelAtOz wrote:
>> 
>> I'm not sure if it is in 2014.12.25 but current versions have an 'allow
>> opening multiple documents' advanced preference.
>> When set it operates the way you expect with multiple files, except closing
>> the final document closes the program. Which is logical, as the graphic
>> display window is undefined without a source file.
>>   
> Yes, but that does not require exiting the program.  When you first start the program, the graphics window is blank until you start writing code and rendering.  This is the way Microsoft Word, CorelDraw, and Photoshop all work.  If you have one file open and click Close, the file is closed but the program remains running with a blank text or graphics window.
> 
> That's the way every program I've ever used that offers a Close command works.  Closing the last file leaves the program running with a blank window ready to either open a new file or start creating a new document.  I submit that Openscad is non-standard in that regard.
> 
>            - Michele
> 
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From denber at mindspring.com  Sat Jun 25 16:37:14 2016
From: denber at mindspring.com (Michele Denber)
Date: Sat, 25 Jun 2016 16:37:14 -0400
Subject: [OpenSCAD] Close command
In-Reply-To: <4D4B1C54-8DFD-46B8-90F0-C587AE06B3F6@gmail.com>
References: <1466398993554-17766.post@n5.nabble.com>	<1FF85DE7-BF5E-460F-A156-6E3D8BEA9B00@kintel.net>	<1466488596071-17778.post@n5.nabble.com>	<1466585044433-17793.post@n5.nabble.com>	<trinity-6ccd87b0-dce4-4fb3-bad0-8bf03721bfda-1466587706948@3capp-gmx-bs45>	<1466606879574-17798.post@n5.nabble.com>	<7a3c2274-8951-30a1-68b8-816b1d83afb9@gmx.de>	<1466676007168-17801.post@n5.nabble.com>	<A58E4255-FCE0-4002-8F8C-8A38D6EB3EE8@kintel.net>	<576C1366.2030103@mindspring.com>	<1466733113545-17807.post@n5.nabble.com>	<576EC11D.2020904@mindspring.com>
	<4D4B1C54-8DFD-46B8-90F0-C587AE06B3F6@gmail.com>
Message-ID: <576EEB7A.4010608@mindspring.com>

On 06-25-2016 3:44 PM, Kenneth Sloan wrote:
> Heh?
>
> I nominate ?Openscad is non-standard? as the understatement of the year.
>
> In a language where a cube may have different H,W,D, and where coders specify hex-nuts as ?cylinder?s, I don?t think the slightly different handling of ?Close? makes it on to the first page of examples of ?non-standard? usage.
>
> You were surprised.  Get over it.
>    

This is what I get for trying to help?  Get over it??  Well then yes yes 
Ken, you've totally convinced me.  "Close" should mean "Exit" after 
all.  Also "Export" should mean "set the basic unit size to the parsec" 
and "New" should mean "cd / ; rm -rf".  That's different too.

And "Save" should mean "Welcome to my block list".  Like this.

             - Michele



From jon at jonbondy.com  Sat Jun 25 17:58:16 2016
From: jon at jonbondy.com (jon)
Date: Sat, 25 Jun 2016 17:58:16 -0400
Subject: [OpenSCAD] mixing 2D and 3D
Message-ID: <8590930e-e3cd-0f8d-22af-bec76d75e8ad@jonbondy.com>

I'm playing around with moldings.  I thought I was careful to keep all 
of the 2D stuff together and all of the 3D stuff together, but I guess I 
was wrong.

1) if I do a hull() on 2D objects, don't I get a 2D object as a result?

2) can a module() return a 2D object?

3) sure would be nice if the error messages gave even a HINT about where 
the problem was.  I doubt that I am the first to whine about this.

Thanks

Jon

---

$fn = 100;
eps = 0.1;

module RoundedSquare(x, y) {
     hull() {
         translate([0,     1]) square(1);
         translate([x-4, y-4]) circle(4);
         translate([x-1,   1]) square(1);
         translate([0,   y-1]) square(1);
         }
     }

module CrossSection1()
     difference() {
         union() {
             square([10, 20]);
             translate([10, 3])
                 circle(2);
             }
         translate([10, 15])
             circle(2);
         }

CrossSection1();

translate([0, 30, 0])
     CrossSection2();

module CrossSection2()
     difference() {
         union() {
             RoundedSquare(10, 20);
             translate([10, 12])
                 circle(2);
             }
         translate([10, 5])
             circle(2);
         }

translate([80, 0, 0])
     rotate([0, -90, 0])
         linear_extrude(height = 50)
             CrossSection1();

translate([80, 30, 0])
     rotate([0, -90, 0])
         linear_extrude(height = 50)
             CrossSection2();

difference() {
     translate([-50, 50 + 15, 0])
         rotate([0, -90, 90])
             linear_extrude(height = 50)
                 CrossSection2();
     translate([-50, 0, -eps])
         rotate([0, -90, 0])
             linear_extrude(height = 50)
                 CrossSection2();
     }



From doug at moens.org  Sat Jun 25 18:17:09 2016
From: doug at moens.org (doug moen)
Date: Sat, 25 Jun 2016 18:17:09 -0400
Subject: [OpenSCAD] mixing 2D and 3D
In-Reply-To: <8590930e-e3cd-0f8d-22af-bec76d75e8ad@jonbondy.com>
References: <8590930e-e3cd-0f8d-22af-bec76d75e8ad@jonbondy.com>
Message-ID: <CAGV6i+MDVYz1urzKdekbXiszw43_NMeZT=xB_JTcW2-MoRY79A@mail.gmail.com>

Your model has 2 2D objects and 3 3D objects at the top level. This is
clearly visible in F5 preview.

You can't export a mixture of 2D and 3D objects, we don't support any file
formats where this makes sense, and the F6 render fails for this reason.

If you want to export to STL, you'll need to disable the 2D objects before
doing F6 and Export. Likewise, if you want to export to DXF, you'll need to
disable the 3D objects before doing F6 and Export.

On 25 June 2016 at 17:58, jon <jon at jonbondy.com> wrote:

> I'm playing around with moldings.  I thought I was careful to keep all of
> the 2D stuff together and all of the 3D stuff together, but I guess I was
> wrong.
>
> 1) if I do a hull() on 2D objects, don't I get a 2D object as a result?
>
> 2) can a module() return a 2D object?
>
> 3) sure would be nice if the error messages gave even a HINT about where
> the problem was.  I doubt that I am the first to whine about this.
>
> Thanks
>
> Jon
>
> ---
>
> $fn = 100;
> eps = 0.1;
>
> module RoundedSquare(x, y) {
>     hull() {
>         translate([0,     1]) square(1);
>         translate([x-4, y-4]) circle(4);
>         translate([x-1,   1]) square(1);
>         translate([0,   y-1]) square(1);
>         }
>     }
>
> module CrossSection1()
>     difference() {
>         union() {
>             square([10, 20]);
>             translate([10, 3])
>                 circle(2);
>             }
>         translate([10, 15])
>             circle(2);
>         }
>
> CrossSection1();
>
> translate([0, 30, 0])
>     CrossSection2();
>
> module CrossSection2()
>     difference() {
>         union() {
>             RoundedSquare(10, 20);
>             translate([10, 12])
>                 circle(2);
>             }
>         translate([10, 5])
>             circle(2);
>         }
>
> translate([80, 0, 0])
>     rotate([0, -90, 0])
>         linear_extrude(height = 50)
>             CrossSection1();
>
> translate([80, 30, 0])
>     rotate([0, -90, 0])
>         linear_extrude(height = 50)
>             CrossSection2();
>
> difference() {
>     translate([-50, 50 + 15, 0])
>         rotate([0, -90, 90])
>             linear_extrude(height = 50)
>                 CrossSection2();
>     translate([-50, 0, -eps])
>         rotate([0, -90, 0])
>             linear_extrude(height = 50)
>                 CrossSection2();
>     }
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160625/9be72ca7/attachment.html>

From jon at jonbondy.com  Sat Jun 25 18:24:18 2016
From: jon at jonbondy.com (jon)
Date: Sat, 25 Jun 2016 18:24:18 -0400
Subject: [OpenSCAD] mixing 2D and 3D
In-Reply-To: <CAGV6i+MDVYz1urzKdekbXiszw43_NMeZT=xB_JTcW2-MoRY79A@mail.gmail.com>
References: <8590930e-e3cd-0f8d-22af-bec76d75e8ad@jonbondy.com>
	<CAGV6i+MDVYz1urzKdekbXiszw43_NMeZT=xB_JTcW2-MoRY79A@mail.gmail.com>
Message-ID: <3c5b6b0f-01ef-4833-21b2-65b382d95527@jonbondy.com>

Ah.  Not "mixed within a statement" or "mixed within a module" but 
"mixed across the entire set of objects".

Thank you.  I "fixed" it by doing a tiny linear_extrude() of the 2D objects.

Jon


On 6/25/2016 6:17 PM, doug moen wrote:
> Your model has 2 2D objects and 3 3D objects at the top level. This is 
> clearly visible in F5 preview.
>
> You can't export a mixture of 2D and 3D objects, we don't support any 
> file formats where this makes sense, and the F6 render fails for this 
> reason.
>
> If you want to export to STL, you'll need to disable the 2D objects 
> before doing F6 and Export. Likewise, if you want to export to DXF, 
> you'll need to disable the 3D objects before doing F6 and Export.
>
> On 25 June 2016 at 17:58, jon <jon at jonbondy.com 
> <mailto:jon at jonbondy.com>> wrote:
>
>     I'm playing around with moldings.  I thought I was careful to keep
>     all of the 2D stuff together and all of the 3D stuff together, but
>     I guess I was wrong.
>
>     1) if I do a hull() on 2D objects, don't I get a 2D object as a
>     result?
>
>     2) can a module() return a 2D object?
>
>     3) sure would be nice if the error messages gave even a HINT about
>     where the problem was.  I doubt that I am the first to whine about
>     this.
>
>     Thanks
>
>     Jon
>
>     ---
>
>     $fn = 100;
>     eps = 0.1;
>
>     module RoundedSquare(x, y) {
>         hull() {
>             translate([0,     1]) square(1);
>             translate([x-4, y-4]) circle(4);
>             translate([x-1,   1]) square(1);
>             translate([0,   y-1]) square(1);
>             }
>         }
>
>     module CrossSection1()
>         difference() {
>             union() {
>                 square([10, 20]);
>                 translate([10, 3])
>                     circle(2);
>                 }
>             translate([10, 15])
>                 circle(2);
>             }
>
>     CrossSection1();
>
>     translate([0, 30, 0])
>         CrossSection2();
>
>     module CrossSection2()
>         difference() {
>             union() {
>                 RoundedSquare(10, 20);
>                 translate([10, 12])
>                     circle(2);
>                 }
>             translate([10, 5])
>                 circle(2);
>             }
>
>     translate([80, 0, 0])
>         rotate([0, -90, 0])
>             linear_extrude(height = 50)
>                 CrossSection1();
>
>     translate([80, 30, 0])
>         rotate([0, -90, 0])
>             linear_extrude(height = 50)
>                 CrossSection2();
>
>     difference() {
>         translate([-50, 50 + 15, 0])
>             rotate([0, -90, 90])
>                 linear_extrude(height = 50)
>                     CrossSection2();
>         translate([-50, 0, -eps])
>             rotate([0, -90, 0])
>                 linear_extrude(height = 50)
>                     CrossSection2();
>         }
>
>
>     _______________________________________________
>     OpenSCAD mailing list
>     Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
>     http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> No virus found in this message.
> Checked by AVG - www.avg.com <http://www.avg.com>
> Version: 2016.0.7640 / Virus Database: 4604/12488 - Release Date: 06/25/16
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160625/b4ce2224/attachment.html>

From maurizio.butti at gmail.com  Tue Jun 28 09:10:09 2016
From: maurizio.butti at gmail.com (buttim)
Date: Tue, 28 Jun 2016 06:10:09 -0700 (MST)
Subject: [OpenSCAD] Qt5
Message-ID: <1467119409457-17818.post@n5.nabble.com>

I suspect this is a well known story, so bear with me since my Google search
(patience?) did not come up with a definitive answer.

Seems like Openscad is using the old Qt4 version instead of Qt5. I would
like tu understand if it's feasible to switch to Qt5 or not.

My personal concern is that some keyboard shortcuts are broken with non US
keyboard layouts, at least under Windows. For example you can't use Ctrl+]
and [ for zoomin. Same for the (hopefully) upcoming shortcuts Ctrl+* and
Ctrl+Shift+*. This might be something that does not affect Qt5 from some
discussions I found around.



--
View this message in context: http://forum.openscad.org/Qt5-tp17818.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Tue Jun 28 09:45:18 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Tue, 28 Jun 2016 15:45:18 +0200
Subject: [OpenSCAD] Qt5
In-Reply-To: <1467119409457-17818.post@n5.nabble.com>
References: <1467119409457-17818.post@n5.nabble.com>
Message-ID: <trinity-4e868d39-d5f5-4a66-88ff-3dc2020f0243-1467121517767@3capp-gmx-bs69>

> Seems like Openscad is using the old Qt4 version instead of Qt5.
> I would like tu understand if it's feasible to switch to Qt5 or
> not.
>
OpenSCAD supports both for quite some time.

I guess the question is if it's ok to drop Qt4. Officially it's
dead since beginning of this year I think.

ciao,
  Torsten.


From doug at moens.org  Tue Jun 28 09:46:14 2016
From: doug at moens.org (doug moen)
Date: Tue, 28 Jun 2016 09:46:14 -0400
Subject: [OpenSCAD] Qt5
In-Reply-To: <1467119409457-17818.post@n5.nabble.com>
References: <1467119409457-17818.post@n5.nabble.com>
Message-ID: <CAGV6i+NKPyu0QzLa8BbrtYNsmsWu55Df=haUUHfUGiLhOOi5WA@mail.gmail.com>

OpenSCAD uses Qt5 on all platforms, if you have a recent build.

On 28 June 2016 at 09:10, buttim <maurizio.butti at gmail.com> wrote:

> I suspect this is a well known story, so bear with me since my Google
> search
> (patience?) did not come up with a definitive answer.
>
> Seems like Openscad is using the old Qt4 version instead of Qt5. I would
> like tu understand if it's feasible to switch to Qt5 or not.
>
> My personal concern is that some keyboard shortcuts are broken with non US
> keyboard layouts, at least under Windows. For example you can't use Ctrl+]
> and [ for zoomin. Same for the (hopefully) upcoming shortcuts Ctrl+* and
> Ctrl+Shift+*. This might be something that does not affect Qt5 from some
> discussions I found around.
>
>
>
> --
> View this message in context: http://forum.openscad.org/Qt5-tp17818.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160628/dc768557/attachment.html>

From maurizio.butti at gmail.com  Tue Jun 28 10:17:33 2016
From: maurizio.butti at gmail.com (buttim)
Date: Tue, 28 Jun 2016 07:17:33 -0700 (MST)
Subject: [OpenSCAD] Qt5
In-Reply-To: <CAGV6i+NKPyu0QzLa8BbrtYNsmsWu55Df=haUUHfUGiLhOOi5WA@mail.gmail.com>
References: <1467119409457-17818.post@n5.nabble.com>
	<CAGV6i+NKPyu0QzLa8BbrtYNsmsWu55Df=haUUHfUGiLhOOi5WA@mail.gmail.com>
Message-ID: <1467123453873-17821.post@n5.nabble.com>

Still the Windows cross compilation brings in Qt4. Or am I wrong?



--
View this message in context: http://forum.openscad.org/Qt5-tp17818p17821.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Tue Jun 28 10:54:58 2016
From: doug at moens.org (doug moen)
Date: Tue, 28 Jun 2016 10:54:58 -0400
Subject: [OpenSCAD] Qt5
In-Reply-To: <1467123453873-17821.post@n5.nabble.com>
References: <1467119409457-17818.post@n5.nabble.com>
	<CAGV6i+NKPyu0QzLa8BbrtYNsmsWu55Df=haUUHfUGiLhOOi5WA@mail.gmail.com>
	<1467123453873-17821.post@n5.nabble.com>
Message-ID: <CAGV6i+NgsTSzA2k7gxpMPeU=Ki0T=-LvCLMnx-McMS9UJ=bD0Q@mail.gmail.com>

I'm running a Windows developer snapshot from the downloads page, and the
library info says Qt5.

The last time I looked at the build scripts, they were searching for either
Qt5 or Qt4, and using whatever was installed, with a preference for Qt5,
but I don't know how the Windows build works. If you are doing your own
build, maybe the build script can't find your Qt5 installation?

On 28 June 2016 at 10:17, buttim <maurizio.butti at gmail.com> wrote:

> Still the Windows cross compilation brings in Qt4. Or am I wrong?
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Qt5-tp17818p17821.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160628/27a78b5d/attachment.html>

From oz.at.michael at gmail.com  Wed Jun 29 01:22:46 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Tue, 28 Jun 2016 22:22:46 -0700 (MST)
Subject: [OpenSCAD] Images on curved (cylindrical) surface
In-Reply-To: <1467131081503-17823.post@n5.nabble.com>
References: <1467131081503-17823.post@n5.nabble.com>
Message-ID: <1467177766254-17824.post@n5.nabble.com>

Lukas wrote
> Hi,
> 
> I am just getting started with OpenSCAD and just found the feature to
> import images via an Inkscape extension. But the tutorials I found only
> show the import/editing of flat images.
> 
> Is there any chance to put this flat image onto a curved surface such as a
> cylinder?
> 
> Hope the question makes sense...
> 
> Thanks,
> Lukas

AFAIK no, not if you mean like wrapping a label around an object.
If the image is like a line drawing, you could linear_extrude it & intersect
it with a hollow cylinder, but the result would be contorted.
Or you could slice it up and move the bits around, but the maths would be
beyond me.



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Images-on-curved-cylindrical-surface-tp17823p17824.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From maurizio.butti at gmail.com  Wed Jun 29 04:12:07 2016
From: maurizio.butti at gmail.com (buttim)
Date: Wed, 29 Jun 2016 01:12:07 -0700 (MST)
Subject: [OpenSCAD] Qt5
In-Reply-To: <CAGV6i+NgsTSzA2k7gxpMPeU=Ki0T=-LvCLMnx-McMS9UJ=bD0Q@mail.gmail.com>
References: <1467119409457-17818.post@n5.nabble.com>
	<CAGV6i+NKPyu0QzLa8BbrtYNsmsWu55Df=haUUHfUGiLhOOi5WA@mail.gmail.com>
	<1467123453873-17821.post@n5.nabble.com>
	<CAGV6i+NgsTSzA2k7gxpMPeU=Ki0T=-LvCLMnx-McMS9UJ=bD0Q@mail.gmail.com>
Message-ID: <CALe4i4sS8y+cV7JJkyuaLeDaEjfPOcFOFH3KsToVFG1zxKZqYw@mail.gmail.com>

I just discovered that for the Win building scripts the default is Qt4, but
you can specify Qt5. I'll have a try at it later

On Tue, Jun 28, 2016 at 4:55 PM, doug.moen [via OpenSCAD] <
ml-node+s1091067n17822h57 at n5.nabble.com> wrote:

> I'm running a Windows developer snapshot from the downloads page, and the
> library info says Qt5.
>
> The last time I looked at the build scripts, they were searching for
> either Qt5 or Qt4, and using whatever was installed, with a preference for
> Qt5, but I don't know how the Windows build works. If you are doing your
> own build, maybe the build script can't find your Qt5 installation?
>
> On 28 June 2016 at 10:17, buttim <[hidden email]
> <http:///user/SendEmail.jtp?type=node&node=17822&i=0>> wrote:
>
>> Still the Windows cross compilation brings in Qt4. Or am I wrong?
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/Qt5-tp17818p17821.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17822&i=1>
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17822&i=2>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/Qt5-tp17818p17822.html
> To unsubscribe from Qt5, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17818&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3ODE4fDE4OTg0NTUyNTk=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/Qt5-tp17818p17825.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160629/65996ff9/attachment.html>

From R.E.Wolff at BitWizard.nl  Wed Jun 29 04:51:22 2016
From: R.E.Wolff at BitWizard.nl (Rogier Wolff)
Date: Wed, 29 Jun 2016 10:51:22 +0200
Subject: [OpenSCAD] Qt5
In-Reply-To: <CAGV6i+NKPyu0QzLa8BbrtYNsmsWu55Df=haUUHfUGiLhOOi5WA@mail.gmail.com>
References: <1467119409457-17818.post@n5.nabble.com>
	<CAGV6i+NKPyu0QzLa8BbrtYNsmsWu55Df=haUUHfUGiLhOOi5WA@mail.gmail.com>
Message-ID: <20160629085122.GQ7549@BitWizard.nl>

On Tue, Jun 28, 2016 at 09:46:14AM -0400, doug moen wrote:
> OpenSCAD uses Qt5 on all platforms, if you have a recent build.
> 
> On 28 June 2016 at 09:10, buttim <maurizio.butti at gmail.com> wrote:
> 
> > I suspect this is a well known story, so bear with me since my Google
> > search
> > (patience?) did not come up with a definitive answer.
> >
> > Seems like Openscad is using the old Qt4 version instead of Qt5. I would
> > like tu understand if it's feasible to switch to Qt5 or not.

No. this is not feasible. QT5 makes openScad unbearably slow when the
model becomes a bit complicated. This bug needs to be fixed first
before we can switch to QT5....

... Oh.... :-)

	Roger. 

-- 
** R.E.Wolff at BitWizard.nl ** http://www.BitWizard.nl/ ** +31-15-2600998 **
**    Delftechpark 26 2628 XH  Delft, The Netherlands. KVK: 27239233    **
*-- BitWizard writes Linux device drivers for any device you may have! --*
The plan was simple, like my brother-in-law Phil. But unlike
Phil, this plan just might work.


From nop.head at gmail.com  Wed Jun 29 05:02:42 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 29 Jun 2016 10:02:42 +0100
Subject: [OpenSCAD] Qt5
In-Reply-To: <20160629085122.GQ7549@BitWizard.nl>
References: <1467119409457-17818.post@n5.nabble.com>
	<CAGV6i+NKPyu0QzLa8BbrtYNsmsWu55Df=haUUHfUGiLhOOi5WA@mail.gmail.com>
	<20160629085122.GQ7549@BitWizard.nl>
Message-ID: <CAEEmnrN8GWXe2G0SXjmvVup7qqW9QD01oOHH04zam1ZAr=dYPg@mail.gmail.com>

The Windows version I am running claims to be using Qt version: 5.4.1 and
it isn't slow on large models.

On 29 June 2016 at 09:51, Rogier Wolff <R.E.Wolff at bitwizard.nl> wrote:

> On Tue, Jun 28, 2016 at 09:46:14AM -0400, doug moen wrote:
> > OpenSCAD uses Qt5 on all platforms, if you have a recent build.
> >
> > On 28 June 2016 at 09:10, buttim <maurizio.butti at gmail.com> wrote:
> >
> > > I suspect this is a well known story, so bear with me since my Google
> > > search
> > > (patience?) did not come up with a definitive answer.
> > >
> > > Seems like Openscad is using the old Qt4 version instead of Qt5. I
> would
> > > like tu understand if it's feasible to switch to Qt5 or not.
>
> No. this is not feasible. QT5 makes openScad unbearably slow when the
> model becomes a bit complicated. This bug needs to be fixed first
> before we can switch to QT5....
>
> ... Oh.... :-)
>
>         Roger.
>
> --
> ** R.E.Wolff at BitWizard.nl ** http://www.BitWizard.nl/ ** +31-15-2600998 **
> **    Delftechpark 26 2628 XH  Delft, The Netherlands. KVK: 27239233    **
> *-- BitWizard writes Linux device drivers for any device you may have! --*
> The plan was simple, like my brother-in-law Phil. But unlike
> Phil, this plan just might work.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160629/111dfa09/attachment.html>

From maurizio.butti at gmail.com  Wed Jun 29 05:15:42 2016
From: maurizio.butti at gmail.com (buttim)
Date: Wed, 29 Jun 2016 02:15:42 -0700 (MST)
Subject: [OpenSCAD] Qt5
In-Reply-To: <CAEEmnrN8GWXe2G0SXjmvVup7qqW9QD01oOHH04zam1ZAr=dYPg@mail.gmail.com>
References: <1467119409457-17818.post@n5.nabble.com>
	<CAGV6i+NKPyu0QzLa8BbrtYNsmsWu55Df=haUUHfUGiLhOOi5WA@mail.gmail.com>
	<20160629085122.GQ7549@BitWizard.nl>
	<CAEEmnrN8GWXe2G0SXjmvVup7qqW9QD01oOHH04zam1ZAr=dYPg@mail.gmail.com>
Message-ID: <CALe4i4sW3R6-xxXCbHM7ar-YA8=nRoYEBC25ukaykKHKHeThYQ@mail.gmail.com>

Same for me, Qt5 reported in Library Info. The comments in the scripts seem
unreliable. I'll have to look for a different solution to my problem.
Stupid me I didn't check it before

On Wed, Jun 29, 2016 at 11:03 AM, nophead [via OpenSCAD] <
ml-node+s1091067n17827h12 at n5.nabble.com> wrote:

> The Windows version I am running claims to be using Qt version: 5.4.1 and
> it isn't slow on large models.
>
> On 29 June 2016 at 09:51, Rogier Wolff <[hidden email]
> <http:///user/SendEmail.jtp?type=node&node=17827&i=0>> wrote:
>
>> On Tue, Jun 28, 2016 at 09:46:14AM -0400, doug moen wrote:
>> > OpenSCAD uses Qt5 on all platforms, if you have a recent build.
>> >
>> > On 28 June 2016 at 09:10, buttim <[hidden email]
>> <http:///user/SendEmail.jtp?type=node&node=17827&i=1>> wrote:
>> >
>> > > I suspect this is a well known story, so bear with me since my Google
>> > > search
>> > > (patience?) did not come up with a definitive answer.
>> > >
>> > > Seems like Openscad is using the old Qt4 version instead of Qt5. I
>> would
>> > > like tu understand if it's feasible to switch to Qt5 or not.
>>
>> No. this is not feasible. QT5 makes openScad unbearably slow when the
>> model becomes a bit complicated. This bug needs to be fixed first
>> before we can switch to QT5....
>>
>> ... Oh.... :-)
>>
>>         Roger.
>>
>> --
>> ** [hidden email] <http:///user/SendEmail.jtp?type=node&node=17827&i=2>
>> ** http://www.BitWizard.nl/ ** <a href="tel:%2B31-15-2600998" value="
>> +31152600998">+31-15-2600998 **
>> **    Delftechpark 26 2628 XH  Delft, The Netherlands. KVK: 27239233    **
>> *-- BitWizard writes Linux device drivers for any device you may have! --*
>> The plan was simple, like my brother-in-law Phil. But unlike
>> Phil, this plan just might work.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17827&i=3>
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17827&i=4>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/Qt5-tp17818p17827.html
> To unsubscribe from Qt5, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17818&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3ODE4fDE4OTg0NTUyNTk=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/Qt5-tp17818p17828.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160629/5b6d3b13/attachment.html>

From Torsten.Paul at gmx.de  Wed Jun 29 05:50:04 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Wed, 29 Jun 2016 11:50:04 +0200
Subject: [OpenSCAD] Qt5
In-Reply-To: <20160629085122.GQ7549@BitWizard.nl>
References: <1467119409457-17818.post@n5.nabble.com>
	<CAGV6i+NKPyu0QzLa8BbrtYNsmsWu55Df=haUUHfUGiLhOOi5WA@mail.gmail.com>,
	<20160629085122.GQ7549@BitWizard.nl>
Message-ID: <trinity-239a6cee-379b-4ff5-9099-83965540222f-1467193804878@3capp-gmx-bs33>

Von:?"Rogier Wolff" <R.E.Wolff at BitWizard.nl>
> No. this is not feasible. QT5 makes openScad unbearably slow when the
> model becomes a bit complicated. This bug needs to be fixed first
> before we can switch to QT5....
>
Can you clearify what you mean by that? What OS are you talking about?

The only issue (as far as I know), that had anything to do with
Qt4 vs. Qt5 is about the QGLWidget on Linux. This is fixed quite
some time ago by switching to the new QOpenGLWidget provided in
Qt5.
AFAICS that fix is also backported to the Debian version in
release openscad-2015.03-2+dfsg-1. I don't know how other
distributions handle things.

So there is nothing to fix at this time for any of the 3 supported
platforms.

There is still a general issue with big models as the OpenGL code
is mostly using the old fixed OpenGL pipeline which is slow, does
not use GPU accelleration and can cause high CPU load for models
with lots of vertices.

That's not a "fix" though, but a serious project to get the code
updated to use more modern features provided by modrern GPUs/drivers.

ciao,
  Torsten.


From maurizio.butti at gmail.com  Wed Jun 29 05:59:32 2016
From: maurizio.butti at gmail.com (buttim)
Date: Wed, 29 Jun 2016 02:59:32 -0700 (MST)
Subject: [OpenSCAD] Qt5
In-Reply-To: <trinity-239a6cee-379b-4ff5-9099-83965540222f-1467193804878@3capp-gmx-bs33>
References: <1467119409457-17818.post@n5.nabble.com>
	<CAGV6i+NKPyu0QzLa8BbrtYNsmsWu55Df=haUUHfUGiLhOOi5WA@mail.gmail.com>
	<20160629085122.GQ7549@BitWizard.nl>
	<trinity-239a6cee-379b-4ff5-9099-83965540222f-1467193804878@3capp-gmx-bs33>
Message-ID: <CALe4i4u4V4aYvw5dAnTuD7Zg4aHxfXg6_1Lc6qux9gim0bW2vw@mail.gmail.com>

My interest is on the Windows platform. I'm cross compiling on Ubuntu 16.04.
The problem regards keyboard shortcuts in the windows environment.
All the shortcuts requiring the user to press the AltGr modifier do not
work. In the current version of OpenSCAD there are two of them if you are
using an italian keyboard: zoom in and zoom out. I suspect many other
keyboard layout do have the same problem

On Wed, Jun 29, 2016 at 11:50 AM, tp3 [via OpenSCAD] <
ml-node+s1091067n17829h74 at n5.nabble.com> wrote:

> Von: "Rogier Wolff" <[hidden email]
> <http:///user/SendEmail.jtp?type=node&node=17829&i=0>>
> > No. this is not feasible. QT5 makes openScad unbearably slow when the
> > model becomes a bit complicated. This bug needs to be fixed first
> > before we can switch to QT5....
> >
> Can you clearify what you mean by that? What OS are you talking about?
>
> The only issue (as far as I know), that had anything to do with
> Qt4 vs. Qt5 is about the QGLWidget on Linux. This is fixed quite
> some time ago by switching to the new QOpenGLWidget provided in
> Qt5.
> AFAICS that fix is also backported to the Debian version in
> release openscad-2015.03-2+dfsg-1. I don't know how other
> distributions handle things.
>
> So there is nothing to fix at this time for any of the 3 supported
> platforms.
>
> There is still a general issue with big models as the OpenGL code
> is mostly using the old fixed OpenGL pipeline which is slow, does
> not use GPU accelleration and can cause high CPU load for models
> with lots of vertices.
>
> That's not a "fix" though, but a serious project to get the code
> updated to use more modern features provided by modrern GPUs/drivers.
>
> ciao,
>   Torsten.
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=17829&i=1>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> -- Torsten
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/Qt5-tp17818p17829.html
> To unsubscribe from Qt5, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=17818&code=bWF1cml6aW8uYnV0dGlAZ21haWwuY29tfDE3ODE4fDE4OTg0NTUyNTk=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/Qt5-tp17818p17830.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160629/b531b701/attachment.html>

From Torsten.Paul at gmx.de  Wed Jun 29 06:19:51 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Wed, 29 Jun 2016 12:19:51 +0200
Subject: [OpenSCAD] Qt5
In-Reply-To: <CALe4i4u4V4aYvw5dAnTuD7Zg4aHxfXg6_1Lc6qux9gim0bW2vw@mail.gmail.com>
References: <1467119409457-17818.post@n5.nabble.com>
	<CAGV6i+NKPyu0QzLa8BbrtYNsmsWu55Df=haUUHfUGiLhOOi5WA@mail.gmail.com>
	<20160629085122.GQ7549@BitWizard.nl>
	<trinity-239a6cee-379b-4ff5-9099-83965540222f-1467193804878@3capp-gmx-bs33>,
	<CALe4i4u4V4aYvw5dAnTuD7Zg4aHxfXg6_1Lc6qux9gim0bW2vw@mail.gmail.com>
Message-ID: <trinity-f27f55c7-2a81-46aa-b181-87999110c9c1-1467195591284@3capp-gmx-bs33>

Von:?buttim <maurizio.butti at gmail.com>
> All the shortcuts requiring the user to press the AltGr
> modifier do not work. In the current version of OpenSCAD
> there are two of them if you are using an italian
> keyboard: zoom in and zoom out. I suspect many other
> keyboard layout do have the same problem
>
Yes, that seems to be tricky in some combinations. The
issue sounds like a variation of that one:

  https://github.com/openscad/openscad/issues/872

This might make it pretty much impossible to use the
AltGr modifier for anything unless it's actually
user configurable. Unfortunately I have not seen any
re-usable component or library to that yet, so we may
have to implement that ourselves eventually.

ciao,
  Torsten.


From rudolf at parkinbot.com  Wed Jun 29 07:35:40 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Wed, 29 Jun 2016 04:35:40 -0700 (MST)
Subject: [OpenSCAD] Images on curved (cylindrical) surface
In-Reply-To: <1467177766254-17824.post@n5.nabble.com>
References: <1467131081503-17823.post@n5.nabble.com>
	<1467177766254-17824.post@n5.nabble.com>
Message-ID: <1467200140382-17832.post@n5.nabble.com>

And it would be so easy, once one could get (programmatically) hands on the
DXF representation in OpenSCAD ...  

But there is also a programmatic solution with current OpenSCAD using some
windowing technique for discretization. Not the fastest but viable:

<http://forum.openscad.org/file/n17832/geschafft1.png>  
<http://forum.openscad.org/file/n17832/geschafft2.png> 


> R = 45;  // radius 
> H = 2;   // height
> L = 130; // centering offset 
> step = 5; 
> 
> $fn=360/step; 
> 
> for (i=[0:step:360])
> {
>   radian = R*PI/180; 
>   rotate([0, i, 0])   translate([0,0,R-H/2]) // cylinder stuff
>   intersection()
>   {
>     translate([L-i*radian, 0, 0])  // shift dxf over the window
>     linear_extrude(height = H, center = true, convexity = 4) 
>     import("geschafft.dxf"); 
>     cube([radian*step, 100, H+1], center = true);  // window
>   }
> }
> 
> color("black", .7)
> rotate([90, 0, 0])
> cylinder(r=R-H, h = 100, center = true);





--
View this message in context: http://forum.openscad.org/Images-on-curved-cylindrical-surface-tp17823p17832.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From ebuijs at mac.com  Wed Jun 29 07:49:47 2016
From: ebuijs at mac.com (Eric Buijs)
Date: Wed, 29 Jun 2016 04:49:47 -0700 (MST)
Subject: [OpenSCAD] Creating DXF file with round shapes
Message-ID: <1467200987829-17833.post@n5.nabble.com>

Hello, 

I use OpenSCAD to export dxf files that I need for laser cutting. When I
create circles a dxf file with multiple line segments per circle is
generated by OpenSCAD. This causes problems on the laser cutter that
"perceives" this a multiple independent lines.

As an example: projection() cylinder(h=12, r=80); generates 30 line
segments.

Is there a way around this within OpenSCAD or is it just the way that
OpenSCAD generates dxf files?

I use OpenSCAD version 2015.03-3 on OSX (10.10).



--
View this message in context: http://forum.openscad.org/Creating-DXF-file-with-round-shapes-tp17833.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Wed Jun 29 08:56:20 2016
From: doug at moens.org (doug moen)
Date: Wed, 29 Jun 2016 08:56:20 -0400
Subject: [OpenSCAD] Creating DXF file with round shapes
In-Reply-To: <1467200987829-17833.post@n5.nabble.com>
References: <1467200987829-17833.post@n5.nabble.com>
Message-ID: <CAGV6i+P663kaaF0KSpPxegpWffQZiSkSC1bUUzXVFSMymofizg@mail.gmail.com>

OpenSCAD represents 2D shapes as polygons. That's just the way it works. So
circles are represented by regular polygons.

If you write
   projection() cylinder(h=12, r=80, $fn=100);
then you have direct control over the number of line segments used to
approximate the circle (in this case, 100). You can pick a $fn value that's
high enough so that the circle looks good in laser cutter output.

More information here:
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Other_Language_Features#.24fa.2C_.24fs_and_.24fn


On 29 June 2016 at 07:49, Eric Buijs <ebuijs at mac.com> wrote:

> Hello,
>
> I use OpenSCAD to export dxf files that I need for laser cutting. When I
> create circles a dxf file with multiple line segments per circle is
> generated by OpenSCAD. This causes problems on the laser cutter that
> "perceives" this a multiple independent lines.
>
> As an example: projection() cylinder(h=12, r=80); generates 30 line
> segments.
>
> Is there a way around this within OpenSCAD or is it just the way that
> OpenSCAD generates dxf files?
>
> I use OpenSCAD version 2015.03-3 on OSX (10.10).
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Creating-DXF-file-with-round-shapes-tp17833.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160629/579369cd/attachment.html>

From ebuijs at mac.com  Wed Jun 29 10:33:17 2016
From: ebuijs at mac.com (Eric Buijs)
Date: Wed, 29 Jun 2016 07:33:17 -0700 (MST)
Subject: [OpenSCAD] Creating DXF file with round shapes
In-Reply-To: <CAGV6i+P663kaaF0KSpPxegpWffQZiSkSC1bUUzXVFSMymofizg@mail.gmail.com>
References: <1467200987829-17833.post@n5.nabble.com>
	<CAGV6i+P663kaaF0KSpPxegpWffQZiSkSC1bUUzXVFSMymofizg@mail.gmail.com>
Message-ID: <1467210797137-17835.post@n5.nabble.com>

Thanks for the reply. I understand your point. However increasing $fn would
only worsen the problem. Your example would probably result in 100 different
lines in the DFX file. The software on the laser cutter (Coreldraw)
interprets the polygons as separate lines forcing the laser cutter to jump
up and down through the circle, an unwanted situation of course. 

I saw in the past others struggled with a similar problem
(https://github.com/openscad/openscad/pull/448) and, as far as I understand
correctly, made changes to the OpenSCAD source code, creating a polyline
entity in the DFX file instead of the line entity. My guess is that a
(closed) polyline will solve the problem. What I can't figure out if this
change has been reverted or not.




--
View this message in context: http://forum.openscad.org/Creating-DXF-file-with-round-shapes-tp17833p17835.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From R.E.Wolff at BitWizard.nl  Wed Jun 29 12:12:38 2016
From: R.E.Wolff at BitWizard.nl (Rogier Wolff)
Date: Wed, 29 Jun 2016 18:12:38 +0200
Subject: [OpenSCAD] Creating DXF file with round shapes
In-Reply-To: <CAGV6i+P663kaaF0KSpPxegpWffQZiSkSC1bUUzXVFSMymofizg@mail.gmail.com>
References: <1467200987829-17833.post@n5.nabble.com>
	<CAGV6i+P663kaaF0KSpPxegpWffQZiSkSC1bUUzXVFSMymofizg@mail.gmail.com>
Message-ID: <20160629161238.GB24447@BitWizard.nl>

On Wed, Jun 29, 2016 at 08:56:20AM -0400, doug moen wrote:
> OpenSCAD represents 2D shapes as polygons. That's just the way it works. So
> circles are represented by regular polygons.
> 
> If you write

>    projection() cylinder(h=12, r=80, $fn=100);

> then you have direct control over the number of line segments used to
> approximate the circle (in this case, 100). You can pick a $fn value that's
> high enough so that the circle looks good in laser cutter output.

I'm not sure that this is the problem Eric is having. 

When there are SEPARATE line-pieces, the lasercutter will first cut
from say -1,0 to -0.99, 0.1 and then start cutting from +1,0 to
+0.99,0.1 and keep on alternating between the sides of the circle. 

I always import the dxf into coreldraw and then run a macro called
"nodeclean2". This will fixup all the separate line-segments into
multiple segments of one object, so that the objects can be lasered in
one go without any moves inbetween. It also "closes" the object so
that "vectorsort = on" works. (if that's off or not working, the laser
may first decide to cut out your gear, and then later cut the hole in
the middle. But by then the gear has fallen out of the blank, so that
it's moved and out-of-focus...)

	Roger. 

> 
> More information here:
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Other_Language_Features#.24fa.2C_.24fs_and_.24fn
> 
> 
> On 29 June 2016 at 07:49, Eric Buijs <ebuijs at mac.com> wrote:
> 
> > Hello,
> >
> > I use OpenSCAD to export dxf files that I need for laser cutting. When I
> > create circles a dxf file with multiple line segments per circle is
> > generated by OpenSCAD. This causes problems on the laser cutter that
> > "perceives" this a multiple independent lines.
> >
> > As an example: projection() cylinder(h=12, r=80); generates 30 line
> > segments.
> >
> > Is there a way around this within OpenSCAD or is it just the way that
> > OpenSCAD generates dxf files?
> >
> > I use OpenSCAD version 2015.03-3 on OSX (10.10).
> >
> >
> >
> > --
> > View this message in context:
> > http://forum.openscad.org/Creating-DXF-file-with-round-shapes-tp17833.html
> > Sent from the OpenSCAD mailing list archive at Nabble.com.
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> >
> >
> >

> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


-- 
** R.E.Wolff at BitWizard.nl ** http://www.BitWizard.nl/ ** +31-15-2600998 **
**    Delftechpark 26 2628 XH  Delft, The Netherlands. KVK: 27239233    **
*-- BitWizard writes Linux device drivers for any device you may have! --*
The plan was simple, like my brother-in-law Phil. But unlike
Phil, this plan just might work.


From bioinformatics at gringene.org  Wed Jun 29 15:02:09 2016
From: bioinformatics at gringene.org (David Eccles (gringer))
Date: Wed, 29 Jun 2016 12:02:09 -0700 (MST)
Subject: [OpenSCAD] Images on curved (cylindrical) surface
In-Reply-To: <1467200140382-17832.post@n5.nabble.com>
References: <1467131081503-17823.post@n5.nabble.com>
	<1467177766254-17824.post@n5.nabble.com>
	<1467200140382-17832.post@n5.nabble.com>
Message-ID: <1467226929717-17837.post@n5.nabble.com>


But there is also a programmatic solution with current OpenSCAD using some
windowing technique for discretization. Not the fastest but viable

I've got code for making pasta / pastry cutting rollers which imprint a
tessellating image on the surface of a cylinder. The simplest version is one
where the image needs no rotation and can tessellate by simple translation:

http://www.thingiverse.com/thing:1640712

<http://forum.openscad.org/file/n17837/katherine_roller.png> 

It uses hull operations to combine two cylinders at interpolated points
derived from the source polygon. Unfortunately I need to have an
explicitly-defined source polygon at the moment, as I couldn't find a way in
OpenSCAD to extract polygon paths from arbitrary objects. This can be
extracted from SVG paths and pasted into the OpenSCAD code, but it's not
particularly easy for a first-timer to do that.

    pr=20; // pattern radius
    pi=3.1415927;
    cr=3*pr/sin(60)/(2*pi); // cylinder radius
    pf=0.2; // relative size of edge points
    
    // Flattens an array down one level (removing the enclosing array)
    function flatten(pointArray, done=0, res=[]) =
        (done == len(pointArray)) ?
            res :
            flatten(pointArray=pointArray, done=done+1, 
                res=concat(res,pointArray[done]));
                
    // linear interpolation between two points, excludes last point
    function intp(p1, p2, thr=0.5, res = []) = 
        (norm(p2-p1) <= thr) ? concat(res,[p1]) :
            intp(p1=p1 + (thr/norm(p2-p1)) * (p2-p1), p2=p2, 
                thr=thr, res = concat(res,[p1]));
    
    kath_poly = flatten([ for(i=[-30:60:329]) [ 
            [pr*cos(i)-pr*pf*cos(i),pr*sin(i)-pr*pf*sin(i)],
            [pr*cos(i),pr*sin(i)],
            [pr*cos(i)+pr*pf*cos(i+60),pr*sin(i)+pr*pf*sin(i+60)] ]]);
    
    int_kath = flatten([for(i = [0:(len(kath_poly)-1)]) 
            intp(p1=kath_poly[i], p2=kath_poly[(i+1) % len(kath_poly)],
thr=2)]);
    
    cyl_kath = [ for(i = [0:(len(int_kath)-1)])
      [(cr)*cos(int_kath[i][0]/cr * 180/pi),(cr)*sin(int_kath[i][0]/cr *
180/pi),-int_kath[i][1]] ];
    
    module 3d_kath(){
        for(i = [0:(len(cyl_kath)-1)]){
            hull(){
                translate(cyl_kath[i])
                    rotate(int_kath[i][0]/cr * 180/pi) rotate([90,0,90])
                        translate([0,0,1])
                            cylinder(r1=2, r2=0, h=4, $fn=4, center=true);
                translate(cyl_kath[(i+1) % len(cyl_kath)])
                    rotate(int_kath[(i+1) % len(cyl_kath)][0]/cr * 180/pi)
rotate([90,0,90]) 
                        translate([0,0,1])
                            cylinder(r1=2, r2=0, h=4, $fn=4, center=true);
            }
        }
    }
    
    module kath_roller(){
        cylinder(r=cr, h=110, center=true);
        3d_kath();
        rotate(180) 3d_kath();
        translate([0,0,1.5*pr]) rotate(90) 3d_kath();
        translate([0,0,1.5*pr]) rotate(270) 3d_kath();
        translate([0,0,-1.5*pr]) rotate(90) 3d_kath();
        translate([0,0,-1.5*pr]) rotate(270) 3d_kath();
    }

    kath_roller();




--
View this message in context: http://forum.openscad.org/Images-on-curved-cylindrical-surface-tp17823p17837.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From ebuijs at mac.com  Wed Jun 29 15:07:31 2016
From: ebuijs at mac.com (Eric Buijs)
Date: Wed, 29 Jun 2016 12:07:31 -0700 (MST)
Subject: [OpenSCAD] Creating DXF file with round shapes
In-Reply-To: <20160629161238.GB24447@BitWizard.nl>
References: <1467200987829-17833.post@n5.nabble.com>
	<CAGV6i+P663kaaF0KSpPxegpWffQZiSkSC1bUUzXVFSMymofizg@mail.gmail.com>
	<20160629161238.GB24447@BitWizard.nl>
Message-ID: <1467227251233-17838.post@n5.nabble.com>

Hi Roger,

this macro appears to be what I'm looking for. I use the laser cutter of a
local FabLab but I think the're ok if I use a macro. Do you now where I can
get it? Google wasn't very helpful in that respect. Much appreciated.

Eric.



--
View this message in context: http://forum.openscad.org/Creating-DXF-file-with-round-shapes-tp17833p17838.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Wed Jun 29 18:44:28 2016
From: mschafer at wireframe.biz (Neon22)
Date: Wed, 29 Jun 2016 15:44:28 -0700 (MST)
Subject: [OpenSCAD] Images on curved (cylindrical) surface
In-Reply-To: <1467226929717-17837.post@n5.nabble.com>
References: <1467131081503-17823.post@n5.nabble.com>
	<1467177766254-17824.post@n5.nabble.com>
	<1467200140382-17832.post@n5.nabble.com>
	<1467226929717-17837.post@n5.nabble.com>
Message-ID: <1467240268615-17839.post@n5.nabble.com>

However it is easy for a first timer to use unkscape to create the svg and
the openscad export tool to create polygon lists.
- http://www.thingiverse.com/thing:1065500

@david can you adjust your code to take those lists ?



--
View this message in context: http://forum.openscad.org/Images-on-curved-cylindrical-surface-tp17823p17839.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Thu Jun 30 10:10:21 2016
From: marius at kintel.net (Marius Kintel)
Date: Thu, 30 Jun 2016 10:10:21 -0400
Subject: [OpenSCAD] Creating DXF file with round shapes
In-Reply-To: <1467210797137-17835.post@n5.nabble.com>
References: <1467200987829-17833.post@n5.nabble.com>
	<CAGV6i+P663kaaF0KSpPxegpWffQZiSkSC1bUUzXVFSMymofizg@mail.gmail.com>
	<1467210797137-17835.post@n5.nabble.com>
Message-ID: <B339966F-ADBC-4152-A985-AE782A6BEC7A@kintel.net>

> On Jun 29, 2016, at 10:33 AM, Eric Buijs <ebuijs at mac.com> wrote:
> 
> I saw in the past others struggled with a similar problem
> (https://github.com/openscad/openscad/pull/448) and, as far as I understand
> correctly, made changes to the OpenSCAD source code, creating a polyline
> entity in the DFX file instead of the line entity. My guess is that a
> (closed) polyline will solve the problem. What I can't figure out if this
> change has been reverted or not.
> 
That particular pull request wasn?t accepted since it broke other workflows. To do this properly, we need to write some tests to make sure our DXF outputs remains compatible with various other software.

 -Marius
 

From dmcnutt at macnauchtan.com  Thu Jun 30 10:55:34 2016
From: dmcnutt at macnauchtan.com (Doug McNutt)
Date: Thu, 30 Jun 2016 10:55:34 -0400
Subject: [OpenSCAD] Can't figure out how to draw thin cylinders.
Message-ID: <577532E6.506@macnauchtan.com>

pcbradin = 2.5; // inside radius of cktboard
pcbradout = 5.0; // outside radius of cktboard
pcbthin = 1/16;  // thickness of circuit board
pcbthick = 1/8;  // thickness of the subtracted cylinder
render (convexity=100) difference()
{
color("red");
echo ("first",pcbthin, pcbthick);
color("red") cylinder(h=pcbthin,r=pcbradout,$fn=100,true);
echo ("second",pcbthin, pcbthick);
color("blue") cylinder(h=pcbthick ,r=pcbradin,$fn=100,true);
}
color("blue") cube([pcbthick,pcbradin,5], true);

It's a first pass into creating some 3D presentations. But it's also my 
first time with the code.

I have a printed circuit board that needs to be circular with a hole in 
the center. Gerber files I have handled, but I need to mount the thing 
using ball bearings.

I'm failing to get a decent picture when I run the above which displays 
the circuit board with a 1 "inch" thickness that just won't go down to 
the 1/16 inch that's the real thickness.

I'm trying to subtract a smaller cylinder from one with an undesired 
center. Without the "render" command the cylinders look OK and have the 
requested colors but the smallest dimension I see is still one inch.

With the render as above all I get is an annulus with the right sized 
hole but 1 inch thick. None of the colors, except for the test "cube" at 
the bottom, are recognized.

Please hold my hand. I'm willing to admit I came from FORTRAN without a 
date code but I like perl and ubuntu is like the old days.


From nop.head at gmail.com  Thu Jun 30 11:10:18 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 30 Jun 2016 16:10:18 +0100
Subject: [OpenSCAD] Can't figure out how to draw thin cylinders.
In-Reply-To: <577532E6.506@macnauchtan.com>
References: <577532E6.506@macnauchtan.com>
Message-ID: <CAEEmnrOnTANSWiYS_a_QurWGZFQWhM8UBWnCg4w3DygZ_+XY0g@mail.gmail.com>

The reason it looked bad without render is you subtracted things with
coincident faces. You should always avoid that with some overlap.

The reason you got heights of 1 is the extra true parameter. I don't think
you can mix named and unnamed parameters.

This works:

pcbradin = 2.5; // inside radius of cktboard
pcbradout = 5.0; // outside radius of cktboard
pcbthin = 1/16;  // thickness of circuit board
pcbthick = 1/8;  // thickness of the subtracted cylinder
difference()
{
echo ("first",pcbthin, pcbthick);
color("red") cylinder(h=pcbthin,r=pcbradout,$fn=100);
echo ("second",pcbthin, pcbthick);
translate([0, 0, -1])
    color("blue") cylinder(h=pcbthick + 2 ,r=pcbradin,$fn=100);
}
color("blue") cube([pcbthick,pcbradin,5], true);


On 30 June 2016 at 15:55, Doug McNutt <dmcnutt at macnauchtan.com> wrote:

> pcbradin = 2.5; // inside radius of cktboard
> pcbradout = 5.0; // outside radius of cktboard
> pcbthin = 1/16;  // thickness of circuit board
> pcbthick = 1/8;  // thickness of the subtracted cylinder
> render (convexity=100) difference()
> {
> color("red");
> echo ("first",pcbthin, pcbthick);
> color("red") cylinder(h=pcbthin,r=pcbradout,$fn=100,true);
> echo ("second",pcbthin, pcbthick);
> color("blue") cylinder(h=pcbthick ,r=pcbradin,$fn=100,true);
> }
> color("blue") cube([pcbthick,pcbradin,5], true);
>
> It's a first pass into creating some 3D presentations. But it's also my
> first time with the code.
>
> I have a printed circuit board that needs to be circular with a hole in
> the center. Gerber files I have handled, but I need to mount the thing
> using ball bearings.
>
> I'm failing to get a decent picture when I run the above which displays
> the circuit board with a 1 "inch" thickness that just won't go down to the
> 1/16 inch that's the real thickness.
>
> I'm trying to subtract a smaller cylinder from one with an undesired
> center. Without the "render" command the cylinders look OK and have the
> requested colors but the smallest dimension I see is still one inch.
>
> With the render as above all I get is an annulus with the right sized hole
> but 1 inch thick. None of the colors, except for the test "cube" at the
> bottom, are recognized.
>
> Please hold my hand. I'm willing to admit I came from FORTRAN without a
> date code but I like perl and ubuntu is like the old days.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160630/6db3c0da/attachment.html>

From rudolf at parkinbot.com  Thu Jun 30 11:22:19 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Thu, 30 Jun 2016 08:22:19 -0700 (MST)
Subject: [OpenSCAD] Creating DXF file with round shapes
In-Reply-To: <B339966F-ADBC-4152-A985-AE782A6BEC7A@kintel.net>
References: <1467200987829-17833.post@n5.nabble.com>
	<CAGV6i+P663kaaF0KSpPxegpWffQZiSkSC1bUUzXVFSMymofizg@mail.gmail.com>
	<1467210797137-17835.post@n5.nabble.com>
	<B339966F-ADBC-4152-A985-AE782A6BEC7A@kintel.net>
Message-ID: <1467300139404-17843.post@n5.nabble.com>

I am using this path sometimes to get hands on coordinates of OpenSCAD
2D-shapes, like subtractively generatated involute gears. For this I am also
missing a  LWPOLYLINE
<http://www.autodesk.com/techpubs/autocad/acad2000/dxf/lwpolyline_dxf_06.htm> 
option, which you have e.g. in Inkscape. 

While the full polyline information is derivable from simple LINE output -
by interpreting matching start and end points of the lines - it would be
nicer and more robust if a parser could go for a polyline. 



--
View this message in context: http://forum.openscad.org/Creating-DXF-file-with-round-shapes-tp17833p17843.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Thu Jun 30 11:35:39 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Thu, 30 Jun 2016 08:35:39 -0700 (MST)
Subject: [OpenSCAD] Can't figure out how to draw thin cylinders.
In-Reply-To: <CAEEmnrOnTANSWiYS_a_QurWGZFQWhM8UBWnCg4w3DygZ_+XY0g@mail.gmail.com>
References: <577532E6.506@macnauchtan.com>
	<CAEEmnrOnTANSWiYS_a_QurWGZFQWhM8UBWnCg4w3DygZ_+XY0g@mail.gmail.com>
Message-ID: <1467300939395-17844.post@n5.nabble.com>

Another thing: OpenSCAD displays and exports in mm. To switch to inch you
have to introduce a factor: 

inch = 25.4; 

pcbradin = 2.5*inch; // inside radius of cktboard
pcbradout = 5.0*inch; // outside radius of cktboard
pcbthin = 1/16*inch;  // thickness of circuit board
pcbthick = 1/8*inch;  // thickness of the subtracted cylinder
//render (convexity=1) 
difference()
{
color("red");
echo ("first",pcbthin, pcbthick);
color("red") cylinder(h=pcbthin,r=pcbradout,$fn=100, center = true);
echo ("second",pcbthin, pcbthick);
color("blue") cylinder(h=pcbthick+1 ,r=pcbradin,$fn=100,center=true);
}
color("blue") cube([pcbthick,pcbradin,5*inch], center=true); 





--
View this message in context: http://forum.openscad.org/Can-t-figure-out-how-to-draw-thin-cylinders-tp17841p17844.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Thu Jun 30 13:58:38 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 30 Jun 2016 18:58:38 +0100
Subject: [OpenSCAD] Can't figure out how to draw thin cylinders.
In-Reply-To: <1467300939395-17844.post@n5.nabble.com>
References: <577532E6.506@macnauchtan.com>
	<CAEEmnrOnTANSWiYS_a_QurWGZFQWhM8UBWnCg4w3DygZ_+XY0g@mail.gmail.com>
	<1467300939395-17844.post@n5.nabble.com>
Message-ID: <CAEEmnrO-=NmLQ8Oe+Kv54vnCxQ94Un8RXm3ubqrCz59JC09nyw@mail.gmail.com>

OpenScad is unit-less and so is STL. It is tools downstream that determine
what the units are.

On 30 June 2016 at 16:35, Parkinbot <rudolf at parkinbot.com> wrote:

> Another thing: OpenSCAD displays and exports in mm. To switch to inch you
> have to introduce a factor:
>
> inch = 25.4;
>
> pcbradin = 2.5*inch; // inside radius of cktboard
> pcbradout = 5.0*inch; // outside radius of cktboard
> pcbthin = 1/16*inch;  // thickness of circuit board
> pcbthick = 1/8*inch;  // thickness of the subtracted cylinder
> //render (convexity=1)
> difference()
> {
> color("red");
> echo ("first",pcbthin, pcbthick);
> color("red") cylinder(h=pcbthin,r=pcbradout,$fn=100, center = true);
> echo ("second",pcbthin, pcbthick);
> color("blue") cylinder(h=pcbthick+1 ,r=pcbradin,$fn=100,center=true);
> }
> color("blue") cube([pcbthick,pcbradin,5*inch], center=true);
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Can-t-figure-out-how-to-draw-thin-cylinders-tp17841p17844.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160630/fa6a13ae/attachment.html>

From rudolf at parkinbot.com  Thu Jun 30 18:26:32 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Thu, 30 Jun 2016 15:26:32 -0700 (MST)
Subject: [OpenSCAD] Can't figure out how to draw thin cylinders.
In-Reply-To: <CAEEmnrO-=NmLQ8Oe+Kv54vnCxQ94Un8RXm3ubqrCz59JC09nyw@mail.gmail.com>
References: <577532E6.506@macnauchtan.com>
	<CAEEmnrOnTANSWiYS_a_QurWGZFQWhM8UBWnCg4w3DygZ_+XY0g@mail.gmail.com>
	<1467300939395-17844.post@n5.nabble.com>
	<CAEEmnrO-=NmLQ8Oe+Kv54vnCxQ94Un8RXm3ubqrCz59JC09nyw@mail.gmail.com>
Message-ID: <1467325592577-17846.post@n5.nabble.com>

You are perfectly right. As almost all tools downstream will interpret units
as mm, it's worth mentioning it, to prevent unexpected results. 

And if you remind  this discussion
<http://forum.openscad.org/strange-polygon-behaviour-in-small-scale-tp17390.html>  
it is not advisable to use very small values in OpenSCAD, because there is
some unexpected rounding "magic" going on behind the scenes. So it is not a
good idea to use inches for a design that is going to be specified in
fractions of inches. 



--
View this message in context: http://forum.openscad.org/Can-t-figure-out-how-to-draw-thin-cylinders-tp17841p17846.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Thu Jun 30 18:32:08 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Thu, 30 Jun 2016 15:32:08 -0700 (MST)
Subject: [OpenSCAD] Can't figure out how to draw thin cylinders.
In-Reply-To: <CAEEmnrOnTANSWiYS_a_QurWGZFQWhM8UBWnCg4w3DygZ_+XY0g@mail.gmail.com>
References: <577532E6.506@macnauchtan.com>
	<CAEEmnrOnTANSWiYS_a_QurWGZFQWhM8UBWnCg4w3DygZ_+XY0g@mail.gmail.com>
Message-ID: <1467325928512-17847.post@n5.nabble.com>

nophead wrote
> I don't think you can mix named and unnamed parameters.

Is this a general rule? If I define a function or module with arguments
f(a=0,b=0,c=1), would be irregular to write a call like f(5,c=3) intending
f(a=5,b=0,c=3) ?
I could not find any mention on this in the Wiki Manual except in the
cylinder description.




--
View this message in context: http://forum.openscad.org/Can-t-figure-out-how-to-draw-thin-cylinders-tp17841p17847.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Thu Jun 30 18:43:00 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Thu, 30 Jun 2016 15:43:00 -0700 (MST)
Subject: [OpenSCAD] Can't figure out how to draw thin cylinders.
In-Reply-To: <1467325928512-17847.post@n5.nabble.com>
References: <577532E6.506@macnauchtan.com>
	<CAEEmnrOnTANSWiYS_a_QurWGZFQWhM8UBWnCg4w3DygZ_+XY0g@mail.gmail.com>
	<1467325928512-17847.post@n5.nabble.com>
Message-ID: <1467326580335-17848.post@n5.nabble.com>

My experience is, you can mix named and unnamed parameters. But you have to
take care. 
The unnamed are counted by place. You can redefine a parameter multiple
times. The last definition will win.  

test(10, c=20); 
test(a=10, 20); 
test(10, a=20, a=30, a=40); 

module test(a = 1, b = 2, c=3) echo(a,b,c); 




--
View this message in context: http://forum.openscad.org/Can-t-figure-out-how-to-draw-thin-cylinders-tp17841p17848.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


