From nigel at nigeljohnson.net  Wed Apr  1 03:14:26 2015
From: nigel at nigeljohnson.net (nigeljohnson73)
Date: Wed, 1 Apr 2015 00:14:26 -0700 (MST)
Subject: [OpenSCAD] Incrementing a variable doesn't work as expected.
Message-ID: <1427872466967-12271.post@n5.nabble.com>

I'm trying to do some morse code, but I'm struggling to work out the start
position of the 'dit' and the 'dah'... I think first, the code...

id=1;wt=1; // for a ring, don't worry about these
lu = 1; // letter unit. a dit is 1 unit wide, a dah is 3, and the gap
between them is 1.
module drawChar(s) {
	echo("char: ", s);
	pos = 0;
	for(i = [0:len(s)-1]) {
		inc = 0;
		if(s[i] == ".") {
			echo(s[i], "dit ",pos," ", inc);
			translate([pos+lu/2,0,0]) cylinder(r=lu/2, h = (id+wt+2)/2);
			inc = (1 + 1)*lu;
		} else if(s[i] == "-") {
			echo(s[i], "dah ",pos," ", inc);
			translate([pos,-lu/2,0]) cube([3*lu,lu,(id+wt+2)/2]);
			inc = (3+1)*lu;
		}
		pos = pos + inc; // the inc seems to have gone out of scope
	}
}
drawChar("--.-"); // this is a 'q'

This is the output:

ECHO: "char: ", "--.-"
ECHO: "-", "dah ", 0, " ", 4
ECHO: "-", "dah ", 0, " ", 4
ECHO: ".", "dit ", 0, " ", 2
ECHO: "-", "dah ", 0, " ", 4

I have tried many ways to calculate 'pos' - the starting point of the
dit/dah. So the bit that's getting me is the way assignments seem to work -
basically pos always stays zero. Also at the point of echoing inc, I'm
expecting it to still be zero.

2 questions I suppose, a learning point for me, what's going on? and second,
how do I make it do what I want it to do?

I was thinking of some way to count the occurances of '.' and '-' in the
array as a function multiplying accordingly, but my brain melted a little -
it is early.

Any help much appreciated
Nigel



--
View this message in context: http://forum.openscad.org/Incrementing-a-variable-doesn-t-work-as-expected-tp12271.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nigel at nigeljohnson.net  Wed Apr  1 03:44:39 2015
From: nigel at nigeljohnson.net (nigeljohnson73)
Date: Wed, 1 Apr 2015 00:44:39 -0700 (MST)
Subject: [OpenSCAD] Incrementing a variable doesn't work as expected.
In-Reply-To: <1427872466967-12271.post@n5.nabble.com>
References: <1427872466967-12271.post@n5.nabble.com>
Message-ID: <1427874279409-12272.post@n5.nabble.com>

For info, here is my recursive position counter that fails:

function cpos(s, n) = cpos(s,n-1) + (n == -1) ? (0) : ( (s[n]==".") ? 2 :
4);

when I use it instead of pos in the x coordinate for example in the dit:

translate([cpos(s,i)+lu/2,0,0]) cylinder(r=lu/2, h = (id+wt+2)/2);

it says recursion detected. It's not lying  but the manual says I can do
recursion with the trigraph stuff.





--
View this message in context: http://forum.openscad.org/Incrementing-a-variable-doesn-t-work-as-expected-tp12271p12272.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Wed Apr  1 04:32:03 2015
From: nop.head at gmail.com (nop head)
Date: Wed, 1 Apr 2015 09:32:03 +0100
Subject: [OpenSCAD] Incrementing a variable doesn't work as expected.
In-Reply-To: <1427874279409-12272.post@n5.nabble.com>
References: <1427872466967-12271.post@n5.nabble.com>
	<1427874279409-12272.post@n5.nabble.com>
Message-ID: <CAEEmnrN-ARHmRUP3uX0m3oVSM-ARChEGKa+JrXLKLHN0209qug@mail.gmail.com>

You can't modify variables, so not only is inc out of scope but you can't
change the value of pos.

Recursion is the right way to do it but you have infinite recursion because
you unconditionally call cpos(s,n-1).

On 1 April 2015 at 08:44, nigeljohnson73 <nigel at nigeljohnson.net> wrote:

> For info, here is my recursive position counter that fails:
>
> function cpos(s, n) = cpos(s,n-1) + (n == -1) ? (0) : ( (s[n]==".") ? 2 :
> 4);
>
> when I use it instead of pos in the x coordinate for example in the dit:
>
> translate([cpos(s,i)+lu/2,0,0]) cylinder(r=lu/2, h = (id+wt+2)/2);
>
> it says recursion detected. It's not lying  but the manual says I can do
> recursion with the trigraph stuff.
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Incrementing-a-variable-doesn-t-work-as-expected-tp12271p12272.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150401/e7b4a188/attachment.html>

From stempeldergeschichte at googlemail.com  Wed Apr  1 04:50:49 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Wed, 1 Apr 2015 10:50:49 +0200
Subject: [OpenSCAD] Incrementing a variable doesn't work as expected.
In-Reply-To: <1427874279409-12272.post@n5.nabble.com>
References: <1427872466967-12271.post@n5.nabble.com>
	<1427874279409-12272.post@n5.nabble.com>
Message-ID: <CAJgOqAAEN3kgeBgC6AH_ioOTQtwoQ1vDKeXYyADkE8=Lu3zZzg@mail.gmail.com>

Are ypu using a current version of OpenSCAD? The latest?


2015-04-01 9:44 GMT+02:00 nigeljohnson73 <nigel at nigeljohnson.net>:

> For info, here is my recursive position counter that fails:
>
> function cpos(s, n) = cpos(s,n-1) + (n == -1) ? (0) : ( (s[n]==".") ? 2 :
> 4);
>
> when I use it instead of pos in the x coordinate for example in the dit:
>
> translate([cpos(s,i)+lu/2,0,0]) cylinder(r=lu/2, h = (id+wt+2)/2);
>
> it says recursion detected. It's not lying  but the manual says I can do
> recursion with the trigraph stuff.
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Incrementing-a-variable-doesn-t-work-as-expected-tp12271p12272.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>



-- 
stempeldergeschichte at googlemail.com <karsten at rohrbach.de>

P.S. Falls meine E-Mail k?rzer ausf?llt als Dir angenehm ist:
Ich probiere gerade aus kurze Antworten statt gar keine Antworten zu
schreiben.
Wenn Du gerne mehr lesen m?chtest, dann lass es mich bitte wissen.

P.S. In case my e-mail is shorter than you enjoy:
I am currently trying short replies instead of no replies at all.
Please let me know, if you like to read more.

Enjoy!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150401/59212387/attachment.html>

From nigel at nigeljohnson.net  Wed Apr  1 04:51:53 2015
From: nigel at nigeljohnson.net (nigeljohnson73)
Date: Wed, 1 Apr 2015 01:51:53 -0700 (MST)
Subject: [OpenSCAD] Incrementing a variable doesn't work as expected.
In-Reply-To: <CAEEmnrN-ARHmRUP3uX0m3oVSM-ARChEGKa+JrXLKLHN0209qug@mail.gmail.com>
References: <1427872466967-12271.post@n5.nabble.com>
	<1427874279409-12272.post@n5.nabble.com>
	<CAEEmnrN-ARHmRUP3uX0m3oVSM-ARChEGKa+JrXLKLHN0209qug@mail.gmail.com>
Message-ID: <1427878313905-12275.post@n5.nabble.com>

Doh!!! yep.

I moved the conditional calling, but this is still not playing nicely:

function cpos(s, n) = (n == -1) ? (0) : ( cpos(s,n-1) + (s[n]==".") ? 2 : 4
); 


echo ("--.-, 0: ", cpos("--.",0));
echo ("--.-, 1: ", cpos("--.",1));
echo ("--.-, 2: ", cpos("--.",2));
echo ("--.-, 3: ", cpos("--.",3));

ECHO: "--.-, 0: ", 4
ECHO: "--.-, 1: ", 4
ECHO: "--.-, 2: ", 4
ECHO: "--.-, 3: ", 4

I have also noticed a problem in that 0 should be 0 which I'll fix later,
but that aside, I would expect the following

ECHO: "--.-, 0: ", 4
ECHO: "--.-, 1: ", 8
ECHO: "--.-, 2: ", 10
ECHO: "--.-, 3: ", 14




--
View this message in context: http://forum.openscad.org/Incrementing-a-variable-doesn-t-work-as-expected-tp12271p12275.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nigel at nigeljohnson.net  Wed Apr  1 04:52:48 2015
From: nigel at nigeljohnson.net (nigeljohnson73)
Date: Wed, 1 Apr 2015 01:52:48 -0700 (MST)
Subject: [OpenSCAD] Incrementing a variable doesn't work as expected.
In-Reply-To: <CAJgOqAAEN3kgeBgC6AH_ioOTQtwoQ1vDKeXYyADkE8=Lu3zZzg@mail.gmail.com>
References: <1427872466967-12271.post@n5.nabble.com>
	<1427874279409-12272.post@n5.nabble.com>
	<CAJgOqAAEN3kgeBgC6AH_ioOTQtwoQ1vDKeXYyADkE8=Lu3zZzg@mail.gmail.com>
Message-ID: <1427878368316-12276.post@n5.nabble.com>

Sorry, yep, I'm using the latest release 2015.03 on both mac and windows



--
View this message in context: http://forum.openscad.org/Incrementing-a-variable-doesn-t-work-as-expected-tp12271p12276.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From stempeldergeschichte at googlemail.com  Wed Apr  1 04:54:47 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Wed, 1 Apr 2015 10:54:47 +0200
Subject: [OpenSCAD] Incrementing a variable doesn't work as expected.
In-Reply-To: <CAJgOqAAEN3kgeBgC6AH_ioOTQtwoQ1vDKeXYyADkE8=Lu3zZzg@mail.gmail.com>
References: <1427872466967-12271.post@n5.nabble.com>
	<1427874279409-12272.post@n5.nabble.com>
	<CAJgOqAAEN3kgeBgC6AH_ioOTQtwoQ1vDKeXYyADkE8=Lu3zZzg@mail.gmail.com>
Message-ID: <CAJgOqABD35=uO=0jcTEbuu0WhQOeB0eZNyeojF3m=kn6CSZ6DQ@mail.gmail.com>

You can not reassign variables. Variables in OpenSCAD are constants.
Please have a look at the manual:
http://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language#Variables

2015-04-01 10:50 GMT+02:00 Peter Falke <stempeldergeschichte at googlemail.com>
:

> Are ypu using a current version of OpenSCAD? The latest?
>
>
> 2015-04-01 9:44 GMT+02:00 nigeljohnson73 <nigel at nigeljohnson.net>:
>
>> For info, here is my recursive position counter that fails:
>>
>> function cpos(s, n) = cpos(s,n-1) + (n == -1) ? (0) : ( (s[n]==".") ? 2 :
>> 4);
>>
>> when I use it instead of pos in the x coordinate for example in the dit:
>>
>> translate([cpos(s,i)+lu/2,0,0]) cylinder(r=lu/2, h = (id+wt+2)/2);
>>
>> it says recursion detected. It's not lying  but the manual says I can do
>> recursion with the trigraph stuff.
>>
>>
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/Incrementing-a-variable-doesn-t-work-as-expected-tp12271p12272.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
>
> --
> stempeldergeschichte at googlemail.com <karsten at rohrbach.de>
>
> P.S. Falls meine E-Mail k?rzer ausf?llt als Dir angenehm ist:
> Ich probiere gerade aus kurze Antworten statt gar keine Antworten zu
> schreiben.
> Wenn Du gerne mehr lesen m?chtest, dann lass es mich bitte wissen.
>
> P.S. In case my e-mail is shorter than you enjoy:
> I am currently trying short replies instead of no replies at all.
> Please let me know, if you like to read more.
>
> Enjoy!
>



-- 
stempeldergeschichte at googlemail.com <karsten at rohrbach.de>

P.S. Falls meine E-Mail k?rzer ausf?llt als Dir angenehm ist:
Ich probiere gerade aus kurze Antworten statt gar keine Antworten zu
schreiben.
Wenn Du gerne mehr lesen m?chtest, dann lass es mich bitte wissen.

P.S. In case my e-mail is shorter than you enjoy:
I am currently trying short replies instead of no replies at all.
Please let me know, if you like to read more.

Enjoy!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150401/ccceba58/attachment.html>

From nigel at nigeljohnson.net  Wed Apr  1 04:56:53 2015
From: nigel at nigeljohnson.net (nigeljohnson73)
Date: Wed, 1 Apr 2015 01:56:53 -0700 (MST)
Subject: [OpenSCAD] Incrementing a variable doesn't work as expected.
In-Reply-To: <CAJgOqABD35=uO=0jcTEbuu0WhQOeB0eZNyeojF3m=kn6CSZ6DQ@mail.gmail.com>
References: <1427872466967-12271.post@n5.nabble.com>
	<1427874279409-12272.post@n5.nabble.com>
	<CAJgOqAAEN3kgeBgC6AH_ioOTQtwoQ1vDKeXYyADkE8=Lu3zZzg@mail.gmail.com>
	<CAJgOqABD35=uO=0jcTEbuu0WhQOeB0eZNyeojF3m=kn6CSZ6DQ@mail.gmail.com>
Message-ID: <1427878613018-12278.post@n5.nabble.com>

Yep, I'm now using recursion to bypass that :) but it seems I'm a bit rusty
at that as well.



--
View this message in context: http://forum.openscad.org/Incrementing-a-variable-doesn-t-work-as-expected-tp12271p12278.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From stempeldergeschichte at googlemail.com  Wed Apr  1 05:00:38 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Wed, 1 Apr 2015 11:00:38 +0200
Subject: [OpenSCAD] Incrementing a variable doesn't work as expected.
In-Reply-To: <CAJgOqABD35=uO=0jcTEbuu0WhQOeB0eZNyeojF3m=kn6CSZ6DQ@mail.gmail.com>
References: <1427872466967-12271.post@n5.nabble.com>
	<1427874279409-12272.post@n5.nabble.com>
	<CAJgOqAAEN3kgeBgC6AH_ioOTQtwoQ1vDKeXYyADkE8=Lu3zZzg@mail.gmail.com>
	<CAJgOqABD35=uO=0jcTEbuu0WhQOeB0eZNyeojF3m=kn6CSZ6DQ@mail.gmail.com>
Message-ID: <CAJgOqAATpEmLd+6BV-D74WNu4qhn2-x0WdLyvH2dpr1PTeYsAA@mail.gmail.com>

               pos = pos + inc; // the inc seems to have gone out of scope

This is the problem: this is the last definition for pos, so only this one
is used (pos=0 will be ignored).
And it is undefined, as when the left side is assigned the right side has
no meaning,yet. Its a recursion.

2015-04-01 10:54 GMT+02:00 Peter Falke <stempeldergeschichte at googlemail.com>
:

> You can not reassign variables. Variables in OpenSCAD are constants.
> Please have a look at the manual:
>
> http://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language#Variables
>
> 2015-04-01 10:50 GMT+02:00 Peter Falke <
> stempeldergeschichte at googlemail.com>:
>
>> Are ypu using a current version of OpenSCAD? The latest?
>>
>>
>> 2015-04-01 9:44 GMT+02:00 nigeljohnson73 <nigel at nigeljohnson.net>:
>>
>>> For info, here is my recursive position counter that fails:
>>>
>>> function cpos(s, n) = cpos(s,n-1) + (n == -1) ? (0) : ( (s[n]==".") ? 2 :
>>> 4);
>>>
>>> when I use it instead of pos in the x coordinate for example in the dit:
>>>
>>> translate([cpos(s,i)+lu/2,0,0]) cylinder(r=lu/2, h = (id+wt+2)/2);
>>>
>>> it says recursion detected. It's not lying  but the manual says I can do
>>> recursion with the trigraph stuff.
>>>
>>>
>>>
>>>
>>>
>>> --
>>> View this message in context:
>>> http://forum.openscad.org/Incrementing-a-variable-doesn-t-work-as-expected-tp12271p12272.html
>>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>
>>
>>
>> --
>> stempeldergeschichte at googlemail.com <karsten at rohrbach.de>
>>
>> P.S. Falls meine E-Mail k?rzer ausf?llt als Dir angenehm ist:
>> Ich probiere gerade aus kurze Antworten statt gar keine Antworten zu
>> schreiben.
>> Wenn Du gerne mehr lesen m?chtest, dann lass es mich bitte wissen.
>>
>> P.S. In case my e-mail is shorter than you enjoy:
>> I am currently trying short replies instead of no replies at all.
>> Please let me know, if you like to read more.
>>
>> Enjoy!
>>
>
>
>
> --
> stempeldergeschichte at googlemail.com <karsten at rohrbach.de>
>
> P.S. Falls meine E-Mail k?rzer ausf?llt als Dir angenehm ist:
> Ich probiere gerade aus kurze Antworten statt gar keine Antworten zu
> schreiben.
> Wenn Du gerne mehr lesen m?chtest, dann lass es mich bitte wissen.
>
> P.S. In case my e-mail is shorter than you enjoy:
> I am currently trying short replies instead of no replies at all.
> Please let me know, if you like to read more.
>
> Enjoy!
>



-- 
stempeldergeschichte at googlemail.com <karsten at rohrbach.de>

P.S. Falls meine E-Mail k?rzer ausf?llt als Dir angenehm ist:
Ich probiere gerade aus kurze Antworten statt gar keine Antworten zu
schreiben.
Wenn Du gerne mehr lesen m?chtest, dann lass es mich bitte wissen.

P.S. In case my e-mail is shorter than you enjoy:
I am currently trying short replies instead of no replies at all.
Please let me know, if you like to read more.

Enjoy!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150401/b1b6bb3d/attachment.html>

From nigel at nigeljohnson.net  Wed Apr  1 05:14:31 2015
From: nigel at nigeljohnson.net (nigeljohnson73)
Date: Wed, 1 Apr 2015 02:14:31 -0700 (MST)
Subject: [OpenSCAD] Incrementing a variable doesn't work as expected.
In-Reply-To: <CAJgOqAATpEmLd+6BV-D74WNu4qhn2-x0WdLyvH2dpr1PTeYsAA@mail.gmail.com>
References: <1427872466967-12271.post@n5.nabble.com>
	<1427874279409-12272.post@n5.nabble.com>
	<CAJgOqAAEN3kgeBgC6AH_ioOTQtwoQ1vDKeXYyADkE8=Lu3zZzg@mail.gmail.com>
	<CAJgOqABD35=uO=0jcTEbuu0WhQOeB0eZNyeojF3m=kn6CSZ6DQ@mail.gmail.com>
	<CAJgOqAATpEmLd+6BV-D74WNu4qhn2-x0WdLyvH2dpr1PTeYsAA@mail.gmail.com>
Message-ID: <1427879671773-12280.post@n5.nabble.com>

Yeah I'm not doing that any more because it doesn't work. I've moved to
recursion. Possibly an email lag?

This is what is now not working:

function cpos(s, n) = (n == -1) ? (0) : ( cpos(s,n-1) + (s[n]==".") ? 2 : 4
); 

cpos("--.-",3) returns 4, instead of 14.





--
View this message in context: http://forum.openscad.org/Incrementing-a-variable-doesn-t-work-as-expected-tp12271p12280.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nigel at nigeljohnson.net  Wed Apr  1 05:26:49 2015
From: nigel at nigeljohnson.net (nigeljohnson73)
Date: Wed, 1 Apr 2015 02:26:49 -0700 (MST)
Subject: [OpenSCAD] Incrementing a variable doesn't work as expected.
In-Reply-To: <1427878313905-12275.post@n5.nabble.com>
References: <1427872466967-12271.post@n5.nabble.com>
	<1427874279409-12272.post@n5.nabble.com>
	<CAEEmnrN-ARHmRUP3uX0m3oVSM-ARChEGKa+JrXLKLHN0209qug@mail.gmail.com>
	<1427878313905-12275.post@n5.nabble.com>
Message-ID: <1427880409970-12281.post@n5.nabble.com>

function cpos(s, n) = (n == -1) ? (0) : ( cpos(s,n-1) + (s[n]==".") ? 2 : 4
); 

// run through expected results from cpos ("--.-", 3): 

s = "--.-";

echo (s[0]=="."? 2 : 4); // Outputs "ECHO: 4" - CORRECT
echo (s[1]=="."? 2 : 4); // Outputs "ECHO: 4" - CORRECT
echo (s[2]=="."? 2 : 4); // Outputs "ECHO: 2" - CORRECT
echo (s[3]=="."? 2 : 4); // Outputs "ECHO: 4" - CORRECT

echo (  0                // n = -1
        + s[0]=="."?2:4  // n = 0 so should be 4
        + s[1]=="."?2:4  // n = 1 so should be 4 
        + s[2]=="."?2:4  // n = 2 so should be 2
        + s[3]=="."?2:4  // n = 3 so should be 4
    ); // Outputs "ECHO: 4" - should be 0 + 4 + 4 + 2 + 4 = 14




--
View this message in context: http://forum.openscad.org/Incrementing-a-variable-doesn-t-work-as-expected-tp12271p12281.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Wed Apr  1 05:57:51 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Wed, 1 Apr 2015 02:57:51 -0700 (MST)
Subject: [OpenSCAD] Incrementing a variable doesn't work as expected.
In-Reply-To: <1427880409970-12281.post@n5.nabble.com>
References: <1427872466967-12271.post@n5.nabble.com>
	<1427874279409-12272.post@n5.nabble.com>
	<CAEEmnrN-ARHmRUP3uX0m3oVSM-ARChEGKa+JrXLKLHN0209qug@mail.gmail.com>
	<1427878313905-12275.post@n5.nabble.com>
	<1427880409970-12281.post@n5.nabble.com>
Message-ID: <1427882271578-12282.post@n5.nabble.com>

BTW you may want to check out  assign() [depricated]
<https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Conditional_and_Iterator_Functions#Assign_Statement>  
and  this.
<https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/List_Comprehensions>  



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Incrementing-a-variable-doesn-t-work-as-expected-tp12271p12282.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Wed Apr  1 06:07:22 2015
From: nop.head at gmail.com (nop head)
Date: Wed, 1 Apr 2015 11:07:22 +0100
Subject: [OpenSCAD] Incrementing a variable doesn't work as expected.
In-Reply-To: <1427882271578-12282.post@n5.nabble.com>
References: <1427872466967-12271.post@n5.nabble.com>
	<1427874279409-12272.post@n5.nabble.com>
	<CAEEmnrN-ARHmRUP3uX0m3oVSM-ARChEGKa+JrXLKLHN0209qug@mail.gmail.com>
	<1427878313905-12275.post@n5.nabble.com>
	<1427880409970-12281.post@n5.nabble.com>
	<1427882271578-12282.post@n5.nabble.com>
Message-ID: <CAEEmnrNxHJFPHZnduMD4XDTWQMJsFFiKdaWLpP=FNiyH0TG32g@mail.gmail.com>

Your last example works if you add some brackets

echo (  0                // n = -1
        + (s[0]=="."?2:4)  // n = 0 so should be 4
        + (s[1]=="."?2:4)  // n = 1 so should be 4
        + (s[2]=="."?2:4)  // n = 2 so should be 2
        + (s[3]=="."?2:4)  // n = 3 so should be 4
    ); // Outputs "ECHO: 14"


On 1 April 2015 at 10:57, MichaelAtOz <oz.at.michael at gmail.com> wrote:

> BTW you may want to check out  assign() [depricated]
> <
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Conditional_and_Iterator_Functions#Assign_Statement
> >
> and  this.
> <https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/List_Comprehensions>
>
>
>
> -----
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; To the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work. This work is
> published globally via the internet. :) Inclusion of works of previous
> authors is not included in the above.
>
> The TPP is no simple "trade agreement."   Fight it!
> http://www.ourfairdeal.org/
> --
> View this message in context:
> http://forum.openscad.org/Incrementing-a-variable-doesn-t-work-as-expected-tp12271p12282.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150401/6f8c03cc/attachment.html>

From nigel at nigeljohnson.net  Wed Apr  1 06:10:15 2015
From: nigel at nigeljohnson.net (nigeljohnson73)
Date: Wed, 1 Apr 2015 03:10:15 -0700 (MST)
Subject: [OpenSCAD] Incrementing a variable doesn't work as expected.
In-Reply-To: <CAEEmnrNxHJFPHZnduMD4XDTWQMJsFFiKdaWLpP=FNiyH0TG32g@mail.gmail.com>
References: <1427872466967-12271.post@n5.nabble.com>
	<1427874279409-12272.post@n5.nabble.com>
	<CAEEmnrN-ARHmRUP3uX0m3oVSM-ARChEGKa+JrXLKLHN0209qug@mail.gmail.com>
	<1427878313905-12275.post@n5.nabble.com>
	<1427880409970-12281.post@n5.nabble.com>
	<1427882271578-12282.post@n5.nabble.com>
	<CAEEmnrNxHJFPHZnduMD4XDTWQMJsFFiKdaWLpP=FNiyH0TG32g@mail.gmail.com>
Message-ID: <1427883015525-12284.post@n5.nabble.com>

And there's the answer - brackets :)

function cpos(s, n) = (n == 0) ? (0) : ( cpos(s,n-1) + ((s[n-1]==".") ? 2 :
4 ));

Now works as expected.

Thanks guys!!!
N.



--
View this message in context: http://forum.openscad.org/Incrementing-a-variable-doesn-t-work-as-expected-tp12271p12284.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Wed Apr  1 06:10:31 2015
From: nop.head at gmail.com (nop head)
Date: Wed, 1 Apr 2015 11:10:31 +0100
Subject: [OpenSCAD] Incrementing a variable doesn't work as expected.
In-Reply-To: <CAEEmnrNxHJFPHZnduMD4XDTWQMJsFFiKdaWLpP=FNiyH0TG32g@mail.gmail.com>
References: <1427872466967-12271.post@n5.nabble.com>
	<1427874279409-12272.post@n5.nabble.com>
	<CAEEmnrN-ARHmRUP3uX0m3oVSM-ARChEGKa+JrXLKLHN0209qug@mail.gmail.com>
	<1427878313905-12275.post@n5.nabble.com>
	<1427880409970-12281.post@n5.nabble.com>
	<1427882271578-12282.post@n5.nabble.com>
	<CAEEmnrNxHJFPHZnduMD4XDTWQMJsFFiKdaWLpP=FNiyH0TG32g@mail.gmail.com>
Message-ID: <CAEEmnrPjPTEUyK9Q1m-DFKCZG0VvKekrOzQkQmU_UL6r_sXkZQ@mail.gmail.com>

You need the same brackets in cpos() otherwise it does the add before the
?. You also have lots of brackets where you don't need them.

function cpos(s, n) = n == -1 ? 0 : cpos(s,n-1) + (s[n]=="." ? 2 : 4 );

On 1 April 2015 at 11:07, nop head <nop.head at gmail.com> wrote:

> Your last example works if you add some brackets
>
> echo (  0                // n = -1
>         + (s[0]=="."?2:4)  // n = 0 so should be 4
>         + (s[1]=="."?2:4)  // n = 1 so should be 4
>         + (s[2]=="."?2:4)  // n = 2 so should be 2
>         + (s[3]=="."?2:4)  // n = 3 so should be 4
>     ); // Outputs "ECHO: 14"
>
>
> On 1 April 2015 at 10:57, MichaelAtOz <oz.at.michael at gmail.com> wrote:
>
>> BTW you may want to check out  assign() [depricated]
>> <
>> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Conditional_and_Iterator_Functions#Assign_Statement
>> >
>> and  this.
>> <https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/List_Comprehensions>
>>
>>
>>
>> -----
>> Unless specifically shown otherwise above, my contribution is in the
>> Public Domain; To the extent possible under law, I have waived all
>> copyright and related or neighbouring rights to this work. This work is
>> published globally via the internet. :) Inclusion of works of previous
>> authors is not included in the above.
>>
>> The TPP is no simple "trade agreement."   Fight it!
>> http://www.ourfairdeal.org/
>> --
>> View this message in context:
>> http://forum.openscad.org/Incrementing-a-variable-doesn-t-work-as-expected-tp12271p12282.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150401/d07cb7ae/attachment-0001.html>

From nigel at nigeljohnson.net  Wed Apr  1 06:22:59 2015
From: nigel at nigeljohnson.net (nigeljohnson73)
Date: Wed, 1 Apr 2015 03:22:59 -0700 (MST)
Subject: [OpenSCAD] Incrementing a variable doesn't work as expected.
In-Reply-To: <CAEEmnrPjPTEUyK9Q1m-DFKCZG0VvKekrOzQkQmU_UL6r_sXkZQ@mail.gmail.com>
References: <1427872466967-12271.post@n5.nabble.com>
	<1427874279409-12272.post@n5.nabble.com>
	<CAEEmnrN-ARHmRUP3uX0m3oVSM-ARChEGKa+JrXLKLHN0209qug@mail.gmail.com>
	<1427878313905-12275.post@n5.nabble.com>
	<1427880409970-12281.post@n5.nabble.com>
	<1427882271578-12282.post@n5.nabble.com>
	<CAEEmnrNxHJFPHZnduMD4XDTWQMJsFFiKdaWLpP=FNiyH0TG32g@mail.gmail.com>
	<CAEEmnrPjPTEUyK9Q1m-DFKCZG0VvKekrOzQkQmU_UL6r_sXkZQ@mail.gmail.com>
Message-ID: <1427883779144-12286.post@n5.nabble.com>

I'm usually an avid bracketer for readability and avoidance of doubt. This
one beat me 

Thanks again.



--
View this message in context: http://forum.openscad.org/Incrementing-a-variable-doesn-t-work-as-expected-tp12271p12286.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From bioinformatics at gringene.org  Wed Apr  1 06:49:01 2015
From: bioinformatics at gringene.org (David Eccles (gringer))
Date: Wed, 1 Apr 2015 23:49:01 +1300
Subject: [OpenSCAD] Bezier functions in OpenSCAD
Message-ID: <08dd043be618cef49f0c5fc17bf6ddce.squirrel@my.actrix.co.nz>

I found a bezier curve library that looks somewhat reasonable, in that it
doesn't have any hard-coded values or iteration limitations:

http://www.thingiverse.com/download:98926

Compare with this library, which suffers from "I need to write a different
function for different arguments" syndrome:

https://github.com/chadkirby/BezierScad/blob/master/BezierScad.scad

Is there any chance of adding at least the bezier functions to OpenSCAD:

/*
	Bernstein Basis Functions

	For Bezier curves, these functions give the weights per control point.

*/
function BEZ03(u) = pow((1-u), 3);
function BEZ13(u) = 3*u*(pow((1-u),2));
function BEZ23(u) = 3*(pow(u,2))*(1-u);
function BEZ33(u) = pow(u,3);

// Calculate a singe point along a cubic bezier curve
// Given a set of 4 control points, and a parameter 0 <= 'u' <= 1
// These functions will return the exact point on the curve
function PointOnBezCubic2D(p0, p1, p2, p3, u) = [
	BEZ03(u)*p0[0]+BEZ13(u)*p1[0]+BEZ23(u)*p2[0]+BEZ33(u)*p3[0],
	BEZ03(u)*p0[1]+BEZ13(u)*p1[1]+BEZ23(u)*p2[1]+BEZ33(u)*p3[1]];

function PointOnBezCubic3D(p0, p1, p2, p3, u) = [
	BEZ03(u)*p0[0]+BEZ13(u)*p1[0]+BEZ23(u)*p2[0]+BEZ33(u)*p3[0],
	BEZ03(u)*p0[1]+BEZ13(u)*p1[1]+BEZ23(u)*p2[1]+BEZ33(u)*p3[1],
	BEZ03(u)*p0[2]+BEZ13(u)*p1[2]+BEZ23(u)*p2[2]+BEZ33(u)*p3[2]];

The modules need a bit of work, because they're generating duplicate
points at the focal location, instead of combining the triangles into a
single polygon.



From stempeldergeschichte at googlemail.com  Wed Apr  1 10:13:40 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Wed, 1 Apr 2015 16:13:40 +0200
Subject: [OpenSCAD] Bezier functions in OpenSCAD
In-Reply-To: <08dd043be618cef49f0c5fc17bf6ddce.squirrel@my.actrix.co.nz>
References: <08dd043be618cef49f0c5fc17bf6ddce.squirrel@my.actrix.co.nz>
Message-ID: <CAJgOqABePq7cmGM5OqFb9E1mv5rMk1W07R2fhhCqqRSJ6-w+mw@mail.gmail.com>

These functions only give a point vector.
The real work is to stitch a solid from this. (And if you can stitch the
solid, then you probably can write your own
Bezier function, too.)
Is there a a general way to generate a Bezier-solid ?
Maybe a pie-cylinder with the outside curve beeing a Bezier curve.
If yes, I would support it, as designs nowadays go more and more to organic
forms.

2015-04-01 12:49 GMT+02:00 David Eccles (gringer) <
bioinformatics at gringene.org>:

> I found a bezier curve library that looks somewhat reasonable, in that it
> doesn't have any hard-coded values or iteration limitations:
>
> http://www.thingiverse.com/download:98926
>
> Compare with this library, which suffers from "I need to write a different
> function for different arguments" syndrome:
>
> https://github.com/chadkirby/BezierScad/blob/master/BezierScad.scad
>
> Is there any chance of adding at least the bezier functions to OpenSCAD:
>
> /*
>         Bernstein Basis Functions
>
>         For Bezier curves, these functions give the weights per control
> point.
>
> */
> function BEZ03(u) = pow((1-u), 3);
> function BEZ13(u) = 3*u*(pow((1-u),2));
> function BEZ23(u) = 3*(pow(u,2))*(1-u);
> function BEZ33(u) = pow(u,3);
>
> // Calculate a singe point along a cubic bezier curve
> // Given a set of 4 control points, and a parameter 0 <= 'u' <= 1
> // These functions will return the exact point on the curve
> function PointOnBezCubic2D(p0, p1, p2, p3, u) = [
>         BEZ03(u)*p0[0]+BEZ13(u)*p1[0]+BEZ23(u)*p2[0]+BEZ33(u)*p3[0],
>         BEZ03(u)*p0[1]+BEZ13(u)*p1[1]+BEZ23(u)*p2[1]+BEZ33(u)*p3[1]];
>
> function PointOnBezCubic3D(p0, p1, p2, p3, u) = [
>         BEZ03(u)*p0[0]+BEZ13(u)*p1[0]+BEZ23(u)*p2[0]+BEZ33(u)*p3[0],
>         BEZ03(u)*p0[1]+BEZ13(u)*p1[1]+BEZ23(u)*p2[1]+BEZ33(u)*p3[1],
>         BEZ03(u)*p0[2]+BEZ13(u)*p1[2]+BEZ23(u)*p2[2]+BEZ33(u)*p3[2]];
>
> The modules need a bit of work, because they're generating duplicate
> points at the focal location, instead of combining the triangles into a
> single polygon.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>



-- 
stempeldergeschichte at googlemail.com <karsten at rohrbach.de>

P.S. Falls meine E-Mail k?rzer ausf?llt als Dir angenehm ist:
Ich probiere gerade aus kurze Antworten statt gar keine Antworten zu
schreiben.
Wenn Du gerne mehr lesen m?chtest, dann lass es mich bitte wissen.

P.S. In case my e-mail is shorter than you enjoy:
I am currently trying short replies instead of no replies at all.
Please let me know, if you like to read more.

Enjoy!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150401/49561797/attachment.html>

From stempeldergeschichte at googlemail.com  Wed Apr  1 13:52:44 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Wed, 1 Apr 2015 19:52:44 +0200
Subject: [OpenSCAD] extending MCAD with an example for rotation
Message-ID: <CAJgOqABhQLwbrCDJhuqhHgTyrcdvzbSuabUu-_pEYFwbsWKHoA@mail.gmail.com>

Rotating something into the direction of a vector is a common problem.
It only requires high school math.
But to get the rotation into the right order is often tricky.
I feel this would be a good addition to the MCAD library.

Please have a look at the following code:


?// rotation.scad - Basic example of rotation to draw a vector as an arrow


vect1=[2,3,4];

%cube(vect1);
vector(vect1);

chain=[
    [0,0,0],
    [0,1,0],
    [4,2,3],
    [5,2,1],
    [7,8,9],
    [6,5,2],
];

vector_chain();


//
// Draw an arrow from the origin to the position of the vector v.
// To do this draw an arrow with the length of the length of the vector v.
// Then rotate this arrow into the correct direction.
//
module vector(v){
// radius of the arrow
    r=.05;
// number of sides of the arrow
    fn_vector=16; //change this to: 3, 4, 16, 32, or 100 (set to 4 makes it
square, set to higher number to make it rounder. But be aware: high numbers
lead to (excessively) long render times.
// length of the arrow
    l=norm(v);
// rotate the projection of the vector onto the x-y-plane around the z-axis
// rotate(scalar)=rotate(scalar*[0,0,1])=rotation around the z-axis
    rotate(atan2(v[1],v[0]))
// rotate from out of the x-y-plane into the z-direction
        rotate([0,-atan2(v[2],norm([v[0],v[1]])),0])
// rotate the cylinder into the plus x-direction
            rotate([0,90,0]){
// make an arrow, the tip is 20% of the total length
// shaft
                cylinder(h=l*.8,r1=r,r2=r,$fn=fn_vector);
// tip

translate([0,0,l*.8])cylinder(h=l*.2,r1=3*r,r2=0,$fn=fn_vector);
    }
}

// Draw a chain of vectors along an array of points
module vector_chain(){
// iterate over all elements of the chain
// ( len(array) gives the number of elements in the array )
    for(i=[0:len(chain)-2]){
// translate to the starting point of the vector
        translate(chain[i])
// change the color [r,g,b] of the vector
// The first one is blue:[0,0,1], the last one is red:[1,0,0].
            color([i/(len(chain)-2),0,1-i/(len(chain)-2)])
// draw the vector from point chain[i] to chain[i+1]
                vector(chain[i+1]-chain[i]);
    }
}

echo(version=version());
//     Written by: TakeItAndRun
//    2015
//
// To the extent possible under law, the author(s) have dedicated all
// copyright and related and neighboring rights to this software to the
// public domain worldwide. This software is distributed without any
// warranty.
//
// You should have received a copy of the CC0 Public Domain
// Dedication along with this software.
// If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150401/193fc5c5/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rotation.png
Type: image/png
Size: 13612 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150401/193fc5c5/attachment-0001.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rotation.scad
Type: application/octet-stream
Size: 2312 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150401/193fc5c5/attachment-0001.scad>

From mtchkll at gmail.com  Wed Apr  1 20:28:40 2015
From: mtchkll at gmail.com (mitch)
Date: Wed, 1 Apr 2015 17:28:40 -0700 (MST)
Subject: [OpenSCAD] extending MCAD with an example for rotation
In-Reply-To: <CAJgOqABhQLwbrCDJhuqhHgTyrcdvzbSuabUu-_pEYFwbsWKHoA@mail.gmail.com>
References: <CAJgOqABhQLwbrCDJhuqhHgTyrcdvzbSuabUu-_pEYFwbsWKHoA@mail.gmail.com>
Message-ID: <1427934520943-12291.post@n5.nabble.com>

Hey Peter this is really nice. 
-I agree, rotations are very useful and tricky to get right. A function to
do this would be very helpful.
-I like how you show the steps with vectors. I'm not sure if frameworks like
this have been implemented/distributed already, but reference features like
these really help the design process.
-I didn't realize it was so easy to make a transparency ('%' prefix) - I'm
going to start using this all the time. It's helpful to see what is going on
inside complex shapes and what primitives compose them.

This reminds me of David's MOCAD kit -
http://forum.openscad.org/Introduction-and-presentation-of-the-Mocad-Library-for-comment-td12175.html

Further, I'd like to see implementation of multiple callable coordinate
frames. (does this exist?)

Mitch



--
View this message in context: http://forum.openscad.org/extending-MCAD-with-an-example-for-rotation-tp12290p12291.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From bioinformatics at gringene.org  Wed Apr  1 22:11:04 2015
From: bioinformatics at gringene.org (David Eccles (gringer))
Date: Wed, 1 Apr 2015 19:11:04 -0700 (MST)
Subject: [OpenSCAD] Beginner has trouble with intersection.
In-Reply-To: <1427794186140-12270.post@n5.nabble.com>
References: <1427794186140-12270.post@n5.nabble.com>
Message-ID: <1427940664430-12292.post@n5.nabble.com>

gg92507 wrote
> Hello.  I am a beginner.  I am having trouble getting intersection() to do
> what I want in 2015.3.  I use the following code--
> 
> intersection(){
>     cube(1);
>     intersection(){
>         cube(2);
>         translate([0,0,10])cube(1);
>     }
> }
> 
> It gives me a little cube instead of what I want, which is nothing.

All of the OpenSCAD set operations will work with a single construction,
returning that construction. My guess at what is happening here is that the
empty second intersection result is being treated as "no further arguments",
rather than an argument of an empty construction.



--
View this message in context: http://forum.openscad.org/Beginner-has-trouble-with-intersection-tp12270p12292.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From temp4pieter at hotmail.com  Thu Apr  2 01:18:26 2015
From: temp4pieter at hotmail.com (hagen)
Date: Wed, 1 Apr 2015 22:18:26 -0700 (MST)
Subject: [OpenSCAD] Beginner has trouble with intersection.
In-Reply-To: <1427794186140-12270.post@n5.nabble.com>
References: <1427794186140-12270.post@n5.nabble.com>
Message-ID: <1427951906578-12293.post@n5.nabble.com>

preview (F5 on Windows) shows a cube, but render (F6) does not.



--
View this message in context: http://forum.openscad.org/Beginner-has-trouble-with-intersection-tp12270p12293.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From PolyVinalDistillate at yahoo.co.uk  Thu Apr  2 06:57:39 2015
From: PolyVinalDistillate at yahoo.co.uk (PolyVinalDistillate)
Date: Thu, 2 Apr 2015 03:57:39 -0700 (MST)
Subject: [OpenSCAD] Beginner has trouble with intersection.
In-Reply-To: <1427951906578-12293.post@n5.nabble.com>
References: <1427794186140-12270.post@n5.nabble.com>
	<1427951906578-12293.post@n5.nabble.com>
Message-ID: <1427972259938-12295.post@n5.nabble.com>

Interesting that F5 and F6 give different results. The situation must be
something like:

intersection()              //This intersection is interpreted by F5 as
cube(1). The empty intersection
{                              //below cube(1) is disgarded because it
represents no geometry, therefore 
  cube(1);                  //we have an intersection of a cube only, =
cube. F6 appears to actually intersect the
                               //cube with the null-geometry, resulting in
nothing.

  intersection()               //this intersection equates to nothing
because cubes don't overlap. F5 must
  {                               //disgard it completely from the geometry
tree, while F6 keeps it in the tree
    cube(2);                   //as empty geometry allowing it to be used in
further CSG
    translate([0,0,10])cube(1);
  }

}



--
View this message in context: http://forum.openscad.org/Beginner-has-trouble-with-intersection-tp12270p12295.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From stempeldergeschichte at googlemail.com  Thu Apr  2 07:41:45 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Thu, 2 Apr 2015 13:41:45 +0200
Subject: [OpenSCAD] recursion crash
Message-ID: <CAJgOqADisqJ2WwVoK+SNBrV_=4ZVzJFXkp4vHg_-P7STXha+8g@mail.gmail.com>

This crushes on Win 7 with version 2015.03

module mirror(v){
    children();
    mirror(v)children();
}

mirror([1,0,0])cube();


-- 
stempeldergeschichte at googlemail.com <karsten at rohrbach.de>

P.S. Falls meine E-Mail k?rzer ausf?llt als Dir angenehm ist:
Ich probiere gerade aus kurze Antworten statt gar keine Antworten zu
schreiben.
Wenn Du gerne mehr lesen m?chtest, dann lass es mich bitte wissen.

P.S. In case my e-mail is shorter than you enjoy:
I am currently trying short replies instead of no replies at all.
Please let me know, if you like to read more.

Enjoy!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150402/82137e60/attachment.html>

From gregorybartonfrost at gmail.com  Thu Apr  2 07:46:23 2015
From: gregorybartonfrost at gmail.com (Greg Frost)
Date: Thu, 2 Apr 2015 22:16:23 +1030
Subject: [OpenSCAD] recursion crash
In-Reply-To: <CAJgOqADisqJ2WwVoK+SNBrV_=4ZVzJFXkp4vHg_-P7STXha+8g@mail.gmail.com>
References: <CAJgOqADisqJ2WwVoK+SNBrV_=4ZVzJFXkp4vHg_-P7STXha+8g@mail.gmail.com>
Message-ID: <3D1A1A30-29E0-47BB-8DEB-CA5FCC680417@gmail.com>

That is infinite recursion. Definitely invalid, but I'm not sure it should crash.

> On 2 Apr 2015, at 10:11 pm, Peter Falke <stempeldergeschichte at googlemail.com> wrote:
> 
> This crushes on Win 7 with version 2015.03
> 
> module mirror(v){
>     children();
>     mirror(v)children();
> }
> 
> mirror([1,0,0])cube();
> 
> 
> -- 
> stempeldergeschichte at googlemail.com
> 
> P.S. Falls meine E-Mail k?rzer ausf?llt als Dir angenehm ist:
> Ich probiere gerade aus kurze Antworten statt gar keine Antworten zu schreiben.
> Wenn Du gerne mehr lesen m?chtest, dann lass es mich bitte wissen.
> 
> P.S. In case my e-mail is shorter than you enjoy:
> I am currently trying short replies instead of no replies at all.
> Please let me know, if you like to read more.
> 
> Enjoy!
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150402/ff60fe2c/attachment.html>

From Martin.Herdieckerhoff at mnet-mail.de  Thu Apr  2 08:50:25 2015
From: Martin.Herdieckerhoff at mnet-mail.de (Martin Herdieckerhoff)
Date: Thu, 02 Apr 2015 14:50:25 +0200
Subject: [OpenSCAD] recursion crash
In-Reply-To: <CAJgOqADisqJ2WwVoK+SNBrV_=4ZVzJFXkp4vHg_-P7STXha+8g@mail.gmail.com>
References: <CAJgOqADisqJ2WwVoK+SNBrV_=4ZVzJFXkp4vHg_-P7STXha+8g@mail.gmail.com>
Message-ID: <551D3B11.6000400@mnet-mail.de>

You redefine the predefined module mirror.
What you want is probably this:

    module mirror_duplicate(v){
    children();
    mirror(v) children();
    }

    mirror_duplicate([1,0,0]) cube();


Am 02.04.2015 um 13:41 schrieb Peter Falke:
> This crushes on Win 7 with version 2015.03
>
> module mirror(v){
>     children();
>     mirror(v)children();
> }
>
> mirror([1,0,0])cube();
**
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150402/b18d9d70/attachment.html>

From stempeldergeschichte at googlemail.com  Thu Apr  2 09:32:36 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Thu, 2 Apr 2015 15:32:36 +0200
Subject: [OpenSCAD] recursion crash
In-Reply-To: <551D3B11.6000400@mnet-mail.de>
References: <CAJgOqADisqJ2WwVoK+SNBrV_=4ZVzJFXkp4vHg_-P7STXha+8g@mail.gmail.com>
	<551D3B11.6000400@mnet-mail.de>
Message-ID: <CAJgOqAAyvUo6rcqsBadX_9ku8ekZvWEMHu34Pt+++uDZCMGjwg@mail.gmail.com>

What I want is:

mirror(v,keep=true)

But, I may not get it. ;)

I posted it only, because it crashes and I think Kintel tries hard to fix
OpenSCAD crashing at all.

2015-04-02 14:50 GMT+02:00 Martin Herdieckerhoff <
Martin.Herdieckerhoff at mnet-mail.de>:

>  You redefine the predefined module mirror.
> What you want is probably this:
>
> module mirror_duplicate(v){
>     children();
>     mirror(v) children();
> }
>
> mirror_duplicate([1,0,0]) cube();
>
>
> Am 02.04.2015 um 13:41 schrieb Peter Falke:
>
>  This crushes on Win 7 with version 2015.03
>
> module mirror(v){
>     children();
>     mirror(v)children();
> }
>
> mirror([1,0,0])cube();
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>


-- 
stempeldergeschichte at googlemail.com <karsten at rohrbach.de>

P.S. Falls meine E-Mail k?rzer ausf?llt als Dir angenehm ist:
Ich probiere gerade aus kurze Antworten statt gar keine Antworten zu
schreiben.
Wenn Du gerne mehr lesen m?chtest, dann lass es mich bitte wissen.

P.S. In case my e-mail is shorter than you enjoy:
I am currently trying short replies instead of no replies at all.
Please let me know, if you like to read more.

Enjoy!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150402/475a7e45/attachment-0001.html>

From stempeldergeschichte at googlemail.com  Thu Apr  2 10:06:34 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Thu, 2 Apr 2015 16:06:34 +0200
Subject: [OpenSCAD] recursion crash
In-Reply-To: <CAJgOqAAyvUo6rcqsBadX_9ku8ekZvWEMHu34Pt+++uDZCMGjwg@mail.gmail.com>
References: <CAJgOqADisqJ2WwVoK+SNBrV_=4ZVzJFXkp4vHg_-P7STXha+8g@mail.gmail.com>
	<551D3B11.6000400@mnet-mail.de>
	<CAJgOqAAyvUo6rcqsBadX_9ku8ekZvWEMHu34Pt+++uDZCMGjwg@mail.gmail.com>
Message-ID: <CAJgOqABPLRwA0FYzJ=JU24=zHJv0WcQhMmrWm0mVfwK5xEnS0g@mail.gmail.com>

Now, what I want, can be done in user space: redefining mirror, so to
accept keep=true.
I'm using multimarix to avoid a recursive definition.
Using the reflection matrix:

[image: \mathbf{A} = \begin{bmatrix} 1 - 2 a^2 & - 2 a b & - 2 a c \\ - 2 a
b & 1 - 2 b^2 & - 2 b c \\ - 2 a c & - 2 b c & 1 - 2c^2 \end{bmatrix}]

from:
http://en.wikipedia.org/wiki/Transformation_matrix#Affine_transformations
If it can be done in user space, this could be an argument not to include
it into the core language.
But I still think: it makes it easier for newbies and it makes cde easier
to read and write if this is included into OpenSCAD.

module mirror(v,keep=false){
    if(keep)children();
        u=v/norm(v);
        a=u.x;
        b=u.y;
        c=u.z;
    multmatrix(m = [
                [1-2*a*a, -2*a*b, -2*a*c, 0],
                [-2*a*b,1-2*b*b, -2*b*c, 0],
                [-2*a*c, -2*b*c, 1-2*c*c, 0],
                [0, 0, 0,  1]
    ])
        children();
}

mirror([1,1,1],true)cube(1);



2015-04-02 15:32 GMT+02:00 Peter Falke <stempeldergeschichte at googlemail.com>
:

> What I want is:
>
> mirror(v,keep=true)
>
> But, I may not get it. ;)
>
> I posted it only, because it crashes and I think Kintel tries hard to fix
> OpenSCAD crashing at all.
>
> 2015-04-02 14:50 GMT+02:00 Martin Herdieckerhoff <
> Martin.Herdieckerhoff at mnet-mail.de>:
>
>>  You redefine the predefined module mirror.
>> What you want is probably this:
>>
>> module mirror_duplicate(v){
>>     children();
>>     mirror(v) children();
>> }
>>
>> mirror_duplicate([1,0,0]) cube();
>>
>>
>> Am 02.04.2015 um 13:41 schrieb Peter Falke:
>>
>>  This crushes on Win 7 with version 2015.03
>>
>> module mirror(v){
>>     children();
>>     mirror(v)children();
>> }
>>
>> mirror([1,0,0])cube();
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
>
> --
> stempeldergeschichte at googlemail.com <karsten at rohrbach.de>
>
> P.S. Falls meine E-Mail k?rzer ausf?llt als Dir angenehm ist:
> Ich probiere gerade aus kurze Antworten statt gar keine Antworten zu
> schreiben.
> Wenn Du gerne mehr lesen m?chtest, dann lass es mich bitte wissen.
>
> P.S. In case my e-mail is shorter than you enjoy:
> I am currently trying short replies instead of no replies at all.
> Please let me know, if you like to read more.
>
> Enjoy!
>



-- 
stempeldergeschichte at googlemail.com <karsten at rohrbach.de>

P.S. Falls meine E-Mail k?rzer ausf?llt als Dir angenehm ist:
Ich probiere gerade aus kurze Antworten statt gar keine Antworten zu
schreiben.
Wenn Du gerne mehr lesen m?chtest, dann lass es mich bitte wissen.

P.S. In case my e-mail is shorter than you enjoy:
I am currently trying short replies instead of no replies at all.
Please let me know, if you like to read more.

Enjoy!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150402/92427217/attachment.html>

From marius at kintel.net  Thu Apr  2 11:44:09 2015
From: marius at kintel.net (kintel)
Date: Thu, 2 Apr 2015 08:44:09 -0700 (MST)
Subject: [OpenSCAD] Beginner has trouble with intersection.
In-Reply-To: <1427794186140-12270.post@n5.nabble.com>
References: <1427794186140-12270.post@n5.nabble.com>
Message-ID: <1427989449560-12302.post@n5.nabble.com>

This is a known bug: https://github.com/openscad/openscad/issues/666

The result should be empty.



--
View this message in context: http://forum.openscad.org/Beginner-has-trouble-with-intersection-tp12270p12302.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From linkreincarnate at gmail.com  Fri Apr  3 02:46:34 2015
From: linkreincarnate at gmail.com (linkreincarnate)
Date: Thu, 2 Apr 2015 23:46:34 -0700 (MST)
Subject: [OpenSCAD] Difference in a Function Definition
Message-ID: <1428043594751-12303.post@n5.nabble.com>


So I created a function that creates a hollow cube by differencing two
cubes.  For some reason though it wont compile.  I keep getting a syntax
error on the first bracket  after the difference function is called.  If I
comment out the difference function it works fine.  What am I missing here? 
You can use the difference function in a  user defined function right? If
not how can I create a function to create an object?


function CreateNonArchedBody(boxLength, 
                             boxWidth, 
                             boxHeight, 
                             boxDepth, 
                             boxWallThickness, 
                             boxHingeDiameter, 
                             boxHingePinDiameter,  
                             boxHingeXOffset, 
                             boxHingeYOffset, 
                             boxHingeTolerance, 
                             pinTolerance, 
                             controlArmPinDiameter,                        
                             controlArmHoleXOffset,                         
                             controlArmHoleYOffset) = 
    
        difference() {
            cube([boxLength,boxWidth,boxHeight], 
                 center = true
                );
            translate([0,0,((boxHeight-boxDepth)/2)]) 
                cube([boxLength - boxWallThickness, 
                      boxWidth - boxWallThickness, 
                      boxDepth], 
                      center = true
                );
        }



--
View this message in context: http://forum.openscad.org/Difference-in-a-Function-Definition-tp12303.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From kit.wallace at gmail.com  Fri Apr  3 03:02:37 2015
From: kit.wallace at gmail.com (kitwallace)
Date: Fri, 3 Apr 2015 00:02:37 -0700 (MST)
Subject: [OpenSCAD] Difference in a Function Definition
In-Reply-To: <1428043594751-12303.post@n5.nabble.com>
References: <1428043594751-12303.post@n5.nabble.com>
Message-ID: <1428044557396-12304.post@n5.nabble.com>

This should be a module rather than a function. Just change the keyword and
drop the "="



--
View this message in context: http://forum.openscad.org/Difference-in-a-Function-Definition-tp12303p12304.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From linkreincarnate at gmail.com  Fri Apr  3 03:07:11 2015
From: linkreincarnate at gmail.com (linkreincarnate)
Date: Fri, 3 Apr 2015 00:07:11 -0700 (MST)
Subject: [OpenSCAD] Difference in a Function Definition
In-Reply-To: <1428044557396-12304.post@n5.nabble.com>
References: <1428043594751-12303.post@n5.nabble.com>
	<1428044557396-12304.post@n5.nabble.com>
Message-ID: <1428044831474-12305.post@n5.nabble.com>

Oh Thanks that works.  What is the difference between the two?  What
determines when you use a function vs a module?



--
View this message in context: http://forum.openscad.org/Difference-in-a-Function-Definition-tp12303p12305.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From whosawhatsis at gmail.com  Fri Apr  3 03:25:14 2015
From: whosawhatsis at gmail.com (whosawhatsis)
Date: Fri, 3 Apr 2015 00:25:14 -0700
Subject: [OpenSCAD] Difference in a Function Definition
In-Reply-To: <1428044831474-12305.post@n5.nabble.com>
References: <1428043594751-12303.post@n5.nabble.com>
	<1428044557396-12304.post@n5.nabble.com>
	<1428044831474-12305.post@n5.nabble.com>
Message-ID: <AE77321406D645D4A6B6C1E061DD206B@gmail.com>

Functions in Openscad are functions in the mathematical sense. They return the solution to an equation rather than creating geometry. 


On Friday, April 3, 2015 at 00:07, linkreincarnate wrote:

> Oh Thanks that works. What is the difference between the two? What
> determines when you use a function vs a module?
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/Difference-in-a-Function-Definition-tp12303p12305.html
> Sent from the OpenSCAD mailing list archive at Nabble.com (http://Nabble.com).
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org (mailto:Discuss at lists.openscad.org)
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> 
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150403/8dc4b5e4/attachment.html>

From kit.wallace at gmail.com  Fri Apr  3 03:37:52 2015
From: kit.wallace at gmail.com (kitwallace)
Date: Fri, 3 Apr 2015 00:37:52 -0700 (MST)
Subject: [OpenSCAD] wall with window in 3D
In-Reply-To: <1427977562740-12298.post@n5.nabble.com>
References: <1427977562740-12298.post@n5.nabble.com>
Message-ID: <1428046672064-12307.post@n5.nabble.com>

I think the cutout for the window isn't deep enough for the offset window -

I replaced
 	%cube([1.00, 0.12, 0.80]); 
with
      cube([1.00, 0.3, 0.80]); 





--
View this message in context: http://forum.openscad.org/wall-with-window-in-3D-tp12298p12307.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From kit.wallace at gmail.com  Sat Apr  4 11:26:44 2015
From: kit.wallace at gmail.com (kitwallace)
Date: Sat, 4 Apr 2015 08:26:44 -0700 (MST)
Subject: [OpenSCAD] polyhedron no top level geometry to render
In-Reply-To: <1428140195802-12310.post@n5.nabble.com>
References: <1428140195802-12310.post@n5.nabble.com>
Message-ID: <1428161204376-12311.post@n5.nabble.com>

The last two faces have the wrong vertex order - previewing with View >>
Thrown Together  shows this in purple - it renders  when the faces are
replaced with [6,2,0],[0,4,6] 

Nowadays the faces don't have to be triangles now so you could just define
the 6 quadrilateral faces of the cube

Chris



--
View this message in context: http://forum.openscad.org/polyhedron-no-top-level-geometry-to-render-tp12310p12311.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From stempeldergeschichte at googlemail.com  Sat Apr  4 13:28:49 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Sat, 4 Apr 2015 19:28:49 +0200
Subject: [OpenSCAD] rename Thrown Together
Message-ID: <CAJgOqADeejnW+MQ0TFWY_9Cgd_rQnNYh=RyRxbHsVcK7XWztVg@mail.gmail.com>

Why is Thrown Together called Thrown Together?
It doesnt help newbies.
Maybe we could come up with something descriptive.

Test Polyhedron

Test Winding Order


-- 
stempeldergeschichte at googlemail.com <karsten at rohrbach.de>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150404/ace803c7/attachment.html>

From kit.wallace at gmail.com  Sun Apr  5 11:13:24 2015
From: kit.wallace at gmail.com (kitwallace)
Date: Sun, 5 Apr 2015 08:13:24 -0700 (MST)
Subject: [OpenSCAD] polyhedron no top level geometry to render
In-Reply-To: <1428226914564-12313.post@n5.nabble.com>
References: <1428140195802-12310.post@n5.nabble.com>
	<1428161204376-12311.post@n5.nabble.com>
	<1428226914564-12313.post@n5.nabble.com>
Message-ID: <1428246804931-12314.post@n5.nabble.com>

Oh I know, I often get the winding order wrong = 'Thrown together' is your
friend.  

I find a reverse function useful in cases where the natural ordering of
points is anti-clockwise.

I meant that faces don't have to be triangles so in this case they could be 

faces=[ 
  [0,2,3,1],[4,5,7,6],[0,1,5,4],[2,6,7,3],[0,4,6,2],[1,3,7,5] 
]

Chris



--
View this message in context: http://forum.openscad.org/polyhedron-no-top-level-geometry-to-render-tp12310p12314.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From whosawhatsis at gmail.com  Sun Apr  5 15:04:32 2015
From: whosawhatsis at gmail.com (whosawhatsis)
Date: Sun, 5 Apr 2015 12:04:32 -0700
Subject: [OpenSCAD] polyhedron no top level geometry to render
In-Reply-To: <1428246804931-12314.post@n5.nabble.com>
References: <1428140195802-12310.post@n5.nabble.com>
	<1428161204376-12311.post@n5.nabble.com>
	<1428226914564-12313.post@n5.nabble.com>
	<1428246804931-12314.post@n5.nabble.com>
Message-ID: <FEB3F72A961F4B1B89486CEFAB7848B3@gmail.com>

CGAL doesn't seem to allow you to have negative closed spaces, and "helpfully" reverses them if it finds one. This prevents exporting objects with hollow spaces, but it should also allow you to fix a polyhedron with all of its faces in the reverse winding order (though not a mix of clockwise and counter-clockwise) by using render(). 

Note, I haven't tried this, and it's possible (though unlikely, because it probably would have been fixed by now if it were the case) that this check happens right before export, and wouldn't affect render().


On Sunday, April 5, 2015 at 08:13, kitwallace wrote:

> Oh I know, I often get the winding order wrong = 'Thrown together' is your
> friend. 
> 
> I find a reverse function useful in cases where the natural ordering of
> points is anti-clockwise.
> 
> I meant that faces don't have to be triangles so in this case they could be 
> 
> faces=[ 
> [0,2,3,1],[4,5,7,6],[0,1,5,4],[2,6,7,3],[0,4,6,2],[1,3,7,5] 
> ]
> 
> Chris
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/polyhedron-no-top-level-geometry-to-render-tp12310p12314.html
> Sent from the OpenSCAD mailing list archive at Nabble.com (http://Nabble.com).
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org (mailto:Discuss at lists.openscad.org)
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> 
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150405/281108f1/attachment.html>

From kit.wallace at gmail.com  Mon Apr  6 05:52:12 2015
From: kit.wallace at gmail.com (kitwallace)
Date: Mon, 6 Apr 2015 02:52:12 -0700 (MST)
Subject: [OpenSCAD] flattening mixed lists of lists
Message-ID: <1428313932928-12316.post@n5.nabble.com>

I'm generating faces as a list of points.  However the list of faces
comprises a mixture of faces and lists of faces.  I need to flatten this
mixed list.  So far I'm using
function depth(a) =   len(a)== undef        ? 0       :
1+depth(a[0]);function flatten(l) = [ for (a = l) for (b = a) b ] ;function
dflatten(l,d=2) =// hack to flatten mixed list and list of lists   
flatten([for (a = l) depth(a) > d ? [for (b=a) b] : [a]]); l= [ 
[[1,2],[2,3]], [[[1,2],[2,3]]] ];lf = dflatten(l);echo(len(lf),lf);
but it doesn't really work generally : d = 1 should yield 4 , not 3  I've
really struggled to come up with a correct recursive formulation.



--
View this message in context: http://forum.openscad.org/flattening-mixed-lists-of-lists-tp12316.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150406/4731d813/attachment.html>

From nop.head at gmail.com  Mon Apr  6 06:53:16 2015
From: nop.head at gmail.com (nop head)
Date: Mon, 6 Apr 2015 11:53:16 +0100
Subject: [OpenSCAD] flattening mixed lists of lists
In-Reply-To: <1428313932928-12316.post@n5.nabble.com>
References: <1428313932928-12316.post@n5.nabble.com>
Message-ID: <CAEEmnrN4dhVopNwq8mEtEbYWfTCiMQyMOe64MtTNWA+7K_3+Ng@mail.gmail.com>

Perhaps simply this:

function depth(a) =
   len(a)== undef
       ? 0
       : 1+depth(a[0]);

function flatten(l) = [ for (a = l) for (b = a) b ] ;

function dflatten(l,d=2) =
// hack to flatten mixed list and list of lists
    flatten([for (a = l) depth(a) > d ? dflatten(a, d) : [a]]);

l= [  [[1,2],[2,3]], [[[1,2],[2,3]]] ];
lf = dflatten(l,1);
echo(len(lf),lf);
ECHO: 4, [[1, 2], [2, 3], [1, 2], [2, 3]]





On 6 April 2015 at 10:52, kitwallace <kit.wallace at gmail.com> wrote:

> I'm generating faces as a list of points. However the list of faces
> comprises a mixture of faces and lists of faces. I need to flatten this
> mixed list. So far I'm using
>
> function depth(a) =
>    len(a)== undef
>        ? 0
>        : 1+depth(a[0]);
>
> function flatten(l) = [ for (a = l) for (b = a) b ] ;
>
> function dflatten(l,d=2) =
> // hack to flatten mixed list and list of lists
>     flatten([for (a = l) depth(a) > d ? [for (b=a) b] : [a]]);
>
> l= [  [[1,2],[2,3]], [[[1,2],[2,3]]] ];
> lf = dflatten(l);
> echo(len(lf),lf);
>
> but it doesn't really work generally : d = 1 should yield 4 , not 3 I've
> really struggled to come up with a correct recursive formulation.
> ------------------------------
> View this message in context: flattening mixed lists of lists
> <http://forum.openscad.org/flattening-mixed-lists-of-lists-tp12316.html>
> Sent from the OpenSCAD mailing list archive <http://forum.openscad.org/>
> at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150406/79ee9a9c/attachment.html>

From kit.wallace at gmail.com  Mon Apr  6 07:11:12 2015
From: kit.wallace at gmail.com (kitwallace)
Date: Mon, 6 Apr 2015 04:11:12 -0700 (MST)
Subject: [OpenSCAD] flattening mixed lists of lists
In-Reply-To: <CAEEmnrN4dhVopNwq8mEtEbYWfTCiMQyMOe64MtTNWA+7K_3+Ng@mail.gmail.com>
References: <1428313932928-12316.post@n5.nabble.com>
	<CAEEmnrN4dhVopNwq8mEtEbYWfTCiMQyMOe64MtTNWA+7K_3+Ng@mail.gmail.com>
Message-ID: <1428318672344-12318.post@n5.nabble.com>

Well, blow me!  So near and yet so far! Many thanks Chris



--
View this message in context: http://forum.openscad.org/flattening-mixed-lists-of-lists-tp12316p12318.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From linkreincarnate at gmail.com  Mon Apr  6 17:37:33 2015
From: linkreincarnate at gmail.com (linkreincarnate)
Date: Mon, 6 Apr 2015 14:37:33 -0700 (MST)
Subject: [OpenSCAD] Frustrating unexpected behavior
Message-ID: <1428356253895-12321.post@n5.nabble.com>

So I am trying to make a lid for a hinged box.  I am getting some
unpredictable results with it though.   I need to be able to make a cutout
of the lip of the box at the level where the lid ends and the lip begins and
to place a hinge part there.  But when I change the numbers around to
anything other than a 1:1 ratio on the two numbers that control the
thickness I am unable to predict where the transition from lid to lip
begins.  I have been working on this particular problem since yesterday and
I am being stumped.  What am I missing here?

boxLength = 90.4;
boxWidth = 81.25;
boxHeight = 19.2;
boxBottomThickness = .67;
boxWallThickness = .67;
boxArcHeight = 3.5;
boxArcRadius=1;
boxControlArmHoleZOffset = 3.5;
boxControlArmHoleYOffset = 3;
boxHingePinDiameter = 3;
boxHingeDiameter= 5;
boxHingeZOffset = 0;
boxHingeYOffset = 0;
boxHingeTolerance = .1;
boxHingeSupportZOffset= -5;
boxHingeSupportYOffset = -4.5;
boxHingeNumberOfSplits = 7;
boxHingeClearance=1;
//the following variables determine the details of the cylinder (or sphere)
used for minkowski sums
boxCornerRoundness = 7;
boxCornerSmoothness = 16;
boxRoundCorners = true;

controlArmLength = 0;
controlArmHeight = 0;
conrolArmThickness = 0;
controlArmPinDiameter = 2;
controlArmHoleZOffset = 0;
controlArmHoleYOffset = 0;
controlArmPinTolerance = .1;

lidLipHeight = 2;
lidThickness = 2;
lidTolerance = 1;
lidHingeZOffset = 0;
lidHingeYOffset = 0;
lidHingeTolerance = 1;
lidOverlap = 2;

dispenserHoleLength = 72; //also used for dist between tracks
dispenserHoleWidth = 11.5;
dispenserHoleXOffset = 0;
dispenserHoleYOffset = 0;

trackPanelLength = 76;
trackPanelHeight = 19;
trackPanelThickness = 3;
trackWidth = 2.5;
trackLength = 61;
trackHeight = 14;

rollerDiameter = 7;
rollerLength = 71;

rollerPinDiameter = 2;
hingePinDiameter = 1.6;
pinLength= 71;

pinTolerance = 1;
cigaretteDiameter = 7.75;
cigaretteLength = 70;

booleanOverlap = .01; //to ensure that the faces used to difference() dont
line up

lowRollingClearance = 5; //the distance from the center of the rolling pin
to the lid at the lowest point.
hightRollingClearance = 12.6;

arched = false;
//uses math to determine the arc radius of the curve of the box and creates
the appropriate cylinder


difference(){     
                    $fn=boxCornerSmoothness;
                    minkowski(){
                     cube([lidOverlap + boxLength + lidTolerance - (2 *
boxCornerRoundness),
                           lidOverlap + boxWidth + lidTolerance - (2 *
boxCornerRoundness),
                           ((lidThickness + lidLipHeight)/2)], center=true);
                     cylinder(r=boxCornerRoundness,
                                 h=((lidThickness + lidLipHeight)/2),
center=true);
                    }
                    
                    translate([0,0,-lidThickness/2 ])
                    {
                        $fn=boxCornerSmoothness;
                        minkowski()
                        {
                         cube([boxLength + lidTolerance - (2 *
boxCornerRoundness) ,
                               boxWidth + lidTolerance - (2 *
boxCornerRoundness),
                               lidLipHeight+booleanOverlap],center = true); 
                         cylinder(r=boxCornerRoundness,h=lidLipHeight/2,
center = true);
                        }
                    }
                    translate([0,(boxCornerRoundness + lidTolerance +
lidOverlap+booleanOverlap),-lidThickness/2])
                    cube([boxLength + lidTolerance - (2 *
boxCornerRoundness) ,
                               boxWidth + lidTolerance - (2 *
boxCornerRoundness),
                               lidLipHeight +booleanOverlap],center = true); 
}



--
View this message in context: http://forum.openscad.org/Frustrating-unexpected-behavior-tp12321.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From stempeldergeschichte at googlemail.com  Mon Apr  6 19:11:05 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Tue, 7 Apr 2015 01:11:05 +0200
Subject: [OpenSCAD] Frustrating unexpected behavior
In-Reply-To: <1428356253895-12321.post@n5.nabble.com>
References: <1428356253895-12321.post@n5.nabble.com>
Message-ID: <CAJgOqAAb-LGTfWtvBg4OjMjO2Y5ASkFFh24ARmDBbY0F30zNTA@mail.gmail.com>

I`m sorry. I cant quiet understand what you problem is.
What numbers? What are you trying to do?

2015-04-06 23:37 GMT+02:00 linkreincarnate <linkreincarnate at gmail.com>:

> So I am trying to make a lid for a hinged box.  I am getting some
> unpredictable results with it though.   I need to be able to make a cutout
> of the lip of the box at the level where the lid ends and the lip begins
> and
> to place a hinge part there.  But when I change the numbers around to
> anything other than a 1:1 ratio on the two numbers that control the
> thickness I am unable to predict where the transition from lid to lip
> begins.  I have been working on this particular problem since yesterday and
> I am being stumped.  What am I missing here?
>
> boxLength = 90.4;
> boxWidth = 81.25;
> boxHeight = 19.2;
> boxBottomThickness = .67;
> boxWallThickness = .67;
> boxArcHeight = 3.5;
> boxArcRadius=1;
> boxControlArmHoleZOffset = 3.5;
> boxControlArmHoleYOffset = 3;
> boxHingePinDiameter = 3;
> boxHingeDiameter= 5;
> boxHingeZOffset = 0;
> boxHingeYOffset = 0;
> boxHingeTolerance = .1;
> boxHingeSupportZOffset= -5;
> boxHingeSupportYOffset = -4.5;
> boxHingeNumberOfSplits = 7;
> boxHingeClearance=1;
> //the following variables determine the details of the cylinder (or sphere)
> used for minkowski sums
> boxCornerRoundness = 7;
> boxCornerSmoothness = 16;
> boxRoundCorners = true;
>
> controlArmLength = 0;
> controlArmHeight = 0;
> conrolArmThickness = 0;
> controlArmPinDiameter = 2;
> controlArmHoleZOffset = 0;
> controlArmHoleYOffset = 0;
> controlArmPinTolerance = .1;
>
> lidLipHeight = 2;
> lidThickness = 2;
> lidTolerance = 1;
> lidHingeZOffset = 0;
> lidHingeYOffset = 0;
> lidHingeTolerance = 1;
> lidOverlap = 2;
>
> dispenserHoleLength = 72; //also used for dist between tracks
> dispenserHoleWidth = 11.5;
> dispenserHoleXOffset = 0;
> dispenserHoleYOffset = 0;
>
> trackPanelLength = 76;
> trackPanelHeight = 19;
> trackPanelThickness = 3;
> trackWidth = 2.5;
> trackLength = 61;
> trackHeight = 14;
>
> rollerDiameter = 7;
> rollerLength = 71;
>
> rollerPinDiameter = 2;
> hingePinDiameter = 1.6;
> pinLength= 71;
>
> pinTolerance = 1;
> cigaretteDiameter = 7.75;
> cigaretteLength = 70;
>
> booleanOverlap = .01; //to ensure that the faces used to difference() dont
> line up
>
> lowRollingClearance = 5; //the distance from the center of the rolling pin
> to the lid at the lowest point.
> hightRollingClearance = 12.6;
>
> arched = false;
> //uses math to determine the arc radius of the curve of the box and creates
> the appropriate cylinder
>
>
> difference(){
>                     $fn=boxCornerSmoothness;
>                     minkowski(){
>                      cube([lidOverlap + boxLength + lidTolerance - (2 *
> boxCornerRoundness),
>                            lidOverlap + boxWidth + lidTolerance - (2 *
> boxCornerRoundness),
>                            ((lidThickness + lidLipHeight)/2)],
> center=true);
>                      cylinder(r=boxCornerRoundness,
>                                  h=((lidThickness + lidLipHeight)/2),
> center=true);
>                     }
>
>                     translate([0,0,-lidThickness/2 ])
>                     {
>                         $fn=boxCornerSmoothness;
>                         minkowski()
>                         {
>                          cube([boxLength + lidTolerance - (2 *
> boxCornerRoundness) ,
>                                boxWidth + lidTolerance - (2 *
> boxCornerRoundness),
>                                lidLipHeight+booleanOverlap],center = true);
>                          cylinder(r=boxCornerRoundness,h=lidLipHeight/2,
> center = true);
>                         }
>                     }
>                     translate([0,(boxCornerRoundness + lidTolerance +
> lidOverlap+booleanOverlap),-lidThickness/2])
>                     cube([boxLength + lidTolerance - (2 *
> boxCornerRoundness) ,
>                                boxWidth + lidTolerance - (2 *
> boxCornerRoundness),
>                                lidLipHeight +booleanOverlap],center =
> true);
> }
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Frustrating-unexpected-behavior-tp12321.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>



-- 
stempeldergeschichte at googlemail.com <karsten at rohrbach.de>

P.S. Falls meine E-Mail k?rzer ausf?llt als Dir angenehm ist:
Ich probiere gerade aus kurze Antworten statt gar keine Antworten zu
schreiben.
Wenn Du gerne mehr lesen m?chtest, dann lass es mich bitte wissen.

P.S. In case my e-mail is shorter than you enjoy:
I am currently trying short replies instead of no replies at all.
Please let me know, if you like to read more.

Enjoy!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150407/e6852e7c/attachment.html>

From marius at kintel.net  Mon Apr  6 19:23:44 2015
From: marius at kintel.net (kintel)
Date: Mon, 6 Apr 2015 16:23:44 -0700 (MST)
Subject: [OpenSCAD] STL, scad files to pngs
In-Reply-To: <1428355233377-12320.post@n5.nabble.com>
References: <1427456079861-12240.post@n5.nabble.com>
	<1427458573572-12242.post@n5.nabble.com>
	<1427459032555-12243.post@n5.nabble.com>
	<1427463597956-12245.post@n5.nabble.com>
	<CAJgOqABRErXD_0BHmaoskmjc2M0KRk_F2krBmZ9HVvVAcmGXgQ@mail.gmail.com>
	<1427476950663-12252.post@n5.nabble.com>
	<1427481202721-12253.post@n5.nabble.com>
	<1428355233377-12320.post@n5.nabble.com>
Message-ID: <1428362624843-12323.post@n5.nabble.com>

You probably don't have write access to 'Program Files'. Try using an
absolute path, running as administrator, changing access permissions or
running in a different folder.

 -Marius




--
View this message in context: http://forum.openscad.org/STL-scad-files-to-pngs-tp12240p12323.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From linkreincarnate at gmail.com  Mon Apr  6 20:11:17 2015
From: linkreincarnate at gmail.com (linkreincarnate)
Date: Mon, 6 Apr 2015 17:11:17 -0700 (MST)
Subject: [OpenSCAD] Frustrating unexpected behavior
In-Reply-To: <CAJgOqAAb-LGTfWtvBg4OjMjO2Y5ASkFFh24ARmDBbY0F30zNTA@mail.gmail.com>
References: <1428356253895-12321.post@n5.nabble.com>
	<CAJgOqAAb-LGTfWtvBg4OjMjO2Y5ASkFFh24ARmDBbY0F30zNTA@mail.gmail.com>
Message-ID: <1428365477799-12324.post@n5.nabble.com>

I found the issue actually.  I missed a divide by 2 in the box I was
subtracting so that box grew faster than the other for large ratios.  It's
fixed now.  Thanks for the rubberduck code review.



--
View this message in context: http://forum.openscad.org/Frustrating-unexpected-behavior-tp12321p12324.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From linkreincarnate at gmail.com  Mon Apr  6 23:36:57 2015
From: linkreincarnate at gmail.com (linkreincarnate)
Date: Mon, 6 Apr 2015 20:36:57 -0700 (MST)
Subject: [OpenSCAD] Frustrating unexpected behavior
In-Reply-To: <1428365477799-12324.post@n5.nabble.com>
References: <1428356253895-12321.post@n5.nabble.com>
	<CAJgOqAAb-LGTfWtvBg4OjMjO2Y5ASkFFh24ARmDBbY0F30zNTA@mail.gmail.com>
	<1428365477799-12324.post@n5.nabble.com>
Message-ID: <1428377817166-12325.post@n5.nabble.com>

OK So I can make the lid just fine but when my lidThickness to lidLipHeight
ratio is not 1:1 the hinge placement and cutouts get skewed in the direction
of the bigger number.

It's probably easier to show it than to keep trying to explain though.

<http://forum.openscad.org/file/n12325/IdealHingePlacement.png> 
This is a pic of the hinge in it's proper placement.  So long as my
lidThickness = lidLipHeight the hinge always gets aligned to the right spot
no matter what the two number are.

<http://forum.openscad.org/file/n12325/lidLipHeightTooHigh_.png> 
This is a pic of the hinge when lidThickness is smaller than lidLipHeight. 
As you can see the hinge is higher off of the lid and the cutouts are very
shallow.

<http://forum.openscad.org/file/n12325/lidThicknessTooHigh.png> 
This is a picture of the hinge when the lidThickness is larger than the
lidLipHeight.  As you can see now the hinge is too low and there is not
enough clearance for proper operation.

How can I fix my file so that no matter what values I enter for lidThickness
and lidLipHeight the hinge will always be at the proper height? 



--
View this message in context: http://forum.openscad.org/Frustrating-unexpected-behavior-tp12321p12325.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From linkreincarnate at gmail.com  Mon Apr  6 23:44:14 2015
From: linkreincarnate at gmail.com (linkreincarnate)
Date: Mon, 6 Apr 2015 20:44:14 -0700 (MST)
Subject: [OpenSCAD] Frustrating unexpected behavior
In-Reply-To: <1428377817166-12325.post@n5.nabble.com>
References: <1428356253895-12321.post@n5.nabble.com>
	<CAJgOqAAb-LGTfWtvBg4OjMjO2Y5ASkFFh24ARmDBbY0F30zNTA@mail.gmail.com>
	<1428365477799-12324.post@n5.nabble.com>
	<1428377817166-12325.post@n5.nabble.com>
Message-ID: <1428378254914-12326.post@n5.nabble.com>

//Here is the entire openscad file it uses no external libraries or modules
so you should be able to just copy paste it from here
//3d printable cigarette rolling machine
//Created By LinkReincarnate
//CC Share Alike Attribution Non-Commercial
//*************VARIABLE DECLARATION SECTION******** all values are in mm
{
boxLength = 90.4;
boxWidth = 81.25;
boxHeight = 19.2;
boxBottomThickness = .67;
boxWallThickness = .67;
boxArcHeight = 3.5;
boxArcRadius=1;
boxControlArmHoleZOffset = 3.5;
boxControlArmHoleYOffset = 3;
boxHingePinDiameter = 3;
boxHingeDiameter= 5;
boxHingeZOffset = 0;
boxHingeYOffset = 0;
boxHingeTolerance = .1;
boxHingeSupportZOffset= -5;
boxHingeSupportYOffset = -4.5;
boxHingeNumberOfSplits = 7;
boxHingeClearance=1;
//the following variables determine the details of the cylinder (or sphere)
used for minkowski sums
boxCornerRoundness = 7;
boxCornerSmoothness = 16;
boxRoundCorners = true;

controlArmLength = 0;
controlArmHeight = 0;
conrolArmThickness = 0;
controlArmPinDiameter = 2;
controlArmHoleZOffset = 0;
controlArmHoleYOffset = 0;
controlArmPinTolerance = .1;

lidLipHeight = 5;
lidThickness = 5;
lidTolerance = 1;
lidHingeZOffset = -boxHeight/2;
lidHingeYOffset = 0;
lidHingeTolerance = 1;
lidOverlap = 2;

hingeSlotXOffset = 0;
hingeSlotYOffset = 0;
hingeSlotZOffset = 0;

dispenserHoleLength = 72; //also used for dist between tracks
dispenserHoleWidth = 11.5;
dispenserHoleXOffset = 0;
dispenserHoleYOffset = 0;

trackPanelLength = 76;
trackPanelHeight = 19;
trackPanelThickness = 3;
trackWidth = 2.5;
trackLength = 61;
trackHeight = 14;

rollerDiameter = 7;
rollerLength = 71;

rollerPinDiameter = 2;
hingePinDiameter = 1.6;
pinLength= 71;

pinTolerance = 1;
cigaretteDiameter = 7.75;
cigaretteLength = 70;

booleanOverlap = .01; //to ensure that the faces used to difference() dont
line up

lowRollingClearance = 5; //the distance from the center of the rolling pin
to the lid at the lowest point.
hightRollingClearance = 12.6;

arched = false;
//uses math to determin the arc radius of the curve of the box and creates
the appropriate cylinder
}
//*************MODULE DECLARATION SECTION***************************
module CreateArc(            arcLength,
                             arcHeight, 
                             cylinderHeight) 
                             {
                                carveRadius = ((arcHeight/2)+((arcLength *
arcLength)/arcHeight * 8)/(53));
                                
                                rotate(a=[90,180,90]){
                                    translate([0,-carveRadius + arcHeight -
(boxHeight/2),0]){
                                        cylinder(r=carveRadius,
h=cylinderHeight+booleanOverlap, $fn=1024, center=true);
                                    }
                                     
                                }
                             }
                                                      

module CreateNonArchedBody(  boxLength, 
                             boxWidth, 
                             boxHeight, 
                             boxBottomThickness, 
                             boxWallThickness,
                             boxRoundCorners,
                             boxCornerRoundness,
                             boxCornerSmoothness, 
                             boxHingeDiameter, 
                             boxHingePinDiameter,  
                             boxHingeZOffset, 
                             boxHingeYOffset, 
                             boxHingeTolerance,
                             boxHingeClearance,
                             boxHingeNumberOfSplits, 
                             pinTolerance, 
                             controlArmPinDiameter,
                             boxControlArmHoleZOffset,   
                             boxControlArmHoleYOffset,
                             controlArmPinTolerance,
                             boxHingeSupportZOffset,
                             boxHingeSupportYOffset,
                             booleanOverlap){
 //union joins the difference of the outer and inner bodies with a pinhole
for the arms and the hinge parts
    union(){
        //create body
         if (boxRoundCorners){
           translate([0,0,boxHingeSupportZOffset])
             difference(){     
                    $fn=boxCornerSmoothness;
                    minkowski(){
                     cube([boxLength-(2*boxCornerRoundness),boxWidth -
(2*boxCornerRoundness),boxHeight/2], 
                         center = true);
                     cylinder(r=boxCornerRoundness,h=boxHeight/2);
                    }
                    translate([0,0,(boxBottomThickness/2)]) {
                        $fn=boxCornerSmoothness;
                        minkowski()
                        {
                         cube([boxLength -
boxWallThickness-(2*boxCornerRoundness), 
                                  boxWidth - boxWallThickness
-(2*boxCornerRoundness), 
                                  (((boxHeight/2) - boxBottomThickness) +
booleanOverlap)], 
                                  center = true);
                         cylinder(r=boxCornerRoundness,h=boxHeight/2);
                        }
                    }
                    //create pinholes to connect control arms
                    rotate(a=[0, -90, 0]){
                       
translate([boxControlArmHoleZOffset,boxControlArmHoleYOffset,0]){
                            cylinder(d= (controlArmPinDiameter +
controlArmPinTolerance), 
                                         boxLength + booleanOverlap, 
                                         center=true );
                        }
                    }
                    
             } 
         } else {
              difference(){
                    cube([boxLength,boxWidth,boxHeight], 
                         center = true);
                    translate([0,0,(boxBottomThickness/2)]) {
                        cube([boxLength - boxWallThickness, 
                              boxWidth - boxWallThickness, 
                              ((boxHeight - boxBottomThickness) +
booleanOverlap)], 
                              center = true);
                    }
                    //create pinholes to connect control arms
                    rotate(a=[0, -90, 0]){
                       
translate([boxControlArmHoleZOffset,boxControlArmHoleYOffset,0]){
                            cylinder(d= (controlArmPinDiameter +
controlArmPinTolerance), 
                                         boxLength + booleanOverlap, 
                                         center=true );
                        }
                    }
                    
              }   
         }
         CreateHinge(boxRoundCorners,
                     boxWidth,
                     boxLength,
                     boxHeight,
                     boxHingeDiameter, 
                     boxHingePinDiameter,  
                     boxHingeZOffset, 
                     boxHingeYOffset, 
                     boxHingeTolerance,
                     boxHingeClearance,
                     boxHingeNumberOfSplits, 
                     pinTolerance,
                     boxHingeSupportZOffset,
                     boxHingeSupportYOffset,
                     lidHingeZOffset,
                     lidHingeYOffset,
                     lidHingeTolerance,
                     booleanOverlap);
     }// end of union body and hinge
}//end of module
module CreateArchedBody(     boxLength, 
                             boxWidth, 
                             boxHeight, 
                             boxBottomThickness, 
                             boxWallThickness,
                             boxRoundCorners,
                             boxCornerRoundness,
                             boxCornerSmoothness, 
                             boxHingeDiameter, 
                             boxHingePinDiameter,  
                             boxHingeZOffset, 
                             boxHingeYOffset, 
                             boxHingeTolerance,
                             boxHingeClearance,
                             boxHingeNumberOfSplits, 
                             pinTolerance, 
                             controlArmPinDiameter,
                             boxControlArmHoleZOffset,   
                             boxControlArmHoleYOffset,
                             controlArmPinTolerance,
                             boxHingeSupportZOffset,
                             boxHingeSupportYOffset,
                             booleanOverlap,
                             boxArcHeight,
                             boxArcRadius
                             ){
                              union(){
                                //create body
                                  if (boxRoundCorners){
                                    
translate([0,0,boxHingeSupportZOffset+boxArcHeight+1])
                                         difference(){   
                                            intersection(){
                                                $fn=boxCornerSmoothness;
                                                minkowski(){
                                                
cube([boxLength-(2*boxCornerRoundness),
                                                       boxWidth -
(2*boxCornerRoundness),
                                                      
boxHeight+boxArcHeight/2], 
                                                     center = true);
                                                
cylinder(r=boxCornerRoundness,h=boxHeight + boxArcHeight/2);
                                                }
                                               
translate([0,0,-boxHeight+boxArcHeight])
                                                    CreateArc(boxWidth,
boxArcHeight, boxLength);
                                             }  
                                           
translate([0,0,(boxBottomThickness/2)]){
                                               intersection(){
                                                    
$fn=boxCornerSmoothness;
                                                     minkowski(){
                                                         cube([boxLength -
boxWallThickness-(2*boxCornerRoundness), 
                                                               boxWidth -
boxWallThickness -(2*boxCornerRoundness), 
                                                              
(((boxHeight+boxArcHeight/2) - boxBottomThickness) + booleanOverlap)], 
                                                               center =
true);
                                                        
cylinder(r=boxCornerRoundness,h=boxHeight/2);
                                                    }
                                                   
translate([0,0,-boxHeight+boxArcHeight])
                                                        CreateArc(boxWidth,
boxArcHeight, boxLength);
                                                }  
                                            }
                                            //create pinholes to connect
control arms
                                            rotate(a=[0, -90, 0]){
                                               
translate([boxControlArmHoleZOffset,boxControlArmHoleYOffset,0]){
                                                    cylinder(d=
(controlArmPinDiameter +                                                                 
                                                                
controlArmPinTolerance), 
                                                                 boxLength +
booleanOverlap, 
                                                                 center=true
);
                                                }
                                            }
                                            
                                            CreateArc(boxWidth,
boxArcHeight, boxLength+booleanOverlap);
                                          //insert objects here to
difference them from the main body  
                                  } 
                                  } else {
                                      difference(){
                                          intersection(){
                                           
cube([boxLength,boxWidth,boxHeight+boxArcHeight], 
                                                 center = true);
                                           
translate([0,0,-boxHeight+boxArcHeight]){
                                                CreateArc(boxWidth,
boxArcHeight, boxLength);
                                            }
                                             
                                          }
                                            intersection(){
                                               
translate([0,0,(boxBottomThickness/2)]){
                                                    cube([boxLength -
boxWallThickness, 
                                                          boxWidth -
boxWallThickness, 
                                                          ((boxHeight
+boxArcHeight - boxBottomThickness) + booleanOverlap)], 
                                                          center = true);
                                                }
                                               
translate([0,0,-boxHeight+boxArcHeight]){
                                                     CreateArc(boxWidth,
boxArcHeight, boxLength);
                                                } 
                                            }
                                            //create pinholes to connect
control arms
                                            rotate(a=[0, -90, 0]){
                                              
translate([boxControlArmHoleZOffset,boxControlArmHoleYOffset,0]){
                                                   cylinder(d=
(controlArmPinDiameter +                                                        
                                                               
controlArmPinTolerance), 
                                                                boxLength +
booleanOverlap, 
                                                                center=true
);
                                               }
                                            }
                                           
CreateArc(boxWidth,boxArcHeight,boxLength + booleanOverlap);
                                            //insert here to difference with
body
                                        }   
                                }
                                //Create Hinge and hinge support
                                CreateHinge( boxRoundCorners,
                                             boxWidth,
                                             boxLength,
                                             boxHeight,
                                             boxHingeDiameter, 
                                             boxHingePinDiameter,  
                                             boxHingeZOffset, 
                                             boxHingeYOffset, 
                                             boxHingeTolerance,
                                             boxHingeClearance,
                                             boxHingeNumberOfSplits, 
                                             pinTolerance,
                                             boxHingeSupportZOffset,
                                             boxHingeSupportYOffset,
                                             lidHingeZOffset,
                                             lidHingeYOffset,
                                             lidHingeTolerance,
                                             booleanOverlap);
                               //insert new parts to be added to the body
here
                               }
                            }//end of module
module CreateNonArchedLid(          lidLipHeight,
                                    lidThickness,
                                    lidTolerance,
                                    lidHingeZOffset,
                                    lidHingeYOffset,
                                    lidHingeTolerance,
                                    lidOverlap,
                                    hingeSlotXOffset,
                                    hingeSlotYOffset,
                                    hingeSlotZOffset,
                                    boxLength, 
                                    boxWidth, 
                                    boxHeight,
                                    boxRoundCorners,
                                    boxCornerRoundness,
                                    boxCornerSmoothness, 
                                    boxHingeDiameter, 
                                    boxHingePinDiameter,
                                    dispenserHoleLength,
                                    dispenserHoleWidth,
                                    dispenserHoleXOffset,
                                    dispenserHoleYOffset,
                                    rollerLength,
                                    booleanOverlap)
 {
  if (boxRoundCorners){
             difference(){     
                    $fn=boxCornerSmoothness;
                    minkowski(){
                     cube([lidOverlap + boxLength + lidTolerance - (2 *
boxCornerRoundness),
                           lidOverlap + boxWidth + lidTolerance - (2 *
boxCornerRoundness),
                           ((lidThickness + lidLipHeight)/2)], center=true);
                     cylinder(r=boxCornerRoundness,h=((lidThickness +
lidLipHeight)/2), center=true);
                    }
                    
                    translate([0,0,(-lidThickness/2)-booleanOverlap ]){
                        $fn=boxCornerSmoothness;
                        minkowski()
                        {
                         cube([boxLength + lidTolerance - (2 *
boxCornerRoundness) ,
                               boxWidth + lidTolerance - (2 *
boxCornerRoundness),
                               lidLipHeight/2],center = true); 
                         cylinder(r=boxCornerRoundness,h=lidLipHeight/2,
center = true);
                        }
                    }
                    translate([0,(boxCornerRoundness + lidTolerance +
lidOverlap+booleanOverlap),-lidThickness/2])
                    cube([boxLength + lidTolerance - (2 *
boxCornerRoundness) ,
                               boxWidth + lidTolerance - (2 *
boxCornerRoundness),
                               lidLipHeight +booleanOverlap],center = true); 
                    
                    //hingeslots
                    //here the part to be subtracted from the hinge is
created 
                    difference(){
                       
                        translate([0,((boxWidth / 2)+(lidHingeYOffset +
(boxHingeDiameter/2))),((boxHeight/2)+lidHingeZOffset)]){
                            rotate(a=[0,270,0])
                               translate([0,0,-boxLength/2 ]){
                                                    for ( i = [0 :
boxHingeNumberOfSplits/2] )
                                                        {
                                                            
                                                            translate([0, 0,
boxLength/boxHingeNumberOfSplits * i *2])
                                                           
cylinder(d=boxHingeDiameter+boxHingeTolerance+booleanOverlap +
boxHingeClearance, 
                                                                   
(boxLength/boxHingeNumberOfSplits) + boxHingeTolerance + lidHingeTolerance,
                                                                    
center=true);
                                                        }
                                                     
                               }
                        }
                        translate([boxLength/2-lidOverlap -
lidTolerance,0,0]){
                           
cube([boxCornerRoundness+booleanOverlap+lidTolerance,1000,1000],
center=true);
                        }
                        translate([-(boxLength/2-lidOverlap -
lidTolerance),0,0]){
                           
cube([boxCornerRoundness+booleanOverlap+lidTolerance,1000,1000],
center=true);
                        }
                        
                    }//end of hinge slot subtration 
                      
                     
             } // end of difference
         } else {
              difference(){
                    cube([boxLength,boxWidth,boxHeight], 
                         center = true);
                    translate([0,0,(boxBottomThickness/2)]) {
                        cube([boxLength - boxWallThickness, 
                              boxWidth - boxWallThickness, 
                              ((boxHeight - boxBottomThickness) +
booleanOverlap)], 
                              center = true);
                    }
                    //create pinholes to connect control arms
                    rotate(a=[0, -90, 0]){
                       
translate([boxControlArmHoleZOffset,boxControlArmHoleYOffset,0]){
                            cylinder(d= (controlArmPinDiameter +
controlArmPinTolerance), 
                                         boxLength + booleanOverlap, 
                                         center=true );
                        }
                    }
                    
              }   
         }
 }//end of Lid Module
module CreateArchedLid(             lidLipHeight,
                                    lidThickness,
                                    lidTolerance,
                                    lidHingeZOffset,
                                    lidHingeYOffset,
                                    lidHingeTolerance,
                                    boxLength, 
                                    boxWidth, 
                                    boxHeight,
                                    boxRoundCorners,
                                    boxCornerRoundness,
                                    boxCornerSmoothness, 
                                    boxHingeDiameter, 
                                    boxHingePinDiameter,
                                    dispenserHoleLength,
                                    dispenserHoleWidth,
                                    dispenserHoleXOffset,
                                    dispenserHoleYOffset,
                                    rollerLength,
                                    boxArcHeight,
                                    boxArcRadius,
                                    booleanOverlap){}
module CreateControlArm(){}
module CreateControlTrack(){}
module CreateRoller(){}
module CreateLidHinge(   boxRoundCorners,
                         boxWidth,
                         boxLength,
                         boxHeight,
                         boxHingeDiameter, 
                         boxHingePinDiameter,  
                         boxHingeZOffset, 
                         boxHingeYOffset, 
                         boxHingeTolerance,
                         boxHingeClearance,
                         boxHingeNumberOfSplits, 
                         pinTolerance,
                         boxHingeSupportZOffset,
                         boxHingeSupportYOffset,
                         lidHingeZOffset,
                         lidHingeYOffset,
                         lidHingeTolerance,
                         booleanOverlap)
{
difference(){
        union(){
        //hingepart is created here
        if (boxRoundCorners){
            translate([0,((boxWidth / 2)+(lidHingeYOffset +
(boxHingeDiameter/2))),((boxHeight/2)+lidHingeZOffset)]){
                 rotate(a=[0,-90,0]){
                      cylinder(d=boxHingeDiameter, boxLength -
(boxCornerRoundness * 2),center=true);
                      
                 }
            } 
        } else {
               translate([0,((boxWidth / 2)+(lidHingeYOffset +
(boxHingeDiameter/2))),((boxHeight/2)+lidHingeZOffset)]){
                    rotate(a=[0,-90,0]){
                        cylinder(d=boxHingeDiameter, boxLength,center=true);
                    }
                } 
        }
        //add geometry to the hinge here
     }
     //hingehole
     translate([0,((boxWidth / 2)+(lidHingeYOffset +
(boxHingeDiameter/2))),((boxHeight/2)+lidHingeZOffset)]){
          rotate(a=[0,-90,0]){
             cylinder(d=boxHingePinDiameter, boxLength +
booleanOverlap,center=true);    
          }
      }  
      //hingeslots
      //here the part to be subtracted from the hinge is created 
        translate([0,((boxWidth / 2)+(lidHingeYOffset +
(boxHingeDiameter/2))),((boxHeight/2)+lidHingeZOffset)]){
            rotate(a=[0,270,0])
               translate([0,0,-boxLength/2 ]){
                                    for ( i = [0 : boxHingeNumberOfSplits/2]
)
                                        {
                                            
                                            translate([0, 0,
boxLength/boxHingeNumberOfSplits * i *2])
                                           
cylinder(d=boxHingeDiameter+boxHingeTolerance+booleanOverlap +
boxHingeClearance, 
                                                   
(boxLength/boxHingeNumberOfSplits) + boxHingeTolerance + lidHingeTolerance,
                                                     center=true);
                                        }
               }
        } //end of hinge slots                                
     }//end of difference (hinge, hingehole, hingeslots)    
    }
module CreateHinge(  boxRoundCorners,
                     boxWidth,
                     boxLength,
                     boxHeight,
                     boxHingeDiameter, 
                     boxHingePinDiameter,  
                     boxHingeZOffset, 
                     boxHingeYOffset, 
                     boxHingeTolerance,
                     boxHingeClearance,
                     boxHingeNumberOfSplits, 
                     pinTolerance,
                     boxHingeSupportZOffset,
                     boxHingeSupportYOffset,
                     lidHingeZOffset,
                     lidHingeYOffset,
                     lidHingeTolerance,
                     booleanOverlap)
{
    
 //Create Hinge and hinge support
    //difference to create hole in hinge and hinge slots
    
    difference(){
       union(){
        //hingepart is created here
        if (boxRoundCorners){
            translate([0,((boxWidth / 2)+(boxHingeYOffset +
(boxHingeDiameter/2))),((boxHeight/2)+boxHingeZOffset)]){
                 rotate(a=[0,-90,0]){
                      cylinder(d=boxHingeDiameter, boxLength -
(boxCornerRoundness * 2),center=true);
                      
                 }
            } 
        } else {
               translate([0,((boxWidth / 2)+(boxHingeYOffset+ +
(boxHingeDiameter/2))),((boxHeight/2)+boxHingeZOffset)]){
                    rotate(a=[0,-90,0]){
                        cylinder(d=boxHingeDiameter, boxLength,center=true);
                    }
                } 
        }
        //support part is created here, also this part is unioned to the
hingepart
        if(boxRoundCorners){
             translate([0,((boxWidth /
2)+(boxHingeYOffset+boxHingeSupportYOffset)),((boxHeight/2)+boxHingeZOffset
+boxHingeSupportZOffset)]){
                rotate(a=[0,-90,0]){
                     difference(){
                         rotate(a=[0,0,-25]){
                            cylinder(d=boxHingeDiameter*4,
(boxLength-(boxCornerRoundness * 2)), $fn=4,center=true);                                   
                         }
                         rotate(a=[0,0,45]){
                            translate([-4.5, -4.5,0]){
                                cylinder(d=boxHingeDiameter*6, boxLength+1,
$fn=4,center=true);
                            }
                            translate([21.1,-1,0]){
                                cylinder(d=boxHingeDiameter*6, boxLength+1,
$fn=4,center=true);
                            }
                        }
                    }
                       
                }
             }
         }else{
             translate([0,((boxWidth /
2)+(boxHingeYOffset+boxHingeSupportYOffset)),((boxHeight/2)+boxHingeZOffset
+boxHingeSupportZOffset)]){
                rotate(a=[0,-90,0]){
                    difference(){
                        rotate(a=[0,0,-25]){
                         cylinder(d=boxHingeDiameter*4, boxLength,
$fn=4,center=true);                                   
                        }
                        rotate(a=[0,0,45]){
                            translate([-4.5, -4.5,0]){
                                cylinder(d=boxHingeDiameter*6, boxLength+1,
$fn=4,center=true);
                            }
                            translate([21.1,-1,0]){
                                cylinder(d=boxHingeDiameter*6, boxLength+1,
$fn=4,center=true);
                            }
                        }
                    }
                }
             }
         }//end of else  end of addition of geomotry
     }
      //hingehole
      translate([0, ((boxWidth / 2) + (boxHingeYOffset+boxHingeDiameter/2)),
((boxHeight/2)+boxHingeZOffset)]){
                                            rotate(a=[0,-90,0]){
                                              
cylinder(d=boxHingePinDiameter, boxLength + booleanOverlap,center=true);    
                                            }
                                        }  
       //hingeslots
       //here the part to be subtracted from the hinge is created 
        translate([0,((boxWidth / 2)+(boxHingeYOffset +
(boxHingeDiameter/2))),((boxHeight/2)+boxHingeZOffset)]){
            rotate(a=[0,90,0])
               translate([0,0,(-boxLength/2) ]){
                    for ( i = [0 : boxHingeNumberOfSplits/2] ){
                            
                            translate([0, 0,
boxLength/boxHingeNumberOfSplits * i *2])
                           
cylinder(d=boxHingeDiameter+boxHingeTolerance+booleanOverlap +
boxHingeClearance, 
                                      (boxLength/boxHingeNumberOfSplits) +
boxHingeTolerance,
                                       center=true);
                    }
               }
        } //end of hinge slots                                
     }//end of difference (hinge, hingehole, hingeslots)
     
     
    
     
     
    
}//end of Hinge Module
                            
                            
//**********************END OF
DECLARATIONS***********************************
/* 

if(arched){
    CreateArchedBody(         boxLength, 
                             boxWidth, 
                             boxHeight, 
                             boxBottomThickness, 
                             boxWallThickness, 
                             boxRoundCorners,
                             boxCornerRoundness,
                             boxCornerSmoothness, 
                             boxHingeDiameter, 
                             boxHingePinDiameter,  
                             boxHingeZOffset, 
                             boxHingeYOffset, 
                             boxHingeTolerance,
                             boxHingeClearance,
                             boxHingeNumberOfSplits, 
                             pinTolerance, 
                             controlArmPinDiameter,
                             boxControlArmHoleZOffset,   
                             boxControlArmHoleYOffset,
                             controlArmPinTolerance,
                             boxHingeSupportZOffset,
                             boxHingeSupportYOffset,
                             booleanOverlap,
                             boxArcHeight,
                             boxArcRadius
                             );
}else{                         
   CreateNonArchedBody(          boxLength, 
                                 boxWidth, 
                                 boxHeight, 
                                 boxBottomThickness, 
                                 boxWallThickness, 
                                 boxRoundCorners,
                                 boxCornerRoundness,
                                 boxCornerSmoothness, 
                                 boxHingeDiameter, 
                                 boxHingePinDiameter,  
                                 boxHingeZOffset, 
                                 boxHingeYOffset, 
                                 boxHingeTolerance,
                                 boxHingeClearance,
                                 boxHingeNumberOfSplits, 
                                 pinTolerance, 
                                 controlArmPinDiameter,
                                 boxControlArmHoleZOffset,   
                                 boxControlArmHoleYOffset,
                                 controlArmPinTolerance,
                                 boxHingeSupportZOffset,
                                 boxHingeSupportYOffset,
                                 booleanOverlap,
                                 boxArcHeight,
                                 boxArcRadius);
}    

  */



                  
 translate([0,0,boxHeight/2])
 {
    union(){     
     CreateLidHinge(     boxRoundCorners,
                         boxWidth,
                         boxLength,
                         boxHeight,
                         boxHingeDiameter, 
                         boxHingePinDiameter,  
                         boxHingeZOffset, 
                         boxHingeYOffset, 
                         boxHingeTolerance,
                         boxHingeClearance,
                         boxHingeNumberOfSplits, 
                         pinTolerance,
                         boxHingeSupportZOffset,
                         boxHingeSupportYOffset,
                         lidHingeZOffset,
                         lidHingeYOffset,
                         lidHingeTolerance,
                         booleanOverlap);  
                       
     CreateNonArchedLid(                lidLipHeight,
                                        lidThickness,
                                        lidTolerance,
                                        lidHingeZOffset,
                                        lidHingeYOffset,
                                        lidHingeTolerance,
                                        lidOverlap,
                                        hingeSlotXOffset,
                                        hingeSlotYOffset,
                                        hingeSlotZOffset,
                                        boxLength, 
                                        boxWidth, 
                                        boxHeight,
                                        boxRoundCorners,
                                        boxCornerRoundness,
                                        boxCornerSmoothness, 
                                        boxHingeDiameter, 
                                        boxHingePinDiameter,
                                        dispenserHoleLength,
                                        dispenserHoleWidth,
                                        dispenserHoleXOffset,
                                        dispenserHoleYOffset,
                                        rollerLength,
                                        booleanOverlap);
                                    }    
 }       



--
View this message in context: http://forum.openscad.org/Frustrating-unexpected-behavior-tp12321p12326.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From kit.wallace at gmail.com  Wed Apr  8 04:18:04 2015
From: kit.wallace at gmail.com (kitwallace)
Date: Wed, 8 Apr 2015 01:18:04 -0700 (MST)
Subject: [OpenSCAD] animation control and sliders
Message-ID: <1428481084416-12328.post@n5.nabble.com>

I've been playing with a script for generating and folding nets of  solids :

http://kitwallace.tumblr.com/post/115676322654/nets-of-regular-solids

I've set $t to control how folded the net is.  The animation then previews 
the net as it changes from fully open to fully closed.  In addition to
generating animated gifs, this also allows me, with fps set to 0, to view
any intermediate position by setting the value of $t.  This is very handy
but it would be even better to have a slider here so the value can be
changed more easily.

More generally, it would be nice to be able to add more sliders which could
be used to vary any parameter in a  model.

Chris



--
View this message in context: http://forum.openscad.org/animation-control-and-sliders-tp12328.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From linkreincarnate at gmail.com  Wed Apr  8 09:11:21 2015
From: linkreincarnate at gmail.com (linkreincarnate)
Date: Wed, 8 Apr 2015 06:11:21 -0700 (MST)
Subject: [OpenSCAD] Disappearing shapes
Message-ID: <1428498681369-12329.post@n5.nabble.com>

Why when you create a shape to be subtracted from another shape does that
shape not appear in the Thrown Together View unless it intersects with
something?  

  The Devs should add a mode to show every shape no matter what.  If the
shape I am trying to manipulate is not currently intersecting with anything
it is a royal PITA to find it because it is literally invisible.



--
View this message in context: http://forum.openscad.org/Disappearing-shapes-tp12329.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Wed Apr  8 09:19:22 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Wed, 8 Apr 2015 15:19:22 +0200
Subject: [OpenSCAD] Disappearing shapes
In-Reply-To: <1428498681369-12329.post@n5.nabble.com>
References: <1428498681369-12329.post@n5.nabble.com>
Message-ID: <trinity-f1cca66d-ee03-4fbe-bb01-f99c5bb75a94-1428499162654@3capp-gmx-bs39>

Von:?linkreincarnate <linkreincarnate at gmail.com>
> The Devs should add a mode to show every shape no matter what. If the
> shape I am trying to manipulate is not currently intersecting with anything
> it is a royal PITA to find it because it is literally invisible.
>
Have a look at:
http://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Modifier_Characters

Specifically the debug modifier (#) is intended to help with that.

ciao,
  Torsten.


From ed.nisley at pobox.com  Wed Apr  8 09:31:39 2015
From: ed.nisley at pobox.com (Ed Nisley)
Date: Wed, 08 Apr 2015 09:31:39 -0400
Subject: [OpenSCAD] Disappearing shapes
In-Reply-To: <1428498681369-12329.post@n5.nabble.com>
References: <1428498681369-12329.post@n5.nabble.com>
Message-ID: <55252DBB.1010608@pobox.com>

On 04/08/2015 09:11 AM, linkreincarnate wrote:
> it is a royal PITA to find it because it is literally invisible.

I generally prefix a "new shape" with % or #, which makes my obvious 
mistakes more obvious... [sigh]

-- 
Ed
softsolder.com


From linkreincarnate at gmail.com  Wed Apr  8 09:50:49 2015
From: linkreincarnate at gmail.com (linkreincarnate)
Date: Wed, 8 Apr 2015 06:50:49 -0700 (MST)
Subject: [OpenSCAD] Disappearing shapes
In-Reply-To: <trinity-f1cca66d-ee03-4fbe-bb01-f99c5bb75a94-1428499162654@3capp-gmx-bs39>
References: <1428498681369-12329.post@n5.nabble.com>
	<trinity-f1cca66d-ee03-4fbe-bb01-f99c5bb75a94-1428499162654@3capp-gmx-bs39>
Message-ID: <1428501049554-12332.post@n5.nabble.com>

Oh now THAT is very useful!  Thanks for the heads up.



--
View this message in context: http://forum.openscad.org/Disappearing-shapes-tp12329p12332.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Wed Apr  8 10:48:41 2015
From: arnholm at arnholm.org (arnholm at arnholm.org)
Date: Wed, 08 Apr 2015 16:48:41 +0200
Subject: [OpenSCAD] Disappearing shapes
In-Reply-To: <1428501049554-12332.post@n5.nabble.com>
References: <1428498681369-12329.post@n5.nabble.com>
	<trinity-f1cca66d-ee03-4fbe-bb01-f99c5bb75a94-1428499162654@3capp-gmx-bs39>
	<1428501049554-12332.post@n5.nabble.com>
Message-ID: <9c3d96331b567e172a6f2fce22345490@arnholm.org>

On 2015-04-08 15:50, linkreincarnate wrote:
> Oh now THAT is very useful!  Thanks for the heads up.

I found this series of 4 blog posts very useful when I started with 
OpenSCAD, I learned that feature there :-)
http://www.tridimake.com/2014/09/how-to-use-openscad-tricks-and-tips-to.html






From chrisspen at gmail.com  Wed Apr  8 22:02:12 2015
From: chrisspen at gmail.com (Cerin)
Date: Wed, 8 Apr 2015 19:02:12 -0700 (MST)
Subject: [OpenSCAD] How to prevent difference from breaking preview?
In-Reply-To: <54BAD378.5090807@gmx.de>
References: <1421516724889-11067.post@n5.nabble.com>
	<1421522734105-11069.post@n5.nabble.com>
	<CANe40gK2ZjGmbXoLwwyaKBDy5wUwV7u=b+hJ6dHOAi_p_QawsQ@mail.gmail.com>
	<54BACF7F.9020200@gmx.de>
	<CANe40gJptYZOuz_dxKfb3PbB9Jx34FLOxGJCnuPC12gcpFmWUA@mail.gmail.com>
	<54BAD378.5090807@gmx.de>
Message-ID: <CANe40gL+udNOJD8ORYNOcECV_WQAri=KoLfq3_yow8SSquNi6w@mail.gmail.com>

Just wanted to say thanks. The old libGL.so.1 included in the package was
the exact problem. Glxinfo reports I actually have OpenGL 3.3.0 installed,
and when I removed that old lib, now OpenSCAD renders everything correctly.

On Sat, Jan 17, 2015 at 4:26 PM, tp3 [via OpenSCAD] <
ml-node+s1091067n11075h34 at n5.nabble.com> wrote:

> On 01/17/2015 10:17 PM, Cerin wrote:
> > No, I'm using the binary
> http://files.openscad.org/openscad-2014.03.x86-64.tar.gz
>  > that I downloaded from the site's downloads page.
> >
> That's likely a collision of the shipped driver libraries with the
> NVIDIA stuff from the system (hence the OpenGL 1.4).
>
> It might work if you rename the libGL.so.1 in /usr/local/lib/openscad/
> to something like libGL.so.1.old. That should pick up the NVIDIA lib
> then (which is hopefully compatible).
>
> ciao,
>    Torsten.
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=11075&i=0>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>  -- Torsten
>
>
> ------------------------------
>  If you reply to this email, your message will be added to the discussion
> below:
>
> http://forum.openscad.org/How-to-prevent-difference-from-breaking-preview-tp11067p11075.html
>  To unsubscribe from How to prevent difference from breaking preview?, click
> here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=11067&code=Y2hyaXNzcGVuQGdtYWlsLmNvbXwxMTA2N3wxMjg4NzkwNjM4>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/How-to-prevent-difference-from-breaking-preview-tp11067p12334.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150408/0176c9ca/attachment.html>

From mtchkll at gmail.com  Wed Apr  8 22:10:02 2015
From: mtchkll at gmail.com (mitch)
Date: Wed, 8 Apr 2015 19:10:02 -0700 (MST)
Subject: [OpenSCAD] extending MCAD with an example for rotation
In-Reply-To: <1427934520943-12291.post@n5.nabble.com>
References: <CAJgOqABhQLwbrCDJhuqhHgTyrcdvzbSuabUu-_pEYFwbsWKHoA@mail.gmail.com>
	<1427934520943-12291.post@n5.nabble.com>
Message-ID: <1428545402264-12335.post@n5.nabble.com>

I made a variant of your code to create coordinate systems relative to one
another, drawing axes at each origin. Check it out below, maybe you will
find it useful, or be able to point to similar work.

Thanks,
Mitch

<http://forum.openscad.org/file/n12335/DemoLeg.demoleg> 
<http://forum.openscad.org/file/n12335/BranchingDemo.branchingdemo> 


//ex_leg();
ex_branching();

//example: multiple "branches"
module ex_branching(){
    v0=[0,0,0,0,0,0];
    v1=[10,-15,5,0,30,0];
    v2=[0,-40,15,0,160,0];
    v3=[30,30,30,0,0,45];
    
    axes(v1) {cube(4);
        axes(v1){
        axes(v3){
            translate([4,4,4]) sphere(4,center=true);
        }
            axes(v2){
                axes(v2);
                axes(v1){
                    difference(){
                        cube(10);
                        cube(10,center=true);
                    }
                }
            }
        };
    }
}


//example: leg
module ex_leg(){
    v0=[0,0,0,0,0,0];
    foot_width=6;foot_length=20;foot_height=4;
    joint_radius=3;
    leg_width=4;leg_length=60;
    a_ankle_x=10;
    a_ankle_y=0;
    a_ankle_z=0;
    a_knee_x=-15;
    a_knee_y=0;
    a_knee_z=0;
    thigh_length=40;
    thigh_width=6;
    
    
   
v_foot_leg=[foot_width/2,foot_length+joint_radius,foot_height/2,a_ankle_x,a_ankle_y,a_ankle_z];
    v_leg_thigh=[0,0,leg_length+2*joint_radius,a_knee_x,a_knee_y,a_knee_z];
    
    axes(v0){
        %cube([foot_width,foot_length,foot_height]);
        axes(v_foot_leg){
            sphere(joint_radius,center=true);
            translate([0,0,leg_length/2+joint_radius])
            %cube([leg_width,leg_width,leg_length],center=true);
            axes(v_leg_thigh){
                sphere(joint_radius,center=true);
                translate([0,0,thigh_length/2+joint_radius]) 
                %cube([thigh_width,thigh_width,thigh_length],center=true);
            
            }
        }
    }
}
    

//axes reference geometry
module axes(coords){
    
    //represent axes in a particular position and orientation.
    x=coords[0];
    y=coords[1];
    z=coords[2];
    rx=coords[3];
    ry=coords[4];
    rz=coords[5];
    h=10;
    w=1;
    length=sqrt(pow(x,2)+pow(y,2)+pow(z,2));
    echo(length);
    b=sqrt(pow(x,2)+pow(y,2));
 
    color([0,0,0,1]) rotate(atan2(y,x)) rotate([0,-atan2(z,norm([x,y])),0])
translate([length/2,0,0]) cube([length,.2,.2],center=true);
    translate([x,y,z]) rotate([rx,ry,rz]) {
        color([1,0,0,1]) translate([h/2,0,0]) cube([h,w,w],center=true);
        color([0,1,0,1]) translate([0,h/2,0]) cube([w,h,w],center=true);
        color([0,0,1,1]) translate([0,0,h/2]) cube([w,w,h],center=true);
        color([0,0,0,1]) cube(2*w,center=true);
    children();
    }
    
}






--
View this message in context: http://forum.openscad.org/extending-MCAD-with-an-example-for-rotation-tp12290p12335.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From blachnio86 at gmail.com  Thu Apr  9 16:55:50 2015
From: blachnio86 at gmail.com (mrJaros)
Date: Thu, 9 Apr 2015 13:55:50 -0700 (MST)
Subject: [OpenSCAD] dxf extrusion issue
Message-ID: <1428612950555-12336.post@n5.nabble.com>

Hi everybody. I have a strange issue when extruding a dxf file: entities
after extrusion are extremely simplified, I mean they consists of very few
polygons. No idea what I'm doing wrong 

I've attached both dxf and scad file for easy reproduce (or deny) my issue
on your machines:
test.scad <http://forum.openscad.org/file/n12336/test.scad>  
test.dxf <http://forum.openscad.org/file/n12336/test.dxf>  

Thanks in advance for your replies!
dxf is created in LibreCAD and in QCAD, same effect.
<http://forum.openscad.org/file/n12336/wtf.png> 



--
View this message in context: http://forum.openscad.org/dxf-extrusion-issue-tp12336.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From blachnio86 at gmail.com  Fri Apr 10 09:35:55 2015
From: blachnio86 at gmail.com (mrJaros)
Date: Fri, 10 Apr 2015 06:35:55 -0700 (MST)
Subject: [OpenSCAD] dxf extrusion issue
In-Reply-To: <1428612950555-12336.post@n5.nabble.com>
References: <1428612950555-12336.post@n5.nabble.com>
Message-ID: <1428672955096-12337.post@n5.nabble.com>

Addidtional info:
I've created dxf using 'polylines' tool in LibreCAD and then I used Modify
-> Round on edges. 



--
View this message in context: http://forum.openscad.org/dxf-extrusion-issue-tp12336p12337.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Fri Apr 10 09:59:59 2015
From: marius at kintel.net (Marius Kintel)
Date: Fri, 10 Apr 2015 09:59:59 -0400
Subject: [OpenSCAD] dxf extrusion issue
In-Reply-To: <1428612950555-12336.post@n5.nabble.com>
References: <1428612950555-12336.post@n5.nabble.com>
Message-ID: <F3132D60-20CC-4122-8C14-F6F77AF93071@kintel.net>

Hi,

The problem is that OpenSCAD doesn?t support POLYLINES which is a mixture of arc and line segments. We treat each element of a polyline as a line segment. You can work around this in LibreCAD by using the ?explode? function to break apart the design into separate elements.

Improving DXF import is a larger issue, see https://github.com/openscad/openscad/wiki/Project%3A-Improve-DXF-import-and-export

 -Marius




From blachnio86 at gmail.com  Fri Apr 10 14:32:48 2015
From: blachnio86 at gmail.com (mrJaros)
Date: Fri, 10 Apr 2015 11:32:48 -0700 (MST)
Subject: [OpenSCAD] dxf extrusion issue
In-Reply-To: <1428612950555-12336.post@n5.nabble.com>
References: <1428612950555-12336.post@n5.nabble.com>
Message-ID: <1428690768579-12339.post@n5.nabble.com>

Thank you kintel.



--
View this message in context: http://forum.openscad.org/dxf-extrusion-issue-tp12336p12339.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Fri Apr 10 15:14:23 2015
From: marius at kintel.net (Marius Kintel)
Date: Fri, 10 Apr 2015 15:14:23 -0400
Subject: [OpenSCAD] dxf extrusion issue
In-Reply-To: <1428690768579-12339.post@n5.nabble.com>
References: <1428612950555-12336.post@n5.nabble.com>
	<1428690768579-12339.post@n5.nabble.com>
Message-ID: <D6237670-86A4-43E2-AECC-C55477562AD9@kintel.net>

I also created an issue on this, in case someone fixes it independently of the bigger DXF project:
https://github.com/openscad/openscad/issues/1307

 -Marius



From linkreincarnate at gmail.com  Fri Apr 10 19:03:28 2015
From: linkreincarnate at gmail.com (linkreincarnate)
Date: Fri, 10 Apr 2015 16:03:28 -0700 (MST)
Subject: [OpenSCAD] Can I get some code review up in here?
Message-ID: <1428707008059-12341.post@n5.nabble.com>

So I just finished my first major project in openscad thanks to all of you
who helped out with my questions.  That said I am sure the code could be
optimized for readability and maintainability.  Would anyone in here be so
kind as to look over my code and offer me some suggestions or examples of
how I could make it better and more easily parametric.  

I am specifically interested in creating better encapsulation, reducing code
duplication, and optimizing for Thingiverse's customizer.



Giant text dump follows.

//3d printable cigarette rolling machine
//Created By LinkReincarnate
//CC Share Alike Attribution Non-Commercial
//*************VARIABLE DECLARATION SECTION******** all values are in mm

    
//make sure to change the hingeSlotXOffset when you change the box length.     
boxLength = 90.4;         
boxWidth = 81.25;
boxHeight = 19.2;
boxBottomThickness = 2;
boxWallThickness = .67;
boxArcHeight = 3.5;
boxArcRadius=1;
boxControlArmHoleZOffset = 3.5;
boxControlArmHoleYOffset = 3;
boxHingePinDiameter = 3;
boxHingeDiameter= 5;
boxHingeZOffset = -5;
boxHingeYOffset = 0;
boxHingeTolerance = .1;
boxHingeSupportZOffset= 0;
boxHingeSupportYOffset = -4.5;
boxHingeNumberOfSplits = 7;
boxHingeClearance=1;
//the following variables determine the details of the cylinder (or sphere)
used for minkowski sums
boxCornerRoundness = 7;
boxCornerSmoothness = 16;

controlArmLength = 38.5;
controlArmHeight = 7;
controlArmThickness = 5;
controlArmPinDiameter = 2;
controlArmHoleZOffset = 0;
controlArmHoleYOffset = 0;
controlArmPinTolerance = .1;

lidLipHeight = 5;
lidThickness = 5;
lidTolerance = 1;
lidHingeZOffset = 0;
lidHingeYOffset = 1;
lidHingeXOffset =.4;
lidHingeTolerance = 1;
lidOverlap = 2;

//moves hinge slot cutouts left and right
hingeSlotXOffset = 0;
hingeSlotYOffset = 0;
hingeSlotZOffset = 0;

dispenserHoleLength = 71.5; //also used for dist between tracks
dispenserHoleWidth = 11.5;
dispenserHoleXOffset = 0;
dispenserHoleYOffset = 0;

trackPanelLength = 76;
trackPanelWidth = 19;
trackPanelThickness = 3;
trackWidth = 2.5;
trackLength = 61;
trackHeight = 14;
trackTolerance = 1;
trackControlPoint1X = 3;
trackControlPoint1Y = 3;
trackControlPoint1Z = 0;
trackControlPoint2X = 9;
trackControlPoint2Y = 9;
trackControlPoint2Z = 0;
trackControlPoint3X = 45;
trackControlPoint3Y = 8;
trackControlPoint3Z = 0;
trackControlPoint4X = 57;
trackControlPoint4Y = 14;
trackControlPoint4Z = 0;


rollerDiameter = 7;
rollerLength = 71;

rollerPinDiameter = 2;
hingePinDiameter = 1.6;
pinLength= 71;

pinTolerance = 1;
cigaretteDiameter = 7.75;
cigaretteLength = 70;

booleanOverlap = .01; //to ensure that the faces used to difference() dont
line up
lowRollingClearance = 5; //the distance from the center of the rolling pin
to the lid at the lowest point.
hightRollingClearance = 12.6;

boxRoundCorners = true;
arched = true;
//uses math to determin the arc radius of the curve of the box and creates
the appropriate cylinder

//*************MODULE DECLARATION SECTION***************************
module CreateArc(            arcLength,
                             arcHeight, 
                             cylinderHeight){
    carveRadius = ((arcHeight/2)+((arcLength * arcLength)/arcHeight *
8)/(53));
    rotate(a=[90,180,90]){
        translate([0,-carveRadius + arcHeight - (boxHeight/2),0]){
            cylinder(r=carveRadius, h=cylinderHeight+booleanOverlap,
$fn=1024, center=true);
        }
         
    }
}//end of module
                                                      

module CreateNonArchedBody(  boxLength, 
                             boxWidth, 
                             boxHeight, 
                             boxBottomThickness, 
                             boxWallThickness,
                             boxRoundCorners,
                             boxCornerRoundness,
                             boxCornerSmoothness, 
                             boxHingeDiameter, 
                             boxHingePinDiameter,  
                             boxHingeZOffset, 
                             boxHingeYOffset, 
                             boxHingeTolerance,
                             boxHingeClearance,
                             boxHingeNumberOfSplits, 
                             pinTolerance, 
                             controlArmPinDiameter,
                             boxControlArmHoleZOffset,   
                             boxControlArmHoleYOffset,
                             controlArmPinTolerance,
                             boxHingeSupportZOffset,
                             boxHingeSupportYOffset,
                             booleanOverlap){
 //union joins the difference of the outer and inner bodies with a pinhole
for the arms and the hinge parts
    union(){
        //create body
         if (boxRoundCorners){
           difference(){     
                $fn=boxCornerSmoothness;
                minkowski(){
                 cube([boxLength-(2*boxCornerRoundness),boxWidth -
(2*boxCornerRoundness),boxHeight/2], 
                     center = true);
                 cylinder(r=boxCornerRoundness,h=boxHeight/2, center=true);
                }
                translate([0,0,(boxBottomThickness/2) + booleanOverlap]) {
                    $fn=boxCornerSmoothness;
                    minkowski()
                    {
                     cube([boxLength -
boxWallThickness-(2*boxCornerRoundness), 
                              boxWidth - boxWallThickness
-(2*boxCornerRoundness), 
                              ((boxHeight/2) - (boxBottomThickness/2))], 
                              center = true);
                     cylinder(r=boxCornerRoundness,h=((boxHeight/2) -
(boxBottomThickness/2)), center=true);
                    }
                }
                //create pinholes to connect control arms
                rotate(a=[0, -90, 0]){
                   
translate([boxControlArmHoleZOffset,boxControlArmHoleYOffset,0]){
                        cylinder(d= (controlArmPinDiameter +
controlArmPinTolerance), 
                                     boxLength + booleanOverlap, 
                                     center=true );
                    }
                }
                
            } //end of difference
         } else {
              difference(){
                    cube([boxLength,boxWidth,boxHeight], 
                         center = true);
                    translate([0,0,(boxBottomThickness/2) +booleanOverlap])
{
                        cube([boxLength - boxWallThickness, 
                              boxWidth - boxWallThickness, 
                              (boxHeight - boxBottomThickness)], 
                              center = true);
                    }
                    //create pinholes to connect control arms
                    rotate(a=[0, -90, 0]){
                       
translate([boxControlArmHoleZOffset,boxControlArmHoleYOffset,0]){
                            cylinder(d= (controlArmPinDiameter +
controlArmPinTolerance), 
                                         boxLength + booleanOverlap, 
                                         center=true );
                        }
                    }
                    
              }   
         }
         CreateHinge(boxRoundCorners,
                     boxWidth,
                     boxLength,
                     boxHeight,
                     boxHingeDiameter, 
                     boxHingePinDiameter,  
                     boxHingeZOffset, 
                     boxHingeYOffset, 
                     boxHingeTolerance,
                     boxHingeClearance,
                     boxHingeNumberOfSplits, 
                     pinTolerance,
                     boxHingeSupportZOffset,
                     boxHingeSupportYOffset,
                     lidHingeZOffset,
                     lidHingeYOffset,
                     lidHingeTolerance,
                     booleanOverlap);
     }// end of union body and hinge
}//end of module
module CreateArchedBody(     boxLength, 
                             boxWidth, 
                             boxHeight, 
                             boxBottomThickness, 
                             boxWallThickness,
                             boxRoundCorners,
                             boxCornerRoundness,
                             boxCornerSmoothness, 
                             boxHingeDiameter, 
                             boxHingePinDiameter,  
                             boxHingeZOffset, 
                             boxHingeYOffset, 
                             boxHingeTolerance,
                             boxHingeClearance,
                             boxHingeNumberOfSplits, 
                             pinTolerance, 
                             controlArmPinDiameter,
                             boxControlArmHoleZOffset,   
                             boxControlArmHoleYOffset,
                             controlArmPinTolerance,
                             boxHingeSupportZOffset,
                             boxHingeSupportYOffset,
                             booleanOverlap,
                             boxArcHeight,
                             boxArcRadius
                             ){
    union(){
    //create body
      if (boxRoundCorners){
         translate([0,0,boxHingeSupportZOffset+boxArcHeight+1])
             difference(){   
                intersection(){
                    $fn=boxCornerSmoothness;
                    minkowski(){
                     cube([boxLength-(2*boxCornerRoundness),
                           boxWidth - (2*boxCornerRoundness),
                           boxHeight+boxArcHeight/2], 
                         center = true);
                     cylinder(r=boxCornerRoundness,h=boxHeight +
boxArcHeight/2);
                    }
                    translate([0,0,-boxHeight+boxArcHeight])
                        CreateArc(boxWidth, boxArcHeight, boxLength);
                 }  
                translate([0,0,(boxBottomThickness/2)]){
                   intersection(){
                         $fn=boxCornerSmoothness;
                         minkowski(){
                             cube([boxLength -
boxWallThickness-(2*boxCornerRoundness), 
                                   boxWidth - boxWallThickness
-(2*boxCornerRoundness), 
                                   (((boxHeight+boxArcHeight/2) -
boxBottomThickness) + booleanOverlap)], 
                                   center = true);
                             cylinder(r=boxCornerRoundness,h=boxHeight/2);
                        }
                        translate([0,0,-boxHeight+boxArcHeight])
                            CreateArc(boxWidth, boxArcHeight, boxLength);
                    }  
                }
                //create pinholes to connect control arms
                rotate(a=[0, -90, 0]){
                   
translate([boxControlArmHoleZOffset,boxControlArmHoleYOffset,0]){
                        cylinder(d= (controlArmPinDiameter +                                                                 
                                     controlArmPinTolerance), 
                                     boxLength + booleanOverlap, 
                                     center=true );
                    }
                }
                
                CreateArc(boxWidth, boxArcHeight, boxLength+booleanOverlap);
              //insert objects here to difference them from the main body  
      } 
      } else {
          difference(){
              intersection(){
                cube([boxLength,boxWidth,boxHeight+boxArcHeight], 
                     center = true);
                translate([0,0,-boxHeight+boxArcHeight]){
                    CreateArc(boxWidth, boxArcHeight, boxLength);
                }
                 
              }
              intersection(){
                    translate([0,0,(boxBottomThickness/2)]){
                        cube([boxLength - boxWallThickness, 
                              boxWidth - boxWallThickness, 
                              ((boxHeight +boxArcHeight -
boxBottomThickness) + booleanOverlap)], 
                              center = true);
                    }
                    translate([0,0,-boxHeight+boxArcHeight]){
                         CreateArc(boxWidth, boxArcHeight, boxLength);
                    } 
                }
                //create pinholes to connect control arms
                rotate(a=[0, -90, 0]){
                  
translate([boxControlArmHoleZOffset,boxControlArmHoleYOffset,0]){
                       cylinder(d= (controlArmPinDiameter +                                                        
                                    controlArmPinTolerance), 
                                    boxLength + booleanOverlap, 
                                    center=true );
                   }
                }
                CreateArc(boxWidth,boxArcHeight,boxLength + booleanOverlap);
                //insert here to difference with body
            }   
      }
    //Create Hinge and hinge support
    CreateHinge( boxRoundCorners,
                 boxWidth,
                 boxLength,
                 boxHeight,
                 boxHingeDiameter, 
                 boxHingePinDiameter,  
                 boxHingeZOffset, 
                 boxHingeYOffset, 
                 boxHingeTolerance,
                 boxHingeClearance,
                 boxHingeNumberOfSplits, 
                 pinTolerance,
                 boxHingeSupportZOffset,
                 boxHingeSupportYOffset,
                 lidHingeZOffset,
                 lidHingeYOffset,
                 lidHingeTolerance,
                 booleanOverlap);
    //insert new parts to be added to the body here
    }
}//end of module
module CreateNonArchedLid(          lidLipHeight,
                                    lidThickness,
                                    lidTolerance,
                                    lidHingeZOffset,
                                    lidHingeYOffset,
                            //add lidHingeXOffset and hingeSlotXOffset
                                    lidHingeTolerance,
                                    lidOverlap,
                                    hingeSlotXOffset,
                                    hingeSlotYOffset,
                                    hingeSlotZOffset,
                                    boxLength, 
                                    boxWidth, 
                                    boxHeight,
                                    boxRoundCorners,
                                    boxCornerRoundness,
                                    boxCornerSmoothness, 
                                    boxHingeDiameter, 
                                    boxHingePinDiameter,
                                    boxHingeNumberOfSplits,
                                    dispenserHoleLength,
                                    dispenserHoleWidth,
                                    dispenserHoleXOffset,
                                    dispenserHoleYOffset,
                                    rollerLength,
                                    trackPanelThickness,
                                    booleanOverlap){
  if (boxRoundCorners){
             difference(){     
                    $fn=boxCornerSmoothness;
                    //this is the exterior of the lid
                    minkowski(){
                     cube([lidOverlap + boxLength + lidTolerance - (2 *
boxCornerRoundness),
                           lidOverlap + boxWidth + lidTolerance - (2 *
boxCornerRoundness),
                           ((lidThickness + lidLipHeight)/2)]);
                     cylinder(r=boxCornerRoundness,h=((lidThickness +
lidLipHeight)/2));
                    }
                    //this is the interior cutout
                    translate([lidOverlap/2,lidOverlap/2,-booleanOverlap ]){
                        $fn=boxCornerSmoothness;
                        minkowski()
                        {
                         cube([boxLength + lidTolerance - (2 *
boxCornerRoundness) ,
                               boxWidth + lidTolerance - (2 *
boxCornerRoundness),
                               lidLipHeight/2]); 
                         cylinder(r=boxCornerRoundness,h=lidLipHeight/2);
                        }
                    }
                    //this is the hinge lip cutout
                    {
                    translate([-((boxCornerRoundness/2) + (lidTolerance/2) +
((lidOverlap/2))),0,-booleanOverlap])
                    cube([boxLength - lidTolerance,
                               boxWidth + lidTolerance,
                               lidLipHeight +booleanOverlap]); 
                    }
                    //hingeslots
                    //this splits the hinge cylinder into individual pieces,
also cuts clearance slots into the lid
                    difference(){
                        //change this rotate to 90 to invert the hinge slot
cut over one hingelength
                      rotate(a=[0,270,0]) 
                       translate([lidLipHeight,
                                  boxWidth + lidOverlap -
(boxCornerRoundness),
                                  -((boxCornerRoundness/2)) -boxLength]){
                          translate([0,0,hingeSlotXOffset + lidOverlap/2 +
lidTolerance])
                          {
                               for ( i = [0 : boxHingeNumberOfSplits/2] )
                                    {
                                        //LOOK HERE TO TRY TO FIX HINGE SLOT
MISALIGNMENT
                                        translate([0, 0,
boxLength/boxHingeNumberOfSplits * i *2])
                                       
cylinder(d=boxHingeDiameter+boxHingeTolerance+booleanOverlap +
boxHingeClearance, 
                                               
(boxLength/boxHingeNumberOfSplits) + boxHingeTolerance + lidHingeTolerance);
                                     }
                          }
                               
                        }
                        //this cube acts as an endstop precenting the hinge
from being cut past the point it needs to be cut
                        translate([-boxCornerRoundness + boxLength
-(boxCornerRoundness/2) +lidTolerance/2 - (lidOverlap/2),
                                   0,
                                   lidLipHeight -boxHingeDiameter -
boxHingeTolerance - boxHingeClearance,]){
                            cube([boxCornerRoundness,
                                  boxWidth+10,
                                  boxHeight]);
                        }
                        //same as above but on the other side! exciting...
                        translate([-boxCornerRoundness,
                                   0,
                                   lidLipHeight -boxHingeDiameter -
boxHingeTolerance - boxHingeClearance]){
                            cube([boxCornerRoundness,
                                  boxWidth+10,
                                  boxHeight]);
                        }
                    }//end of hinge slot subtration
                    //dispenser hole
                    translate([boxCornerRoundness/2 +lidTolerance/2
,0,lidThickness-2])
                   
cube([dispenserHoleLength,dispenserHoleWidth,lidThickness+10
+booleanOverlap]);
                    //trackPanelMountingHoles
  //***********Get the thickness out of the module somehow so i can arrange
the track panels outside the dispenser hole                  
                    translate([boxCornerRoundness/2
+lidTolerance/2,0,lidThickness+booleanOverlap]){
                     rotate([270,0,90]){ 
                     #CreateControlTrack(
                            controlArmLength,
                            controlArmHeight,
                            controlArmThickness,
                            controlArmPinDiameter,
                            controlArmHoleZOffset,
                            controlArmHoleYOffset,
                            controlArmPinTolerance,
                            lidLipHeight,
                            lidThickness,
                            lidTolerance,
                            boxLength, 
                            boxWidth, 
                            boxHeight,
                            boxRoundCorners,
                            boxCornerRoundness,
                            boxHingePinDiameter,
                            trackPanelLength,
                            trackPanelWidth,
                            trackPanelThickness,
                            trackWidth,
                            trackLength,
                            trackHeight,
                            trackTolerance,
                            trackControlPoint1X,
                            trackControlPoint1Y,
                            trackControlPoint1Z,
                            trackControlPoint2X,
                            trackControlPoint2Y,
                            trackControlPoint2Z,
                            trackControlPoint3X,
                            trackControlPoint3Y,
                            trackControlPoint3Z,
                            trackControlPoint4X,
                            trackControlPoint4Y,
                            trackControlPoint4Z); 
                      translate([0,0,-dispenserHoleLength
-trackPanelThickness])
                     #CreateControlTrack(
                            controlArmLength,
                            controlArmHeight,
                            controlArmThickness,
                            controlArmPinDiameter,
                            controlArmHoleZOffset,
                            controlArmHoleYOffset,
                            controlArmPinTolerance,
                            lidLipHeight,
                            lidThickness,
                            lidTolerance,
                            boxLength, 
                            boxWidth, 
                            boxHeight,
                            boxRoundCorners,
                            boxCornerRoundness,
                            boxHingePinDiameter,
                            trackPanelLength,
                            trackPanelWidth,
                            trackPanelThickness,
                            trackWidth,
                            trackLength,
                            trackHeight,
                            trackTolerance,
                            trackControlPoint1X,
                            trackControlPoint1Y,
                            trackControlPoint1Z,
                            trackControlPoint2X,
                            trackControlPoint2Y,
                            trackControlPoint2Z,
                            trackControlPoint3X,
                            trackControlPoint3Y,
                            trackControlPoint3Z,
                            trackControlPoint4X,
                            trackControlPoint4Y,
                            trackControlPoint4Z); 
                        }
                    }
             } // end of difference
         } else {
              difference(){     
                   //this is the exterior of the lid
                   cube([lidOverlap + boxLength + lidTolerance,
                           lidOverlap + boxWidth + lidTolerance,
                           ((lidThickness + lidLipHeight))]);
                    //this is the interior cutout
                    translate([lidOverlap/2,lidOverlap +
booleanOverlap,-booleanOverlap]){
                        cube([boxLength + lidTolerance,
                               boxWidth + lidTolerance,
                               lidLipHeight]); 
                    }
                    //this is the hinge lip cutout
                    translate([lidOverlap/2,lidOverlap/2,-booleanOverlap]){
                        cube([boxLength + lidTolerance,
                                   boxWidth + lidTolerance,
                                   lidLipHeight]); 
                    }
                    //hingeslots
                    //this splits the hinge cylinder into individual pieces,
also cuts clearance slots into the lid
                    rotate(a=[0,90,0]) 
                       translate([-lidLipHeight,+boxWidth +
boxHingeDiameter/2,lidOverlap/2]){
                            for ( i = [0 : boxHingeNumberOfSplits] ){
                                    translate([0, 0,
boxLength/boxHingeNumberOfSplits * i *2])
                                   
cylinder(d=boxHingeDiameter+boxHingeTolerance+booleanOverlap +
boxHingeClearance, 
                                           
(boxLength/boxHingeNumberOfSplits) + boxHingeTolerance + lidHingeTolerance);
                            }
                        }
              } // end of difference   
         }//end of else
         

 }//end of Lid Module
module CreateArchedLid(             lidLipHeight,
                                    lidThickness,
                                    lidTolerance,
                                    lidHingeZOffset,
                                    lidHingeYOffset,
                                    lidHingeTolerance,
                                    boxLength, 
                                    boxWidth, 
                                    boxHeight,
                                    boxRoundCorners,
                                    boxCornerRoundness,
                                    boxCornerSmoothness, 
                                    boxHingeDiameter, 
                                    boxHingePinDiameter,
                                    dispenserHoleLength,
                                    dispenserHoleWidth,
                                    dispenserHoleXOffset,
                                    dispenserHoleYOffset,
                                    rollerLength,
                                    boxArcHeight,
                                    boxArcRadius,
                                    booleanOverlap)
                                    {}
                                    
                                    
module CreateControlArm(            controlArmLength,
                                    controlArmHeight,
                                    controlArmThickness,
                                    controlArmPinDiameter,
                                    controlArmHoleZOffset,
                                    controlArmHoleYOffset,
                                    controlArmPinTolerance){

    difference(){
        hull(){
            translate()
                cylinder(d=controlArmHeight, h=controlArmThickness);
            translate([controlArmLength,0,0])
                cylinder(d=controlArmHeight, h=controlArmThickness);
        }//end of hull
        translate([0,0,-controlArmThickness/2])
                #cylinder(d=controlArmPinDiameter, h=controlArmThickness*2,
$fn=32);
            translate([controlArmLength,0,-controlArmThickness/2])
                #cylinder(d=controlArmPinDiameter, h=controlArmThickness*2,
$fn=32);
    }//end of difference
}//end of module
module CreateControlTrack(          controlArmLength,
                                    controlArmHeight,
                                    controlArmThickness,
                                    controlArmPinDiameter,
                                    controlArmHoleZOffset,
                                    controlArmHoleYOffset,
                                    controlArmPinTolerance,
                                    lidLipHeight,
                                    lidThickness,
                                    lidTolerance,
                                    boxLength, 
                                    boxWidth, 
                                    boxHeight,
                                    boxRoundCorners,
                                    boxCornerRoundness, 
                                    boxHingePinDiameter,
                                    trackPanelLength,
                                    trackPanelWidth,
                                    trackPanelThickness,
                                    trackWidth,
                                    trackLength,
                                    trackHeight,
                                    trackTolerance,
                                    trackControlPoint1X,
                                    trackControlPoint1Y,
                                    trackControlPoint1Z,
                                    trackControlPoint2X,
                                    trackControlPoint2Y,
                                    trackControlPoint2Z,
                                    trackControlPoint3X,
                                    trackControlPoint3Y,
                                    trackControlPoint3Z,
                                    trackControlPoint4X,
                                    trackControlPoint4Y,
                                    trackControlPoint4Z){ 
    union(){                                     
        difference(){
            //Track Panel
            cube([trackPanelLength,trackPanelWidth, trackPanelThickness]);
            //Track 
            hull(){ 
               
translate([trackControlPoint1X,trackControlPoint1Y,trackControlPoint1Z -
booleanOverlap])
                    cylinder(d=trackWidth+trackTolerance,h =
trackPanelThickness + booleanOverlap*2, $fn=32);
                
               
translate([trackControlPoint2X,trackControlPoint2Y,trackControlPoint2Z -
booleanOverlap])
                    cylinder(d=trackWidth+trackTolerance,h =
trackPanelThickness + booleanOverlap*2, $fn=64);
            }
            hull(){ 
               
translate([trackControlPoint2X,trackControlPoint2Y,trackControlPoint2Z -
booleanOverlap])
                    cylinder(d=trackWidth+trackTolerance,h =
trackPanelThickness + booleanOverlap*2, $fn=64);
                
               
translate([trackControlPoint3X,trackControlPoint3Y,trackControlPoint3Z -
booleanOverlap])
                    cylinder(d=trackWidth+trackTolerance,h =
trackPanelThickness + booleanOverlap*2, $fn=64);
            }
            hull(){ 
               
translate([trackControlPoint3X,trackControlPoint3Y,trackControlPoint3Z -
booleanOverlap])
                    cylinder(d=trackWidth+trackTolerance,h =
trackPanelThickness + booleanOverlap*2, $fn=64);
                
               
translate([trackControlPoint4X,trackControlPoint4Y,trackControlPoint4Z -
booleanOverlap])
                    cylinder(d=trackWidth+trackTolerance,h =
trackPanelThickness + booleanOverlap*2, $fn=64);
            }
            //rollerflap pin holes
            translate([trackPanelLength*.14,trackPanelWidth
*.07,-booleanOverlap])
                cylinder(d= boxHingePinDiameter, h= trackPanelThickness +
booleanOverlap*2, $fn=64);
            translate([trackPanelLength*.9,trackPanelWidth
*.14,-booleanOverlap])
                cylinder(d= boxHingePinDiameter, h= trackPanelThickness +
booleanOverlap*2, $fn=64);
            
            //Right Side Angle Cut
            translate([trackPanelLength,0,-booleanOverlap]){
                rotate([0,0,45]){
                   
cube([trackPanelLength/4,sqrt(pow(trackPanelWidth,2)+pow(trackPanelWidth,2)),trackPanelThickness+booleanOverlap*2]);
                }
            }
            
            //bottom-left corner rounding
           difference(){
                translate([-booleanOverlap,-booleanOverlap,-booleanOverlap])
               
cube([trackWidth*2+booleanOverlap*2,trackWidth*2+booleanOverlap*2,trackPanelThickness
+ booleanOverlap*2]);
                translate([trackWidth,trackWidth,-booleanOverlap])
                    cylinder(r=trackWidth,h=trackPanelThickness +
booleanOverlap*2);
                translate([trackWidth*2,-trackWidth,0])
                    rotate([0,0,45])
                        cube([trackWidth*4,trackWidth*4,trackPanelThickness
+ booleanOverlap*2]);
           }
           //top-left corner cuttoff
           translate([-booleanOverlap,(trackPanelWidth/2) - booleanOverlap,
- booleanOverlap])
               rotate([0,0,45])
                   cube([trackPanelWidth + booleanOverlap*2, trackPanelWidth
+ booleanOverlap*2, trackPanelThickness + booleanOverlap*2]);
           //Top angle cutoff
           translate([-booleanOverlap, (trackPanelWidth * .75) -
booleanOverlap, - booleanOverlap])
               rotate([0,0,3])
                   cube([trackPanelLength + booleanOverlap*2,
trackPanelWidth + booleanOverlap*2, trackPanelThickness +
booleanOverlap*2]);
           //Bottom-right corner rounding
           translate([trackPanelLength-lidTolerance,
-booleanOverlap,-booleanOverlap])
                   rotate([0,0,0])
                   cube([trackPanelWidth, trackPanelWidth,
trackPanelThickness + booleanOverlap*2]);
           
            
        }//end of difference
    //Connecting tabs
    translate([trackPanelLength*.66,-lidThickness, 0])    
        cube([trackPanelThickness,lidThickness+1,trackPanelThickness]); 
    translate([trackPanelLength*.22, -lidThickness, 0])    
        cube([trackPanelThickness,lidThickness+1,trackPanelThickness]);     
    }//end of union    
}// end of CreateControlTrack module
module CreateRoller(                rollerDiameter,
                                    rollerLength,
                                    rollerPinDiameter){
difference(){
    
    cylinder(d=rollerDiameter, h=rollerLength);                        
    }
    translate([0,0,-2.5])
    cylinder(d=rollerPinDiameter, h=rollerLength +5);
}

module CreateLidHinge(              boxRoundCorners,
                                    boxWidth,
                                    boxLength,
                                    boxHeight,
                                    boxHingeDiameter, 
                                    boxHingePinDiameter,  
                                    boxHingeZOffset, 
                                    boxHingeYOffset, 
                                    boxHingeTolerance,
                                    boxHingeClearance,
                                    boxHingeNumberOfSplits, 
                                    pinTolerance,
                                    boxHingeSupportZOffset,
                                    boxHingeSupportYOffset,
                                    lidHingeZOffset,
                                    lidHingeYOffset,
                                    lidHingeXOffset,
                                    lidHingeTolerance,
                                    lidOverlap,
                                    booleanOverlap){
difference(){
    union(){
        //hingepart is created here
        if (boxRoundCorners){
            
            translate([boxLength + lidOverlap/2 + lidTolerance/2 -
(boxCornerRoundness*2) + lidHingeXOffset,
                       boxWidth +lidHingeYOffset -(boxCornerRoundness/2) -
lidOverlap/2 + lidTolerance/2,
                       (lidThickness)+lidHingeZOffset]){
                //remember rotation is counterclockwise 
                rotate(a=[0,270,0]){
                      cylinder(d=boxHingeDiameter, boxLength -
(boxCornerRoundness * 2));
                }
            } 
        } else {
               translate([lidOverlap/2 + lidTolerance/2 +lidHingeXOffset,
                       (boxWidth + lidHingeYOffset + boxHingeDiameter/2),
                       (lidThickness)+lidHingeZOffset ]){
                //remember rotation is counterclockwise 
                    rotate(a=[0,90,0])
                    {
                          cylinder(d=boxHingeDiameter, boxLength);
                    }
                }  
        }
        //add geometry to the hinge here
     }
     
     //hingehole
     if(boxRoundCorners){
         translate([boxLength + lidOverlap/2 + lidTolerance/2 -
(boxCornerRoundness*2) + lidHingeXOffset,
                           boxWidth +lidHingeYOffset -(boxCornerRoundness/2)
- lidOverlap/2 + lidTolerance/2,
                           (lidThickness)+lidHingeZOffset]){
                    //remember rotation is counterclockwise 
                    rotate(a=[0,270,0]){
                          cylinder(d=boxHingePinDiameter, boxLength*2
+booleanOverlap,center=true);    
                    }
         }
     }else{
          translate([lidOverlap/2 + lidTolerance/2 +lidHingeXOffset
+booleanOverlap,
                       (boxWidth + lidHingeYOffset + boxHingeDiameter/2),
                       (lidThickness)+lidHingeZOffset ]){
                //remember rotation is counterclockwise 
                    rotate(a=[0,90,0]){
                          cylinder(d=boxHingePinDiameter, boxLength*2
+booleanOverlap,center=true);    
                    }
         }   
     }
          
        
      //hingeslots
      //here the part to be subtracted from the hinge is created
        if(boxRoundCorners){
                translate([lidOverlap/2 -lidTolerance + lidHingeXOffset,
                               boxWidth +lidHingeYOffset
-(boxCornerRoundness/2) - lidOverlap/2 + lidTolerance/2,
                               (lidThickness)+lidHingeZOffset]){
                    rotate(a=[0,90,0])
                       {
                                            for ( i = [0 :
boxHingeNumberOfSplits/2] )
                                                {
                                                    
                                                    translate([0, 0,
boxLength/boxHingeNumberOfSplits * i *2])
                                                   
cylinder(d=boxHingeDiameter+boxHingeTolerance+booleanOverlap +
boxHingeClearance, 
                                                           
(boxLength/boxHingeNumberOfSplits) + boxHingeTolerance + lidHingeTolerance);
                                                }
                       }
                       
                } 
        }else{
                translate([lidOverlap/2 -lidTolerance + lidHingeXOffset,
                                       boxWidth +lidHingeYOffset  +
lidOverlap + lidTolerance,
                                       (lidThickness)+lidHingeZOffset]){
                            rotate(a=[0,90,0])
                               {
                                                    for ( i = [0 :
boxHingeNumberOfSplits/2] )
                                                        {
                                                            
                                                            translate([0, 0,
boxLength/boxHingeNumberOfSplits * i *2])
                                                           
cylinder(d=boxHingeDiameter+boxHingeTolerance+booleanOverlap +
boxHingeClearance, 
                                                                   
(boxLength/boxHingeNumberOfSplits) + boxHingeTolerance + lidHingeTolerance);
                                                        }
                               }
                               
                }     
        }//end of hinge slots
     
     }//end of difference (hinge, hingehole, hingeslots trackPanelSlots)    
 }//end of module
module CreateHinge(                 boxRoundCorners,
                                    boxWidth,
                                    boxLength,
                                    boxHeight,
                                    boxHingeDiameter, 
                                    boxHingePinDiameter,  
                                    boxHingeZOffset, 
                                    boxHingeYOffset, 
                                    boxHingeTolerance,
                                    boxHingeClearance,
                                    boxHingeNumberOfSplits, 
                                    pinTolerance,
                                    boxHingeSupportZOffset,
                                    boxHingeSupportYOffset,
                                    lidHingeZOffset,
                                    lidHingeYOffset,
                                    lidHingeTolerance,
                                    booleanOverlap){
    
 //Create Hinge and hinge support
    //difference to create hole in hinge and hinge slots
    
    difference(){
       union(){
        //hingepart is created here
        if (boxRoundCorners){
            translate([0,
                       ((boxWidth / 2)+(boxHingeYOffset +
(boxHingeDiameter/2))),
                       (boxHeight/2) ]){
                //remember rotation is counterclockwise 
                rotate(a=[0,270,0]){
                      cylinder(d=boxHingeDiameter, boxLength -
(boxCornerRoundness * 2),center=true);
                }
            } 
        } else {
               translate([0,
                       ((boxWidth / 2)+(boxHingeYOffset +
(boxHingeDiameter/2))),
                       (boxHeight/2) ]){
                //remember rotation is counterclockwise 
                rotate(a=[0,270,0])
                {
                      cylinder(d=boxHingeDiameter, boxLength -
(boxCornerRoundness * 2),center=true);
                }
            }  
        }
        //support part is created here, also this part is unioned to the
hingepart
        if(boxRoundCorners){
             difference(){
                 translate([0,((boxWidth /
2)+(boxHingeYOffset+boxHingeSupportYOffset)),((boxHeight/2)+boxHingeZOffset)]){
                     rotate(a=[0,270,0]){
                        rotate(a=[0,0,-25]){
                            cylinder(d=boxHingeDiameter*4,
(boxLength-(boxCornerRoundness * 2)), $fn=4,center=true);                                   
                        }
                     }
                 }
                 translate([0,boxWidth/4,boxHeight-(boxHeight/4) -
booleanOverlap]){
                     //cut for top of hinge support
                     cube([boxLength +booleanOverlap, boxWidth/2,
boxHeight/2], ,center=true);
                 }
                 //cut for removing hinge support from inside box
                 cube([boxLength-(booleanOverlap),
boxWidth-(booleanOverlap), boxHeight- booleanOverlap],center=true);
             }
         }else{
             difference(){
                 translate([0,((boxWidth /
2)+(boxHingeYOffset+boxHingeSupportYOffset)),((boxHeight/2)+boxHingeZOffset)]){
                     rotate(a=[0,270,0]){
                        rotate(a=[0,0,-25]){
                            cylinder(d=boxHingeDiameter*4, (boxLength),
$fn=4,center=true);                                   
                        }
                     }
                 }
                 translate([0,boxWidth/4,boxHeight-(boxHeight/4) -
booleanOverlap]){
                     //cut for top of hinge support
                     cube([boxLength +booleanOverlap, boxWidth/2,
boxHeight/2], ,center=true);
                 }
                 //cut for removing hinge support from inside box
                 cube([boxLength-booleanOverlap, boxWidth-booleanOverlap,
boxHeight-booleanOverlap],center=true);
             }
         }//end of else  end of addition of geomotry
     }
      //hingehole
      translate([0, ((boxWidth / 2) + (boxHingeYOffset+boxHingeDiameter/2)),
((boxHeight/2))]){
                                            rotate(a=[0,-90,0]){
                                              
cylinder(d=boxHingePinDiameter, boxLength + booleanOverlap,center=true);    
                                            }
                                        }  
       //hingeslots
       //here the part to be subtracted from the hinge is created 
        translate([0,
                   ((boxWidth / 2)+(boxHingeYOffset +
(boxHingeDiameter/2))),
                   ((boxHeight/2))]){
            rotate(a=[0,90,0])
               translate([0,0,(-boxLength/2) ]){
                    for ( i = [0 : boxHingeNumberOfSplits/2] ){
                            
                            translate([0, 0,
boxLength/boxHingeNumberOfSplits * i *2])
                           
cylinder(d=boxHingeDiameter+boxHingeTolerance+booleanOverlap +
boxHingeClearance, 
                                      (boxLength/boxHingeNumberOfSplits) +
boxHingeTolerance,
                                       center=true);
                    }
               }
        } //end of hinge slots                                
     }//end of difference (hinge, hingehole, hingeslots)
     
     
    
     
     
    
}//end of Hinge Module
                            
                            
//**********************END OF
DECLARATIONS***********************************

if(arched){
    CreateArchedBody(         boxLength, 
                             boxWidth, 
                             boxHeight, 
                             boxBottomThickness, 
                             boxWallThickness, 
                             boxRoundCorners,
                             boxCornerRoundness,
                             boxCornerSmoothness, 
                             boxHingeDiameter, 
                             boxHingePinDiameter,  
                             boxHingeZOffset, 
                             boxHingeYOffset, 
                             boxHingeTolerance,
                             boxHingeClearance,
                             boxHingeNumberOfSplits, 
                             pinTolerance, 
                             controlArmPinDiameter,
                             boxControlArmHoleZOffset,   
                             boxControlArmHoleYOffset,
                             controlArmPinTolerance,
                             boxHingeSupportZOffset,
                             boxHingeSupportYOffset,
                             booleanOverlap,
                             boxArcHeight,
                             boxArcRadius
                             );
}else{                         
   CreateNonArchedBody(          boxLength, 
                                 boxWidth, 
                                 boxHeight, 
                                 boxBottomThickness, 
                                 boxWallThickness, 
                                 boxRoundCorners,
                                 boxCornerRoundness,
                                 boxCornerSmoothness, 
                                 boxHingeDiameter, 
                                 boxHingePinDiameter,  
                                 boxHingeZOffset, 
                                 boxHingeYOffset, 
                                 boxHingeTolerance,
                                 boxHingeClearance,
                                 boxHingeNumberOfSplits, 
                                 pinTolerance, 
                                 controlArmPinDiameter,
                                 boxControlArmHoleZOffset,   
                                 boxControlArmHoleYOffset,
                                 controlArmPinTolerance,
                                 boxHingeSupportZOffset,
                                 boxHingeSupportYOffset,
                                 booleanOverlap,
                                 boxArcHeight,
                                 boxArcRadius);
}    


 if(boxRoundCorners){
     rotate([270,0,0])
      union(){
        translate([-boxLength/2 - lidTolerance/2 - lidOverlap/2 +
boxCornerRoundness,
                   -boxWidth/2  - lidTolerance/2 - lidOverlap/2 +
boxCornerRoundness -52.7,
                   (boxHeight/2)+ booleanOverlap-lidLipHeight+33.5]){
            CreateLidHinge(  boxRoundCorners,
                     boxWidth,
                     boxLength,
                     boxHeight,
                     boxHingeDiameter, 
                     boxHingePinDiameter,  
                     boxHingeZOffset, 
                     boxHingeYOffset, 
                     boxHingeTolerance,
                     boxHingeClearance,
                     boxHingeNumberOfSplits, 
                     pinTolerance,
                     boxHingeSupportZOffset,
                     boxHingeSupportYOffset,
                     lidHingeZOffset,
                     lidHingeYOffset,
                     lidHingeXOffset,
                     lidHingeTolerance,
                     lidOverlap,
                     booleanOverlap);  
                 
        CreateNonArchedLid( lidLipHeight,
                        lidThickness,
                        lidTolerance,
                        lidHingeZOffset,
                        lidHingeYOffset,
                        lidHingeTolerance,
                        lidOverlap,
                        hingeSlotXOffset,
                        hingeSlotYOffset,
                        hingeSlotZOffset,
                        boxLength, 
                        boxWidth, 
                        boxHeight,
                        boxRoundCorners,
                        boxCornerRoundness,
                        boxCornerSmoothness, 
                        boxHingeDiameter, 
                        boxHingePinDiameter,
                        boxHingeNumberOfSplits,
                        dispenserHoleLength,
                        dispenserHoleWidth,
                        dispenserHoleXOffset,
                        dispenserHoleYOffset,
                        rollerLength,
                        trackPanelThickness,
                        booleanOverlap);    
                    }//end of Translate
                }//end of union

 }else{
    translate([-boxLength/2 - lidTolerance/2 - lidOverlap/2,
               -boxWidth/2  - lidTolerance/2 - lidOverlap/2,
               (boxHeight/2)+ booleanOverlap-lidLipHeight]){
            
           
CreateNonArchedLid( lidLipHeight,
                    lidThickness,
                    lidTolerance,
                    lidHingeZOffset,
                    lidHingeYOffset,
                    lidHingeTolerance,
                    lidOverlap,
                    hingeSlotXOffset,
                    hingeSlotYOffset,
                    hingeSlotZOffset,
                    boxLength, 
                    boxWidth, 
                    boxHeight,
                    boxRoundCorners,
                    boxCornerRoundness,
                    boxCornerSmoothness, 
                    boxHingeDiameter, 
                    boxHingePinDiameter,
                    boxHingeNumberOfSplits,
                    dispenserHoleLength,
                    dispenserHoleWidth,
                    dispenserHoleXOffset,
                    dispenserHoleYOffset,
                    rollerLength,
                    trackPanelThickness,
                    booleanOverlap);   
               }
     }                                   
   
  

translate([-39.25,3,3.5])
    rotate([0,270,0])
        rotate([0,0,44])
        CreateControlArm(                   controlArmLength,
                                            controlArmHeight,
                                            controlArmThickness,
                                            controlArmPinDiameter,
                                            controlArmHoleZOffset,
                                            controlArmHoleYOffset,
                                            controlArmPinTolerance);
translate([44.25,3,3.5])
    rotate([0,270,0])
        rotate([0,0,44])
        CreateControlArm(                   controlArmLength,
                                            controlArmHeight,
                                            controlArmThickness,
                                            controlArmPinDiameter,
                                            controlArmHoleZOffset,
                                            controlArmHoleYOffset,
                                            controlArmPinTolerance);  
rotate([0,90,0]) 
translate([-31,29,-rollerLength/2])
CreateRoller(rollerDiameter,
                                    rollerLength,
                                    rollerPinDiameter); 





--
View this message in context: http://forum.openscad.org/Can-I-get-some-code-review-up-in-here-tp12341.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From stempeldergeschichte at googlemail.com  Sat Apr 11 10:37:02 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Sat, 11 Apr 2015 16:37:02 +0200
Subject: [OpenSCAD] Can I get some code review up in here?
In-Reply-To: <1428707008059-12341.post@n5.nabble.com>
References: <1428707008059-12341.post@n5.nabble.com>
Message-ID: <CAJgOqADw+z1gVayfOSvyuUqKgMb3aekkZPZmfodW_d=MGaf6bg@mail.gmail.com>

There is an error with the triangular piece below the hinge, it extends
below the box.

2015-04-11 1:03 GMT+02:00 linkreincarnate <linkreincarnate at gmail.com>:

> So I just finished my first major project in openscad thanks to all of you
> who helped out with my questions.  That said I am sure the code could be
> optimized for readability and maintainability.  Would anyone in here be so
> kind as to look over my code and offer me some suggestions or examples of
> how I could make it better and more easily parametric.
>
> I am specifically interested in creating better encapsulation, reducing
> code
> duplication, and optimizing for Thingiverse's customizer.
>
>
>
> Giant text dump follows.
>
> //3d printable cigarette rolling machine
> //Created By LinkReincarnate
> //CC Share Alike Attribution Non-Commercial
> //*************VARIABLE DECLARATION SECTION******** all values are in mm
>
>
> //make sure to change the hingeSlotXOffset when you change the box length.
> boxLength = 90.4;
> boxWidth = 81.25;
> boxHeight = 19.2;
> boxBottomThickness = 2;
> boxWallThickness = .67;
> boxArcHeight = 3.5;
> boxArcRadius=1;
> boxControlArmHoleZOffset = 3.5;
> boxControlArmHoleYOffset = 3;
> boxHingePinDiameter = 3;
> boxHingeDiameter= 5;
> boxHingeZOffset = -5;
> boxHingeYOffset = 0;
> boxHingeTolerance = .1;
> boxHingeSupportZOffset= 0;
> boxHingeSupportYOffset = -4.5;
> boxHingeNumberOfSplits = 7;
> boxHingeClearance=1;
> //the following variables determine the details of the cylinder (or sphere)
> used for minkowski sums
> boxCornerRoundness = 7;
> boxCornerSmoothness = 16;
>
> controlArmLength = 38.5;
> controlArmHeight = 7;
> controlArmThickness = 5;
> controlArmPinDiameter = 2;
> controlArmHoleZOffset = 0;
> controlArmHoleYOffset = 0;
> controlArmPinTolerance = .1;
>
> lidLipHeight = 5;
> lidThickness = 5;
> lidTolerance = 1;
> lidHingeZOffset = 0;
> lidHingeYOffset = 1;
> lidHingeXOffset =.4;
> lidHingeTolerance = 1;
> lidOverlap = 2;
>
> //moves hinge slot cutouts left and right
> hingeSlotXOffset = 0;
> hingeSlotYOffset = 0;
> hingeSlotZOffset = 0;
>
> dispenserHoleLength = 71.5; //also used for dist between tracks
> dispenserHoleWidth = 11.5;
> dispenserHoleXOffset = 0;
> dispenserHoleYOffset = 0;
>
> trackPanelLength = 76;
> trackPanelWidth = 19;
> trackPanelThickness = 3;
> trackWidth = 2.5;
> trackLength = 61;
> trackHeight = 14;
> trackTolerance = 1;
> trackControlPoint1X = 3;
> trackControlPoint1Y = 3;
> trackControlPoint1Z = 0;
> trackControlPoint2X = 9;
> trackControlPoint2Y = 9;
> trackControlPoint2Z = 0;
> trackControlPoint3X = 45;
> trackControlPoint3Y = 8;
> trackControlPoint3Z = 0;
> trackControlPoint4X = 57;
> trackControlPoint4Y = 14;
> trackControlPoint4Z = 0;
>
>
> rollerDiameter = 7;
> rollerLength = 71;
>
> rollerPinDiameter = 2;
> hingePinDiameter = 1.6;
> pinLength= 71;
>
> pinTolerance = 1;
> cigaretteDiameter = 7.75;
> cigaretteLength = 70;
>
> booleanOverlap = .01; //to ensure that the faces used to difference() dont
> line up
> lowRollingClearance = 5; //the distance from the center of the rolling pin
> to the lid at the lowest point.
> hightRollingClearance = 12.6;
>
> boxRoundCorners = true;
> arched = true;
> //uses math to determin the arc radius of the curve of the box and creates
> the appropriate cylinder
>
> //*************MODULE DECLARATION SECTION***************************
> module CreateArc(            arcLength,
>                              arcHeight,
>                              cylinderHeight){
>     carveRadius = ((arcHeight/2)+((arcLength * arcLength)/arcHeight *
> 8)/(53));
>     rotate(a=[90,180,90]){
>         translate([0,-carveRadius + arcHeight - (boxHeight/2),0]){
>             cylinder(r=carveRadius, h=cylinderHeight+booleanOverlap,
> $fn=1024, center=true);
>         }
>
>     }
> }//end of module
>
>
> module CreateNonArchedBody(  boxLength,
>                              boxWidth,
>                              boxHeight,
>                              boxBottomThickness,
>                              boxWallThickness,
>                              boxRoundCorners,
>                              boxCornerRoundness,
>                              boxCornerSmoothness,
>                              boxHingeDiameter,
>                              boxHingePinDiameter,
>                              boxHingeZOffset,
>                              boxHingeYOffset,
>                              boxHingeTolerance,
>                              boxHingeClearance,
>                              boxHingeNumberOfSplits,
>                              pinTolerance,
>                              controlArmPinDiameter,
>                              boxControlArmHoleZOffset,
>                              boxControlArmHoleYOffset,
>                              controlArmPinTolerance,
>                              boxHingeSupportZOffset,
>                              boxHingeSupportYOffset,
>                              booleanOverlap){
>  //union joins the difference of the outer and inner bodies with a pinhole
> for the arms and the hinge parts
>     union(){
>         //create body
>          if (boxRoundCorners){
>            difference(){
>                 $fn=boxCornerSmoothness;
>                 minkowski(){
>                  cube([boxLength-(2*boxCornerRoundness),boxWidth -
> (2*boxCornerRoundness),boxHeight/2],
>                      center = true);
>                  cylinder(r=boxCornerRoundness,h=boxHeight/2, center=true);
>                 }
>                 translate([0,0,(boxBottomThickness/2) + booleanOverlap]) {
>                     $fn=boxCornerSmoothness;
>                     minkowski()
>                     {
>                      cube([boxLength -
> boxWallThickness-(2*boxCornerRoundness),
>                               boxWidth - boxWallThickness
> -(2*boxCornerRoundness),
>                               ((boxHeight/2) - (boxBottomThickness/2))],
>                               center = true);
>                      cylinder(r=boxCornerRoundness,h=((boxHeight/2) -
> (boxBottomThickness/2)), center=true);
>                     }
>                 }
>                 //create pinholes to connect control arms
>                 rotate(a=[0, -90, 0]){
>
> translate([boxControlArmHoleZOffset,boxControlArmHoleYOffset,0]){
>                         cylinder(d= (controlArmPinDiameter +
> controlArmPinTolerance),
>                                      boxLength + booleanOverlap,
>                                      center=true );
>                     }
>                 }
>
>             } //end of difference
>          } else {
>               difference(){
>                     cube([boxLength,boxWidth,boxHeight],
>                          center = true);
>                     translate([0,0,(boxBottomThickness/2) +booleanOverlap])
> {
>                         cube([boxLength - boxWallThickness,
>                               boxWidth - boxWallThickness,
>                               (boxHeight - boxBottomThickness)],
>                               center = true);
>                     }
>                     //create pinholes to connect control arms
>                     rotate(a=[0, -90, 0]){
>
> translate([boxControlArmHoleZOffset,boxControlArmHoleYOffset,0]){
>                             cylinder(d= (controlArmPinDiameter +
> controlArmPinTolerance),
>                                          boxLength + booleanOverlap,
>                                          center=true );
>                         }
>                     }
>
>               }
>          }
>          CreateHinge(boxRoundCorners,
>                      boxWidth,
>                      boxLength,
>                      boxHeight,
>                      boxHingeDiameter,
>                      boxHingePinDiameter,
>                      boxHingeZOffset,
>                      boxHingeYOffset,
>                      boxHingeTolerance,
>                      boxHingeClearance,
>                      boxHingeNumberOfSplits,
>                      pinTolerance,
>                      boxHingeSupportZOffset,
>                      boxHingeSupportYOffset,
>                      lidHingeZOffset,
>                      lidHingeYOffset,
>                      lidHingeTolerance,
>                      booleanOverlap);
>      }// end of union body and hinge
> }//end of module
> module CreateArchedBody(     boxLength,
>                              boxWidth,
>                              boxHeight,
>                              boxBottomThickness,
>                              boxWallThickness,
>                              boxRoundCorners,
>                              boxCornerRoundness,
>                              boxCornerSmoothness,
>                              boxHingeDiameter,
>                              boxHingePinDiameter,
>                              boxHingeZOffset,
>                              boxHingeYOffset,
>                              boxHingeTolerance,
>                              boxHingeClearance,
>                              boxHingeNumberOfSplits,
>                              pinTolerance,
>                              controlArmPinDiameter,
>                              boxControlArmHoleZOffset,
>                              boxControlArmHoleYOffset,
>                              controlArmPinTolerance,
>                              boxHingeSupportZOffset,
>                              boxHingeSupportYOffset,
>                              booleanOverlap,
>                              boxArcHeight,
>                              boxArcRadius
>                              ){
>     union(){
>     //create body
>       if (boxRoundCorners){
>          translate([0,0,boxHingeSupportZOffset+boxArcHeight+1])
>              difference(){
>                 intersection(){
>                     $fn=boxCornerSmoothness;
>                     minkowski(){
>                      cube([boxLength-(2*boxCornerRoundness),
>                            boxWidth - (2*boxCornerRoundness),
>                            boxHeight+boxArcHeight/2],
>                          center = true);
>                      cylinder(r=boxCornerRoundness,h=boxHeight +
> boxArcHeight/2);
>                     }
>                     translate([0,0,-boxHeight+boxArcHeight])
>                         CreateArc(boxWidth, boxArcHeight, boxLength);
>                  }
>                 translate([0,0,(boxBottomThickness/2)]){
>                    intersection(){
>                          $fn=boxCornerSmoothness;
>                          minkowski(){
>                              cube([boxLength -
> boxWallThickness-(2*boxCornerRoundness),
>                                    boxWidth - boxWallThickness
> -(2*boxCornerRoundness),
>                                    (((boxHeight+boxArcHeight/2) -
> boxBottomThickness) + booleanOverlap)],
>                                    center = true);
>                              cylinder(r=boxCornerRoundness,h=boxHeight/2);
>                         }
>                         translate([0,0,-boxHeight+boxArcHeight])
>                             CreateArc(boxWidth, boxArcHeight, boxLength);
>                     }
>                 }
>                 //create pinholes to connect control arms
>                 rotate(a=[0, -90, 0]){
>
> translate([boxControlArmHoleZOffset,boxControlArmHoleYOffset,0]){
>                         cylinder(d= (controlArmPinDiameter +
>                                      controlArmPinTolerance),
>                                      boxLength + booleanOverlap,
>                                      center=true );
>                     }
>                 }
>
>                 CreateArc(boxWidth, boxArcHeight,
> boxLength+booleanOverlap);
>               //insert objects here to difference them from the main body
>       }
>       } else {
>           difference(){
>               intersection(){
>                 cube([boxLength,boxWidth,boxHeight+boxArcHeight],
>                      center = true);
>                 translate([0,0,-boxHeight+boxArcHeight]){
>                     CreateArc(boxWidth, boxArcHeight, boxLength);
>                 }
>
>               }
>               intersection(){
>                     translate([0,0,(boxBottomThickness/2)]){
>                         cube([boxLength - boxWallThickness,
>                               boxWidth - boxWallThickness,
>                               ((boxHeight +boxArcHeight -
> boxBottomThickness) + booleanOverlap)],
>                               center = true);
>                     }
>                     translate([0,0,-boxHeight+boxArcHeight]){
>                          CreateArc(boxWidth, boxArcHeight, boxLength);
>                     }
>                 }
>                 //create pinholes to connect control arms
>                 rotate(a=[0, -90, 0]){
>
> translate([boxControlArmHoleZOffset,boxControlArmHoleYOffset,0]){
>                        cylinder(d= (controlArmPinDiameter +
>                                     controlArmPinTolerance),
>                                     boxLength + booleanOverlap,
>                                     center=true );
>                    }
>                 }
>                 CreateArc(boxWidth,boxArcHeight,boxLength +
> booleanOverlap);
>                 //insert here to difference with body
>             }
>       }
>     //Create Hinge and hinge support
>     CreateHinge( boxRoundCorners,
>                  boxWidth,
>                  boxLength,
>                  boxHeight,
>                  boxHingeDiameter,
>                  boxHingePinDiameter,
>                  boxHingeZOffset,
>                  boxHingeYOffset,
>                  boxHingeTolerance,
>                  boxHingeClearance,
>                  boxHingeNumberOfSplits,
>                  pinTolerance,
>                  boxHingeSupportZOffset,
>                  boxHingeSupportYOffset,
>                  lidHingeZOffset,
>                  lidHingeYOffset,
>                  lidHingeTolerance,
>                  booleanOverlap);
>     //insert new parts to be added to the body here
>     }
> }//end of module
> module CreateNonArchedLid(          lidLipHeight,
>                                     lidThickness,
>                                     lidTolerance,
>                                     lidHingeZOffset,
>                                     lidHingeYOffset,
>                             //add lidHingeXOffset and hingeSlotXOffset
>                                     lidHingeTolerance,
>                                     lidOverlap,
>                                     hingeSlotXOffset,
>                                     hingeSlotYOffset,
>                                     hingeSlotZOffset,
>                                     boxLength,
>                                     boxWidth,
>                                     boxHeight,
>                                     boxRoundCorners,
>                                     boxCornerRoundness,
>                                     boxCornerSmoothness,
>                                     boxHingeDiameter,
>                                     boxHingePinDiameter,
>                                     boxHingeNumberOfSplits,
>                                     dispenserHoleLength,
>                                     dispenserHoleWidth,
>                                     dispenserHoleXOffset,
>                                     dispenserHoleYOffset,
>                                     rollerLength,
>                                     trackPanelThickness,
>                                     booleanOverlap){
>   if (boxRoundCorners){
>              difference(){
>                     $fn=boxCornerSmoothness;
>                     //this is the exterior of the lid
>                     minkowski(){
>                      cube([lidOverlap + boxLength + lidTolerance - (2 *
> boxCornerRoundness),
>                            lidOverlap + boxWidth + lidTolerance - (2 *
> boxCornerRoundness),
>                            ((lidThickness + lidLipHeight)/2)]);
>                      cylinder(r=boxCornerRoundness,h=((lidThickness +
> lidLipHeight)/2));
>                     }
>                     //this is the interior cutout
>                     translate([lidOverlap/2,lidOverlap/2,-booleanOverlap
> ]){
>                         $fn=boxCornerSmoothness;
>                         minkowski()
>                         {
>                          cube([boxLength + lidTolerance - (2 *
> boxCornerRoundness) ,
>                                boxWidth + lidTolerance - (2 *
> boxCornerRoundness),
>                                lidLipHeight/2]);
>                          cylinder(r=boxCornerRoundness,h=lidLipHeight/2);
>                         }
>                     }
>                     //this is the hinge lip cutout
>                     {
>                     translate([-((boxCornerRoundness/2) + (lidTolerance/2)
> +
> ((lidOverlap/2))),0,-booleanOverlap])
>                     cube([boxLength - lidTolerance,
>                                boxWidth + lidTolerance,
>                                lidLipHeight +booleanOverlap]);
>                     }
>                     //hingeslots
>                     //this splits the hinge cylinder into individual
> pieces,
> also cuts clearance slots into the lid
>                     difference(){
>                         //change this rotate to 90 to invert the hinge slot
> cut over one hingelength
>                       rotate(a=[0,270,0])
>                        translate([lidLipHeight,
>                                   boxWidth + lidOverlap -
> (boxCornerRoundness),
>                                   -((boxCornerRoundness/2)) -boxLength]){
>                           translate([0,0,hingeSlotXOffset + lidOverlap/2 +
> lidTolerance])
>                           {
>                                for ( i = [0 : boxHingeNumberOfSplits/2] )
>                                     {
>                                         //LOOK HERE TO TRY TO FIX HINGE
> SLOT
> MISALIGNMENT
>                                         translate([0, 0,
> boxLength/boxHingeNumberOfSplits * i *2])
>
> cylinder(d=boxHingeDiameter+boxHingeTolerance+booleanOverlap +
> boxHingeClearance,
>
> (boxLength/boxHingeNumberOfSplits) + boxHingeTolerance +
> lidHingeTolerance);
>                                      }
>                           }
>
>                         }
>                         //this cube acts as an endstop precenting the hinge
> from being cut past the point it needs to be cut
>                         translate([-boxCornerRoundness + boxLength
> -(boxCornerRoundness/2) +lidTolerance/2 - (lidOverlap/2),
>                                    0,
>                                    lidLipHeight -boxHingeDiameter -
> boxHingeTolerance - boxHingeClearance,]){
>                             cube([boxCornerRoundness,
>                                   boxWidth+10,
>                                   boxHeight]);
>                         }
>                         //same as above but on the other side! exciting...
>                         translate([-boxCornerRoundness,
>                                    0,
>                                    lidLipHeight -boxHingeDiameter -
> boxHingeTolerance - boxHingeClearance]){
>                             cube([boxCornerRoundness,
>                                   boxWidth+10,
>                                   boxHeight]);
>                         }
>                     }//end of hinge slot subtration
>                     //dispenser hole
>                     translate([boxCornerRoundness/2 +lidTolerance/2
> ,0,lidThickness-2])
>
> cube([dispenserHoleLength,dispenserHoleWidth,lidThickness+10
> +booleanOverlap]);
>                     //trackPanelMountingHoles
>   //***********Get the thickness out of the module somehow so i can arrange
> the track panels outside the dispenser hole
>                     translate([boxCornerRoundness/2
> +lidTolerance/2,0,lidThickness+booleanOverlap]){
>                      rotate([270,0,90]){
>                      #CreateControlTrack(
>                             controlArmLength,
>                             controlArmHeight,
>                             controlArmThickness,
>                             controlArmPinDiameter,
>                             controlArmHoleZOffset,
>                             controlArmHoleYOffset,
>                             controlArmPinTolerance,
>                             lidLipHeight,
>                             lidThickness,
>                             lidTolerance,
>                             boxLength,
>                             boxWidth,
>                             boxHeight,
>                             boxRoundCorners,
>                             boxCornerRoundness,
>                             boxHingePinDiameter,
>                             trackPanelLength,
>                             trackPanelWidth,
>                             trackPanelThickness,
>                             trackWidth,
>                             trackLength,
>                             trackHeight,
>                             trackTolerance,
>                             trackControlPoint1X,
>                             trackControlPoint1Y,
>                             trackControlPoint1Z,
>                             trackControlPoint2X,
>                             trackControlPoint2Y,
>                             trackControlPoint2Z,
>                             trackControlPoint3X,
>                             trackControlPoint3Y,
>                             trackControlPoint3Z,
>                             trackControlPoint4X,
>                             trackControlPoint4Y,
>                             trackControlPoint4Z);
>                       translate([0,0,-dispenserHoleLength
> -trackPanelThickness])
>                      #CreateControlTrack(
>                             controlArmLength,
>                             controlArmHeight,
>                             controlArmThickness,
>                             controlArmPinDiameter,
>                             controlArmHoleZOffset,
>                             controlArmHoleYOffset,
>                             controlArmPinTolerance,
>                             lidLipHeight,
>                             lidThickness,
>                             lidTolerance,
>                             boxLength,
>                             boxWidth,
>                             boxHeight,
>                             boxRoundCorners,
>                             boxCornerRoundness,
>                             boxHingePinDiameter,
>                             trackPanelLength,
>                             trackPanelWidth,
>                             trackPanelThickness,
>                             trackWidth,
>                             trackLength,
>                             trackHeight,
>                             trackTolerance,
>                             trackControlPoint1X,
>                             trackControlPoint1Y,
>                             trackControlPoint1Z,
>                             trackControlPoint2X,
>                             trackControlPoint2Y,
>                             trackControlPoint2Z,
>                             trackControlPoint3X,
>                             trackControlPoint3Y,
>                             trackControlPoint3Z,
>                             trackControlPoint4X,
>                             trackControlPoint4Y,
>                             trackControlPoint4Z);
>                         }
>                     }
>              } // end of difference
>          } else {
>               difference(){
>                    //this is the exterior of the lid
>                    cube([lidOverlap + boxLength + lidTolerance,
>                            lidOverlap + boxWidth + lidTolerance,
>                            ((lidThickness + lidLipHeight))]);
>                     //this is the interior cutout
>                     translate([lidOverlap/2,lidOverlap +
> booleanOverlap,-booleanOverlap]){
>                         cube([boxLength + lidTolerance,
>                                boxWidth + lidTolerance,
>                                lidLipHeight]);
>                     }
>                     //this is the hinge lip cutout
>                     translate([lidOverlap/2,lidOverlap/2,-booleanOverlap]){
>                         cube([boxLength + lidTolerance,
>                                    boxWidth + lidTolerance,
>                                    lidLipHeight]);
>                     }
>                     //hingeslots
>                     //this splits the hinge cylinder into individual
> pieces,
> also cuts clearance slots into the lid
>                     rotate(a=[0,90,0])
>                        translate([-lidLipHeight,+boxWidth +
> boxHingeDiameter/2,lidOverlap/2]){
>                             for ( i = [0 : boxHingeNumberOfSplits] ){
>                                     translate([0, 0,
> boxLength/boxHingeNumberOfSplits * i *2])
>
> cylinder(d=boxHingeDiameter+boxHingeTolerance+booleanOverlap +
> boxHingeClearance,
>
> (boxLength/boxHingeNumberOfSplits) + boxHingeTolerance +
> lidHingeTolerance);
>                             }
>                         }
>               } // end of difference
>          }//end of else
>
>
>  }//end of Lid Module
> module CreateArchedLid(             lidLipHeight,
>                                     lidThickness,
>                                     lidTolerance,
>                                     lidHingeZOffset,
>                                     lidHingeYOffset,
>                                     lidHingeTolerance,
>                                     boxLength,
>                                     boxWidth,
>                                     boxHeight,
>                                     boxRoundCorners,
>                                     boxCornerRoundness,
>                                     boxCornerSmoothness,
>                                     boxHingeDiameter,
>                                     boxHingePinDiameter,
>                                     dispenserHoleLength,
>                                     dispenserHoleWidth,
>                                     dispenserHoleXOffset,
>                                     dispenserHoleYOffset,
>                                     rollerLength,
>                                     boxArcHeight,
>                                     boxArcRadius,
>                                     booleanOverlap)
>                                     {}
>
>
> module CreateControlArm(            controlArmLength,
>                                     controlArmHeight,
>                                     controlArmThickness,
>                                     controlArmPinDiameter,
>                                     controlArmHoleZOffset,
>                                     controlArmHoleYOffset,
>                                     controlArmPinTolerance){
>
>     difference(){
>         hull(){
>             translate()
>                 cylinder(d=controlArmHeight, h=controlArmThickness);
>             translate([controlArmLength,0,0])
>                 cylinder(d=controlArmHeight, h=controlArmThickness);
>         }//end of hull
>         translate([0,0,-controlArmThickness/2])
>                 #cylinder(d=controlArmPinDiameter, h=controlArmThickness*2,
> $fn=32);
>             translate([controlArmLength,0,-controlArmThickness/2])
>                 #cylinder(d=controlArmPinDiameter, h=controlArmThickness*2,
> $fn=32);
>     }//end of difference
> }//end of module
> module CreateControlTrack(          controlArmLength,
>                                     controlArmHeight,
>                                     controlArmThickness,
>                                     controlArmPinDiameter,
>                                     controlArmHoleZOffset,
>                                     controlArmHoleYOffset,
>                                     controlArmPinTolerance,
>                                     lidLipHeight,
>                                     lidThickness,
>                                     lidTolerance,
>                                     boxLength,
>                                     boxWidth,
>                                     boxHeight,
>                                     boxRoundCorners,
>                                     boxCornerRoundness,
>                                     boxHingePinDiameter,
>                                     trackPanelLength,
>                                     trackPanelWidth,
>                                     trackPanelThickness,
>                                     trackWidth,
>                                     trackLength,
>                                     trackHeight,
>                                     trackTolerance,
>                                     trackControlPoint1X,
>                                     trackControlPoint1Y,
>                                     trackControlPoint1Z,
>                                     trackControlPoint2X,
>                                     trackControlPoint2Y,
>                                     trackControlPoint2Z,
>                                     trackControlPoint3X,
>                                     trackControlPoint3Y,
>                                     trackControlPoint3Z,
>                                     trackControlPoint4X,
>                                     trackControlPoint4Y,
>                                     trackControlPoint4Z){
>     union(){
>         difference(){
>             //Track Panel
>             cube([trackPanelLength,trackPanelWidth, trackPanelThickness]);
>             //Track
>             hull(){
>
> translate([trackControlPoint1X,trackControlPoint1Y,trackControlPoint1Z -
> booleanOverlap])
>                     cylinder(d=trackWidth+trackTolerance,h =
> trackPanelThickness + booleanOverlap*2, $fn=32);
>
>
> translate([trackControlPoint2X,trackControlPoint2Y,trackControlPoint2Z -
> booleanOverlap])
>                     cylinder(d=trackWidth+trackTolerance,h =
> trackPanelThickness + booleanOverlap*2, $fn=64);
>             }
>             hull(){
>
> translate([trackControlPoint2X,trackControlPoint2Y,trackControlPoint2Z -
> booleanOverlap])
>                     cylinder(d=trackWidth+trackTolerance,h =
> trackPanelThickness + booleanOverlap*2, $fn=64);
>
>
> translate([trackControlPoint3X,trackControlPoint3Y,trackControlPoint3Z -
> booleanOverlap])
>                     cylinder(d=trackWidth+trackTolerance,h =
> trackPanelThickness + booleanOverlap*2, $fn=64);
>             }
>             hull(){
>
> translate([trackControlPoint3X,trackControlPoint3Y,trackControlPoint3Z -
> booleanOverlap])
>                     cylinder(d=trackWidth+trackTolerance,h =
> trackPanelThickness + booleanOverlap*2, $fn=64);
>
>
> translate([trackControlPoint4X,trackControlPoint4Y,trackControlPoint4Z -
> booleanOverlap])
>                     cylinder(d=trackWidth+trackTolerance,h =
> trackPanelThickness + booleanOverlap*2, $fn=64);
>             }
>             //rollerflap pin holes
>             translate([trackPanelLength*.14,trackPanelWidth
> *.07,-booleanOverlap])
>                 cylinder(d= boxHingePinDiameter, h= trackPanelThickness +
> booleanOverlap*2, $fn=64);
>             translate([trackPanelLength*.9,trackPanelWidth
> *.14,-booleanOverlap])
>                 cylinder(d= boxHingePinDiameter, h= trackPanelThickness +
> booleanOverlap*2, $fn=64);
>
>             //Right Side Angle Cut
>             translate([trackPanelLength,0,-booleanOverlap]){
>                 rotate([0,0,45]){
>
>
> cube([trackPanelLength/4,sqrt(pow(trackPanelWidth,2)+pow(trackPanelWidth,2)),trackPanelThickness+booleanOverlap*2]);
>                 }
>             }
>
>             //bottom-left corner rounding
>            difference(){
>
> translate([-booleanOverlap,-booleanOverlap,-booleanOverlap])
>
>
> cube([trackWidth*2+booleanOverlap*2,trackWidth*2+booleanOverlap*2,trackPanelThickness
> + booleanOverlap*2]);
>                 translate([trackWidth,trackWidth,-booleanOverlap])
>                     cylinder(r=trackWidth,h=trackPanelThickness +
> booleanOverlap*2);
>                 translate([trackWidth*2,-trackWidth,0])
>                     rotate([0,0,45])
>                         cube([trackWidth*4,trackWidth*4,trackPanelThickness
> + booleanOverlap*2]);
>            }
>            //top-left corner cuttoff
>            translate([-booleanOverlap,(trackPanelWidth/2) - booleanOverlap,
> - booleanOverlap])
>                rotate([0,0,45])
>                    cube([trackPanelWidth + booleanOverlap*2,
> trackPanelWidth
> + booleanOverlap*2, trackPanelThickness + booleanOverlap*2]);
>            //Top angle cutoff
>            translate([-booleanOverlap, (trackPanelWidth * .75) -
> booleanOverlap, - booleanOverlap])
>                rotate([0,0,3])
>                    cube([trackPanelLength + booleanOverlap*2,
> trackPanelWidth + booleanOverlap*2, trackPanelThickness +
> booleanOverlap*2]);
>            //Bottom-right corner rounding
>            translate([trackPanelLength-lidTolerance,
> -booleanOverlap,-booleanOverlap])
>                    rotate([0,0,0])
>                    cube([trackPanelWidth, trackPanelWidth,
> trackPanelThickness + booleanOverlap*2]);
>
>
>         }//end of difference
>     //Connecting tabs
>     translate([trackPanelLength*.66,-lidThickness, 0])
>         cube([trackPanelThickness,lidThickness+1,trackPanelThickness]);
>     translate([trackPanelLength*.22, -lidThickness, 0])
>         cube([trackPanelThickness,lidThickness+1,trackPanelThickness]);
>     }//end of union
> }// end of CreateControlTrack module
> module CreateRoller(                rollerDiameter,
>                                     rollerLength,
>                                     rollerPinDiameter){
> difference(){
>
>     cylinder(d=rollerDiameter, h=rollerLength);
>     }
>     translate([0,0,-2.5])
>     cylinder(d=rollerPinDiameter, h=rollerLength +5);
> }
>
> module CreateLidHinge(              boxRoundCorners,
>                                     boxWidth,
>                                     boxLength,
>                                     boxHeight,
>                                     boxHingeDiameter,
>                                     boxHingePinDiameter,
>                                     boxHingeZOffset,
>                                     boxHingeYOffset,
>                                     boxHingeTolerance,
>                                     boxHingeClearance,
>                                     boxHingeNumberOfSplits,
>                                     pinTolerance,
>                                     boxHingeSupportZOffset,
>                                     boxHingeSupportYOffset,
>                                     lidHingeZOffset,
>                                     lidHingeYOffset,
>                                     lidHingeXOffset,
>                                     lidHingeTolerance,
>                                     lidOverlap,
>                                     booleanOverlap){
> difference(){
>     union(){
>         //hingepart is created here
>         if (boxRoundCorners){
>
>             translate([boxLength + lidOverlap/2 + lidTolerance/2 -
> (boxCornerRoundness*2) + lidHingeXOffset,
>                        boxWidth +lidHingeYOffset -(boxCornerRoundness/2) -
> lidOverlap/2 + lidTolerance/2,
>                        (lidThickness)+lidHingeZOffset]){
>                 //remember rotation is counterclockwise
>                 rotate(a=[0,270,0]){
>                       cylinder(d=boxHingeDiameter, boxLength -
> (boxCornerRoundness * 2));
>                 }
>             }
>         } else {
>                translate([lidOverlap/2 + lidTolerance/2 +lidHingeXOffset,
>                        (boxWidth + lidHingeYOffset + boxHingeDiameter/2),
>                        (lidThickness)+lidHingeZOffset ]){
>                 //remember rotation is counterclockwise
>                     rotate(a=[0,90,0])
>                     {
>                           cylinder(d=boxHingeDiameter, boxLength);
>                     }
>                 }
>         }
>         //add geometry to the hinge here
>      }
>
>      //hingehole
>      if(boxRoundCorners){
>          translate([boxLength + lidOverlap/2 + lidTolerance/2 -
> (boxCornerRoundness*2) + lidHingeXOffset,
>                            boxWidth +lidHingeYOffset
> -(boxCornerRoundness/2)
> - lidOverlap/2 + lidTolerance/2,
>                            (lidThickness)+lidHingeZOffset]){
>                     //remember rotation is counterclockwise
>                     rotate(a=[0,270,0]){
>                           cylinder(d=boxHingePinDiameter, boxLength*2
> +booleanOverlap,center=true);
>                     }
>          }
>      }else{
>           translate([lidOverlap/2 + lidTolerance/2 +lidHingeXOffset
> +booleanOverlap,
>                        (boxWidth + lidHingeYOffset + boxHingeDiameter/2),
>                        (lidThickness)+lidHingeZOffset ]){
>                 //remember rotation is counterclockwise
>                     rotate(a=[0,90,0]){
>                           cylinder(d=boxHingePinDiameter, boxLength*2
> +booleanOverlap,center=true);
>                     }
>          }
>      }
>
>
>       //hingeslots
>       //here the part to be subtracted from the hinge is created
>         if(boxRoundCorners){
>                 translate([lidOverlap/2 -lidTolerance + lidHingeXOffset,
>                                boxWidth +lidHingeYOffset
> -(boxCornerRoundness/2) - lidOverlap/2 + lidTolerance/2,
>                                (lidThickness)+lidHingeZOffset]){
>                     rotate(a=[0,90,0])
>                        {
>                                             for ( i = [0 :
> boxHingeNumberOfSplits/2] )
>                                                 {
>
>                                                     translate([0, 0,
> boxLength/boxHingeNumberOfSplits * i *2])
>
> cylinder(d=boxHingeDiameter+boxHingeTolerance+booleanOverlap +
> boxHingeClearance,
>
> (boxLength/boxHingeNumberOfSplits) + boxHingeTolerance +
> lidHingeTolerance);
>                                                 }
>                        }
>
>                 }
>         }else{
>                 translate([lidOverlap/2 -lidTolerance + lidHingeXOffset,
>                                        boxWidth +lidHingeYOffset  +
> lidOverlap + lidTolerance,
>                                        (lidThickness)+lidHingeZOffset]){
>                             rotate(a=[0,90,0])
>                                {
>                                                     for ( i = [0 :
> boxHingeNumberOfSplits/2] )
>                                                         {
>
>                                                             translate([0,
> 0,
> boxLength/boxHingeNumberOfSplits * i *2])
>
> cylinder(d=boxHingeDiameter+boxHingeTolerance+booleanOverlap +
> boxHingeClearance,
>
> (boxLength/boxHingeNumberOfSplits) + boxHingeTolerance +
> lidHingeTolerance);
>                                                         }
>                                }
>
>                 }
>         }//end of hinge slots
>
>      }//end of difference (hinge, hingehole, hingeslots trackPanelSlots)
>  }//end of module
> module CreateHinge(                 boxRoundCorners,
>                                     boxWidth,
>                                     boxLength,
>                                     boxHeight,
>                                     boxHingeDiameter,
>                                     boxHingePinDiameter,
>                                     boxHingeZOffset,
>                                     boxHingeYOffset,
>                                     boxHingeTolerance,
>                                     boxHingeClearance,
>                                     boxHingeNumberOfSplits,
>                                     pinTolerance,
>                                     boxHingeSupportZOffset,
>                                     boxHingeSupportYOffset,
>                                     lidHingeZOffset,
>                                     lidHingeYOffset,
>                                     lidHingeTolerance,
>                                     booleanOverlap){
>
>  //Create Hinge and hinge support
>     //difference to create hole in hinge and hinge slots
>
>     difference(){
>        union(){
>         //hingepart is created here
>         if (boxRoundCorners){
>             translate([0,
>                        ((boxWidth / 2)+(boxHingeYOffset +
> (boxHingeDiameter/2))),
>                        (boxHeight/2) ]){
>                 //remember rotation is counterclockwise
>                 rotate(a=[0,270,0]){
>                       cylinder(d=boxHingeDiameter, boxLength -
> (boxCornerRoundness * 2),center=true);
>                 }
>             }
>         } else {
>                translate([0,
>                        ((boxWidth / 2)+(boxHingeYOffset +
> (boxHingeDiameter/2))),
>                        (boxHeight/2) ]){
>                 //remember rotation is counterclockwise
>                 rotate(a=[0,270,0])
>                 {
>                       cylinder(d=boxHingeDiameter, boxLength -
> (boxCornerRoundness * 2),center=true);
>                 }
>             }
>         }
>         //support part is created here, also this part is unioned to the
> hingepart
>         if(boxRoundCorners){
>              difference(){
>                  translate([0,((boxWidth /
>
> 2)+(boxHingeYOffset+boxHingeSupportYOffset)),((boxHeight/2)+boxHingeZOffset)]){
>                      rotate(a=[0,270,0]){
>                         rotate(a=[0,0,-25]){
>                             cylinder(d=boxHingeDiameter*4,
> (boxLength-(boxCornerRoundness * 2)), $fn=4,center=true);
>                         }
>                      }
>                  }
>                  translate([0,boxWidth/4,boxHeight-(boxHeight/4) -
> booleanOverlap]){
>                      //cut for top of hinge support
>                      cube([boxLength +booleanOverlap, boxWidth/2,
> boxHeight/2], ,center=true);
>                  }
>                  //cut for removing hinge support from inside box
>                  cube([boxLength-(booleanOverlap),
> boxWidth-(booleanOverlap), boxHeight- booleanOverlap],center=true);
>              }
>          }else{
>              difference(){
>                  translate([0,((boxWidth /
>
> 2)+(boxHingeYOffset+boxHingeSupportYOffset)),((boxHeight/2)+boxHingeZOffset)]){
>                      rotate(a=[0,270,0]){
>                         rotate(a=[0,0,-25]){
>                             cylinder(d=boxHingeDiameter*4, (boxLength),
> $fn=4,center=true);
>                         }
>                      }
>                  }
>                  translate([0,boxWidth/4,boxHeight-(boxHeight/4) -
> booleanOverlap]){
>                      //cut for top of hinge support
>                      cube([boxLength +booleanOverlap, boxWidth/2,
> boxHeight/2], ,center=true);
>                  }
>                  //cut for removing hinge support from inside box
>                  cube([boxLength-booleanOverlap, boxWidth-booleanOverlap,
> boxHeight-booleanOverlap],center=true);
>              }
>          }//end of else  end of addition of geomotry
>      }
>       //hingehole
>       translate([0, ((boxWidth / 2) +
> (boxHingeYOffset+boxHingeDiameter/2)),
> ((boxHeight/2))]){
>                                             rotate(a=[0,-90,0]){
>
> cylinder(d=boxHingePinDiameter, boxLength + booleanOverlap,center=true);
>                                             }
>                                         }
>        //hingeslots
>        //here the part to be subtracted from the hinge is created
>         translate([0,
>                    ((boxWidth / 2)+(boxHingeYOffset +
> (boxHingeDiameter/2))),
>                    ((boxHeight/2))]){
>             rotate(a=[0,90,0])
>                translate([0,0,(-boxLength/2) ]){
>                     for ( i = [0 : boxHingeNumberOfSplits/2] ){
>
>                             translate([0, 0,
> boxLength/boxHingeNumberOfSplits * i *2])
>
> cylinder(d=boxHingeDiameter+boxHingeTolerance+booleanOverlap +
> boxHingeClearance,
>                                       (boxLength/boxHingeNumberOfSplits) +
> boxHingeTolerance,
>                                        center=true);
>                     }
>                }
>         } //end of hinge slots
>      }//end of difference (hinge, hingehole, hingeslots)
>
>
>
>
>
>
> }//end of Hinge Module
>
>
> //**********************END OF
> DECLARATIONS***********************************
>
> if(arched){
>     CreateArchedBody(         boxLength,
>                              boxWidth,
>                              boxHeight,
>                              boxBottomThickness,
>                              boxWallThickness,
>                              boxRoundCorners,
>                              boxCornerRoundness,
>                              boxCornerSmoothness,
>                              boxHingeDiameter,
>                              boxHingePinDiameter,
>                              boxHingeZOffset,
>                              boxHingeYOffset,
>                              boxHingeTolerance,
>                              boxHingeClearance,
>                              boxHingeNumberOfSplits,
>                              pinTolerance,
>                              controlArmPinDiameter,
>                              boxControlArmHoleZOffset,
>                              boxControlArmHoleYOffset,
>                              controlArmPinTolerance,
>                              boxHingeSupportZOffset,
>                              boxHingeSupportYOffset,
>                              booleanOverlap,
>                              boxArcHeight,
>                              boxArcRadius
>                              );
> }else{
>    CreateNonArchedBody(          boxLength,
>                                  boxWidth,
>                                  boxHeight,
>                                  boxBottomThickness,
>                                  boxWallThickness,
>                                  boxRoundCorners,
>                                  boxCornerRoundness,
>                                  boxCornerSmoothness,
>                                  boxHingeDiameter,
>                                  boxHingePinDiameter,
>                                  boxHingeZOffset,
>                                  boxHingeYOffset,
>                                  boxHingeTolerance,
>                                  boxHingeClearance,
>                                  boxHingeNumberOfSplits,
>                                  pinTolerance,
>                                  controlArmPinDiameter,
>                                  boxControlArmHoleZOffset,
>                                  boxControlArmHoleYOffset,
>                                  controlArmPinTolerance,
>                                  boxHingeSupportZOffset,
>                                  boxHingeSupportYOffset,
>                                  booleanOverlap,
>                                  boxArcHeight,
>                                  boxArcRadius);
> }
>
>
>  if(boxRoundCorners){
>      rotate([270,0,0])
>       union(){
>         translate([-boxLength/2 - lidTolerance/2 - lidOverlap/2 +
> boxCornerRoundness,
>                    -boxWidth/2  - lidTolerance/2 - lidOverlap/2 +
> boxCornerRoundness -52.7,
>                    (boxHeight/2)+ booleanOverlap-lidLipHeight+33.5]){
>             CreateLidHinge(  boxRoundCorners,
>                      boxWidth,
>                      boxLength,
>                      boxHeight,
>                      boxHingeDiameter,
>                      boxHingePinDiameter,
>                      boxHingeZOffset,
>                      boxHingeYOffset,
>                      boxHingeTolerance,
>                      boxHingeClearance,
>                      boxHingeNumberOfSplits,
>                      pinTolerance,
>                      boxHingeSupportZOffset,
>                      boxHingeSupportYOffset,
>                      lidHingeZOffset,
>                      lidHingeYOffset,
>                      lidHingeXOffset,
>                      lidHingeTolerance,
>                      lidOverlap,
>                      booleanOverlap);
>
>         CreateNonArchedLid( lidLipHeight,
>                         lidThickness,
>                         lidTolerance,
>                         lidHingeZOffset,
>                         lidHingeYOffset,
>                         lidHingeTolerance,
>                         lidOverlap,
>                         hingeSlotXOffset,
>                         hingeSlotYOffset,
>                         hingeSlotZOffset,
>                         boxLength,
>                         boxWidth,
>                         boxHeight,
>                         boxRoundCorners,
>                         boxCornerRoundness,
>                         boxCornerSmoothness,
>                         boxHingeDiameter,
>                         boxHingePinDiameter,
>                         boxHingeNumberOfSplits,
>                         dispenserHoleLength,
>                         dispenserHoleWidth,
>                         dispenserHoleXOffset,
>                         dispenserHoleYOffset,
>                         rollerLength,
>                         trackPanelThickness,
>                         booleanOverlap);
>                     }//end of Translate
>                 }//end of union
>
>  }else{
>     translate([-boxLength/2 - lidTolerance/2 - lidOverlap/2,
>                -boxWidth/2  - lidTolerance/2 - lidOverlap/2,
>                (boxHeight/2)+ booleanOverlap-lidLipHeight]){
>
>
> CreateNonArchedLid( lidLipHeight,
>                     lidThickness,
>                     lidTolerance,
>                     lidHingeZOffset,
>                     lidHingeYOffset,
>                     lidHingeTolerance,
>                     lidOverlap,
>                     hingeSlotXOffset,
>                     hingeSlotYOffset,
>                     hingeSlotZOffset,
>                     boxLength,
>                     boxWidth,
>                     boxHeight,
>                     boxRoundCorners,
>                     boxCornerRoundness,
>                     boxCornerSmoothness,
>                     boxHingeDiameter,
>                     boxHingePinDiameter,
>                     boxHingeNumberOfSplits,
>                     dispenserHoleLength,
>                     dispenserHoleWidth,
>                     dispenserHoleXOffset,
>                     dispenserHoleYOffset,
>                     rollerLength,
>                     trackPanelThickness,
>                     booleanOverlap);
>                }
>      }
>
>
>
> translate([-39.25,3,3.5])
>     rotate([0,270,0])
>         rotate([0,0,44])
>         CreateControlArm(                   controlArmLength,
>                                             controlArmHeight,
>                                             controlArmThickness,
>                                             controlArmPinDiameter,
>                                             controlArmHoleZOffset,
>                                             controlArmHoleYOffset,
>                                             controlArmPinTolerance);
> translate([44.25,3,3.5])
>     rotate([0,270,0])
>         rotate([0,0,44])
>         CreateControlArm(                   controlArmLength,
>                                             controlArmHeight,
>                                             controlArmThickness,
>                                             controlArmPinDiameter,
>                                             controlArmHoleZOffset,
>                                             controlArmHoleYOffset,
>                                             controlArmPinTolerance);
> rotate([0,90,0])
> translate([-31,29,-rollerLength/2])
> CreateRoller(rollerDiameter,
>                                     rollerLength,
>                                     rollerPinDiameter);
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Can-I-get-some-code-review-up-in-here-tp12341.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>



-- 
stempeldergeschichte at googlemail.com <karsten at rohrbach.de>

P.S. Falls meine E-Mail k?rzer ausf?llt als Dir angenehm ist:
Ich probiere gerade aus kurze Antworten statt gar keine Antworten zu
schreiben.
Wenn Du gerne mehr lesen m?chtest, dann lass es mich bitte wissen.

P.S. In case my e-mail is shorter than you enjoy:
I am currently trying short replies instead of no replies at all.
Please let me know, if you like to read more.

Enjoy!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150411/0816ae87/attachment-0001.html>

From runsun at gmail.com  Sat Apr 11 16:10:06 2015
From: runsun at gmail.com (runsun)
Date: Sat, 11 Apr 2015 13:10:06 -0700 (MST)
Subject: [OpenSCAD] Annoying auto preview of 2015.03
Message-ID: <1428783006904-12343.post@n5.nabble.com>

It seems that there's an "auto preview" set in this new release (2015.03,
Linux Mint x64). Whenever a document, say a.scad, is saved, It issues an
auto-preview OF ALL OPEN DOCs linked to a.scad. 

This results in many unwanted previews and is extremely annoying, especially
when one of those linked to a.scad takes a long time to run. 

Prior to this version, I've used up to 2015.02.01 nightly but didn't see
this behavior. It seems that it's added between 02.01 and 03.15. Can this at
least be set in the preference so users can shut it off ?



-----
$  Runsun Pan, PhD 
$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 
$ -- Linux Mint 17 MATE 64bit  + OpenSCAD 2015.02.01.nightly 




--
View this message in context: http://forum.openscad.org/Annoying-auto-preview-of-2015-03-tp12343.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Sat Apr 11 16:30:09 2015
From: runsun at gmail.com (runsun)
Date: Sat, 11 Apr 2015 13:30:09 -0700 (MST)
Subject: [OpenSCAD] Annoying auto preview of 2015.03
In-Reply-To: <1428783006904-12343.post@n5.nabble.com>
References: <1428783006904-12343.post@n5.nabble.com>
Message-ID: <1428784209127-12344.post@n5.nabble.com>

Some how the issue disappears. I thought that I'd try 2015.04.01.nightly (git
90094ff), and found that it doesn't have this issue.

Then I go back to 2015.03 again, and the issue is gone. No idea what
happened, it seems only happens on the very first run after installation. 



-----
$  Runsun Pan, PhD 
$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 
$ -- Linux Mint 17 MATE 64bit  + OpenSCAD 2015.02.01.nightly 




--
View this message in context: http://forum.openscad.org/Annoying-auto-preview-of-2015-03-tp12343p12344.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From linkreincarnate at gmail.com  Sat Apr 11 19:25:29 2015
From: linkreincarnate at gmail.com (linkreincarnate)
Date: Sat, 11 Apr 2015 16:25:29 -0700 (MST)
Subject: [OpenSCAD] Can I get some code review up in here?
In-Reply-To: <CAJgOqADw+z1gVayfOSvyuUqKgMb3aekkZPZmfodW_d=MGaf6bg@mail.gmail.com>
References: <1428707008059-12341.post@n5.nabble.com>
	<CAJgOqADw+z1gVayfOSvyuUqKgMb3aekkZPZmfodW_d=MGaf6bg@mail.gmail.com>
Message-ID: <1428794729732-12345.post@n5.nabble.com>

Thanks, I'll take a look and fix it.



--
View this message in context: http://forum.openscad.org/Can-I-get-some-code-review-up-in-here-tp12341p12345.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Sat Apr 11 20:22:17 2015
From: marius at kintel.net (kintel)
Date: Sat, 11 Apr 2015 17:22:17 -0700 (MST)
Subject: [OpenSCAD] Annoying auto preview of 2015.03
In-Reply-To: <1428784209127-12344.post@n5.nabble.com>
References: <1428783006904-12343.post@n5.nabble.com>
	<1428784209127-12344.post@n5.nabble.com>
Message-ID: <1428798137100-12346.post@n5.nabble.com>

This sounds like Design->Automatic Reload and Compile..

 -Marius




--
View this message in context: http://forum.openscad.org/Annoying-auto-preview-of-2015-03-tp12343p12346.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Sun Apr 12 03:02:52 2015
From: runsun at gmail.com (runsun)
Date: Sun, 12 Apr 2015 00:02:52 -0700 (MST)
Subject: [OpenSCAD] flattening mixed lists of lists
In-Reply-To: <1428318672344-12318.post@n5.nabble.com>
References: <1428313932928-12316.post@n5.nabble.com>
	<CAEEmnrN4dhVopNwq8mEtEbYWfTCiMQyMOe64MtTNWA+7K_3+Ng@mail.gmail.com>
	<1428318672344-12318.post@n5.nabble.com>
Message-ID: <1428822172015-12347.post@n5.nabble.com>

A full flattening can be achieved with:
function flatten(a)=    [ for(x=a)       for(b=len(x)==undef? x:flatten(x)        
)       b ];a=[ [[1,2],[2,3]], [[[1,2],[2,3]]] ];echo( flatten(a) );//ECHO:
[1, 2, 2, 3, 1, 2, 2, 3]
We can then add a len(x)==2 to return a list of pairs:
function flatten2(a)=    [ for(x=a)       for(b=(len(x)==undef)           
|| (len(x)==2) ?x:flatten2(x)          )       b ];echo( flatten2(a)
);//ECHO: [[1, 2], [2, 3], [1, 2], [2, 3]]     

Note both will fail if flattening a more general list (that might contain
strings). Adding a str(x)==x would help:
function flatten3(a)=    [ for(x=a)       for(b= (str(x)==x) ||
len(x)==undef? x:flatten3(x)         )       b ];b=[ ["abc",
["def","g"]],"h"];echo( flatten3(b) );//ECHO: ["abc", "def", "g", "h"]




-----
$  Runsun Pan, PhD 
$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 
$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15 
$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.04.01.nightly 





--
View this message in context: http://forum.openscad.org/flattening-mixed-lists-of-lists-tp12316p12347.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150412/8ccaa192/attachment.html>

From runsun at gmail.com  Sun Apr 12 03:06:46 2015
From: runsun at gmail.com (runsun)
Date: Sun, 12 Apr 2015 00:06:46 -0700 (MST)
Subject: [OpenSCAD] Annoying auto preview of 2015.03
In-Reply-To: <1428798137100-12346.post@n5.nabble.com>
References: <1428783006904-12343.post@n5.nabble.com>
	<1428784209127-12344.post@n5.nabble.com>
	<1428798137100-12346.post@n5.nabble.com>
Message-ID: <1428822406772-12348.post@n5.nabble.com>

aarrhh!! now that you mentioned it .... it does look like the case. I must
have accidentally clicked on it ... 



-----
$  Runsun Pan, PhD 
$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 
$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15 
$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.04.01.nightly 





--
View this message in context: http://forum.openscad.org/Annoying-auto-preview-of-2015-03-tp12343p12348.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Sun Apr 12 05:32:05 2015
From: nop.head at gmail.com (nop head)
Date: Sun, 12 Apr 2015 10:32:05 +0100
Subject: [OpenSCAD] Can I get some code review up in here?
In-Reply-To: <1428794729732-12345.post@n5.nabble.com>
References: <1428707008059-12341.post@n5.nabble.com>
	<CAJgOqADw+z1gVayfOSvyuUqKgMb3aekkZPZmfodW_d=MGaf6bg@mail.gmail.com>
	<1428794729732-12345.post@n5.nabble.com>
Message-ID: <CAEEmnrNJOmr33haC2WcD3ApRbZo7B5x06RoaCzddyJnUW_NYyA@mail.gmail.com>

Rather than passing dozens of parameters to each module I would represent
objects like the box and hinge with lists of values and write a function to
get each value from the list. Then the modules would only have two or three
parameters.

On 12 April 2015 at 00:25, linkreincarnate <linkreincarnate at gmail.com>
wrote:

> Thanks, I'll take a look and fix it.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Can-I-get-some-code-review-up-in-here-tp12341p12345.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150412/3e771424/attachment.html>

From doug at moens.org  Sun Apr 12 12:25:52 2015
From: doug at moens.org (doug moen)
Date: Sun, 12 Apr 2015 12:25:52 -0400
Subject: [OpenSCAD] flattening mixed lists of lists
In-Reply-To: <1428313932928-12316.post@n5.nabble.com>
References: <1428313932928-12316.post@n5.nabble.com>
Message-ID: <CAGV6i+P_TWKK2iCPYaQPktz-JD09VGQQuHv_ZWV=WnuaxsM18g@mail.gmail.com>

Kit, could you show your code that generates the face list?

I'd like to see it, because I'm considering an extension to list
comprehensions that would eliminate the need to use 'flatten'
functions for post processing. I'd like to see if my proposed
extension works for your code.

Doug Moen

On 06/04/2015, kitwallace <kit.wallace at gmail.com> wrote:
> I'm generating faces as a list of points.  However the list of faces
> comprises a mixture of faces and lists of faces.  I need to flatten this
> mixed list.  So far I'm using
> function depth(a) =   len(a)== undef        ? 0       :
> 1+depth(a[0]);function flatten(l) = [ for (a = l) for (b = a) b ] ;function
> dflatten(l,d=2) =// hack to flatten mixed list and list of lists
> flatten([for (a = l) depth(a) > d ? [for (b=a) b] : [a]]); l= [
> [[1,2],[2,3]], [[[1,2],[2,3]]] ];lf = dflatten(l);echo(len(lf),lf);
> but it doesn't really work generally : d = 1 should yield 4 , not 3  I've
> really struggled to come up with a correct recursive formulation.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/flattening-mixed-lists-of-lists-tp12316.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.


From kit.wallace at gmail.com  Mon Apr 13 02:54:07 2015
From: kit.wallace at gmail.com (kitwallace)
Date: Sun, 12 Apr 2015 23:54:07 -0700 (MST)
Subject: [OpenSCAD] flattening mixed lists of lists
In-Reply-To: <CAGV6i+P_TWKK2iCPYaQPktz-JD09VGQQuHv_ZWV=WnuaxsM18g@mail.gmail.com>
References: <1428313932928-12316.post@n5.nabble.com>
	<CAGV6i+P_TWKK2iCPYaQPktz-JD09VGQQuHv_ZWV=WnuaxsM18g@mail.gmail.com>
Message-ID: <CAH0WD3r4vidf=CGh9EQaijKRi6+J0RGJj1OxtDVigroz+U8K_g@mail.gmail.com>

Hi Doug

The code is here -
https://github.com/KitWallace/openscad/blob/master/poly_nets.scad

faces are constructed in function rrp (line 234) as a nested list and
flattened in fold_render(line 256) using function dflatten()

The context of the code is described in my blog - basically  it generates
nets of solids and folds them

http://kitwallace.tumblr.com/post/115973599619/polyhedral-nets

Chris


On Sun, Apr 12, 2015 at 5:26 PM, doug.moen [via OpenSCAD] <
ml-node+s1091067n12350h42 at n5.nabble.com> wrote:

> Kit, could you show your code that generates the face list?
>
> I'd like to see it, because I'm considering an extension to list
> comprehensions that would eliminate the need to use 'flatten'
> functions for post processing. I'd like to see if my proposed
> extension works for your code.
>
> Doug Moen
>
> On 06/04/2015, kitwallace <[hidden email]
> <http:///user/SendEmail.jtp?type=node&node=12350&i=0>> wrote:
>
> > I'm generating faces as a list of points.  However the list of faces
> > comprises a mixture of faces and lists of faces.  I need to flatten this
> > mixed list.  So far I'm using
> > function depth(a) =   len(a)== undef        ? 0       :
> > 1+depth(a[0]);function flatten(l) = [ for (a = l) for (b = a) b ]
> ;function
> > dflatten(l,d=2) =// hack to flatten mixed list and list of lists
> > flatten([for (a = l) depth(a) > d ? [for (b=a) b] : [a]]); l= [
> > [[1,2],[2,3]], [[[1,2],[2,3]]] ];lf = dflatten(l);echo(len(lf),lf);
> > but it doesn't really work generally : d = 1 should yield 4 , not 3
>  I've
> > really struggled to come up with a correct recursive formulation.
> >
> >
> >
> > --
> > View this message in context:
> > http://forum.openscad.org/flattening-mixed-lists-of-lists-tp12316.html
> > Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=12350&i=1>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> ------------------------------
>  If you reply to this email, your message will be added to the discussion
> below:
>
> http://forum.openscad.org/flattening-mixed-lists-of-lists-tp12316p12350.html
>  To unsubscribe from flattening mixed lists of lists, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=12316&code=a2l0LndhbGxhY2VAZ21haWwuY29tfDEyMzE2fDE3Nzk2Mzg2MzQ=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/flattening-mixed-lists-of-lists-tp12316p12352.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150412/74df5911/attachment.html>

From linkreincarnate at gmail.com  Mon Apr 13 06:44:32 2015
From: linkreincarnate at gmail.com (linkreincarnate)
Date: Mon, 13 Apr 2015 03:44:32 -0700 (MST)
Subject: [OpenSCAD] Can I get some code review up in here?
In-Reply-To: <CAEEmnrNJOmr33haC2WcD3ApRbZo7B5x06RoaCzddyJnUW_NYyA@mail.gmail.com>
References: <1428707008059-12341.post@n5.nabble.com>
	<CAJgOqADw+z1gVayfOSvyuUqKgMb3aekkZPZmfodW_d=MGaf6bg@mail.gmail.com>
	<1428794729732-12345.post@n5.nabble.com>
	<CAEEmnrNJOmr33haC2WcD3ApRbZo7B5x06RoaCzddyJnUW_NYyA@mail.gmail.com>
Message-ID: <1428921872434-12353.post@n5.nabble.com>

Ok I am unfamiliar with lists in openscad I'll have to look into it. 



--
View this message in context: http://forum.openscad.org/Can-I-get-some-code-review-up-in-here-tp12341p12353.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Mon Apr 13 07:07:00 2015
From: nop.head at gmail.com (nop head)
Date: Mon, 13 Apr 2015 12:07:00 +0100
Subject: [OpenSCAD] Can I get some code review up in here?
In-Reply-To: <1428921872434-12353.post@n5.nabble.com>
References: <1428707008059-12341.post@n5.nabble.com>
	<CAJgOqADw+z1gVayfOSvyuUqKgMb3aekkZPZmfodW_d=MGaf6bg@mail.gmail.com>
	<1428794729732-12345.post@n5.nabble.com>
	<CAEEmnrNJOmr33haC2WcD3ApRbZo7B5x06RoaCzddyJnUW_NYyA@mail.gmail.com>
	<1428921872434-12353.post@n5.nabble.com>
Message-ID: <CAEEmnrPWSAzWod1DvfTuw5B3x4SQRsNYtjQzFDe0bw20HwWPBg@mail.gmail.com>

Here is an example of how to use a named list to represent an object:
https://github.com/nophead/Mendel90/blob/master/scad/vitamins/fans.scad

On 13 April 2015 at 11:44, linkreincarnate <linkreincarnate at gmail.com>
wrote:

> Ok I am unfamiliar with lists in openscad I'll have to look into it.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Can-I-get-some-code-review-up-in-here-tp12341p12353.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150413/b05dbee4/attachment.html>

From runsun at gmail.com  Mon Apr 13 09:51:52 2015
From: runsun at gmail.com (runsun)
Date: Mon, 13 Apr 2015 06:51:52 -0700 (MST)
Subject: [OpenSCAD] Can I get some code review up in here?
In-Reply-To: <1428921872434-12353.post@n5.nabble.com>
References: <1428707008059-12341.post@n5.nabble.com>
	<CAJgOqADw+z1gVayfOSvyuUqKgMb3aekkZPZmfodW_d=MGaf6bg@mail.gmail.com>
	<1428794729732-12345.post@n5.nabble.com>
	<CAEEmnrNJOmr33haC2WcD3ApRbZo7B5x06RoaCzddyJnUW_NYyA@mail.gmail.com>
	<1428921872434-12353.post@n5.nabble.com>
Message-ID: <1428933112682-12355.post@n5.nabble.com>

Or you can try a little more OOP-ish approach using a hash, in which
parameters are encapsulated in a list, described in details here  :
http://forum.openscad.org/parameterized-models-tp8303p8306.html
<http://forum.openscad.org/parameterized-models-tp8303p8306.html>  
(1)     default = ["Height", 7, "Thickness", 5, "PinDiameter", 2 ...
];Retrieve value: *hash*( default, "Height") ==> 7 // Need function
hash()(2) Then expand default as needed:    boxHinge_opt = default;   
controlArm_opt = *update*( default, [ "Height", 8, "ArmColor", "gray" ... ]
);  // Need function update()...(3) In the module:    module boxHinge(
user_opt=[ ] ){       opt = update( boxHinge_opt, user_opt ); // User can
change them       h = hash( opt, "Height");       ...    }    module
controlArm( user_opt=[ ] ){       opt = update( controlArm_opt, user_opt );      
h = hash( opt, "Height");       ...    }
The hash-like structure is the main parameter model in my own code. With
that I can pack parameters and throw them around all together, reuse them
easily, or update them when needed. It makes complicated model codes much
easier to handle, especially when dealing with objects with multiple level
sub-objects ( like Human.Arms.leftArms.Fingers .... ) 



-----
$  Runsun Pan, PhD 
$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 
$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15 
$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.04.01.nightly 





--
View this message in context: http://forum.openscad.org/Can-I-get-some-code-review-up-in-here-tp12341p12355.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150413/ba92e3ac/attachment.html>

From runsun at gmail.com  Mon Apr 13 10:20:48 2015
From: runsun at gmail.com (runsun)
Date: Mon, 13 Apr 2015 07:20:48 -0700 (MST)
Subject: [OpenSCAD] Difference in a Function Definition
In-Reply-To: <1428044831474-12305.post@n5.nabble.com>
References: <1428043594751-12303.post@n5.nabble.com>
	<1428044557396-12304.post@n5.nabble.com>
	<1428044831474-12305.post@n5.nabble.com>
Message-ID: <1428934848463-12356.post@n5.nabble.com>

I learned it this way:

a = x;   // x is a parameter, previously defined as x=something;
b = x( ); // x is a function
x; // x is a module

So in OpenScad you can have same name x representing 3 different things.




-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15 
$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Difference-in-a-Function-Definition-tp12303p12356.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrew at plumb.org  Mon Apr 13 16:34:40 2015
From: andrew at plumb.org (Andrew Plumb)
Date: Mon, 13 Apr 2015 16:34:40 -0400
Subject: [OpenSCAD] Can I get some code review up in here?
In-Reply-To: <1428933112682-12355.post@n5.nabble.com>
References: <1428707008059-12341.post@n5.nabble.com>
	<CAJgOqADw+z1gVayfOSvyuUqKgMb3aekkZPZmfodW_d=MGaf6bg@mail.gmail.com>
	<1428794729732-12345.post@n5.nabble.com>
	<CAEEmnrNJOmr33haC2WcD3ApRbZo7B5x06RoaCzddyJnUW_NYyA@mail.gmail.com>
	<1428921872434-12353.post@n5.nabble.com>
	<1428933112682-12355.post@n5.nabble.com>
Message-ID: <6E8601E7-F165-48E5-B372-612D971338DB@plumb.org>

As it relates to your hash() function, see search():  http://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language#Search <http://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language#Search>

For a flat list structure, you?d code your hash() function to filter off any odd-index return value(s) before returning the first index+1 result.

Andrew.


> On Apr 13, 2015, at 9:51 AM, runsun <runsun at gmail.com> wrote:
> 
> Or you can try a little more OOP-ish approach using a hash, in which parameters are encapsulated in a list, described in details here : http://forum.openscad.org/parameterized-models-tp8303p8306.html <http://forum.openscad.org/parameterized-models-tp8303p8306.html>
> 
> (1) 
> 
>     default = ["Height", 7, "Thickness", 5, "PinDiameter", 2 ... ];
> 
> Retrieve value: hash( default, "Height") ==> 7 // Need function hash()
> 
> (2) 
> 
> Then expand default as needed:
> 
>     boxHinge_opt = default;
>     controlArm_opt = update( default, [ "Height", 8, "ArmColor", "gray" ... ] );  // Need function update()
> ...
> 
> (3) 
> 
> In the module:
> 
>     module boxHinge( user_opt=[ ] ){
> 
>        opt = update( boxHinge_opt, user_opt ); // User can change them
>        h = hash( opt, "Height");
>        ...
>     }
> 
>     module controlArm( user_opt=[ ] ){
> 
>        opt = update( controlArm_opt, user_opt );
>        h = hash( opt, "Height");
>        ...
>     }
> 
> The hash-like structure is the main parameter model in my own code. With that I can pack parameters and throw them around all together, reuse them easily, or update them when needed. It makes complicated model codes much easier to handle, especially when dealing with objects with multiple level sub-objects ( like Human.Arms.leftArms.Fingers .... )
> $ <http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1> Runsun Pan, PhD 
> $ -- OpenScad_DocTest: doc and unit test ( Github <https://github.com/runsun/openscad_doctest>, Thingiverse <https://www.thingiverse.com/thing:410831> )
> $ -- Linux Mint 17.1 Rebecca x64 + OpenSCAD 2015.03.15
> $ -- Linux Mint 17.1 Rebecca x64 + OpenSCAD 2015.04.01.nightly
> 
> View this message in context: Re: Can I get some code review up in here? <http://forum.openscad.org/Can-I-get-some-code-review-up-in-here-tp12341p12355.html>
> Sent from the OpenSCAD mailing list archive <http://forum.openscad.org/> at Nabble.com.
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150413/fc8fc993/attachment.html>

From runsun at gmail.com  Mon Apr 13 17:20:44 2015
From: runsun at gmail.com (runsun)
Date: Mon, 13 Apr 2015 14:20:44 -0700 (MST)
Subject: [OpenSCAD] Can I get some code review up in here?
In-Reply-To: <6E8601E7-F165-48E5-B372-612D971338DB@plumb.org>
References: <1428707008059-12341.post@n5.nabble.com>
	<CAJgOqADw+z1gVayfOSvyuUqKgMb3aekkZPZmfodW_d=MGaf6bg@mail.gmail.com>
	<1428794729732-12345.post@n5.nabble.com>
	<CAEEmnrNJOmr33haC2WcD3ApRbZo7B5x06RoaCzddyJnUW_NYyA@mail.gmail.com>
	<1428921872434-12353.post@n5.nabble.com>
	<1428933112682-12355.post@n5.nabble.com>
	<6E8601E7-F165-48E5-B372-612D971338DB@plumb.org>
Message-ID: <1428960044469-12358.post@n5.nabble.com>

Many thx, Andrew. Embarrassingly, I didn't even know there's a search(). Only
knew about lookup.With search(), the hash() function becomes ridiculously
simple:
function hash(h,k, notfound=undef)= (    let( rtn= search([k],h) )   
len(rtn)>0? h[rtn[0]+1]: notfound    );opt = ["Height", 7, "Thickness", 5,
"PinDiameter", 2];echo( hash(opt,"Height") ); // 7echo(
hash(opt,"Thickness") ); //5echo( hash(opt,"New") ); // undef ==> This also
generates a warning.I notice that there's a little "hiccup" (for me) when
using search()://Search a str in a string: search( "b","abcd" ) //==>
[1]//Search a str in a list: search( "b",["a","b","c"] ) //==> error //
Search a str in a list:  NOTE: argument one has to be a listsearch(
["b"],["a","b","c"] ) //==> [1]   //Search a string in a list of str:
search("b", [ ["a",10], ["b",11],["c",12] ] ) ) //==> [1]
But, it's not a big issue. It seems that search() is a great tool and there
are lots more to dig into.



-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Can-I-get-some-code-review-up-in-here-tp12341p12358.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150413/eafd2e67/attachment.html>

From runsun at gmail.com  Mon Apr 13 17:39:48 2015
From: runsun at gmail.com (runsun)
Date: Mon, 13 Apr 2015 14:39:48 -0700 (MST)
Subject: [OpenSCAD] Suppressing "search term not found" warning in search( )
	???
Message-ID: <1428961188005-12359.post@n5.nabble.com>

When using search( ), the console pops out a "Warning: search term not found:
..." when the searched term not found.

Is there any way to suppress this warning ?

Here is the story:

I wanna use search( ) to build up a hash( ) function for parameter settings.
Users have the freedom to set some parameters, or not. 

When a parameter is not set by users, the hash( ) function has a default
mechanism to handle it. This is considered normal (so shouldn't be
"warned").

With the warning, however, no matter whether the not-found is dealt with, it
always pops up the warning. As a result, it could end up a long list of
unnecessary warnings in the console. This is unacceptable in my case. 





-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Suppressing-search-term-not-found-warning-in-search-tp12359.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Mon Apr 13 18:08:15 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Mon, 13 Apr 2015 15:08:15 -0700 (MST)
Subject: [OpenSCAD] Suppressing "search term not found" warning in
	search( ) ???
In-Reply-To: <1428961188005-12359.post@n5.nabble.com>
References: <1428961188005-12359.post@n5.nabble.com>
Message-ID: <1428962895108-12360.post@n5.nabble.com>

+1



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Suppressing-search-term-not-found-warning-in-search-tp12359p12360.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrew at plumb.org  Mon Apr 13 18:48:21 2015
From: andrew at plumb.org (Andrew Plumb)
Date: Mon, 13 Apr 2015 18:48:21 -0400
Subject: [OpenSCAD] Suppressing "search term not found" warning in
	search( ) ???
In-Reply-To: <1428961188005-12359.post@n5.nabble.com>
References: <1428961188005-12359.post@n5.nabble.com>
Message-ID: <13D7900C-C61C-4683-AA54-6F0800500864@plumb.org>

Sounds reasonable.

Simple fix+pull request created: https://github.com/openscad/openscad/pull/1312 <https://github.com/openscad/openscad/pull/1312>

Andrew.

> On Apr 13, 2015, at 5:39 PM, runsun <runsun at gmail.com> wrote:
> 
> When using search( ), the console pops out a "Warning: search term not found:
> ..." when the searched term not found.
> 
> Is there any way to suppress this warning ?
> 
> Here is the story:
> 
> I wanna use search( ) to build up a hash( ) function for parameter settings.
> Users have the freedom to set some parameters, or not. 
> 
> When a parameter is not set by users, the hash( ) function has a default
> mechanism to handle it. This is considered normal (so shouldn't be
> "warned").
> 
> With the warning, however, no matter whether the not-found is dealt with, it
> always pops up the warning. As a result, it could end up a long list of
> unnecessary warnings in the console. This is unacceptable in my case. 
> 
> 
> 
> 
> 
> -----
> 
> $  Runsun Pan, PhD 
> 
> $ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 
> 
> $ -- hash parameter model: here , here 
> 
> $ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 
> 
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/Suppressing-search-term-not-found-warning-in-search-tp12359.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150413/1311310d/attachment.html>

From andrew at plumb.org  Mon Apr 13 19:09:06 2015
From: andrew at plumb.org (Andrew Plumb)
Date: Mon, 13 Apr 2015 19:09:06 -0400
Subject: [OpenSCAD] Can I get some code review up in here?
In-Reply-To: <1428960044469-12358.post@n5.nabble.com>
References: <1428707008059-12341.post@n5.nabble.com>
	<CAJgOqADw+z1gVayfOSvyuUqKgMb3aekkZPZmfodW_d=MGaf6bg@mail.gmail.com>
	<1428794729732-12345.post@n5.nabble.com>
	<CAEEmnrNJOmr33haC2WcD3ApRbZo7B5x06RoaCzddyJnUW_NYyA@mail.gmail.com>
	<1428921872434-12353.post@n5.nabble.com>
	<1428933112682-12355.post@n5.nabble.com>
	<6E8601E7-F165-48E5-B372-612D971338DB@plumb.org>
	<1428960044469-12358.post@n5.nabble.com>
Message-ID: <6C9E7B98-8242-4433-8EA0-58EFA0B47026@plumb.org>

Yeah, when I wrote search() the two primary use modes I focused on were basic character(s)-in-string and searching for matches in list-of-lists.

Have a look at my old example23.scad (see https://github.com/openscad/openscad/blob/master/examples/Old/example023.scad <https://github.com/openscad/openscad/blob/master/examples/Old/example023.scad>) and how I structured MCAD/fonts.scad (see https://github.com/openscad/MCAD/blob/master/fonts.scad <https://github.com/openscad/MCAD/blob/master/fonts.scad>)  to get some insight into how I wanted to (ab)use it.

Andrew.


> On Apr 13, 2015, at 5:20 PM, runsun <runsun at gmail.com> wrote:
> 
> Many thx, Andrew. Embarrassingly, I didn't even know there's a search(). Only knew about lookup. With search(), the hash() function becomes ridiculously simple:
> function hash(h,k, notfound=undef)= 
> (
>     let( rtn= search([k],h) )
>     len(rtn)>0? h[rtn[0]+1]: notfound    
> );
> 
> opt = ["Height", 7, "Thickness", 5, "PinDiameter", 2];
> 
> echo( hash(opt,"Height") ); // 7
> echo( hash(opt,"Thickness") ); //5
> echo( hash(opt,"New") ); // undef ==> This also generates a warning.
> 
> I notice that there's a little "hiccup" (for me) when using search():
> 
> //Search a str in a string: 
> search( "b","abcd" ) //==> [1]
> 
> //Search a str in a list: 
> search( "b",["a","b","c"] ) //==> error 
> 
> // Search a str in a list:  NOTE: argument one has to be a list
> search( ["b"],["a","b","c"] ) //==> [1]   
> 
> //Search a string in a list of str: 
> search("b", [ ["a",10], ["b",11],["c",12] ] ) ) //==> [1]
> But, it's not a big issue. It seems that search() is a great tool and there are lots more to dig into.
> $ <http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1> Runsun Pan, PhD 
> $ -- OpenScad_DocTest: doc and unit test ( Github <https://github.com/runsun/openscad_doctest>, Thingiverse <https://www.thingiverse.com/thing:410831> )
> $ -- hash parameter model: here <http://forum.openscad.org/parameterized-models-td8303.html#a8306>, here <http://forum.openscad.org/Can-I-get-some-code-review-up-in-here-tp12341p12355.html>
> $ -- Linux Mint 17.1 Rebecca x64 + OpenSCAD 2015.03.15/2015.04.01.nightly
> 
> View this message in context: Re: Can I get some code review up in here? <http://forum.openscad.org/Can-I-get-some-code-review-up-in-here-tp12341p12358.html>
> Sent from the OpenSCAD mailing list archive <http://forum.openscad.org/> at Nabble.com.
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150413/2ed720f3/attachment-0001.html>

From runsun at gmail.com  Tue Apr 14 00:25:56 2015
From: runsun at gmail.com (runsun)
Date: Mon, 13 Apr 2015 21:25:56 -0700 (MST)
Subject: [OpenSCAD] Can I get some code review up in here?
In-Reply-To: <6C9E7B98-8242-4433-8EA0-58EFA0B47026@plumb.org>
References: <1428707008059-12341.post@n5.nabble.com>
	<CAJgOqADw+z1gVayfOSvyuUqKgMb3aekkZPZmfodW_d=MGaf6bg@mail.gmail.com>
	<1428794729732-12345.post@n5.nabble.com>
	<CAEEmnrNJOmr33haC2WcD3ApRbZo7B5x06RoaCzddyJnUW_NYyA@mail.gmail.com>
	<1428921872434-12353.post@n5.nabble.com>
	<1428933112682-12355.post@n5.nabble.com>
	<6E8601E7-F165-48E5-B372-612D971338DB@plumb.org>
	<1428960044469-12358.post@n5.nabble.com>
	<6C9E7B98-8242-4433-8EA0-58EFA0B47026@plumb.org>
Message-ID: <1428985556180-12363.post@n5.nabble.com>

Thx. Looking at fonts.scad and example023.scad, I can see why search() is
needed :) 


clothbot wrote
> Yeah, when I wrote search() the two primary use modes I focused on were
> basic character(s)-in-string and searching for matches in list-of-lists.
> 
> Have a look at my old example23.scad (see
> https://github.com/openscad/openscad/blob/master/examples/Old/example023.scad
> &lt;https://github.com/openscad/openscad/blob/master/examples/Old/example023.scad&gt;)
> and how I structured MCAD/fonts.scad (see
> https://github.com/openscad/MCAD/blob/master/fonts.scad
> &lt;https://github.com/openscad/MCAD/blob/master/fonts.scad&gt;)  to get
> some insight into how I wanted to (ab)use it.
> 
> Andrew.





-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Can-I-get-some-code-review-up-in-here-tp12341p12363.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Tue Apr 14 00:35:06 2015
From: runsun at gmail.com (runsun)
Date: Mon, 13 Apr 2015 21:35:06 -0700 (MST)
Subject: [OpenSCAD] Suppressing "search term not found" warning in
	search( ) ???
In-Reply-To: <13D7900C-C61C-4683-AA54-6F0800500864@plumb.org>
References: <1428961188005-12359.post@n5.nabble.com>
	<13D7900C-C61C-4683-AA54-6F0800500864@plumb.org>
Message-ID: <1428986106267-12364.post@n5.nabble.com>

Thanks a million, Andrew. This would be a significant aid to my code. Am I
right that it won't be available in the nightly-build until it's merged to
the master ?



-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Suppressing-search-term-not-found-warning-in-search-tp12359p12364.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Tue Apr 14 01:28:24 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Mon, 13 Apr 2015 22:28:24 -0700 (MST)
Subject: [OpenSCAD] Can I get some code review up in here?
In-Reply-To: <1428985556180-12363.post@n5.nabble.com>
References: <1428707008059-12341.post@n5.nabble.com>
	<CAJgOqADw+z1gVayfOSvyuUqKgMb3aekkZPZmfodW_d=MGaf6bg@mail.gmail.com>
	<1428794729732-12345.post@n5.nabble.com>
	<CAEEmnrNJOmr33haC2WcD3ApRbZo7B5x06RoaCzddyJnUW_NYyA@mail.gmail.com>
	<1428921872434-12353.post@n5.nabble.com>
	<1428933112682-12355.post@n5.nabble.com>
	<6E8601E7-F165-48E5-B372-612D971338DB@plumb.org>
	<1428960044469-12358.post@n5.nabble.com>
	<6C9E7B98-8242-4433-8EA0-58EFA0B47026@plumb.org>
	<1428985556180-12363.post@n5.nabble.com>
Message-ID: <1428989304507-12365.post@n5.nabble.com>

Also see my  GFan Lib Thing <http://www.thingiverse.com/thing:111187>   for
further examples.



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Can-I-get-some-code-review-up-in-here-tp12341p12365.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Tue Apr 14 07:44:20 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Tue, 14 Apr 2015 13:44:20 +0200
Subject: [OpenSCAD] Suppressing "search term not found" warning in
 search( ) ???
In-Reply-To: <1428986106267-12364.post@n5.nabble.com>
References: <1428961188005-12359.post@n5.nabble.com>	<13D7900C-C61C-4683-AA54-6F0800500864@plumb.org>
	<1428986106267-12364.post@n5.nabble.com>
Message-ID: <552CFD94.8020709@gmx.de>

On 04/14/2015 06:35 AM, runsun wrote:
> Thanks a million, Andrew. This would be a significant aid to my code. Am I
> right that it won't be available in the nightly-build until it's merged to
> the master ?
>
Yes, the nightly-builds are based on master.

But actually those are not really "nightly" builds, they are triggered after
commit / merge on github. So if you subscribe on the pull request, you'll
get a mail about 30 minutes before the builds are ready ;-).

ciao,
   Torsten.




From david at davidthings.com  Tue Apr 14 11:43:13 2015
From: david at davidthings.com (David Williams)
Date: Tue, 14 Apr 2015 08:43:13 -0700 (MST)
Subject: [OpenSCAD] Animation flicker
In-Reply-To: <1427567467372-12258.post@n5.nabble.com>
References: <1427258985808-12199.post@n5.nabble.com>
	<1427567467372-12258.post@n5.nabble.com>
Message-ID: <1429026193066-12367.post@n5.nabble.com>

Sorry to waste forum bandwidth, but...

Thank you so much for fixing this! I downloaded the nightly build and we're
back to buttery smooth animation again.  So happy!




--
View this message in context: http://forum.openscad.org/Animation-flicker-tp12199p12367.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mwm at mired.org  Tue Apr 14 12:35:37 2015
From: mwm at mired.org (Mike Meyer)
Date: Tue, 14 Apr 2015 11:35:37 -0500
Subject: [OpenSCAD] "empty" openscad model?
Message-ID: <CAD=7U2DLRhffs+qw+MiZP6ayDE9iNN6q=-bMP4B4O7WR_or01A@mail.gmail.com>

I've turning my Haskell OpenSCAD model types into instances of Semigroup
and Monoid, but wonder if I've chosen the right "empty" value for monoids.

For those not familiar with it, a monoid is a structure that has an
operation (in this case, union) with an identity object, empty.  The idea
is that a union of anything with empty should return that same thing.

Is there a convenient such object in OpenSCAD? I just used "box 0 0 0",
which seems to do the right thing, but it feels like there ought to be a
better option for "I need to return an object here, but don't really want
to."
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150414/6f7759e0/attachment.html>

From doug at moens.org  Tue Apr 14 14:35:28 2015
From: doug at moens.org (doug moen)
Date: Tue, 14 Apr 2015 14:35:28 -0400
Subject: [OpenSCAD] "empty" openscad model?
In-Reply-To: <CAD=7U2DLRhffs+qw+MiZP6ayDE9iNN6q=-bMP4B4O7WR_or01A@mail.gmail.com>
References: <CAD=7U2DLRhffs+qw+MiZP6ayDE9iNN6q=-bMP4B4O7WR_or01A@mail.gmail.com>
Message-ID: <CAGV6i+MfNvDjrhodMy+57HzX+cKoGJYTQTvUc7tBJdCYSTXbWA@mail.gmail.com>

I'm not sure if there is a correct answer. I'm not sure if the openscad
geometric operations are mathematically consistent for edge cases like
passing the empty model as an argument.

Mathematically, a 3D shape is a set of points, and the empty shape is the
empty set. So you would expect union(X, empty) = X, intersection(X, empty)
= empty.

In principle, i'd expect cube(0) and group(){} to both behave as the empty
shape, but in practice, they give different results when passed to
intersection. cube(0) behaves as expected, while
intersection(){cube(1);group(){}} returns cube(1).

So I guess that "box 0 0 0" is a reasonable choice.

On 14 April 2015 at 12:35, Mike Meyer <mwm at mired.org> wrote:

> I've turning my Haskell OpenSCAD model types into instances of Semigroup
> and Monoid, but wonder if I've chosen the right "empty" value for monoids.
>
> For those not familiar with it, a monoid is a structure that has an
> operation (in this case, union) with an identity object, empty.  The idea
> is that a union of anything with empty should return that same thing.
>
> Is there a convenient such object in OpenSCAD? I just used "box 0 0 0",
> which seems to do the right thing, but it feels like there ought to be a
> better option for "I need to return an object here, but don't really want
> to."
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150414/f79c3a1e/attachment.html>

From runsun at gmail.com  Tue Apr 14 14:53:28 2015
From: runsun at gmail.com (runsun)
Date: Tue, 14 Apr 2015 11:53:28 -0700 (MST)
Subject: [OpenSCAD] Can I get some code review up in here?
In-Reply-To: <1428989304507-12365.post@n5.nabble.com>
References: <CAJgOqADw+z1gVayfOSvyuUqKgMb3aekkZPZmfodW_d=MGaf6bg@mail.gmail.com>
	<1428794729732-12345.post@n5.nabble.com>
	<CAEEmnrNJOmr33haC2WcD3ApRbZo7B5x06RoaCzddyJnUW_NYyA@mail.gmail.com>
	<1428921872434-12353.post@n5.nabble.com>
	<1428933112682-12355.post@n5.nabble.com>
	<6E8601E7-F165-48E5-B372-612D971338DB@plumb.org>
	<1428960044469-12358.post@n5.nabble.com>
	<6C9E7B98-8242-4433-8EA0-58EFA0B47026@plumb.org>
	<1428985556180-12363.post@n5.nabble.com>
	<1428989304507-12365.post@n5.nabble.com>
Message-ID: <1429037608250-12370.post@n5.nabble.com>

Cool. Very similar to my approach. I suppose your Fan Lib (matching integers
using lookup) will run faster than my hash model (matching string via
recursive scanning). 


MichaelAtOz wrote
> Also see my 
> Fan Lib Thing <http://www.thingiverse.com/thing:111187>  
>  for further examples.





-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Can-I-get-some-code-review-up-in-here-tp12341p12370.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arhi.smece at gmail.com  Tue Apr 14 16:48:05 2015
From: arhi.smece at gmail.com (arhi)
Date: Tue, 14 Apr 2015 13:48:05 -0700 (MST)
Subject: [OpenSCAD] 3D mouse support for openscad?!
In-Reply-To: <CAPaq-gOhkDgVLbh534NsccmKp=whDymb3sTOrP036M+2f-Z45w@mail.gmail.com>
References: <CAPaq-gOhkDgVLbh534NsccmKp=whDymb3sTOrP036M+2f-Z45w@mail.gmail.com>
Message-ID: <1429044485234-12372.post@n5.nabble.com>

Torsten Wagner wrote
> I got my hands on a 3D connexion mouse and was wondering if someone of you
> got this working with openscad und Linux.

Anyone got 3D mouse to work with openscad under windows?
I have space pilot and I see lot of app support for it .. same driver for 
- SpaceExplorer USB
- SpaceMouse Pro
- SpaceMouse Wireless
- SpaceNavigator
- SpaceNavigator for Notebooks
- SpacePilot Pro

might be a worthy cause :D

I read that "if they are sending special signals it should be easy to add to
openscad config" - I don't see any config that comes with windoze binary?
Any pointers?




--
View this message in context: http://forum.openscad.org/3D-mouse-support-for-openscad-tp3998p12372.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jdawgaz at gmail.com  Wed Apr 15 18:29:22 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Wed, 15 Apr 2015 15:29:22 -0700
Subject: [OpenSCAD] question on my code
Message-ID: <CAMyDR6KMy=CsR_7Su5ZoNZT57hb7Z5vgsfXZZUr_vd1UygXbjg@mail.gmail.com>

I have a module, called cylhole, which creates a cylinder with a hole in it.
If I call it by itself, it works like I want it to.
If I call it in a difference() it somehow leaves the hole filled.

I am not sure why, and what could I do to do what I really want to do.

Here is the code:

$fn = 60;

// driver gear diameter = 16.32 mm
// driven gear bottom diameter = 45.42 mm
// driven gear top diameter = 13.55 mm
// top layer = 3.15 mm on top of bottom layer

// bottom layer has driver gear and bottom driven gear
// top layer has rack and top driver gear

cube_l = 88;
cube_w = 60;
cube_h = 5;

module cylhole(r=3, h=3, hole=1) {
  difference() {
    cylinder(r=r, h=h, center=true);
    cylinder(r=hole, h=h+1, center=true);
  }
}

module bottom(r1=3, r2=3, foclen=9, nr=0) {
  fl = (cube_l/8) + (foclen/2) + nr;
  fr = (cube_l/8) - (foclen/2) + nr;

  difference() {
    cube([cube_l, cube_w, cube_h], center=true);
    translate([fl, 0, 2]) color("Aqua") cylhole(r=r1, h=cube_h, hole=1,
center=true);
    translate([fr, 0, 2]) color("Blue") cylhole(r=r2, h=cube_h, hole=1,
center=true);
  }
}

// this doesn't ... hmm.
bottom(r1=16.32/2, r2=45.42/2, foclen=28, nr=7);

// this does what I think it should do
translate([0, cube_w+20, 0]) cylhole(12, 5, 2);

Jerry

--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150415/700cbc2e/attachment.html>

From hypher at gmail.com  Wed Apr 15 18:38:54 2015
From: hypher at gmail.com (Yona Appletree)
Date: Wed, 15 Apr 2015 15:38:54 -0700
Subject: [OpenSCAD] question on my code
In-Reply-To: <CAMyDR6KMy=CsR_7Su5ZoNZT57hb7Z5vgsfXZZUr_vd1UygXbjg@mail.gmail.com>
References: <CAMyDR6KMy=CsR_7Su5ZoNZT57hb7Z5vgsfXZZUr_vd1UygXbjg@mail.gmail.com>
Message-ID: <552EE87E.90100@gmail.com>

Jerry,

I'm not sure I understand the problem. It seems like it works to me... 
you end up with a cylinder in the middle of the "bottom" section as I 
would expect:



What are you expecting it to do, exactly?

- Yona
> Jerry Davis <mailto:jdawgaz at gmail.com>
> April 15, 2015 at 15:29
> I have a module, called cylhole, which creates a cylinder with a hole 
> in it.
> If I call it by itself, it works like I want it to.
> If I call it in a difference() it somehow leaves the hole filled.
>
> I am not sure why, and what could I do to do what I really want to do.
>
> Here is the code:
>
> $fn = 60;
>
> // driver gear diameter = 16.32 mm
> // driven gear bottom diameter = 45.42 mm
> // driven gear top diameter = 13.55 mm
> // top layer = 3.15 mm on top of bottom layer
>
> // bottom layer has driver gear and bottom driven gear
> // top layer has rack and top driver gear
>
> cube_l = 88;
> cube_w = 60;
> cube_h = 5;
>
> module cylhole(r=3, h=3, hole=1) {
>   difference() {
>     cylinder(r=r, h=h, center=true);
>     cylinder(r=hole, h=h+1, center=true);
>   }
> }
>
> module bottom(r1=3, r2=3, foclen=9, nr=0) {
>   fl = (cube_l/8) + (foclen/2) + nr;
>   fr = (cube_l/8) - (foclen/2) + nr;
>   difference() {
>     cube([cube_l, cube_w, cube_h], center=true);
>     translate([fl, 0, 2]) color("Aqua") cylhole(r=r1, h=cube_h, 
> hole=1, center=true);
>     translate([fr, 0, 2]) color("Blue") cylhole(r=r2, h=cube_h, 
> hole=1, center=true);
>   }
> }
>
> // this doesn't ... hmm.
> bottom(r1=16.32/2, r2=45.42/2, foclen=28, nr=7);
>
> // this does what I think it should do
> translate([0, cube_w+20, 0]) cylhole(12, 5, 2);
>
> Jerry
>
> --
> Extra Ham Operator: K7AZJ
> Registered Linux User: 275424
> Raspberry Pi and Arduino developer
>
> /The most exciting phrase to hear in science - the one that heralds 
> new discoveries - is not "Eureka!" but "That's funny...".
> /- Isaac. Asimov
>
> /I//f you give someone a program, you will frustrate them for a day; 
> if you teach them how to program, you will frustrate them for a lifetime.
> /- Anonymous
>
> /If writing good code requires very little comments, then writing 
> really excellent code requires no comments at all!
> /- Ken Thompson
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150415/188253fb/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image.png
Type: image/png
Size: 26476 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150415/188253fb/attachment-0001.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: compose-unknown-contact.jpg
Type: image/jpeg
Size: 770 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150415/188253fb/attachment-0001.jpg>

From kc6ete at gmail.com  Wed Apr 15 19:02:15 2015
From: kc6ete at gmail.com (david vanhorn)
Date: Wed, 15 Apr 2015 17:02:15 -0600
Subject: [OpenSCAD] question on my code
In-Reply-To: <552EE87E.90100@gmail.com>
References: <CAMyDR6KMy=CsR_7Su5ZoNZT57hb7Z5vgsfXZZUr_vd1UygXbjg@mail.gmail.com>
	<552EE87E.90100@gmail.com>
Message-ID: <CADfdXdfgVeyWXwxqKRHBJ=L_Lon1Kr3tY37sab7nsk-aEipLKw@mail.gmail.com>

I see why you were confused.

The module you've created basically is an unthreaded spacer.  A cylinder
with a hole in the middle.
If  you differenced that (shoved that spacer into) with a lump of clay,
you'd end  up with the picture above.

Sounds like you were expecting a hole with the OD of the unthreaded spacer.

This is a case of "be careful what you ask for, you may get it."  :)






On Wed, Apr 15, 2015 at 4:38 PM, Yona Appletree <hypher at gmail.com> wrote:

> Jerry,
>
> I'm not sure I understand the problem. It seems like it works to me... you
> end up with a cylinder in the middle of the "bottom" section as I would
> expect:
>
>
>
> What are you expecting it to do, exactly?
>
> - Yona
>
>   Jerry Davis <jdawgaz at gmail.com>
>  April 15, 2015 at 15:29
> I have a module, called cylhole, which creates a cylinder with a hole in
> it.
> If I call it by itself, it works like I want it to.
> If I call it in a difference() it somehow leaves the hole filled.
>
> I am not sure why, and what could I do to do what I really want to do.
>
> Here is the code:
>
> $fn = 60;
>
> // driver gear diameter = 16.32 mm
> // driven gear bottom diameter = 45.42 mm
> // driven gear top diameter = 13.55 mm
> // top layer = 3.15 mm on top of bottom layer
>
> // bottom layer has driver gear and bottom driven gear
> // top layer has rack and top driver gear
>
> cube_l = 88;
> cube_w = 60;
> cube_h = 5;
>
> module cylhole(r=3, h=3, hole=1) {
>   difference() {
>     cylinder(r=r, h=h, center=true);
>     cylinder(r=hole, h=h+1, center=true);
>   }
> }
>
> module bottom(r1=3, r2=3, foclen=9, nr=0) {
>   fl = (cube_l/8) + (foclen/2) + nr;
>   fr = (cube_l/8) - (foclen/2) + nr;
>
>   difference() {
>     cube([cube_l, cube_w, cube_h], center=true);
>     translate([fl, 0, 2]) color("Aqua") cylhole(r=r1, h=cube_h, hole=1,
> center=true);
>     translate([fr, 0, 2]) color("Blue") cylhole(r=r2, h=cube_h, hole=1,
> center=true);
>   }
> }
>
> // this doesn't ... hmm.
> bottom(r1=16.32/2, r2=45.42/2, foclen=28, nr=7);
>
> // this does what I think it should do
> translate([0, cube_w+20, 0]) cylhole(12, 5, 2);
>
> Jerry
>
> --
> Extra Ham Operator: K7AZJ
> Registered Linux User: 275424
> Raspberry Pi and Arduino developer
>
>
> *The most exciting phrase to hear in science - the one that heralds new
> discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov
>
> *I*
> *f you give someone a program, you will frustrate them for a day; if you
> teach them how to program, you will frustrate them for a lifetime. *-
> Anonymous
>
>
> *If writing good code requires very little comments, then writing really
> excellent code requires no comments at all!*- Ken Thompson
>  _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150415/0ae90cb2/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: compose-unknown-contact.jpg
Type: image/jpeg
Size: 770 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150415/0ae90cb2/attachment-0001.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image.png
Type: image/png
Size: 26476 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150415/0ae90cb2/attachment-0001.png>

From jdawgaz at gmail.com  Wed Apr 15 20:15:55 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Wed, 15 Apr 2015 17:15:55 -0700
Subject: [OpenSCAD] question on my code
In-Reply-To: <CADfdXdfgVeyWXwxqKRHBJ=L_Lon1Kr3tY37sab7nsk-aEipLKw@mail.gmail.com>
References: <CAMyDR6KMy=CsR_7Su5ZoNZT57hb7Z5vgsfXZZUr_vd1UygXbjg@mail.gmail.com>
	<552EE87E.90100@gmail.com>
	<CADfdXdfgVeyWXwxqKRHBJ=L_Lon1Kr3tY37sab7nsk-aEipLKw@mail.gmail.com>
Message-ID: <CAMyDR6KWcWhHr9USAxkijaNVnq_po5EGtNuS3MYeXifZTYC5ew@mail.gmail.com>

ok, I got it. because I had a hole in the cylhole module, that hole when
differenced in the bottom module, became the opposite.

I got rid of the cylhole module and changed the difference() to be:

  difference() {
    cube([cube_l, cube_w, cube_h], center=true);
    translate([fl, 0, 2]) color("Aqua") cylinder(r=r1, h=cube_h,
center=true);
    translate([fl, 0, -1]) color("Aqua") cylinder(r=2, h=cube_h,
center=true);
    translate([fr, 0, 2]) color("Blue") cylinder(r=r2, h=cube_h,
center=true);
    translate([fr, 0, -1]) color("Blue") cylinder(r=2, h=cube_h,
center=true);
  }

and now it is as I wanted.
Boy, did I learn a lesson there!




Jerry

--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson

On Wed, Apr 15, 2015 at 4:02 PM, david vanhorn <kc6ete at gmail.com> wrote:

> I see why you were confused.
>
> The module you've created basically is an unthreaded spacer.  A cylinder
> with a hole in the middle.
> If  you differenced that (shoved that spacer into) with a lump of clay,
> you'd end  up with the picture above.
>
> Sounds like you were expecting a hole with the OD of the unthreaded
> spacer.
>
> This is a case of "be careful what you ask for, you may get it."  :)
>
>
>
>
>
>
> On Wed, Apr 15, 2015 at 4:38 PM, Yona Appletree <hypher at gmail.com> wrote:
>
>> Jerry,
>>
>> I'm not sure I understand the problem. It seems like it works to me...
>> you end up with a cylinder in the middle of the "bottom" section as I would
>> expect:
>>
>>
>>
>> What are you expecting it to do, exactly?
>>
>> - Yona
>>
>>   Jerry Davis <jdawgaz at gmail.com>
>>  April 15, 2015 at 15:29
>> I have a module, called cylhole, which creates a cylinder with a hole in
>> it.
>> If I call it by itself, it works like I want it to.
>> If I call it in a difference() it somehow leaves the hole filled.
>>
>> I am not sure why, and what could I do to do what I really want to do.
>>
>> Here is the code:
>>
>> $fn = 60;
>>
>> // driver gear diameter = 16.32 mm
>> // driven gear bottom diameter = 45.42 mm
>> // driven gear top diameter = 13.55 mm
>> // top layer = 3.15 mm on top of bottom layer
>>
>> // bottom layer has driver gear and bottom driven gear
>> // top layer has rack and top driver gear
>>
>> cube_l = 88;
>> cube_w = 60;
>> cube_h = 5;
>>
>> module cylhole(r=3, h=3, hole=1) {
>>   difference() {
>>     cylinder(r=r, h=h, center=true);
>>     cylinder(r=hole, h=h+1, center=true);
>>   }
>> }
>>
>> module bottom(r1=3, r2=3, foclen=9, nr=0) {
>>   fl = (cube_l/8) + (foclen/2) + nr;
>>   fr = (cube_l/8) - (foclen/2) + nr;
>>
>>   difference() {
>>     cube([cube_l, cube_w, cube_h], center=true);
>>     translate([fl, 0, 2]) color("Aqua") cylhole(r=r1, h=cube_h, hole=1,
>> center=true);
>>     translate([fr, 0, 2]) color("Blue") cylhole(r=r2, h=cube_h, hole=1,
>> center=true);
>>   }
>> }
>>
>> // this doesn't ... hmm.
>> bottom(r1=16.32/2, r2=45.42/2, foclen=28, nr=7);
>>
>> // this does what I think it should do
>> translate([0, cube_w+20, 0]) cylhole(12, 5, 2);
>>
>> Jerry
>>
>> --
>> Extra Ham Operator: K7AZJ
>> Registered Linux User: 275424
>> Raspberry Pi and Arduino developer
>>
>>
>> *The most exciting phrase to hear in science - the one that heralds new
>> discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov
>>
>> *I*
>> *f you give someone a program, you will frustrate them for a day; if you
>> teach them how to program, you will frustrate them for a lifetime. *-
>> Anonymous
>>
>>
>> *If writing good code requires very little comments, then writing really
>> excellent code requires no comments at all!*- Ken Thompson
>>  _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150415/68e4481a/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: compose-unknown-contact.jpg
Type: image/jpeg
Size: 770 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150415/68e4481a/attachment-0001.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image.png
Type: image/png
Size: 26476 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150415/68e4481a/attachment-0001.png>

From andrew at plumb.org  Thu Apr 16 06:08:27 2015
From: andrew at plumb.org (Andrew Plumb)
Date: Thu, 16 Apr 2015 06:08:27 -0400
Subject: [OpenSCAD] Can I get some code review up in here?
In-Reply-To: <1428985556180-12363.post@n5.nabble.com>
References: <1428707008059-12341.post@n5.nabble.com>
	<CAJgOqADw+z1gVayfOSvyuUqKgMb3aekkZPZmfodW_d=MGaf6bg@mail.gmail.com>
	<1428794729732-12345.post@n5.nabble.com>
	<CAEEmnrNJOmr33haC2WcD3ApRbZo7B5x06RoaCzddyJnUW_NYyA@mail.gmail.com>
	<1428921872434-12353.post@n5.nabble.com>
	<1428933112682-12355.post@n5.nabble.com>
	<6E8601E7-F165-48E5-B372-612D971338DB@plumb.org>
	<1428960044469-12358.post@n5.nabble.com>
	<6C9E7B98-8242-4433-8EA0-58EFA0B47026@plumb.org>
	<1428985556180-12363.post@n5.nabble.com>
Message-ID: <1C2FDB70-6ED5-4DF5-894C-CBCD4E0B3599@plumb.org>

Marius has pulled my fixes to search and my updates to example023.scad (removing the deprecated use of assign()).  Anything built from today (April 16th) onward should be good to go!

Andrew.

> On Apr 14, 2015, at 12:25 AM, runsun <runsun at gmail.com> wrote:
> 
> Thx. Looking at fonts.scad and example023.scad, I can see why search() is
> needed :) 
> 
> 
> clothbot wrote
>> Yeah, when I wrote search() the two primary use modes I focused on were
>> basic character(s)-in-string and searching for matches in list-of-lists.
>> 
>> Have a look at my old example23.scad (see
>> https://github.com/openscad/openscad/blob/master/examples/Old/example023.scad
>> &lt;https://github.com/openscad/openscad/blob/master/examples/Old/example023.scad&gt;)
>> and how I structured MCAD/fonts.scad (see
>> https://github.com/openscad/MCAD/blob/master/fonts.scad
>> &lt;https://github.com/openscad/MCAD/blob/master/fonts.scad&gt;)  to get
>> some insight into how I wanted to (ab)use it.
>> 
>> Andrew.
> 
> 
> 
> 
> 
> -----
> 
> $  Runsun Pan, PhD 
> 
> $ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 
> 
> $ -- hash parameter model: here , here 
> 
> $ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 
> 
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/Can-I-get-some-code-review-up-in-here-tp12341p12363.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From tkw at xs4all.nl  Thu Apr 16 08:32:00 2015
From: tkw at xs4all.nl (KarijnWessing)
Date: Thu, 16 Apr 2015 05:32:00 -0700 (MST)
Subject: [OpenSCAD] Presentation OpenSCAD
Message-ID: <1429187520893-12381.post@n5.nabble.com>

Hello All,
I?m asked to provide a demo/workshop in OpenSCAD in the coming week. Is
there a powerpoint presentation available that I can use as a starting point
for my presentation.


Thanks in advance,

Karijn Wessing
Netherlands




--
View this message in context: http://forum.openscad.org/Presentation-OpenSCAD-tp12381.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From ed.nisley at pobox.com  Thu Apr 16 12:16:02 2015
From: ed.nisley at pobox.com (Ed Nisley)
Date: Thu, 16 Apr 2015 12:16:02 -0400
Subject: [OpenSCAD] Presentation OpenSCAD
In-Reply-To: <1429187520893-12381.post@n5.nabble.com>
References: <1429187520893-12381.post@n5.nabble.com>
Message-ID: <552FE042.4060901@pobox.com>

> a starting point for my presentation.

The class I gave for the local makerspace should give you some ideas:

http://softsolder.com/2013/09/26/practical-solid-modeling-for-3d-printing-with-openscad/

You'll find the various projects, pictures, and source code scattered 
around my blog.

If you can get folks to bring along a laptop with OpenSCAD already 
installed, they can follow along and learn a bit more...

-- 
Ed
softsolder.com


From braddo_99 at yahoo.com  Thu Apr 16 12:48:29 2015
From: braddo_99 at yahoo.com (brad hopper)
Date: Thu, 16 Apr 2015 16:48:29 +0000 (UTC)
Subject: [OpenSCAD] Snippets with QScintilla for OpenSCAD?
Message-ID: <1711324507.5472403.1429202909538.JavaMail.yahoo@mail.yahoo.com>

Hey folks,
Now that OpenSCAD has a new underlying editor - QScintilla, I wonder if there might already be support for "snippets", by which I mean shortcut strings which resolve to longer code templates. (If you google for "snippets" and Qscintilla, you'll get a lot of hits for what I think is actually just mini tutorials on how to use QScintilla, which isn't what I mean)
For example, in OpenSCAD, when I type "for", 99% of the time I will continue to type:
for(i=[-1,1]){? ? translate([i*0,0,0]) (something like cylinder() );}
and of course, if I type "cyl..." I will almost always want to get
cylinder(r=0,h=0); etc
I think a lot of editors do this type of thing - I used to use Sublime Text 2 and still use Notepad++ but just got tired of using two apps instead of one, especially now that OpenSCAD has nice looking syntax hilighting, theming etc.
I'm thinking that QScintilla might already have this feature and it may be a matter of editing/making a configuration file somewhere... true?
Thanks!
Brad
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150416/c5e95fbf/attachment.html>

From braddo_99 at yahoo.com  Thu Apr 16 13:01:12 2015
From: braddo_99 at yahoo.com (brad hopper)
Date: Thu, 16 Apr 2015 17:01:12 +0000 (UTC)
Subject: [OpenSCAD] Auto indenting configuration?
In-Reply-To: <1711324507.5472403.1429202909538.JavaMail.yahoo@mail.yahoo.com>
References: <1711324507.5472403.1429202909538.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <1248007729.5456911.1429203672349.JavaMail.yahoo@mail.yahoo.com>

While I'm on the topic of QScintilla, I'm wondering if, again, there's an underlying configuration file which controls the behavior of the auto indentation?
I would love to have auto-indent and I'm sure it's just a matter of style but what's there by default drives me batty!
I like my indentations to look thusly:
module myModule() {? ? some code here}
It helps me a lot to be able to see which statement the } closes by just looking straight up.
Using the inbuilt autoindent it takes a crazy number of arrows and backspaces and re-tabbing to get to what I want. Much less trouble at the moment to just turn it off.
  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150416/8dd2621e/attachment.html>

From marius at kintel.net  Thu Apr 16 13:03:39 2015
From: marius at kintel.net (Marius Kintel)
Date: Thu, 16 Apr 2015 13:03:39 -0400
Subject: [OpenSCAD] Snippets with QScintilla for OpenSCAD?
In-Reply-To: <1711324507.5472403.1429202909538.JavaMail.yahoo@mail.yahoo.com>
References: <1711324507.5472403.1429202909538.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <28E1C628-8E6A-4EED-909F-932D6DE029B9@kintel.net>

On Apr 16, 2015, at 12:48 PM, brad hopper <braddo_99 at yahoo.com> wrote:

> Now that OpenSCAD has a new underlying editor - QScintilla, I wonder if there might already be support for "snippets", by which I mean shortcut strings which resolve to longer code templates. (If you google for "snippets" and Qscintilla, you'll get a lot of hits for what I think is actually just mini tutorials on how to use QScintilla, which isn't what I mean)
> 

This is an attempt are smth. similar:

https://github.com/openscad/openscad/pull/905

 -Marius



From marius at kintel.net  Thu Apr 16 13:05:15 2015
From: marius at kintel.net (Marius Kintel)
Date: Thu, 16 Apr 2015 13:05:15 -0400
Subject: [OpenSCAD] Auto indenting configuration?
In-Reply-To: <1248007729.5456911.1429203672349.JavaMail.yahoo@mail.yahoo.com>
References: <1711324507.5472403.1429202909538.JavaMail.yahoo@mail.yahoo.com>
	<1248007729.5456911.1429203672349.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <8730BE70-CB1E-43FE-A386-F2DC54C1D994@kintel.net>


On Apr 16, 2015, at 13:01 PM, brad hopper <braddo_99 at yahoo.com> wrote:

> While I'm on the topic of QScintilla, I'm wondering if, again, there's an underlying configuration file which controls the behavior of the auto indentation?
> 
There is some configuration in Preferences.
If you try tweaking those, and then describe in more detail what you want, we could take a look at it.

 -Marius




From oz.at.michael at gmail.com  Thu Apr 16 20:08:00 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 16 Apr 2015 17:08:00 -0700 (MST)
Subject: [OpenSCAD] How to combine difference and include?
In-Reply-To: <1429041194801-12371.post@n5.nabble.com>
References: <1429041194801-12371.post@n5.nabble.com>
Message-ID: <1429229280086-12387.post@n5.nabble.com>

Hi, welcome to the forum.

Note they your post is still flagged as "This post has NOT been accepted by
the mailing list yet." which means that most people don't see it unless they
specifically look here. You should complete the mailing list  subscription.
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  

Re you question: 

I don't have that include library, so just used a cylinder) instead.

include <MCAD\polyScrewThread_r1.scad>
//screw_thread(15,4,55,10,PI/2,2);

difference() {
    translate ([-10,-10,10]) 
        cube ([20,20,100]);
     cylinder(r=5,h=111); // made sure it was longer than cube
   
}



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/How-to-combine-difference-and-include-tp12371p12387.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Apr 16 20:09:13 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 16 Apr 2015 17:09:13 -0700 (MST)
Subject: [OpenSCAD] How to combine difference and include?
In-Reply-To: <1429229280086-12387.post@n5.nabble.com>
References: <1429041194801-12371.post@n5.nabble.com>
	<1429229280086-12387.post@n5.nabble.com>
Message-ID: <1429229353973-12388.post@n5.nabble.com>

ie put the screw_thread() where the cylinder() is.



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/How-to-combine-difference-and-include-tp12371p12388.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Apr 16 20:14:04 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 16 Apr 2015 17:14:04 -0700 (MST)
Subject: [OpenSCAD] How to detect chr(0)
In-Reply-To: <1428879975534-12351.post@n5.nabble.com>
References: <1428879975534-12351.post@n5.nabble.com>
Message-ID: <1429229644752-12389.post@n5.nabble.com>

Hi, welcome to the forum.
Your post is still flagged "This post has NOT been accepted by the mailing
list yet." which means that most people don't see it unless they look here.
You need to complete the mailing list  subscription
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  

Re chr(0). Many systems use null terminated strings so chr(0) is treated as
the end of the string. I suspect this is the case here, but haven't looked
into the C RTL to confirm this.



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/How-to-detect-chr-0-tp12351p12389.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mwm at mired.org  Thu Apr 16 20:18:24 2015
From: mwm at mired.org (Mike Meyer)
Date: Thu, 16 Apr 2015 19:18:24 -0500
Subject: [OpenSCAD] Haskell OpenScad library updated
Message-ID: <CAD=7U2BLzeQiGBU-qVkN9z-D6ERAR-=zs+FmDXLwUZ3F7J3Qtw@mail.gmail.com>

To those using this, I've just uploaded 0.2.1.1.

This make the Model data types instances of Monoid, so you can use <> to
combine Model's. It also adds the '#' postfix apply function, so you can
write modifiers (translate, color, etc.) as postfix instead of prefix. So
instead of

union [translate (0, depth, 0) $ box width depth height,
          box wall depth height]

you can write

box width depth height # translate (0, depth, 0)  <> box wall depth height
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150416/2609ebbd/attachment-0001.html>

From oz.at.michael at gmail.com  Thu Apr 16 20:22:02 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 16 Apr 2015 17:22:02 -0700 (MST)
Subject: [OpenSCAD] How to detect chr(0)
In-Reply-To: <1429229644752-12389.post@n5.nabble.com>
References: <1428879975534-12351.post@n5.nabble.com>
	<1429229644752-12389.post@n5.nabble.com>
Message-ID: <1429230122088-12392.post@n5.nabble.com>

Well ignore what I said...

t = chr(0,41,42,43,44,255); 
echo(t);
text(t);
for(i=[0:len(t)-1]) {
	echo(t[i]);
	translate([0,i*15,0]) text(t[i]);
}

Shows it if getting past the chr(0)



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/How-to-detect-chr-0-tp12351p12392.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Apr 16 20:33:31 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 16 Apr 2015 17:33:31 -0700 (MST)
Subject: [OpenSCAD] How to detect chr(0)
In-Reply-To: <1429230122088-12392.post@n5.nabble.com>
References: <1428879975534-12351.post@n5.nabble.com>
	<1429229644752-12389.post@n5.nabble.com>
	<1429230122088-12392.post@n5.nabble.com>
Message-ID: <1429230811440-12393.post@n5.nabble.com>

t = chr(0,41,42,43,44,255); 
echo(t);
text(t);
for(i=[0:len(t)-1]) {
	echo(t[i]);
	translate([0,i*15,0]) 
		text(t[i]);
if(t[i]==chr(0))
	echo("match 0");
if(t[i]==chr(255))
	echo("match 255");
}

Hmmm...

Either a bug, or chr(0) plays a part in unicode or means something else...



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/How-to-detect-chr-0-tp12351p12393.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Thu Apr 16 20:37:55 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Fri, 17 Apr 2015 02:37:55 +0200
Subject: [OpenSCAD] How to detect chr(0)
In-Reply-To: <1429229644752-12389.post@n5.nabble.com>
References: <1428879975534-12351.post@n5.nabble.com>
	<1429229644752-12389.post@n5.nabble.com>
Message-ID: <553055E3.6040107@gmx.de>

The chr() function is supposed to return valid unicode characters in utf-8
encoding, so for example "echo(chr(128512));" is valid and should give the
smiley character U+1F600.

Invalid input values will return an empty string, chr(0) is always treated
as invalid.

Note: This means that asking for chr(255) will internally result in the
bytes 0xc3 0xbf and not 0xff. As len() is also utf-8 aware, len(chr(255))
still returns 1 as it's one character.

ciao,
   Torsten.


From marius at kintel.net  Thu Apr 16 22:15:03 2015
From: marius at kintel.net (kintel)
Date: Thu, 16 Apr 2015 19:15:03 -0700 (MST)
Subject: [OpenSCAD] request for simple makefile example
In-Reply-To: <1429229764332-12390.post@n5.nabble.com>
References: <1429229764332-12390.post@n5.nabble.com>
Message-ID: <1429236903722-12395.post@n5.nabble.com>

This function is really only meant for people familiar with Make, to the
point where you can write your own makefile and understand how dependency
tracking works.
Under Windows, you'll also need to install the appropriate tools; Visual
Studio, mingw or other packages which includes Make.

In lieu of Makefiles, you can always just script OpenSCAD on the cmd-line
using traditional batch files, or any other scripting environment you're
familiar with.

 -Marius



--
View this message in context: http://forum.openscad.org/request-for-simple-makefile-example-tp12390p12395.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From paul at brownsbrain.com  Thu Apr 16 23:20:27 2015
From: paul at brownsbrain.com (Fantome)
Date: Thu, 16 Apr 2015 20:20:27 -0700 (MST)
Subject: [OpenSCAD] How to detect chr(0)
In-Reply-To: <553055E3.6040107@gmx.de>
References: <1428879975534-12351.post@n5.nabble.com>
	<1429229644752-12389.post@n5.nabble.com> <553055E3.6040107@gmx.de>
Message-ID: <1429240827498-12396.post@n5.nabble.com>

tp3 wrote
> The chr() function is supposed to return valid unicode characters in utf-8
> encoding, so for example "echo(chr(128512));" is valid and should give the
> smiley character U+1F600.
> 
> Invalid input values will return an empty string, chr(0) is always treated
> as invalid.
> 
> Note: This means that asking for chr(255) will internally result in the
> bytes 0xc3 0xbf and not 0xff. As len() is also utf-8 aware, len(chr(255))
> still returns 1 as it's one character.
> 
> ciao,
>    Torsten.
> 
> _______________________________________________

Hello and thanks for the input. I'm not sure what you mean by 'internally
result' but here's an example that shows that chr(255) does return a hex
value of 0xFF.

       the_text = chr(255);

       echo("number of characters = ",len(the_text));
       for (i=[0:len(the_text)-1])
       {
           for (ascii_v = [0:255])
           {
               if (the_text[i] == chr(ascii_v)) :
               {
                       if ((ascii_v) == 255):
                       {
                               xFF(count);
                        }
                        echo("character: ",the_text[i]);
                        echo("ASCII value:", ascii_v);  // print the ascii
value being checked
                }
           }
       }

ECHO: "number of characters = ", 1
ECHO: "character: ", "y"
ECHO: "ASCII value:", 255

Note that the character that prints like a y with two dots above it has the
hex value of 0xFF, not 0xC3 .0xBF.




--
View this message in context: http://forum.openscad.org/How-to-detect-chr-0-tp12351p12396.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From paul at brownsbrain.com  Thu Apr 16 23:27:11 2015
From: paul at brownsbrain.com (Fantome)
Date: Thu, 16 Apr 2015 20:27:11 -0700 (MST)
Subject: [OpenSCAD] How to detect chr(0)
In-Reply-To: <1429240827498-12396.post@n5.nabble.com>
References: <1428879975534-12351.post@n5.nabble.com>
	<1429229644752-12389.post@n5.nabble.com> <553055E3.6040107@gmx.de>
	<1429240827498-12396.post@n5.nabble.com>
Message-ID: <1429241231907-12397.post@n5.nabble.com>

Sorry about those colons in the if statements. My cut&paste seemed to have
messed things up a bit.



--
View this message in context: http://forum.openscad.org/How-to-detect-chr-0-tp12351p12397.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Apr 16 23:39:07 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 16 Apr 2015 20:39:07 -0700 (MST)
Subject: [OpenSCAD] How to detect chr(0)
In-Reply-To: <1429240827498-12396.post@n5.nabble.com>
References: <1428879975534-12351.post@n5.nabble.com>
	<1429229644752-12389.post@n5.nabble.com> <553055E3.6040107@gmx.de>
	<1429240827498-12396.post@n5.nabble.com>
Message-ID: <1429241947222-12398.post@n5.nabble.com>

Your logic is a bit off there.

Basically your test is 'if(chr(255)==chr(255))'

Unfortunately, OpenSCAD doesn't (yet?) have a asc() function (or whatever
the unicode version would be called).



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/How-to-detect-chr-0-tp12351p12398.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Fri Apr 17 08:09:27 2015
From: doug at moens.org (doug moen)
Date: Fri, 17 Apr 2015 08:09:27 -0400
Subject: [OpenSCAD] How to detect chr(0)
In-Reply-To: <1429240827498-12396.post@n5.nabble.com>
References: <1428879975534-12351.post@n5.nabble.com>
	<1429229644752-12389.post@n5.nabble.com> <553055E3.6040107@gmx.de>
	<1429240827498-12396.post@n5.nabble.com>
Message-ID: <CAGV6i+Ox=u-mawCXx6X_e_HdwUpDYLnzW9QVrz55zAQGOJ66cg@mail.gmail.com>

HI Fantome. In OpenSCAD, a string is an array of Unicode "code points", it
isn't an array of bytes. Each code point in a string has a value between 1
and 0x10FFFF, except that some code point values are invalid. len(string)
is the number of code points in the string, and str[i] is the i'th code
point.

Torsten told you that internally, strings are represented in UTF-8 format.
But there are no operations in OpenSCAD that allow you to access that
internal representation. Numbers are represented internally as floating
point, but you can't access the underlying bit and byte patterns in a
float, either.

Your test program contains the word ASCII several times, but that's
misleading, you don't have access to the underlying byte representation.

On 16 April 2015 at 23:20, Fantome <paul at brownsbrain.com> wrote:

> tp3 wrote
> > The chr() function is supposed to return valid unicode characters in
> utf-8
> > encoding, so for example "echo(chr(128512));" is valid and should give
> the
> > smiley character U+1F600.
> >
> > Invalid input values will return an empty string, chr(0) is always
> treated
> > as invalid.
> >
> > Note: This means that asking for chr(255) will internally result in the
> > bytes 0xc3 0xbf and not 0xff. As len() is also utf-8 aware, len(chr(255))
> > still returns 1 as it's one character.
> >
> > ciao,
> >    Torsten.
> >
> > _______________________________________________
>
> Hello and thanks for the input. I'm not sure what you mean by 'internally
> result' but here's an example that shows that chr(255) does return a hex
> value of 0xFF.
>
>        the_text = chr(255);
>
>        echo("number of characters = ",len(the_text));
>        for (i=[0:len(the_text)-1])
>        {
>            for (ascii_v = [0:255])
>            {
>                if (the_text[i] == chr(ascii_v)) :
>                {
>                        if ((ascii_v) == 255):
>                        {
>                                xFF(count);
>                         }
>                         echo("character: ",the_text[i]);
>                         echo("ASCII value:", ascii_v);  // print the ascii
> value being checked
>                 }
>            }
>        }
>
> ECHO: "number of characters = ", 1
> ECHO: "character: ", "y"
> ECHO: "ASCII value:", 255
>
> Note that the character that prints like a y with two dots above it has the
> hex value of 0xFF, not 0xC3 .0xBF.
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/How-to-detect-chr-0-tp12351p12396.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150417/4fba1560/attachment.html>

From yvette at dbtgroup.com  Fri Apr 17 10:50:46 2015
From: yvette at dbtgroup.com (Yvette S. Hirth, CCP, CDP)
Date: Fri, 17 Apr 2015 07:50:46 -0700
Subject: [OpenSCAD] Ramp Symbol
In-Reply-To: <CAJgOqADw+z1gVayfOSvyuUqKgMb3aekkZPZmfodW_d=MGaf6bg@mail.gmail.com>
References: <1428707008059-12341.post@n5.nabble.com>
	<CAJgOqADw+z1gVayfOSvyuUqKgMb3aekkZPZmfodW_d=MGaf6bg@mail.gmail.com>
Message-ID: <55311DC6.2080200@dbtgroup.com>

hi all,

hey, does anyone know where a "ramp" symbol could be found?

the "ramp" symbol is whatcha see on euro volume controls, you know, it's 
a "triangle" that's thin on the left, the top slopes up and to the 
right, and it's thick on the right.

it's for a dimmer, and i'm trying to be "language independent".  so i'm 
trying to write() the symbol on the dimmer cover.

can we write() bitmaps?

thanks!
yvette


From jdawgaz at gmail.com  Fri Apr 17 11:22:38 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Fri, 17 Apr 2015 08:22:38 -0700
Subject: [OpenSCAD] Animation flicker
In-Reply-To: <1429026193066-12367.post@n5.nabble.com>
References: <1427258985808-12199.post@n5.nabble.com>
	<1427567467372-12258.post@n5.nabble.com>
	<1429026193066-12367.post@n5.nabble.com>
Message-ID: <CAMyDR6K9RHUkE2KCubqm1pg6sJNY8SU7kE9y_tNjzgmXt8RGyg@mail.gmail.com>

just downloaded latest snapshot version. thanks for fixing this, in such a
timely manner.


Jerry

--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson

On Tue, Apr 14, 2015 at 8:43 AM, David Williams <david at davidthings.com>
wrote:

> Sorry to waste forum bandwidth, but...
>
> Thank you so much for fixing this! I downloaded the nightly build and we're
> back to buttery smooth animation again.  So happy!
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Animation-flicker-tp12199p12367.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150417/5aa5d63d/attachment-0001.html>

From paul at brownsbrain.com  Fri Apr 17 12:15:07 2015
From: paul at brownsbrain.com (Fantome)
Date: Fri, 17 Apr 2015 09:15:07 -0700 (MST)
Subject: [OpenSCAD] How to detect chr(0)
In-Reply-To: <1429241947222-12398.post@n5.nabble.com>
References: <1428879975534-12351.post@n5.nabble.com>
	<1429229644752-12389.post@n5.nabble.com> <553055E3.6040107@gmx.de>
	<1429240827498-12396.post@n5.nabble.com>
	<1429241947222-12398.post@n5.nabble.com>
Message-ID: <1429287307667-12403.post@n5.nabble.com>

MichaelAtOz wrote
> Your logic is a bit off there.
> 
> Basically your test is 'if(chr(255)==chr(255))'
> 
> Unfortunately, OpenSCAD doesn't (yet?) have a asc() function (or whatever
> the unicode version would be called).

Yes, thanks. This is really just an example that represents my code. The
actual code is many lines now. Basically it compares each character of
the_text to the values from 0 to 255. This is, as I'm sure everybody here
knows, the same as 0x00 to 0xFF. For example sake, I only included the
condition that finds the 0xFF. Once I clean up my code I'll post it here or
somewhere so people can enjoy it - tearing it apart or marveling at it.
Either way it will be working at that point. (chr(0) is only part not
working yet.)

... I should have pointed out that this code was only an example to show the
comparison and what it printed out.




--
View this message in context: http://forum.openscad.org/How-to-detect-chr-0-tp12351p12403.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From shadowwynd at gmail.com  Fri Apr 17 12:24:08 2015
From: shadowwynd at gmail.com (Ezra Reynolds)
Date: Fri, 17 Apr 2015 12:24:08 -0400
Subject: [OpenSCAD] Ramp Symbol
In-Reply-To: <55311DC6.2080200@dbtgroup.com>
References: <1428707008059-12341.post@n5.nabble.com>
	<CAJgOqADw+z1gVayfOSvyuUqKgMb3aekkZPZmfodW_d=MGaf6bg@mail.gmail.com>
	<55311DC6.2080200@dbtgroup.com>
Message-ID: <3A28610F-8753-4DB0-807F-1205DD25E33D@gmail.com>

polygon (points=[[0,0],[10,0],[10,3]]);

Sent from my iPhone

> On Apr 17, 2015, at 10:50 AM, "Yvette S. Hirth, CCP, CDP" <yvette at dbtgroup.com> wrote:
> 
> hi all,
> 
> hey, does anyone know where a "ramp" symbol could be found?
> 
> the "ramp" symbol is whatcha see on euro volume controls, you know, it's a "triangle" that's thin on the left, the top slopes up and to the right, and it's thick on the right.
> 
> it's for a dimmer, and i'm trying to be "language independent".  so i'm trying to write() the symbol on the dimmer cover.
> 
> can we write() bitmaps?
> 
> thanks!
> yvette
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


From paul at brownsbrain.com  Fri Apr 17 12:29:16 2015
From: paul at brownsbrain.com (Fantome)
Date: Fri, 17 Apr 2015 09:29:16 -0700 (MST)
Subject: [OpenSCAD] How to detect chr(0)
In-Reply-To: <CAGV6i+Ox=u-mawCXx6X_e_HdwUpDYLnzW9QVrz55zAQGOJ66cg@mail.gmail.com>
References: <1428879975534-12351.post@n5.nabble.com>
	<1429229644752-12389.post@n5.nabble.com> <553055E3.6040107@gmx.de>
	<1429240827498-12396.post@n5.nabble.com>
	<CAGV6i+Ox=u-mawCXx6X_e_HdwUpDYLnzW9QVrz55zAQGOJ66cg@mail.gmail.com>
Message-ID: <1429288156727-12405.post@n5.nabble.com>

doug.moen wrote
> HI Fantome. In OpenSCAD, a string is an array of Unicode "code points", it
> isn't an array of bytes. Each code point in a string has a value between 1
> and 0x10FFFF, except that some code point values are invalid. len(string)
> is the number of code points in the string, and str[i] is the i'th code
> point.
> 
> Torsten told you that internally, strings are represented in UTF-8 format.
> But there are no operations in OpenSCAD that allow you to access that
> internal representation. Numbers are represented internally as floating
> point, but you can't access the underlying bit and byte patterns in a
> float, either.
> 
> Your test program contains the word ASCII several times, but that's
> misleading, you don't have access to the underlying byte representation.

Hello. 
It's interesting to hear about the inner working of this. If OpenSCAD had
the ability to let users manipulate the bits the possibilities for modelling
objects and systems would be increased. Just my opinion of course.

When OpenScad echos/prints the chr(value), what it prints matches with the
ASCII chart. This is why I named the variable ASCII_value. I don't think
it's misleading. It is the ASCII value. It works for all 255 values, value 0
is the only one that is ignored by OpenSCAD. 

For my specific application I guess I'll just figure out a work around since
it seems obvious now that OpenSCAD is treating chr(0) as a 'something' that
is not used in any comparison. The inner workings of OpenSCAD must have
checks for a NULL character or chr(0) that equates to 'jump to the next
character'. Oh well. One disappointment out of 256 values, still 99.61%
satisfaction. 
 



--
View this message in context: http://forum.openscad.org/How-to-detect-chr-0-tp12351p12405.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From yvette at dbtgroup.com  Fri Apr 17 12:53:45 2015
From: yvette at dbtgroup.com (Yvette S. Hirth, CCP, CDP)
Date: Fri, 17 Apr 2015 09:53:45 -0700
Subject: [OpenSCAD] Ramp Symbol
In-Reply-To: <3A28610F-8753-4DB0-807F-1205DD25E33D@gmail.com>
References: <1428707008059-12341.post@n5.nabble.com>
	<CAJgOqADw+z1gVayfOSvyuUqKgMb3aekkZPZmfodW_d=MGaf6bg@mail.gmail.com>
	<55311DC6.2080200@dbtgroup.com>
	<3A28610F-8753-4DB0-807F-1205DD25E33D@gmail.com>
Message-ID: <55313A99.9010708@dbtgroup.com>

On 04/17/2015 09:24 AM, Ezra Reynolds wrote:

> polygon (points=[[0,0],[10,0],[10,3]]);

thanks!
yvette


From doug at moens.org  Fri Apr 17 14:04:47 2015
From: doug at moens.org (doug moen)
Date: Fri, 17 Apr 2015 14:04:47 -0400
Subject: [OpenSCAD] How to detect chr(0)
In-Reply-To: <1429288156727-12405.post@n5.nabble.com>
References: <1428879975534-12351.post@n5.nabble.com>
	<1429229644752-12389.post@n5.nabble.com> <553055E3.6040107@gmx.de>
	<1429240827498-12396.post@n5.nabble.com>
	<CAGV6i+Ox=u-mawCXx6X_e_HdwUpDYLnzW9QVrz55zAQGOJ66cg@mail.gmail.com>
	<1429288156727-12405.post@n5.nabble.com>
Message-ID: <CAGV6i+Mz5UJ2uxMp4gxpzc8LAL0a-_OCD_EK2xzxOO+MfNAHNw@mail.gmail.com>

The reason you see ASCII values is that ASCII is a proper subset of
unicode. The letter 'A' has value 65 in ASCII and also value 65 as a
Unicode code point. But OpenSCAD is still a Unicode system, not an ASCII
system, because the entire Unicode range is supported. So there's no need
to stop at chr(255), when you also have chr(256), chr(257), and so on.

If you want to represent an array of values between 0 and 255 using a
string, you can still do that, you'll just have represent 0 in a different
way: pick a different code point. Or you could add an offset, and use the
range chr(1) to chr(256) to represent the values 0 to 255. Of course, I'm
not really sure what you're trying to do, but I hope this has helped.

On 17 April 2015 at 12:29, Fantome <paul at brownsbrain.com> wrote:

> doug.moen wrote
> > HI Fantome. In OpenSCAD, a string is an array of Unicode "code points",
> it
> > isn't an array of bytes. Each code point in a string has a value between
> 1
> > and 0x10FFFF, except that some code point values are invalid. len(string)
> > is the number of code points in the string, and str[i] is the i'th code
> > point.
> >
> > Torsten told you that internally, strings are represented in UTF-8
> format.
> > But there are no operations in OpenSCAD that allow you to access that
> > internal representation. Numbers are represented internally as floating
> > point, but you can't access the underlying bit and byte patterns in a
> > float, either.
> >
> > Your test program contains the word ASCII several times, but that's
> > misleading, you don't have access to the underlying byte representation.
>
> Hello.
> It's interesting to hear about the inner working of this. If OpenSCAD had
> the ability to let users manipulate the bits the possibilities for
> modelling
> objects and systems would be increased. Just my opinion of course.
>
> When OpenScad echos/prints the chr(value), what it prints matches with the
> ASCII chart. This is why I named the variable ASCII_value. I don't think
> it's misleading. It is the ASCII value. It works for all 255 values, value
> 0
> is the only one that is ignored by OpenSCAD.
>
> For my specific application I guess I'll just figure out a work around
> since
> it seems obvious now that OpenSCAD is treating chr(0) as a 'something' that
> is not used in any comparison. The inner workings of OpenSCAD must have
> checks for a NULL character or chr(0) that equates to 'jump to the next
> character'. Oh well. One disappointment out of 256 values, still 99.61%
> satisfaction.
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/How-to-detect-chr-0-tp12351p12405.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150417/06cf7799/attachment.html>

From ivo.knutsel at gmail.com  Fri Apr 17 15:45:16 2015
From: ivo.knutsel at gmail.com (Ivo)
Date: Fri, 17 Apr 2015 12:45:16 -0700 (MST)
Subject: [OpenSCAD] Do empty nodes take time in the implicit union ? -or-
 Slow rendering of recursive models.
Message-ID: <1429299916960-12408.post@n5.nabble.com>

I'm doing lots-of-non-unionable things again and have noticed that recursive
definitions render slower than non recursive definitions. The preview is
just as fast.

Here is my problem, workaround, and problem with the workaround :
Non-unioning renders are slow in OpenSCAD due to the implicit top level
union. The "-lazyunion" flag is not available to me on Windows. Rendering
performance seems to be O(n^2). 

My workaround is to number each object in the openscad design and make the
design so that i can selectively render objects form a range of objects. I
use this design in a script where i render a range of numbered objects and
merge the generated .stl files. As the objects do not interact, merging
stl's is simple. Performance seems to be around O(n).

I'm now doing designs that can most comfortably be described recursively,
the position of object n+1 depends on object n, even though object n is
disabled from rendering itself. What i'm seeing now is that in a chain of 20
objects, rendering only the first 10 is much faster than rendering the last
10, 45 seconds vs 128 seconds. The generated files are almost the same size,
and have the same number of objects.

Recursive #1 -#10 V 11880 F 3960   46 sec
Recursive #11-#20 V 11880 F 3960  134 sec
Recursive #20     V  1198 F  396   22 sec
Recursive #0      V  1188 F  396    1 sec

Iterative #1 -#10 V 11880 F 3960    8 sec
Iterative #11-#20 V 11880 F 3960   11 sec
Iterative #20     V  1188 F  396    1 sec
Iterative #0      V  1188 F  396    1 sec

========== code ==========

NUDGE = 1;

$fs=0.1;

module thing(number,firstnumber,lastnumber) {
  rotate([90,0,0]) {
  if ((number >= firstnumber) && (number <= lastnumber))
  {
    difference() {
      union() {
        cylinder(h=10,r1=6,r2=6,center=true);
        rotate([0,90,0]) translate([0,0,25.5])
cylinder(h=40,r1=3,r2=3,center=true);
      }
      cylinder(h = 10 + (2 * NUDGE),r1=4,r2=4,center=true);
    }
  }
  rotate([180,90,90]) translate([-20,0,0]) children();
}
}


module thing_r(count,number,firstnumber,lastnumber) {
  if (count >= 0) {
    thing(number,firstnumber,lastnumber) {
      thing_r(count-1,number+1,firstnumber,lastnumber) 
      {
      }
    }
  }
}

// first = 11;
// last  = 20;

module iterativethings(first,last)
{
  for(i= [0:10]) {
    translate([i*25,-i*25,0]) {
      translate([25,0,0]) 
      rotate([0,0,-90]) 
      thing(i*2+1,first,last){};
      thing(i*2,first,last){};
    }
  }
}

module nestedthings(first,last)
{
  thing(0,first,last) {
    thing(1,first,last) {
      thing(2,first,last) {
        thing(3,first,last) {
          thing(4,first,last) {
            thing(5,first,last) {
              thing(6,first,last) {
                thing(7,first,last) {
                  thing(8,first,last) {
                    thing(9,first,last) {
                      thing(10,first,last) {
    thing(11,first,last) {
      thing(12,first,last) {
        thing(13,first,last) {
          thing(14,first,last) {
            thing(15,first,last) {
              thing(16,first,last) {
                thing(17,first,last) {
                  thing(18,first,last) {
                    thing(19,first,last) {
                      thing(20,first,last) {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

module recursivethings(first,last)
{
  thing_r(20,0,first,last) {}
}

first = 1;
last = 20;
// iterativethings();
// nestedthings();
echo("Rendering objects ",first," to ",last);
iterativethings(first,last);
// nestedthings(first,last);
// recursivethings(first,last);



  





--
View this message in context: http://forum.openscad.org/Do-empty-nodes-take-time-in-the-implicit-union-or-Slow-rendering-of-recursive-models-tp12408.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From paul at brownsbrain.com  Fri Apr 17 17:37:28 2015
From: paul at brownsbrain.com (Fantome)
Date: Fri, 17 Apr 2015 14:37:28 -0700 (MST)
Subject: [OpenSCAD] How to detect chr(0)
In-Reply-To: <CAGV6i+Mz5UJ2uxMp4gxpzc8LAL0a-_OCD_EK2xzxOO+MfNAHNw@mail.gmail.com>
References: <1428879975534-12351.post@n5.nabble.com>
	<1429229644752-12389.post@n5.nabble.com> <553055E3.6040107@gmx.de>
	<1429240827498-12396.post@n5.nabble.com>
	<CAGV6i+Ox=u-mawCXx6X_e_HdwUpDYLnzW9QVrz55zAQGOJ66cg@mail.gmail.com>
	<1429288156727-12405.post@n5.nabble.com>
	<CAGV6i+Mz5UJ2uxMp4gxpzc8LAL0a-_OCD_EK2xzxOO+MfNAHNw@mail.gmail.com>
Message-ID: <1429306648203-12409.post@n5.nabble.com>

doug.moen wrote
> The reason you see ASCII values is that ASCII is a proper subset of
> unicode. The letter 'A' has value 65 in ASCII and also value 65 as a
> Unicode code point. But OpenSCAD is still a Unicode system, not an ASCII
> system, because the entire Unicode range is supported. So there's no need
> to stop at chr(255), when you also have chr(256), chr(257), and so on.
> 
> If you want to represent an array of values between 0 and 255 using a
> string, you can still do that, you'll just have represent 0 in a different
> way: pick a different code point. Or you could add an offset, and use the
> range chr(1) to chr(256) to represent the values 0 to 255. Of course, I'm
> not really sure what you're trying to do, but I hope this has helped.

Hey thanks! Sometimes the simple answers are the best. Since OpenSCAD is
using Unicode then yes, I can simply use chr(256) to represent a zero. I
like it. 

Thanks again. Satisfaction has just increased to 100%.



--
View this message in context: http://forum.openscad.org/How-to-detect-chr-0-tp12351p12409.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Fri Apr 17 17:52:33 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 17 Apr 2015 14:52:33 -0700 (MST)
Subject: [OpenSCAD] How to detect chr(0)
In-Reply-To: <1429288156727-12405.post@n5.nabble.com>
References: <1428879975534-12351.post@n5.nabble.com>
	<1429229644752-12389.post@n5.nabble.com> <553055E3.6040107@gmx.de>
	<1429240827498-12396.post@n5.nabble.com>
	<CAGV6i+Ox=u-mawCXx6X_e_HdwUpDYLnzW9QVrz55zAQGOJ66cg@mail.gmail.com>
	<1429288156727-12405.post@n5.nabble.com>
Message-ID: <1429307553380-12410.post@n5.nabble.com>

Fantome wrote
> When OpenScad echos/prints the chr(value), what it prints matches with the
> ASCII chart. This is why I named the variable ASCII_value. I don't think
> it's misleading. It is the ASCII value. It works for all 255 values, value
> 0 is the only one that is ignored by OpenSCAD. 

Note this line in the wiki re chr():

Note: When used with echo() the output to the console for character codes
greater than 127 is platform dependent.

Also code-points above 0x7F are actually stored as 2 bytes

U+0080 	U+07FF 	2 bytes 	110xxxxx 	10xxxxxx  wikipedia
<http://en.wikipedia.org/wiki/UTF-8>  

The UTF-8 ASCII 'compatability' in terms if byte code is only for 00-7F.

@Torsten, according to Wikipedia, 0x00 is NULL and is a valid code point.
???





-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/How-to-detect-chr-0-tp12351p12410.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Fri Apr 17 18:12:29 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 17 Apr 2015 15:12:29 -0700 (MST)
Subject: [OpenSCAD] How to detect chr(0)
In-Reply-To: <1429307553380-12410.post@n5.nabble.com>
References: <1428879975534-12351.post@n5.nabble.com>
	<1429229644752-12389.post@n5.nabble.com> <553055E3.6040107@gmx.de>
	<1429240827498-12396.post@n5.nabble.com>
	<CAGV6i+Ox=u-mawCXx6X_e_HdwUpDYLnzW9QVrz55zAQGOJ66cg@mail.gmail.com>
	<1429288156727-12405.post@n5.nabble.com>
	<1429307553380-12410.post@n5.nabble.com>
Message-ID: <1429308749437-12411.post@n5.nabble.com>

Also, NULL can be represented as "\u0000"

t=chr(0);
u="\u0000";
u2="\u0000";
echo(t,u); //ECHO: ""," "
if (t==u)
  echo("t==u"); // no
if (u==u2)
  echo("u==u2"); // yes
text(u);  // blank

You should read the 'invalid characters' part in the Wikipedia article.
There a a number of Unicode chars in the range 0x7F-0xFF that are invalid.
It is just luck that they seem to work.



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/How-to-detect-chr-0-tp12351p12411.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Fri Apr 17 21:39:05 2015
From: runsun at gmail.com (runsun)
Date: Fri, 17 Apr 2015 18:39:05 -0700 (MST)
Subject: [OpenSCAD] Editor issue: file opening unfold folded codes in all
	open files
Message-ID: <1429321145087-12412.post@n5.nabble.com>

Issue: Opening a file (old or new) unfolds all codes that are folded in all
currently opened files.I've been encountered this issue for some time. It
happens in the older version as well as the newly released 2015.03 and the
nightly-builds (OS: linux Mint 17 and/or 17.1 x64)This creates a headache in
a coding session. Every time I opened a file, I'll have to go thru each
opened file to re-fold those that were folded before. This looks like a bug.
BTW, since we mentioning this, how about a "fold all" option in the menu ?
When files get larger, it'd be extremely helpful to be able to fold them all
at once. You can only work on a small portion at a time, anyway. 



-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Editor-issue-file-opening-unfold-folded-codes-in-all-open-files-tp12412.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150417/02442278/attachment.html>

From doug at moens.org  Fri Apr 17 22:12:22 2015
From: doug at moens.org (doug moen)
Date: Fri, 17 Apr 2015 22:12:22 -0400
Subject: [OpenSCAD] How to detect chr(0)
In-Reply-To: <1429308749437-12411.post@n5.nabble.com>
References: <1428879975534-12351.post@n5.nabble.com>
	<1429229644752-12389.post@n5.nabble.com> <553055E3.6040107@gmx.de>
	<1429240827498-12396.post@n5.nabble.com>
	<CAGV6i+Ox=u-mawCXx6X_e_HdwUpDYLnzW9QVrz55zAQGOJ66cg@mail.gmail.com>
	<1429288156727-12405.post@n5.nabble.com>
	<1429307553380-12410.post@n5.nabble.com>
	<1429308749437-12411.post@n5.nabble.com>
Message-ID: <CAGV6i+Os=_dmrQ=GJ6QPvNoY+9KrrEE7MNL_JY+P8tb-sEfE8Q@mail.gmail.com>

> Also, NULL can be represented as "\u0000"

echo("\u0000" == "\u0020");
ECHO: true

So \u0000 is converted to a space character.

>@Torsten, according to Wikipedia, 0x00 is NULL and is a valid code point.
>???

There are a couple of good reasons to not support NUL.
They all stem from the fact that C programs use the NUL character to
terminate a character string.

   - One reason might be implementation reasons: a lot of the string APIs
   available to C++ programs use NUL terminated strings.
   - Another reason is security related: there are a number of network
   security exploits that are involve the insertion of NUL characters into
   network traffic. There are a couple of projects that build web interfaces
   on top of OpenSCAD, so if a malicious OpenSCAD script has the ability to
   insert NUL characters into these project's web traffic, it might be
   possible to build an exploit.


On 17 April 2015 at 18:12, MichaelAtOz <oz.at.michael at gmail.com> wrote:

> Also, NULL can be represented as "\u0000"
>
> t=chr(0);
> u="\u0000";
> u2="\u0000";
> echo(t,u); //ECHO: ""," "
> if (t==u)
>   echo("t==u"); // no
> if (u==u2)
>   echo("u==u2"); // yes
> text(u);  // blank
>
> You should read the 'invalid characters' part in the Wikipedia article.
> There a a number of Unicode chars in the range 0x7F-0xFF that are invalid.
> It is just luck that they seem to work.
>
>
>
> -----
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; To the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work. This work is
> published globally via the internet. :) Inclusion of works of previous
> authors is not included in the above.
>
> The TPP is no simple ?trade agreement.?   Fight it!
> http://www.ourfairdeal.org/
> --
> View this message in context:
> http://forum.openscad.org/How-to-detect-chr-0-tp12351p12411.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150417/6d5c3d8d/attachment.html>

From oz.at.michael at gmail.com  Fri Apr 17 23:07:17 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 17 Apr 2015 20:07:17 -0700 (MST)
Subject: [OpenSCAD] Editor issue: file opening unfold folded codes in
 all open files
In-Reply-To: <1429321145087-12412.post@n5.nabble.com>
References: <1429321145087-12412.post@n5.nabble.com>
Message-ID: <1429326437772-12414.post@n5.nabble.com>

Fold all the files and/or fold all the foldable bits in the current file
and/or fold all the top level foldable bits in the current file. I'd suggest
the later.



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Editor-issue-file-opening-unfold-folded-codes-in-all-open-files-tp12412p12414.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From paul at brownsbrain.com  Fri Apr 17 23:26:18 2015
From: paul at brownsbrain.com (Fantome)
Date: Fri, 17 Apr 2015 20:26:18 -0700 (MST)
Subject: [OpenSCAD] How to detect chr(0)
In-Reply-To: <1429308749437-12411.post@n5.nabble.com>
References: <1428879975534-12351.post@n5.nabble.com>
	<1429229644752-12389.post@n5.nabble.com> <553055E3.6040107@gmx.de>
	<1429240827498-12396.post@n5.nabble.com>
	<CAGV6i+Ox=u-mawCXx6X_e_HdwUpDYLnzW9QVrz55zAQGOJ66cg@mail.gmail.com>
	<1429288156727-12405.post@n5.nabble.com>
	<1429307553380-12410.post@n5.nabble.com>
	<1429308749437-12411.post@n5.nabble.com>
Message-ID: <1429327578070-12415.post@n5.nabble.com>

MichaelAtOz wrote
> You should read the 'invalid characters' part in the Wikipedia article.
> There a a number of Unicode chars in the range 0x7F-0xFF that are invalid.
> It is just luck that they seem to work.

Hmm, I went to a better source, Unicode.org. I couldn't find anything
stating that any values are invalid but I did find this:
*Q: Are noncharacters invalid in Unicode strings and UTFs?

A: Absolutely not. Noncharacters do not cause a Unicode string to be
ill-formed in any UTF. This can be seen explicitly in the table above, where
every noncharacter code point has a well-formed representation in UTF-32, in
UTF-16, and in UTF-8. An implementation which converts noncharacter code
points between one UTF representation and another must preserve these values
correctly. The fact that they are called "noncharacters" and are not
intended for open interchange does not mean that they are somehow illegal or
invalid code points which make strings containing them invalid.
*
Maybe there is some confusion with what I am doing. I'm not looking to print
anything out as in text. I am only interested in the 8bit values. Wether
it's Unicode, ASCII or whatever doesn't really matter because 8 bits will
always be 8 bits, even if they are taken from a 32 bit value. 

I looked at the chart on Unicode.org for the values from 0x80 to 0xFF and
didn't see anything unexpected. I'll post my code this weekend. It seems
that I always have a hard time explaining my thoughts and methods. (This is
on me, nobody else.) Perhaps seeing the code will make it clear. 

In any case, my original question has been answered and I now have a way to
use chr() to represent 0x00. Thanks for that.




--
View this message in context: http://forum.openscad.org/How-to-detect-chr-0-tp12351p12415.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Sat Apr 18 07:46:04 2015
From: nop.head at gmail.com (nop head)
Date: Sat, 18 Apr 2015 12:46:04 +0100
Subject: [OpenSCAD] How to detect chr(0)
In-Reply-To: <1429327578070-12415.post@n5.nabble.com>
References: <1428879975534-12351.post@n5.nabble.com>
	<1429229644752-12389.post@n5.nabble.com> <553055E3.6040107@gmx.de>
	<1429240827498-12396.post@n5.nabble.com>
	<CAGV6i+Ox=u-mawCXx6X_e_HdwUpDYLnzW9QVrz55zAQGOJ66cg@mail.gmail.com>
	<1429288156727-12405.post@n5.nabble.com>
	<1429307553380-12410.post@n5.nabble.com>
	<1429308749437-12411.post@n5.nabble.com>
	<1429327578070-12415.post@n5.nabble.com>
Message-ID: <CAEEmnrP0wD5+5vgN3krU-hVLP-T0NVNqDEgXur5YgdJwvfmzVQ@mail.gmail.com>

If you just want a string of numbers, why not just use a vector? It won't
be 8 bits, it will be integers stored as floats, but as you can see
characters aren't really 8 bits either.

The only difference I can see would be if you do maths on the values but if
do it all modulo 256 with the % operator and floor divisions, etc, you
should be able to emulate 8 bits.

On 18 April 2015 at 04:26, Fantome <paul at brownsbrain.com> wrote:

> MichaelAtOz wrote
> > You should read the 'invalid characters' part in the Wikipedia article.
> > There a a number of Unicode chars in the range 0x7F-0xFF that are
> invalid.
> > It is just luck that they seem to work.
>
> Hmm, I went to a better source, Unicode.org. I couldn't find anything
> stating that any values are invalid but I did find this:
> *Q: Are noncharacters invalid in Unicode strings and UTFs?
>
> A: Absolutely not. Noncharacters do not cause a Unicode string to be
> ill-formed in any UTF. This can be seen explicitly in the table above,
> where
> every noncharacter code point has a well-formed representation in UTF-32,
> in
> UTF-16, and in UTF-8. An implementation which converts noncharacter code
> points between one UTF representation and another must preserve these
> values
> correctly. The fact that they are called "noncharacters" and are not
> intended for open interchange does not mean that they are somehow illegal
> or
> invalid code points which make strings containing them invalid.
> *
> Maybe there is some confusion with what I am doing. I'm not looking to
> print
> anything out as in text. I am only interested in the 8bit values. Wether
> it's Unicode, ASCII or whatever doesn't really matter because 8 bits will
> always be 8 bits, even if they are taken from a 32 bit value.
>
> I looked at the chart on Unicode.org for the values from 0x80 to 0xFF and
> didn't see anything unexpected. I'll post my code this weekend. It seems
> that I always have a hard time explaining my thoughts and methods. (This is
> on me, nobody else.) Perhaps seeing the code will make it clear.
>
> In any case, my original question has been answered and I now have a way to
> use chr() to represent 0x00. Thanks for that.
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/How-to-detect-chr-0-tp12351p12415.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150418/8aedb18d/attachment-0001.html>

From paul at brownsbrain.com  Sat Apr 18 13:14:13 2015
From: paul at brownsbrain.com (Fantome)
Date: Sat, 18 Apr 2015 10:14:13 -0700 (MST)
Subject: [OpenSCAD] How to detect chr(0)
In-Reply-To: <CAEEmnrP0wD5+5vgN3krU-hVLP-T0NVNqDEgXur5YgdJwvfmzVQ@mail.gmail.com>
References: <1428879975534-12351.post@n5.nabble.com>
	<1429229644752-12389.post@n5.nabble.com> <553055E3.6040107@gmx.de>
	<1429240827498-12396.post@n5.nabble.com>
	<CAGV6i+Ox=u-mawCXx6X_e_HdwUpDYLnzW9QVrz55zAQGOJ66cg@mail.gmail.com>
	<1429288156727-12405.post@n5.nabble.com>
	<1429307553380-12410.post@n5.nabble.com>
	<1429308749437-12411.post@n5.nabble.com>
	<1429327578070-12415.post@n5.nabble.com>
	<CAEEmnrP0wD5+5vgN3krU-hVLP-T0NVNqDEgXur5YgdJwvfmzVQ@mail.gmail.com>
Message-ID: <1429377253282-12417.post@n5.nabble.com>

nophead wrote
> If you just want a string of numbers, why not just use a vector? It won't
> be 8 bits, it will be integers stored as floats, but as you can see
> characters aren't really 8 bits either.
> 
> The only difference I can see would be if you do maths on the values but
> if
> do it all modulo 256 with the % operator and floor divisions, etc, you
> should be able to emulate 8 bits.

Yup I could most likely do it with the % operator. I'm still new to openSCAd
so I just chose a way and decided to stick with it until either it worked or
I decided it couldn't be done. 

I put my code up on thingiverse (http://www.thingiverse.com/thing:779394)
because the end result of it is meant to be a 3D printed object. Anybody
interested in what I did should take a look.

I will look into the modulo 256 stuff next. Maybe I'll redo it all and end
up with a much shorter listing. 

thanks again...



--
View this message in context: http://forum.openscad.org/How-to-detect-chr-0-tp12351p12417.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Sat Apr 18 13:55:41 2015
From: nop.head at gmail.com (nop head)
Date: Sat, 18 Apr 2015 18:55:41 +0100
Subject: [OpenSCAD] How to detect chr(0)
In-Reply-To: <1429377253282-12417.post@n5.nabble.com>
References: <1428879975534-12351.post@n5.nabble.com>
	<1429229644752-12389.post@n5.nabble.com> <553055E3.6040107@gmx.de>
	<1429240827498-12396.post@n5.nabble.com>
	<CAGV6i+Ox=u-mawCXx6X_e_HdwUpDYLnzW9QVrz55zAQGOJ66cg@mail.gmail.com>
	<1429288156727-12405.post@n5.nabble.com>
	<1429307553380-12410.post@n5.nabble.com>
	<1429308749437-12411.post@n5.nabble.com>
	<1429327578070-12415.post@n5.nabble.com>
	<CAEEmnrP0wD5+5vgN3krU-hVLP-T0NVNqDEgXur5YgdJwvfmzVQ@mail.gmail.com>
	<1429377253282-12417.post@n5.nabble.com>
Message-ID: <CAEEmnrPi=2AMet6-jpbFodL82MnnVhT53gAzX+C7OgAW4B2ayQ@mail.gmail.com>

I see now that your input is a string and you basically want to convert it
to binary. Yes it can be done with much less code. Here is a simple example:

function testbit(n, x) = (floor(x / pow(2,n)) % 2) == 1;

function binary(x, n = 7) = n >= 0 ? str((testbit(n, x) ? "1" : "0"),
binary(x, n - 1)) : "";

function asc(c, n = 0) = c == chr(n) ? n : asc(c, n + 1);

text = "ABCD";

for(i = [0 : len(text)-1])
  echo(text[i], binary(asc(text[i])));


ECHO: "A", "01000001"

ECHO: "B", "01000010"

ECHO: "C", "01000011"

ECHO: "D", "01000100"


Not very speed efficient as OpenScad seems to lack asc();


On 18 April 2015 at 18:14, Fantome <paul at brownsbrain.com> wrote:

> nophead wrote
> > If you just want a string of numbers, why not just use a vector? It won't
> > be 8 bits, it will be integers stored as floats, but as you can see
> > characters aren't really 8 bits either.
> >
> > The only difference I can see would be if you do maths on the values but
> > if
> > do it all modulo 256 with the % operator and floor divisions, etc, you
> > should be able to emulate 8 bits.
>
> Yup I could most likely do it with the % operator. I'm still new to
> openSCAd
> so I just chose a way and decided to stick with it until either it worked
> or
> I decided it couldn't be done.
>
> I put my code up on thingiverse (http://www.thingiverse.com/thing:779394)
> because the end result of it is meant to be a 3D printed object. Anybody
> interested in what I did should take a look.
>
> I will look into the modulo 256 stuff next. Maybe I'll redo it all and end
> up with a much shorter listing.
>
> thanks again...
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/How-to-detect-chr-0-tp12351p12417.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150418/292bc2ff/attachment.html>

From andrew at plumb.org  Sat Apr 18 17:52:18 2015
From: andrew at plumb.org (Andrew Plumb)
Date: Sat, 18 Apr 2015 17:52:18 -0400
Subject: [OpenSCAD] How to detect chr(0)
In-Reply-To: <CAEEmnrPi=2AMet6-jpbFodL82MnnVhT53gAzX+C7OgAW4B2ayQ@mail.gmail.com>
References: <1428879975534-12351.post@n5.nabble.com>
	<1429229644752-12389.post@n5.nabble.com> <553055E3.6040107@gmx.de>
	<1429240827498-12396.post@n5.nabble.com>
	<CAGV6i+Ox=u-mawCXx6X_e_HdwUpDYLnzW9QVrz55zAQGOJ66cg@mail.gmail.com>
	<1429288156727-12405.post@n5.nabble.com>
	<1429307553380-12410.post@n5.nabble.com>
	<1429308749437-12411.post@n5.nabble.com>
	<1429327578070-12415.post@n5.nabble.com>
	<CAEEmnrP0wD5+5vgN3krU-hVLP-T0NVNqDEgXur5YgdJwvfmzVQ@mail.gmail.com>
	<1429377253282-12417.post@n5.nabble.com>
	<CAEEmnrPi=2AMet6-jpbFodL82MnnVhT53gAzX+C7OgAW4B2ayQ@mail.gmail.com>
Message-ID: <1F7DCF94-0EE9-4BA0-A4C1-9E6DD9DA131B@plumb.org>

Here?s an alternate asc() function which trades off ?infinite? recursion range for a faster let/search approach on a (overridable) static array:

function asc(ch,chrint=[for(i=[0:255]) [chr(i),i]]) = let(match=chrint[ search([ch],chrint,1)[0] ] )
    (len(match)==2)?match[1]:undef;


> On Apr 18, 2015, at 1:55 PM, nop head <nop.head at gmail.com> wrote:
> 
> I see now that your input is a string and you basically want to convert it to binary. Yes it can be done with much less code. Here is a simple example:
> 
> function testbit(n, x) = (floor(x / pow(2,n)) % 2) == 1;
> 
> function binary(x, n = 7) = n >= 0 ? str((testbit(n, x) ? "1" : "0"), binary(x, n - 1)) : "";
> 
> function asc(c, n = 0) = c == chr(n) ? n : asc(c, n + 1);
> 
> text = "ABCD";
> 
> for(i = [0 : len(text)-1])
>   echo(text[i], binary(asc(text[i])));
> 
> 
> ECHO: "A", "01000001"
> ECHO: "B", "01000010"
> ECHO: "C", "01000011"
> ECHO: "D", "01000100"
> 
> Not very speed efficient as OpenScad seems to lack asc();
> 
> 
> On 18 April 2015 at 18:14, Fantome <paul at brownsbrain.com <mailto:paul at brownsbrain.com>> wrote:
> nophead wrote
> > If you just want a string of numbers, why not just use a vector? It won't
> > be 8 bits, it will be integers stored as floats, but as you can see
> > characters aren't really 8 bits either.
> >
> > The only difference I can see would be if you do maths on the values but
> > if
> > do it all modulo 256 with the % operator and floor divisions, etc, you
> > should be able to emulate 8 bits.
> 
> Yup I could most likely do it with the % operator. I'm still new to openSCAd
> so I just chose a way and decided to stick with it until either it worked or
> I decided it couldn't be done.
> 
> I put my code up on thingiverse (http://www.thingiverse.com/thing:779394 <http://www.thingiverse.com/thing:779394>)
> because the end result of it is meant to be a 3D printed object. Anybody
> interested in what I did should take a look.
> 
> I will look into the modulo 256 stuff next. Maybe I'll redo it all and end
> up with a much shorter listing.
> 
> thanks again...
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/How-to-detect-chr-0-tp12351p12417.html <http://forum.openscad.org/How-to-detect-chr-0-tp12351p12417.html>
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org <http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org>
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150418/e2808be5/attachment.html>

From paul at brownsbrain.com  Sat Apr 18 18:58:53 2015
From: paul at brownsbrain.com (Fantome)
Date: Sat, 18 Apr 2015 15:58:53 -0700 (MST)
Subject: [OpenSCAD] How to detect chr(0)
In-Reply-To: <CAEEmnrPi=2AMet6-jpbFodL82MnnVhT53gAzX+C7OgAW4B2ayQ@mail.gmail.com>
References: <553055E3.6040107@gmx.de> <1429240827498-12396.post@n5.nabble.com>
	<CAGV6i+Ox=u-mawCXx6X_e_HdwUpDYLnzW9QVrz55zAQGOJ66cg@mail.gmail.com>
	<1429288156727-12405.post@n5.nabble.com>
	<1429307553380-12410.post@n5.nabble.com>
	<1429308749437-12411.post@n5.nabble.com>
	<1429327578070-12415.post@n5.nabble.com>
	<CAEEmnrP0wD5+5vgN3krU-hVLP-T0NVNqDEgXur5YgdJwvfmzVQ@mail.gmail.com>
	<1429377253282-12417.post@n5.nabble.com>
	<CAEEmnrPi=2AMet6-jpbFodL82MnnVhT53gAzX+C7OgAW4B2ayQ@mail.gmail.com>
Message-ID: <1429397933910-12420.post@n5.nabble.com>

Wow, I can see how that can reduce the number of lines of code. I will most
likely update my code. Thanks for the tips and example.


nophead wrote
> I see now that your input is a string and you basically want to convert it
> to binary. Yes it can be done with much less code. Here is a simple
> example:
> 
> function testbit(n, x) = (floor(x / pow(2,n)) % 2) == 1;
> 
> function binary(x, n = 7) = n >= 0 ? str((testbit(n, x) ? "1" : "0"),
> binary(x, n - 1)) : "";
> 
> function asc(c, n = 0) = c == chr(n) ? n : asc(c, n + 1);
> 
> text = "ABCD";
> 
> for(i = [0 : len(text)-1])
>   echo(text[i], binary(asc(text[i])));
> 
> 
> ECHO: "A", "01000001"
> 
> ECHO: "B", "01000010"
> 
> ECHO: "C", "01000011"
> 
> ECHO: "D", "01000100"
> 
> 
> Not very speed efficient as OpenScad seems to lack asc();
> 
> 
> On 18 April 2015 at 18:14, Fantome &lt;

> paul@

> &gt; wrote:





--
View this message in context: http://forum.openscad.org/How-to-detect-chr-0-tp12351p12420.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Sat Apr 18 22:39:18 2015
From: runsun at gmail.com (runsun)
Date: Sat, 18 Apr 2015 19:39:18 -0700 (MST)
Subject: [OpenSCAD] Digging into search( )
Message-ID: <1429411158858-12421.post@n5.nabble.com>

Spent some time digging into the built-in  search()
<http://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language#Search>  
:  search( /*match_value* , string_or_vector [, num_returns_per_match [,
index_col_num ] ]/ )*Conclusion first:* complicated, buggy, unpredictable,
giving out unnecessary warnings. Take notes for 2 points on its design:1. 
match_value is set to:        1.1. Can be a single value or vector of
values.    1.2. Strings are treated as vectors-of-characters to iterate
over;    1.3. If match_value is a vector of strings, search will look for
exact string matches.    In practical, match_value can be: list, number,
string (treated as a collection of characters)2. The *return should be
either a list*, when:/ num_returns_per_match/ is unset or set to 1:     
search( "a","abcdabcd" )= [0]      search( "abc","abcdabcd" )= [0, 1, 2]   
*or a list of lists*, when:/ num_returns_per_match/ is set to anything other
than 1 :     search( "a","abcdabcd",0 )= [[0, 4]]     search(
"abc","abcdabcd",0 )= [[0, 4], [1, 5], [2, 6]]      data4= [["a", 1], ["b",
2], ["c", 3], ["a", 4], ["b", 5]]     search( "abc",data4,2 )= [[0, 3], [1,
4], [2]]Observations:A. Since a match_value is treated as a list of chars,
the following 2 should give same results:    search( "abc","abcdabcd" )= [0,
1, 2]    search( ["a","b","c"],"abcdabcd" ) want: [0, 1, 2] got: [[], [],
[]]B. The following searches give same return. Users have no way to know
what are matched:    search( "bc","abcdabcd" )= [1, 2]    search(
"xbc","abcdabcd" )= [1, 2]     search( "xbzjck","abcdabcd" )= [1, 2]C. Users
can't possibly predict the following return:    data9= [ ["cat", 1], ["b",
2], ["c", 3], ["dog", 4]                , ["a", 5], ["b", 6], ["c", 7],
["d", 8]                , ["e", 9], ["apple", 10], ["a", 11] ]     q= ["b",
"zzz", "a", "c", "apple", "dog"]    search( "cat",data9 ) want: [2,4] got:
[0, 4]        This also gives out a warning:  WARNING: search term not
found: "t"D. This is unpredictable, too:     a1=
[["ab",1],["bc",2],["cd",3]]      search( "ab", a1) want: [ ] got: [0, 1]E.
This gives correct answer, but showing two warnings:        WARNING: search
term not found: "p"     WARNING: search term not found: "q"     search(
"pq",a1 )= [ ]F. Inconsistent return when match not found:    search(
"e","abcdabcd" )= []     search( ["zzz"],data9 )= [[]]     Since [[]] is
treated as true, the following would be impossible:    search(...) ?
do_found : do_not_foundSo what I think so far are:1) It is very difficult to
understand how it works. 2) It is still buggy.3) Would make a lot of effort
for users to understand it, and a lot of effort trying to debug, if
possible.  My conclusion is that search() is still buggy and it would
probably not a good idea for it in the release yet. What I believe is that
it tries to accommodate too many usages in a single. For example,
/match_value/ could have been designed as just a value (one of number,
string or list), but not list of values. Since we have list comprehension,
it'd be extremely easy to achieve this:   [ for (m in match_values) search(
m, ...) ]This will take away a large chunk of complication inside the coding
of search().  




-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Digging-into-search-tp12421.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150418/3963a725/attachment-0001.html>

From oz.at.michael at gmail.com  Sat Apr 18 23:49:10 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 18 Apr 2015 20:49:10 -0700 (MST)
Subject: [OpenSCAD] Digging into search( )
In-Reply-To: <1429411158858-12421.post@n5.nabble.com>
References: <1429411158858-12421.post@n5.nabble.com>
Message-ID: <1429415350447-12422.post@n5.nabble.com>

runsun wrote
>     1.2. Strings are treated as vectors-of-characters to iterate over;
> </br>
>     1.3. If match_value is a vector of strings, search will look for exact
> string matches.
> </br>
> Observations:
> </br>
> </br>
> A. Since a match_value is treated as a list of chars, the following 2
> should give same results:
> <pre>
> <code>
>     search( "abc","abcdabcd" )= [0, 1, 2]
>     search( ["a","b","c"],"abcdabcd" ) want: [0, 1, 2] got: [[], [], []]

See 1.3 above. "a" <> "abcdabcd"

> 
> </code>
> </pre>
> B. The following searches give same return. Users have no way to know what
> are matched:
> <pre>
> <code>
>     search( "bc","abcdabcd" )= [1, 2]
>     search( "xbc","abcdabcd" )= [1, 2] 
>     search( "xbzjck","abcdabcd" )= [1, 2]
> </code>
> </pre>

See 1.2 above, b is at pos 1, c is at pos 2. 
wiki: By default, search only looks for one match per element of match_value
to return as a list of indices

> C. Users can't possibly predict the following return:
> <pre>
> <code>
>     data9= [ ["cat", 1], ["b", 2], ["c", 3], ["dog", 4]
>                 , ["a", 5], ["b", 6], ["c", 7], ["d", 8]
>                 , ["e", 9], ["apple", 10], ["a", 11] ] 
>     q= ["b", "zzz", "a", "c", "apple", "dog"]
> 
>     search( "cat",data9 ) want: [2,4] got: [0, 4]
> </code>
> </pre>
>     
>     This also gives out a warning:  WARNING: search term not found: "t"
> </br>
> </br>

1.2 again, c is at 0, a is at 4, t is not found.

> D. This is unpredictable, too:
> <pre>
> <code>
>      a1= [["ab",1],["bc",2],["cd",3]] 
> 
>      search( "ab", a1) want: [ ] got: [0, 1]
> </code>
> </pre>

1.2 again, a is at 0,b is at 1.

Wiki:
If num_returns_per_match = 0, search returns a list of lists of all matching
index values for each element of match_value.

index_col_num (default: 0): When string_or_vector is a vector-of-vectors,
multidimensional table or more complex list-of-lists construct, the
match_value may not be found in the first (index_col_num=0) column.

So as index_col_num=0 & num_returns_per_match=0, it looks for "a" and "b" in
the index_col_num (0) element of the vector a1. Hence [0, 1] is where it
found "a" & "b".

> E. This gives correct answer, but showing two warnings:   
> <pre>
> <code>
>      WARNING: search term not found: "p"
>      WARNING: search term not found: "q"
> 
>      search( "pq",a1 )= [ ]
> </code>
> </pre>

So, that is what it does.??

> F. Inconsistent return when match not found:
> <pre>
> <code>
>     search( "e","abcdabcd" )= [] 
>     search( ["zzz"],data9 )= want: [] got: [[]] 
> </code>
> </pre>
>     Since [[]] is treated as true, the following would be impossible:
> <pre>
> <code>
>     search(...) ? do_found : do_not_found
> </code>
> </pre>

Wiki:
If num_returns_per_match = 0, search returns a list of lists of all matching
index values for each element of match_value.

It returna a list, the outside [ ... ], of lists of all matching values, no
match=[], hence [ [] ].

> So what I think so far are:
> </br>
> 1) It is very difficult to understand how it works. 
> </br>

Yes.

> 2) It is still buggy.
> </br>

No.

> 3) Would make a lot of effort for users to understand it, and a lot of
> effort trying to debug, if possible.  
> </br>

Yes & No (no need to debug)

> My conclusion is that search() is still buggy and it would probably not a
> good idea for it in the release yet. 
> </br>

It has been released for a looong time. I suspect you may be reacting to the
change to remove the Warnings??

> What I believe is that it tries to accommodate too many usages in a single
> function. For example, 
/
> match_value
/
>  could have been designed as just a value (one of number, string or list),
> but not list of values. Since we have list comprehension, it'd be
> extremely easy to achieve this:
> <pre>
> <code>
>    [ for (m in match_values) search( m, ...) ]
> </code>
> </pre>
> This will take away a large chunk of complication inside the coding of
> search().





-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Digging-into-search-tp12421p12422.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrew at plumb.org  Sun Apr 19 00:47:55 2015
From: andrew at plumb.org (Andrew Plumb)
Date: Sun, 19 Apr 2015 00:47:55 -0400
Subject: [OpenSCAD] Digging into search( )
In-Reply-To: <1429411158858-12421.post@n5.nabble.com>
References: <1429411158858-12421.post@n5.nabble.com>
Message-ID: <1B869938-A4DE-4359-89F4-7747FE37C17F@plumb.org>

Hi Runsun,

Let me lead by saying thank you for taking the time to collect and share your thoughts and observations. It is very much appreciated!

A few comments/history behind my original writing of search():

When I wrote it (in 2012):

	1. The ?undef? didn?t exist as a return option so I settled on returning empty lists which could be detected (list of length 0) as ?no match? conditions - it predated the Value rewrite of the code-base.

	2. The ?concat? list construction operator didn?t exist; I needed a way to search for a string-of-characters (aka. an ordered list of character values) and get the results back in order, as a list.

	3. The ?let? operator didn?t exist.

	4. Lists were statically defined; [ for() ? ] dynamically generated lists weren?t possible.

	5. Function recursion was (and still is to some degree) dog-slow for more ?elegant? list construction approaches.

	6. The text() module didn?t exist.
		- See example023.scad combined with MCAD/fonts.scad for insight into how I was generating text, and the original motivation behind coding up search().

	7. The no-match warnings are gone as of last week; you?ll have to build from source to see that.

It?s not buggy, just written within the constraints of the time. ;-)

All that said, I agree that now would be a good time to simplify+rewrite!


Rough outline of hypothetical simplified behaviour I?ll start looking at implementing:

1. search( substring, string):
	- return list of substring match indices

Example 1:

	string1=?abcdabcabcdd?;
	search(?abc?,string1);
		[0,4,7]
	search(?efg?,string1);
		undef

2. search( fullstring, vector_of_strings):
	- return list of indices (set of ?i? values) where fullstring == vector_of_strings[i]
	- do not attempt substring matches since [ for() ?] list traversal and construction works

Example 2:

	list2=[?caterpillar?,3,?cat?,2,?dog?,2,?cattle?,5,?cod?,42];
	search(?cat?, list2);
		[2]
	search(2,list2);
		[3,5]
	search(?bird?,list2);
		undef

3. search( match_value, vector_of_vectors [, index_col_num] ):
	- return list of indices (set of ?i? values) where match_value == vector[i][index_col_num]
	- this simplification should make it even more powerful+useful for hash-style table lookup operations

Example 3:

	table3 =[ [?caterpillar?,3],[?cat?,2],[?dog?,2],[?cattle?,5],[?cod?,42]];
	search(?cat?, table3);
		[1]
	search(2,table3,1);
		[1,2]
	search(?bird",table3);
		undef

4. search( match_vector, string_or_vector [, index_col_num]):
	- deprecate confusing legacy behaviour

Example 4:

	search([?abc?],string1);
		undef // Throw WARNING about deprecated usage; use new list comprehension capabilities.
	search([?cat?],list2);
		undef // Throw WARNING about deprecated usage; use new list comprehension capabilities.
	search([?cat?],table3);
		undef // Throw WARNING about deprecated usage; use new list comprehension capabilities.


Just to re-iterate, thank you for taking the time to collect and share your thoughts and observations. Please *do* continue this!

This is very much in the spirit of keeping OpenSCAD compact, more synthesizable HDL-like than bloating into a poor substitute for a scripting language like Python.

Gotta pick your battles. :-)

Andrew.

> On Apr 18, 2015, at 10:39 PM, runsun <runsun at gmail.com> wrote:
> 
> 
> Spent some time digging into the built-in search() <http://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language#Search> :
> 
>   search( match_value , string_or_vector [, num_returns_per_match [, index_col_num ] ] )
> 
> Conclusion first: complicated, buggy, unpredictable, giving out unnecessary warnings. 
> 
> 
> Take notes for 2 points on its design:
> 
> 1.  match_value is set to:
>     
>     1.1. Can be a single value or vector of values.
>     1.2. Strings are treated as vectors-of-characters to iterate over;
>     1.3. If match_value is a vector of strings, search will look for exact string matches.
> 
>     In practical, match_value can be: list, number, string (treated as a collection of characters)
> 
> 2. The return should be either a list, when: num_returns_per_match is unset or set to 1:
> 
>       search( "a","abcdabcd" )= [0]
>       search( "abc","abcdabcd" )= [0, 1, 2]
> 
>     or a list of lists, when: num_returns_per_match is set to anything other than 1 :
> 
>      search( "a","abcdabcd",0 )= [[0, 4]]
>      search( "abc","abcdabcd",0 )= [[0, 4], [1, 5], [2, 6]] 
> 
>      data4= [["a", 1], ["b", 2], ["c", 3], ["a", 4], ["b", 5]]
>      search( "abc",data4,2 )= [[0, 3], [1, 4], [2]]
> 
> 
> 
> Observations:
> 
> A. Since a match_value is treated as a list of chars, the following 2 should give same results:
> 
>     search( "abc","abcdabcd" )= [0, 1, 2]
>     search( ["a","b","c"],"abcdabcd" ) want: [0, 1, 2] got: [[], [], []]
> 
> B. The following searches give same return. Users have no way to know what are matched:
> 
>     search( "bc","abcdabcd" )= [1, 2]
>     search( "xbc","abcdabcd" )= [1, 2] 
>     search( "xbzjck","abcdabcd" )= [1, 2]
> 
> C. Users can't possibly predict the following return:
> 
>     data9= [ ["cat", 1], ["b", 2], ["c", 3], ["dog", 4]
>                 , ["a", 5], ["b", 6], ["c", 7], ["d", 8]
>                 , ["e", 9], ["apple", 10], ["a", 11] ] 
>     q= ["b", "zzz", "a", "c", "apple", "dog"]
> 
>     search( "cat",data9 ) want: [2,4] got: [0, 4]
>     
>     This also gives out a warning:  WARNING: search term not found: "t"
> 
> D. This is unpredictable, too:
> 
>      a1= [["ab",1],["bc",2],["cd",3]] 
> 
>      search( "ab", a1) want: [ ] got: [0, 1]
> 
> E. This gives correct answer, but showing two warnings:
>    
>      WARNING: search term not found: "p"
>      WARNING: search term not found: "q"
> 
>      search( "pq",a1 )= [ ]
> 
> F. Inconsistent return when match not found:
> 
>     search( "e","abcdabcd" )= [] 
>     search( ["zzz"],data9 )= [[]] 
> 
>     Since [[]] is treated as true, the following would be impossible:
> 
>     search(...) ? do_found : do_not_found
> 
> 
> So what I think so far are:
> 
> 1) It is very difficult to understand how it works. 
> 2) It is still buggy.
> 3) Would make a lot of effort for users to understand it, and a lot of effort trying to debug, if possible.  
> 
> My conclusion is that search() is still buggy and it would probably not a good idea for it in the release yet. 
> 
> What I believe is that it tries to accommodate too many usages in a single. For example, match_value could have been designed as just a value (one of number, string or list), but not list of values. Since we have list comprehension, it'd be extremely easy to achieve this:
> 
>    [ for (m in match_values) search( m, ...) ]
> 
> This will take away a large chunk of complication inside the coding of search().  
> 
> 
> $ <http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1> Runsun Pan, PhD 
> $ -- OpenScad_DocTest: doc and unit test ( Github <https://github.com/runsun/openscad_doctest>, Thingiverse <https://www.thingiverse.com/thing:410831> )
> $ -- hash parameter model: here <http://forum.openscad.org/parameterized-models-td8303.html#a8306>, here <http://forum.openscad.org/Can-I-get-some-code-review-up-in-here-tp12341p12355.html>
> $ -- Linux Mint 17.1 Rebecca x64 + OpenSCAD 2015.03.15/2015.04.01.nightly
> 
> View this message in context: Digging into search( ) <http://forum.openscad.org/Digging-into-search-tp12421.html>
> Sent from the OpenSCAD mailing list archive <http://forum.openscad.org/> at Nabble.com.
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150419/23e9c7e7/attachment-0001.html>

From tasoulis45 at hotmail.com  Sun Apr 19 10:46:07 2015
From: tasoulis45 at hotmail.com (tasos)
Date: Sun, 19 Apr 2015 07:46:07 -0700 (MST)
Subject: [OpenSCAD] Calulate REal Dimensions
Message-ID: <1429454767589-12424.post@n5.nabble.com>

Hello, i want to ask in what unit the program calulates the dimensions of an
object . 
example :
cube({10,10,10])
Is this means that cube 10mm by 10 mm by10mm,or by anthor unit like cm ?




--
View this message in context: http://forum.openscad.org/Calulate-REal-Dimensions-tp12424.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrew at plumb.org  Sun Apr 19 11:02:09 2015
From: andrew at plumb.org (Andrew Plumb)
Date: Sun, 19 Apr 2015 11:02:09 -0400
Subject: [OpenSCAD] Calulate REal Dimensions
In-Reply-To: <1429454767589-12424.post@n5.nabble.com>
References: <1429454767589-12424.post@n5.nabble.com>
Message-ID: <15CCC630-38A3-4154-B89D-66F19999D080@plumb.org>

OpenSCAD (and the STL file format) are dimension-less, so ?10? means whatever you want it to mean.

That?s why you need to specify your units when you upload models to services like Shapeways.

> On Apr 19, 2015, at 10:46 AM, tasos <tasoulis45 at hotmail.com> wrote:
> 
> Hello, i want to ask in what unit the program calulates the dimensions of an
> object . 
> example :
> cube({10,10,10])
> Is this means that cube 10mm by 10 mm by10mm,or by anthor unit like cm ?
> 
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/Calulate-REal-Dimensions-tp12424.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From ivo.knutsel at gmail.com  Sun Apr 19 11:04:37 2015
From: ivo.knutsel at gmail.com (Ivo)
Date: Sun, 19 Apr 2015 08:04:37 -0700 (MST)
Subject: [OpenSCAD] Calulate REal Dimensions
In-Reply-To: <1429454767589-12424.post@n5.nabble.com>
References: <1429454767589-12424.post@n5.nabble.com>
Message-ID: <1429455877579-12426.post@n5.nabble.com>

OpenSCAD does not need to work with a specific unit of distance, you can make
that decision for yourself. 

When importing an STL created with OpenSCAD, the importing program will
typically ask how to interpret the units in the file, as cm or mm for
instance. 



--
View this message in context: http://forum.openscad.org/Calulate-REal-Dimensions-tp12424p12426.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From ivo.knutsel at gmail.com  Sun Apr 19 11:07:47 2015
From: ivo.knutsel at gmail.com (Ivo)
Date: Sun, 19 Apr 2015 08:07:47 -0700 (MST)
Subject: [OpenSCAD] Why are recursive definitions slow ?
Message-ID: <1429456067228-12427.post@n5.nabble.com>

I have the same object defined by recursive and by iteration. De iterative
definition is much faster on rendering.

Can someone provide some insight why this is ?

==== example ====

num=20;

module ring(){
  rotate_extrude() translate([10,0,0]) circle(r=2);    
}

module ring_r(count,maxcount,angle) {
  if (count<=maxcount) {
    ring();
    if ((count%4)==0)  
      rotate([0,0,angle]) translate([14,0,0]) rotate([90,0,0]) 
        ring_r(count+1,maxcount,angle);
    if ((count%4)==1)  
      rotate([0,angle,0]) translate([14,0,0]) rotate([90,0,0]) 
        ring_r(count+1,maxcount,angle);
    if ((count%4)==2)  
      rotate([0,0,-angle]) translate([14,0,0]) rotate([90,0,0]) 
        ring_r(count+1,maxcount,angle);
    if ((count%4)==3)  
      rotate([0,-angle,0]) translate([14,0,0]) rotate([90,0,0]) 
        ring_r(count+1,maxcount,angle);
  }
}

module iterative() {
for (i=[0:num-1])
  rotate([0,0,i*360/num])
    translate([40,0,0])
      rotate([0,i*90,0])
        scale([0.7,1,1])
          ring();
}

module nested() {

}

module recursive() {
  ring_r(0,19,18);
}

//iterative();
recursive(); 



--
View this message in context: http://forum.openscad.org/Why-are-recursive-definitions-slow-tp12427.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From ivo.knutsel at gmail.com  Sun Apr 19 11:11:27 2015
From: ivo.knutsel at gmail.com (Ivo)
Date: Sun, 19 Apr 2015 08:11:27 -0700 (MST)
Subject: [OpenSCAD] WARNING: Ignoring request to enable unknown feature
	'lazy-union'.
Message-ID: <1429456287055-12428.post@n5.nabble.com>

Is there a Windows build that does lazy-union ?



--
View this message in context: http://forum.openscad.org/WARNING-Ignoring-request-to-enable-unknown-feature-lazy-union-tp12428.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From stempeldergeschichte at googlemail.com  Sun Apr 19 11:23:49 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Sun, 19 Apr 2015 17:23:49 +0200
Subject: [OpenSCAD] Calulate REal Dimensions
In-Reply-To: <1429455877579-12426.post@n5.nabble.com>
References: <1429454767589-12424.post@n5.nabble.com>
	<1429455877579-12426.post@n5.nabble.com>
Message-ID: <CAJgOqADRxeNVBfLqaVMXnVx4h2oJRhy-SPbOGX1Git3LBaLMtQ@mail.gmail.com>

Presently, most people interpret one unit of OpenSCAD to 1mm.

2015-04-19 17:04 GMT+02:00 Ivo <ivo.knutsel at gmail.com>:

> OpenSCAD does not need to work with a specific unit of distance, you can
> make
> that decision for yourself.
>
> When importing an STL created with OpenSCAD, the importing program will
> typically ask how to interpret the units in the file, as cm or mm for
> instance.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Calulate-REal-Dimensions-tp12424p12426.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>



-- 
stempeldergeschichte at googlemail.com <karsten at rohrbach.de>

P.S. Falls meine E-Mail k?rzer ausf?llt als Dir angenehm ist:
Ich probiere gerade aus kurze Antworten statt gar keine Antworten zu
schreiben.
Wenn Du gerne mehr lesen m?chtest, dann lass es mich bitte wissen.

P.S. In case my e-mail is shorter than you enjoy:
I am currently trying short replies instead of no replies at all.
Please let me know, if you like to read more.

Enjoy!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150419/d83f608f/attachment.html>

From marius at kintel.net  Sun Apr 19 12:15:15 2015
From: marius at kintel.net (Marius Kintel)
Date: Sun, 19 Apr 2015 12:15:15 -0400
Subject: [OpenSCAD] WARNING: Ignoring request to enable unknown feature
	'lazy-union'.
In-Reply-To: <1429456287055-12428.post@n5.nabble.com>
References: <1429456287055-12428.post@n5.nabble.com>
Message-ID: <E1F3F539-1AC7-4555-9309-EBE1AA9DD998@kintel.net>

On Apr 19, 2015, at 11:11 AM, Ivo <ivo.knutsel at gmail.com> wrote:

> Is there a Windows build that does lazy-union ?
> 
Not currently - you need to build from source using the issue350 branch.

Once we merge this into master it will be part of snapshot builds - hopefully not too far into the future.

 -Marius



From denber at mindspring.com  Sun Apr 19 14:49:41 2015
From: denber at mindspring.com (Michele)
Date: Sun, 19 Apr 2015 11:49:41 -0700 (MST)
Subject: [OpenSCAD] Compiling for 64 bit Sparc Solaris 10
In-Reply-To: <1425575904989-11896.post@n5.nabble.com>
References: <1419662012354-10741.post@n5.nabble.com>
	<CAPoio6f8NeC6VrBBmPuu_mrQJ9hph54hzMX39b3PEzN+UjY8Pg@mail.gmail.com>
	<1419703213176-10749.post@n5.nabble.com> <549EF8E0.60106@gmail.com>
	<1419711378635-10755.post@n5.nabble.com>
	<F9A0FC2D-B69D-4C62-89AE-A1301B16BF3D@kintel.net>
	<1419719973772-10761.post@n5.nabble.com>
	<1425538532468-11892.post@n5.nabble.com>
	<1425575904989-11896.post@n5.nabble.com>
Message-ID: <1429469381099-12431.post@n5.nabble.com>

I have now installed a bunch of Qt packages from Opencsw.  This was
apparently enough for Octave's installer (which also uses Qt) to find and
not complain about.  However, the Openscad check-dependencies script still
says it can't find Qt4.

Can someone please tell me *where* it's looking for Qt?  Or is there some
env variable I need to set to point to Qt?



--
View this message in context: http://forum.openscad.org/Compiling-for-64-bit-Sparc-Solaris-10-tp10741p12431.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Sun Apr 19 15:37:13 2015
From: runsun at gmail.com (runsun)
Date: Sun, 19 Apr 2015 12:37:13 -0700 (MST)
Subject: [OpenSCAD] Digging into search( )
In-Reply-To: <1429415350447-12422.post@n5.nabble.com>
References: <1429411158858-12421.post@n5.nabble.com>
	<1429415350447-12422.post@n5.nabble.com>
Message-ID: <1429472233446-12432.post@n5.nabble.com>

Hi Michael, thx for your quick reply. It reveals to me that, even after I
spent a lot of effort doing relatively extensive tests trying to understand
how to use search(), I still miss something:
   
   (1) search( "abc","abcdabcd" )= [0, 1, 2] 
   (2) search( ["a","b","c"],"abcdabcd" ) = [[], [], []]

   The 1st will match individual "a","b","c" to ANY CHARS in "abcdabcd"
   but the 2nd will match the entire "abcdabcd". 

That is, *given a whole string will match partial string, but given a list
of partial strings will match the whole string*. This already complicated
enough. 

I am pretty sure that it already pass the boundary of my limited brain
power. But that's not where the complication stops. 

   (3) search( ["a","bc","abcdabcd"],"abcdabcd" ) = want: [0] got: [[], [],
[]]

Didn't we say " If match_value is a vector of strings, search will look for
exact string matches" ???

Where is the exact string match of the 3rd item, "abcdabcd" ?

   (4) And another one:

      data9= [ ["cat", 1], ["b", 2], ["c", 3], ["dog", 4] 
                , ["a", 5], ["b", 6], ["c", 7], ["d", 8] 
                , ["e", 9], ["apple", 10], ["a", 11] ] 

      search( "act", data9, 0 ) 
      |   want:
      |   [[0, 4, 9, 10], [0, 2, 6], [0]]
      |   got:
      |   [[4, 9, 10], [0, 2, 6], []]
    
As we mentioned, "act" is treated as vector of chars, and iterate over. It 
means, "a" and "t"
should have found a match in ["cat",1], but they don't.  

   (5) Another example:

   search( "ab",[["ab",1],["bc",2],["cd",3]], 0 )
   |  want:
   |  [[0], [0, 1]]
   |  got:
   |  [[0], [1]]
   search( "bc",[["ab",1],["bc",2],["cd",3]], 0 )
   |  want:
   |  [[0, 1], [1, 2]]
   |  got:
   |  [[1], [2]]
 
It seems to me that, other than the already-complicated rule: "*given a
whole string will match partial string, but given a list of partial strings
will match the whole string*", in come cases it matches an item of a list of
strings to the *BEGINNING of a whole string*.  

Up to this point, I am too tired trying to figure out yet another rule. 

You mentioned : " I suspect you may be reacting to the change to remove the
Warnings?? "

Well, in fact, I haven't even started covering it yet. In the 2nd argument,
/string_or_vectors/, I only covered string and "list of lists", [ ["abc",1],
["def",2]...]. I haven't even covered my real concern : a flat list: [
"abc",1, "def",2... ], where my original "request of suppressing warning"
lies on. 

Besides, I am using a nightly version in which the warning that bothered me
in the first place has already been fixed. 



-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Digging-into-search-tp12421p12432.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Sun Apr 19 16:30:54 2015
From: nop.head at gmail.com (nop head)
Date: Sun, 19 Apr 2015 21:30:54 +0100
Subject: [OpenSCAD] Digging into search( )
In-Reply-To: <1429472233446-12432.post@n5.nabble.com>
References: <1429411158858-12421.post@n5.nabble.com>
	<1429415350447-12422.post@n5.nabble.com>
	<1429472233446-12432.post@n5.nabble.com>
Message-ID: <CAEEmnrO-X1Zfo8wyKrjXF6VQx_N0-ZFvWqh01_+Tzad_jULK-g@mail.gmail.com>

Yes, search is way too complicated for me to use as well. I just roll my
own with recursion if I need to search.

On 19 April 2015 at 20:37, runsun <runsun at gmail.com> wrote:

> Hi Michael, thx for your quick reply. It reveals to me that, even after I
> spent a lot of effort doing relatively extensive tests trying to understand
> how to use search(), I still miss something:
>
>    (1) search( "abc","abcdabcd" )= [0, 1, 2]
>    (2) search( ["a","b","c"],"abcdabcd" ) = [[], [], []]
>
>    The 1st will match individual "a","b","c" to ANY CHARS in "abcdabcd"
>    but the 2nd will match the entire "abcdabcd".
>
> That is, *given a whole string will match partial string, but given a list
> of partial strings will match the whole string*. This already complicated
> enough.
>
> I am pretty sure that it already pass the boundary of my limited brain
> power. But that's not where the complication stops.
>
>    (3) search( ["a","bc","abcdabcd"],"abcdabcd" ) = want: [0] got: [[], [],
> []]
>
> Didn't we say " If match_value is a vector of strings, search will look for
> exact string matches" ???
>
> Where is the exact string match of the 3rd item, "abcdabcd" ?
>
>    (4) And another one:
>
>       data9= [ ["cat", 1], ["b", 2], ["c", 3], ["dog", 4]
>                 , ["a", 5], ["b", 6], ["c", 7], ["d", 8]
>                 , ["e", 9], ["apple", 10], ["a", 11] ]
>
>       search( "act", data9, 0 )
>       |   want:
>       |   [[0, 4, 9, 10], [0, 2, 6], [0]]
>       |   got:
>       |   [[4, 9, 10], [0, 2, 6], []]
>
> As we mentioned, "act" is treated as vector of chars, and iterate over. It
> means, "a" and "t"
> should have found a match in ["cat",1], but they don't.
>
>    (5) Another example:
>
>    search( "ab",[["ab",1],["bc",2],["cd",3]], 0 )
>    |  want:
>    |  [[0], [0, 1]]
>    |  got:
>    |  [[0], [1]]
>    search( "bc",[["ab",1],["bc",2],["cd",3]], 0 )
>    |  want:
>    |  [[0, 1], [1, 2]]
>    |  got:
>    |  [[1], [2]]
>
> It seems to me that, other than the already-complicated rule: "*given a
> whole string will match partial string, but given a list of partial strings
> will match the whole string*", in come cases it matches an item of a list
> of
> strings to the *BEGINNING of a whole string*.
>
> Up to this point, I am too tired trying to figure out yet another rule.
>
> You mentioned : " I suspect you may be reacting to the change to remove the
> Warnings?? "
>
> Well, in fact, I haven't even started covering it yet. In the 2nd argument,
> /string_or_vectors/, I only covered string and "list of lists", [
> ["abc",1],
> ["def",2]...]. I haven't even covered my real concern : a flat list: [
> "abc",1, "def",2... ], where my original "request of suppressing warning"
> lies on.
>
> Besides, I am using a nightly version in which the warning that bothered me
> in the first place has already been fixed.
>
>
>
> -----
>
> $  Runsun Pan, PhD
>
> $ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  )
>
> $ -- hash parameter model: here , here
>
> $ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Digging-into-search-tp12421p12432.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150419/6cb50b77/attachment.html>

From oz.at.michael at gmail.com  Sun Apr 19 17:56:12 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sun, 19 Apr 2015 14:56:12 -0700 (MST)
Subject: [OpenSCAD] Calulate REal Dimensions
In-Reply-To: <CAJgOqADRxeNVBfLqaVMXnVx4h2oJRhy-SPbOGX1Git3LBaLMtQ@mail.gmail.com>
References: <1429454767589-12424.post@n5.nabble.com>
	<1429455877579-12426.post@n5.nabble.com>
	<CAJgOqADRxeNVBfLqaVMXnVx4h2oJRhy-SPbOGX1Git3LBaLMtQ@mail.gmail.com>
Message-ID: <1429480572791-12434.post@n5.nabble.com>

Except for some really backward peoples who use inch or thou (inch/1000) or
worse describe that as a mil (not to be confused with mill).

;]



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Calulate-REal-Dimensions-tp12424p12434.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Sun Apr 19 18:22:32 2015
From: runsun at gmail.com (runsun)
Date: Sun, 19 Apr 2015 15:22:32 -0700 (MST)
Subject: [OpenSCAD] Digging into search( )
In-Reply-To: <1B869938-A4DE-4359-89F4-7747FE37C17F@plumb.org>
References: <1429411158858-12421.post@n5.nabble.com>
	<1B869938-A4DE-4359-89F4-7747FE37C17F@plumb.org>
Message-ID: <1429482152875-12435.post@n5.nabble.com>

Hi Andrew, thx for your effort to make search() in the first place.

I forgot to mention that:

(1) my tests were done with the new nightly built, after the unnecessary
Wanring is supposed to be suppressed (but, as you can see in my examples
above, there are at least two more warnings) 

(2) Judging from all examples on the doc, I assume that the design of
search() aims at searching matches against a list of lists/vectors:

     [ ["abc",1],["def",2] ...]   #1

but not from a flat list:

     [ "abc",1, "def",2 ...]    #2
  
Therefore, my tests haven't covered #2 situation yet. But as you can see,
it's already complicated enough. 

I understand that it's not fair to judge its features based on the current
spirit of OpenSCAD, since the OpenSCAD has been upgraded a lot. It's good to
know that a change in the implementation is under considerations. 


clothbot wrote
> 1. search( substring, string):
> 	- return list of substring match indices
> 
> Example 1:
> 
> 	string1=?abcdabcabcdd?;
> 	search(?abc?,string1);
> 		[0,4,7]
> 	search(?efg?,string1);
> 		undef

What's the answer to : search( "ae", string1 ) ? will it be [0, undef] ? or
just [0] ?

If it's just [0] (means, the unmatched will just no-show), then, users won't
be able to tell what are actually matched ( [0] for "a" or for "e" ???)

Note that this, in fact, is doing list comprehension's job :

    abc = "abc";
    [ for( i=[0:len(abc)-1] ) search( abc[i], string1) ]

means that it is still redundant. I'd suggest to get rid of this feature
completely. Means, when match_value="abc", just search for "abc", but not
"a", "b", "c". 


clothbot wrote
> 2. search( fullstring, vector_of_strings):
> 	- return list of indices (set of ?i? values) where fullstring ==
> vector_of_strings[i]
> 	- do not attempt substring matches since [ for() ?] list traversal and
> construction works
> 
> Example 2:
> 
> 	list2=[?caterpillar?,3,?cat?,2,?dog?,2,?cattle?,5,?cod?,42];
> 	search(?cat?, list2);
> 		[2]
> 	search(2,list2);
> 		[3,5]
> 	search(?bird?,list2);
> 		undef

I see that list2 is a flat list. This is new to the original design. Will it
be treated the same way in ALL situations as a list of vectors ?


clothbot wrote
> 3. search( match_value, vector_of_vectors [, index_col_num] ):
> 	- return list of indices (set of ?i? values) where match_value ==
> vector[i][index_col_num]
> 	- this simplification should make it even more powerful+useful for
> hash-style table lookup operations
> 
> Example 3:
> 
> 	table3 =[ [?caterpillar?,3],[?cat?,2],[?dog?,2],[?cattle?,5],[?cod?,42]];
> 	search(?cat?, table3);
> 		[1]
> 	search(2,table3,1);
> 		[1,2]
> 	search(?bird",table3);
> 		undef

I believe the 2nd case should have read:  search(2,table3,1,1) 

Also note that this will create confusion with Example 1, since in Example
1, a string is treated as a collection of chars, but here it's treated as a
whole. It'd be extremely hard for users to remember that. 

Still, I'd strongly suggest that not to try to treat a string as iteratible.
Iterating though a string match_value creates lots of problems, it's hard
for users to understand in the firsts place, and it's hard to come up with a
clear answer (See Example 1 above). Thus users might as well roll up their
own. IMHO, that defeats the purpose of making it a built-in.

SIDE NOTE: Judging from the existence of *lookup* and *search* as built-ins,
I strongly believe that a hash-like data structure is needed:

>     >>> h={ abc:1, def:2 }
>     >>> h["abc"] 
>     1
>     >>> g = update(h, {ghi:3} )
>     >>> g
>     { abc:1, def:2, ghi:3 }
>     >>> keys( g )
>     ["abc","def","ghi"]
>     >>> values( g )
>     [1,2,3]
>     >>> kvs( g )
>     [ ["abc",1], ["def",2], ["ghi",3] ]

 



_______________________________________________
OpenSCAD mailing list
Discuss at .openscad
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org




-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Digging-into-search-tp12421p12435.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sun Apr 19 18:44:49 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 20 Apr 2015 00:44:49 +0200
Subject: [OpenSCAD] Compiling for 64 bit Sparc Solaris 10
In-Reply-To: <1429469381099-12431.post@n5.nabble.com>
References: <1419662012354-10741.post@n5.nabble.com>	<CAPoio6f8NeC6VrBBmPuu_mrQJ9hph54hzMX39b3PEzN+UjY8Pg@mail.gmail.com>	<1419703213176-10749.post@n5.nabble.com>
	<549EF8E0.60106@gmail.com>	<1419711378635-10755.post@n5.nabble.com>	<F9A0FC2D-B69D-4C62-89AE-A1301B16BF3D@kintel.net>	<1419719973772-10761.post@n5.nabble.com>	<1425538532468-11892.post@n5.nabble.com>	<1425575904989-11896.post@n5.nabble.com>
	<1429469381099-12431.post@n5.nabble.com>
Message-ID: <55342FE1.1060706@gmx.de>

Hi!

On 04/19/2015 08:49 PM, Michele wrote:
> I have now installed a bunch of Qt packages from Opencsw.  This was
> apparently enough for Octave's installer (which also uses Qt) to find and
> not complain about.  However, the Openscad check-dependencies script still
> says it can't find Qt4.
>
This is just a helper script, it's not a precondition for the build
to work. If Qt not installed in a known/default location, the script
will not find it, but the build still could work.

> Can someone please tell me *where* it's looking for Qt?  Or is there some
> env variable I need to set to point to Qt?
>
It should be enough to call the correctly installed (inside the matching
Qt version) qmake in the folder where the openscad.pro is stored, e.g.

cd /home/openscad                 <- the source code folder
/my/very/special/qt/bin/qmake	  <- just call correct qmake


I'm not sure if that's still working, but you can also try editing the
openscad.pro file to comment out the new editor (add the #):

#CONFIG += scintilla

This should allow to compile without the new editor, allowing to postpone
the installation of the QScintilla library.

ciao,
   Torsten.



From denber at mindspring.com  Mon Apr 20 01:07:39 2015
From: denber at mindspring.com (Michele)
Date: Sun, 19 Apr 2015 22:07:39 -0700 (MST)
Subject: [OpenSCAD] Compiling for 64 bit Sparc Solaris 10
In-Reply-To: <55342FE1.1060706@gmx.de>
References: <CAPoio6f8NeC6VrBBmPuu_mrQJ9hph54hzMX39b3PEzN+UjY8Pg@mail.gmail.com>
	<1419703213176-10749.post@n5.nabble.com> <549EF8E0.60106@gmail.com>
	<1419711378635-10755.post@n5.nabble.com>
	<F9A0FC2D-B69D-4C62-89AE-A1301B16BF3D@kintel.net>
	<1419719973772-10761.post@n5.nabble.com>
	<1425538532468-11892.post@n5.nabble.com>
	<1425575904989-11896.post@n5.nabble.com>
	<1429469381099-12431.post@n5.nabble.com> <55342FE1.1060706@gmx.de>
Message-ID: <1429506459840-12437.post@n5.nabble.com>

/"This is just a helper script, it's not a precondition for the build
to work. If Qt not installed in a known/default location, the script
will not find it, but the build still could work."/

OK thanks, but do you know /where /the script is looking for Qt?  It's not
clear (to me anyway) what the script is doing.  My Qt ended up in
/usr/local/Trolltech/Qt-4.6.4/.

/"This should allow to compile without the new editor, allowing to postpone
the installation of the QScintilla library. "/

That would be nice since I'm not sure my Qscintilla install worked.  It said
it completed successfully but when I tried to compile Octave it said it
couldn't find it.  So if I don't use Qscintilla does that mean I don't get
an editor?

I'm still a ways from trying the Openscad configure because I also still
need to get CGAL and OpenCSG working, and they're giving me trouble too.



--
View this message in context: http://forum.openscad.org/Compiling-for-64-bit-Sparc-Solaris-10-tp10741p12437.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Mon Apr 20 01:24:14 2015
From: runsun at gmail.com (runsun)
Date: Sun, 19 Apr 2015 22:24:14 -0700 (MST)
Subject: [OpenSCAD] Digging into search( )
In-Reply-To: <1B869938-A4DE-4359-89F4-7747FE37C17F@plumb.org>
References: <1429411158858-12421.post@n5.nabble.com>
	<1B869938-A4DE-4359-89F4-7747FE37C17F@plumb.org>
Message-ID: <1429507454382-12438.post@n5.nabble.com>

clothbot wrote
> Example 3:
> 
> 	table3 =[ [?caterpillar?,3],[?cat?,2],[?dog?,2],[?cattle?,5],[?cod?,42]];
> 	search(?cat?, table3);
> 		[1]
> 	search(2,table3,1);
> 		[1,2]
> 	search(?bird",table3);
> 		undef

Also note that using a flat list like above is error-prone:

   table4 = [ ?abc","def","def",3 ];
   search( ?def?,table3 )= want:[2] got:[1]






-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Digging-into-search-tp12421p12438.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Mon Apr 20 02:44:21 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sun, 19 Apr 2015 23:44:21 -0700 (MST)
Subject: [OpenSCAD] Digging into search( )
In-Reply-To: <1429472233446-12432.post@n5.nabble.com>
References: <1429411158858-12421.post@n5.nabble.com>
	<1429415350447-12422.post@n5.nabble.com>
	<1429472233446-12432.post@n5.nabble.com>
Message-ID: <1429512261910-12439.post@n5.nabble.com>

runsun wrote
> Hi Michael, thx for your quick reply. It reveals to me that, even after I
> spent a lot of effort doing relatively extensive tests trying to
> understand how to use search(), I still miss something:
>    
>    (1) search( "abc","abcdabcd" )= [0, 1, 2] 
>    (2) search( ["a","b","c"],"abcdabcd" ) = [[], [], []]
> 
>    The 1st will match individual "a","b","c" to ANY CHARS in "abcdabcd"
>    but the 2nd will match the entire "abcdabcd". 
> 
> That is, 
*
> given a whole string will match partial string, but given a list of
> partial strings will match the whole string
*
> . This already complicated enough. 

(2) is Wiki: Note: If match_value is a vector of strings, search will look
for exact string matches.

> I am pretty sure that it already pass the boundary of my limited brain
> power. But that's not where the complication stops. 
> 
>    (3) search( ["a","bc","abcdabcd"],"abcdabcd" ) = want: [0] got: [[],
> [], []]
> 
> Didn't we say " If match_value is a vector of strings, search will look
> for exact string matches" ???
> 
> Where is the exact string match of the 3rd item, "abcdabcd" ?

Why do you expect [0]?
The "abcdabcd" not found part is unexpected. (bug or not designed for that)

>    (4) And another one:
> 
>       data9= [ ["cat", 1], ["b", 2], ["c", 3], ["dog", 4] 
>                 , ["a", 5], ["b", 6], ["c", 7], ["d", 8] 
>                 , ["e", 9], ["apple", 10], ["a", 11] ] 
> 
>       search( "act", data9, 0 ) 
>       |   want:
>       |   [[0, 4, 9, 10], [0, 2, 6], [0]]
>       |   got:
>       |   [[4, 9, 10], [0, 2, 6], []]
>     
> 
> As we mentioned, "act" is treated as vector of chars, and iterate over. It 
> means, "a" and "t"
> should have found a match in ["cat",1], but they don't.  

wiki:

match_value:
Can be a single value or vector of values.
Strings are treated as vectors-of-characters to iterate over; the search
function does not search for substrings.

So "a" & "t" do not match "cat", but "c" does. Not saying it's sensible.
Change "cat" to "tac" and the "t" matches.


> 
> 
>    (5) Another example:
> 
>    search( "ab",[["ab",1],["bc",2],["cd",3]], 0 )
>    |  want:
>    |  [[0], [0, 1]]
>    |  got:
>    |  [[0], [1]]
>    search( "bc",[["ab",1],["bc",2],["cd",3]], 0 )
>    |  want:
>    |  [[0, 1], [1, 2]]
>    |  got:
>    |  [[1], [2]]
>  
> It seems to me that, other than the already-complicated rule: "
*
> given a whole string will match partial string, but given a list of
> partial strings will match the whole string
*
> ", in come cases it matches an item of a list of strings to the 
*
> BEGINNING of a whole string
*
> .  

Seems the match is as you say, the beginning. Possibly an implementation
error when the match test was written.

> Up to this point, I am too tired trying to figure out yet another rule. 
> 
> You mentioned : " I suspect you may be reacting to the change to remove
> the Warnings?? "

That was in regard to you saying it wasn't ready for release. So I presumed
you saw the change and assumed search() was not released yet.

> Well, in fact, I haven't even started covering it yet. In the 2nd
> argument, 
/
> string_or_vectors
/
> , I only covered string and "list of lists", [ ["abc",1], ["def",2]...]. I
> haven't even covered my real concern : a flat list: [ "abc",1, "def",2...
> ], where my original "request of suppressing warning" lies on. 
> 
> Besides, I am using a nightly version in which the warning that bothered
> me in the first place has already been fixed.

search() worked for what I wanted it too do. I wrote that bit at the bottom
of the wiki "Getting the right results" to figure it out myself, some time
ago.



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Digging-into-search-tp12421p12439.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Mon Apr 20 02:48:18 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sun, 19 Apr 2015 23:48:18 -0700 (MST)
Subject: [OpenSCAD] Digging into search( )
In-Reply-To: <1429507454382-12438.post@n5.nabble.com>
References: <1429411158858-12421.post@n5.nabble.com>
	<1B869938-A4DE-4359-89F4-7747FE37C17F@plumb.org>
	<1429507454382-12438.post@n5.nabble.com>
Message-ID: <1429512498195-12440.post@n5.nabble.com>

runsun wrote
> 
> clothbot wrote
>> Example 3:
>> 
>> 	table3 =[
>> [?caterpillar?,3],[?cat?,2],[?dog?,2],[?cattle?,5],[?cod?,42]];
>> 	search(?cat?, table3);
>> 		[1]
>> 	search(2,table3,1);
>> 		[1,2]
>> 	search(?bird",table3);
>> 		undef
> Also note that using a flat list like above is error-prone:
> 
>    table4 = [ ?abc","def","def",3 ];
>    search( ?def?,table4 )= want:[2] got:[1]

Why do you expect [2]?
[1] is the "d" of match_value "def" match to the first "def"
wiki: num_returns_per_match (default: 1)
So it only returns 1 match.



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Digging-into-search-tp12421p12440.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Mon Apr 20 03:01:34 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Mon, 20 Apr 2015 00:01:34 -0700 (MST)
Subject: [OpenSCAD] Digging into search( )
In-Reply-To: <1429512498195-12440.post@n5.nabble.com>
References: <1429411158858-12421.post@n5.nabble.com>
	<1B869938-A4DE-4359-89F4-7747FE37C17F@plumb.org>
	<1429507454382-12438.post@n5.nabble.com>
	<1429512498195-12440.post@n5.nabble.com>
Message-ID: <1429513294745-12441.post@n5.nabble.com>

Actually I get 

WARNING: Invalid entry in search vector at index 0, required number of
values in the entry: 1. Invalid entry: "abc" 

table4 = [ ?abc","def","def",3 ];
echo(search( ?def?,table4 ));  // = want:[2] got:[1] 



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Digging-into-search-tp12421p12441.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrew at plumb.org  Mon Apr 20 08:26:02 2015
From: andrew at plumb.org (clothbot)
Date: Mon, 20 Apr 2015 05:26:02 -0700 (MST)
Subject: [OpenSCAD] Digging into search( )
In-Reply-To: <1429513294745-12441.post@n5.nabble.com>
References: <1429411158858-12421.post@n5.nabble.com>
	<1B869938-A4DE-4359-89F4-7747FE37C17F@plumb.org>
	<1429507454382-12438.post@n5.nabble.com>
	<1429512498195-12440.post@n5.nabble.com>
	<1429513294745-12441.post@n5.nabble.com>
Message-ID: <1429532762108-12442.post@n5.nabble.com>

It's aliiiiive!

First attempt at search simplification (passes regressions) is here:

https://github.com/openscad/openscad/pull/1318

See the "Files Changed" report for how I've simplified the usage:

https://github.com/openscad/openscad/pull/1318/files


I updated the example023.scad to wrap the built-in search() in a
user-defined search_vector_one() function to take advantage of simple
[for(i=...)] list building:

function search_vector_one(vec,table,col=0) = [for(i=[0:len(vec)-1])
search(vec[i],table,col)[0]];

https://github.com/clothbot/openscad/blob/search_simplify/examples/Old/example023.scad


I used the same search_vector_one() function in text-search-test.scad to
make it "just work":

https://github.com/clothbot/openscad/blob/search_simplify/testdata/scad/2D/features/text-search-test.scad


The two "search-tests-unicode.scad" and "search-tests.scad" have been
significantly modified to reflect the simplified search behaviour.

https://github.com/clothbot/openscad/blob/search_simplify/testdata/scad/misc/search-tests-unicode.scad

https://github.com/clothbot/openscad/blob/search_simplify/testdata/scad/misc/search-tests.scad


As outlined in the comment here:

  
https://github.com/clothbot/openscad/blob/search_simplify/src/func.cc#L667

--snip--

 Pattern:
  "search" "(" match_value  "," string_or_vector_or_table
          ("," index_col_num )?
        ")";
  match_value : ( Value::NUMBER | Value::STRING );
  string_or_vector_or_table : ( Value::STRING | "[" Value ("," Value)* "]" | 
"[" ("[" Value ("," Value)* "]")+ "]" );
  index_col_num : int;

--end-snip--

- A string 'match_value' searches for full-string matches.
  - It does *not* iterate over each character in the string and return a
list of matches per character any more.

- All matches are returned every time
  - no more 'num_returns_per_match' parameter.
  - use user-defined functions like the above search_vector_one() example to
massage search results to your liking.

- the no-matches condition returns 'undef' instead of an empty vector '[]'
  - conditional expressions based on no-search-results will work now.

- Assigning any vector to 'match_value' throws a WARNING and return 'undef'
  - I started trying to get smart and 'collapse vectors of length=1' for
backward compatibility but... no. Better to rip this bandaid off clean.
  - Perhaps a future enhancement could support vector-type match_value for
things like searching for points... That could be handy for process
polygon() and polyhedron() point sets.

Thoughts? Comments?

Speak now or fix it yourself.?. ;-)

Andrew.




--
View this message in context: http://forum.openscad.org/Digging-into-search-tp12421p12442.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Mon Apr 20 10:08:26 2015
From: runsun at gmail.com (runsun)
Date: Mon, 20 Apr 2015 07:08:26 -0700 (MST)
Subject: [OpenSCAD] Digging into search( )
In-Reply-To: <1429532762108-12442.post@n5.nabble.com>
References: <1429411158858-12421.post@n5.nabble.com>
	<1B869938-A4DE-4359-89F4-7747FE37C17F@plumb.org>
	<1429507454382-12438.post@n5.nabble.com>
	<1429512498195-12440.post@n5.nabble.com>
	<1429513294745-12441.post@n5.nabble.com>
	<1429532762108-12442.post@n5.nabble.com>
Message-ID: <1429538906346-12443.post@n5.nabble.com>

Wow, Andrew, that was quick !! 

Without going over the links in details, here is my quick view:

It looks great. The removal of iteration over match_value and the
num_returns_per_match is very significant. 

One note:

match_value doesn't have to exclude lists. You just treat it as a value and
don't iterate over it. This way, it can be used to search points like you
wish. 

In fact, since it is "a value", there's no need to enforce any type
constraint on match_value. It could be anything even boolean or even undef.
Thus, there is no need for the warning sign. It wouldn't be too hard to
check why a search doesn't return indices as expected. 

Certainly, if match_value=vector is allowed,  we have to think about how to
deal with this: 

   search(  ["abc",1],   [ ["abc",1], [ ["abc",1],2 ], ["ghi",3] ...]   ) 

Will it give [0] ? [1]? [0,1] ?

This can be controlled by index_col_num, for example, 

index_col_num = 0 ==> [1]  (match the column #0 ) 
index_col_num = -1 ==> [0] (means, no selection of column, so match the
whole item, in this case, ["abc",1], and return [0] )

Lastly, a side note:

Since search( ) now seems to allow flat list (which I believe was not
original design for), what it does is returning index:

   search( "def", ["abc",1,"def",2,"ghi",3] )

and a step-short to serve the purpose of hash-like feature, because this
will fail :

   search( "def", ["abc","def","def",2,"ghi",3] )

It returns 1, the index of value of key "abc", but not 2, the index of key 
"def".

Unless a new argument, every, is introduced. every=1 (default), every=2:
allows for key search in a list of key-value pairs. Its addition depends on
how you feel how important this "key-value pairs" is and if this search()
wants to play that role. 

BTW: I have a whole set of test cases for search(). Once it is merged into
the nightly, I can try them out. 



clothbot wrote
> - A string 'match_value' searches for full-string matches.
>   - It does *not* iterate over each character in the string and return a
> list of matches per character any more.
> 
> - All matches are returned every time
>   - no more 'num_returns_per_match' parameter.
>   - use user-defined functions like the above search_vector_one() example
> to massage search results to your liking.
> 
> - the no-matches condition returns 'undef' instead of an empty vector '[]'
>   - conditional expressions based on no-search-results will work now.
> 
> - Assigning any vector to 'match_value' throws a WARNING and return
> 'undef'
>   - I started trying to get smart and 'collapse vectors of length=1' for
> backward compatibility but... no. Better to rip this bandaid off clean.
>   - Perhaps a future enhancement could support vector-type match_value for
> things like searching for points... That could be handy for process
> polygon() and polyhedron() point sets.
> 
> Thoughts? Comments?
> 
> Speak now or fix it yourself.?. ;-)
> 
> Andrew.





-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Digging-into-search-tp12421p12443.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrew at plumb.org  Mon Apr 20 11:38:22 2015
From: andrew at plumb.org (clothbot)
Date: Mon, 20 Apr 2015 08:38:22 -0700 (MST)
Subject: [OpenSCAD] Digging into search( )
In-Reply-To: <1429538906346-12443.post@n5.nabble.com>
References: <1429411158858-12421.post@n5.nabble.com>
	<1B869938-A4DE-4359-89F4-7747FE37C17F@plumb.org>
	<1429507454382-12438.post@n5.nabble.com>
	<1429512498195-12440.post@n5.nabble.com>
	<1429513294745-12441.post@n5.nabble.com>
	<1429532762108-12442.post@n5.nabble.com>
	<1429538906346-12443.post@n5.nabble.com>
Message-ID: <1429544302098-12444.post@n5.nabble.com>

Hi Rusun,

Very briefly, vector and string 'index' counting starts at 0, not 1.

list1= ["abc",1,"def",2,"ghi",3]
 search( "def", list1 ) 

...will return '[2]' because list1[2]=="def"; list1[0]=="abc"

list2=["abc","def","def",2,"ghi",3]
search( "def", list2 ) 

...will now return '[1,2]' because list2[1]=="def" and list2[2]=="def";
list2[0]=="abc"

In my simplified search, all matches are always returned.  It is now up to
the user to decide how many/few to filter off and by what
mechanism/algorithm.

I think that yes, I'll eventually add list/vector support to match_value,
however it will be considerably more involved to implement than the simple
'atomic' data structures. 

Support search for an N-dimension vector match could be fun+useful:
  - add 'tol[erance]' parameter to allow for 'close enough' floating point
'distance' matches.

Picking my battles. :-)

Andrew.



--
View this message in context: http://forum.openscad.org/Digging-into-search-tp12421p12444.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Mon Apr 20 12:23:22 2015
From: runsun at gmail.com (runsun)
Date: Mon, 20 Apr 2015 09:23:22 -0700 (MST)
Subject: [OpenSCAD] Digging into search( )
In-Reply-To: <1429544302098-12444.post@n5.nabble.com>
References: <1429411158858-12421.post@n5.nabble.com>
	<1B869938-A4DE-4359-89F4-7747FE37C17F@plumb.org>
	<1429507454382-12438.post@n5.nabble.com>
	<1429512498195-12440.post@n5.nabble.com>
	<1429513294745-12441.post@n5.nabble.com>
	<1429532762108-12442.post@n5.nabble.com>
	<1429538906346-12443.post@n5.nabble.com>
	<1429544302098-12444.post@n5.nabble.com>
Message-ID: <1429547002229-12445.post@n5.nabble.com>

Ok. I think I've bugged you enough. Whatever you decide, I think it's in a
good direction :) :)



-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Digging-into-search-tp12421p12445.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Mon Apr 20 15:39:40 2015
From: runsun at gmail.com (runsun)
Date: Mon, 20 Apr 2015 12:39:40 -0700 (MST)
Subject: [OpenSCAD] Idea: local var inside list_comprehension
Message-ID: <1429558780560-12446.post@n5.nabble.com>

I've carried out some speed tests to compare the performance of list
comprehension and recursion. The preliminary result shows that list comp. is
much much faster than recursion.  The difference is huge especially at large
data set. In some cases recursion hangs the computer but list comp can
finish in 1~2 sec.

But there are cases that recursion is needed. A simple sum( list ) function
will require recursion, because we can't carry the result of
list[i]+list[i+1] to the next iteration.

So I have an idea: how about an internal variable to represent the result of
the previous iteration ?

Let's say, @ = result of the previous iteration

function sum( list ) = [ for( i=[0:len(list)-1] ) i==0?list[i]:(@+list[i]) ]
                                 [ len(list)-1] ;

sum( [2,3,4] ) = [ 2,5,9][2] = 9;






-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Idea-local-var-inside-list-comprehension-tp12446.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Mon Apr 20 16:17:26 2015
From: nop.head at gmail.com (nop head)
Date: Mon, 20 Apr 2015 21:17:26 +0100
Subject: [OpenSCAD] Idea: local var inside list_comprehension
In-Reply-To: <1429558780560-12446.post@n5.nabble.com>
References: <1429558780560-12446.post@n5.nabble.com>
Message-ID: <CAEEmnrOQZE8AAOv6Q0kj3Nb88=MD-BhfKgDbtwtaZXz-oktcQA@mail.gmail.com>

Better to optimise tail recursion to be iteration than make the language
more complicated and ugly. I thought that had already been done though?

On 20 April 2015 at 20:39, runsun <runsun at gmail.com> wrote:

> I've carried out some speed tests to compare the performance of list
> comprehension and recursion. The preliminary result shows that list comp.
> is
> much much faster than recursion.  The difference is huge especially at
> large
> data set. In some cases recursion hangs the computer but list comp can
> finish in 1~2 sec.
>
> But there are cases that recursion is needed. A simple sum( list ) function
> will require recursion, because we can't carry the result of
> list[i]+list[i+1] to the next iteration.
>
> So I have an idea: how about an internal variable to represent the result
> of
> the previous iteration ?
>
> Let's say, @ = result of the previous iteration
>
> function sum( list ) = [ for( i=[0:len(list)-1] ) i==0?list[i]:(@+list[i])
> ]
>                                  [ len(list)-1] ;
>
> sum( [2,3,4] ) = [ 2,5,9][2] = 9;
>
>
>
>
>
>
> -----
>
> $  Runsun Pan, PhD
>
> $ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  )
>
> $ -- hash parameter model: here , here
>
> $ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Idea-local-var-inside-list-comprehension-tp12446.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150420/e7c79d4f/attachment.html>

From Torsten.Paul at gmx.de  Mon Apr 20 16:38:09 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 20 Apr 2015 22:38:09 +0200
Subject: [OpenSCAD] Idea: local var inside list_comprehension
In-Reply-To: <CAEEmnrOQZE8AAOv6Q0kj3Nb88=MD-BhfKgDbtwtaZXz-oktcQA@mail.gmail.com>
References: <1429558780560-12446.post@n5.nabble.com>
	<CAEEmnrOQZE8AAOv6Q0kj3Nb88=MD-BhfKgDbtwtaZXz-oktcQA@mail.gmail.com>
Message-ID: <553563B1.8010908@gmx.de>

On 04/20/2015 10:17 PM, nop head wrote:
> Better to optimise tail recursion to be iteration than make the
 > language more complicated and ugly. I thought that had already
 > been done though?
>
Simple tail recursion elimination is supported (functions only,
not for modules):

function rec_add(i = 0) = i <= 0 ? 0 : i + rec_add(i - 1);
echo(rec_add(10000));
=> ERROR: Recursion detected calling function 'rec_add'

function tail_rec_add(i = 0, result = 0) = i <= 0 ? result : tail_rec_add(i - 1, result + i);
echo(tail_rec_add(10000));
=> ECHO: 5.0005e+07

Note that there is currently still a limit for the iteration
count, but it's much higher than the limit caused by stack
size for the recursive call.

ciao,
   Torsten.



From runsun at gmail.com  Mon Apr 20 16:42:53 2015
From: runsun at gmail.com (runsun)
Date: Mon, 20 Apr 2015 13:42:53 -0700 (MST)
Subject: [OpenSCAD] Idea: local var inside list_comprehension
In-Reply-To: <CAEEmnrOQZE8AAOv6Q0kj3Nb88=MD-BhfKgDbtwtaZXz-oktcQA@mail.gmail.com>
References: <1429558780560-12446.post@n5.nabble.com>
	<CAEEmnrOQZE8AAOv6Q0kj3Nb88=MD-BhfKgDbtwtaZXz-oktcQA@mail.gmail.com>
Message-ID: <1429562573066-12449.post@n5.nabble.com>

You are right !!! Tail recursion is very fast, indeed. I adjusted my code and
it's much faster. It's still 3x slower than the list comprehension at very
large data set, but is very impressive already. Good enough. Thx, man.



-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Idea-local-var-inside-list-comprehension-tp12446p12449.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Mon Apr 20 16:48:20 2015
From: runsun at gmail.com (runsun)
Date: Mon, 20 Apr 2015 13:48:20 -0700 (MST)
Subject: [OpenSCAD] Idea: local var inside list_comprehension
In-Reply-To: <553563B1.8010908@gmx.de>
References: <1429558780560-12446.post@n5.nabble.com>
	<CAEEmnrOQZE8AAOv6Q0kj3Nb88=MD-BhfKgDbtwtaZXz-oktcQA@mail.gmail.com>
	<553563B1.8010908@gmx.de>
Message-ID: <1429562900542-12450.post@n5.nabble.com>

@Torsten, your examples demonstrate tail recursion nicely. Thx a lot. I gotta
review all my codes :) :)



-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Idea-local-var-inside-list-comprehension-tp12446p12450.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Mon Apr 20 18:15:06 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Mon, 20 Apr 2015 15:15:06 -0700 (MST)
Subject: [OpenSCAD] Digging into search( )
In-Reply-To: <1429547002229-12445.post@n5.nabble.com>
References: <1429411158858-12421.post@n5.nabble.com>
	<1B869938-A4DE-4359-89F4-7747FE37C17F@plumb.org>
	<1429507454382-12438.post@n5.nabble.com>
	<1429512498195-12440.post@n5.nabble.com>
	<1429513294745-12441.post@n5.nabble.com>
	<1429532762108-12442.post@n5.nabble.com>
	<1429538906346-12443.post@n5.nabble.com>
	<1429544302098-12444.post@n5.nabble.com>
	<1429547002229-12445.post@n5.nabble.com>
Message-ID: <1429568106555-12451.post@n5.nabble.com>

I think you missed the point @runsun.

"Very briefly, vector and string 'index' counting starts at 0, not 1. "

This explains why you had so much difficulty understanding it.

search("a",[ "d", "c", "b", "a"); // returns [3]
                  0    1    2    3
                                  __





-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Digging-into-search-tp12421p12451.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Mon Apr 20 18:49:46 2015
From: runsun at gmail.com (runsun)
Date: Mon, 20 Apr 2015 15:49:46 -0700 (MST)
Subject: [OpenSCAD] Digging into search( )
In-Reply-To: <1429568106555-12451.post@n5.nabble.com>
References: <1429411158858-12421.post@n5.nabble.com>
	<1B869938-A4DE-4359-89F4-7747FE37C17F@plumb.org>
	<1429507454382-12438.post@n5.nabble.com>
	<1429512498195-12440.post@n5.nabble.com>
	<1429513294745-12441.post@n5.nabble.com>
	<1429532762108-12442.post@n5.nabble.com>
	<1429538906346-12443.post@n5.nabble.com>
	<1429544302098-12444.post@n5.nabble.com>
	<1429547002229-12445.post@n5.nabble.com>
	<1429568106555-12451.post@n5.nabble.com>
Message-ID: <1429570186784-12452.post@n5.nabble.com>

@ Michael, I didn't explain too much in details about the context, I guess
that's why you (and Andrew) misunderstood. 

The reason that I have this argument,

     search( "def", [ "abc","def","def",1 ] ) 

will cause confusion is that, the whole discussion stems from a discussion
on other thread about hash parameter mapping. This includes the example you
gave using lookup. 

Then search() was mentioned. Search() was not designed for this type of
key-value mapping, but I tried to use it that way, by applying search() on a
flat list as above. Note that all examples on the doc about search() are
either against strings :

    search( ... "abcdef")

or against list of vectors:

    search( ... [["abc",1],["def",2] ...])

but not flat list.

So if search() is to be use as a key-value type mapping against a flat list
like I like it to be, it has to be able to find every other item to map,
that is, 

    search( "def", ["abc", "def", "def", 1] )

def has to map item 0, that is "abc", and skip item 1 (which is a value
associates to item 0), then item 2, that is "def". 

In this case, it should have returned [2]. Or, if return all, [1,2].

But, like I said, search() can't do that, and when set to return only one
item, it will return [1], but not [2], which is not what I want. So using
search() in a key-value mapping manner will fail. 

This can be solved if search() can match every other item (see my previous
post). 

But I understand that this is probably just my way of using it, so I leave
the decision to Andrew. It would probably make it too complicated, anyway. 

So this is not the problem of mistaking the base indexing. Guess I was just
too lazy to explain the entire context. :( :( 


MichaelAtOz wrote
> I think you missed the point @runsun.
> 
> "Very briefly, vector and string 'index' counting starts at 0, not 1. "
> 
> This explains why you had so much difficulty understanding it.
> 
> search("a",[ "d", "c", "b", "a"); // returns [3]
>                   0    1    2    3
>                                   __





-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Digging-into-search-tp12421p12452.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From neil.penning+openscad at gmail.com  Tue Apr 21 07:41:24 2015
From: neil.penning+openscad at gmail.com (cn145912)
Date: Tue, 21 Apr 2015 04:41:24 -0700 (MST)
Subject: [OpenSCAD] Help with polygon() function
Message-ID: <1429616484712-12453.post@n5.nabble.com>

I wrote some code to generate a polygon, it generates these two lists

point = [[-36.6025, 136.603], [-136.603, 36.6025], [-100, -100], [36.6025,
-136.603], [136.603, -36.6025], [100, 100], [-60, 60], [-81.9615, -21.9615],
[-21.9615, -81.9615], [60, -60], [81.9615, 21.9615], [21.9615, 81.9615]]
path = [0, 6, 1, 7, 2, 8, 3, 9, 4, 10, 5, 11]

but for some reason, when I try

polygon(points=point, paths=path)

nothing is displayed. Could someone take a look at the lists and tell my why
they don't work?



--
View this message in context: http://forum.openscad.org/Help-with-polygon-function-tp12453.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrew at plumb.org  Tue Apr 21 08:01:49 2015
From: andrew at plumb.org (Andrew Plumb)
Date: Tue, 21 Apr 2015 08:01:49 -0400
Subject: [OpenSCAD] Help with polygon() function
In-Reply-To: <1429616484712-12453.post@n5.nabble.com>
References: <1429616484712-12453.post@n5.nabble.com>
Message-ID: <620EDF4E-839C-464B-A083-81FF8EEB935B@plumb.org>

Path is a vector-of-index-vectors, not a vector-of-indices. You need to wrap it in a second set of ?[]?:

?snip--

point = [[-36.6025, 136.603], [-136.603, 36.6025], [-100, -100], [36.6025,
-136.603], [136.603, -36.6025], [100, 100], [-60, 60], [-81.9615, -21.9615],
[-21.9615, -81.9615], [60, -60], [81.9615, 21.9615], [21.9615, 81.9615]];
path = [[0, 6, 1, 7, 2, 8, 3, 9, 4, 10, 5, 11]];

polygon(points=point, paths=path);

?end-snip--

Andrew.


> On Apr 21, 2015, at 7:41 AM, cn145912 <neil.penning+openscad at gmail.com> wrote:
> 
> I wrote some code to generate a polygon, it generates these two lists
> 
> point = [[-36.6025, 136.603], [-136.603, 36.6025], [-100, -100], [36.6025,
> -136.603], [136.603, -36.6025], [100, 100], [-60, 60], [-81.9615, -21.9615],
> [-21.9615, -81.9615], [60, -60], [81.9615, 21.9615], [21.9615, 81.9615]]
> path = [0, 6, 1, 7, 2, 8, 3, 9, 4, 10, 5, 11]
> 
> but for some reason, when I try
> 
> polygon(points=point, paths=path)
> 
> nothing is displayed. Could someone take a look at the lists and tell my why
> they don't work?
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/Help-with-polygon-function-tp12453.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From nop.head at gmail.com  Tue Apr 21 08:07:24 2015
From: nop.head at gmail.com (nophead)
Date: Tue, 21 Apr 2015 05:07:24 -0700 (MST)
Subject: [OpenSCAD] Help with polygon() function
In-Reply-To: <620EDF4E-839C-464B-A083-81FF8EEB935B@plumb.org>
References: <1429616484712-12453.post@n5.nabble.com>
	<620EDF4E-839C-464B-A083-81FF8EEB935B@plumb.org>
Message-ID: <1429618044441-12455.post@n5.nabble.com>

Renaming path to paths = [[ ... ]] or doing polygon(points=point,
paths=[path]); makes the code more logical.

Similarly point should be points.




--
View this message in context: http://forum.openscad.org/Help-with-polygon-function-tp12453p12455.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nigel at nigeljohnson.net  Tue Apr 21 16:54:56 2015
From: nigel at nigeljohnson.net (nigeljohnson73)
Date: Tue, 21 Apr 2015 13:54:56 -0700 (MST)
Subject: [OpenSCAD] preview on mac finder
Message-ID: <1429649696252-12456.post@n5.nabble.com>

Hi there,

I was wondering what happened between 2014.03 and 2015.03 that means
clicking a file in the Mac Finder now renders a white/transparent preview,
whereas in the 2014 release things rendered visibly in grey.

It's not really a huge issue, but I was hoping the normals fix in 2015.03-1
would be it, but no. I haven't downloaded 2015.04 yet, but I don't expect it
to help.

I can provide examples of pre/post 2015.03 STL files if needed.

Any help much appreciated.
Thanks
Nigel



--
View this message in context: http://forum.openscad.org/preview-on-mac-finder-tp12456.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nigel at nigeljohnson.net  Tue Apr 21 17:00:18 2015
From: nigel at nigeljohnson.net (nigeljohnson73)
Date: Tue, 21 Apr 2015 14:00:18 -0700 (MST)
Subject: [OpenSCAD] preview on mac finder
In-Reply-To: <1429649696252-12456.post@n5.nabble.com>
References: <1429649696252-12456.post@n5.nabble.com>
Message-ID: <1429650018849-12457.post@n5.nabble.com>

Sorry, clarification - I meant clicking on an STL file generated by OpenSCAD.

Updated question text.



--
View this message in context: http://forum.openscad.org/preview-on-mac-finder-tp12456p12457.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From chris at thenewhobbyist.com  Tue Apr 21 17:06:20 2015
From: chris at thenewhobbyist.com (Chris - The New Hobbyist)
Date: Tue, 21 Apr 2015 16:06:20 -0500
Subject: [OpenSCAD] preview on mac finder
In-Reply-To: <1429650018849-12457.post@n5.nabble.com>
References: <1429649696252-12456.post@n5.nabble.com>
	<1429650018849-12457.post@n5.nabble.com>
Message-ID: <CADcvnvN0JbjztsW4AYcfZ2h=YPXO4vpBVPxndTQSeZ7VCn32hw@mail.gmail.com>

I'm not sure if this is related, but I have noticed a difference with STL
files generated with 2015.03.

When I pull the files into KeyShot for rendering they render as all black
shapes. I'm not sure if the faces are flipped or what. But they can be
fixed by repairing in NetFabb. This seems to happen with any/all STL files
I export.

This seems to only have started since I upgraded to 2015.03

Chris

On Tue, Apr 21, 2015 at 4:00 PM, nigeljohnson73 <nigel at nigeljohnson.net>
wrote:

> Sorry, clarification - I meant clicking on an STL file generated by
> OpenSCAD.
>
> Updated question text.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/preview-on-mac-finder-tp12456p12457.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150421/52496580/attachment.html>

From Torsten.Paul at gmx.de  Tue Apr 21 17:09:17 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Tue, 21 Apr 2015 23:09:17 +0200
Subject: [OpenSCAD] preview on mac finder
In-Reply-To: <CADcvnvN0JbjztsW4AYcfZ2h=YPXO4vpBVPxndTQSeZ7VCn32hw@mail.gmail.com>
References: <1429649696252-12456.post@n5.nabble.com>	<1429650018849-12457.post@n5.nabble.com>
	<CADcvnvN0JbjztsW4AYcfZ2h=YPXO4vpBVPxndTQSeZ7VCn32hw@mail.gmail.com>
Message-ID: <5536BC7D.4000809@gmx.de>

On 04/21/2015 11:06 PM, Chris - The New Hobbyist wrote:
> I'm not sure if this is related, but I have noticed a difference with STL
 > files generated with 2015.03.
>
> When I pull the files into KeyShot for rendering they render as all
 > black shapes. I'm not sure if the faces are flipped or what.
 >
This sounds like https://github.com/openscad/openscad/issues/1317#issuecomment-94298621

It probably uses the supplied normals to calculate the shading.

ciao,
   Torsten.



From nigel at nigeljohnson.net  Tue Apr 21 17:12:57 2015
From: nigel at nigeljohnson.net (nigeljohnson73)
Date: Tue, 21 Apr 2015 14:12:57 -0700 (MST)
Subject: [OpenSCAD] preview on mac finder
In-Reply-To: <5536BC7D.4000809@gmx.de>
References: <1429649696252-12456.post@n5.nabble.com>
	<1429650018849-12457.post@n5.nabble.com>
	<CADcvnvN0JbjztsW4AYcfZ2h=YPXO4vpBVPxndTQSeZ7VCn32hw@mail.gmail.com>
	<5536BC7D.4000809@gmx.de>
Message-ID: <1429650777696-12460.post@n5.nabble.com>

Hi Torsten, I thought that as well, but I have downloaded the 2015.03-1
release where that is marked as fixed, but I still get the same STL output.



--
View this message in context: http://forum.openscad.org/preview-on-mac-finder-tp12456p12460.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Tue Apr 21 18:50:57 2015
From: marius at kintel.net (Marius Kintel)
Date: Tue, 21 Apr 2015 18:50:57 -0400
Subject: [OpenSCAD] preview on mac finder
In-Reply-To: <1429650777696-12460.post@n5.nabble.com>
References: <1429649696252-12456.post@n5.nabble.com>
	<1429650018849-12457.post@n5.nabble.com>
	<CADcvnvN0JbjztsW4AYcfZ2h=YPXO4vpBVPxndTQSeZ7VCn32hw@mail.gmail.com>
	<5536BC7D.4000809@gmx.de> <1429650777696-12460.post@n5.nabble.com>
Message-ID: <64C6B6F5-9CB7-44C0-8A05-C312A44BA1EC@kintel.net>

On Apr 21, 2015, at 17:12 PM, nigeljohnson73 <nigel at nigeljohnson.net> wrote:

> Hi Torsten, I thought that as well, but I have downloaded the 2015.03-1
> release where that is marked as fixed, but I still get the same STL output.
> 
Nigel,

Sorry, I accidentally uploaded a broken build of 2015.03-1. The current one should work.

Btw., what software do you use to preview STLs?

 -Marius



From nigel at nigeljohnson.net  Tue Apr 21 19:29:18 2015
From: nigel at nigeljohnson.net (nigeljohnson73)
Date: Tue, 21 Apr 2015 16:29:18 -0700 (MST)
Subject: [OpenSCAD] preview on mac finder
In-Reply-To: <64C6B6F5-9CB7-44C0-8A05-C312A44BA1EC@kintel.net>
References: <1429649696252-12456.post@n5.nabble.com>
	<1429650018849-12457.post@n5.nabble.com>
	<CADcvnvN0JbjztsW4AYcfZ2h=YPXO4vpBVPxndTQSeZ7VCn32hw@mail.gmail.com>
	<5536BC7D.4000809@gmx.de> <1429650777696-12460.post@n5.nabble.com>
	<64C6B6F5-9CB7-44C0-8A05-C312A44BA1EC@kintel.net>
Message-ID: <1429658958369-12462.post@n5.nabble.com>

Ah ha, just downloaded and installed the latest 2015.03-1 (2015-04-21) and
all is good in the world again :)

The Mac finder is equivalent to the windows explorer and does a simple
preview built in. When you click on any file it recognises, it will generate
a little thumbnail.



--
View this message in context: http://forum.openscad.org/preview-on-mac-finder-tp12456p12462.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From chris at thenewhobbyist.com  Tue Apr 21 19:34:22 2015
From: chris at thenewhobbyist.com (Chris - The New Hobbyist)
Date: Tue, 21 Apr 2015 18:34:22 -0500
Subject: [OpenSCAD] preview on mac finder
In-Reply-To: <1429658958369-12462.post@n5.nabble.com>
References: <1429649696252-12456.post@n5.nabble.com>
	<1429650018849-12457.post@n5.nabble.com>
	<CADcvnvN0JbjztsW4AYcfZ2h=YPXO4vpBVPxndTQSeZ7VCn32hw@mail.gmail.com>
	<5536BC7D.4000809@gmx.de> <1429650777696-12460.post@n5.nabble.com>
	<64C6B6F5-9CB7-44C0-8A05-C312A44BA1EC@kintel.net>
	<1429658958369-12462.post@n5.nabble.com>
Message-ID: <CADcvnvNZecDU9o5UbQhgQhDK4mHRZNwbueB5q66fooChzwV4Kg@mail.gmail.com>

@Torsten Thanks for the heads up, I did't realize there was a 2015.03-1.
That fixed my issue.

@Nigel I'm pretty sure OS X doesn't generate STL previews on it's own. But
it's possible you have installed Pleasant3D, or Cura previously that does
include a QuickLook plugin. It's also possible you have this installed (
http://www.thingiverse.com/thing:376361) but I imagine you would remember
that because it takes a little work.

Chris

On Tue, Apr 21, 2015 at 6:29 PM, nigeljohnson73 <nigel at nigeljohnson.net>
wrote:

> Ah ha, just downloaded and installed the latest 2015.03-1 (2015-04-21) and
> all is good in the world again :)
>
> The Mac finder is equivalent to the windows explorer and does a simple
> preview built in. When you click on any file it recognises, it will
> generate
> a little thumbnail.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/preview-on-mac-finder-tp12456p12462.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150421/55fe4bc2/attachment.html>

From nigel at nigeljohnson.net  Tue Apr 21 19:48:34 2015
From: nigel at nigeljohnson.net (nigeljohnson73)
Date: Tue, 21 Apr 2015 16:48:34 -0700 (MST)
Subject: [OpenSCAD] preview on mac finder
In-Reply-To: <CADcvnvNZecDU9o5UbQhgQhDK4mHRZNwbueB5q66fooChzwV4Kg@mail.gmail.com>
References: <1429649696252-12456.post@n5.nabble.com>
	<1429650018849-12457.post@n5.nabble.com>
	<CADcvnvN0JbjztsW4AYcfZ2h=YPXO4vpBVPxndTQSeZ7VCn32hw@mail.gmail.com>
	<5536BC7D.4000809@gmx.de> <1429650777696-12460.post@n5.nabble.com>
	<64C6B6F5-9CB7-44C0-8A05-C312A44BA1EC@kintel.net>
	<1429658958369-12462.post@n5.nabble.com>
	<CADcvnvNZecDU9o5UbQhgQhDK4mHRZNwbueB5q66fooChzwV4Kg@mail.gmail.com>
Message-ID: <1429660114922-12464.post@n5.nabble.com>

I do have cura installed. That must be it, I've not looked at STL files
without Cura being installed.

Thanks for the clarification :)



--
View this message in context: http://forum.openscad.org/preview-on-mac-finder-tp12456p12464.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Tue Apr 21 21:59:21 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Tue, 21 Apr 2015 18:59:21 -0700 (MST)
Subject: [OpenSCAD] While we're talking preview, preview for Windows,
 integrated into Explorer?
Message-ID: <1429667961436-12465.post@n5.nabble.com>

I think I saw something in Windows 8 for STLs, but is there any STL
previewer, that is integrated in the Explorer preview panel for Windows 7
(or not to mention XP for those who are less Hip)?



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/While-we-re-talking-preview-preview-for-Windows-integrated-into-Explorer-tp12465.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From quackingplums at hotmail.com  Thu Apr 23 03:26:44 2015
From: quackingplums at hotmail.com (QuackingPlums)
Date: Thu, 23 Apr 2015 00:26:44 -0700 (MST)
Subject: [OpenSCAD] preview on mac finder
In-Reply-To: <1429660114922-12464.post@n5.nabble.com>
References: <1429649696252-12456.post@n5.nabble.com>
	<1429650018849-12457.post@n5.nabble.com>
	<CADcvnvN0JbjztsW4AYcfZ2h=YPXO4vpBVPxndTQSeZ7VCn32hw@mail.gmail.com>
	<5536BC7D.4000809@gmx.de> <1429650777696-12460.post@n5.nabble.com>
	<64C6B6F5-9CB7-44C0-8A05-C312A44BA1EC@kintel.net>
	<1429658958369-12462.post@n5.nabble.com>
	<CADcvnvNZecDU9o5UbQhgQhDK4mHRZNwbueB5q66fooChzwV4Kg@mail.gmail.com>
	<1429660114922-12464.post@n5.nabble.com>
Message-ID: <1429774004747-12467.post@n5.nabble.com>

I use the Elektriktrick QL plugin and that seems to render everything fine
(at least I haven't noticed this particular issue)

http://www.elektriktrick.com/sw_quicklook.html
<http://www.elektriktrick.com/sw_quicklook.html>  



--
View this message in context: http://forum.openscad.org/preview-on-mac-finder-tp12456p12467.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From ivo.knutsel at gmail.com  Thu Apr 23 08:36:16 2015
From: ivo.knutsel at gmail.com (Ivo)
Date: Thu, 23 Apr 2015 05:36:16 -0700 (MST)
Subject: [OpenSCAD] Voxel file format
Message-ID: <1429792576926-12468.post@n5.nabble.com>

Shapeways has a an upper limit of 1000000 polygons per model. 

A format that does not seem to have this limitation us the SVX format :
http://www.shapeways.com/blog/archives/17972-shapeways-launches-svx-voxel-file-format-for-3d-printing.html
described in : http://abfab3d.com/svx-format/

Sculpteo is less specific ; "tiny details in large files with excessive
numbers of polygons will not be rendered"

How hard would it be be to build an exporter for this format ?

SVX seems to be very poorly supported.




--
View this message in context: http://forum.openscad.org/Voxel-file-format-tp12468.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From quackingplums at hotmail.com  Thu Apr 23 09:33:36 2015
From: quackingplums at hotmail.com (QuackingPlums)
Date: Thu, 23 Apr 2015 06:33:36 -0700 (MST)
Subject: [OpenSCAD] Voxel file format
In-Reply-To: <1429792576926-12468.post@n5.nabble.com>
References: <1429792576926-12468.post@n5.nabble.com>
Message-ID: <1429796016080-12469.post@n5.nabble.com>

I can't speak for Shapeways but my RepRap is unlikely to have sufficient
resolution to print 1,000,000 faces on an object the size of my print bed
(and for those faces to be distinguishable).

A better approach might be to work out the limitations of your print format
and output the correct resolution to match. There will be no discernible
different and file sizes will be smaller.



--
View this message in context: http://forum.openscad.org/Voxel-file-format-tp12468p12469.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From yvette at dbtgroup.com  Thu Apr 23 11:16:08 2015
From: yvette at dbtgroup.com (Yvette S. Hirth, CCP, CDP)
Date: Thu, 23 Apr 2015 08:16:08 -0700
Subject: [OpenSCAD] threads
In-Reply-To: <1429792576926-12468.post@n5.nabble.com>
References: <1429792576926-12468.post@n5.nabble.com>
Message-ID: <55390CB8.6040801@dbtgroup.com>

hi all,

i'm trying to "cut" threads in openSCAD.  i'm using the threads.scad 
module i found on thingiverse, like so:

use <threads.scad>;
...
english_thread(diameter=(632ScrewRadius*2),
threads_per_inch=32,
length=(coverDepth+coverThickness),
internal=true,
$fn=30);

gosh, is it *slow*!  i played a game of freecell and the progress meter 
hasn't budged from "just started".  and now i've finished typing this 
email and still no progress.

i put cylinders in the code to check for positioning and depth; once i 
got those right, i commented out ONLY the first cylinder and inserted 
just the code for the one thread above.  my res time (F6) was 45sec; now 
it could be hours.  from *one* thread - and i have four to gen before 
slicing.

i'm sure the lack of progress is due to threads.scad creating a 
bazillion polygons.  i'm not trying to complain; i'm just trying to get 
my stuff printed.

is there any alternative to threads.scad?

thanks!
yvette


From ivo.knutsel at gmail.com  Thu Apr 23 15:19:35 2015
From: ivo.knutsel at gmail.com (Ivo)
Date: Thu, 23 Apr 2015 12:19:35 -0700 (MST)
Subject: [OpenSCAD] Voxel file format
In-Reply-To: <1429796016080-12469.post@n5.nabble.com>
References: <1429792576926-12468.post@n5.nabble.com>
	<1429796016080-12469.post@n5.nabble.com>
Message-ID: <1429816775650-12471.post@n5.nabble.com>

QuackingPlums wrote
> I can't speak for Shapeways but my RepRap is unlikely to have sufficient
> resolution to print 1,000,000 faces on an object the size of my print bed
> (and for those faces to be distinguishable).

Models like 
https://www.shapeways.com/product/KPZ4NZLQH/twisty-cube?li=search-results-5&optionId=42490374

https://www.shapeways.com/product/TCAXXR9BJ/woven-purse?li=search-results-30&optionId=42445606

Will get to a million faces.




--
View this message in context: http://forum.openscad.org/Voxel-file-format-tp12468p12471.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Thu Apr 23 15:35:27 2015
From: marius at kintel.net (Marius Kintel)
Date: Thu, 23 Apr 2015 15:35:27 -0400
Subject: [OpenSCAD] Voxel file format
In-Reply-To: <1429792576926-12468.post@n5.nabble.com>
References: <1429792576926-12468.post@n5.nabble.com>
Message-ID: <EC2F9CC1-A36B-43C5-9884-149D3E5E5DD7@kintel.net>

On Apr 23, 2015, at 08:36 AM, Ivo <ivo.knutsel at gmail.com> wrote:

> http://www.shapeways.com/blog/archives/17972-shapeways-launches-svx-voxel-file-format-for-3d-printing.html
> described in : http://abfab3d.com/svx-format/
> 
Do shapeways have a limitation on the size of SVX files?
Such voxel files will easily reach a GB of raw data..

 -Marius



From ivo.knutsel at gmail.com  Thu Apr 23 16:08:34 2015
From: ivo.knutsel at gmail.com (Ivo)
Date: Thu, 23 Apr 2015 13:08:34 -0700 (MST)
Subject: [OpenSCAD] Voxel file format
In-Reply-To: <EC2F9CC1-A36B-43C5-9884-149D3E5E5DD7@kintel.net>
References: <1429792576926-12468.post@n5.nabble.com>
	<EC2F9CC1-A36B-43C5-9884-149D3E5E5DD7@kintel.net>
Message-ID: <1429819714038-12473.post@n5.nabble.com>

kintel wrote
> On Apr 23, 2015, at 08:36 AM, Ivo &lt;

> ivo.knutsel@

> &gt; wrote:
> 
>> http://www.shapeways.com/blog/archives/17972-shapeways-launches-svx-voxel-file-format-for-3d-printing.html
>> described in : http://abfab3d.com/svx-format/
>> 
> Do shapeways have a limitation on the size of SVX files?
> Such voxel files will easily reach a GB of raw data..
> 
>  -Marius

With the existing png export it almost seems like something that can be
scripted together in a sunday afternoon. 



--
View this message in context: http://forum.openscad.org/Voxel-file-format-tp12468p12473.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Thu Apr 23 16:23:08 2015
From: nop.head at gmail.com (nop head)
Date: Thu, 23 Apr 2015 21:23:08 +0100
Subject: [OpenSCAD] Voxel file format
In-Reply-To: <1429819714038-12473.post@n5.nabble.com>
References: <1429792576926-12468.post@n5.nabble.com>
	<EC2F9CC1-A36B-43C5-9884-149D3E5E5DD7@kintel.net>
	<1429819714038-12473.post@n5.nabble.com>
Message-ID: <CAEEmnrM8bfg_T4YBiyxBT=o_+=nuoeZiEqUe+Q1sfE=nXVw9+w@mail.gmail.com>

Might take more than an afternoon to run though as you would need to slice
with projection() and that isn't quick.

On 23 April 2015 at 21:08, Ivo <ivo.knutsel at gmail.com> wrote:

> kintel wrote
> > On Apr 23, 2015, at 08:36 AM, Ivo &lt;
>
> > ivo.knutsel@
>
> > &gt; wrote:
> >
> >>
> http://www.shapeways.com/blog/archives/17972-shapeways-launches-svx-voxel-file-format-for-3d-printing.html
> >> described in : http://abfab3d.com/svx-format/
> >>
> > Do shapeways have a limitation on the size of SVX files?
> > Such voxel files will easily reach a GB of raw data..
> >
> >  -Marius
>
> With the existing png export it almost seems like something that can be
> scripted together in a sunday afternoon.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Voxel-file-format-tp12468p12473.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150423/72d66f23/attachment.html>

From marius at kintel.net  Thu Apr 23 18:33:32 2015
From: marius at kintel.net (Marius Kintel)
Date: Thu, 23 Apr 2015 18:33:32 -0400
Subject: [OpenSCAD] OpenSCAD 2015.03-1 released
Message-ID: <70A2C9AC-E098-4C13-84CA-FAC8BC0486C5@kintel.net>

Hi all,

We've just released an update, OpenSCAD 2015.03-1, to address some critical issues with OpenSCAD 2015.03.
The new binaries are available for download. Linux packages will trickle in as maintainers pick it up.

Fixed issues:
#1203 - Linux: Missing icons on Xfce
#1258 - Occasional crash when exporting STL
#1260 - Minimal window width too large
#1264 - Replace All sometimes caused a hang
#1274 - Fixed some preview bugs on Intel GPUs (OpenCSG 1.4.0)
#1276 - Module recursion sometimes caused a crash
#1277 - Automatic reload sometimes messed up camera position
#1284 - Animation flicker eliminated
#1294 - Support reproducible builds
#1317 - Normals vectors in STL were sometimes 0 0 0

Cheers,

 -Marius



From stonysmith at gmail.com  Thu Apr 23 21:00:57 2015
From: stonysmith at gmail.com (stonysmith)
Date: Thu, 23 Apr 2015 18:00:57 -0700 (MST)
Subject: [OpenSCAD] Voxel file format
In-Reply-To: <CAEEmnrM8bfg_T4YBiyxBT=o_+=nuoeZiEqUe+Q1sfE=nXVw9+w@mail.gmail.com>
References: <1429792576926-12468.post@n5.nabble.com>
	<EC2F9CC1-A36B-43C5-9884-149D3E5E5DD7@kintel.net>
	<1429819714038-12473.post@n5.nabble.com>
	<CAEEmnrM8bfg_T4YBiyxBT=o_+=nuoeZiEqUe+Q1sfE=nXVw9+w@mail.gmail.com>
Message-ID: <1429837257470-12476.post@n5.nabble.com>

First, it's 1million TRIANGLES, not 1m polygons.  If you upload a file made
out of polygons, it will first be triangulated, and then fail in the upload
process for having more than the limit of triangles.

Second, I believe that, rather silently, they upped it to TWO million
triangles many months ago. (or, at least some number more than 1m)

Third, the Shapeways file size limit is still 64mb.  But, SVX must be
zipped, so the compression will help you out on the size.

Forth, I'm not real happy with the SVX implementation, the model is uploaded
as voxels (cubes), but they render them out to polygons, and then apply a
polygon reduction operation to the outer shell of the model.  The polygon
reduction they apply has the effect of smoothing the model a bit too much
for my tastes.  It may well be within the resolution of the printer, but to
me the detail produced looks terrible.



--
View this message in context: http://forum.openscad.org/Voxel-file-format-tp12468p12476.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Thu Apr 23 22:00:48 2015
From: marius at kintel.net (Marius Kintel)
Date: Thu, 23 Apr 2015 22:00:48 -0400
Subject: [OpenSCAD] Voxel file format
In-Reply-To: <1429837257470-12476.post@n5.nabble.com>
References: <1429792576926-12468.post@n5.nabble.com>
	<EC2F9CC1-A36B-43C5-9884-149D3E5E5DD7@kintel.net>
	<1429819714038-12473.post@n5.nabble.com>
	<CAEEmnrM8bfg_T4YBiyxBT=o_+=nuoeZiEqUe+Q1sfE=nXVw9+w@mail.gmail.com>
	<1429837257470-12476.post@n5.nabble.com>
Message-ID: <3F142B10-5062-40AD-AD53-A2224F808A5F@kintel.net>

On Apr 23, 2015, at 21:00 PM, stonysmith <stonysmith at gmail.com> wrote:

> [?] The polygon
> reduction they apply has the effect of smoothing the model a bit too much
> for my tastes.  It may well be within the resolution of the printer, but to
> me the detail produced looks terrible.
> 
That?s good feedback.
Perhaps a much better solution would be for OpenSCAD to perform said polygon reduction on the original design. As OpenSCAD tends to generate a lot of tiny polygons, we could probably reduce typical designs significantly before it having a large visual impact.

 -Marius



From andrew at plumb.org  Thu Apr 23 22:59:41 2015
From: andrew at plumb.org (Andrew Plumb)
Date: Thu, 23 Apr 2015 22:59:41 -0400
Subject: [OpenSCAD] Voxel file format
In-Reply-To: <3F142B10-5062-40AD-AD53-A2224F808A5F@kintel.net>
References: <1429792576926-12468.post@n5.nabble.com>
	<EC2F9CC1-A36B-43C5-9884-149D3E5E5DD7@kintel.net>
	<1429819714038-12473.post@n5.nabble.com>
	<CAEEmnrM8bfg_T4YBiyxBT=o_+=nuoeZiEqUe+Q1sfE=nXVw9+w@mail.gmail.com>
	<1429837257470-12476.post@n5.nabble.com>
	<3F142B10-5062-40AD-AD53-A2224F808A5F@kintel.net>
Message-ID: <4CB937AB-FE0D-4D3F-8BD4-29ABDA30D126@plumb.org>


> On Apr 23, 2015, at 10:00 PM, Marius Kintel <marius at kintel.net> wrote:
> 
> On Apr 23, 2015, at 21:00 PM, stonysmith <stonysmith at gmail.com> wrote:
> 
>> [?] The polygon
>> reduction they apply has the effect of smoothing the model a bit too much
>> for my tastes.  It may well be within the resolution of the printer, but to
>> me the detail produced looks terrible.
>> 
> That?s good feedback.
> Perhaps a much better solution would be for OpenSCAD to perform said polygon reduction on the original design. As OpenSCAD tends to generate a lot of tiny polygons, we could probably reduce typical designs significantly before it having a large visual impact.

CGAL does document some mesh reduction approaches:

http://doc.cgal.org/latest/Surface_mesh_simplification/ <http://doc.cgal.org/latest/Surface_mesh_simplification/>

Andrew.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150423/97e791a4/attachment.html>

From hyperair at debian.org  Fri Apr 24 00:13:02 2015
From: hyperair at debian.org (Chow Loong Jin)
Date: Fri, 24 Apr 2015 12:13:02 +0800
Subject: [OpenSCAD] threads
In-Reply-To: <55390CB8.6040801@dbtgroup.com>
References: <1429792576926-12468.post@n5.nabble.com>
	<55390CB8.6040801@dbtgroup.com>
Message-ID: <20150424041300.GJ5588@gmail.com>

On Thu, Apr 23, 2015 at 08:16:08AM -0700, Yvette S. Hirth, CCP, CDP wrote:
> hi all,
> 
> i'm trying to "cut" threads in openSCAD.  i'm using the threads.scad module
> i found on thingiverse, like so:
> 
> use <threads.scad>;
> ...
> english_thread(diameter=(632ScrewRadius*2),
> threads_per_inch=32,
> length=(coverDepth+coverThickness),
> internal=true,
> $fn=30);
> 
> gosh, is it *slow*!  i played a game of freecell and the progress meter
> hasn't budged from "just started".  and now i've finished typing this email
> and still no progress.
> 
> i put cylinders in the code to check for positioning and depth; once i got
> those right, i commented out ONLY the first cylinder and inserted just the
> code for the one thread above.  my res time (F6) was 45sec; now it could be
> hours.  from *one* thread - and i have four to gen before slicing.
> 
> i'm sure the lack of progress is due to threads.scad creating a bazillion
> polygons.  i'm not trying to complain; i'm just trying to get my stuff
> printed.
> 
> is there any alternative to threads.scad?

Use OpenSCAD 2015.03 and threads.scad from MCAD's dev branch. It's an updated
version of the threads.scad you're using. Uses list comprehension, and sweep()
for generalized extrusion of the threads, and is much faster than the
implementation you're using.

-- 
Kind regards,
Loong Jin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: Digital signature
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150424/276e677d/attachment-0001.asc>

From hyperair at debian.org  Fri Apr 24 00:14:47 2015
From: hyperair at debian.org (Chow Loong Jin)
Date: Fri, 24 Apr 2015 12:14:47 +0800
Subject: [OpenSCAD] threads
In-Reply-To: <20150424041300.GJ5588@gmail.com>
References: <1429792576926-12468.post@n5.nabble.com>
	<55390CB8.6040801@dbtgroup.com> <20150424041300.GJ5588@gmail.com>
Message-ID: <20150424041446.GK5588@gmail.com>


On Fri, Apr 24, 2015 at 12:13:00PM +0800, Chow Loong Jin wrote:
> On Thu, Apr 23, 2015 at 08:16:08AM -0700, Yvette S. Hirth, CCP, CDP wrote:
> > hi all,
> > 
> > i'm trying to "cut" threads in openSCAD.  i'm using the threads.scad module
> > i found on thingiverse, like so:
> > 
> > use <threads.scad>;
> > ...
> > english_thread(diameter=(632ScrewRadius*2),
> > threads_per_inch=32,
> > length=(coverDepth+coverThickness),
> > internal=true,
> > $fn=30);
> > 
> > gosh, is it *slow*!  i played a game of freecell and the progress meter
> > hasn't budged from "just started".  and now i've finished typing this email
> > and still no progress.
> > 
> > i put cylinders in the code to check for positioning and depth; once i got
> > those right, i commented out ONLY the first cylinder and inserted just the
> > code for the one thread above.  my res time (F6) was 45sec; now it could be
> > hours.  from *one* thread - and i have four to gen before slicing.
> > 
> > i'm sure the lack of progress is due to threads.scad creating a bazillion
> > polygons.  i'm not trying to complain; i'm just trying to get my stuff
> > printed.
> > 
> > is there any alternative to threads.scad?
> 
> Use OpenSCAD 2015.03 and threads.scad from MCAD's dev branch. It's an updated
> version of the threads.scad you're using. Uses list comprehension, and sweep()
> for generalized extrusion of the threads, and is much faster than the
> implementation you're using.

Oh, it also obeys $fs, $fa and $fn, so you'll have to tweak those values for
higher faceting resolution on small diameters. OpenSCAD's default $fs, $fa and
$fn parameters are unfortunately pretty coarse.

-- 
Kind regards,
Loong Jin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: Digital signature
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150424/04ee0023/attachment.asc>

From nop.head at gmail.com  Fri Apr 24 06:17:39 2015
From: nop.head at gmail.com (nop head)
Date: Fri, 24 Apr 2015 11:17:39 +0100
Subject: [OpenSCAD] Voxel file format
In-Reply-To: <4CB937AB-FE0D-4D3F-8BD4-29ABDA30D126@plumb.org>
References: <1429792576926-12468.post@n5.nabble.com>
	<EC2F9CC1-A36B-43C5-9884-149D3E5E5DD7@kintel.net>
	<1429819714038-12473.post@n5.nabble.com>
	<CAEEmnrM8bfg_T4YBiyxBT=o_+=nuoeZiEqUe+Q1sfE=nXVw9+w@mail.gmail.com>
	<1429837257470-12476.post@n5.nabble.com>
	<3F142B10-5062-40AD-AD53-A2224F808A5F@kintel.net>
	<4CB937AB-FE0D-4D3F-8BD4-29ABDA30D126@plumb.org>
Message-ID: <CAEEmnrP-=+bMsawQg4bq2PRX5obsaPsW3bWy7Z8H-aHrq7d0zA@mail.gmail.com>

>As OpenSCAD tends to generate a lot of tiny polygons

Really, I thought it just generated the polygons implied by the source code
with $fn, etc. Does it make some extra ones up?

On 24 April 2015 at 03:59, Andrew Plumb <andrew at plumb.org> wrote:

>
> On Apr 23, 2015, at 10:00 PM, Marius Kintel <marius at kintel.net> wrote:
>
> On Apr 23, 2015, at 21:00 PM, stonysmith <stonysmith at gmail.com> wrote:
>
> [...] The polygon
> reduction they apply has the effect of smoothing the model a bit too much
> for my tastes.  It may well be within the resolution of the printer, but to
> me the detail produced looks terrible.
>
> That's good feedback.
> Perhaps a much better solution would be for OpenSCAD to perform said
> polygon reduction on the original design. As OpenSCAD tends to generate a
> lot of tiny polygons, we could probably reduce typical designs
> significantly before it having a large visual impact.
>
>
> CGAL does document some mesh reduction approaches:
>
> http://doc.cgal.org/latest/Surface_mesh_simplification/
>
> Andrew.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150424/cfa97bdd/attachment.html>

From marius at kintel.net  Fri Apr 24 17:30:12 2015
From: marius at kintel.net (Marius Kintel)
Date: Fri, 24 Apr 2015 17:30:12 -0400
Subject: [OpenSCAD] Voxel file format
In-Reply-To: <CAEEmnrP-=+bMsawQg4bq2PRX5obsaPsW3bWy7Z8H-aHrq7d0zA@mail.gmail.com>
References: <1429792576926-12468.post@n5.nabble.com>
	<EC2F9CC1-A36B-43C5-9884-149D3E5E5DD7@kintel.net>
	<1429819714038-12473.post@n5.nabble.com>
	<CAEEmnrM8bfg_T4YBiyxBT=o_+=nuoeZiEqUe+Q1sfE=nXVw9+w@mail.gmail.com>
	<1429837257470-12476.post@n5.nabble.com>
	<3F142B10-5062-40AD-AD53-A2224F808A5F@kintel.net>
	<4CB937AB-FE0D-4D3F-8BD4-29ABDA30D126@plumb.org>
	<CAEEmnrP-=+bMsawQg4bq2PRX5obsaPsW3bWy7Z8H-aHrq7d0zA@mail.gmail.com>
Message-ID: <91A6A248-C222-4F6D-B5FF-61010A08D016@kintel.net>

On Apr 24, 2015, at 06:17 AM, nop head <nop.head at gmail.com> wrote:

> >As OpenSCAD tends to generate a lot of tiny polygons
> 
> Really, I thought it just generated the polygons implied by the source code with $fn, etc. Does it make some extra ones up?
> 
During CSG operations, tiny polygons tend to be introduced by CGAL, partially due to their infinite precision. Some of these polygons could easily be reduced to nothing by employing a topology-preserving optimization mechanism.

 -Marius



From aztecphoenix at hotmail.com  Sat Apr 25 02:21:39 2015
From: aztecphoenix at hotmail.com (aztecphoenix)
Date: Fri, 24 Apr 2015 23:21:39 -0700 (MST)
Subject: [OpenSCAD] Dual display
Message-ID: <1429942899655-12483.post@n5.nabble.com>

Does OpenSCAD support dual displays?

In other words, can I have the editor on one screen and the render displayed
on my second screen, and if so, how?



--
View this message in context: http://forum.openscad.org/Dual-display-tp12483.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Sat Apr 25 03:12:40 2015
From: marius at kintel.net (Marius Kintel)
Date: Sat, 25 Apr 2015 03:12:40 -0400
Subject: [OpenSCAD] Dual display
In-Reply-To: <1429942899655-12483.post@n5.nabble.com>
References: <1429942899655-12483.post@n5.nabble.com>
Message-ID: <7135C422-D4AB-4AEA-B3BA-FEB5C0460080@kintel.net>

On Apr 25, 2015, at 02:21 AM, aztecphoenix <aztecphoenix at hotmail.com> wrote:

> Does OpenSCAD support dual displays?
> 
> In other words, can I have the editor on one screen and the render displayed
> on my second screen, and if so, how?
> 
Two options:

1) Use an external editor and use Design->Automatic Reload and Compile
2) Detach the editor and move the detached window around as you see fit. You may have to toggle the option for making the editor detachable in Preferences->Advanced

 -Marius



From tim.thawkins at gmail.com  Sat Apr 25 03:32:20 2015
From: tim.thawkins at gmail.com (Tim Hawkins)
Date: Sat, 25 Apr 2015 07:32:20 +0000
Subject: [OpenSCAD] Dual display
In-Reply-To: <7135C422-D4AB-4AEA-B3BA-FEB5C0460080@kintel.net>
References: <1429942899655-12483.post@n5.nabble.com>
	<7135C422-D4AB-4AEA-B3BA-FEB5C0460080@kintel.net>
Message-ID: <CAEbsasQmg-67bE41MiAMb_bakKot2peYaTKKjJmyPh7-YSV6Fg@mail.gmail.com>

Sublimetext with Openscad syntax highlighting, would make a good candidate
as an external editor.

http://www.thingiverse.com/thing:119350



On Sat, Apr 25, 2015 at 3:13 PM Marius Kintel <marius at kintel.net> wrote:

> On Apr 25, 2015, at 02:21 AM, aztecphoenix <aztecphoenix at hotmail.com>
> wrote:
>
> > Does OpenSCAD support dual displays?
> >
> > In other words, can I have the editor on one screen and the render
> displayed
> > on my second screen, and if so, how?
> >
> Two options:
>
> 1) Use an external editor and use Design->Automatic Reload and Compile
> 2) Detach the editor and move the detached window around as you see fit.
> You may have to toggle the option for making the editor detachable in
> Preferences->Advanced
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150425/296ce3cc/attachment.html>

From runsun at gmail.com  Sat Apr 25 13:44:59 2015
From: runsun at gmail.com (runsun)
Date: Sat, 25 Apr 2015 10:44:59 -0700 (MST)
Subject: [OpenSCAD] Dual display
In-Reply-To: <1429942899655-12483.post@n5.nabble.com>
References: <1429942899655-12483.post@n5.nabble.com>
Message-ID: <1429983899065-12486.post@n5.nabble.com>

You should be able to drag the editor out of the program, and move it to the
other monitor. 



-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Dual-display-tp12483p12486.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Sat Apr 25 17:44:17 2015
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Sat, 25 Apr 2015 23:44:17 +0200
Subject: [OpenSCAD] Dual display
In-Reply-To: <1429983899065-12486.post@n5.nabble.com>
References: <1429942899655-12483.post@n5.nabble.com>
	<1429983899065-12486.post@n5.nabble.com>
Message-ID: <553C0AB1.5080206@arnholm.org>

On 2015-04-25 19:44, runsun wrote:
> You should be able to drag the editor out of the program, and move it to the
> other monitor.

Using an external editor is a very flexible way of using OpenSCAD. I 
have 2 side-by-side machines, one running Linux Kubuntu and the other 
running Win7. By storing the .scad file on a drive that both machines 
can see, I can for example edit with Notepad++ on Win7 and auto-compile 
with OpenSCAD on Linux, using Design->Automatic Reload and Compile. It 
works the other way around also.





From oz.at.michael at gmail.com  Sat Apr 25 19:30:13 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 25 Apr 2015 16:30:13 -0700 (MST)
Subject: [OpenSCAD] Dual display
In-Reply-To: <553C0AB1.5080206@arnholm.org>
References: <1429942899655-12483.post@n5.nabble.com>
	<1429983899065-12486.post@n5.nabble.com>
	<553C0AB1.5080206@arnholm.org>
Message-ID: <1430004613063-12488.post@n5.nabble.com>

That's an interesting approach...could edit on a less powerful PC and
compile/render on a big box....hmmm...



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Dual-display-tp12483p12488.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sat Apr 25 19:39:12 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 25 Apr 2015 16:39:12 -0700 (MST)
Subject: [OpenSCAD] Using scale with linear_extrusion for hexagon
In-Reply-To: <1429733678675-12466.post@n5.nabble.com>
References: <1429733678675-12466.post@n5.nabble.com>
Message-ID: <1430005152582-12489.post@n5.nabble.com>

Welcome to the forum.

Your post is still flagged as "This post has NOT been accepted by the
mailing list yet", so nobody gets it unless they look. You need to subscribe
to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.

re "extrude honeycomb structure which is compressed by x axis"

Sorry but I'm not getting what you are trying to do.

The scale=[0,1] means X will taper to an infinitely small size, forming the
wedge shape you have.

Perhaps scale=[0.25,0.25] will get you a tapered hex. But as I said, not
sure what your after.



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Using-scale-with-linear-extrusion-for-hexagon-tp12466p12489.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From drew at DasRogges.com  Sat Apr 25 20:21:21 2015
From: drew at DasRogges.com (Drew Rogge)
Date: Sat, 25 Apr 2015 17:21:21 -0700
Subject: [OpenSCAD] Dual display
In-Reply-To: <7135C422-D4AB-4AEA-B3BA-FEB5C0460080@kintel.net>
References: <1429942899655-12483.post@n5.nabble.com>
	<7135C422-D4AB-4AEA-B3BA-FEB5C0460080@kintel.net>
Message-ID: <553C2F81.5040904@DasRogges.com>

Speaking of using an external editor... There's a problem with the latest OpenSCAD where sometimes the built in editor has the keyboard focus even when the editor is hidden. Things get confusing when the editor is hidden but has the keyboard focus and I accidentally type something. The next time I change the file in the external editor, OpenSCAD displays a dialog box saying that the document has been modified because of the inadvertently entered text. I think that the build in editor should give up and never accept keyboard focus when it's hidden.

Drew

On 4/25/15 12:12 AM, Marius Kintel wrote:
> On Apr 25, 2015, at 02:21 AM, aztecphoenix <aztecphoenix at hotmail.com> wrote:
>
>> Does OpenSCAD support dual displays?
>>
>> In other words, can I have the editor on one screen and the render displayed
>> on my second screen, and if so, how?
>>
> Two options:
>
> 1) Use an external editor and use Design->Automatic Reload and Compile
> 2) Detach the editor and move the detached window around as you see fit. You may have to toggle the option for making the editor detachable in Preferences->Advanced
>
>   -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From kit.wallace at gmail.com  Sun Apr 26 05:38:57 2015
From: kit.wallace at gmail.com (kitwallace)
Date: Sun, 26 Apr 2015 02:38:57 -0700 (MST)
Subject: [OpenSCAD] Origami ship has Manifold problem
Message-ID: <1430041137660-12491.post@n5.nabble.com>

The following script used in my origami ship
http://www.thingiverse.com/thing:753562 generates STL which RepetierHost
finds is not manifold - any ideas as to why?
/*   origami ship   Kit Wallace*/// length of bow from centrelb=15; //
height of bowhb=10;// width midshipswm=6; // height midshipshm=3; //
waterline length e.g. from centre eg. half length of bowwl=7.5; // width of
hull from centrewh=4; // height of sailh=15; //Thickness of
paperthickness=1;// sphere qualitysteps = 20;// overall scalescale=3;module
double(axis) {       union() {          children();          mirror(axis)
children();      }  }module plane(s,t=0.5) {    hull()    for (i=[0:len(s)
-1])       translate(s[i]) sphere(t/2);         }
p1=[lb,0,hb];p2=[wl,0,0];p3=[0,wm,hm];p5=[0,0,h];p4=[0,wh,0];module
ship_q(t) {   plane([p1,p2,p3],t);   plane([p2,p3,p4],t);  
plane([p4,p2,p5],t);};$fn=steps;scale(scale)  difference() { 
double([0,1,0])      double([1,0,0])          ship_q(thickness);  }




--
View this message in context: http://forum.openscad.org/Origami-ship-has-Manifold-problem-tp12491.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150426/3bb1a450/attachment.html>

From kit.wallace at gmail.com  Sun Apr 26 06:10:54 2015
From: kit.wallace at gmail.com (kitwallace)
Date: Sun, 26 Apr 2015 03:10:54 -0700 (MST)
Subject: [OpenSCAD] Origami ship has Manifold problem
In-Reply-To: <1430041137660-12491.post@n5.nabble.com>
References: <1430041137660-12491.post@n5.nabble.com>
Message-ID: <1430043054874-12492.post@n5.nabble.com>

I think the problem boils down to unioned spheres at different angles 
sphere(20);rotate([0,40,0]) sphere(20);




--
View this message in context: http://forum.openscad.org/Origami-ship-has-Manifold-problem-tp12491p12492.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150426/f160fff1/attachment.html>

From arnholm at arnholm.org  Sun Apr 26 06:59:09 2015
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Sun, 26 Apr 2015 12:59:09 +0200
Subject: [OpenSCAD] Dual display
In-Reply-To: <1430004613063-12488.post@n5.nabble.com>
References: <1429942899655-12483.post@n5.nabble.com>	<1429983899065-12486.post@n5.nabble.com>	<553C0AB1.5080206@arnholm.org>
	<1430004613063-12488.post@n5.nabble.com>
Message-ID: <553CC4FD.5030301@arnholm.org>

On 2015-04-26 01:30, MichaelAtOz wrote:
> That's an interesting approach...could edit on a less powerful PC and
> compile/render on a big box....hmmm...

And if you install something like Synergy http://synergy-project.org/ 
you can share keyboard and mouse between the two machines even if they 
run different OSes, it becomes totally seamless. That is what I do.


From doug at moens.org  Sun Apr 26 12:43:54 2015
From: doug at moens.org (doug moen)
Date: Sun, 26 Apr 2015 12:43:54 -0400
Subject: [OpenSCAD] Origami ship has Manifold problem
In-Reply-To: <1430043054874-12492.post@n5.nabble.com>
References: <1430041137660-12491.post@n5.nabble.com>
	<1430043054874-12492.post@n5.nabble.com>
Message-ID: <CAGV6i+MSGvL5SgkJrgpw+a9P2Z38zFAAHGzcD9BM-ajCCd7iMQ@mail.gmail.com>

If I render the unioned spheres script,

sphere(20);
rotate([0,40,0]) sphere(20);

then export as STL,
then import the STL into another model,

import("/Users/doug/spherebad.stl");


and render, then I get this error message:

Rendering Polygon Mesh using CGAL...

CGAL error in CGAL_Build_PolySet: CGAL ERROR: assertion violation!

Expr: check_protocoll == 0

File: /opt/local/include/CGAL/Polyhedron_incremental_builder_3.h

Line: 199


That's not good, right? OpenSCAD shouldn't write STL files that it can't
read.



On 26 April 2015 at 06:10, kitwallace <kit.wallace at gmail.com> wrote:

> I think the problem boils down to unioned spheres at different angles
>
> sphere(20);
> rotate([0,40,0]) sphere(20);
>
>
> ------------------------------
> View this message in context: Re: Origami ship has Manifold problem
> <http://forum.openscad.org/Origami-ship-has-Manifold-problem-tp12491p12492.html>
>
> Sent from the OpenSCAD mailing list archive <http://forum.openscad.org/>
> at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150426/3989c82c/attachment.html>

From marius at kintel.net  Sun Apr 26 16:44:20 2015
From: marius at kintel.net (Marius Kintel)
Date: Sun, 26 Apr 2015 16:44:20 -0400
Subject: [OpenSCAD] Origami ship has Manifold problem
In-Reply-To: <1430043054874-12492.post@n5.nabble.com>
References: <1430041137660-12491.post@n5.nabble.com>
	<1430043054874-12492.post@n5.nabble.com>
Message-ID: <1619CAEC-D5D9-45CB-89A6-3BC0EB03F299@kintel.net>

On Apr 26, 2015, at 06:10 AM, kitwallace <kit.wallace at gmail.com> wrote:

> I think the problem boils down to unioned spheres at different angles
> sphere(20);
> rotate([0,40,0]) sphere(20);
> 
The problem is that CGAL uses infinite precision when calculating unions. When converting back to floating point, some vertices get collapsed. Such collapsing may affect topology, and in this case it collapses a very small volume into a plane, similar to this: https://github.com/openscad/openscad/issues/1042#issuecomment-70279505

This breaks the manifoldness pre-condition for reading files back into CGAL (thus breaking import) and it trips manifold checks in external software.

To fix this we should post-process CGAL results to fix degenerate cases, or better; use a different CSG library.

 -Marius



From oz.at.michael at gmail.com  Mon Apr 27 19:44:23 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Mon, 27 Apr 2015 16:44:23 -0700 (MST)
Subject: [OpenSCAD] Benchmark, recommended .scad's
Message-ID: <1430178263322-12497.post@n5.nabble.com>

I'm getting close to cutting over to my new PC.

I just need to install the graphics card, but I am testing with the built-in
Intel graphics first.

It seems relatively fast ATM.

Does anyone have suggestions for challenging (not earth stopping) code which
could be considered for benchmark comparison across my current PC (core2
2.53 GHz 4GB SSD Ion Graphics), my new one (i7 quad 3.4-3.9 GHz 16GB RAID
SSD Intel Graphics), and ditto plus a medium range Graphics card (ASUS
GeForce GTX 750 Ti Strix 2GB).

Perhaps I could build a consistent set of performance test code for use
across versions. Code exploiting different aspects of OpenSCAD internals. ??

I'm not talking about many hours of rendering, but ~2 hours max could work
if it was recommended for a particular a reason.

I'm starting with some of the examples. (#24)



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Benchmark-recommended-scad-s-tp12497.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Tue Apr 28 00:24:02 2015
From: marius at kintel.net (kintel)
Date: Mon, 27 Apr 2015 21:24:02 -0700 (MST)
Subject: [OpenSCAD] There is no pre-compiled version 2015-3-1 for Linux?
In-Reply-To: <1430142272808-12496.post@n5.nabble.com>
References: <1430142272808-12496.post@n5.nabble.com>
Message-ID: <1430195042910-12499.post@n5.nabble.com>

We usually provide Linux binaries through each individual distro. We used to
maintain statically built generic binaries, but they proved to be a bit
resource intensive to maintain, mainly due to challenges in finding and
using the correct OpenGL libraries on each install. That's possible to fix,
but again requires significant resources. The best solution in the interim
is to find packages for your distro, or build from source.

 -Marius




--
View this message in context: http://forum.openscad.org/There-is-no-pre-compiled-version-2015-3-1-for-Linux-tp12496p12499.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From hyperair at debian.org  Tue Apr 28 00:25:59 2015
From: hyperair at debian.org (Chow Loong Jin)
Date: Tue, 28 Apr 2015 12:25:59 +0800
Subject: [OpenSCAD] Benchmark, recommended .scad's
In-Reply-To: <1430178263322-12497.post@n5.nabble.com>
References: <1430178263322-12497.post@n5.nabble.com>
Message-ID: <20150428042557.GG7774@gmail.com>

On Mon, Apr 27, 2015 at 04:44:23PM -0700, MichaelAtOz wrote:
> I'm getting close to cutting over to my new PC.
> 
> I just need to install the graphics card, but I am testing with the built-in
> Intel graphics first.
> 
> It seems relatively fast ATM.
> 
> Does anyone have suggestions for challenging (not earth stopping) code which
> could be considered for benchmark comparison across my current PC (core2
> 2.53 GHz 4GB SSD Ion Graphics), my new one (i7 quad 3.4-3.9 GHz 16GB RAID
> SSD Intel Graphics), and ditto plus a medium range Graphics card (ASUS
> GeForce GTX 750 Ti Strix 2GB).
> 
> Perhaps I could build a consistent set of performance test code for use
> across versions. Code exploiting different aspects of OpenSCAD internals. ??
> 
> I'm not talking about many hours of rendering, but ~2 hours max could work
> if it was recommended for a particular a reason.
> 
> I'm starting with some of the examples. (#24)

The projector plate in this project takes 20-30 minutes to render on my Ivy
Bridge i7 laptop: https://github.com/hyperair/projector-mount/

Lots of minkowskis and hulls from using Andrew's generalized fillet library.

-- 
Kind regards,
Loong Jin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: Digital signature
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150428/59f8309e/attachment.asc>

From hyperair at debian.org  Tue Apr 28 00:31:07 2015
From: hyperair at debian.org (Chow Loong Jin)
Date: Tue, 28 Apr 2015 12:31:07 +0800
Subject: [OpenSCAD] There is no pre-compiled version 2015-3-1 for Linux?
In-Reply-To: <1430195042910-12499.post@n5.nabble.com>
References: <1430142272808-12496.post@n5.nabble.com>
	<1430195042910-12499.post@n5.nabble.com>
Message-ID: <20150428043105.GH7774@gmail.com>

On Mon, Apr 27, 2015 at 09:24:02PM -0700, kintel wrote:
> We usually provide Linux binaries through each individual distro. We used to
> maintain statically built generic binaries, but they proved to be a bit
> resource intensive to maintain, mainly due to challenges in finding and
> using the correct OpenGL libraries on each install. That's possible to fix,
> but again requires significant resources. The best solution in the interim
> is to find packages for your distro, or build from source.

If you're using Ubuntu, there's a PPA, and I forgot to upload the new version to
it. Whoop de doo. I'll get to it later today.

-- 
Kind regards,
Loong Jin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: Digital signature
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150428/27250ac5/attachment.asc>

From biskero at gmail.com  Wed Apr 29 04:08:37 2015
From: biskero at gmail.com (biskero)
Date: Wed, 29 Apr 2015 01:08:37 -0700 (MST)
Subject: [OpenSCAD] bend a pipe/tube
Message-ID: <1430294917846-12503.post@n5.nabble.com>

Hello,

new here and glad to join!
I read several posts about bending a pipe/tube but are pretty old so I
wanted to know if there is a library or function that can achieve it.

I am trying to bend/curve a oval tube/pipe (made with cylinder) for a
certain % of the length.
I read about using the Torus and attach the tube to it, is this the only
method?

thanks
Alessandro



--
View this message in context: http://forum.openscad.org/bend-a-pipe-tube-tp12503.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From hyperair at debian.org  Wed Apr 29 04:24:57 2015
From: hyperair at debian.org (Chow Loong Jin)
Date: Wed, 29 Apr 2015 16:24:57 +0800
Subject: [OpenSCAD] bend a pipe/tube
In-Reply-To: <1430294917846-12503.post@n5.nabble.com>
References: <1430294917846-12503.post@n5.nabble.com>
Message-ID: <20150429082455.GK7774@gmail.com>

On Wed, Apr 29, 2015 at 01:08:37AM -0700, biskero wrote:
> Hello,
> 
> new here and glad to join!
> I read several posts about bending a pipe/tube but are pretty old so I
> wanted to know if there is a library or function that can achieve it.
> 
> I am trying to bend/curve a oval tube/pipe (made with cylinder) for a
> certain % of the length.
> I read about using the Torus and attach the tube to it, is this the only
> method?

Check the sweep() demos in this:
https://github.com/openscad/list-comprehension-demos

-- 
Kind regards,
Loong Jin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: Digital signature
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150429/beacb0d4/attachment.asc>

From ian at dangerousprototypes.com  Wed Apr 29 04:32:24 2015
From: ian at dangerousprototypes.com (Ian)
Date: Wed, 29 Apr 2015 16:32:24 +0800
Subject: [OpenSCAD] Crash on Windows 7 when run from PHP shell_exec()
Message-ID: <55409718.9080003@dangerousprototypes.com>

Hello,

I'm using OpenSCAD to export a preview of 3dmodel files for our new 
forum. It is run using shell_exec(), exec(), etc. On my primary 
development computer it (x32 and x64, latest stable, tested) works great 
once every few minutes, but always puts up a crash report on second/next 
runs until I let it sit. Even when it crashes I still get the .png 
export properly. I tried killing the script just after executing 
openscad.com but it still crashes.

Here's the message:
Problem signature:
   Problem Event Name:    APPCRASH
   Application Name:    openscad.com
   Application Version:    0.0.0.0
   Application Timestamp:    5536adde
   Fault Module Name:    KERNELBASE.dll
   Fault Module Version:    6.1.7601.17651
   Fault Module Timestamp:    4e211319
   Exception Code:    c0000005
   Exception Offset:    0000d4d5
   OS Version:    6.1.7601.2.1.0.256.48
   Locale ID:    1033
   Additional Information 1:    0a9e
   Additional Information 2:    0a9e372d3b4ad19135b953a78882e789
   Additional Information 3:    0a9e
   Additional Information 4:    0a9e372d3b4ad19135b953a78882e789

Here's the command line run and the output php gets from running the 
program:
c:/progra~2/OpenSCAD/openscad.com -o 
D:/xampp/htdocs/dangercore/temp_upload/w1/render.png -D"model=\"C
:/Users/ian/AppData/Local/Temp/EDF4.tmp/test.STL\"" --projection=o 
D:/xampp/htdocs/dangercore/openscad
/stl2png.scad

Compiling design (CSG Products normalization)...
Normalized CSG tree has 1 elements
OpenGL Program Validation results:
Validation successful.

stl2png.scad is simply:
model = "default.stl";
import(file = model);

I just came home to try it on a different rig, and it never crashes as 
all! I will just ignore it for now as the server runs the linux version 
of openscad and doesn't seem to have any problems either.

To summarize:
1. Running from php exec() works perfectly one time, then next runs all 
create a crash report box. Leave it for 5-10 minutes and it runs fine again
2. Image still created successfully, it just seems like a crash upon exit
3. Running same command from command line or .bat file works every time
4. Crashes on work computer (x32 and x64), works fine on home computer 
and linux server
5. There seem to be no zombie processes active when it crashes

Honestly it is just a minor annoyance on one computer and is likely due 
to the configuration of that box. However, if anyone sees anything 
obvious I'd appreciate a suggestion.

Thank you and best regards,

ian





From biskero at gmail.com  Wed Apr 29 04:32:58 2015
From: biskero at gmail.com (biskero)
Date: Wed, 29 Apr 2015 01:32:58 -0700 (MST)
Subject: [OpenSCAD] bend a pipe/tube
In-Reply-To: <20150429082455.GK7774@gmail.com>
References: <1430294917846-12503.post@n5.nabble.com>
	<20150429082455.GK7774@gmail.com>
Message-ID: <1430296378422-12506.post@n5.nabble.com>

Ciao,

thanks for the link.
Any suggestions on which function would apply to my case?
I am kind of new to openscad and it will help me a lot.

Thanks
Alessandro



--
View this message in context: http://forum.openscad.org/bend-a-pipe-tube-tp12503p12506.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From hyperair at debian.org  Wed Apr 29 05:20:58 2015
From: hyperair at debian.org (Chow Loong Jin)
Date: Wed, 29 Apr 2015 17:20:58 +0800
Subject: [OpenSCAD] bend a pipe/tube
In-Reply-To: <1430296378422-12506.post@n5.nabble.com>
References: <1430294917846-12503.post@n5.nabble.com>
	<20150429082455.GK7774@gmail.com>
	<1430296378422-12506.post@n5.nabble.com>
Message-ID: <20150429092056.GL7774@gmail.com>

On Wed, Apr 29, 2015 at 01:32:58AM -0700, biskero wrote:
> Ciao,
> 
> thanks for the link.
> Any suggestions on which function would apply to my case?
> I am kind of new to openscad and it will help me a lot.

sweep(), basically. sweep() has this signature:

    sweep(shape, path_transforms, closed=false);

shape is a list of 2D coordinates in a specific order. You can generate these by
using one of the functions in <scad-utils/shapes.scad>. These coordinates can also
be fed into polygon() to see what kind of shape you're getting.

path_transforms is a list of 4x4 matrix transformations that are applied using
multmatrix. Again, you can generate these individual transformations from
functions in <scad-utils/transformations.scad>. Each of these transformations
are applied to the coordinates in shape to get their current position, and then
joined to their previous operation.

Transformations from <scad-utils/transformations.scad> are basically functions
(translation, rotation, and scaling) that are analogous to the standard
rotate(), translate() and scale() operations in OpenSCAD. These all generate 4x4
matrices representing the operation. These matrices can be multiplied together
to combine them in a similar order to how OpenSCAD works.

closed is a boolean value defining whether or not you want your shape to be a
closed loop. A rubber band is a closed loop, a string is open-ended.


Here's an example:

   sweep (circle (10, $fn = 20), [translation ([0, 0, 0]), translation ([0, 0, 20])]);

which is equivalent to:

   linear_extrude (height = 20)
   circle (r = 10, $fn = 20);

or

   hull () {
       translate ([0, 0, 0])
       cylinder (r = 10, h = 0, $fn = 20);

       translate ([0, 0, 20])
       cylinder (r = 10, h = 0, $fn = 20);
   }

Note that the last implementation won't actually work because you can't have a
cylinder with 0 height, but that's essentially what a circle is.

-- 
Kind regards,
Loong Jin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: Digital signature
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150429/de06439a/attachment.asc>

From hyperair at debian.org  Wed Apr 29 05:25:41 2015
From: hyperair at debian.org (Chow Loong Jin)
Date: Wed, 29 Apr 2015 17:25:41 +0800
Subject: [OpenSCAD] bend a pipe/tube
In-Reply-To: <20150429092056.GL7774@gmail.com>
References: <1430294917846-12503.post@n5.nabble.com>
	<20150429082455.GK7774@gmail.com>
	<1430296378422-12506.post@n5.nabble.com>
	<20150429092056.GL7774@gmail.com>
Message-ID: <20150429092540.GM7774@gmail.com>

On Wed, Apr
 29, 2015 at 05:20:56PM +0800, Chow Loong Jin wrote:
> On Wed, Apr 29, 2015 at 01:32:58AM -0700, biskero wrote:
> > Ciao,
> > 
> > thanks for the link.
> > Any suggestions on which function would apply to my case?
> > I am kind of new to openscad and it will help me a lot.
> 
> sweep(), basically. sweep() has this signature:
> 
>     sweep(shape, path_transforms, closed=false);
> 
> shape is a list of 2D coordinates in a specific order. You can generate these by
> using one of the functions in <scad-utils/shapes.scad>. These coordinates can also
> be fed into polygon() to see what kind of shape you're getting.
> 
> path_transforms is a list of 4x4 matrix transformations that are applied using
> multmatrix. Again, you can generate these individual transformations from
> functions in <scad-utils/transformations.scad>. Each of these transformations
> are applied to the coordinates in shape to get their current position, and then
> joined to their previous operation.
> 
> Transformations from <scad-utils/transformations.scad> are basically functions
> (translation, rotation, and scaling) that are analogous to the standard
> rotate(), translate() and scale() operations in OpenSCAD. These all generate 4x4
> matrices representing the operation. These matrices can be multiplied together
> to combine them in a similar order to how OpenSCAD works.
> 
> closed is a boolean value defining whether or not you want your shape to be a
> closed loop. A rubber band is a closed loop, a string is open-ended.
> 
> 
> Here's an example:
> 
>    sweep (circle (10, $fn = 20), [translation ([0, 0, 0]), translation ([0, 0, 20])]);
> 
> which is equivalent to:
> 
>    linear_extrude (height = 20)
>    circle (r = 10, $fn = 20);
> 
> or
> 
>    hull () {
>        translate ([0, 0, 0])
>        cylinder (r = 10, h = 0, $fn = 20);
> 
>        translate ([0, 0, 20])
>        cylinder (r = 10, h = 0, $fn = 20);
>    }
> 
> Note that the last implementation won't actually work because you can't have a
> cylinder with 0 height, but that's essentially what a circle is.

Oh, and here are two examples which are equivalent to help you understand how to
combine transformations:

   rotate ([0, 0, 45])
   translate ([10, 0, 0])
   cube ([10, 10, 10]);

and

   multmatrix (
       rotation ([0, 0, 45]) *
       translation ([10, 0, 0])
   )
   cube ([10, 10, 10]);

-- 
Kind regards,
Loong Jin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: Digital signature
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150429/ac25614a/attachment.asc>

From biskero at gmail.com  Wed Apr 29 05:57:53 2015
From: biskero at gmail.com (biskero)
Date: Wed, 29 Apr 2015 02:57:53 -0700 (MST)
Subject: [OpenSCAD] bend a pipe/tube
In-Reply-To: <20150429092540.GM7774@gmail.com>
References: <1430294917846-12503.post@n5.nabble.com>
	<20150429082455.GK7774@gmail.com>
	<1430296378422-12506.post@n5.nabble.com>
	<20150429092056.GL7774@gmail.com> <20150429092540.GM7774@gmail.com>
Message-ID: <1430301473585-12509.post@n5.nabble.com>

Ciao,

thanks a lot for the tips.
I am playing with your examples.

>From what I understand everything starts from 2D shapes.

But I wanted to do it with a cylinder (in my case is a tube of oval section)
and apply a curve/bend at certain point to have one section straight and
rest shaped with that curve/bend.

Alessandro



--
View this message in context: http://forum.openscad.org/bend-a-pipe-tube-tp12503p12509.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Wed Apr 29 10:24:44 2015
From: marius at kintel.net (Marius Kintel)
Date: Wed, 29 Apr 2015 10:24:44 -0400
Subject: [OpenSCAD] Crash on Windows 7 when run from PHP shell_exec()
In-Reply-To: <55409718.9080003@dangerousprototypes.com>
References: <55409718.9080003@dangerousprototypes.com>
Message-ID: <2E42DF7E-6051-4354-8D91-A43F89690E09@kintel.net>

Hi Ian,

Windows cmd-line stability is indeed not comparable to Linux or Mac, mostly due to us not having any native Windows developers on the team, so we?re dependent on getting help debugging this in the field.

If you could try a few things that might help us get some ideas:
* Run 'openscad ?info?, so we can get a good idea what your installation looks like
* Test with various types of designs, not only STL imports, to see if the crash is independent of the design or not
* Test if openscad.exe and openscad.com both give the same results. openscad.com is just a wrapper dealing with stdio as that?s a bit tricky under Windows.
* Investigate what environmental differences exist between normal cmd-line usage and PHP. Things like CWD, PATH, or other environment variables might trigger bugs
* Check if there are any traces of the crash in the Windows Event Log.
* ..and if you?re adventurous: Build from source and see if you can get a stack trace of the crash.

The symptom that it crashes on the second run is a bit odd though..

 -Marius



From marius at kintel.net  Wed Apr 29 10:31:56 2015
From: marius at kintel.net (Marius Kintel)
Date: Wed, 29 Apr 2015 10:31:56 -0400
Subject: [OpenSCAD] bend a pipe/tube
In-Reply-To: <1430301473585-12509.post@n5.nabble.com>
References: <1430294917846-12503.post@n5.nabble.com>
	<20150429082455.GK7774@gmail.com>
	<1430296378422-12506.post@n5.nabble.com>
	<20150429092056.GL7774@gmail.com> <20150429092540.GM7774@gmail.com>
	<1430301473585-12509.post@n5.nabble.com>
Message-ID: <C4CD6391-5552-402D-A2FD-0FC5C82833F2@kintel.net>

On Apr 29, 2015, at 05:57 AM, biskero <biskero at gmail.com> wrote:

> But I wanted to do it with a cylinder (in my case is a tube of oval section)
> and apply a curve/bend at certain point to have one section straight and
> rest shaped with that curve/bend.
> 
There was a very similar feature request for this a while back:
https://github.com/openscad/openscad/issues/815

This is not something we?re working on right now, but if you have any ideas to contribute to that discussion, it would help us deciding exactly what features are needed when we eventually decide to implement it.

The alternative right now is to start from 2D. The toothed belt example provides an easy mechanism for describing paths:
https://github.com/openscad/list-comprehension-demos#toothed-beltscad

If you decide to go that way, it would be very helpful if you could describe what you?re doing and why - that would help us create better helper tools for allowing people to design similar objects. ..and even include a demo based on your work and experiences.

 -Marius



From biskero at gmail.com  Wed Apr 29 10:39:37 2015
From: biskero at gmail.com (biskero)
Date: Wed, 29 Apr 2015 07:39:37 -0700 (MST)
Subject: [OpenSCAD] bend a pipe/tube
In-Reply-To: <C4CD6391-5552-402D-A2FD-0FC5C82833F2@kintel.net>
References: <1430294917846-12503.post@n5.nabble.com>
	<20150429082455.GK7774@gmail.com>
	<1430296378422-12506.post@n5.nabble.com>
	<20150429092056.GL7774@gmail.com> <20150429092540.GM7774@gmail.com>
	<1430301473585-12509.post@n5.nabble.com>
	<C4CD6391-5552-402D-A2FD-0FC5C82833F2@kintel.net>
Message-ID: <1430318377599-12512.post@n5.nabble.com>

Ciao,

yes I read that is basically what I was looking for.
It would be a great feature since you can simply tell a 3D object to follow
a direction into space to take shape.

At the moment I found a way to create an 2D ellipse and create an object
around a torus but is a pain and pretty slow process.  

I just started to use OpenSCAD so not sure I can contribute with code, but
will provide feedback in here for sure.

I am working on a 3D printed project with some cool technologies, here some
infos:  hackebike <http://twitter.com/hackebike>   

Alessandro



--
View this message in context: http://forum.openscad.org/bend-a-pipe-tube-tp12503p12512.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From biskero at gmail.com  Wed Apr 29 10:50:34 2015
From: biskero at gmail.com (biskero)
Date: Wed, 29 Apr 2015 07:50:34 -0700 (MST)
Subject: [OpenSCAD] bend a pipe/tube
In-Reply-To: <1430318377599-12512.post@n5.nabble.com>
References: <1430294917846-12503.post@n5.nabble.com>
	<20150429082455.GK7774@gmail.com>
	<1430296378422-12506.post@n5.nabble.com>
	<20150429092056.GL7774@gmail.com> <20150429092540.GM7774@gmail.com>
	<1430301473585-12509.post@n5.nabble.com>
	<C4CD6391-5552-402D-A2FD-0FC5C82833F2@kintel.net>
	<1430318377599-12512.post@n5.nabble.com>
Message-ID: <1430319034981-12513.post@n5.nabble.com>

Ciao,


here is code I found to create a ellipse tube based on torus, but it's
pretty slow when I compile it into my design, OpenSCAD starts thinking!!! :)
Any suggestion how to speed this code?


module torusSlice(r1, r2, start_angle, end_angle, convexity=10, r3=0,
$fn=64) {
	rx = r1 + r2;
    ry = rx;
    trx = rx* sqrt(2) + 1;
    try = ry* sqrt(2) + 1;
    a0 = (4 * start_angle + 0 * end_angle) / 4;
    a1 = (3 * start_angle + 1 * end_angle) / 4;
    a2 = (2 * start_angle + 2 * end_angle) / 4;
    a3 = (1 * start_angle + 3 * end_angle) / 4;
    a4 = (0 * start_angle + 4 * end_angle) / 4;
    if(end_angle > start_angle)
        intersection() {
			rotate_extrude(convexity=convexity) translate([50,0,0]) difference() {
				//circle(r2, $fn=$fn/4);
				//circle(r3, $fn=$fn/4);
                ellipse(r2,1.44*r2);
                ellipse(r3,1.44*r3);
			}

			translate([0,0,-r2-1])
			linear_extrude(height=2*r2+2)
        		polygon([
		            [0,0],
		            [trx * cos(a0), try * sin(a0)],
		            [trx * cos(a1), try * sin(a1)],
		            [trx * cos(a2), try * sin(a2)],
		            [trx * cos(a3), try * sin(a3)],
		            [trx * cos(a4), try * sin(a4)],
		            [0,0]
		       ]);
    }
}
//ellipse(50,75);

module ellipse(width, height) {
  scale([1, height/width, 1]) circle(r=width/2);
}

torusSlice(r1=10, r2=72, r3=67, start_angle=0, end_angle=25, $fn=60);


Thanks
Alessandro



--
View this message in context: http://forum.openscad.org/bend-a-pipe-tube-tp12503p12513.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Wed Apr 29 10:57:44 2015
From: marius at kintel.net (Marius Kintel)
Date: Wed, 29 Apr 2015 10:57:44 -0400
Subject: [OpenSCAD] bend a pipe/tube
In-Reply-To: <1430319034981-12513.post@n5.nabble.com>
References: <1430294917846-12503.post@n5.nabble.com>
	<20150429082455.GK7774@gmail.com>
	<1430296378422-12506.post@n5.nabble.com>
	<20150429092056.GL7774@gmail.com> <20150429092540.GM7774@gmail.com>
	<1430301473585-12509.post@n5.nabble.com>
	<C4CD6391-5552-402D-A2FD-0FC5C82833F2@kintel.net>
	<1430318377599-12512.post@n5.nabble.com>
	<1430319034981-12513.post@n5.nabble.com>
Message-ID: <FE795E3B-8906-48A0-8C31-BDCF50245CB8@kintel.net>

On Apr 29, 2015, at 10:50 AM, biskero <biskero at gmail.com> wrote:
> 
> here is code I found to create a ellipse tube based on torus, but it's
> pretty slow when I compile it into my design, OpenSCAD starts thinking!!! :)
> Any suggestion how to speed this code?
> 
The final render takes about 10 seconds. That?s normal, and you only do that once you?re done and want to export and STL.
Previews should be instantaneous.

 -Marius



From jdawgaz at gmail.com  Wed Apr 29 11:09:49 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Wed, 29 Apr 2015 08:09:49 -0700
Subject: [OpenSCAD] Sharing: how to render on command line
Message-ID: <CAMyDR6K-HMBdrymnvK+LqQH8h4B_QNUw9KBkiTFzkXotURNp8Q@mail.gmail.com>

To keep working in openscad and rendering at the same time is easy, with a
little bit of openscad command line know how.

Here is my render script: (runs on linux and os x)
Sorry windows people, I have no windows computer to write a script for you.
But I am sure something could be whipped up there.

#!/usr/bin/env bash

if [ -z $1 ]; then
    echo "usage: render <file>.scad"
    exit 1
fi

of=${1%scad}stl     # substitute <inputfile>.scad with <inputfile>.stl

echo openscad -o $of $1
openscad -o $of $1


------------
Jerry

--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150429/aeab2c55/attachment.html>

From rsc at runtux.com  Wed Apr 29 11:39:59 2015
From: rsc at runtux.com (Ralf Schlatterbeck)
Date: Wed, 29 Apr 2015 17:39:59 +0200
Subject: [OpenSCAD] bend a pipe/tube
In-Reply-To: <C4CD6391-5552-402D-A2FD-0FC5C82833F2@kintel.net>
References: <1430294917846-12503.post@n5.nabble.com>
	<20150429082455.GK7774@gmail.com>
	<1430296378422-12506.post@n5.nabble.com>
	<20150429092056.GL7774@gmail.com> <20150429092540.GM7774@gmail.com>
	<1430301473585-12509.post@n5.nabble.com>
	<C4CD6391-5552-402D-A2FD-0FC5C82833F2@kintel.net>
Message-ID: <20150429153959.GF13964@runtux.com>

On Wed, Apr 29, 2015 at 10:31:56AM -0400, Marius Kintel wrote:
> On Apr 29, 2015, at 05:57 AM, biskero <biskero at gmail.com> wrote:
> 
> > But I wanted to do it with a cylinder (in my case is a tube of oval section)
> > and apply a curve/bend at certain point to have one section straight and
> > rest shaped with that curve/bend.
> > 
> There was a very similar feature request for this a while back:
> https://github.com/openscad/openscad/issues/815

I've recently done something similar, in my case I've used the
combination of cube and (difference of) cylinder to create a small
skeleton outline, and then use minkowski with a sphere on this skeleton.

The cross-section of the resulting object isn't perfectly round (but the
smaller the skeleton is compared to the sphere this doesn't matter).

This gets painfully slow on rendering, though (but I've probably used
too many faces).
In my case I've computed the difference of two such objects (with the
second one translated).

The resulting STL is here:
http://project.runtux.com/lawnmowerpart.stl
the OpenSCAD code is on github:
https://github.com/rsc3d/rsc3d/blob/master/lawnmowerpart.scad

The relevant code is in the module "bow" (and "bows" to compute the
difference).

Ralf
-- 
Dr. Ralf Schlatterbeck                  Tel:   +43/2243/26465-16
Open Source Consulting                  www:   http://www.runtux.com
Reichergasse 131, A-3411 Weidling       email: office at runtux.com
allmenda.com member                     email: rsc at allmenda.com


From revmikelewis at gmail.com  Wed Apr 29 13:01:24 2015
From: revmikelewis at gmail.com (MLewis)
Date: Wed, 29 Apr 2015 10:01:24 -0700 (MST)
Subject: [OpenSCAD] Surface() from PNG and difference()
Message-ID: <1430326884987-12517.post@n5.nabble.com>

Hoping someone can give me a hand here:

I've got a PNG that I want to "stamp" into the side of an object. To test
this, I created the following code:

*** BEGIN CODE ***
logo="M3logo1.png";

wid=58;
logox = 587;
logoy = 623;

difference(){
    cube([wid,wid,2]);
    translate([wid/4,wid/4,3])
        scale([.5*wid/logox,.5*wid/logoy,.02])
            surface(file=logo,invert=true);

}
*** END CODE ***

As shown below, it previews (F5) correctly. However, the GUI is very
sluggish with this render.
When I attempt to render (F6), however, I get nothing:

The original PNG:
<http://forum.openscad.org/file/n12517/M3logo1.png> 

The Preview:
<http://forum.openscad.org/file/n12517/Screen_Shot_2015-04-29_at_11.png> 

The Attempt to Render:
<http://forum.openscad.org/file/n12517/Screen_Shot_2015-04-29_at_11.png> 

One other data point: I've increased my caches in the GUI, but when I run
"OpenSCAD -o foo.stl LogoTest.scad" from the command line, I get "WARNING:
GeometryEvaluator: Node didn't fit into cache" errors (three of them), the
process runs forever (as far as I can tell) and uses 99ish% of the CPU.

Any help that anyone can provide would be greatly appreciated. Thanks a lot!


Mike Lewis



--
View this message in context: http://forum.openscad.org/Surface-from-PNG-and-difference-tp12517.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From stempeldergeschichte at googlemail.com  Wed Apr 29 14:00:04 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Wed, 29 Apr 2015 20:00:04 +0200
Subject: [OpenSCAD] Surface() from PNG and difference()
In-Reply-To: <1430326884987-12517.post@n5.nabble.com>
References: <1430326884987-12517.post@n5.nabble.com>
Message-ID: <CAJgOqAAA4qX7WnSJf3Ak1vUgKqeyZVJ4x4EE1CdGc2ss02nqng@mail.gmail.com>

Your .png is quiet big.
A resolution of 587 * 623 is a lot.
Try to figure out how many triangles this surface would have: 731 402.
This will bring Openscad to its knees.
I havent checked the manual, but I seem to remember that there is a limit
of 100*100 for the surface command.

Hope it helps.

P.S.: the 2 screen shots dont display



2015-04-29 19:01 GMT+02:00 MLewis <revmikelewis at gmail.com>:

> Hoping someone can give me a hand here:
>
> I've got a PNG that I want to "stamp" into the side of an object. To test
> this, I created the following code:
>
> *** BEGIN CODE ***
> logo="M3logo1.png";
>
> wid=58;
> logox = 587;
> logoy = 623;
>
> difference(){
>     cube([wid,wid,2]);
>     translate([wid/4,wid/4,3])
>         scale([.5*wid/logox,.5*wid/logoy,.02])
>             surface(file=logo,invert=true);
>
> }
> *** END CODE ***
>
> As shown below, it previews (F5) correctly. However, the GUI is very
> sluggish with this render.
> When I attempt to render (F6), however, I get nothing:
>
> The original PNG:
> <http://forum.openscad.org/file/n12517/M3logo1.png>
>
> The Preview:
> <http://forum.openscad.org/file/n12517/Screen_Shot_2015-04-29_at_11.png>
>
> The Attempt to Render:
> <http://forum.openscad.org/file/n12517/Screen_Shot_2015-04-29_at_11.png>
>
> One other data point: I've increased my caches in the GUI, but when I run
> "OpenSCAD -o foo.stl LogoTest.scad" from the command line, I get "WARNING:
> GeometryEvaluator: Node didn't fit into cache" errors (three of them), the
> process runs forever (as far as I can tell) and uses 99ish% of the CPU.
>
> Any help that anyone can provide would be greatly appreciated. Thanks a
> lot!
>
>
> Mike Lewis
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Surface-from-PNG-and-difference-tp12517.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>



-- 
stempeldergeschichte at googlemail.com <karsten at rohrbach.de>

P.S. Falls meine E-Mail k?rzer ausf?llt als Dir angenehm ist:
Ich probiere gerade aus kurze Antworten statt gar keine Antworten zu
schreiben.
Wenn Du gerne mehr lesen m?chtest, dann lass es mich bitte wissen.

P.S. In case my e-mail is shorter than you enjoy:
I am currently trying short replies instead of no replies at all.
Please let me know, if you like to read more.

Enjoy!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150429/6f804078/attachment.html>

From Torsten.Paul at gmx.de  Wed Apr 29 14:04:36 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Wed, 29 Apr 2015 20:04:36 +0200
Subject: [OpenSCAD] Surface() from PNG and difference()
In-Reply-To: <1430326884987-12517.post@n5.nabble.com>
References: <1430326884987-12517.post@n5.nabble.com>
Message-ID: <55411D34.9070001@gmx.de>

On 04/29/2015 07:01 PM, MLewis wrote:
> I've got a PNG that I want to "stamp" into the side of an object. To test
> this, I created the following code:
>
Try scaling down the image a bit. The way surface() creates the object is
not ideal for this type of usage as it creates a huge number of vertices
making the difference very slow.
The option to import images as 2D shape will hopefully come soon, that
would probably make things quite a bit faster, e.g.
(https://github.com/openscad/openscad/pull/1110). To get a similar result
it would be possible to convert the image to DXF using inkscape.

With size 200x212 the model renders in 48 seconds on my notebook.

ciao,
   Torsten.



From ed.nisley at pobox.com  Wed Apr 29 14:38:33 2015
From: ed.nisley at pobox.com (Ed Nisley)
Date: Wed, 29 Apr 2015 14:38:33 -0400
Subject: [OpenSCAD] Surface() from PNG and difference()
In-Reply-To: <1430326884987-12517.post@n5.nabble.com>
References: <1430326884987-12517.post@n5.nabble.com>
Message-ID: <55412529.3030400@pobox.com>

On 04/29/2015 01:01 PM, MLewis wrote:
> logox = 587;
> logoy = 623;

There's the problem: too many pixels.

In round numbers, anything over about 300x300 pixels produces too many 
polygons / faces, causing OpenSCAD to grind to a halt while chewing up 
all available memory & swap space in a vain attempt to perform CSG.

Scaling the PNG image by 1/8 = 75x81 ran for 9 s and by 1/4 = 150x163 
ran for 40 s. With more patience, 300x326 would eventually finish.

The PNG is transparent and the logo ran right up to the edges. I laid it 
over a white background and added a thin white border, which eliminated 
the "degenerate polygon" complaints.

The "invert=true" option produces nasty undercuts on the 
reduced-resolution images, because the grayscale works the wrong way. I 
think you'll get better results with a white logo on a black background, 
regardless of the resolution.

I found much of that out the hard way while making 3D printed cookie 
presses:

http://softsolder.com/2012/11/28/automated-cookie-cutters-fine-tuning/

Gritty resolution sufficed for those...

-- 
Ed
softsolder.com


From hyperair at debian.org  Thu Apr 30 01:14:19 2015
From: hyperair at debian.org (Chow Loong Jin)
Date: Thu, 30 Apr 2015 13:14:19 +0800
Subject: [OpenSCAD] bend a pipe/tube
In-Reply-To: <1430319034981-12513.post@n5.nabble.com>
References: <1430294917846-12503.post@n5.nabble.com>
	<20150429082455.GK7774@gmail.com>
	<1430296378422-12506.post@n5.nabble.com>
	<20150429092056.GL7774@gmail.com> <20150429092540.GM7774@gmail.com>
	<1430301473585-12509.post@n5.nabble.com>
	<C4CD6391-5552-402D-A2FD-0FC5C82833F2@kintel.net>
	<1430318377599-12512.post@n5.nabble.com>
	<1430319034981-12513.post@n5.nabble.com>
Message-ID: <20150430051417.GN7774@gmail.com>

On Wed, Apr 29, 2015 at 07:50:34AM -0700, biskero wrote:
> Ciao,
> 
> 
> here is code I found to create a ellipse tube based on torus, but it's
> pretty slow when I compile it into my design, OpenSCAD starts thinking!!! :)
> Any suggestion how to speed this code?
>
> 			translate([0,0,-r2-1])
> 			linear_extrude(height=2*r2+2)
>         		polygon([
> 		            [0,0],
> 		            [trx * cos(a0), try * sin(a0)],
> 		            [trx * cos(a1), try * sin(a1)],
> 		            [trx * cos(a2), try * sin(a2)],
> 		            [trx * cos(a3), try * sin(a3)],
> 		            [trx * cos(a4), try * sin(a4)],
> 		            [0,0]
> 		       ]);

This bit can be done using pieSlice() from MCAD.

-- 
Kind regards,
Loong Jin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: Digital signature
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150430/9243a8a7/attachment.asc>

From biskero at gmail.com  Thu Apr 30 12:52:03 2015
From: biskero at gmail.com (biskero)
Date: Thu, 30 Apr 2015 09:52:03 -0700 (MST)
Subject: [OpenSCAD] bend a pipe/tube
In-Reply-To: <20150430051417.GN7774@gmail.com>
References: <1430294917846-12503.post@n5.nabble.com>
	<20150429082455.GK7774@gmail.com>
	<1430296378422-12506.post@n5.nabble.com>
	<20150429092056.GL7774@gmail.com> <20150429092540.GM7774@gmail.com>
	<1430301473585-12509.post@n5.nabble.com>
	<C4CD6391-5552-402D-A2FD-0FC5C82833F2@kintel.net>
	<1430318377599-12512.post@n5.nabble.com>
	<1430319034981-12513.post@n5.nabble.com>
	<20150430051417.GN7774@gmail.com>
Message-ID: <1430412723901-12523.post@n5.nabble.com>

Ciao,

I looked at what you said about changing the following code but not sure how
to do it with the lib you mention:

translate([0,0,-r2-1]) 
                        linear_extrude(height=2*r2+2) 
        polygon([ 
                            [0,0], 
                            [trx * cos(a0), try * sin(a0)], 
                            [trx * cos(a1), try * sin(a1)], 
                            [trx * cos(a2), try * sin(a2)], 
                            [trx * cos(a3), try * sin(a3)], 
                            [trx * cos(a4), try * sin(a4)], 
                            [0,0] 
                       ]); 

how do I do it?

Thanks
Alessandro




--
View this message in context: http://forum.openscad.org/bend-a-pipe-tube-tp12503p12523.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


