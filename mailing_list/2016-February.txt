From arnholm at arnholm.org  Mon Feb  1 03:36:26 2016
From: arnholm at arnholm.org (arnholm at arnholm.org)
Date: Mon, 01 Feb 2016 09:36:26 +0100
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <1454280049987-16004.post@n5.nabble.com>
References: <1454162690678-15979.post@n5.nabble.com>
	<1454186197963-15983.post@n5.nabble.com>
	<1454248661598-15990.post@n5.nabble.com>
	<CAMyDR6L9mO+HWXweFu_fkxk3==au5cA+G1u-wRVCUSusxKfSYg@mail.gmail.com>
	<1454260206888-15995.post@n5.nabble.com>
	<1454264354336-15996.post@n5.nabble.com>
	<1454265242051-15999.post@n5.nabble.com>
	<1454280049987-16004.post@n5.nabble.com>
Message-ID: <5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>

On 2016-01-31 23:40, MichaelAtOz wrote:
> CGAL is not called all the time in rendering, when t needs to do a 
> boolean it
> will be called, hence why each separately is OK.
> 
> The carriage STL is bad, it has self intersections
> <http://forum.openscad.org/file/n16004/td15979.jpg>

These cases appear to be good examples illustrating that STL will always 
be a problem for import with the intent of performing further boolean 
operations. The fact that different software report different problems 
(or sometimes none at all), is a further aspect of this.

STL isn't perfect as input to slicers, but for that purpose it isn't 
quite as critical that everything is water tight. For booleans, however 
it is critical. Put differently, any format that does not bring along 
its own topology will be an eternal problem for booleans.

Carsten Arnholm


From nop.head at gmail.com  Mon Feb  1 04:26:10 2016
From: nop.head at gmail.com (nop head)
Date: Mon, 1 Feb 2016 09:26:10 +0000
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
References: <1454162690678-15979.post@n5.nabble.com>
	<1454186197963-15983.post@n5.nabble.com>
	<1454248661598-15990.post@n5.nabble.com>
	<CAMyDR6L9mO+HWXweFu_fkxk3==au5cA+G1u-wRVCUSusxKfSYg@mail.gmail.com>
	<1454260206888-15995.post@n5.nabble.com>
	<1454264354336-15996.post@n5.nabble.com>
	<1454265242051-15999.post@n5.nabble.com>
	<1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
Message-ID: <CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>

It doesn't matter what the file format is, if it has self intersections
some programs won't like it, others don't care. If you look at the
kisslicer key you see there is no colour for self intersections.

Also what classes as degenerate triangles seems to vary between programs. A
true degenerate triangle has zero area, so is a line or a point but very
thin triangles are counted as degenerate by some programs.

I think anything with vertices too close together will upset OpenScad due
to its snap to grid, nothing to do with STL.

You keep repeating STL cant preserve topology, but that doesn't make it
true. If it is written correctly and read correctly topology can be
preserved unambiguously it is just implicit not explicit. If the source or
target resolution is different from the file resolution then it is
difficult to get right, which is why most programs are buggy.

Using a file format with explicit topology would still fail in this case.

On 1 February 2016 at 08:36, <arnholm at arnholm.org> wrote:

> On 2016-01-31 23:40, MichaelAtOz wrote:
>
>> CGAL is not called all the time in rendering, when t needs to do a
>> boolean it
>> will be called, hence why each separately is OK.
>>
>> The carriage STL is bad, it has self intersections
>> <http://forum.openscad.org/file/n16004/td15979.jpg>
>>
>
> These cases appear to be good examples illustrating that STL will always
> be a problem for import with the intent of performing further boolean
> operations. The fact that different software report different problems (or
> sometimes none at all), is a further aspect of this.
>
> STL isn't perfect as input to slicers, but for that purpose it isn't quite
> as critical that everything is water tight. For booleans, however it is
> critical. Put differently, any format that does not bring along its own
> topology will be an eternal problem for booleans.
>
> Carsten Arnholm
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160201/6b098528/attachment.html>

From Torsten.Paul at gmx.de  Mon Feb  1 13:50:57 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 1 Feb 2016 19:50:57 +0100
Subject: [OpenSCAD] Image Size by Animate
In-Reply-To: <trinity-98501d10-52a7-467a-9333-d732b378f264-1453727691749@3capp-gmx-bs43>
References: <1453707153859-15884.post@n5.nabble.com>
	<CAEEmnrN=+vXWsKsoUNg+Mvrn3DYEu+PGSfqvKQTYtBTz21N0Ug@mail.gmail.com>
	<trinity-3bc93de3-cb71-4404-9ce6-f9a750210aaa-1453725036703@3capp-gmx-bs43>
	<CAEEmnrNfKKN=N-zGXtAP-2-677r4yz4tiaW=VKFwQak_bCZ6TQ@mail.gmail.com>
	<trinity-98501d10-52a7-467a-9333-d732b378f264-1453727691749@3capp-gmx-bs43>
Message-ID: <56AFA911.90605@gmx.de>

On 01/25/2016 02:14 PM, Torsten Paul wrote:
>> Possibly changing the GUI window size with a script variable
>> is a step too far, but displaying it on the status bar is a
>> big need for me. I can't accurately preview my assembly diagrams.
>>
> Yep, that's what could be the short term workaround to allow some
> common sizes to be selected in the GUI and showing the actual size.
> 
So it turns out that Qt is not really collaborating for giving
a menu option to resize the viewport. I found no solution that
works in an acceptable way (without destroying the whole layout
if the editor and/or the console window is on).
I guess that means we need to get the off-screen rendering
working.

Still the latest snapshots have at least the size display in
the status bar.

ciao,
  Torsten.



From nop.head at gmail.com  Mon Feb  1 14:19:38 2016
From: nop.head at gmail.com (nop head)
Date: Mon, 1 Feb 2016 19:19:38 +0000
Subject: [OpenSCAD] Image Size by Animate
In-Reply-To: <56AFA911.90605@gmx.de>
References: <1453707153859-15884.post@n5.nabble.com>
	<CAEEmnrN=+vXWsKsoUNg+Mvrn3DYEu+PGSfqvKQTYtBTz21N0Ug@mail.gmail.com>
	<trinity-3bc93de3-cb71-4404-9ce6-f9a750210aaa-1453725036703@3capp-gmx-bs43>
	<CAEEmnrNfKKN=N-zGXtAP-2-677r4yz4tiaW=VKFwQak_bCZ6TQ@mail.gmail.com>
	<trinity-98501d10-52a7-467a-9333-d732b378f264-1453727691749@3capp-gmx-bs43>
	<56AFA911.90605@gmx.de>
Message-ID: <CAEEmnrO2g_4afvgsPX5qnxoCaOqkaPkQF07pJymPP0tS0ZwPFA@mail.gmail.com>

Presumably the user can drag the bars to get the size wanted to appear on
the status bar?

If so it's odd there isn't a programmatic way to simulate that.

On 1 February 2016 at 18:50, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 01/25/2016 02:14 PM, Torsten Paul wrote:
> >> Possibly changing the GUI window size with a script variable
> >> is a step too far, but displaying it on the status bar is a
> >> big need for me. I can't accurately preview my assembly diagrams.
> >>
> > Yep, that's what could be the short term workaround to allow some
> > common sizes to be selected in the GUI and showing the actual size.
> >
> So it turns out that Qt is not really collaborating for giving
> a menu option to resize the viewport. I found no solution that
> works in an acceptable way (without destroying the whole layout
> if the editor and/or the console window is on).
> I guess that means we need to get the off-screen rendering
> working.
>
> Still the latest snapshots have at least the size display in
> the status bar.
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160201/99d636a0/attachment.html>

From Torsten.Paul at gmx.de  Mon Feb  1 14:32:23 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 1 Feb 2016 20:32:23 +0100
Subject: [OpenSCAD] Image Size by Animate
In-Reply-To: <CAEEmnrO2g_4afvgsPX5qnxoCaOqkaPkQF07pJymPP0tS0ZwPFA@mail.gmail.com>
References: <1453707153859-15884.post@n5.nabble.com>
	<CAEEmnrN=+vXWsKsoUNg+Mvrn3DYEu+PGSfqvKQTYtBTz21N0Ug@mail.gmail.com>
	<trinity-3bc93de3-cb71-4404-9ce6-f9a750210aaa-1453725036703@3capp-gmx-bs43>
	<CAEEmnrNfKKN=N-zGXtAP-2-677r4yz4tiaW=VKFwQak_bCZ6TQ@mail.gmail.com>
	<trinity-98501d10-52a7-467a-9333-d732b378f264-1453727691749@3capp-gmx-bs43>
	<56AFA911.90605@gmx.de>
	<CAEEmnrO2g_4afvgsPX5qnxoCaOqkaPkQF07pJymPP0tS0ZwPFA@mail.gmail.com>
Message-ID: <56AFB2C7.9040107@gmx.de>

On 02/01/2016 08:19 PM, nop head wrote:
> Presumably the user can drag the bars to get the size wanted to
> appear on the status bar?
> 
Yes.

> If so it's odd there isn't a programmatic way to simulate that.
> 
Yes, but that also changes the whole window in a random way
and resizes the docked windows to unusable sizes.
There might be a solution that works by playing with all the
possible layout options, but I could not find it. I gave up
fighting against the layout manager after a couple of hours.

ciao,
  Torsten.



From arnholm at arnholm.org  Mon Feb  1 14:49:40 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Mon, 1 Feb 2016 20:49:40 +0100
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
References: <1454162690678-15979.post@n5.nabble.com>
	<1454186197963-15983.post@n5.nabble.com>
	<1454248661598-15990.post@n5.nabble.com>
	<CAMyDR6L9mO+HWXweFu_fkxk3==au5cA+G1u-wRVCUSusxKfSYg@mail.gmail.com>
	<1454260206888-15995.post@n5.nabble.com>
	<1454264354336-15996.post@n5.nabble.com>
	<1454265242051-15999.post@n5.nabble.com>
	<1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
Message-ID: <56AFB6D4.3040002@arnholm.org>

On 01. feb. 2016 10:26, nop head wrote:
> It doesn't matter what the file format is, if it has self intersections
> some programs won't like it, others don't care.

That's pretty much beside the issue. If the original topology is 
self-intersecting or otherwise wrong, the file format obviously does not 
matter. However, when the file representation does not include explicit 
topology, then you have no way of knowing what the original definition 
was, it might have been good. It might be the guess the software made on 
import that was wrong, you cannot tell. That was sort of my point.

Also, the fact you point to, that different programs interpret the same 
input differently, should be a pretty strong sign that using geometry 
only representation is too weak for further boolean work.

> If you look at the
> kisslicer key you see there is no colour for self intersections.

Sure, but how is that relevant for topology and boolean operations? I 
Use KISSlicer. KISSlicer is a slicer and does not do boolean operations. 
As I mentioned earlier "STL isn't perfect as input to slicers, but for 
that purpose it isn't quite as critical that everything is water tight."

> Also what classes as degenerate triangles seems to vary between
> programs.

This is talking about geometry. Topology is completely decoupled from 
geometry.

> A true degenerate triangle has zero area, so is a line or a
> point but very thin triangles are counted as degenerate by some programs.

Again, this is geometry.

> I think anything with vertices too close together will upset OpenScad
> due to its snap to grid, nothing to do with STL.

Again, you are talking about geometry. That is a different issue, 
although important.

> You keep repeating STL cant preserve topology, but that doesn't make it
> true.

Well, you keep asserting the opposite, but mere assertions does not make 
it true either. Therefore, let me give you one very simple example where 
a geometry-only representation will fail to preserve the original 
topology: http://arnholm.org/tmp/openscad/topology_stl.png

The above is simplified, but from a real-life case in a related field 
and has not been constructed from pure theory.

> If it is written correctly and read correctly topology can be
> preserved unambiguously it is just implicit not explicit.

With all due respect, this is not true. See above for one example.

> If the source
> or target resolution is different from the file resolution then it is
> difficult to get right, which is why most programs are buggy.

Correct geometry is also very important, I agree with that. OpenSCAD has 
the problem you describe.

But it is a separate issue from topology. I will give some examples 
below on how STL as implemented also fails to preserve geometry 
correctly given the intent of performing boolean operations.

> Using a file format with explicit topology would still fail in this case.

Understanding communicated topology is unrelated to numerical 
resolution. How you apply the topology and geometry is something else.

On the question of geometry: I did some simple tests on creating and 
importing STL files with the intent of performing boolean operations. 
The .scad and related STL files (the STL files can also be created from 
the example itself) are found in 
http://arnholm.org/tmp/openscad/topo_geo_test.7z

I also copy the OpenSCAD code below. This illustrates that STL files as 
implemented today also fail to preserve geometry 100%, leading to errors 
when trying to import and perform boolean operations. Like it or not, 
STL is not suited for such purposes.


// Render with "F6" on each step
step=1;

if(step==1)
    planes();
    // export as "step1.stl"

else if(step==2)
    import(file="step1.stl");
    // re-export as "step2.stl"

else if(step==3)
    diff3();
else if(step==4)
    diff4();
else if(step==5)
    diff5();
else if(step==6)
    diff6();

module planes(h=.1)
{
   rotate([22,33,44])
   union() {
      linear_extrude(height=h)square(30);
      translate([-25,15,-15])
      rotate([90,0,0])
      linear_extrude(height=h)square(30);
   }
}

module diff3()
{
    difference() {
       planes();
       planes();
    }
}

module diff4()
{
    difference() {
       planes();
       import(file="step1.stl");
    }
}

module diff5()
{
    difference() {
       planes();
       import(file="step2.stl");
    }
}

module diff6()
{
    difference() {
       import(file="step1.stl");
       import(file="step2.stl");
    }
}

Carsten Arnholm



From doug at moens.org  Mon Feb  1 15:06:31 2016
From: doug at moens.org (doug moen)
Date: Mon, 1 Feb 2016 15:06:31 -0500
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <56AFB6D4.3040002@arnholm.org>
References: <1454162690678-15979.post@n5.nabble.com>
	<1454186197963-15983.post@n5.nabble.com>
	<1454248661598-15990.post@n5.nabble.com>
	<CAMyDR6L9mO+HWXweFu_fkxk3==au5cA+G1u-wRVCUSusxKfSYg@mail.gmail.com>
	<1454260206888-15995.post@n5.nabble.com>
	<1454264354336-15996.post@n5.nabble.com>
	<1454265242051-15999.post@n5.nabble.com>
	<1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
Message-ID: <CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>

What is the alternative to STL? What's an example of a polyhedral mesh file
format that includes explicit topology?

On 1 February 2016 at 14:49, Carsten Arnholm <arnholm at arnholm.org> wrote:

> On 01. feb. 2016 10:26, nop head wrote:
>
>> It doesn't matter what the file format is, if it has self intersections
>> some programs won't like it, others don't care.
>>
>
> That's pretty much beside the issue. If the original topology is
> self-intersecting or otherwise wrong, the file format obviously does not
> matter. However, when the file representation does not include explicit
> topology, then you have no way of knowing what the original definition was,
> it might have been good. It might be the guess the software made on import
> that was wrong, you cannot tell. That was sort of my point.
>
> Also, the fact you point to, that different programs interpret the same
> input differently, should be a pretty strong sign that using geometry only
> representation is too weak for further boolean work.
>
> If you look at the
>> kisslicer key you see there is no colour for self intersections.
>>
>
> Sure, but how is that relevant for topology and boolean operations? I Use
> KISSlicer. KISSlicer is a slicer and does not do boolean operations. As I
> mentioned earlier "STL isn't perfect as input to slicers, but for that
> purpose it isn't quite as critical that everything is water tight."
>
> Also what classes as degenerate triangles seems to vary between
>> programs.
>>
>
> This is talking about geometry. Topology is completely decoupled from
> geometry.
>
> A true degenerate triangle has zero area, so is a line or a
>> point but very thin triangles are counted as degenerate by some programs.
>>
>
> Again, this is geometry.
>
> I think anything with vertices too close together will upset OpenScad
>> due to its snap to grid, nothing to do with STL.
>>
>
> Again, you are talking about geometry. That is a different issue, although
> important.
>
> You keep repeating STL cant preserve topology, but that doesn't make it
>> true.
>>
>
> Well, you keep asserting the opposite, but mere assertions does not make
> it true either. Therefore, let me give you one very simple example where a
> geometry-only representation will fail to preserve the original topology:
> http://arnholm.org/tmp/openscad/topology_stl.png
>
> The above is simplified, but from a real-life case in a related field and
> has not been constructed from pure theory.
>
> If it is written correctly and read correctly topology can be
>> preserved unambiguously it is just implicit not explicit.
>>
>
> With all due respect, this is not true. See above for one example.
>
> If the source
>> or target resolution is different from the file resolution then it is
>> difficult to get right, which is why most programs are buggy.
>>
>
> Correct geometry is also very important, I agree with that. OpenSCAD has
> the problem you describe.
>
> But it is a separate issue from topology. I will give some examples below
> on how STL as implemented also fails to preserve geometry correctly given
> the intent of performing boolean operations.
>
> Using a file format with explicit topology would still fail in this case.
>>
>
> Understanding communicated topology is unrelated to numerical resolution.
> How you apply the topology and geometry is something else.
>
> On the question of geometry: I did some simple tests on creating and
> importing STL files with the intent of performing boolean operations. The
> .scad and related STL files (the STL files can also be created from the
> example itself) are found in
> http://arnholm.org/tmp/openscad/topo_geo_test.7z
>
> I also copy the OpenSCAD code below. This illustrates that STL files as
> implemented today also fail to preserve geometry 100%, leading to errors
> when trying to import and perform boolean operations. Like it or not, STL
> is not suited for such purposes.
>
>
> // Render with "F6" on each step
> step=1;
>
> if(step==1)
>    planes();
>    // export as "step1.stl"
>
> else if(step==2)
>    import(file="step1.stl");
>    // re-export as "step2.stl"
>
> else if(step==3)
>    diff3();
> else if(step==4)
>    diff4();
> else if(step==5)
>    diff5();
> else if(step==6)
>    diff6();
>
> module planes(h=.1)
> {
>   rotate([22,33,44])
>   union() {
>      linear_extrude(height=h)square(30);
>      translate([-25,15,-15])
>      rotate([90,0,0])
>      linear_extrude(height=h)square(30);
>   }
> }
>
> module diff3()
> {
>    difference() {
>       planes();
>       planes();
>    }
> }
>
> module diff4()
> {
>    difference() {
>       planes();
>       import(file="step1.stl");
>    }
> }
>
> module diff5()
> {
>    difference() {
>       planes();
>       import(file="step2.stl");
>    }
> }
>
> module diff6()
> {
>    difference() {
>       import(file="step1.stl");
>       import(file="step2.stl");
>
>    }
> }
>
> Carsten Arnholm
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160201/8884b3f3/attachment.html>

From arnholm at arnholm.org  Mon Feb  1 15:25:05 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Mon, 1 Feb 2016 21:25:05 +0100
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
References: <1454162690678-15979.post@n5.nabble.com>
	<1454186197963-15983.post@n5.nabble.com>
	<1454248661598-15990.post@n5.nabble.com>
	<CAMyDR6L9mO+HWXweFu_fkxk3==au5cA+G1u-wRVCUSusxKfSYg@mail.gmail.com>
	<1454260206888-15995.post@n5.nabble.com>
	<1454264354336-15996.post@n5.nabble.com>
	<1454265242051-15999.post@n5.nabble.com>
	<1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
Message-ID: <56AFBF21.5060301@arnholm.org>

On 01. feb. 2016 21:06, doug moen wrote:
> What is the alternative to STL? What's an example of a polyhedral mesh
> file format that includes explicit topology?

AMF has already been mentioned. Not because it is ideal, but simply 
because it exists and is already available as an export format in OpenSCAD.

Other possibilities have been mentioned also.

Carsten Arnholm



From Torsten.Paul at gmx.de  Mon Feb  1 18:52:02 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Tue, 2 Feb 2016 00:52:02 +0100
Subject: [OpenSCAD] New 3MF file format
In-Reply-To: <55B12969.6080303@gmx.de>
References: <1430489757472-12525.post@n5.nabble.com>
	<554392A0.7070702@pobox.com>
	<CAGV6i+PmP-sPxtjkLUbwhBjKx1XTZL1NsCk+FWtdkGaYV0Ht5Q@mail.gmail.com>
	<5543E82B.5080102@pobox.com>
	<CAGV6i+Mod9ojLPe5hB+-g=g9LOrF1E-3Hapwi9=WQWy7A0b_gg@mail.gmail.com>
	<1432710163995-12755.post@n5.nabble.com>
	<CAOcn1AtcyNg17HnJxgG5OVMdot8TyDiKkXdLZwVBbW9YC7D2mA@mail.gmail.com>
	<CAGV6i+OdHbVZwywjhczM1Jv-afCdu68MdUrC-ey93OUxnoy9tw@mail.gmail.com>
	<trinity-ed57696f-ab2b-4d0a-b0f0-490888011d14-1432729000253@3capp-gmx-bs37>
	<55B123E3.1030002@gmx.de>
	<CAPoio6eGyRPitme23cBdyak24nC+ab3UHB=jpb1mfaHJ6wwnLA@mail.gmail.com>
	<55B12969.6080303@gmx.de>
Message-ID: <56AFEFA2.5020109@gmx.de>

And another update regarding 3MF support...

The official library now has support for GCC compilation and it
actually does read and write 3MF files :-).

So basic support is possible (mainly limited by what OpenSCAD
can handle / produce right now). There seem to be some issues
with some of the example files, I guess it will be interesting
to see if there's any feedback for the bug report.
( https://github.com/3MFConsortium/lib3mf/issues/7 )

Interesting note: Ultimaker joined the 3MF Consortium last
December.

https://ultimaker.com/press/22-ultimaker-announces-joining-3mf-consortium-as-founding-member

ciao,
  Torsten.



From nop.head at gmail.com  Mon Feb  1 19:24:12 2016
From: nop.head at gmail.com (nop head)
Date: Tue, 2 Feb 2016 00:24:12 +0000
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <56AFBF21.5060301@arnholm.org>
References: <1454162690678-15979.post@n5.nabble.com>
	<1454186197963-15983.post@n5.nabble.com>
	<1454248661598-15990.post@n5.nabble.com>
	<CAMyDR6L9mO+HWXweFu_fkxk3==au5cA+G1u-wRVCUSusxKfSYg@mail.gmail.com>
	<1454260206888-15995.post@n5.nabble.com>
	<1454264354336-15996.post@n5.nabble.com>
	<1454265242051-15999.post@n5.nabble.com>
	<1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
Message-ID: <CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>

The example you gave of the crack is non-manifold if vertices 5 & 7 are not
distinct.  STL can represent manifold meshes unambiguously and you can then
do boolean ops on them. It is no different to constructing a polyhedron
inside OpenScad. As long as you make it manifold CGAL will work, if you
don't it will barf.

As soon as you have topologically distinct vertices that are numerically
the same STL can't represent the topology, but that doesn't matter because
we are only interested in 2 manifold meshes for CSG.

As long as you have the property that topologically distinct vertices that
are numerically distinct then you can convert a mesh to a list of triangles
and then reconstruct the mesh from those triangles. It will be exactly the
same. Although there is no explicit topological information in the file the
reconstructed mesh has exactly the same topology as the original. If this
wasn't the case STL would be completely useless.

The weakness of STL is it relies on vertex values not being rounded or
truncated. They must be written and read with great care, especially in
ASCII. The reason lots of programs can't read it or write it correctly is
because it isn't easy. OpenScad can't do it correctly in all circumstances.
As soon as you round or truncate you run the risk of breaking the topology.
Yes topology: if you collapse two vertices that were not previously
touching you have changed the geometry minutely but you have changed the
topology, which is what causes the problem.

Degenerate triangles are a different problem. Agreed they don't break the
topology and are still manifold. They still have a winding order, so you
can work out which way out they face but you can't work out a face normal,
which upsets some programs.

Your multi-step problem is nothing to do with topology. It is simply that
converting the vertices to float from a higher resolution has moved them a
bit. When differenced with the internal representation you get a non zero
result. When the vertices are very close then truncation can cause
topological corruption and that needs to be corrected before writing the
STL, but in this case that doesn't apply. The original vertices are at
least 0.1mm apart.

When imported the results are differenced with the non-trucated versions
the result is very thin slivers and OpenScad seems to not be able to handle
them correctly. Not too surprising as they only differ by less that the
resolution of a float.

Doing the same thing with any other file format will result in the same
mess if the vertex representation is different from OpenScad's. The
problems are purely due to truncation to floats.

step1.stl and step2.stl have exactly the same vertices. The only difference
is the face normals differ slightly. This must be because they are
calculated using the higher precision internal representation, not the
actual vertex values written in the file. Step 6 is correctly empty.

On 1 February 2016 at 20:25, Carsten Arnholm <arnholm at arnholm.org> wrote:

> On 01. feb. 2016 21:06, doug moen wrote:
>
>> What is the alternative to STL? What's an example of a polyhedral mesh
>> file format that includes explicit topology?
>>
>
> AMF has already been mentioned. Not because it is ideal, but simply
> because it exists and is already available as an export format in OpenSCAD.
>
> Other possibilities have been mentioned also.
>
>
> Carsten Arnholm
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160202/59eba3e5/attachment.html>

From oz.at.michael at gmail.com  Mon Feb  1 19:45:02 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Mon, 1 Feb 2016 17:45:02 -0700 (MST)
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
References: <1454260206888-15995.post@n5.nabble.com>
	<1454264354336-15996.post@n5.nabble.com>
	<1454265242051-15999.post@n5.nabble.com>
	<1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
Message-ID: <1454373902134-16018.post@n5.nabble.com>

I thought I'd add this observation

When adding a mesh in MashLab it offers the pre-checked option "Unify
Duplicated Verticies"

Without it checked the STL from above has these self intersects
<http://forum.openscad.org/file/n16018/ML_non-unify.jpg> 

With it checked
<http://forum.openscad.org/file/n16018/ML_unify.jpg> 

While it didn't fix everything, perhaps the code used to "unify" could be of
use in OpenSCAD?



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/dxf-and-stl-import-rendering-issue-tp15979p16018.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From bioinformatics at gringene.org  Tue Feb  2 04:05:21 2016
From: bioinformatics at gringene.org (David Eccles (gringer))
Date: Tue, 2 Feb 2016 02:05:21 -0700 (MST)
Subject: [OpenSCAD] outer form of spiral
In-Reply-To: <1454336825005-16009.post@n5.nabble.com>
References: <1454336825005-16009.post@n5.nabble.com>
Message-ID: <1454403921066-16019.post@n5.nabble.com>

Did you mean something like this:
<http://forum.openscad.org/file/n16019/spiral.png> 

The things that twist does are a little weird; I don't think there's an easy
function for doing that sort of thing. Here's the code I used to make the
image above:

use <path_extrude.scad>;
h=6;
rad=8;
loops=1.5;
sph=40;
myPoints=([[4,-h],[0,-h],[4-2*h,0],[0,h],[4,h]]);
myPath = [ for(t = [0:10:359]) [
    rad*cos(loops*t),
    -rad*sin(loops*t),
    t/360 * sph
    ] ];
path_extrude(points=myPoints, path=myPath, 
    merge=false, trimEnds = false);

Which needs my path extrude script as well:

http://www.thingiverse.com/thing:186660



--
View this message in context: http://forum.openscad.org/outer-form-of-spiral-tp16009p16019.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Tue Feb  2 14:00:52 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Tue, 2 Feb 2016 20:00:52 +0100
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
References: <1454162690678-15979.post@n5.nabble.com>
	<1454186197963-15983.post@n5.nabble.com>
	<1454248661598-15990.post@n5.nabble.com>
	<CAMyDR6L9mO+HWXweFu_fkxk3==au5cA+G1u-wRVCUSusxKfSYg@mail.gmail.com>
	<1454260206888-15995.post@n5.nabble.com>
	<1454264354336-15996.post@n5.nabble.com>
	<1454265242051-15999.post@n5.nabble.com>
	<1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
Message-ID: <56B0FCE4.8030506@arnholm.org>

On 02. feb. 2016 01:24, nop head wrote:
> The example you gave of the crack is non-manifold if vertices 5 & 7 are
> not distinct.

The example is manifold and the vertices 5 and 7 are distinct because I 
told you they are, and it is plain to see. If you think not it is 
because you are confusing geometry and topology.

> STL can represent manifold meshes unambiguously and you
> can then do boolean ops on them.

Now it is your turn to simply repeat something that has been 
demonstrated to be incorrect.

> As soon as you have topologically distinct vertices that are numerically
> the same STL can't represent the topology,

I am forced to conclude you are unable to separate between the 
definition of geometry and topology.

> As long as you have the property that topologically distinct vertices
> that are numerically distinct then you can convert a mesh to a list of
> triangles and then reconstruct the mesh from those triangles. It will be
> exactly the same.

I am afraid we are wasting time here. As long as you cannot understand 
that topology is independent of geometry, we get nowhere.

You are saying it works only in some cases, although what you call 
"topologically distinct vertices" isn't what you think, you are thinking 
of *geometrically* distinct points, and that is not topology.

> The weakness of STL is it relies on vertex values not being rounded or
> truncated. They must be written and read with great care, especially in
> ASCII.

You are still talking about geometry. There are no shared vertices in 
STL, only within each and every triangle. My example yesterday 
demonstrated that OpenSCAD fails on your criterion "They must be written 
and read with great care", because when you re-import the result is not 
the same as the original. Geometry-wise, this is because the coordinates 
written by OpenSCAD are no better than single precision floats (6 
significant digits).

> Your multi-step problem is nothing to do with topology.

Please do not misrepresent what I said. I said very explicitly "On the 
question of geometry: I did some simple tests on creating and importing 
STL file".

Now you say it is nothing to do with topology. Right, I told you so. I 
was demonstrating that the problem with STL is not limited to issues 
with preserving topology, but it also has issues with preserving 
geometry. It fails on both accounts. The .scad file demonstrates the 
geometry problem.

> When imported the results are differenced with the non-trucated versions
> the result is very thin slivers and OpenScad seems to not be able to
> handle them correctly.

Right, the geometry is not properly preserved on STL the way it is 
implemented in OpenSCAD, it is destined to fail for such cases.

If you fail to handle both topology and geometry properly and 
separately, there will be problems. The suggested ways to rectify these 
problems have already been discussed, so I will not repeat.

Carsten Arnholm



From nop.head at gmail.com  Tue Feb  2 15:38:39 2016
From: nop.head at gmail.com (nop head)
Date: Tue, 2 Feb 2016 20:38:39 +0000
Subject: [OpenSCAD] Fwd:  dxf and stl import/rendering issue
In-Reply-To: <CAEEmnrMwd77=8Z=Sxf-TsJ13Mpk-FFHp=JiJ3VgvYueZWKi3Kw@mail.gmail.com>
References: <1454162690678-15979.post@n5.nabble.com>
	<1454186197963-15983.post@n5.nabble.com>
	<1454248661598-15990.post@n5.nabble.com>
	<CAMyDR6L9mO+HWXweFu_fkxk3==au5cA+G1u-wRVCUSusxKfSYg@mail.gmail.com>
	<1454260206888-15995.post@n5.nabble.com>
	<1454264354336-15996.post@n5.nabble.com>
	<1454265242051-15999.post@n5.nabble.com>
	<1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrMwd77=8Z=Sxf-TsJ13Mpk-FFHp=JiJ3VgvYueZWKi3Kw@mail.gmail.com>
Message-ID: <CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>

On 2 February 2016 at 19:00, Carsten Arnholm <arnholm at arnholm.org> wrote:

> On 02. feb. 2016 01:24, nop head wrote:
>
>> The example you gave of the crack is non-manifold if vertices 5 & 7 are
>> not distinct.
>>
>
> The example is manifold and the vertices 5 and 7 are distinct because I
> told you they are, and it is plain to see. If you think not it is because
> you are confusing geometry and topology.
>

OK if they are distinct then there is no problem representing them in STL.
Your "plate with crack represented as STL" is not how that surface will
actually be represented in an STL file.

difference() {
    cube([20, 10, 1]);
    translate([10, 0, 0])
        cube([1, 5, 3], center = true);

}



This is how the triangles appear in the STL file.


?
?
Here I import the STL file and do CSG on it.

difference() {
    import("cracked_plate.stl");

    translate([5,5,-1]) cylinder(h = 3, r = 1);
}

?


>
> STL can represent manifold meshes unambiguously and you
>> can then do boolean ops on them.
>>
>
> Now it is your turn to simply repeat something that has been demonstrated
> to be incorrect.
>

No the above shows that you are incorrect. You don't seem to able to
comprehend how a triangle mesh can represent a 3D object. There is no
information lost writing an STL file and reading again unless the vertices
can't be represented accurately in floats.


>
> As soon as you have topologically distinct vertices that are numerically
>> the same STL can't represent the topology,
>>
>
> I am forced to conclude you are unable to separate between the definition
> of geometry and topology.
>

No it is you. You don't seem to grasp that STL representation preserves
everything apart from possible numerical exactness as long as the reader
and writer preserve distinct vertices.


>
> As long as you have the property that topologically distinct vertices
>> that are numerically distinct then you can convert a mesh to a list of
>> triangles and then reconstruct the mesh from those triangles. It will be
>> exactly the same.
>>
>
> I am afraid we are wasting time here. As long as you cannot understand
> that topology is independent of geometry, we get nowhere.
>
> You are saying it works only in some cases, although what you call
> "topologically distinct vertices" isn't what you think, you are thinking of
> *geometrically* distinct points, and that is not topology.
>

If distinct vertices get merged then there is no problem importing it again
UNLESS the topology is changed from a 2-manifold to something else due to
self intersections.


>
> The weakness of STL is it relies on vertex values not being rounded or
>> truncated. They must be written and read with great care, especially in
>> ASCII.
>>
>
> You are still talking about geometry. There are no shared vertices in STL,
> only within each and every triangle. My example yesterday demonstrated that
> OpenSCAD fails on your criterion "They must be written and read with great
> care", because when you re-import the result is not the same as the
> original. Geometry-wise, this is because the coordinates written by
> OpenSCAD are no better than single precision floats (6 significant digits).
>

In my mind the geometry has not changed when you import your STL files.
They are still geometrically classed as intersecting planes. The fact their
vertices are minutely different doesn't change the geometrical
classification or the topology. You can still perform CSG on them.


>
> Your multi-step problem is nothing to do with topology.
>>
>
> Please do not misrepresent what I said. I said very explicitly "On the
> question of geometry: I did some simple tests on creating and importing STL
> file".
>
> Now you say it is nothing to do with topology. Right, I told you so. I was
> demonstrating that the problem with STL is not limited to issues with
> preserving topology, but it also has issues with preserving geometry. It
> fails on both accounts. The .scad file demonstrates the geometry problem.
>

All it shows is that if you create some planes with irrational vertices
they can't be represented accurately in floats. If you shift those vertices
by minute amounts and then subtract from the original you get some minute
slivers that OpenScad cannot handle. You might as well have done this:

module planes(h=.1)
{
  rotate([22,33,44])
  union() {
     linear_extrude(height=h)square(30);
     translate([-25,15,-15])
     rotate([90,0,0])
     linear_extrude(height=h)square(30);
  }
}

module diff3()
{
   difference() {
      planes();
      rotate([0.0001,.0001,.0001])
        planes();
   }
}

diff3();

Top level object is a 3D object:

Simple: no

Vertices: 64

Halfedges: 198

Edges: 99

Halffacets: 76

Facets: 38

Volumes: 4

WARNING: Object may not be a valid 2-manifold and may need repair!


Nothing to do with STL files at all.


> When imported the results are differenced with the non-trucated versions
>> the result is very thin slivers and OpenScad seems to not be able to
>> handle them correctly.
>>
>
> Right, the geometry is not properly preserved on STL the way it is
> implemented in OpenSCAD, it is destined to fail for such cases.
>

No the geometry is preserved. They are still intersecting rectangles
planes. They haven't become triangular or something.


>
> If you fail to handle both topology and geometry properly and separately,
> there will be problems. The suggested ways to rectify these problems have
> already been discussed, so I will not repeat.


If as a I said many times before "if the conversion to floats does not
collapse vertices and the object is 2-manifold then the STL file can be
read back into OpenScad and operated on with CSG". There isn't  any missing
topological information as you keep suggesting. It is implicit in the list
of triangles. When it is read in you can make a list of unique vertices and
a list of triangle edges that connect them. You can then convert to
OpenScad's internal representation just the same as the polyhedron module
can given a list of points and faces linking those points. The result is a
first class OpenScad object. It has lost nothing being converted to STL and
back except perhaps some numerical accuracy.

The loss of numerical accuracy is nothing to do with STL in particular. Any
file format that is less precise that OpenScad's internal precision will do
the same. My understanding is some vertices are represented with rational
numbers, so it is unlikely any file format will preserves those exactly. So
your example would probably do the same exported and imported as AMF.
Having extra topological information in the file doesn't make any
difference at all unless you have the situation where numerical truncation
collapses vertices. Then you can use extra information about the faces and
edges to know which vertices are actually distinct topologically but not
numerically. However it is possible for the STL writer to handle this, it
is just that many don't because it isn't trivial to do. Vertices that
collapse numerically have to be tweaked by an LSB so they are distinct but
that has to be done in a way that doesn't corrupt the topology. E.g. if
they are moved in the wrong direction they might cause flipped triangles or
self intersections.

So basically everything you have asserted about STL files is false and I
have demonstrated that with counter examples. We seem to have different
ideas of what geometry and topology are but that isn't really central to
the issue of what STL files can or can't do.


>
>
> Carsten Arnholm
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160202/312aee93/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: netfabb Basic 6.1 - cracked_plate.fabbproject 02022016 192129.bmp.jpg
Type: image/jpeg
Size: 71938 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160202/312aee93/attachment.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cracked_plate_with_hole.png
Type: image/png
Size: 6114 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160202/312aee93/attachment.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cracked_plate.png
Type: image/png
Size: 6419 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160202/312aee93/attachment-0001.png>

From arnholm at arnholm.org  Tue Feb  2 16:10:04 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Tue, 2 Feb 2016 22:10:04 +0100
Subject: [OpenSCAD] Fwd: dxf and stl import/rendering issue
In-Reply-To: <CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
References: <1454162690678-15979.post@n5.nabble.com>
	<1454186197963-15983.post@n5.nabble.com>
	<1454248661598-15990.post@n5.nabble.com>
	<CAMyDR6L9mO+HWXweFu_fkxk3==au5cA+G1u-wRVCUSusxKfSYg@mail.gmail.com>
	<1454260206888-15995.post@n5.nabble.com>
	<1454264354336-15996.post@n5.nabble.com>
	<1454265242051-15999.post@n5.nabble.com>
	<1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrMwd77=8Z=Sxf-TsJ13Mpk-FFHp=JiJ3VgvYueZWKi3Kw@mail.gmail.com>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
Message-ID: <56B11B2C.6040700@arnholm.org>

On 02. feb. 2016 21:38, nop head wrote:
> No it is you.

Just continue where you are heading, you will do it anyway. There is no 
point in debating this anymore.

Carsten Arnholm



From nop.head at gmail.com  Tue Feb  2 16:21:51 2016
From: nop.head at gmail.com (nop head)
Date: Tue, 2 Feb 2016 21:21:51 +0000
Subject: [OpenSCAD] Fwd: dxf and stl import/rendering issue
In-Reply-To: <56B11B2C.6040700@arnholm.org>
References: <1454162690678-15979.post@n5.nabble.com>
	<1454186197963-15983.post@n5.nabble.com>
	<1454248661598-15990.post@n5.nabble.com>
	<CAMyDR6L9mO+HWXweFu_fkxk3==au5cA+G1u-wRVCUSusxKfSYg@mail.gmail.com>
	<1454260206888-15995.post@n5.nabble.com>
	<1454264354336-15996.post@n5.nabble.com>
	<1454265242051-15999.post@n5.nabble.com>
	<1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrMwd77=8Z=Sxf-TsJ13Mpk-FFHp=JiJ3VgvYueZWKi3Kw@mail.gmail.com>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
Message-ID: <CAEEmnrM0cW98L4sZpPhfW=u11WZ0Aj7b=7pn3ESpOWC0c9WWUA@mail.gmail.com>

I don't understand what you mean by that but if you mean that I will
continue to use STL files to represent manifold geometry without any loss
of topological information you will be dead right.

On 2 February 2016 at 21:10, Carsten Arnholm <arnholm at arnholm.org> wrote:

> On 02. feb. 2016 21:38, nop head wrote:
>
>> No it is you.
>>
>
> Just continue where you are heading, you will do it anyway. There is no
> point in debating this anymore.
>
>
> Carsten Arnholm
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160202/5bf9a028/attachment.html>

From triffid.hunter at gmail.com  Wed Feb  3 01:37:43 2016
From: triffid.hunter at gmail.com (Triffid Hunter)
Date: Wed, 3 Feb 2016 14:37:43 +0800
Subject: [OpenSCAD] OpenSCAD IF statement not working
In-Reply-To: <56AE63A0.7070306@sehorne.org>
References: <56AE63A0.7070306@sehorne.org>
Message-ID: <CACL3eKAmtiATtEv6iRGL=pcbO9d_7ptBXBN-5_17ruYE7zNpBA@mail.gmail.com>

because OpenSCAD isn't a sequential language, it's functional.

Once a variable is declared, it remains fixed at the provided value until
it goes out of scope.

You create a *new* x inside the braces, set it to 5, then immediately
discard it. Your echo statement spits out the value of the toplevel x,
which you've set to zero.

OpenSCAD is *not* like C/Java/Python/whatever else you're used to. It's got
its own thing going on which, once you get used to it, has its own beauty.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160203/0b8d0df7/attachment.html>

From rcmpersiano at gmail.com  Wed Feb  3 06:46:27 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Wed, 3 Feb 2016 04:46:27 -0700 (MST)
Subject: [OpenSCAD] outer form of spiral
In-Reply-To: <1454403921066-16019.post@n5.nabble.com>
References: <1454336825005-16009.post@n5.nabble.com>
	<1454403921066-16019.post@n5.nabble.com>
Message-ID: <1454499987892-16025.post@n5.nabble.com>

Nice solution. However, I could not achive the same clean design when the
spiral axis is the Y axis:

myPath = [ for(t = [0:10:359]) [
    rad*cos(loops*t),
    t/360 * sph,
    -rad*sin(loops*t)
    ] ];

It seems that path_extrude is not affine invariant.



--
View this message in context: http://forum.openscad.org/outer-form-of-spiral-tp16009p16025.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Wed Feb  3 10:07:31 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Wed, 3 Feb 2016 08:07:31 -0700 (MST)
Subject: [OpenSCAD] Fwd: dxf and stl import/rendering issue
In-Reply-To: <56B11B2C.6040700@arnholm.org>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
Message-ID: <1454512051472-16026.post@n5.nabble.com>

cacb wrote
> There is no point in debating this anymore.
> 
> Carsten Arnholm

Sorry, Carsten, but I desagree. This is a fascinating discussion!

You may code a polyhedron in OSCAD topologically representing a Klein bottle
but for any set of vertices you use the result will not represent a Klein
bottle. Non-orientable spaces are not embedable in Euclidean 3D spaces. So,
even with added topological information, some models are misundertanded or
misrepresented by any CAD software.

Now, consider the following two polyhedrons:

p1 = [ [0,0,0], [0,0,100], [100,0,0] , [0,100,0] ];
f1 = [ [0,1,2], [0,3,1], [1,3,2], [0,2,3] ];
module P(){
  polyhedron( points=p1, faces=f1);
}

t2 = [10,10,10];
p2 = concat( p1,  [ [0,0,0] + t2, [0,0,100] + t2, [100,0,0] +t2, [0,100,0]
+t2];    
f2 = [ [0,1,2], [0,3,1], [1,3,2], [0,2,3], // just the 4 first points
       [4,5,6], [4,7,5], [5,7,6], [4,6,7] ];// just the 4 last points
module Q(){
 polyhedron( points=p2, faces=f2);
};

P() is a tetrahedron. Q() is formed of two intersecting tetrahedrons. You
may render any of them and generate their STLs without any error. I was able
to union Q() with a small cube centered at the origin with no CGAL error.
But don't try it with a bigger cube. Neither try any projection-cut of Q()
translating it down by something between 10 and 110. The imported STL of it
shows the same behaviours of CGAL.

If you load the STL of Q() in Slic3r or Simplify3D you will be able to
generate G-code files. And print it! However don't have great expectancy of
them. Slic3r and Simplify3D will show distinct interpretations of the STL:
Slic3r will take the union of the two tetrahedrons and Simplify3D will leave
a void where they intersect.

The lesson here is that a topological 2-manifold embeded in 3D with
self-intersection is a trouble for all software. It is hard for the
algorithms to detect self-intersections. And there is not an unique way to
interpret what it means, what is inside, what it represents.

I agree with your criticism to STL format. But the inclusion of topological
information is not sufficient to get rid of troubles. From the point of view
of CAD software and 3D printer software, both, topology and geometry, must
be considered together.








--
View this message in context: http://forum.openscad.org/dxf-and-stl-import-rendering-issue-tp15979p16026.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Wed Feb  3 11:33:28 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 3 Feb 2016 16:33:28 +0000
Subject: [OpenSCAD] Fwd: dxf and stl import/rendering issue
In-Reply-To: <1454512051472-16026.post@n5.nabble.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
Message-ID: <CAEEmnrM-87A20xDZOE35LkhxZ44U1_W0vj_-U=STni=tcpUXfg@mail.gmail.com>

Yes polyhedron should actually check the object is manifold and so should
import. You don't get any errors until CGAL operates on it and then only
cryptic ones.

Also CGALs simple: yes is misleading. I thought simple meant it was
manifold but it must mean something else. Volumes: 3 is a give away.

On 3 February 2016 at 15:07, Ronaldo <rcmpersiano at gmail.com> wrote:

> cacb wrote
> > There is no point in debating this anymore.
> >
> > Carsten Arnholm
>
> Sorry, Carsten, but I desagree. This is a fascinating discussion!
>
> You may code a polyhedron in OSCAD topologically representing a Klein
> bottle
> but for any set of vertices you use the result will not represent a Klein
> bottle. Non-orientable spaces are not embedable in Euclidean 3D spaces. So,
> even with added topological information, some models are misundertanded or
> misrepresented by any CAD software.
>
> Now, consider the following two polyhedrons:
>
> p1 = [ [0,0,0], [0,0,100], [100,0,0] , [0,100,0] ];
> f1 = [ [0,1,2], [0,3,1], [1,3,2], [0,2,3] ];
> module P(){
>   polyhedron( points=p1, faces=f1);
> }
>
> t2 = [10,10,10];
> p2 = concat( p1,  [ [0,0,0] + t2, [0,0,100] + t2, [100,0,0] +t2, [0,100,0]
> +t2];
> f2 = [ [0,1,2], [0,3,1], [1,3,2], [0,2,3], // just the 4 first points
>        [4,5,6], [4,7,5], [5,7,6], [4,6,7] ];// just the 4 last points
> module Q(){
>  polyhedron( points=p2, faces=f2);
> };
>
> P() is a tetrahedron. Q() is formed of two intersecting tetrahedrons. You
> may render any of them and generate their STLs without any error. I was
> able
> to union Q() with a small cube centered at the origin with no CGAL error.
> But don't try it with a bigger cube. Neither try any projection-cut of Q()
> translating it down by something between 10 and 110. The imported STL of it
> shows the same behaviours of CGAL.
>
> If you load the STL of Q() in Slic3r or Simplify3D you will be able to
> generate G-code files. And print it! However don't have great expectancy of
> them. Slic3r and Simplify3D will show distinct interpretations of the STL:
> Slic3r will take the union of the two tetrahedrons and Simplify3D will
> leave
> a void where they intersect.
>
> The lesson here is that a topological 2-manifold embeded in 3D with
> self-intersection is a trouble for all software. It is hard for the
> algorithms to detect self-intersections. And there is not an unique way to
> interpret what it means, what is inside, what it represents.
>
> I agree with your criticism to STL format. But the inclusion of topological
> information is not sufficient to get rid of troubles. From the point of
> view
> of CAD software and 3D printer software, both, topology and geometry, must
> be considered together.
>
>
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/dxf-and-stl-import-rendering-issue-tp15979p16026.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160203/4e11a0eb/attachment.html>

From arnholm at arnholm.org  Wed Feb  3 12:44:26 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Wed, 3 Feb 2016 18:44:26 +0100
Subject: [OpenSCAD] Fwd: dxf and stl import/rendering issue
In-Reply-To: <1454512051472-16026.post@n5.nabble.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org> <1454512051472-16026.post@n5.nabble.com>
Message-ID: <56B23C7A.8030605@arnholm.org>

On 03. feb. 2016 16:07, Ronaldo wrote:
> cacb wrote
>> There is no point in debating this anymore.
>>
>> Carsten Arnholm
>
> Sorry, Carsten, but I desagree. This is a fascinating discussion!

I don't have any issues discussing these topics with open minds, anyone 
willing to be constructive and consider the factual evidence. I just 
resent being met with misrepresentations of my own position in 
combination with simple strawmen.

You bring in new aspects, which I find interesting, so I will comment. 
Thank you for taking the initiative to do so.

> You may code a polyhedron in OSCAD topologically representing a Klein bottle
> but for any set of vertices you use the result will not represent a Klein
> bottle. Non-orientable spaces are not embedable in Euclidean 3D spaces. So,
> even with added topological information, some models are misundertanded or
> misrepresented by any CAD software.

A Klein bottle is a rather theoretical self-intersecting thing, I am 
mostly interested in physical things that can be realized. That does not 
invalidate what you say, but it is not really an argument in favour of 
an even worse alternative: No topology and degraded geometry (as is the 
case with STL).

> P() is a tetrahedron. Q() is formed of two intersecting tetrahedrons. You
> may render any of them and generate their STLs without any error.

It is not contested that it is possible to create meaningful STL files 
for many cases. Obviously it is, I have done so. As I have stressed, the 
message is that STL fails for the class of problems being discussed, 
i.e. import further booleans.  If STL is the "end of the line" with the 
intent of slicing and printing it works in most (but not necessarily 
all) cases.

> I was able
> to union Q() with a small cube centered at the origin with no CGAL error.
> But don't try it with a bigger cube. Neither try any projection-cut of Q()
> translating it down by something between 10 and 110. The imported STL of it
> shows the same behaviours of CGAL.

I am not 100% sure exactly what you are saying here, it seems to me you 
are pointing to the fact that there are several situations where 
exporting to STL and importing with the intent of doing boolean 
operations will cause unsolvable problems. If that is what you are 
saying, I agree. If I have misunderstood, please accept my apology.

> If you load the STL of Q() in Slic3r or Simplify3D you will be able to
> generate G-code files. And print it! However don't have great expectancy of
> them. Slic3r and Simplify3D will show distinct interpretations of the STL:
> Slic3r will take the union of the two tetrahedrons and Simplify3D will leave
> a void where they intersect.

This is an interesting observation in support of what I said above and 
earlier. Even for the primary purpose of 3d printing, STL does not work 
very well in some cases.

> The lesson here is that a topological 2-manifold embeded in 3D with
> self-intersection is a trouble for all software. It is hard for the
> algorithms to detect self-intersections. And there is not an unique way to
> interpret what it means, what is inside, what it represents.

"All software" is a wide definition. 3d modeling has many applications, 
not just 3d printing. I think what you are describing is either the 
result of a boolean operation gone wrong or a failure to represent the 
presumably correct result on an external file (STL) so that other 
software have a chance to interpret it correctly. It is hard to say what 
it is when the topology is non-existent.

My point is that we should try to be as as explicit as possible about 
the nature of the models created. The most common way to do that for 3d 
meshes is to separate geometry (vertex coordinates) from topology and 
describe the topological connections. This is how it is done in FEM 
analysis for example. It is similar in the CAD world (B-rep).

> I agree with your criticism to STL format. But the inclusion of topological
> information is not sufficient to get rid of troubles.

I don't mean to suggest that including topology will solve every problem 
known to man, and I have not said so. There are still many ways things 
can fail. But topology is a well established way of describing models 
accurately, and it will solve a vast amount of problems seen in real life.

> From the point of view
> of CAD software and 3D printer software, both, topology and geometry, must
> be considered together.

If you mean that both topology and geometry needs to be carefully 
considered, that was also my message.

Thank you for the interesting comments.

Carsten Arnholm



From rcmpersiano at gmail.com  Wed Feb  3 13:19:56 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Wed, 3 Feb 2016 11:19:56 -0700 (MST)
Subject: [OpenSCAD] Fwd: dxf and stl import/rendering issue
In-Reply-To: <CAEEmnrM-87A20xDZOE35LkhxZ44U1_W0vj_-U=STni=tcpUXfg@mail.gmail.com>
References: <CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<CAEEmnrM-87A20xDZOE35LkhxZ44U1_W0vj_-U=STni=tcpUXfg@mail.gmail.com>
Message-ID: <1454523596149-16029.post@n5.nabble.com>

nophead wrote
> You don't get any errors until CGAL operates on it and then only
> cryptic ones.

That is not exactly true. CGAL processed without any error message the union
(and even difference) of Q() with a small cube centered at the origin. It
outcries only if the cube side is between 20 and 220.

> Also CGALs simple: yes is misleading. I thought simple meant it was
> manifold but it must mean something else.

Manifold is simple because you can deal with it using simpler algorithms.
But there is non-manifolds with singularities simple enough to be easily
processed or even 3d printed.

>  Volumes: 3 is a give away.

I didn't get it.




--
View this message in context: http://forum.openscad.org/dxf-and-stl-import-rendering-issue-tp15979p16029.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Wed Feb  3 13:50:41 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 3 Feb 2016 18:50:41 +0000
Subject: [OpenSCAD] Fwd: dxf and stl import/rendering issue
In-Reply-To: <56B23C7A.8030605@arnholm.org>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
Message-ID: <CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>

I don't understand how this is a strawman argument.

The central point is of contention seems to be whether a simple list of
triangles can convey topology implicitly or whether extra topological
information is required.

My argument is that as long as the mesh is 2 manifold and as long as
distinct vertices are numerically distinct and identical vertices are
numerically identical in the file then all the edge information is not
needed. You can reconstruct the edge information by building a table of
unique vertices and connecting them with the triangle edges they belong to.
You should then find any pair of vertices should either not be connected or
connected by two triangle edges into opposite directions. You then know
exactly how the triangles are connected, so you know the complete surface
topology.

Your argument is that topology is lost by exporting to STL and when
reimported you cannot do CSG operations. You supported it by two examples
but neither actually show this. The crack example has a diagram that
suggests the STL file will ignore the crack. The diagram states  "vertices
5 & 7" have identical coordinates. So I replied it was non manifold. Then
you said "The example is manifold and the vertices 5 and 7 are distinct
because I told you they are, and it is plain to see." Well its plain to see
the vertices are distinct and therefore can't have identical coordinates.
If they actually have identical coordinates the object is not 2 manifold
and you won't be able to do CSG on it anyway, regardless of whether it is
written to STL or not. It isn't something that can physically exist and I
can't find a way of making it in OpenScad. I might be able to make a crack
so thin it gets lost when converted to float but I have always said that
STL only works when the vertices are numerically distinct in the STL file.

Your second example simply shows loss of numerical accuracy converting
OpenScad's internal representation to strings and back. It also shows
OpenScad can't difference two objects that are nearly identical but not
quite. It doesn't show writing to STL  loses some topological information.
You can in fact do CSG on the imported version.  You just can't difference
it with the non-imported version.

STL files only go wrong in the real world because many programs write
non-manifold objects into them or the readers and writers are not careful
with truncation and rounding. You will still get problems with other file
formats that do store the topology explicitly if the topology is not
manifold if you try to do CSG with it in OpenScad. As, has been
demonstrated Ronaldo, it doesn't like self intersecting shapes.




On 3 February 2016 at 17:44, Carsten Arnholm <arnholm at arnholm.org> wrote:

> On 03. feb. 2016 16:07, Ronaldo wrote:
>
>> cacb wrote
>>
>>> There is no point in debating this anymore.
>>>
>>> Carsten Arnholm
>>>
>>
>> Sorry, Carsten, but I desagree. This is a fascinating discussion!
>>
>
> I don't have any issues discussing these topics with open minds, anyone
> willing to be constructive and consider the factual evidence. I just resent
> being met with misrepresentations of my own position in combination with
> simple strawmen.
>
> You bring in new aspects, which I find interesting, so I will comment.
> Thank you for taking the initiative to do so.
>
> You may code a polyhedron in OSCAD topologically representing a Klein
>> bottle
>> but for any set of vertices you use the result will not represent a Klein
>> bottle. Non-orientable spaces are not embedable in Euclidean 3D spaces.
>> So,
>> even with added topological information, some models are misundertanded or
>> misrepresented by any CAD software.
>>
>
> A Klein bottle is a rather theoretical self-intersecting thing, I am
> mostly interested in physical things that can be realized. That does not
> invalidate what you say, but it is not really an argument in favour of an
> even worse alternative: No topology and degraded geometry (as is the case
> with STL).
>
> P() is a tetrahedron. Q() is formed of two intersecting tetrahedrons. You
>> may render any of them and generate their STLs without any error.
>>
>
> It is not contested that it is possible to create meaningful STL files for
> many cases. Obviously it is, I have done so. As I have stressed, the
> message is that STL fails for the class of problems being discussed, i.e.
> import further booleans.  If STL is the "end of the line" with the intent
> of slicing and printing it works in most (but not necessarily all) cases.
>
> I was able
>> to union Q() with a small cube centered at the origin with no CGAL error.
>> But don't try it with a bigger cube. Neither try any projection-cut of Q()
>> translating it down by something between 10 and 110. The imported STL of
>> it
>> shows the same behaviours of CGAL.
>>
>
> I am not 100% sure exactly what you are saying here, it seems to me you
> are pointing to the fact that there are several situations where exporting
> to STL and importing with the intent of doing boolean operations will cause
> unsolvable problems. If that is what you are saying, I agree. If I have
> misunderstood, please accept my apology.
>
> If you load the STL of Q() in Slic3r or Simplify3D you will be able to
>> generate G-code files. And print it! However don't have great expectancy
>> of
>> them. Slic3r and Simplify3D will show distinct interpretations of the STL:
>> Slic3r will take the union of the two tetrahedrons and Simplify3D will
>> leave
>> a void where they intersect.
>>
>
> This is an interesting observation in support of what I said above and
> earlier. Even for the primary purpose of 3d printing, STL does not work
> very well in some cases.
>
> The lesson here is that a topological 2-manifold embeded in 3D with
>> self-intersection is a trouble for all software. It is hard for the
>> algorithms to detect self-intersections. And there is not an unique way to
>> interpret what it means, what is inside, what it represents.
>>
>
> "All software" is a wide definition. 3d modeling has many applications,
> not just 3d printing. I think what you are describing is either the result
> of a boolean operation gone wrong or a failure to represent the presumably
> correct result on an external file (STL) so that other software have a
> chance to interpret it correctly. It is hard to say what it is when the
> topology is non-existent.
>
> My point is that we should try to be as as explicit as possible about the
> nature of the models created. The most common way to do that for 3d meshes
> is to separate geometry (vertex coordinates) from topology and describe the
> topological connections. This is how it is done in FEM analysis for
> example. It is similar in the CAD world (B-rep).
>
> I agree with your criticism to STL format. But the inclusion of topological
>> information is not sufficient to get rid of troubles.
>>
>
> I don't mean to suggest that including topology will solve every problem
> known to man, and I have not said so. There are still many ways things can
> fail. But topology is a well established way of describing models
> accurately, and it will solve a vast amount of problems seen in real life.
>
> From the point of view
>> of CAD software and 3D printer software, both, topology and geometry, must
>> be considered together.
>>
>
> If you mean that both topology and geometry needs to be carefully
> considered, that was also my message.
>
> Thank you for the interesting comments.
>
> Carsten Arnholm
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160203/81afd470/attachment.html>

From nop.head at gmail.com  Wed Feb  3 14:09:39 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 3 Feb 2016 19:09:39 +0000
Subject: [OpenSCAD] Fwd: dxf and stl import/rendering issue
In-Reply-To: <1454523596149-16029.post@n5.nabble.com>
References: <CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<CAEEmnrM-87A20xDZOE35LkhxZ44U1_W0vj_-U=STni=tcpUXfg@mail.gmail.com>
	<1454523596149-16029.post@n5.nabble.com>
Message-ID: <CAEEmnrPJnaPvVHvczu5zNcvOMo1KDaFuMDtMfEjjN6VDev-a6w@mail.gmail.com>

On 3 February 2016 at 18:19, Ronaldo <rcmpersiano at gmail.com> wrote:

> nophead wrote
> > You don't get any errors until CGAL operates on it and then only
> > cryptic ones.
>
> That is not exactly true. CGAL processed without any error message the
> union
> (and even difference) of Q() with a small cube centered at the origin. It
> outcries only if the cube side is between 20 and 220.
>

Yes that is unusual. I expect it sees the cube is totally internal and
simply discards it as a shortcut.


>
> > Also CGALs simple: yes is misleading. I thought simple meant it was
> > manifold but it must mean something else.
>
> Manifold is simple because you can deal with it using simpler algorithms.
> But there is non-manifolds with singularities simple enough to be easily
> processed or even 3d printed.
>

Yes but they are best avoided as they are unpredictable when passed on to
other programs. They can easily cause an extra edge to be counted by a
slicer and cause inside and outside to be flipped.


>
> >  Volumes: 3 is a give away.
>
> I didn't get it.
>

The number of volumes is always plus one as it counts the universe outside
of the objects as a volume. So for a single solid with no internal voids it
should be 2.


>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/dxf-and-stl-import-rendering-issue-tp15979p16029.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160203/3da1dd65/attachment.html>

From erikcq at quackenbush.com  Wed Feb  3 16:37:06 2016
From: erikcq at quackenbush.com (thequack)
Date: Wed, 3 Feb 2016 14:37:06 -0700 (MST)
Subject: [OpenSCAD] rotate_extrude(angle) requires
Message-ID: <1454535426870-16032.post@n5.nabble.com>

rotate_extrude(angle) only works if there is nothing extending below the
origin. For example, this works:
rotate_extrude(angle=220)
&nbsp;translate([25,25,0])
&nbsp;&nbsp;minkowski()
&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;square(75,100);
&nbsp;&nbsp;&nbsp;&nbsp;circle(25);
&nbsp;&nbsp;}
 
But if you comment out the /translate()/ line it does not work presumably
because the shape now extends past the origin. I'm not sure if this behavior
is intended but I can tell you it took me a while to figure out the
/translate()/ workaround.

I'm using Windows with the 2016.01.26 build.




--
View this message in context: http://forum.openscad.org/rotate-extrude-angle-requires-tp16032.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160203/341eeff9/attachment.html>

From Torsten.Paul at gmx.de  Wed Feb  3 16:50:00 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Wed, 3 Feb 2016 22:50:00 +0100
Subject: [OpenSCAD] rotate_extrude(angle) requires
In-Reply-To: <1454535426870-16032.post@n5.nabble.com>
References: <1454535426870-16032.post@n5.nabble.com>
Message-ID: <56B27608.3000506@gmx.de>

On 02/03/2016 10:37 PM, thequack wrote:
> rotate_extrude(angle) only works if there is nothing extending below the origin.
>
That's intentional (and not related to the usage of the angle parameter) as
it would otherwise create self intersecting geometry.

It's also giving a message telling that (without the translate):

ERROR: all points for rotate_extrude() must have the same X coordinate sign (range is -2.61 -> 95.23)

ciao,
  Torsten.



From triffid.hunter at gmail.com  Thu Feb  4 00:54:21 2016
From: triffid.hunter at gmail.com (Triffid Hunter)
Date: Thu, 4 Feb 2016 13:54:21 +0800
Subject: [OpenSCAD] Fwd: dxf and stl import/rendering issue
In-Reply-To: <CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org> <1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
Message-ID: <CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>

On 4 February 2016 at 02:50, nop head <nop.head at gmail.com> wrote:

> My argument is that as long as the mesh is 2 manifold and as long as
> distinct vertices are numerically distinct and identical vertices are
> numerically identical in the file then all the edge information is not
> needed. You can reconstruct the edge information by building a table of
> unique vertices and connecting them with the triangle edges they belong to.
>

Amen.

Mathematically, "2-manifold" means that the volumetric topology can be
*accurately* reconstructed from the mesh, and non-manifold means that the
topology is somehow ambiguous.

The whole idea of 2-manifold is that the triangles in the mesh depict a
contiguous topological boundary between the volumes "inside" and "outside"
in 3-space. That's why CGAL reports 2 volumes for single objects.

If there are coincident triangles, holes in the mesh, self-intersections,
singularities (ie shared vertex), etc etc, then the topological boundary is
ambiguous and the mesh is not 2-manifold.

Precision truncation is a slightly separate issue whereby a valid (but
degenerate) 2-manifold mesh can become a non-manifold mesh when saved -
this is an implementation problem, not a purely mathematical one.

To reiterate, *topology can always be accurately reconstructed from a
2-manifold mesh. If the mesh is not 2-manifold, then the topology cannot be
accurately recovered* and various implementations must guess and will
invariably get different results or spit errors.

If an implementation fails to reconstruct topology for a valid 2-manifold
mesh, or writes a non-manifold mesh for a non-degenerate 2-manifold mesh,
it has a bug.

If an implementation writes a non-manifold mesh given a degenerate
2-manifold mesh, then the designer should go back and make the model
non-degenerate :P This is frequently what causes openscad to not be able to
import its own exports...
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/96ca936f/attachment.html>

From arnholm at arnholm.org  Thu Feb  4 02:13:33 2016
From: arnholm at arnholm.org (arnholm at arnholm.org)
Date: Thu, 04 Feb 2016 08:13:33 +0100
Subject: [OpenSCAD] Fwd: dxf and stl import/rendering issue
In-Reply-To: <CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org> <1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
Message-ID: <17b87a72fead01c6d8c4741afa8ae515@arnholm.org>

On 2016-02-04 06:54, Triffid Hunter wrote:
> non-manifold means that the topology is somehow ambiguous.

No, it does not.

An example of non-manifold topology is where a topological edge is 
shared by more than 2 faces.
http://docs.mcneel.com/rhino/5/help/en-us/popup_moreinformation/non-manifold_edges.htm

It is not ambiguous, and in many cases a desired feature. This kind of 
non-manifold topology is much used in ship design when designing FEM 
models with shell elements. Often, non-manifold topology is perfectly 
acceptable and is not ambiguous in any way. CAD systems like e.g. ACIS ( 
https://en.wikipedia.org/wiki/ACIS ) have no issues representing 
non-manifold topology.

In the special case of 3d solid topological models, a non-manifold face 
is a face internal to the body, it has material on both sides and does 
not describe the external surface of the solid body. That does not mean 
it is topologically ambiguous. Such faces may be and are used for 
subdivision, for example to guide 3d solid meshing (solid FEM models). 
Whether such non-manifold topological entities are  desirable or not 
depends on the application area, but it is not topologically ambiguous.

It is only when the topological description is non-existent things like 
this become a problem.

Carsten Arnholm


From joeaquilina at westnet.com.au  Thu Feb  4 19:04:39 2016
From: joeaquilina at westnet.com.au (joeaquilina at westnet.com.au)
Date: Thu, 4 Feb 2016 16:04:39 -0800
Subject: [OpenSCAD] Fw: new message
Message-ID: <0000f3cf1657$8ab859e4$e044b064$@westnet.com.au>

Hey!

 

Open message <http://finance-vergleich.de/besides.php?ecepy>

 

joeaquilina at westnet.com.au

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/a502e332/attachment.html>

From nop.head at gmail.com  Thu Feb  4 07:44:29 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 4 Feb 2016 12:44:29 +0000
Subject: [OpenSCAD] Fwd: dxf and stl import/rendering issue
In-Reply-To: <17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
Message-ID: <CAEEmnrP4VDwfiCTWujmT3FJ2ihsDSR2uwezLq9qC=+oOWKNVxA@mail.gmail.com>

OpenScad doesn't handle non-manifold topology. It can only do boolean ops
on manifold solids. Therefore writing them to STL and reimporting them does
not prevent you doing boolean ops. If it is manifold then it will re-import
correctly. If it isn't then you could never do boolean ops on it anyway.

When I attempt to make a polygon with an infinitely thin crack it just gets
ignored. The only reason you can ever get a non-manifold object in OpenScad
is because it doesn't validate polyhedron and import data, plus a bug I
think it has when it snaps vertices to a grid without preserving topology.
I think this shows it doesn't hold any more topological information
internally that could be lost writing to STL. Objects are represented by
their boundary mesh and it has to be manifold. Since physical objects in
the real world are manifold that isn't a limitation for a solid modeller.

This is no doubt not the same with ACIS, but that isn't what we are
discussing on this list.

Since I have never claimed STL files can represent non-manifold geometry I
think it is you that is presenting a straw man argument.

On 4 February 2016 at 07:13, <arnholm at arnholm.org> wrote:

> On 2016-02-04 06:54, Triffid Hunter wrote:
>
>> non-manifold means that the topology is somehow ambiguous.
>>
>
> No, it does not.
>
> An example of non-manifold topology is where a topological edge is shared
> by more than 2 faces.
>
> http://docs.mcneel.com/rhino/5/help/en-us/popup_moreinformation/non-manifold_edges.htm
>
> It is not ambiguous, and in many cases a desired feature. This kind of
> non-manifold topology is much used in ship design when designing FEM models
> with shell elements. Often, non-manifold topology is perfectly acceptable
> and is not ambiguous in any way. CAD systems like e.g. ACIS (
> https://en.wikipedia.org/wiki/ACIS ) have no issues representing
> non-manifold topology.
>
> In the special case of 3d solid topological models, a non-manifold face is
> a face internal to the body, it has material on both sides and does not
> describe the external surface of the solid body. That does not mean it is
> topologically ambiguous. Such faces may be and are used for subdivision,
> for example to guide 3d solid meshing (solid FEM models). Whether such
> non-manifold topological entities are  desirable or not depends on the
> application area, but it is not topologically ambiguous.
>
> It is only when the topological description is non-existent things like
> this become a problem.
>
>
> Carsten Arnholm
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/0b052c55/attachment.html>

From doug at moens.org  Thu Feb  4 10:17:11 2016
From: doug at moens.org (doug moen)
Date: Thu, 4 Feb 2016 10:17:11 -0500
Subject: [OpenSCAD] Fwd: dxf and stl import/rendering issue
In-Reply-To: <17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
Message-ID: <CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>

"a non-manifold face is a face internal to the body, it has material on
both sides and does not describe the external surface of the solid body."

The ability to partition a solid into a collection of disjoint subvolumes
with shared faces is also useful in OpenSCAD; it's not just a ship
design/ACIS thing.

One obvious example is 3D printing of multi-material/multi-colour objects.
There have been a number of discussions about how to support this in
OpenSCAD. Internally, the volumes for each colour/material need to be kept
separate and labeled. To export such a model, you either need to export
multiple STL files (one per material/colour), or you need to export an AMF
file with distinct volume elements for each colour/material. In no case
should any of the individual volumes that we track internally or export
contain non-manifold faces.

This situation can arise in feature request #1562, which requests a
convex_decomposition() operator. The result of this operator is a group of
solids which share faces between them. Each group element is a convex
polyhedron, which is manifold. This feature isn't useful unless we get rid
of the implicit union that would otherwise occur when passing the results
of convex_decomposition() to another module: see issue #350. But, issue
#350 also eliminates the top level implicit union that occurs before
exporting an STL file. If we get rid of top level implicit union, and the
top level element in a script is a call to convex_decomposition() on
non-convex input, then we can't meaningfully export to STL. There is a
manifoldness check prior to STL export which *should* report this problem
(issue #1215). Exporting the same object to AMF can be supported, because
we can put each convex polyhedron into a separate volume.

In summary, OpenSCAD should support models that contain disjoint subvolumes
with shared faces. There are features we need to add and bugs/design flaws
we need to fix before this support is complete.

On 4 February 2016 at 02:13, <arnholm at arnholm.org> wrote:

> On 2016-02-04 06:54, Triffid Hunter wrote:
>
>> non-manifold means that the topology is somehow ambiguous.
>>
>
> No, it does not.
>
> An example of non-manifold topology is where a topological edge is shared
> by more than 2 faces.
>
> http://docs.mcneel.com/rhino/5/help/en-us/popup_moreinformation/non-manifold_edges.htm
>
> It is not ambiguous, and in many cases a desired feature. This kind of
> non-manifold topology is much used in ship design when designing FEM models
> with shell elements. Often, non-manifold topology is perfectly acceptable
> and is not ambiguous in any way. CAD systems like e.g. ACIS (
> https://en.wikipedia.org/wiki/ACIS ) have no issues representing
> non-manifold topology.
>
> In the special case of 3d solid topological models, a non-manifold face is
> a face internal to the body, it has material on both sides and does not
> describe the external surface of the solid body. That does not mean it is
> topologically ambiguous. Such faces may be and are used for subdivision,
> for example to guide 3d solid meshing (solid FEM models). Whether such
> non-manifold topological entities are  desirable or not depends on the
> application area, but it is not topologically ambiguous.
>
> It is only when the topological description is non-existent things like
> this become a problem.
>
>
> Carsten Arnholm
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/be5ddec6/attachment.html>

From nop.head at gmail.com  Thu Feb  4 10:54:33 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 4 Feb 2016 15:54:33 +0000
Subject: [OpenSCAD] Fwd: dxf and stl import/rendering issue
In-Reply-To: <CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
Message-ID: <CAEEmnrO9bwax7YjwLVw11opfHsYTFnfcevCR2=t3LBTeAxpRyA@mail.gmail.com>

On 4 February 2016 at 15:17, doug moen <doug at moens.org> wrote:

> "a non-manifold face is a face internal to the body, it has material on
> both sides and does not describe the external surface of the solid body."
>

Where does that come from?

There are lots of non-manifold problems a face can have, not just internal
faces. There are holes, singularities and self intersection.

A more accurate statement is "a face internal to the body makes it
non-manifold".


>
> The ability to partition a solid into a collection of disjoint subvolumes
> with shared faces is also useful in OpenSCAD; it's not just a ship
> design/ACIS thing.
>

Yes and you can do that already if you export them into separate STL files.


>
> One obvious example is 3D printing of multi-material/multi-colour objects.
> There have been a number of discussions about how to support this in
> OpenSCAD. Internally, the volumes for each colour/material need to be kept
> separate and labeled. To export such a model, you either need to export
> multiple STL files (one per material/colour), or you need to export an AMF
> file with distinct volume elements for each colour/material. In no case
> should any of the individual volumes that we track internally or export
> contain non-manifold faces.
>
> This situation can arise in feature request #1562, which requests a
> convex_decomposition() operator. The result of this operator is a group of
> solids which share faces between them. Each group element is a convex
> polyhedron, which is manifold. This feature isn't useful unless we get rid
> of the implicit union that would otherwise occur when passing the results
> of convex_decomposition() to another module: see issue #350. But, issue
> #350 also eliminates the top level implicit union that occurs before
> exporting an STL file. If we get rid of top level implicit union, and the
> top level element in a script is a call to convex_decomposition() on
> non-convex input, then we can't meaningfully export to STL.
>

True. The top level union is required when exporting to STL if the objects
touch, or overlap.


> There is a manifoldness check prior to STL export which *should* report
> this problem (issue #1215). Exporting the same object to AMF can be
> supported, because we can put each convex polyhedron into a separate volume.
>

But how is that meaningful? An object broken into arbitrary convex lumps
doesn't seem useful as an end result to me. More useful is simply tagging a
branch of the tree to be a particular material and then it can be an
arbitrary shape not just convex.


>
> In summary, OpenSCAD should support models that contain disjoint
> subvolumes with shared faces. There are features we need to add and
> bugs/design flaws we need to fix before this support is complete.
>

Disjoint subvolumes is another straw man argument. Your cracked plate
example is not a disjoint subvolume. Nobody said we could put disjoint
subvolumes in an STL file. We can and do put them in separate STL files
though.


>
> On 4 February 2016 at 02:13, <arnholm at arnholm.org> wrote:
>
>> On 2016-02-04 06:54, Triffid Hunter wrote:
>>
>>> non-manifold means that the topology is somehow ambiguous.
>>>
>>
>> No, it does not.
>>
>> An example of non-manifold topology is where a topological edge is shared
>> by more than 2 faces.
>>
>> http://docs.mcneel.com/rhino/5/help/en-us/popup_moreinformation/non-manifold_edges.htm
>>
>> It is not ambiguous, and in many cases a desired feature. This kind of
>> non-manifold topology is much used in ship design when designing FEM models
>> with shell elements. Often, non-manifold topology is perfectly acceptable
>> and is not ambiguous in any way. CAD systems like e.g. ACIS (
>> https://en.wikipedia.org/wiki/ACIS ) have no issues representing
>> non-manifold topology.
>>
>> In the special case of 3d solid topological models, a non-manifold face
>> is a face internal to the body, it has material on both sides and does not
>> describe the external surface of the solid body. That does not mean it is
>> topologically ambiguous. Such faces may be and are used for subdivision,
>> for example to guide 3d solid meshing (solid FEM models). Whether such
>> non-manifold topological entities are  desirable or not depends on the
>> application area, but it is not topologically ambiguous.
>>
>> It is only when the topological description is non-existent things like
>> this become a problem.
>>
>>
>> Carsten Arnholm
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/41dea070/attachment.html>

From rcmpersiano at gmail.com  Thu Feb  4 11:13:53 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Thu, 4 Feb 2016 14:13:53 -0200
Subject: [OpenSCAD] Fwd: dxf and stl import/rendering issue
In-Reply-To: <CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
Message-ID: <CA+i9EaCXid49U8Y1UbV4A_xecmqh0KbWhscZeVWnLSJVw0wgRw@mail.gmail.com>

doug moen brings another important aspect to this discussion: " the top
level implicit union that occurs before exporting an STL file". STL is
intended to represent one object only presumably a 2-manifold and this is a
serious limitation of STL format. I agree that, excluding numerical
approximation issues, STL allows the recovering of the missing topological
information if and only if the geometrical embedding of it is a manifold.
As I showed before by examples, we can represent several non-disjoint
manifolds in STL as far as they do not have common vertices. But that is
very restrictive.

I would like to represent not only one body in OSCAD. I would like to
represent a set of distinct (not necessarily disjoint) objects. One simple
application of that, besides the ones Arholm brought, is an animation of,
say, a ball bouncing in a billiard table. If I define a fixed table and a
ball on it, as their union is not a 2-manifold, I may have problems. Two
gears may have contact. In the real world, objects have contact.

Best than just eliminating the top level implicit union would be to have
another operator: the set (or aggregate) operator. The set operator would
collect a set of bodies preserving each one as a separated entity. If you
union the set, then they become one (possibly manifold) body only but
before that the set may not represent a manifold. Its bodies may not even
be disjoint. May be, I don't know, there is no non-manifold objects in the
world but the world itself is not a manifold.

If we go in that way, STL should be abandoned.

2016-02-04 13:17 GMT-02:00 doug moen <doug at moens.org>:

> "a non-manifold face is a face internal to the body, it has material on
> both sides and does not describe the external surface of the solid body."
>
> The ability to partition a solid into a collection of disjoint subvolumes
> with shared faces is also useful in OpenSCAD; it's not just a ship
> design/ACIS thing.
>
> One obvious example is 3D printing of multi-material/multi-colour objects.
> There have been a number of discussions about how to support this in
> OpenSCAD. Internally, the volumes for each colour/material need to be kept
> separate and labeled. To export such a model, you either need to export
> multiple STL files (one per material/colour), or you need to export an AMF
> file with distinct volume elements for each colour/material. In no case
> should any of the individual volumes that we track internally or export
> contain non-manifold faces.
>
> This situation can arise in feature request #1562, which requests a
> convex_decomposition() operator. The result of this operator is a group of
> solids which share faces between them. Each group element is a convex
> polyhedron, which is manifold. This feature isn't useful unless we get rid
> of the implicit union that would otherwise occur when passing the results
> of convex_decomposition() to another module: see issue #350. But, issue
> #350 also eliminates the top level implicit union that occurs before
> exporting an STL file. If we get rid of top level implicit union, and the
> top level element in a script is a call to convex_decomposition() on
> non-convex input, then we can't meaningfully export to STL. There is a
> manifoldness check prior to STL export which *should* report this problem
> (issue #1215). Exporting the same object to AMF can be supported, because
> we can put each convex polyhedron into a separate volume.
>
> In summary, OpenSCAD should support models that contain disjoint
> subvolumes with shared faces. There are features we need to add and
> bugs/design flaws we need to fix before this support is complete.
>
> On 4 February 2016 at 02:13, <arnholm at arnholm.org> wrote:
>
>> On 2016-02-04 06:54, Triffid Hunter wrote:
>>
>>> non-manifold means that the topology is somehow ambiguous.
>>>
>>
>> No, it does not.
>>
>> An example of non-manifold topology is where a topological edge is shared
>> by more than 2 faces.
>>
>> http://docs.mcneel.com/rhino/5/help/en-us/popup_moreinformation/non-manifold_edges.htm
>>
>> It is not ambiguous, and in many cases a desired feature. This kind of
>> non-manifold topology is much used in ship design when designing FEM models
>> with shell elements. Often, non-manifold topology is perfectly acceptable
>> and is not ambiguous in any way. CAD systems like e.g. ACIS (
>> https://en.wikipedia.org/wiki/ACIS ) have no issues representing
>> non-manifold topology.
>>
>> In the special case of 3d solid topological models, a non-manifold face
>> is a face internal to the body, it has material on both sides and does not
>> describe the external surface of the solid body. That does not mean it is
>> topologically ambiguous. Such faces may be and are used for subdivision,
>> for example to guide 3d solid meshing (solid FEM models). Whether such
>> non-manifold topological entities are  desirable or not depends on the
>> application area, but it is not topologically ambiguous.
>>
>> It is only when the topological description is non-existent things like
>> this become a problem.
>>
>>
>> Carsten Arnholm
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/59dd010c/attachment.html>

From doug at moens.org  Thu Feb  4 11:39:00 2016
From: doug at moens.org (doug moen)
Date: Thu, 4 Feb 2016 11:39:00 -0500
Subject: [OpenSCAD] Fwd: dxf and stl import/rendering issue
In-Reply-To: <CAEEmnrO9bwax7YjwLVw11opfHsYTFnfcevCR2=t3LBTeAxpRyA@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
	<CAEEmnrO9bwax7YjwLVw11opfHsYTFnfcevCR2=t3LBTeAxpRyA@mail.gmail.com>
Message-ID: <CAGV6i+PtBcfTHg3=HA-+1k66HW6g93NOnWkomcbv+z93v9EYDA@mail.gmail.com>

nop head:

>
> On 4 February 2016 at 15:17, doug moen <doug at moens.org> wrote:
>
>> "a non-manifold face is a face internal to the body, it has material on
>> both sides and does not describe the external surface of the solid body."
>>
>
> Where does that come from?
>

That comes from Carsten, I was replying to his message. See the quoted
message below the body of my post.


There are lots of non-manifold problems a face can have, not just internal
> faces. There are holes, singularities and self intersection.
>
> A more accurate statement is "a face internal to the body makes it
> non-manifold".
>

Okay. To be clear, in my message I was only addressing the specific case of
disjoint solids sharing a face. I wasn't making any general claims about
non-manifold models. Breaking the problem of non-manifold models down into
different cases makes it easier to think about how OpenSCAD should deal
with each case.



> The ability to partition a solid into a collection of disjoint subvolumes
>> with shared faces is also useful in OpenSCAD; it's not just a ship
>> design/ACIS thing.
>>
>
> Yes and you can do that already if you export them into separate STL files.
>

Obviously. But there are things we can do to make this more convenient, as
touched on in my message, and as currently being discussed in other forum
threads and github issues. My point is that this is something people need
to do, and OpenSCAD could support it better.



> There is a manifoldness check prior to STL export which *should* report
>> this problem (issue #1215). Exporting the same object to AMF can be
>> supported, because we can put each convex polyhedron into a separate volume.
>>
>
> But how is that meaningful? An object broken into arbitrary convex lumps
> doesn't seem useful as an end result to me.
>

It wouldn't be useful for 3D printing, but people use OpenSCAD in a variety
of ways. Here's one use case: multiple users want better support for
exporting an intermediate result to a file, then loading that file back
into OpenSCAD for further processing. (Can't find the issue# right now.) We
should support this capability in the general case, not just those cases
where the intermediate result happens to be representable by a single STL
file.


In summary, OpenSCAD should support models that contain disjoint subvolumes
>> with shared faces. There are features we need to add and bugs/design flaws
>> we need to fix before this support is complete.
>>
>
> Disjoint subvolumes is another straw man argument. Your cracked plate
> example is not a disjoint subvolume. Nobody said we could put disjoint
> subvolumes in an STL file. We can and do put them in separate STL files
> though.
>

Why are you accusing me of making a straw man argument? This is my first
substantive post to this thread. I said nothing about cracked plates.
Nowhere in my post did I claim that we should put disjoint subvolumes in an
STL file. Although people commonly do put disjoint subvolumes into a single
STL file -- if the individual volumes are not touching or overlapping,
there doesn't seem to be a problem for 3D printing.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/b66a8d46/attachment.html>

From nop.head at gmail.com  Thu Feb  4 11:43:31 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 4 Feb 2016 16:43:31 +0000
Subject: [OpenSCAD] Fwd: dxf and stl import/rendering issue
In-Reply-To: <CAGV6i+PtBcfTHg3=HA-+1k66HW6g93NOnWkomcbv+z93v9EYDA@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
	<CAEEmnrO9bwax7YjwLVw11opfHsYTFnfcevCR2=t3LBTeAxpRyA@mail.gmail.com>
	<CAGV6i+PtBcfTHg3=HA-+1k66HW6g93NOnWkomcbv+z93v9EYDA@mail.gmail.com>
Message-ID: <CAEEmnrP-Ybx34bWncTkXarzsy5LxkP_DgGPsAY0j+41TyWkg=w@mail.gmail.com>

Sorry Doug, for some reason I thought you were Carsten.



On 4 February 2016 at 16:39, doug moen <doug at moens.org> wrote:

> nop head:
>
>>
>> On 4 February 2016 at 15:17, doug moen <doug at moens.org> wrote:
>>
>>> "a non-manifold face is a face internal to the body, it has material on
>>> both sides and does not describe the external surface of the solid body."
>>>
>>
>> Where does that come from?
>>
>
> That comes from Carsten, I was replying to his message. See the quoted
> message below the body of my post.
>
>
> There are lots of non-manifold problems a face can have, not just internal
>> faces. There are holes, singularities and self intersection.
>>
>> A more accurate statement is "a face internal to the body makes it
>> non-manifold".
>>
>
> Okay. To be clear, in my message I was only addressing the specific case
> of disjoint solids sharing a face. I wasn't making any general claims about
> non-manifold models. Breaking the problem of non-manifold models down into
> different cases makes it easier to think about how OpenSCAD should deal
> with each case.
>
>
>
>> The ability to partition a solid into a collection of disjoint subvolumes
>>> with shared faces is also useful in OpenSCAD; it's not just a ship
>>> design/ACIS thing.
>>>
>>
>> Yes and you can do that already if you export them into separate STL
>> files.
>>
>
> Obviously. But there are things we can do to make this more convenient, as
> touched on in my message, and as currently being discussed in other forum
> threads and github issues. My point is that this is something people need
> to do, and OpenSCAD could support it better.
>
>
>
>> There is a manifoldness check prior to STL export which *should* report
>>> this problem (issue #1215). Exporting the same object to AMF can be
>>> supported, because we can put each convex polyhedron into a separate volume.
>>>
>>
>> But how is that meaningful? An object broken into arbitrary convex lumps
>> doesn't seem useful as an end result to me.
>>
>
> It wouldn't be useful for 3D printing, but people use OpenSCAD in a
> variety of ways. Here's one use case: multiple users want better support
> for exporting an intermediate result to a file, then loading that file back
> into OpenSCAD for further processing. (Can't find the issue# right now.) We
> should support this capability in the general case, not just those cases
> where the intermediate result happens to be representable by a single STL
> file.
>
>
> In summary, OpenSCAD should support models that contain disjoint
>>> subvolumes with shared faces. There are features we need to add and
>>> bugs/design flaws we need to fix before this support is complete.
>>>
>>
>> Disjoint subvolumes is another straw man argument. Your cracked plate
>> example is not a disjoint subvolume. Nobody said we could put disjoint
>> subvolumes in an STL file. We can and do put them in separate STL files
>> though.
>>
>
> Why are you accusing me of making a straw man argument? This is my first
> substantive post to this thread. I said nothing about cracked plates.
> Nowhere in my post did I claim that we should put disjoint subvolumes in an
> STL file. Although people commonly do put disjoint subvolumes into a single
> STL file -- if the individual volumes are not touching or overlapping,
> there doesn't seem to be a problem for 3D printing.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/d29ab442/attachment.html>

From arnholm at arnholm.org  Thu Feb  4 11:57:09 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Thu, 4 Feb 2016 17:57:09 +0100
Subject: [OpenSCAD] Fwd: dxf and stl import/rendering issue
In-Reply-To: <CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org> <1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
Message-ID: <56B382E5.8080205@arnholm.org>

On 04. feb. 2016 16:17, doug moen wrote:
> "a non-manifold face is a face internal to the body, it has material on
> both sides and does not describe the external surface of the solid body."
>
> The ability to partition a solid into a collection of disjoint
> subvolumes with shared faces is also useful in OpenSCAD; it's not just a
> ship design/ACIS thing.

Indeed, this is very true, I was just referring to my experience. Your 
example below is even better.

> One obvious example is 3D printing of multi-material/multi-colour
> objects.

Yes, once you mention it is certainly the obvious example, very good 
point! This illustrates that a non-manifold face internal to the body is 
not just not ambiguous, it is essential in some cases. If used properly 
non-manifold  topology actually solves known and already stated problems.

A non-manifold face has material on both sides and your example adds to 
that by saying the two materials need not be the same. Then the 
non-manifold face has direct physical significance also in 3d printing.

> In summary, OpenSCAD should support models that contain disjoint
> subvolumes with shared faces. There are features we need to add and
> bugs/design flaws we need to fix before this support is complete.

"Models that contain disjoint subvolumes with shared faces" is another 
way of saying explicit topology and that the topology sometimes needs to 
be non-manifold. I agree.

Obviously you can't do that with export to STL. As you say, AMF (or 
another format with similar features) would be able to represent meshes 
generated from such models and it looks like a good way to support 
multi-material printing.

Great post.

Carsten Arnholm




From doug at moens.org  Thu Feb  4 12:05:14 2016
From: doug at moens.org (doug moen)
Date: Thu, 4 Feb 2016 12:05:14 -0500
Subject: [OpenSCAD] Fwd: dxf and stl import/rendering issue
In-Reply-To: <CAEEmnrP-Ybx34bWncTkXarzsy5LxkP_DgGPsAY0j+41TyWkg=w@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
	<CAEEmnrO9bwax7YjwLVw11opfHsYTFnfcevCR2=t3LBTeAxpRyA@mail.gmail.com>
	<CAGV6i+PtBcfTHg3=HA-+1k66HW6g93NOnWkomcbv+z93v9EYDA@mail.gmail.com>
	<CAEEmnrP-Ybx34bWncTkXarzsy5LxkP_DgGPsAY0j+41TyWkg=w@mail.gmail.com>
Message-ID: <CAGV6i+MK1eMvDkAycphT5eRHWWnZpC9gZdkQCd0c9PqgRCSuAQ@mail.gmail.com>

nop head said: "Sorry Doug, for some reason I thought you were Carsten."

Yes, but I was *agreeing* with Carsten's post. Just that one post, where he
was arguing for the utility of models containing disjoint subvolumes with
shared faces. I agreed that OpenSCAD should support this situation. As I
recall, Carsten previously argued that this kind of model can't be
represented by a (single) STL file, but that you could use AMF. I said the
same thing, although I restricted my argument to the special case of
disjoint subvolumes sharing faces.

Maybe you should also apologize to Carsten? I don't like the animosity you
two have been showing each other in this thread. We need to keep the forum
civil.

On 4 February 2016 at 11:43, nop head <nop.head at gmail.com> wrote:

> Sorry Doug, for some reason I thought you were Carsten.
>
>
>
> On 4 February 2016 at 16:39, doug moen <doug at moens.org> wrote:
>
>> nop head:
>>
>>>
>>> On 4 February 2016 at 15:17, doug moen <doug at moens.org> wrote:
>>>
>>>> "a non-manifold face is a face internal to the body, it has material
>>>> on both sides and does not describe the external surface of the solid body."
>>>>
>>>
>>> Where does that come from?
>>>
>>
>> That comes from Carsten, I was replying to his message. See the quoted
>> message below the body of my post.
>>
>>
>> There are lots of non-manifold problems a face can have, not just
>>> internal faces. There are holes, singularities and self intersection.
>>>
>>> A more accurate statement is "a face internal to the body makes it
>>> non-manifold".
>>>
>>
>> Okay. To be clear, in my message I was only addressing the specific case
>> of disjoint solids sharing a face. I wasn't making any general claims about
>> non-manifold models. Breaking the problem of non-manifold models down into
>> different cases makes it easier to think about how OpenSCAD should deal
>> with each case.
>>
>>
>>
>>> The ability to partition a solid into a collection of disjoint
>>>> subvolumes with shared faces is also useful in OpenSCAD; it's not just a
>>>> ship design/ACIS thing.
>>>>
>>>
>>> Yes and you can do that already if you export them into separate STL
>>> files.
>>>
>>
>> Obviously. But there are things we can do to make this more convenient,
>> as touched on in my message, and as currently being discussed in other
>> forum threads and github issues. My point is that this is something people
>> need to do, and OpenSCAD could support it better.
>>
>>
>>
>>> There is a manifoldness check prior to STL export which *should* report
>>>> this problem (issue #1215). Exporting the same object to AMF can be
>>>> supported, because we can put each convex polyhedron into a separate volume.
>>>>
>>>
>>> But how is that meaningful? An object broken into arbitrary convex lumps
>>> doesn't seem useful as an end result to me.
>>>
>>
>> It wouldn't be useful for 3D printing, but people use OpenSCAD in a
>> variety of ways. Here's one use case: multiple users want better support
>> for exporting an intermediate result to a file, then loading that file back
>> into OpenSCAD for further processing. (Can't find the issue# right now.) We
>> should support this capability in the general case, not just those cases
>> where the intermediate result happens to be representable by a single STL
>> file.
>>
>>
>> In summary, OpenSCAD should support models that contain disjoint
>>>> subvolumes with shared faces. There are features we need to add and
>>>> bugs/design flaws we need to fix before this support is complete.
>>>>
>>>
>>> Disjoint subvolumes is another straw man argument. Your cracked plate
>>> example is not a disjoint subvolume. Nobody said we could put disjoint
>>> subvolumes in an STL file. We can and do put them in separate STL files
>>> though.
>>>
>>
>> Why are you accusing me of making a straw man argument? This is my first
>> substantive post to this thread. I said nothing about cracked plates.
>> Nowhere in my post did I claim that we should put disjoint subvolumes in an
>> STL file. Although people commonly do put disjoint subvolumes into a single
>> STL file -- if the individual volumes are not touching or overlapping,
>> there doesn't seem to be a problem for 3D printing.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/a86fa3a5/attachment.html>

From nop.head at gmail.com  Thu Feb  4 12:16:41 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 4 Feb 2016 17:16:41 +0000
Subject: [OpenSCAD] Fwd: dxf and stl import/rendering issue
In-Reply-To: <CAGV6i+MK1eMvDkAycphT5eRHWWnZpC9gZdkQCd0c9PqgRCSuAQ@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
	<CAEEmnrO9bwax7YjwLVw11opfHsYTFnfcevCR2=t3LBTeAxpRyA@mail.gmail.com>
	<CAGV6i+PtBcfTHg3=HA-+1k66HW6g93NOnWkomcbv+z93v9EYDA@mail.gmail.com>
	<CAEEmnrP-Ybx34bWncTkXarzsy5LxkP_DgGPsAY0j+41TyWkg=w@mail.gmail.com>
	<CAGV6i+MK1eMvDkAycphT5eRHWWnZpC9gZdkQCd0c9PqgRCSuAQ@mail.gmail.com>
Message-ID: <CAEEmnrNSWA7J4OiFc-k4-BLznHFUhcrf8pPJ_kmxp0pqA5-aTA@mail.gmail.com>

Well as far as I have been concerned I have been putting forward rational
and civil arguments to disprove Cartsten's assertion that you can't save
OpenScad geometry in an STL file, reimport and do boolean ops on it. I
tried to show his two examples had flaws in them and produced counter
examples. He accused me of having a straw man argument. I have no idea why.

Then we move onto saying you can't save non-manifold objects in an STL.
That *is* a classic straw man argument. Nobody said you can store a
non-manifold object in an STL file and OpenScad can't currently process
non-manifold objects.



On 4 February 2016 at 17:05, doug moen <doug at moens.org> wrote:

> nop head said: "Sorry Doug, for some reason I thought you were Carsten."
>
> Yes, but I was *agreeing* with Carsten's post. Just that one post, where
> he was arguing for the utility of models containing disjoint subvolumes
> with shared faces. I agreed that OpenSCAD should support this situation. As
> I recall, Carsten previously argued that this kind of model can't be
> represented by a (single) STL file, but that you could use AMF. I said the
> same thing, although I restricted my argument to the special case of
> disjoint subvolumes sharing faces.
>
> Maybe you should also apologize to Carsten? I don't like the animosity you
> two have been showing each other in this thread. We need to keep the forum
> civil.
>
>
> On 4 February 2016 at 11:43, nop head <nop.head at gmail.com> wrote:
>
>> Sorry Doug, for some reason I thought you were Carsten.
>>
>>
>>
>> On 4 February 2016 at 16:39, doug moen <doug at moens.org> wrote:
>>
>>> nop head:
>>>
>>>>
>>>> On 4 February 2016 at 15:17, doug moen <doug at moens.org> wrote:
>>>>
>>>>> "a non-manifold face is a face internal to the body, it has material
>>>>> on both sides and does not describe the external surface of the solid body."
>>>>>
>>>>
>>>> Where does that come from?
>>>>
>>>
>>> That comes from Carsten, I was replying to his message. See the quoted
>>> message below the body of my post.
>>>
>>>
>>> There are lots of non-manifold problems a face can have, not just
>>>> internal faces. There are holes, singularities and self intersection.
>>>>
>>>> A more accurate statement is "a face internal to the body makes it
>>>> non-manifold".
>>>>
>>>
>>> Okay. To be clear, in my message I was only addressing the specific case
>>> of disjoint solids sharing a face. I wasn't making any general claims about
>>> non-manifold models. Breaking the problem of non-manifold models down into
>>> different cases makes it easier to think about how OpenSCAD should deal
>>> with each case.
>>>
>>>
>>>
>>>> The ability to partition a solid into a collection of disjoint
>>>>> subvolumes with shared faces is also useful in OpenSCAD; it's not just a
>>>>> ship design/ACIS thing.
>>>>>
>>>>
>>>> Yes and you can do that already if you export them into separate STL
>>>> files.
>>>>
>>>
>>> Obviously. But there are things we can do to make this more convenient,
>>> as touched on in my message, and as currently being discussed in other
>>> forum threads and github issues. My point is that this is something people
>>> need to do, and OpenSCAD could support it better.
>>>
>>>
>>>
>>>> There is a manifoldness check prior to STL export which *should* report
>>>>> this problem (issue #1215). Exporting the same object to AMF can be
>>>>> supported, because we can put each convex polyhedron into a separate volume.
>>>>>
>>>>
>>>> But how is that meaningful? An object broken into arbitrary convex
>>>> lumps doesn't seem useful as an end result to me.
>>>>
>>>
>>> It wouldn't be useful for 3D printing, but people use OpenSCAD in a
>>> variety of ways. Here's one use case: multiple users want better support
>>> for exporting an intermediate result to a file, then loading that file back
>>> into OpenSCAD for further processing. (Can't find the issue# right now.) We
>>> should support this capability in the general case, not just those cases
>>> where the intermediate result happens to be representable by a single STL
>>> file.
>>>
>>>
>>> In summary, OpenSCAD should support models that contain disjoint
>>>>> subvolumes with shared faces. There are features we need to add and
>>>>> bugs/design flaws we need to fix before this support is complete.
>>>>>
>>>>
>>>> Disjoint subvolumes is another straw man argument. Your cracked plate
>>>> example is not a disjoint subvolume. Nobody said we could put disjoint
>>>> subvolumes in an STL file. We can and do put them in separate STL files
>>>> though.
>>>>
>>>
>>> Why are you accusing me of making a straw man argument? This is my first
>>> substantive post to this thread. I said nothing about cracked plates.
>>> Nowhere in my post did I claim that we should put disjoint subvolumes in an
>>> STL file. Although people commonly do put disjoint subvolumes into a single
>>> STL file -- if the individual volumes are not touching or overlapping,
>>> there doesn't seem to be a problem for 3D printing.
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/1d402dfc/attachment.html>

From doug at moens.org  Thu Feb  4 13:04:46 2016
From: doug at moens.org (doug moen)
Date: Thu, 4 Feb 2016 13:04:46 -0500
Subject: [OpenSCAD] Fwd: dxf and stl import/rendering issue
In-Reply-To: <CA+i9EaCXid49U8Y1UbV4A_xecmqh0KbWhscZeVWnLSJVw0wgRw@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
	<CA+i9EaCXid49U8Y1UbV4A_xecmqh0KbWhscZeVWnLSJVw0wgRw@mail.gmail.com>
Message-ID: <CAGV6i+O0R6X3-4NmEDuwgUJ-U8f-CMfGecPD0E5F-D-cJxBz9Q@mail.gmail.com>

Ronaldo said: "Best than just eliminating the top level implicit union
would be to have another operator: the set (or aggregate) operator. The set
operator would collect a set of bodies preserving each one as a separated
entity. If you union the set, then they become one (possibly manifold) body
only but before that the set may not represent a manifold. Its bodies may
not even be disjoint."

We already have a "set (or aggregate)" operator. It is called "group". The
explicit syntax is 'group() { shape1; shape2; ... }'. You can see this
operator if you display the CSG tree. Nobody types it explicitly, because
groups are generated implicitly for every module call (the 'children()' of
a module call is represented by a group, and the output is always a group).

There is a design flaw in how groups currently work. In short, too many
groups are being implicitly generated. If the tail argument to a module
call is a single (non-compound) statement, like a for loop or a module
call, then the results returned by that statement (which may be a group)
are wrapped in another group with a single element. This prevents you from
feeding multiple outputs from one module call into another module as its
children(). This is why intersection_for() exists.

There is a plan to fix this problem, but it is called "lazy union", because
the same feature also eliminates the implicit top level union.
https://github.com/openscad/openscad/issues/350

OpenSCAD2 fixes the problem by adopting so-called "lazy union" semantics
for module calls, and also by reinterpreting the "{ ... }" syntax as the
group constructor. In OpenSCAD2, groups are always constructed explicitly
using {...} syntax, except for at the top level, where all top level
objects are implicitly collected into a group.

Even in OpenSCAD2, there is a requirement that each element of a group be
either another group, or a manifold shape. The CGAL union operator requires
that its arguments be manifold; that's where the restriction comes from.

Doug Moen.

On 4 February 2016 at 11:13, Ronaldo Persiano <rcmpersiano at gmail.com> wrote:

> doug moen brings another important aspect to this discussion: " the top
> level implicit union that occurs before exporting an STL file". STL is
> intended to represent one object only presumably a 2-manifold and this is
> a serious limitation of STL format. I agree that, excluding numerical
> approximation issues, STL allows the recovering of the missing topological
> information if and only if the geometrical embedding of it is a manifold.
> As I showed before by examples, we can represent several non-disjoint
> manifolds in STL as far as they do not have common vertices. But that is
> very restrictive.
>
> I would like to represent not only one body in OSCAD. I would like to
> represent a set of distinct (not necessarily disjoint) objects. One simple
> application of that, besides the ones Arholm brought, is an animation of,
> say, a ball bouncing in a billiard table. If I define a fixed table and a
> ball on it, as their union is not a 2-manifold, I may have problems. Two
> gears may have contact. In the real world, objects have contact.
>
> Best than just eliminating the top level implicit union would be to have
> another operator: the set (or aggregate) operator. The set operator would
> collect a set of bodies preserving each one as a separated entity. If you
> union the set, then they become one (possibly manifold) body only but
> before that the set may not represent a manifold. Its bodies may not even
> be disjoint. May be, I don't know, there is no non-manifold objects in the
> world but the world itself is not a manifold.
>
> If we go in that way, STL should be abandoned.
>
> 2016-02-04 13:17 GMT-02:00 doug moen <doug at moens.org>:
>
>> "a non-manifold face is a face internal to the body, it has material on
>> both sides and does not describe the external surface of the solid body."
>>
>> The ability to partition a solid into a collection of disjoint subvolumes
>> with shared faces is also useful in OpenSCAD; it's not just a ship
>> design/ACIS thing.
>>
>> One obvious example is 3D printing of multi-material/multi-colour
>> objects. There have been a number of discussions about how to support this
>> in OpenSCAD. Internally, the volumes for each colour/material need to be
>> kept separate and labeled. To export such a model, you either need to
>> export multiple STL files (one per material/colour), or you need to export
>> an AMF file with distinct volume elements for each colour/material. In no
>> case should any of the individual volumes that we track internally or
>> export contain non-manifold faces.
>>
>> This situation can arise in feature request #1562, which requests a
>> convex_decomposition() operator. The result of this operator is a group of
>> solids which share faces between them. Each group element is a convex
>> polyhedron, which is manifold. This feature isn't useful unless we get rid
>> of the implicit union that would otherwise occur when passing the results
>> of convex_decomposition() to another module: see issue #350. But, issue
>> #350 also eliminates the top level implicit union that occurs before
>> exporting an STL file. If we get rid of top level implicit union, and the
>> top level element in a script is a call to convex_decomposition() on
>> non-convex input, then we can't meaningfully export to STL. There is a
>> manifoldness check prior to STL export which *should* report this problem
>> (issue #1215). Exporting the same object to AMF can be supported, because
>> we can put each convex polyhedron into a separate volume.
>>
>> In summary, OpenSCAD should support models that contain disjoint
>> subvolumes with shared faces. There are features we need to add and
>> bugs/design flaws we need to fix before this support is complete.
>>
>> On 4 February 2016 at 02:13, <arnholm at arnholm.org> wrote:
>>
>>> On 2016-02-04 06:54, Triffid Hunter wrote:
>>>
>>>> non-manifold means that the topology is somehow ambiguous.
>>>>
>>>
>>> No, it does not.
>>>
>>> An example of non-manifold topology is where a topological edge is
>>> shared by more than 2 faces.
>>>
>>> http://docs.mcneel.com/rhino/5/help/en-us/popup_moreinformation/non-manifold_edges.htm
>>>
>>> It is not ambiguous, and in many cases a desired feature. This kind of
>>> non-manifold topology is much used in ship design when designing FEM models
>>> with shell elements. Often, non-manifold topology is perfectly acceptable
>>> and is not ambiguous in any way. CAD systems like e.g. ACIS (
>>> https://en.wikipedia.org/wiki/ACIS ) have no issues representing
>>> non-manifold topology.
>>>
>>> In the special case of 3d solid topological models, a non-manifold face
>>> is a face internal to the body, it has material on both sides and does not
>>> describe the external surface of the solid body. That does not mean it is
>>> topologically ambiguous. Such faces may be and are used for subdivision,
>>> for example to guide 3d solid meshing (solid FEM models). Whether such
>>> non-manifold topological entities are  desirable or not depends on the
>>> application area, but it is not topologically ambiguous.
>>>
>>> It is only when the topological description is non-existent things like
>>> this become a problem.
>>>
>>>
>>> Carsten Arnholm
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/3e7ac230/attachment.html>

From nop.head at gmail.com  Thu Feb  4 13:38:43 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 4 Feb 2016 18:38:43 +0000
Subject: [OpenSCAD] Fwd: dxf and stl import/rendering issue
In-Reply-To: <CAGV6i+O0R6X3-4NmEDuwgUJ-U8f-CMfGecPD0E5F-D-cJxBz9Q@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
	<CA+i9EaCXid49U8Y1UbV4A_xecmqh0KbWhscZeVWnLSJVw0wgRw@mail.gmail.com>
	<CAGV6i+O0R6X3-4NmEDuwgUJ-U8f-CMfGecPD0E5F-D-cJxBz9Q@mail.gmail.com>
Message-ID: <CAEEmnrPA_rzMftMpwjzjAwDKutTbNGYoVHTPGyTYU0E-fx7SUg@mail.gmail.com>

I have used group() explicitly to make a bunch of children into a first
child.

On 4 February 2016 at 18:04, doug moen <doug at moens.org> wrote:

> Ronaldo said: "Best than just eliminating the top level implicit union
> would be to have another operator: the set (or aggregate) operator. The set
> operator would collect a set of bodies preserving each one as a separated
> entity. If you union the set, then they become one (possibly manifold) body
> only but before that the set may not represent a manifold. Its bodies may
> not even be disjoint."
>
> We already have a "set (or aggregate)" operator. It is called "group". The
> explicit syntax is 'group() { shape1; shape2; ... }'. You can see this
> operator if you display the CSG tree. Nobody types it explicitly, because
> groups are generated implicitly for every module call (the 'children()' of
> a module call is represented by a group, and the output is always a group).
>
> There is a design flaw in how groups currently work. In short, too many
> groups are being implicitly generated. If the tail argument to a module
> call is a single (non-compound) statement, like a for loop or a module
> call, then the results returned by that statement (which may be a group)
> are wrapped in another group with a single element. This prevents you from
> feeding multiple outputs from one module call into another module as its
> children(). This is why intersection_for() exists.
>
> There is a plan to fix this problem, but it is called "lazy union",
> because the same feature also eliminates the implicit top level union.
> https://github.com/openscad/openscad/issues/350
>
> OpenSCAD2 fixes the problem by adopting so-called "lazy union" semantics
> for module calls, and also by reinterpreting the "{ ... }" syntax as the
> group constructor. In OpenSCAD2, groups are always constructed explicitly
> using {...} syntax, except for at the top level, where all top level
> objects are implicitly collected into a group.
>
> Even in OpenSCAD2, there is a requirement that each element of a group be
> either another group, or a manifold shape. The CGAL union operator requires
> that its arguments be manifold; that's where the restriction comes from.
>
> Doug Moen.
>
> On 4 February 2016 at 11:13, Ronaldo Persiano <rcmpersiano at gmail.com>
> wrote:
>
>> doug moen brings another important aspect to this discussion: " the top
>> level implicit union that occurs before exporting an STL file". STL is
>> intended to represent one object only presumably a 2-manifold and this
>> is a serious limitation of STL format. I agree that, excluding numerical
>> approximation issues, STL allows the recovering of the missing topological
>> information if and only if the geometrical embedding of it is a manifold.
>> As I showed before by examples, we can represent several non-disjoint
>> manifolds in STL as far as they do not have common vertices. But that is
>> very restrictive.
>>
>> I would like to represent not only one body in OSCAD. I would like to
>> represent a set of distinct (not necessarily disjoint) objects. One simple
>> application of that, besides the ones Arholm brought, is an animation of,
>> say, a ball bouncing in a billiard table. If I define a fixed table and a
>> ball on it, as their union is not a 2-manifold, I may have problems. Two
>> gears may have contact. In the real world, objects have contact.
>>
>> Best than just eliminating the top level implicit union would be to have
>> another operator: the set (or aggregate) operator. The set operator would
>> collect a set of bodies preserving each one as a separated entity. If you
>> union the set, then they become one (possibly manifold) body only but
>> before that the set may not represent a manifold. Its bodies may not even
>> be disjoint. May be, I don't know, there is no non-manifold objects in the
>> world but the world itself is not a manifold.
>>
>> If we go in that way, STL should be abandoned.
>>
>> 2016-02-04 13:17 GMT-02:00 doug moen <doug at moens.org>:
>>
>>> "a non-manifold face is a face internal to the body, it has material on
>>> both sides and does not describe the external surface of the solid body."
>>>
>>> The ability to partition a solid into a collection of disjoint
>>> subvolumes with shared faces is also useful in OpenSCAD; it's not just a
>>> ship design/ACIS thing.
>>>
>>> One obvious example is 3D printing of multi-material/multi-colour
>>> objects. There have been a number of discussions about how to support this
>>> in OpenSCAD. Internally, the volumes for each colour/material need to be
>>> kept separate and labeled. To export such a model, you either need to
>>> export multiple STL files (one per material/colour), or you need to export
>>> an AMF file with distinct volume elements for each colour/material. In no
>>> case should any of the individual volumes that we track internally or
>>> export contain non-manifold faces.
>>>
>>> This situation can arise in feature request #1562, which requests a
>>> convex_decomposition() operator. The result of this operator is a group of
>>> solids which share faces between them. Each group element is a convex
>>> polyhedron, which is manifold. This feature isn't useful unless we get rid
>>> of the implicit union that would otherwise occur when passing the results
>>> of convex_decomposition() to another module: see issue #350. But, issue
>>> #350 also eliminates the top level implicit union that occurs before
>>> exporting an STL file. If we get rid of top level implicit union, and the
>>> top level element in a script is a call to convex_decomposition() on
>>> non-convex input, then we can't meaningfully export to STL. There is a
>>> manifoldness check prior to STL export which *should* report this problem
>>> (issue #1215). Exporting the same object to AMF can be supported, because
>>> we can put each convex polyhedron into a separate volume.
>>>
>>> In summary, OpenSCAD should support models that contain disjoint
>>> subvolumes with shared faces. There are features we need to add and
>>> bugs/design flaws we need to fix before this support is complete.
>>>
>>> On 4 February 2016 at 02:13, <arnholm at arnholm.org> wrote:
>>>
>>>> On 2016-02-04 06:54, Triffid Hunter wrote:
>>>>
>>>>> non-manifold means that the topology is somehow ambiguous.
>>>>>
>>>>
>>>> No, it does not.
>>>>
>>>> An example of non-manifold topology is where a topological edge is
>>>> shared by more than 2 faces.
>>>>
>>>> http://docs.mcneel.com/rhino/5/help/en-us/popup_moreinformation/non-manifold_edges.htm
>>>>
>>>> It is not ambiguous, and in many cases a desired feature. This kind of
>>>> non-manifold topology is much used in ship design when designing FEM models
>>>> with shell elements. Often, non-manifold topology is perfectly acceptable
>>>> and is not ambiguous in any way. CAD systems like e.g. ACIS (
>>>> https://en.wikipedia.org/wiki/ACIS ) have no issues representing
>>>> non-manifold topology.
>>>>
>>>> In the special case of 3d solid topological models, a non-manifold face
>>>> is a face internal to the body, it has material on both sides and does not
>>>> describe the external surface of the solid body. That does not mean it is
>>>> topologically ambiguous. Such faces may be and are used for subdivision,
>>>> for example to guide 3d solid meshing (solid FEM models). Whether such
>>>> non-manifold topological entities are  desirable or not depends on the
>>>> application area, but it is not topologically ambiguous.
>>>>
>>>> It is only when the topological description is non-existent things like
>>>> this become a problem.
>>>>
>>>>
>>>> Carsten Arnholm
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>>
>>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/607626e3/attachment.html>

From doug at moens.org  Thu Feb  4 13:49:07 2016
From: doug at moens.org (doug moen)
Date: Thu, 4 Feb 2016 13:49:07 -0500
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <CAEEmnrPA_rzMftMpwjzjAwDKutTbNGYoVHTPGyTYU0E-fx7SUg@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
	<CA+i9EaCXid49U8Y1UbV4A_xecmqh0KbWhscZeVWnLSJVw0wgRw@mail.gmail.com>
	<CAGV6i+O0R6X3-4NmEDuwgUJ-U8f-CMfGecPD0E5F-D-cJxBz9Q@mail.gmail.com>
	<CAEEmnrPA_rzMftMpwjzjAwDKutTbNGYoVHTPGyTYU0E-fx7SUg@mail.gmail.com>
Message-ID: <CAGV6i+N8z9dmtOU-q-82H3m71o4xveqyKNPH3QxbXAbn21rvcg@mail.gmail.com>

Okay, cool. That probably means we should document the group() operator.

And you had to do that because {...} standing alone (not as a module
argument) doesn't create a group. This is unfortunately another
incompatibility with OpenSCAD2.

Doug.

On Thursday, 4 February 2016, nop head <nop.head at gmail.com> wrote:

> I have used group() explicitly to make a bunch of children into a first
> child.
>
> On 4 February 2016 at 18:04, doug moen <doug at moens.org
> <javascript:_e(%7B%7D,'cvml','doug at moens.org');>> wrote:
>
>> Ronaldo said: "Best than just eliminating the top level implicit union
>> would be to have another operator: the set (or aggregate) operator. The set
>> operator would collect a set of bodies preserving each one as a separated
>> entity. If you union the set, then they become one (possibly manifold) body
>> only but before that the set may not represent a manifold. Its bodies may
>> not even be disjoint."
>>
>> We already have a "set (or aggregate)" operator. It is called "group".
>> The explicit syntax is 'group() { shape1; shape2; ... }'. You can see this
>> operator if you display the CSG tree. Nobody types it explicitly, because
>> groups are generated implicitly for every module call (the 'children()' of
>> a module call is represented by a group, and the output is always a group).
>>
>> There is a design flaw in how groups currently work. In short, too many
>> groups are being implicitly generated. If the tail argument to a module
>> call is a single (non-compound) statement, like a for loop or a module
>> call, then the results returned by that statement (which may be a group)
>> are wrapped in another group with a single element. This prevents you from
>> feeding multiple outputs from one module call into another module as its
>> children(). This is why intersection_for() exists.
>>
>> There is a plan to fix this problem, but it is called "lazy union",
>> because the same feature also eliminates the implicit top level union.
>> https://github.com/openscad/openscad/issues/350
>>
>> OpenSCAD2 fixes the problem by adopting so-called "lazy union" semantics
>> for module calls, and also by reinterpreting the "{ ... }" syntax as the
>> group constructor. In OpenSCAD2, groups are always constructed explicitly
>> using {...} syntax, except for at the top level, where all top level
>> objects are implicitly collected into a group.
>>
>> Even in OpenSCAD2, there is a requirement that each element of a group be
>> either another group, or a manifold shape. The CGAL union operator requires
>> that its arguments be manifold; that's where the restriction comes from.
>>
>> Doug Moen.
>>
>> On 4 February 2016 at 11:13, Ronaldo Persiano <rcmpersiano at gmail.com
>> <javascript:_e(%7B%7D,'cvml','rcmpersiano at gmail.com');>> wrote:
>>
>>> doug moen brings another important aspect to this discussion: " the top
>>> level implicit union that occurs before exporting an STL file". STL is
>>> intended to represent one object only presumably a 2-manifold and this
>>> is a serious limitation of STL format. I agree that, excluding
>>> numerical approximation issues, STL allows the recovering of the missing
>>> topological information if and only if the geometrical embedding of it is a
>>> manifold. As I showed before by examples, we can represent several
>>> non-disjoint manifolds in STL as far as they do not have common vertices.
>>> But that is very restrictive.
>>>
>>> I would like to represent not only one body in OSCAD. I would like to
>>> represent a set of distinct (not necessarily disjoint) objects. One simple
>>> application of that, besides the ones Arholm brought, is an animation of,
>>> say, a ball bouncing in a billiard table. If I define a fixed table and a
>>> ball on it, as their union is not a 2-manifold, I may have problems. Two
>>> gears may have contact. In the real world, objects have contact.
>>>
>>> Best than just eliminating the top level implicit union would be to
>>> have another operator: the set (or aggregate) operator. The set operator
>>> would collect a set of bodies preserving each one as a separated entity. If
>>> you union the set, then they become one (possibly manifold) body only but
>>> before that the set may not represent a manifold. Its bodies may not even
>>> be disjoint. May be, I don't know, there is no non-manifold objects in the
>>> world but the world itself is not a manifold.
>>>
>>> If we go in that way, STL should be abandoned.
>>>
>>> 2016-02-04 13:17 GMT-02:00 doug moen <doug at moens.org
>>> <javascript:_e(%7B%7D,'cvml','doug at moens.org');>>:
>>>
>>>> "a non-manifold face is a face internal to the body, it has material
>>>> on both sides and does not describe the external surface of the solid body."
>>>>
>>>> The ability to partition a solid into a collection of disjoint
>>>> subvolumes with shared faces is also useful in OpenSCAD; it's not just a
>>>> ship design/ACIS thing.
>>>>
>>>> One obvious example is 3D printing of multi-material/multi-colour
>>>> objects. There have been a number of discussions about how to support this
>>>> in OpenSCAD. Internally, the volumes for each colour/material need to be
>>>> kept separate and labeled. To export such a model, you either need to
>>>> export multiple STL files (one per material/colour), or you need to export
>>>> an AMF file with distinct volume elements for each colour/material. In no
>>>> case should any of the individual volumes that we track internally or
>>>> export contain non-manifold faces.
>>>>
>>>> This situation can arise in feature request #1562, which requests a
>>>> convex_decomposition() operator. The result of this operator is a group of
>>>> solids which share faces between them. Each group element is a convex
>>>> polyhedron, which is manifold. This feature isn't useful unless we get rid
>>>> of the implicit union that would otherwise occur when passing the results
>>>> of convex_decomposition() to another module: see issue #350. But, issue
>>>> #350 also eliminates the top level implicit union that occurs before
>>>> exporting an STL file. If we get rid of top level implicit union, and the
>>>> top level element in a script is a call to convex_decomposition() on
>>>> non-convex input, then we can't meaningfully export to STL. There is a
>>>> manifoldness check prior to STL export which *should* report this problem
>>>> (issue #1215). Exporting the same object to AMF can be supported, because
>>>> we can put each convex polyhedron into a separate volume.
>>>>
>>>> In summary, OpenSCAD should support models that contain disjoint
>>>> subvolumes with shared faces. There are features we need to add and
>>>> bugs/design flaws we need to fix before this support is complete.
>>>>
>>>> On 4 February 2016 at 02:13, <arnholm at arnholm.org
>>>> <javascript:_e(%7B%7D,'cvml','arnholm at arnholm.org');>> wrote:
>>>>
>>>>> On 2016-02-04 06:54, Triffid Hunter wrote:
>>>>>
>>>>>> non-manifold means that the topology is somehow ambiguous.
>>>>>>
>>>>>
>>>>> No, it does not.
>>>>>
>>>>> An example of non-manifold topology is where a topological edge is
>>>>> shared by more than 2 faces.
>>>>>
>>>>> http://docs.mcneel.com/rhino/5/help/en-us/popup_moreinformation/non-manifold_edges.htm
>>>>>
>>>>> It is not ambiguous, and in many cases a desired feature. This kind of
>>>>> non-manifold topology is much used in ship design when designing FEM models
>>>>> with shell elements. Often, non-manifold topology is perfectly acceptable
>>>>> and is not ambiguous in any way. CAD systems like e.g. ACIS (
>>>>> https://en.wikipedia.org/wiki/ACIS ) have no issues representing
>>>>> non-manifold topology.
>>>>>
>>>>> In the special case of 3d solid topological models, a non-manifold
>>>>> face is a face internal to the body, it has material on both sides and does
>>>>> not describe the external surface of the solid body. That does not mean it
>>>>> is topologically ambiguous. Such faces may be and are used for subdivision,
>>>>> for example to guide 3d solid meshing (solid FEM models). Whether such
>>>>> non-manifold topological entities are  desirable or not depends on the
>>>>> application area, but it is not topologically ambiguous.
>>>>>
>>>>> It is only when the topological description is non-existent things
>>>>> like this become a problem.
>>>>>
>>>>>
>>>>> Carsten Arnholm
>>>>>
>>>>> _______________________________________________
>>>>> OpenSCAD mailing list
>>>>> Discuss at lists.openscad.org
>>>>> <javascript:_e(%7B%7D,'cvml','Discuss at lists.openscad.org');>
>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>
>>>>>
>>>>>
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> <javascript:_e(%7B%7D,'cvml','Discuss at lists.openscad.org');>
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> <javascript:_e(%7B%7D,'cvml','Discuss at lists.openscad.org');>
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> <javascript:_e(%7B%7D,'cvml','Discuss at lists.openscad.org');>
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/8a686116/attachment.html>

From nop.head at gmail.com  Thu Feb  4 14:00:00 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 4 Feb 2016 19:00:00 +0000
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <CAGV6i+N8z9dmtOU-q-82H3m71o4xveqyKNPH3QxbXAbn21rvcg@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
	<CA+i9EaCXid49U8Y1UbV4A_xecmqh0KbWhscZeVWnLSJVw0wgRw@mail.gmail.com>
	<CAGV6i+O0R6X3-4NmEDuwgUJ-U8f-CMfGecPD0E5F-D-cJxBz9Q@mail.gmail.com>
	<CAEEmnrPA_rzMftMpwjzjAwDKutTbNGYoVHTPGyTYU0E-fx7SUg@mail.gmail.com>
	<CAGV6i+N8z9dmtOU-q-82H3m71o4xveqyKNPH3QxbXAbn21rvcg@mail.gmail.com>
Message-ID: <CAEEmnrP++RzpUU1QAYcyk-pQwa66j=dd9P6z77tyuixNoF90ag@mail.gmail.com>

Yes but if {...} made a group, how would you pass multiple children as
separate children?

On 4 February 2016 at 18:49, doug moen <doug at moens.org> wrote:

> Okay, cool. That probably means we should document the group() operator.
>
> And you had to do that because {...} standing alone (not as a module
> argument) doesn't create a group. This is unfortunately another
> incompatibility with OpenSCAD2.
>
> Doug.
>
>
> On Thursday, 4 February 2016, nop head <nop.head at gmail.com> wrote:
>
>> I have used group() explicitly to make a bunch of children into a first
>> child.
>>
>> On 4 February 2016 at 18:04, doug moen <doug at moens.org> wrote:
>>
>>> Ronaldo said: "Best than just eliminating the top level implicit union
>>> would be to have another operator: the set (or aggregate) operator. The set
>>> operator would collect a set of bodies preserving each one as a separated
>>> entity. If you union the set, then they become one (possibly manifold) body
>>> only but before that the set may not represent a manifold. Its bodies may
>>> not even be disjoint."
>>>
>>> We already have a "set (or aggregate)" operator. It is called "group".
>>> The explicit syntax is 'group() { shape1; shape2; ... }'. You can see this
>>> operator if you display the CSG tree. Nobody types it explicitly, because
>>> groups are generated implicitly for every module call (the 'children()' of
>>> a module call is represented by a group, and the output is always a group).
>>>
>>> There is a design flaw in how groups currently work. In short, too many
>>> groups are being implicitly generated. If the tail argument to a module
>>> call is a single (non-compound) statement, like a for loop or a module
>>> call, then the results returned by that statement (which may be a group)
>>> are wrapped in another group with a single element. This prevents you from
>>> feeding multiple outputs from one module call into another module as its
>>> children(). This is why intersection_for() exists.
>>>
>>> There is a plan to fix this problem, but it is called "lazy union",
>>> because the same feature also eliminates the implicit top level union.
>>> https://github.com/openscad/openscad/issues/350
>>>
>>> OpenSCAD2 fixes the problem by adopting so-called "lazy union" semantics
>>> for module calls, and also by reinterpreting the "{ ... }" syntax as the
>>> group constructor. In OpenSCAD2, groups are always constructed explicitly
>>> using {...} syntax, except for at the top level, where all top level
>>> objects are implicitly collected into a group.
>>>
>>> Even in OpenSCAD2, there is a requirement that each element of a group
>>> be either another group, or a manifold shape. The CGAL union operator
>>> requires that its arguments be manifold; that's where the restriction comes
>>> from.
>>>
>>> Doug Moen.
>>>
>>> On 4 February 2016 at 11:13, Ronaldo Persiano <rcmpersiano at gmail.com>
>>> wrote:
>>>
>>>> doug moen brings another important aspect to this discussion: " the
>>>> top level implicit union that occurs before exporting an STL file". STL is
>>>> intended to represent one object only presumably a 2-manifold and this
>>>> is a serious limitation of STL format. I agree that, excluding
>>>> numerical approximation issues, STL allows the recovering of the missing
>>>> topological information if and only if the geometrical embedding of it is a
>>>> manifold. As I showed before by examples, we can represent several
>>>> non-disjoint manifolds in STL as far as they do not have common vertices.
>>>> But that is very restrictive.
>>>>
>>>> I would like to represent not only one body in OSCAD. I would like to
>>>> represent a set of distinct (not necessarily disjoint) objects. One simple
>>>> application of that, besides the ones Arholm brought, is an animation of,
>>>> say, a ball bouncing in a billiard table. If I define a fixed table and a
>>>> ball on it, as their union is not a 2-manifold, I may have problems. Two
>>>> gears may have contact. In the real world, objects have contact.
>>>>
>>>> Best than just eliminating the top level implicit union would be to
>>>> have another operator: the set (or aggregate) operator. The set operator
>>>> would collect a set of bodies preserving each one as a separated entity. If
>>>> you union the set, then they become one (possibly manifold) body only but
>>>> before that the set may not represent a manifold. Its bodies may not even
>>>> be disjoint. May be, I don't know, there is no non-manifold objects in the
>>>> world but the world itself is not a manifold.
>>>>
>>>> If we go in that way, STL should be abandoned.
>>>>
>>>> 2016-02-04 13:17 GMT-02:00 doug moen <doug at moens.org>:
>>>>
>>>>> "a non-manifold face is a face internal to the body, it has material
>>>>> on both sides and does not describe the external surface of the solid body."
>>>>>
>>>>> The ability to partition a solid into a collection of disjoint
>>>>> subvolumes with shared faces is also useful in OpenSCAD; it's not just a
>>>>> ship design/ACIS thing.
>>>>>
>>>>> One obvious example is 3D printing of multi-material/multi-colour
>>>>> objects. There have been a number of discussions about how to support this
>>>>> in OpenSCAD. Internally, the volumes for each colour/material need to be
>>>>> kept separate and labeled. To export such a model, you either need to
>>>>> export multiple STL files (one per material/colour), or you need to export
>>>>> an AMF file with distinct volume elements for each colour/material. In no
>>>>> case should any of the individual volumes that we track internally or
>>>>> export contain non-manifold faces.
>>>>>
>>>>> This situation can arise in feature request #1562, which requests a
>>>>> convex_decomposition() operator. The result of this operator is a group of
>>>>> solids which share faces between them. Each group element is a convex
>>>>> polyhedron, which is manifold. This feature isn't useful unless we get rid
>>>>> of the implicit union that would otherwise occur when passing the results
>>>>> of convex_decomposition() to another module: see issue #350. But, issue
>>>>> #350 also eliminates the top level implicit union that occurs before
>>>>> exporting an STL file. If we get rid of top level implicit union, and the
>>>>> top level element in a script is a call to convex_decomposition() on
>>>>> non-convex input, then we can't meaningfully export to STL. There is a
>>>>> manifoldness check prior to STL export which *should* report this problem
>>>>> (issue #1215). Exporting the same object to AMF can be supported, because
>>>>> we can put each convex polyhedron into a separate volume.
>>>>>
>>>>> In summary, OpenSCAD should support models that contain disjoint
>>>>> subvolumes with shared faces. There are features we need to add and
>>>>> bugs/design flaws we need to fix before this support is complete.
>>>>>
>>>>> On 4 February 2016 at 02:13, <arnholm at arnholm.org> wrote:
>>>>>
>>>>>> On 2016-02-04 06:54, Triffid Hunter wrote:
>>>>>>
>>>>>>> non-manifold means that the topology is somehow ambiguous.
>>>>>>>
>>>>>>
>>>>>> No, it does not.
>>>>>>
>>>>>> An example of non-manifold topology is where a topological edge is
>>>>>> shared by more than 2 faces.
>>>>>>
>>>>>> http://docs.mcneel.com/rhino/5/help/en-us/popup_moreinformation/non-manifold_edges.htm
>>>>>>
>>>>>> It is not ambiguous, and in many cases a desired feature. This kind
>>>>>> of non-manifold topology is much used in ship design when designing FEM
>>>>>> models with shell elements. Often, non-manifold topology is perfectly
>>>>>> acceptable and is not ambiguous in any way. CAD systems like e.g. ACIS (
>>>>>> https://en.wikipedia.org/wiki/ACIS ) have no issues representing
>>>>>> non-manifold topology.
>>>>>>
>>>>>> In the special case of 3d solid topological models, a non-manifold
>>>>>> face is a face internal to the body, it has material on both sides and does
>>>>>> not describe the external surface of the solid body. That does not mean it
>>>>>> is topologically ambiguous. Such faces may be and are used for subdivision,
>>>>>> for example to guide 3d solid meshing (solid FEM models). Whether such
>>>>>> non-manifold topological entities are  desirable or not depends on the
>>>>>> application area, but it is not topologically ambiguous.
>>>>>>
>>>>>> It is only when the topological description is non-existent things
>>>>>> like this become a problem.
>>>>>>
>>>>>>
>>>>>> Carsten Arnholm
>>>>>>
>>>>>> _______________________________________________
>>>>>> OpenSCAD mailing list
>>>>>> Discuss at lists.openscad.org
>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>
>>>>>>
>>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> OpenSCAD mailing list
>>>>> Discuss at lists.openscad.org
>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>
>>>>>
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/26c3db33/attachment.html>

From nop.head at gmail.com  Thu Feb  4 14:02:21 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 4 Feb 2016 19:02:21 +0000
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <CAEEmnrP++RzpUU1QAYcyk-pQwa66j=dd9P6z77tyuixNoF90ag@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
	<CA+i9EaCXid49U8Y1UbV4A_xecmqh0KbWhscZeVWnLSJVw0wgRw@mail.gmail.com>
	<CAGV6i+O0R6X3-4NmEDuwgUJ-U8f-CMfGecPD0E5F-D-cJxBz9Q@mail.gmail.com>
	<CAEEmnrPA_rzMftMpwjzjAwDKutTbNGYoVHTPGyTYU0E-fx7SUg@mail.gmail.com>
	<CAGV6i+N8z9dmtOU-q-82H3m71o4xveqyKNPH3QxbXAbn21rvcg@mail.gmail.com>
	<CAEEmnrP++RzpUU1QAYcyk-pQwa66j=dd9P6z77tyuixNoF90ag@mail.gmail.com>
Message-ID: <CAEEmnrNPE7j_1pv-hT+QSNyAL_eVJS1y5tb4kynit=pxWZ0TsA@mail.gmail.com>

Or do you mean that children are module arguments?

On 4 February 2016 at 19:00, nop head <nop.head at gmail.com> wrote:

> Yes but if {...} made a group, how would you pass multiple children as
> separate children?
>
> On 4 February 2016 at 18:49, doug moen <doug at moens.org> wrote:
>
>> Okay, cool. That probably means we should document the group() operator.
>>
>> And you had to do that because {...} standing alone (not as a module
>> argument) doesn't create a group. This is unfortunately another
>> incompatibility with OpenSCAD2.
>>
>> Doug.
>>
>>
>> On Thursday, 4 February 2016, nop head <nop.head at gmail.com> wrote:
>>
>>> I have used group() explicitly to make a bunch of children into a first
>>> child.
>>>
>>> On 4 February 2016 at 18:04, doug moen <doug at moens.org> wrote:
>>>
>>>> Ronaldo said: "Best than just eliminating the top level implicit union
>>>> would be to have another operator: the set (or aggregate) operator. The set
>>>> operator would collect a set of bodies preserving each one as a separated
>>>> entity. If you union the set, then they become one (possibly manifold) body
>>>> only but before that the set may not represent a manifold. Its bodies may
>>>> not even be disjoint."
>>>>
>>>> We already have a "set (or aggregate)" operator. It is called "group".
>>>> The explicit syntax is 'group() { shape1; shape2; ... }'. You can see this
>>>> operator if you display the CSG tree. Nobody types it explicitly, because
>>>> groups are generated implicitly for every module call (the 'children()' of
>>>> a module call is represented by a group, and the output is always a group).
>>>>
>>>> There is a design flaw in how groups currently work. In short, too many
>>>> groups are being implicitly generated. If the tail argument to a module
>>>> call is a single (non-compound) statement, like a for loop or a module
>>>> call, then the results returned by that statement (which may be a group)
>>>> are wrapped in another group with a single element. This prevents you from
>>>> feeding multiple outputs from one module call into another module as its
>>>> children(). This is why intersection_for() exists.
>>>>
>>>> There is a plan to fix this problem, but it is called "lazy union",
>>>> because the same feature also eliminates the implicit top level union.
>>>> https://github.com/openscad/openscad/issues/350
>>>>
>>>> OpenSCAD2 fixes the problem by adopting so-called "lazy union"
>>>> semantics for module calls, and also by reinterpreting the "{ ... }" syntax
>>>> as the group constructor. In OpenSCAD2, groups are always constructed
>>>> explicitly using {...} syntax, except for at the top level, where all top
>>>> level objects are implicitly collected into a group.
>>>>
>>>> Even in OpenSCAD2, there is a requirement that each element of a group
>>>> be either another group, or a manifold shape. The CGAL union operator
>>>> requires that its arguments be manifold; that's where the restriction comes
>>>> from.
>>>>
>>>> Doug Moen.
>>>>
>>>> On 4 February 2016 at 11:13, Ronaldo Persiano <rcmpersiano at gmail.com>
>>>> wrote:
>>>>
>>>>> doug moen brings another important aspect to this discussion: " the
>>>>> top level implicit union that occurs before exporting an STL file". STL is
>>>>> intended to represent one object only presumably a 2-manifold and this
>>>>> is a serious limitation of STL format. I agree that, excluding
>>>>> numerical approximation issues, STL allows the recovering of the missing
>>>>> topological information if and only if the geometrical embedding of it is a
>>>>> manifold. As I showed before by examples, we can represent several
>>>>> non-disjoint manifolds in STL as far as they do not have common vertices.
>>>>> But that is very restrictive.
>>>>>
>>>>> I would like to represent not only one body in OSCAD. I would like to
>>>>> represent a set of distinct (not necessarily disjoint) objects. One simple
>>>>> application of that, besides the ones Arholm brought, is an animation of,
>>>>> say, a ball bouncing in a billiard table. If I define a fixed table and a
>>>>> ball on it, as their union is not a 2-manifold, I may have problems. Two
>>>>> gears may have contact. In the real world, objects have contact.
>>>>>
>>>>> Best than just eliminating the top level implicit union would be to
>>>>> have another operator: the set (or aggregate) operator. The set operator
>>>>> would collect a set of bodies preserving each one as a separated entity. If
>>>>> you union the set, then they become one (possibly manifold) body only but
>>>>> before that the set may not represent a manifold. Its bodies may not even
>>>>> be disjoint. May be, I don't know, there is no non-manifold objects in the
>>>>> world but the world itself is not a manifold.
>>>>>
>>>>> If we go in that way, STL should be abandoned.
>>>>>
>>>>> 2016-02-04 13:17 GMT-02:00 doug moen <doug at moens.org>:
>>>>>
>>>>>> "a non-manifold face is a face internal to the body, it has material
>>>>>> on both sides and does not describe the external surface of the solid body."
>>>>>>
>>>>>> The ability to partition a solid into a collection of disjoint
>>>>>> subvolumes with shared faces is also useful in OpenSCAD; it's not just a
>>>>>> ship design/ACIS thing.
>>>>>>
>>>>>> One obvious example is 3D printing of multi-material/multi-colour
>>>>>> objects. There have been a number of discussions about how to support this
>>>>>> in OpenSCAD. Internally, the volumes for each colour/material need to be
>>>>>> kept separate and labeled. To export such a model, you either need to
>>>>>> export multiple STL files (one per material/colour), or you need to export
>>>>>> an AMF file with distinct volume elements for each colour/material. In no
>>>>>> case should any of the individual volumes that we track internally or
>>>>>> export contain non-manifold faces.
>>>>>>
>>>>>> This situation can arise in feature request #1562, which requests a
>>>>>> convex_decomposition() operator. The result of this operator is a group of
>>>>>> solids which share faces between them. Each group element is a convex
>>>>>> polyhedron, which is manifold. This feature isn't useful unless we get rid
>>>>>> of the implicit union that would otherwise occur when passing the results
>>>>>> of convex_decomposition() to another module: see issue #350. But, issue
>>>>>> #350 also eliminates the top level implicit union that occurs before
>>>>>> exporting an STL file. If we get rid of top level implicit union, and the
>>>>>> top level element in a script is a call to convex_decomposition() on
>>>>>> non-convex input, then we can't meaningfully export to STL. There is a
>>>>>> manifoldness check prior to STL export which *should* report this problem
>>>>>> (issue #1215). Exporting the same object to AMF can be supported, because
>>>>>> we can put each convex polyhedron into a separate volume.
>>>>>>
>>>>>> In summary, OpenSCAD should support models that contain disjoint
>>>>>> subvolumes with shared faces. There are features we need to add and
>>>>>> bugs/design flaws we need to fix before this support is complete.
>>>>>>
>>>>>> On 4 February 2016 at 02:13, <arnholm at arnholm.org> wrote:
>>>>>>
>>>>>>> On 2016-02-04 06:54, Triffid Hunter wrote:
>>>>>>>
>>>>>>>> non-manifold means that the topology is somehow ambiguous.
>>>>>>>>
>>>>>>>
>>>>>>> No, it does not.
>>>>>>>
>>>>>>> An example of non-manifold topology is where a topological edge is
>>>>>>> shared by more than 2 faces.
>>>>>>>
>>>>>>> http://docs.mcneel.com/rhino/5/help/en-us/popup_moreinformation/non-manifold_edges.htm
>>>>>>>
>>>>>>> It is not ambiguous, and in many cases a desired feature. This kind
>>>>>>> of non-manifold topology is much used in ship design when designing FEM
>>>>>>> models with shell elements. Often, non-manifold topology is perfectly
>>>>>>> acceptable and is not ambiguous in any way. CAD systems like e.g. ACIS (
>>>>>>> https://en.wikipedia.org/wiki/ACIS ) have no issues representing
>>>>>>> non-manifold topology.
>>>>>>>
>>>>>>> In the special case of 3d solid topological models, a non-manifold
>>>>>>> face is a face internal to the body, it has material on both sides and does
>>>>>>> not describe the external surface of the solid body. That does not mean it
>>>>>>> is topologically ambiguous. Such faces may be and are used for subdivision,
>>>>>>> for example to guide 3d solid meshing (solid FEM models). Whether such
>>>>>>> non-manifold topological entities are  desirable or not depends on the
>>>>>>> application area, but it is not topologically ambiguous.
>>>>>>>
>>>>>>> It is only when the topological description is non-existent things
>>>>>>> like this become a problem.
>>>>>>>
>>>>>>>
>>>>>>> Carsten Arnholm
>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> OpenSCAD mailing list
>>>>>>> Discuss at lists.openscad.org
>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>
>>>>>> _______________________________________________
>>>>>> OpenSCAD mailing list
>>>>>> Discuss at lists.openscad.org
>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>
>>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> OpenSCAD mailing list
>>>>> Discuss at lists.openscad.org
>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>
>>>>>
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>>
>>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/937c6b00/attachment.html>

From doug at moens.org  Thu Feb  4 15:21:16 2016
From: doug at moens.org (doug moen)
Date: Thu, 4 Feb 2016 15:21:16 -0500
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <CAEEmnrP++RzpUU1QAYcyk-pQwa66j=dd9P6z77tyuixNoF90ag@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
	<CA+i9EaCXid49U8Y1UbV4A_xecmqh0KbWhscZeVWnLSJVw0wgRw@mail.gmail.com>
	<CAGV6i+O0R6X3-4NmEDuwgUJ-U8f-CMfGecPD0E5F-D-cJxBz9Q@mail.gmail.com>
	<CAEEmnrPA_rzMftMpwjzjAwDKutTbNGYoVHTPGyTYU0E-fx7SUg@mail.gmail.com>
	<CAGV6i+N8z9dmtOU-q-82H3m71o4xveqyKNPH3QxbXAbn21rvcg@mail.gmail.com>
	<CAEEmnrP++RzpUU1QAYcyk-pQwa66j=dd9P6z77tyuixNoF90ag@mail.gmail.com>
Message-ID: <CAGV6i+N76=EHUhS5F+vA3mfA-cUqa5f96ZZ7djNKi+B2tDHvbQ@mail.gmail.com>

Consider this code:

module m()
{
    cube(10,center=true);
    sphere(6,center=true);
};

m() returns a group containing two children, a cube and a sphere. The use
of '{...}' is necessary here to construct a group containing more than one
child.

Now consider this:

module m2()
{
    {
        cube(10,center=true);
        sphere(6,center=true);
    }
    cylinder(r=1,h=20,center=true);
}

I would like m2() to return a group with 2 children; the first child is a
group of a cube and sphere, the second child is the cylinder.

What actually happens is that the inner {....} brackets are ignored, and a
group of 3 shapes is returned.

This, I think, is the situation where the group(){...} syntax must be used
explicitly. If {...} worked the way I think it should work, then you
wouldn't need to call group() explicitly. We wouldn't need group() at all,
and we could just use {...} in the CSG tree.

In a related matter, I also think that variables defined within {...}
should be local to the {...} in all cases, but that doesn't happen either,
in the same case where {...} fails to form a group.

Doug.

On 4 February 2016 at 14:00, nop head <nop.head at gmail.com> wrote:

> Yes but if {...} made a group, how would you pass multiple children as
> separate children?
>
> On 4 February 2016 at 18:49, doug moen <doug at moens.org> wrote:
>
>> Okay, cool. That probably means we should document the group() operator.
>>
>> And you had to do that because {...} standing alone (not as a module
>> argument) doesn't create a group. This is unfortunately another
>> incompatibility with OpenSCAD2.
>>
>> Doug.
>>
>>
>> On Thursday, 4 February 2016, nop head <nop.head at gmail.com> wrote:
>>
>>> I have used group() explicitly to make a bunch of children into a first
>>> child.
>>>
>>> On 4 February 2016 at 18:04, doug moen <doug at moens.org> wrote:
>>>
>>>> Ronaldo said: "Best than just eliminating the top level implicit union
>>>> would be to have another operator: the set (or aggregate) operator. The set
>>>> operator would collect a set of bodies preserving each one as a separated
>>>> entity. If you union the set, then they become one (possibly manifold) body
>>>> only but before that the set may not represent a manifold. Its bodies may
>>>> not even be disjoint."
>>>>
>>>> We already have a "set (or aggregate)" operator. It is called "group".
>>>> The explicit syntax is 'group() { shape1; shape2; ... }'. You can see this
>>>> operator if you display the CSG tree. Nobody types it explicitly, because
>>>> groups are generated implicitly for every module call (the 'children()' of
>>>> a module call is represented by a group, and the output is always a group).
>>>>
>>>> There is a design flaw in how groups currently work. In short, too many
>>>> groups are being implicitly generated. If the tail argument to a module
>>>> call is a single (non-compound) statement, like a for loop or a module
>>>> call, then the results returned by that statement (which may be a group)
>>>> are wrapped in another group with a single element. This prevents you from
>>>> feeding multiple outputs from one module call into another module as its
>>>> children(). This is why intersection_for() exists.
>>>>
>>>> There is a plan to fix this problem, but it is called "lazy union",
>>>> because the same feature also eliminates the implicit top level union.
>>>> https://github.com/openscad/openscad/issues/350
>>>>
>>>> OpenSCAD2 fixes the problem by adopting so-called "lazy union"
>>>> semantics for module calls, and also by reinterpreting the "{ ... }" syntax
>>>> as the group constructor. In OpenSCAD2, groups are always constructed
>>>> explicitly using {...} syntax, except for at the top level, where all top
>>>> level objects are implicitly collected into a group.
>>>>
>>>> Even in OpenSCAD2, there is a requirement that each element of a group
>>>> be either another group, or a manifold shape. The CGAL union operator
>>>> requires that its arguments be manifold; that's where the restriction comes
>>>> from.
>>>>
>>>> Doug Moen.
>>>>
>>>> On 4 February 2016 at 11:13, Ronaldo Persiano <rcmpersiano at gmail.com>
>>>> wrote:
>>>>
>>>>> doug moen brings another important aspect to this discussion: " the
>>>>> top level implicit union that occurs before exporting an STL file". STL is
>>>>> intended to represent one object only presumably a 2-manifold and this
>>>>> is a serious limitation of STL format. I agree that, excluding
>>>>> numerical approximation issues, STL allows the recovering of the missing
>>>>> topological information if and only if the geometrical embedding of it is a
>>>>> manifold. As I showed before by examples, we can represent several
>>>>> non-disjoint manifolds in STL as far as they do not have common vertices.
>>>>> But that is very restrictive.
>>>>>
>>>>> I would like to represent not only one body in OSCAD. I would like to
>>>>> represent a set of distinct (not necessarily disjoint) objects. One simple
>>>>> application of that, besides the ones Arholm brought, is an animation of,
>>>>> say, a ball bouncing in a billiard table. If I define a fixed table and a
>>>>> ball on it, as their union is not a 2-manifold, I may have problems. Two
>>>>> gears may have contact. In the real world, objects have contact.
>>>>>
>>>>> Best than just eliminating the top level implicit union would be to
>>>>> have another operator: the set (or aggregate) operator. The set operator
>>>>> would collect a set of bodies preserving each one as a separated entity. If
>>>>> you union the set, then they become one (possibly manifold) body only but
>>>>> before that the set may not represent a manifold. Its bodies may not even
>>>>> be disjoint. May be, I don't know, there is no non-manifold objects in the
>>>>> world but the world itself is not a manifold.
>>>>>
>>>>> If we go in that way, STL should be abandoned.
>>>>>
>>>>> 2016-02-04 13:17 GMT-02:00 doug moen <doug at moens.org>:
>>>>>
>>>>>> "a non-manifold face is a face internal to the body, it has material
>>>>>> on both sides and does not describe the external surface of the solid body."
>>>>>>
>>>>>> The ability to partition a solid into a collection of disjoint
>>>>>> subvolumes with shared faces is also useful in OpenSCAD; it's not just a
>>>>>> ship design/ACIS thing.
>>>>>>
>>>>>> One obvious example is 3D printing of multi-material/multi-colour
>>>>>> objects. There have been a number of discussions about how to support this
>>>>>> in OpenSCAD. Internally, the volumes for each colour/material need to be
>>>>>> kept separate and labeled. To export such a model, you either need to
>>>>>> export multiple STL files (one per material/colour), or you need to export
>>>>>> an AMF file with distinct volume elements for each colour/material. In no
>>>>>> case should any of the individual volumes that we track internally or
>>>>>> export contain non-manifold faces.
>>>>>>
>>>>>> This situation can arise in feature request #1562, which requests a
>>>>>> convex_decomposition() operator. The result of this operator is a group of
>>>>>> solids which share faces between them. Each group element is a convex
>>>>>> polyhedron, which is manifold. This feature isn't useful unless we get rid
>>>>>> of the implicit union that would otherwise occur when passing the results
>>>>>> of convex_decomposition() to another module: see issue #350. But, issue
>>>>>> #350 also eliminates the top level implicit union that occurs before
>>>>>> exporting an STL file. If we get rid of top level implicit union, and the
>>>>>> top level element in a script is a call to convex_decomposition() on
>>>>>> non-convex input, then we can't meaningfully export to STL. There is a
>>>>>> manifoldness check prior to STL export which *should* report this problem
>>>>>> (issue #1215). Exporting the same object to AMF can be supported, because
>>>>>> we can put each convex polyhedron into a separate volume.
>>>>>>
>>>>>> In summary, OpenSCAD should support models that contain disjoint
>>>>>> subvolumes with shared faces. There are features we need to add and
>>>>>> bugs/design flaws we need to fix before this support is complete.
>>>>>>
>>>>>> On 4 February 2016 at 02:13, <arnholm at arnholm.org> wrote:
>>>>>>
>>>>>>> On 2016-02-04 06:54, Triffid Hunter wrote:
>>>>>>>
>>>>>>>> non-manifold means that the topology is somehow ambiguous.
>>>>>>>>
>>>>>>>
>>>>>>> No, it does not.
>>>>>>>
>>>>>>> An example of non-manifold topology is where a topological edge is
>>>>>>> shared by more than 2 faces.
>>>>>>>
>>>>>>> http://docs.mcneel.com/rhino/5/help/en-us/popup_moreinformation/non-manifold_edges.htm
>>>>>>>
>>>>>>> It is not ambiguous, and in many cases a desired feature. This kind
>>>>>>> of non-manifold topology is much used in ship design when designing FEM
>>>>>>> models with shell elements. Often, non-manifold topology is perfectly
>>>>>>> acceptable and is not ambiguous in any way. CAD systems like e.g. ACIS (
>>>>>>> https://en.wikipedia.org/wiki/ACIS ) have no issues representing
>>>>>>> non-manifold topology.
>>>>>>>
>>>>>>> In the special case of 3d solid topological models, a non-manifold
>>>>>>> face is a face internal to the body, it has material on both sides and does
>>>>>>> not describe the external surface of the solid body. That does not mean it
>>>>>>> is topologically ambiguous. Such faces may be and are used for subdivision,
>>>>>>> for example to guide 3d solid meshing (solid FEM models). Whether such
>>>>>>> non-manifold topological entities are  desirable or not depends on the
>>>>>>> application area, but it is not topologically ambiguous.
>>>>>>>
>>>>>>> It is only when the topological description is non-existent things
>>>>>>> like this become a problem.
>>>>>>>
>>>>>>>
>>>>>>> Carsten Arnholm
>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> OpenSCAD mailing list
>>>>>>> Discuss at lists.openscad.org
>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>
>>>>>> _______________________________________________
>>>>>> OpenSCAD mailing list
>>>>>> Discuss at lists.openscad.org
>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>
>>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> OpenSCAD mailing list
>>>>> Discuss at lists.openscad.org
>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>
>>>>>
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>>
>>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/1f83e419/attachment.html>

From rcmpersiano at gmail.com  Thu Feb  4 15:34:36 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Thu, 4 Feb 2016 18:34:36 -0200
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <CAGV6i+N76=EHUhS5F+vA3mfA-cUqa5f96ZZ7djNKi+B2tDHvbQ@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
	<CA+i9EaCXid49U8Y1UbV4A_xecmqh0KbWhscZeVWnLSJVw0wgRw@mail.gmail.com>
	<CAGV6i+O0R6X3-4NmEDuwgUJ-U8f-CMfGecPD0E5F-D-cJxBz9Q@mail.gmail.com>
	<CAEEmnrPA_rzMftMpwjzjAwDKutTbNGYoVHTPGyTYU0E-fx7SUg@mail.gmail.com>
	<CAGV6i+N8z9dmtOU-q-82H3m71o4xveqyKNPH3QxbXAbn21rvcg@mail.gmail.com>
	<CAEEmnrP++RzpUU1QAYcyk-pQwa66j=dd9P6z77tyuixNoF90ag@mail.gmail.com>
	<CAGV6i+N76=EHUhS5F+vA3mfA-cUqa5f96ZZ7djNKi+B2tDHvbQ@mail.gmail.com>
Message-ID: <CA+i9EaD2ZK__4xwSScJ=tX+r+DX7-2hipBpxSWQzyr0kuFg9cw@mail.gmail.com>

Well, this open a new world I have never been aware of. But I don't
understand what a group is. In a few tests I have just built, two
overlapping cubes in a group is previewed as two cubes (I see 24 edges) and
rendered as their union (with 12 edges). After all, what is a group?

2016-02-04 18:21 GMT-02:00 doug moen <doug at moens.org>:

> Consider this code:
>
> module m()
> {
>     cube(10,center=true);
>     sphere(6,center=true);
> };
>
> m() returns a group containing two children, a cube and a sphere. The use
> of '{...}' is necessary here to construct a group containing more than one
> child.
>
> Now consider this:
>
> module m2()
> {
>     {
>         cube(10,center=true);
>         sphere(6,center=true);
>     }
>     cylinder(r=1,h=20,center=true);
> }
>
> I would like m2() to return a group with 2 children; the first child is a
> group of a cube and sphere, the second child is the cylinder.
>
> What actually happens is that the inner {....} brackets are ignored, and a
> group of 3 shapes is returned.
>
> This, I think, is the situation where the group(){...} syntax must be used
> explicitly. If {...} worked the way I think it should work, then you
> wouldn't need to call group() explicitly. We wouldn't need group() at all,
> and we could just use {...} in the CSG tree.
>
> In a related matter, I also think that variables defined within {...}
> should be local to the {...} in all cases, but that doesn't happen either,
> in the same case where {...} fails to form a group.
>
> Doug.
>
> On 4 February 2016 at 14:00, nop head <nop.head at gmail.com> wrote:
>
>> Yes but if {...} made a group, how would you pass multiple children as
>> separate children?
>>
>> On 4 February 2016 at 18:49, doug moen <doug at moens.org> wrote:
>>
>>> Okay, cool. That probably means we should document the group() operator.
>>>
>>> And you had to do that because {...} standing alone (not as a module
>>> argument) doesn't create a group. This is unfortunately another
>>> incompatibility with OpenSCAD2.
>>>
>>> Doug.
>>>
>>>
>>> On Thursday, 4 February 2016, nop head <nop.head at gmail.com> wrote:
>>>
>>>> I have used group() explicitly to make a bunch of children into a first
>>>> child.
>>>>
>>>> On 4 February 2016 at 18:04, doug moen <doug at moens.org> wrote:
>>>>
>>>>> Ronaldo said: "Best than just eliminating the top level implicit
>>>>> union would be to have another operator: the set (or aggregate) operator.
>>>>> The set operator would collect a set of bodies preserving each one as a
>>>>> separated entity. If you union the set, then they become one (possibly
>>>>> manifold) body only but before that the set may not represent a manifold.
>>>>> Its bodies may not even be disjoint."
>>>>>
>>>>> We already have a "set (or aggregate)" operator. It is called "group".
>>>>> The explicit syntax is 'group() { shape1; shape2; ... }'. You can see this
>>>>> operator if you display the CSG tree. Nobody types it explicitly, because
>>>>> groups are generated implicitly for every module call (the 'children()' of
>>>>> a module call is represented by a group, and the output is always a group).
>>>>>
>>>>> There is a design flaw in how groups currently work. In short, too
>>>>> many groups are being implicitly generated. If the tail argument to a
>>>>> module call is a single (non-compound) statement, like a for loop or a
>>>>> module call, then the results returned by that statement (which may be a
>>>>> group) are wrapped in another group with a single element. This prevents
>>>>> you from feeding multiple outputs from one module call into another module
>>>>> as its children(). This is why intersection_for() exists.
>>>>>
>>>>> There is a plan to fix this problem, but it is called "lazy union",
>>>>> because the same feature also eliminates the implicit top level union.
>>>>> https://github.com/openscad/openscad/issues/350
>>>>>
>>>>> OpenSCAD2 fixes the problem by adopting so-called "lazy union"
>>>>> semantics for module calls, and also by reinterpreting the "{ ... }" syntax
>>>>> as the group constructor. In OpenSCAD2, groups are always constructed
>>>>> explicitly using {...} syntax, except for at the top level, where all top
>>>>> level objects are implicitly collected into a group.
>>>>>
>>>>> Even in OpenSCAD2, there is a requirement that each element of a group
>>>>> be either another group, or a manifold shape. The CGAL union operator
>>>>> requires that its arguments be manifold; that's where the restriction comes
>>>>> from.
>>>>>
>>>>> Doug Moen.
>>>>>
>>>>> On 4 February 2016 at 11:13, Ronaldo Persiano <rcmpersiano at gmail.com>
>>>>> wrote:
>>>>>
>>>>>> doug moen brings another important aspect to this discussion: " the
>>>>>> top level implicit union that occurs before exporting an STL file". STL is
>>>>>> intended to represent one object only presumably a 2-manifold and this
>>>>>> is a serious limitation of STL format. I agree that, excluding
>>>>>> numerical approximation issues, STL allows the recovering of the missing
>>>>>> topological information if and only if the geometrical embedding of it is a
>>>>>> manifold. As I showed before by examples, we can represent several
>>>>>> non-disjoint manifolds in STL as far as they do not have common vertices.
>>>>>> But that is very restrictive.
>>>>>>
>>>>>> I would like to represent not only one body in OSCAD. I would like to
>>>>>> represent a set of distinct (not necessarily disjoint) objects. One simple
>>>>>> application of that, besides the ones Arholm brought, is an animation of,
>>>>>> say, a ball bouncing in a billiard table. If I define a fixed table and a
>>>>>> ball on it, as their union is not a 2-manifold, I may have problems. Two
>>>>>> gears may have contact. In the real world, objects have contact.
>>>>>>
>>>>>> Best than just eliminating the top level implicit union would be to
>>>>>> have another operator: the set (or aggregate) operator. The set operator
>>>>>> would collect a set of bodies preserving each one as a separated entity. If
>>>>>> you union the set, then they become one (possibly manifold) body only but
>>>>>> before that the set may not represent a manifold. Its bodies may not even
>>>>>> be disjoint. May be, I don't know, there is no non-manifold objects in the
>>>>>> world but the world itself is not a manifold.
>>>>>>
>>>>>> If we go in that way, STL should be abandoned.
>>>>>>
>>>>>> 2016-02-04 13:17 GMT-02:00 doug moen <doug at moens.org>:
>>>>>>
>>>>>>> "a non-manifold face is a face internal to the body, it has
>>>>>>> material on both sides and does not describe the external surface of the
>>>>>>> solid body."
>>>>>>>
>>>>>>> The ability to partition a solid into a collection of disjoint
>>>>>>> subvolumes with shared faces is also useful in OpenSCAD; it's not just a
>>>>>>> ship design/ACIS thing.
>>>>>>>
>>>>>>> One obvious example is 3D printing of multi-material/multi-colour
>>>>>>> objects. There have been a number of discussions about how to support this
>>>>>>> in OpenSCAD. Internally, the volumes for each colour/material need to be
>>>>>>> kept separate and labeled. To export such a model, you either need to
>>>>>>> export multiple STL files (one per material/colour), or you need to export
>>>>>>> an AMF file with distinct volume elements for each colour/material. In no
>>>>>>> case should any of the individual volumes that we track internally or
>>>>>>> export contain non-manifold faces.
>>>>>>>
>>>>>>> This situation can arise in feature request #1562, which requests a
>>>>>>> convex_decomposition() operator. The result of this operator is a group of
>>>>>>> solids which share faces between them. Each group element is a convex
>>>>>>> polyhedron, which is manifold. This feature isn't useful unless we get rid
>>>>>>> of the implicit union that would otherwise occur when passing the results
>>>>>>> of convex_decomposition() to another module: see issue #350. But, issue
>>>>>>> #350 also eliminates the top level implicit union that occurs before
>>>>>>> exporting an STL file. If we get rid of top level implicit union, and the
>>>>>>> top level element in a script is a call to convex_decomposition() on
>>>>>>> non-convex input, then we can't meaningfully export to STL. There is a
>>>>>>> manifoldness check prior to STL export which *should* report this problem
>>>>>>> (issue #1215). Exporting the same object to AMF can be supported, because
>>>>>>> we can put each convex polyhedron into a separate volume.
>>>>>>>
>>>>>>> In summary, OpenSCAD should support models that contain disjoint
>>>>>>> subvolumes with shared faces. There are features we need to add and
>>>>>>> bugs/design flaws we need to fix before this support is complete.
>>>>>>>
>>>>>>> On 4 February 2016 at 02:13, <arnholm at arnholm.org> wrote:
>>>>>>>
>>>>>>>> On 2016-02-04 06:54, Triffid Hunter wrote:
>>>>>>>>
>>>>>>>>> non-manifold means that the topology is somehow ambiguous.
>>>>>>>>>
>>>>>>>>
>>>>>>>> No, it does not.
>>>>>>>>
>>>>>>>> An example of non-manifold topology is where a topological edge is
>>>>>>>> shared by more than 2 faces.
>>>>>>>>
>>>>>>>> http://docs.mcneel.com/rhino/5/help/en-us/popup_moreinformation/non-manifold_edges.htm
>>>>>>>>
>>>>>>>> It is not ambiguous, and in many cases a desired feature. This kind
>>>>>>>> of non-manifold topology is much used in ship design when designing FEM
>>>>>>>> models with shell elements. Often, non-manifold topology is perfectly
>>>>>>>> acceptable and is not ambiguous in any way. CAD systems like e.g. ACIS (
>>>>>>>> https://en.wikipedia.org/wiki/ACIS ) have no issues representing
>>>>>>>> non-manifold topology.
>>>>>>>>
>>>>>>>> In the special case of 3d solid topological models, a non-manifold
>>>>>>>> face is a face internal to the body, it has material on both sides and does
>>>>>>>> not describe the external surface of the solid body. That does not mean it
>>>>>>>> is topologically ambiguous. Such faces may be and are used for subdivision,
>>>>>>>> for example to guide 3d solid meshing (solid FEM models). Whether such
>>>>>>>> non-manifold topological entities are  desirable or not depends on the
>>>>>>>> application area, but it is not topologically ambiguous.
>>>>>>>>
>>>>>>>> It is only when the topological description is non-existent things
>>>>>>>> like this become a problem.
>>>>>>>>
>>>>>>>>
>>>>>>>> Carsten Arnholm
>>>>>>>>
>>>>>>>> _______________________________________________
>>>>>>>> OpenSCAD mailing list
>>>>>>>> Discuss at lists.openscad.org
>>>>>>>>
>>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> OpenSCAD mailing list
>>>>>>> Discuss at lists.openscad.org
>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>
>>>>>>>
>>>>>>
>>>>>> _______________________________________________
>>>>>> OpenSCAD mailing list
>>>>>> Discuss at lists.openscad.org
>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>
>>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> OpenSCAD mailing list
>>>>> Discuss at lists.openscad.org
>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>
>>>>>
>>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/864cc1e0/attachment.html>

From nop.head at gmail.com  Thu Feb  4 15:47:48 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 4 Feb 2016 20:47:48 +0000
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <CA+i9EaD2ZK__4xwSScJ=tX+r+DX7-2hipBpxSWQzyr0kuFg9cw@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
	<CA+i9EaCXid49U8Y1UbV4A_xecmqh0KbWhscZeVWnLSJVw0wgRw@mail.gmail.com>
	<CAGV6i+O0R6X3-4NmEDuwgUJ-U8f-CMfGecPD0E5F-D-cJxBz9Q@mail.gmail.com>
	<CAEEmnrPA_rzMftMpwjzjAwDKutTbNGYoVHTPGyTYU0E-fx7SUg@mail.gmail.com>
	<CAGV6i+N8z9dmtOU-q-82H3m71o4xveqyKNPH3QxbXAbn21rvcg@mail.gmail.com>
	<CAEEmnrP++RzpUU1QAYcyk-pQwa66j=dd9P6z77tyuixNoF90ag@mail.gmail.com>
	<CAGV6i+N76=EHUhS5F+vA3mfA-cUqa5f96ZZ7djNKi+B2tDHvbQ@mail.gmail.com>
	<CA+i9EaD2ZK__4xwSScJ=tX+r+DX7-2hipBpxSWQzyr0kuFg9cw@mail.gmail.com>
Message-ID: <CAEEmnrOS8hpTt6uCmadt+-1aA+nXEJerfpuHMLgqoCe7eEe-cA@mail.gmail.com>

Ronaldo,

With implicit union, a group currently acts like union.

Doug,

If we have:

  my_module() {
      cube();
      cylinder();
  }

Then cube() should be children(0) in my_module and cylinder() children(1).
If { ...} makes a group then they would both be children(0);


On 4 February 2016 at 20:34, Ronaldo Persiano <rcmpersiano at gmail.com> wrote:

> Well, this open a new world I have never been aware of. But I don't
> understand what a group is. In a few tests I have just built, two
> overlapping cubes in a group is previewed as two cubes (I see 24 edges) and
> rendered as their union (with 12 edges). After all, what is a group?
>
> 2016-02-04 18:21 GMT-02:00 doug moen <doug at moens.org>:
>
>> Consider this code:
>>
>> module m()
>> {
>>     cube(10,center=true);
>>     sphere(6,center=true);
>> };
>>
>> m() returns a group containing two children, a cube and a sphere. The use
>> of '{...}' is necessary here to construct a group containing more than one
>> child.
>>
>> Now consider this:
>>
>> module m2()
>> {
>>     {
>>         cube(10,center=true);
>>         sphere(6,center=true);
>>     }
>>     cylinder(r=1,h=20,center=true);
>> }
>>
>> I would like m2() to return a group with 2 children; the first child is a
>> group of a cube and sphere, the second child is the cylinder.
>>
>> What actually happens is that the inner {....} brackets are ignored, and
>> a group of 3 shapes is returned.
>>
>> This, I think, is the situation where the group(){...} syntax must be
>> used explicitly. If {...} worked the way I think it should work, then you
>> wouldn't need to call group() explicitly. We wouldn't need group() at all,
>> and we could just use {...} in the CSG tree.
>>
>> In a related matter, I also think that variables defined within {...}
>> should be local to the {...} in all cases, but that doesn't happen either,
>> in the same case where {...} fails to form a group.
>>
>> Doug.
>>
>> On 4 February 2016 at 14:00, nop head <nop.head at gmail.com> wrote:
>>
>>> Yes but if {...} made a group, how would you pass multiple children as
>>> separate children?
>>>
>>> On 4 February 2016 at 18:49, doug moen <doug at moens.org> wrote:
>>>
>>>> Okay, cool. That probably means we should document the group() operator.
>>>>
>>>> And you had to do that because {...} standing alone (not as a module
>>>> argument) doesn't create a group. This is unfortunately another
>>>> incompatibility with OpenSCAD2.
>>>>
>>>> Doug.
>>>>
>>>>
>>>> On Thursday, 4 February 2016, nop head <nop.head at gmail.com> wrote:
>>>>
>>>>> I have used group() explicitly to make a bunch of children into a
>>>>> first child.
>>>>>
>>>>> On 4 February 2016 at 18:04, doug moen <doug at moens.org> wrote:
>>>>>
>>>>>> Ronaldo said: "Best than just eliminating the top level implicit
>>>>>> union would be to have another operator: the set (or aggregate) operator.
>>>>>> The set operator would collect a set of bodies preserving each one as a
>>>>>> separated entity. If you union the set, then they become one (possibly
>>>>>> manifold) body only but before that the set may not represent a manifold.
>>>>>> Its bodies may not even be disjoint."
>>>>>>
>>>>>> We already have a "set (or aggregate)" operator. It is called
>>>>>> "group". The explicit syntax is 'group() { shape1; shape2; ... }'. You can
>>>>>> see this operator if you display the CSG tree. Nobody types it explicitly,
>>>>>> because groups are generated implicitly for every module call (the
>>>>>> 'children()' of a module call is represented by a group, and the output is
>>>>>> always a group).
>>>>>>
>>>>>> There is a design flaw in how groups currently work. In short, too
>>>>>> many groups are being implicitly generated. If the tail argument to a
>>>>>> module call is a single (non-compound) statement, like a for loop or a
>>>>>> module call, then the results returned by that statement (which may be a
>>>>>> group) are wrapped in another group with a single element. This prevents
>>>>>> you from feeding multiple outputs from one module call into another module
>>>>>> as its children(). This is why intersection_for() exists.
>>>>>>
>>>>>> There is a plan to fix this problem, but it is called "lazy union",
>>>>>> because the same feature also eliminates the implicit top level union.
>>>>>> https://github.com/openscad/openscad/issues/350
>>>>>>
>>>>>> OpenSCAD2 fixes the problem by adopting so-called "lazy union"
>>>>>> semantics for module calls, and also by reinterpreting the "{ ... }" syntax
>>>>>> as the group constructor. In OpenSCAD2, groups are always constructed
>>>>>> explicitly using {...} syntax, except for at the top level, where all top
>>>>>> level objects are implicitly collected into a group.
>>>>>>
>>>>>> Even in OpenSCAD2, there is a requirement that each element of a
>>>>>> group be either another group, or a manifold shape. The CGAL union operator
>>>>>> requires that its arguments be manifold; that's where the restriction comes
>>>>>> from.
>>>>>>
>>>>>> Doug Moen.
>>>>>>
>>>>>> On 4 February 2016 at 11:13, Ronaldo Persiano <rcmpersiano at gmail.com>
>>>>>> wrote:
>>>>>>
>>>>>>> doug moen brings another important aspect to this discussion: " the
>>>>>>> top level implicit union that occurs before exporting an STL file". STL is
>>>>>>> intended to represent one object only presumably a 2-manifold and this
>>>>>>> is a serious limitation of STL format. I agree that, excluding
>>>>>>> numerical approximation issues, STL allows the recovering of the missing
>>>>>>> topological information if and only if the geometrical embedding of it is a
>>>>>>> manifold. As I showed before by examples, we can represent several
>>>>>>> non-disjoint manifolds in STL as far as they do not have common vertices.
>>>>>>> But that is very restrictive.
>>>>>>>
>>>>>>> I would like to represent not only one body in OSCAD. I would like
>>>>>>> to represent a set of distinct (not necessarily disjoint) objects. One
>>>>>>> simple application of that, besides the ones Arholm brought, is an
>>>>>>> animation of, say, a ball bouncing in a billiard table. If I define a fixed
>>>>>>> table and a ball on it, as their union is not a 2-manifold, I may have
>>>>>>> problems. Two gears may have contact. In the real world, objects have
>>>>>>> contact.
>>>>>>>
>>>>>>> Best than just eliminating the top level implicit union would be to
>>>>>>> have another operator: the set (or aggregate) operator. The set operator
>>>>>>> would collect a set of bodies preserving each one as a separated entity. If
>>>>>>> you union the set, then they become one (possibly manifold) body only but
>>>>>>> before that the set may not represent a manifold. Its bodies may not even
>>>>>>> be disjoint. May be, I don't know, there is no non-manifold objects in the
>>>>>>> world but the world itself is not a manifold.
>>>>>>>
>>>>>>> If we go in that way, STL should be abandoned.
>>>>>>>
>>>>>>> 2016-02-04 13:17 GMT-02:00 doug moen <doug at moens.org>:
>>>>>>>
>>>>>>>> "a non-manifold face is a face internal to the body, it has
>>>>>>>> material on both sides and does not describe the external surface of the
>>>>>>>> solid body."
>>>>>>>>
>>>>>>>> The ability to partition a solid into a collection of disjoint
>>>>>>>> subvolumes with shared faces is also useful in OpenSCAD; it's not just a
>>>>>>>> ship design/ACIS thing.
>>>>>>>>
>>>>>>>> One obvious example is 3D printing of multi-material/multi-colour
>>>>>>>> objects. There have been a number of discussions about how to support this
>>>>>>>> in OpenSCAD. Internally, the volumes for each colour/material need to be
>>>>>>>> kept separate and labeled. To export such a model, you either need to
>>>>>>>> export multiple STL files (one per material/colour), or you need to export
>>>>>>>> an AMF file with distinct volume elements for each colour/material. In no
>>>>>>>> case should any of the individual volumes that we track internally or
>>>>>>>> export contain non-manifold faces.
>>>>>>>>
>>>>>>>> This situation can arise in feature request #1562, which requests a
>>>>>>>> convex_decomposition() operator. The result of this operator is a group of
>>>>>>>> solids which share faces between them. Each group element is a convex
>>>>>>>> polyhedron, which is manifold. This feature isn't useful unless we get rid
>>>>>>>> of the implicit union that would otherwise occur when passing the results
>>>>>>>> of convex_decomposition() to another module: see issue #350. But, issue
>>>>>>>> #350 also eliminates the top level implicit union that occurs before
>>>>>>>> exporting an STL file. If we get rid of top level implicit union, and the
>>>>>>>> top level element in a script is a call to convex_decomposition() on
>>>>>>>> non-convex input, then we can't meaningfully export to STL. There is a
>>>>>>>> manifoldness check prior to STL export which *should* report this problem
>>>>>>>> (issue #1215). Exporting the same object to AMF can be supported, because
>>>>>>>> we can put each convex polyhedron into a separate volume.
>>>>>>>>
>>>>>>>> In summary, OpenSCAD should support models that contain disjoint
>>>>>>>> subvolumes with shared faces. There are features we need to add and
>>>>>>>> bugs/design flaws we need to fix before this support is complete.
>>>>>>>>
>>>>>>>> On 4 February 2016 at 02:13, <arnholm at arnholm.org> wrote:
>>>>>>>>
>>>>>>>>> On 2016-02-04 06:54, Triffid Hunter wrote:
>>>>>>>>>
>>>>>>>>>> non-manifold means that the topology is somehow ambiguous.
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>> No, it does not.
>>>>>>>>>
>>>>>>>>> An example of non-manifold topology is where a topological edge is
>>>>>>>>> shared by more than 2 faces.
>>>>>>>>>
>>>>>>>>> http://docs.mcneel.com/rhino/5/help/en-us/popup_moreinformation/non-manifold_edges.htm
>>>>>>>>>
>>>>>>>>> It is not ambiguous, and in many cases a desired feature. This
>>>>>>>>> kind of non-manifold topology is much used in ship design when designing
>>>>>>>>> FEM models with shell elements. Often, non-manifold topology is perfectly
>>>>>>>>> acceptable and is not ambiguous in any way. CAD systems like e.g. ACIS (
>>>>>>>>> https://en.wikipedia.org/wiki/ACIS ) have no issues representing
>>>>>>>>> non-manifold topology.
>>>>>>>>>
>>>>>>>>> In the special case of 3d solid topological models, a non-manifold
>>>>>>>>> face is a face internal to the body, it has material on both sides and does
>>>>>>>>> not describe the external surface of the solid body. That does not mean it
>>>>>>>>> is topologically ambiguous. Such faces may be and are used for subdivision,
>>>>>>>>> for example to guide 3d solid meshing (solid FEM models). Whether such
>>>>>>>>> non-manifold topological entities are  desirable or not depends on the
>>>>>>>>> application area, but it is not topologically ambiguous.
>>>>>>>>>
>>>>>>>>> It is only when the topological description is non-existent things
>>>>>>>>> like this become a problem.
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> Carsten Arnholm
>>>>>>>>>
>>>>>>>>> _______________________________________________
>>>>>>>>> OpenSCAD mailing list
>>>>>>>>> Discuss at lists.openscad.org
>>>>>>>>>
>>>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>> _______________________________________________
>>>>>>>> OpenSCAD mailing list
>>>>>>>> Discuss at lists.openscad.org
>>>>>>>>
>>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> OpenSCAD mailing list
>>>>>>> Discuss at lists.openscad.org
>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>
>>>>>>>
>>>>>>
>>>>>> _______________________________________________
>>>>>> OpenSCAD mailing list
>>>>>> Discuss at lists.openscad.org
>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>
>>>>>>
>>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/84202d8f/attachment.html>

From doug at moens.org  Thu Feb  4 15:58:05 2016
From: doug at moens.org (doug moen)
Date: Thu, 4 Feb 2016 15:58:05 -0500
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <CAEEmnrOS8hpTt6uCmadt+-1aA+nXEJerfpuHMLgqoCe7eEe-cA@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
	<CA+i9EaCXid49U8Y1UbV4A_xecmqh0KbWhscZeVWnLSJVw0wgRw@mail.gmail.com>
	<CAGV6i+O0R6X3-4NmEDuwgUJ-U8f-CMfGecPD0E5F-D-cJxBz9Q@mail.gmail.com>
	<CAEEmnrPA_rzMftMpwjzjAwDKutTbNGYoVHTPGyTYU0E-fx7SUg@mail.gmail.com>
	<CAGV6i+N8z9dmtOU-q-82H3m71o4xveqyKNPH3QxbXAbn21rvcg@mail.gmail.com>
	<CAEEmnrP++RzpUU1QAYcyk-pQwa66j=dd9P6z77tyuixNoF90ag@mail.gmail.com>
	<CAGV6i+N76=EHUhS5F+vA3mfA-cUqa5f96ZZ7djNKi+B2tDHvbQ@mail.gmail.com>
	<CA+i9EaD2ZK__4xwSScJ=tX+r+DX7-2hipBpxSWQzyr0kuFg9cw@mail.gmail.com>
	<CAEEmnrOS8hpTt6uCmadt+-1aA+nXEJerfpuHMLgqoCe7eEe-cA@mail.gmail.com>
Message-ID: <CAGV6i+NCAKQY2qna4q-iv3bQzpuSMVksDhpSiUt83oM=Rha-cg@mail.gmail.com>

Nop head, If we have:

  my_module() {
      cube();
      cylinder();
  }

then my_module is called with two children, a cube and a cylinder. The
children() are a group. The only way to pass two children to a module is to
use the {...} syntax, so of course {...} makes a group.

This is the way I've always understood OpenSCAD to work. Apparently you
have a different way of thinking about it?


On 4 February 2016 at 15:47, nop head <nop.head at gmail.com> wrote:

> Ronaldo,
>
> With implicit union, a group currently acts like union.
>
> Doug,
>
> If we have:
>
>   my_module() {
>       cube();
>       cylinder();
>   }
>
> Then cube() should be children(0) in my_module and cylinder() children(1).
> If { ...} makes a group then they would both be children(0);
>
>
> On 4 February 2016 at 20:34, Ronaldo Persiano <rcmpersiano at gmail.com>
> wrote:
>
>> Well, this open a new world I have never been aware of. But I don't
>> understand what a group is. In a few tests I have just built, two
>> overlapping cubes in a group is previewed as two cubes (I see 24 edges) and
>> rendered as their union (with 12 edges). After all, what is a group?
>>
>> 2016-02-04 18:21 GMT-02:00 doug moen <doug at moens.org>:
>>
>>> Consider this code:
>>>
>>> module m()
>>> {
>>>     cube(10,center=true);
>>>     sphere(6,center=true);
>>> };
>>>
>>> m() returns a group containing two children, a cube and a sphere. The
>>> use of '{...}' is necessary here to construct a group containing more than
>>> one child.
>>>
>>> Now consider this:
>>>
>>> module m2()
>>> {
>>>     {
>>>         cube(10,center=true);
>>>         sphere(6,center=true);
>>>     }
>>>     cylinder(r=1,h=20,center=true);
>>> }
>>>
>>> I would like m2() to return a group with 2 children; the first child is
>>> a group of a cube and sphere, the second child is the cylinder.
>>>
>>> What actually happens is that the inner {....} brackets are ignored, and
>>> a group of 3 shapes is returned.
>>>
>>> This, I think, is the situation where the group(){...} syntax must be
>>> used explicitly. If {...} worked the way I think it should work, then you
>>> wouldn't need to call group() explicitly. We wouldn't need group() at all,
>>> and we could just use {...} in the CSG tree.
>>>
>>> In a related matter, I also think that variables defined within {...}
>>> should be local to the {...} in all cases, but that doesn't happen either,
>>> in the same case where {...} fails to form a group.
>>>
>>> Doug.
>>>
>>> On 4 February 2016 at 14:00, nop head <nop.head at gmail.com> wrote:
>>>
>>>> Yes but if {...} made a group, how would you pass multiple children as
>>>> separate children?
>>>>
>>>> On 4 February 2016 at 18:49, doug moen <doug at moens.org> wrote:
>>>>
>>>>> Okay, cool. That probably means we should document the group()
>>>>> operator.
>>>>>
>>>>> And you had to do that because {...} standing alone (not as a module
>>>>> argument) doesn't create a group. This is unfortunately another
>>>>> incompatibility with OpenSCAD2.
>>>>>
>>>>> Doug.
>>>>>
>>>>>
>>>>> On Thursday, 4 February 2016, nop head <nop.head at gmail.com> wrote:
>>>>>
>>>>>> I have used group() explicitly to make a bunch of children into a
>>>>>> first child.
>>>>>>
>>>>>> On 4 February 2016 at 18:04, doug moen <doug at moens.org> wrote:
>>>>>>
>>>>>>> Ronaldo said: "Best than just eliminating the top level implicit
>>>>>>> union would be to have another operator: the set (or aggregate) operator.
>>>>>>> The set operator would collect a set of bodies preserving each one as a
>>>>>>> separated entity. If you union the set, then they become one (possibly
>>>>>>> manifold) body only but before that the set may not represent a manifold.
>>>>>>> Its bodies may not even be disjoint."
>>>>>>>
>>>>>>> We already have a "set (or aggregate)" operator. It is called
>>>>>>> "group". The explicit syntax is 'group() { shape1; shape2; ... }'. You can
>>>>>>> see this operator if you display the CSG tree. Nobody types it explicitly,
>>>>>>> because groups are generated implicitly for every module call (the
>>>>>>> 'children()' of a module call is represented by a group, and the output is
>>>>>>> always a group).
>>>>>>>
>>>>>>> There is a design flaw in how groups currently work. In short, too
>>>>>>> many groups are being implicitly generated. If the tail argument to a
>>>>>>> module call is a single (non-compound) statement, like a for loop or a
>>>>>>> module call, then the results returned by that statement (which may be a
>>>>>>> group) are wrapped in another group with a single element. This prevents
>>>>>>> you from feeding multiple outputs from one module call into another module
>>>>>>> as its children(). This is why intersection_for() exists.
>>>>>>>
>>>>>>> There is a plan to fix this problem, but it is called "lazy union",
>>>>>>> because the same feature also eliminates the implicit top level union.
>>>>>>> https://github.com/openscad/openscad/issues/350
>>>>>>>
>>>>>>> OpenSCAD2 fixes the problem by adopting so-called "lazy union"
>>>>>>> semantics for module calls, and also by reinterpreting the "{ ... }" syntax
>>>>>>> as the group constructor. In OpenSCAD2, groups are always constructed
>>>>>>> explicitly using {...} syntax, except for at the top level, where all top
>>>>>>> level objects are implicitly collected into a group.
>>>>>>>
>>>>>>> Even in OpenSCAD2, there is a requirement that each element of a
>>>>>>> group be either another group, or a manifold shape. The CGAL union operator
>>>>>>> requires that its arguments be manifold; that's where the restriction comes
>>>>>>> from.
>>>>>>>
>>>>>>> Doug Moen.
>>>>>>>
>>>>>>> On 4 February 2016 at 11:13, Ronaldo Persiano <rcmpersiano at gmail.com
>>>>>>> > wrote:
>>>>>>>
>>>>>>>> doug moen brings another important aspect to this discussion: "
>>>>>>>> the top level implicit union that occurs before exporting an STL file". STL
>>>>>>>> is intended to represent one object only presumably a 2-manifold and this
>>>>>>>> is a serious limitation of STL format. I agree that, excluding
>>>>>>>> numerical approximation issues, STL allows the recovering of the missing
>>>>>>>> topological information if and only if the geometrical embedding of it is a
>>>>>>>> manifold. As I showed before by examples, we can represent several
>>>>>>>> non-disjoint manifolds in STL as far as they do not have common vertices.
>>>>>>>> But that is very restrictive.
>>>>>>>>
>>>>>>>> I would like to represent not only one body in OSCAD. I would like
>>>>>>>> to represent a set of distinct (not necessarily disjoint) objects. One
>>>>>>>> simple application of that, besides the ones Arholm brought, is an
>>>>>>>> animation of, say, a ball bouncing in a billiard table. If I define a fixed
>>>>>>>> table and a ball on it, as their union is not a 2-manifold, I may have
>>>>>>>> problems. Two gears may have contact. In the real world, objects have
>>>>>>>> contact.
>>>>>>>>
>>>>>>>> Best than just eliminating the top level implicit union would be
>>>>>>>> to have another operator: the set (or aggregate) operator. The set operator
>>>>>>>> would collect a set of bodies preserving each one as a separated entity. If
>>>>>>>> you union the set, then they become one (possibly manifold) body only but
>>>>>>>> before that the set may not represent a manifold. Its bodies may not even
>>>>>>>> be disjoint. May be, I don't know, there is no non-manifold objects in the
>>>>>>>> world but the world itself is not a manifold.
>>>>>>>>
>>>>>>>> If we go in that way, STL should be abandoned.
>>>>>>>>
>>>>>>>> 2016-02-04 13:17 GMT-02:00 doug moen <doug at moens.org>:
>>>>>>>>
>>>>>>>>> "a non-manifold face is a face internal to the body, it has
>>>>>>>>> material on both sides and does not describe the external surface of the
>>>>>>>>> solid body."
>>>>>>>>>
>>>>>>>>> The ability to partition a solid into a collection of disjoint
>>>>>>>>> subvolumes with shared faces is also useful in OpenSCAD; it's not just a
>>>>>>>>> ship design/ACIS thing.
>>>>>>>>>
>>>>>>>>> One obvious example is 3D printing of multi-material/multi-colour
>>>>>>>>> objects. There have been a number of discussions about how to support this
>>>>>>>>> in OpenSCAD. Internally, the volumes for each colour/material need to be
>>>>>>>>> kept separate and labeled. To export such a model, you either need to
>>>>>>>>> export multiple STL files (one per material/colour), or you need to export
>>>>>>>>> an AMF file with distinct volume elements for each colour/material. In no
>>>>>>>>> case should any of the individual volumes that we track internally or
>>>>>>>>> export contain non-manifold faces.
>>>>>>>>>
>>>>>>>>> This situation can arise in feature request #1562, which requests
>>>>>>>>> a convex_decomposition() operator. The result of this operator is a group
>>>>>>>>> of solids which share faces between them. Each group element is a convex
>>>>>>>>> polyhedron, which is manifold. This feature isn't useful unless we get rid
>>>>>>>>> of the implicit union that would otherwise occur when passing the results
>>>>>>>>> of convex_decomposition() to another module: see issue #350. But, issue
>>>>>>>>> #350 also eliminates the top level implicit union that occurs before
>>>>>>>>> exporting an STL file. If we get rid of top level implicit union, and the
>>>>>>>>> top level element in a script is a call to convex_decomposition() on
>>>>>>>>> non-convex input, then we can't meaningfully export to STL. There is a
>>>>>>>>> manifoldness check prior to STL export which *should* report this problem
>>>>>>>>> (issue #1215). Exporting the same object to AMF can be supported, because
>>>>>>>>> we can put each convex polyhedron into a separate volume.
>>>>>>>>>
>>>>>>>>> In summary, OpenSCAD should support models that contain disjoint
>>>>>>>>> subvolumes with shared faces. There are features we need to add and
>>>>>>>>> bugs/design flaws we need to fix before this support is complete.
>>>>>>>>>
>>>>>>>>> On 4 February 2016 at 02:13, <arnholm at arnholm.org> wrote:
>>>>>>>>>
>>>>>>>>>> On 2016-02-04 06:54, Triffid Hunter wrote:
>>>>>>>>>>
>>>>>>>>>>> non-manifold means that the topology is somehow ambiguous.
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> No, it does not.
>>>>>>>>>>
>>>>>>>>>> An example of non-manifold topology is where a topological edge
>>>>>>>>>> is shared by more than 2 faces.
>>>>>>>>>>
>>>>>>>>>> http://docs.mcneel.com/rhino/5/help/en-us/popup_moreinformation/non-manifold_edges.htm
>>>>>>>>>>
>>>>>>>>>> It is not ambiguous, and in many cases a desired feature. This
>>>>>>>>>> kind of non-manifold topology is much used in ship design when designing
>>>>>>>>>> FEM models with shell elements. Often, non-manifold topology is perfectly
>>>>>>>>>> acceptable and is not ambiguous in any way. CAD systems like e.g. ACIS (
>>>>>>>>>> https://en.wikipedia.org/wiki/ACIS ) have no issues representing
>>>>>>>>>> non-manifold topology.
>>>>>>>>>>
>>>>>>>>>> In the special case of 3d solid topological models, a
>>>>>>>>>> non-manifold face is a face internal to the body, it has material on both
>>>>>>>>>> sides and does not describe the external surface of the solid body. That
>>>>>>>>>> does not mean it is topologically ambiguous. Such faces may be and are used
>>>>>>>>>> for subdivision, for example to guide 3d solid meshing (solid FEM models).
>>>>>>>>>> Whether such non-manifold topological entities are  desirable or not
>>>>>>>>>> depends on the application area, but it is not topologically ambiguous.
>>>>>>>>>>
>>>>>>>>>> It is only when the topological description is non-existent
>>>>>>>>>> things like this become a problem.
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> Carsten Arnholm
>>>>>>>>>>
>>>>>>>>>> _______________________________________________
>>>>>>>>>> OpenSCAD mailing list
>>>>>>>>>> Discuss at lists.openscad.org
>>>>>>>>>>
>>>>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>> _______________________________________________
>>>>>>>>> OpenSCAD mailing list
>>>>>>>>> Discuss at lists.openscad.org
>>>>>>>>>
>>>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>> _______________________________________________
>>>>>>>> OpenSCAD mailing list
>>>>>>>> Discuss at lists.openscad.org
>>>>>>>>
>>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> OpenSCAD mailing list
>>>>>>> Discuss at lists.openscad.org
>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>
>>>>>>>
>>>>>>
>>>>> _______________________________________________
>>>>> OpenSCAD mailing list
>>>>> Discuss at lists.openscad.org
>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>
>>>>>
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/3057fd5b/attachment.html>

From rcmpersiano at gmail.com  Thu Feb  4 16:36:41 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Thu, 4 Feb 2016 19:36:41 -0200
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <CAGV6i+NCAKQY2qna4q-iv3bQzpuSMVksDhpSiUt83oM=Rha-cg@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
	<CA+i9EaCXid49U8Y1UbV4A_xecmqh0KbWhscZeVWnLSJVw0wgRw@mail.gmail.com>
	<CAGV6i+O0R6X3-4NmEDuwgUJ-U8f-CMfGecPD0E5F-D-cJxBz9Q@mail.gmail.com>
	<CAEEmnrPA_rzMftMpwjzjAwDKutTbNGYoVHTPGyTYU0E-fx7SUg@mail.gmail.com>
	<CAGV6i+N8z9dmtOU-q-82H3m71o4xveqyKNPH3QxbXAbn21rvcg@mail.gmail.com>
	<CAEEmnrP++RzpUU1QAYcyk-pQwa66j=dd9P6z77tyuixNoF90ag@mail.gmail.com>
	<CAGV6i+N76=EHUhS5F+vA3mfA-cUqa5f96ZZ7djNKi+B2tDHvbQ@mail.gmail.com>
	<CA+i9EaD2ZK__4xwSScJ=tX+r+DX7-2hipBpxSWQzyr0kuFg9cw@mail.gmail.com>
	<CAEEmnrOS8hpTt6uCmadt+-1aA+nXEJerfpuHMLgqoCe7eEe-cA@mail.gmail.com>
	<CAGV6i+NCAKQY2qna4q-iv3bQzpuSMVksDhpSiUt83oM=Rha-cg@mail.gmail.com>
Message-ID: <CA+i9EaC0ziNN=-mQKDspf7-v6nKWno3dDZp_bX2zAnQnrBuJxQ@mail.gmail.com>

nop head said:
<quote>
Ronaldo,

With implicit union, a group currently acts like union.
</quote>

I didn't use implicit group but:

group(){
    cube(50);
    translate([0,0,30]) cube(50);
}

which is previewed as two cubes and rendered as their union.

2016-02-04 18:58 GMT-02:00 doug moen <doug at moens.org>:

> Nop head, If we have:
>
>   my_module() {
>       cube();
>       cylinder();
>   }
>
> then my_module is called with two children, a cube and a cylinder. The
> children() are a group. The only way to pass two children to a module is to
> use the {...} syntax, so of course {...} makes a group.
>
> This is the way I've always understood OpenSCAD to work. Apparently you
> have a different way of thinking about it?
>
>
> On 4 February 2016 at 15:47, nop head <nop.head at gmail.com> wrote:
>
>> Ronaldo,
>>
>> With implicit union, a group currently acts like union.
>>
>> Doug,
>>
>> If we have:
>>
>>   my_module() {
>>       cube();
>>       cylinder();
>>   }
>>
>> Then cube() should be children(0) in my_module and cylinder()
>> children(1). If { ...} makes a group then they would both be children(0);
>>
>>
>> On 4 February 2016 at 20:34, Ronaldo Persiano <rcmpersiano at gmail.com>
>> wrote:
>>
>>> Well, this open a new world I have never been aware of. But I don't
>>> understand what a group is. In a few tests I have just built, two
>>> overlapping cubes in a group is previewed as two cubes (I see 24 edges) and
>>> rendered as their union (with 12 edges). After all, what is a group?
>>>
>>> 2016-02-04 18:21 GMT-02:00 doug moen <doug at moens.org>:
>>>
>>>> Consider this code:
>>>>
>>>> module m()
>>>> {
>>>>     cube(10,center=true);
>>>>     sphere(6,center=true);
>>>> };
>>>>
>>>> m() returns a group containing two children, a cube and a sphere. The
>>>> use of '{...}' is necessary here to construct a group containing more than
>>>> one child.
>>>>
>>>> Now consider this:
>>>>
>>>> module m2()
>>>> {
>>>>     {
>>>>         cube(10,center=true);
>>>>         sphere(6,center=true);
>>>>     }
>>>>     cylinder(r=1,h=20,center=true);
>>>> }
>>>>
>>>> I would like m2() to return a group with 2 children; the first child is
>>>> a group of a cube and sphere, the second child is the cylinder.
>>>>
>>>> What actually happens is that the inner {....} brackets are ignored,
>>>> and a group of 3 shapes is returned.
>>>>
>>>> This, I think, is the situation where the group(){...} syntax must be
>>>> used explicitly. If {...} worked the way I think it should work, then you
>>>> wouldn't need to call group() explicitly. We wouldn't need group() at all,
>>>> and we could just use {...} in the CSG tree.
>>>>
>>>> In a related matter, I also think that variables defined within {...}
>>>> should be local to the {...} in all cases, but that doesn't happen either,
>>>> in the same case where {...} fails to form a group.
>>>>
>>>> Doug.
>>>>
>>>> On 4 February 2016 at 14:00, nop head <nop.head at gmail.com> wrote:
>>>>
>>>>> Yes but if {...} made a group, how would you pass multiple children as
>>>>> separate children?
>>>>>
>>>>> On 4 February 2016 at 18:49, doug moen <doug at moens.org> wrote:
>>>>>
>>>>>> Okay, cool. That probably means we should document the group()
>>>>>> operator.
>>>>>>
>>>>>> And you had to do that because {...} standing alone (not as a module
>>>>>> argument) doesn't create a group. This is unfortunately another
>>>>>> incompatibility with OpenSCAD2.
>>>>>>
>>>>>> Doug.
>>>>>>
>>>>>>
>>>>>> On Thursday, 4 February 2016, nop head <nop.head at gmail.com> wrote:
>>>>>>
>>>>>>> I have used group() explicitly to make a bunch of children into a
>>>>>>> first child.
>>>>>>>
>>>>>>> On 4 February 2016 at 18:04, doug moen <doug at moens.org> wrote:
>>>>>>>
>>>>>>>> Ronaldo said: "Best than just eliminating the top level implicit
>>>>>>>> union would be to have another operator: the set (or aggregate) operator.
>>>>>>>> The set operator would collect a set of bodies preserving each one as a
>>>>>>>> separated entity. If you union the set, then they become one (possibly
>>>>>>>> manifold) body only but before that the set may not represent a manifold.
>>>>>>>> Its bodies may not even be disjoint."
>>>>>>>>
>>>>>>>> We already have a "set (or aggregate)" operator. It is called
>>>>>>>> "group". The explicit syntax is 'group() { shape1; shape2; ... }'. You can
>>>>>>>> see this operator if you display the CSG tree. Nobody types it explicitly,
>>>>>>>> because groups are generated implicitly for every module call (the
>>>>>>>> 'children()' of a module call is represented by a group, and the output is
>>>>>>>> always a group).
>>>>>>>>
>>>>>>>> There is a design flaw in how groups currently work. In short, too
>>>>>>>> many groups are being implicitly generated. If the tail argument to a
>>>>>>>> module call is a single (non-compound) statement, like a for loop or a
>>>>>>>> module call, then the results returned by that statement (which may be a
>>>>>>>> group) are wrapped in another group with a single element. This prevents
>>>>>>>> you from feeding multiple outputs from one module call into another module
>>>>>>>> as its children(). This is why intersection_for() exists.
>>>>>>>>
>>>>>>>> There is a plan to fix this problem, but it is called "lazy union",
>>>>>>>> because the same feature also eliminates the implicit top level union.
>>>>>>>> https://github.com/openscad/openscad/issues/350
>>>>>>>>
>>>>>>>> OpenSCAD2 fixes the problem by adopting so-called "lazy union"
>>>>>>>> semantics for module calls, and also by reinterpreting the "{ ... }" syntax
>>>>>>>> as the group constructor. In OpenSCAD2, groups are always constructed
>>>>>>>> explicitly using {...} syntax, except for at the top level, where all top
>>>>>>>> level objects are implicitly collected into a group.
>>>>>>>>
>>>>>>>> Even in OpenSCAD2, there is a requirement that each element of a
>>>>>>>> group be either another group, or a manifold shape. The CGAL union operator
>>>>>>>> requires that its arguments be manifold; that's where the restriction comes
>>>>>>>> from.
>>>>>>>>
>>>>>>>> Doug Moen.
>>>>>>>>
>>>>>>>> On 4 February 2016 at 11:13, Ronaldo Persiano <
>>>>>>>> rcmpersiano at gmail.com> wrote:
>>>>>>>>
>>>>>>>>> doug moen brings another important aspect to this discussion: "
>>>>>>>>> the top level implicit union that occurs before exporting an STL file". STL
>>>>>>>>> is intended to represent one object only presumably a 2-manifold and this
>>>>>>>>> is a serious limitation of STL format. I agree that, excluding
>>>>>>>>> numerical approximation issues, STL allows the recovering of the missing
>>>>>>>>> topological information if and only if the geometrical embedding of it is a
>>>>>>>>> manifold. As I showed before by examples, we can represent several
>>>>>>>>> non-disjoint manifolds in STL as far as they do not have common vertices.
>>>>>>>>> But that is very restrictive.
>>>>>>>>>
>>>>>>>>> I would like to represent not only one body in OSCAD. I would like
>>>>>>>>> to represent a set of distinct (not necessarily disjoint) objects. One
>>>>>>>>> simple application of that, besides the ones Arholm brought, is an
>>>>>>>>> animation of, say, a ball bouncing in a billiard table. If I define a fixed
>>>>>>>>> table and a ball on it, as their union is not a 2-manifold, I may have
>>>>>>>>> problems. Two gears may have contact. In the real world, objects have
>>>>>>>>> contact.
>>>>>>>>>
>>>>>>>>> Best than just eliminating the top level implicit union would be
>>>>>>>>> to have another operator: the set (or aggregate) operator. The set operator
>>>>>>>>> would collect a set of bodies preserving each one as a separated entity. If
>>>>>>>>> you union the set, then they become one (possibly manifold) body only but
>>>>>>>>> before that the set may not represent a manifold. Its bodies may not even
>>>>>>>>> be disjoint. May be, I don't know, there is no non-manifold objects in the
>>>>>>>>> world but the world itself is not a manifold.
>>>>>>>>>
>>>>>>>>> If we go in that way, STL should be abandoned.
>>>>>>>>>
>>>>>>>>> 2016-02-04 13:17 GMT-02:00 doug moen <doug at moens.org>:
>>>>>>>>>
>>>>>>>>>> "a non-manifold face is a face internal to the body, it has
>>>>>>>>>> material on both sides and does not describe the external surface of the
>>>>>>>>>> solid body."
>>>>>>>>>>
>>>>>>>>>> The ability to partition a solid into a collection of disjoint
>>>>>>>>>> subvolumes with shared faces is also useful in OpenSCAD; it's not just a
>>>>>>>>>> ship design/ACIS thing.
>>>>>>>>>>
>>>>>>>>>> One obvious example is 3D printing of multi-material/multi-colour
>>>>>>>>>> objects. There have been a number of discussions about how to support this
>>>>>>>>>> in OpenSCAD. Internally, the volumes for each colour/material need to be
>>>>>>>>>> kept separate and labeled. To export such a model, you either need to
>>>>>>>>>> export multiple STL files (one per material/colour), or you need to export
>>>>>>>>>> an AMF file with distinct volume elements for each colour/material. In no
>>>>>>>>>> case should any of the individual volumes that we track internally or
>>>>>>>>>> export contain non-manifold faces.
>>>>>>>>>>
>>>>>>>>>> This situation can arise in feature request #1562, which requests
>>>>>>>>>> a convex_decomposition() operator. The result of this operator is a group
>>>>>>>>>> of solids which share faces between them. Each group element is a convex
>>>>>>>>>> polyhedron, which is manifold. This feature isn't useful unless we get rid
>>>>>>>>>> of the implicit union that would otherwise occur when passing the results
>>>>>>>>>> of convex_decomposition() to another module: see issue #350. But, issue
>>>>>>>>>> #350 also eliminates the top level implicit union that occurs before
>>>>>>>>>> exporting an STL file. If we get rid of top level implicit union, and the
>>>>>>>>>> top level element in a script is a call to convex_decomposition() on
>>>>>>>>>> non-convex input, then we can't meaningfully export to STL. There is a
>>>>>>>>>> manifoldness check prior to STL export which *should* report this problem
>>>>>>>>>> (issue #1215). Exporting the same object to AMF can be supported, because
>>>>>>>>>> we can put each convex polyhedron into a separate volume.
>>>>>>>>>>
>>>>>>>>>> In summary, OpenSCAD should support models that contain disjoint
>>>>>>>>>> subvolumes with shared faces. There are features we need to add and
>>>>>>>>>> bugs/design flaws we need to fix before this support is complete.
>>>>>>>>>>
>>>>>>>>>> On 4 February 2016 at 02:13, <arnholm at arnholm.org> wrote:
>>>>>>>>>>
>>>>>>>>>>> On 2016-02-04 06:54, Triffid Hunter wrote:
>>>>>>>>>>>
>>>>>>>>>>>> non-manifold means that the topology is somehow ambiguous.
>>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> No, it does not.
>>>>>>>>>>>
>>>>>>>>>>> An example of non-manifold topology is where a topological edge
>>>>>>>>>>> is shared by more than 2 faces.
>>>>>>>>>>>
>>>>>>>>>>> http://docs.mcneel.com/rhino/5/help/en-us/popup_moreinformation/non-manifold_edges.htm
>>>>>>>>>>>
>>>>>>>>>>> It is not ambiguous, and in many cases a desired feature. This
>>>>>>>>>>> kind of non-manifold topology is much used in ship design when designing
>>>>>>>>>>> FEM models with shell elements. Often, non-manifold topology is perfectly
>>>>>>>>>>> acceptable and is not ambiguous in any way. CAD systems like e.g. ACIS (
>>>>>>>>>>> https://en.wikipedia.org/wiki/ACIS ) have no issues
>>>>>>>>>>> representing non-manifold topology.
>>>>>>>>>>>
>>>>>>>>>>> In the special case of 3d solid topological models, a
>>>>>>>>>>> non-manifold face is a face internal to the body, it has material on both
>>>>>>>>>>> sides and does not describe the external surface of the solid body. That
>>>>>>>>>>> does not mean it is topologically ambiguous. Such faces may be and are used
>>>>>>>>>>> for subdivision, for example to guide 3d solid meshing (solid FEM models).
>>>>>>>>>>> Whether such non-manifold topological entities are  desirable or not
>>>>>>>>>>> depends on the application area, but it is not topologically ambiguous.
>>>>>>>>>>>
>>>>>>>>>>> It is only when the topological description is non-existent
>>>>>>>>>>> things like this become a problem.
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> Carsten Arnholm
>>>>>>>>>>>
>>>>>>>>>>> _______________________________________________
>>>>>>>>>>> OpenSCAD mailing list
>>>>>>>>>>> Discuss at lists.openscad.org
>>>>>>>>>>>
>>>>>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> _______________________________________________
>>>>>>>>>> OpenSCAD mailing list
>>>>>>>>>> Discuss at lists.openscad.org
>>>>>>>>>>
>>>>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>> _______________________________________________
>>>>>>>>> OpenSCAD mailing list
>>>>>>>>> Discuss at lists.openscad.org
>>>>>>>>>
>>>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>> _______________________________________________
>>>>>>>> OpenSCAD mailing list
>>>>>>>> Discuss at lists.openscad.org
>>>>>>>>
>>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>> _______________________________________________
>>>>>> OpenSCAD mailing list
>>>>>> Discuss at lists.openscad.org
>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>
>>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> OpenSCAD mailing list
>>>>> Discuss at lists.openscad.org
>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>
>>>>>
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/8040a46f/attachment.html>

From gurdulu66 at gmail.com  Thu Feb  4 16:40:53 2016
From: gurdulu66 at gmail.com (Francesco)
Date: Thu, 4 Feb 2016 15:40:53 -0600
Subject: [OpenSCAD] next generation 3D printers
In-Reply-To: <CAGV6i+PBC9q=8LT8NrOBVZExBTSrBvEDmcPqM0GvUgCqUbDfvw@mail.gmail.com>
References: <1454159264651-15977.post@n5.nabble.com>
	<CAGV6i+PBC9q=8LT8NrOBVZExBTSrBvEDmcPqM0GvUgCqUbDfvw@mail.gmail.com>
Message-ID: <56B3C565.2020109@gmail.com>

I feel like I opened the Pandora vase.
Maybe, in a couple of month, I will be able to write without the 
sensation of writing non sense.
Just few  questions.
Openscad seems not having an internal representation of his owns, don't 
have a DB, don't write in my home dir (exept for scad e STL files), ... 
kind of translator from drawing orders to mesh (very complicated 
argument, browsing the forum).
Am I right?
My limited (and years ago) experience was as Unix C programmer and most 
of my time was spent writing custum DB (C with system calls for debug). 
That's all and that's  why probably I feel disoriended.
I have a sensation that having a DB would change most of the discussions 
I had read.
But maybe I don't know what I am writing about and it make no sense 
talking about a DB.









On 01/30/2016 11:59 AM, doug moen wrote:
> Here are some steps to supporting multiple materials and colours in 
> OpenSCAD.
>
> Step 0. With most consumer-grade 3D printers, the best you can do is 
> create multiple STL files, one for each colour or material. Each STL 
> file is imported into the slicer and associated with a different print 
> head. This is all that OpenSCAD supports today (ie, OpenSCAD has no 
> knowledge of multiple materials & colours in the exported model).
>
> Step 1. The AMF file format supports multi-part models, where each 
> part can represent a different colour or material. This is more 
> convenient: your multi-colour, multi-material model is represented by 
> a single file, instead of a collection of STL files. Cura and Slic3r 
> can read multi-part AMF files (and convert them to GCode for 
> controlling your printer). Step 1 is to extend OpenSCAD so that it can 
> export multi-part AMF files.
>
> There is a recent forum thread where we discuss adding new syntax to 
> tag different parts of the CSG tree as belonging to different 
> components of a multi-part model. If we design and implement this 
> feature correctly, then you could create a single scad file that 
> specifies a multi-part model, and export it as either multiple STL 
> files, or as a single AMF file. 
> http://forum.openscad.org/export-function-td15428.html
>
> Step 2. Extend OpenSCAD so that it can *import* multi-part AMF files. 
> Generalize the concept of a "shape" so that a shape can have 2 or more 
> disjoint regions consisting of different materials or colours, and 
> generalize the CSG operators to cope with this.
>
> Last year, we had a forum discussion about this, and bobc prototyped 
> an extension to OpenSCAD to support multi-colour models.
> http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-td12667i20.html#a12867
>
> Step 3. Full colour 3D printing exists, which allows you to print 
> near-photo-realistic colour models, with potentially millions of 
> colours. Shapeways supports full colour printing. The "disjoint 
> region" model of multiple colours from step 2 isn't really suitable 
> for representing continous colour gradations. Texture mapping is one 
> approach, and is good enough for Shapeways colour prints, but all it 
> does is apply colour to the surface of a model. It doesn't allow you 
> to specify continuous material gradations within the interior of a 
> model (something that's possible with a 3D Systems polyjet printer). 
> For that, you need a volumetric description of the model. OpenSCAD 
> currently describes models using a boundary representation. With a 
> functional representation, functions of the form f[x,y,z] map each 
> point in 3-space onto different properties of the object, including 
> geometry, colour and material. The volumetric approach is the only one 
> that fully supports the underlying capabilities of 3D printers. I 
> think OpenSCAD needs to eventually support a hybrid of functional and 
> boundary representations.
>
> On 30 January 2016 at 08:07, wood <gurdulu66 at gmail.com 
> <mailto:gurdulu66 at gmail.com>> wrote:
>
>     Hi.
>     A started Openscade 2 weeks ago. Needed to make renderings.
>     While browsing 3D's for Linux I played with Openscad
>     for a couple of hours with my little doughter.
>     I tought it was amazing (in another life I was a Unix ANSI C
>     programmer)
>     but not what I needed to make renderings.
>     Downloded some 3D for Linux and started with SweetHome3D.
>     Nice rendering but no way to create new 3D objects.  But while
>     stressing
>     myself
>     passing from triyng to fly with supersonic spatial ship (Blender
>     GUI) to
>     dragging and dropping (mouse kills), thinking that I must learn pyton
>     I had a flash and tryed OpenScad angain. Fantastic.
>     Had a kitchen (forniture) 3D model with just "cube" and "translate".
>     Imported in Sweethome and wow (had to use FreeCad [.stl to .obj]!
>     Perfect. I now know that most of the Openscade users use it for 3D
>     printing
>     but I had no idea at the time (At the beginnig I tought that photos
>     of piece of plastic where renderings .. not real objects!).
>     When I found that Openscade is an imperative programming (I read
>     wikipedia about) I just started to use Bash scripts (It would be
>     better in C
>     but I was just making a try).
>     Using Openscade means that you are, more or less, a programmer so
>     what is
>     the point of complainig about missing functionality (math, logic,
>     variable,
>     function) of
>     an imperative programming language (that's was I tought). Just produce
>     the imperative sequence with the right instrument for you.
>     Choose the language that has what you need.
>     It very easy. You do all the numerical and logical things in Bash
>     (C, Python
>     ...)
>     and produce a .scad file ...[I am sure most of You has done this].
>
>     something like [in Bash]:
>     define -i H
>     let H=1200
>     .... [definition and initialisation of all the variables]
>     echo "// Inserisco Cubo"        > myfile.scad
>     echo "cube([$H,$L,$W]);"    >> myfile.scad
>     echo "cube[$H,$L,$W]"       >> Misure.txt
>     exit 0
>
>     Of course I had some problems when triyng to realize the renderings
>     that other users had done in my missunderstunding (the photos of real
>     objects!).
>     Did not know nothing of 3D in general so it took me a while to realize
>     that it was not what Openscade was made for (Colors and texture).
>     I am pretty sure that Openscade is perfect for "sane" interior design.
>     I realize artigianal wood forniture (de facto I am the 3D printer,
>     the way
>     the most of You use Openscade) and renderings from architects
>     are a pain (wondeful to see for the client but
>     no idea of how to make it).  The scripts I started with Bash are
>     very poor
>     but
>     produce not only a 3D models (to look at) but also all the mesures
>     of the
>     pieces of the forniture (remember, I am the 3D printer!). Fantastic.
>     But what about matirials, texture, colors (Ok is just
>     rapresentation but,
>     if you dont show you dont sell).
>     First I tought that it was just my problem (Openscade is for 3D
>     printing not
>     for
>     interior design) and I did not want to complain and ask the
>     Openscade team
>     to
>     understand my needs. Then, browsing the forum, I read about next
>     generation
>     3D
>     printers, that probably will be able to use more matirials and add
>     finitures
>     (know
>     nothing about 3D printing until 2 weeks ago).
>     At the moment I have to read a little more about .obj .3DS ...
>     just to have
>     an idea.
>
>     But I guess there must be someone else out there
>     (mybe thinking about next generation 3D printers) that is
>     interested in
>     solving
>     the same issue.
>     saluti
>     wood
>
>
>
>     wood
>
>
>
>
>
>     --
>     View this message in context:
>     http://forum.openscad.org/next-generation-3D-printers-tp15977.html
>     Sent from the OpenSCAD mailing list archive at Nabble.com.
>
>     _______________________________________________
>     OpenSCAD mailing list
>     Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
>     http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/0296dff3/attachment.html>

From nop.head at gmail.com  Thu Feb  4 18:06:42 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 4 Feb 2016 23:06:42 +0000
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <CAGV6i+NCAKQY2qna4q-iv3bQzpuSMVksDhpSiUt83oM=Rha-cg@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
	<CA+i9EaCXid49U8Y1UbV4A_xecmqh0KbWhscZeVWnLSJVw0wgRw@mail.gmail.com>
	<CAGV6i+O0R6X3-4NmEDuwgUJ-U8f-CMfGecPD0E5F-D-cJxBz9Q@mail.gmail.com>
	<CAEEmnrPA_rzMftMpwjzjAwDKutTbNGYoVHTPGyTYU0E-fx7SUg@mail.gmail.com>
	<CAGV6i+N8z9dmtOU-q-82H3m71o4xveqyKNPH3QxbXAbn21rvcg@mail.gmail.com>
	<CAEEmnrP++RzpUU1QAYcyk-pQwa66j=dd9P6z77tyuixNoF90ag@mail.gmail.com>
	<CAGV6i+N76=EHUhS5F+vA3mfA-cUqa5f96ZZ7djNKi+B2tDHvbQ@mail.gmail.com>
	<CA+i9EaD2ZK__4xwSScJ=tX+r+DX7-2hipBpxSWQzyr0kuFg9cw@mail.gmail.com>
	<CAEEmnrOS8hpTt6uCmadt+-1aA+nXEJerfpuHMLgqoCe7eEe-cA@mail.gmail.com>
	<CAGV6i+NCAKQY2qna4q-iv3bQzpuSMVksDhpSiUt83oM=Rha-cg@mail.gmail.com>
Message-ID: <CAEEmnrPUOO3dAe9a-v=h31ufVbrbaT5Q27c03VeBhU9iieestQ@mail.gmail.com>

Ah, I see now. Children are passed as a group and children(i) indexes into
it and fishes one out. So the outer { ... } creates a group but inner ones
don't.

Yes it would be better if all { } create a group and a new scope. Then I
don't think group() is needed in the syntax.

Now here is a weird one: -
a = 1;

group() {
    a = 2;
    b = 3;
    echo(a,b);
}

echo(a);

WARNING: Ignoring unknown variable 'b'.

ECHO: 1, undef

ECHO: 1


I expected group to force { ...} to make an new scope but it does something
weird instead. However union() does force a new scope:

a = 1;

union() {
    a = 2;
    b = 3;
    echo(a,b);
}

echo(a);

ECHO: 2, 3

ECHO: 1










On 4 February 2016 at 20:58, doug moen <doug at moens.org> wrote:

> Nop head, If we have:
>
>   my_module() {
>       cube();
>       cylinder();
>   }
>
> then my_module is called with two children, a cube and a cylinder. The
> children() are a group. The only way to pass two children to a module is to
> use the {...} syntax, so of course {...} makes a group.
>
> This is the way I've always understood OpenSCAD to work. Apparently you
> have a different way of thinking about it?
>
>
> On 4 February 2016 at 15:47, nop head <nop.head at gmail.com> wrote:
>
>> Ronaldo,
>>
>> With implicit union, a group currently acts like union.
>>
>> Doug,
>>
>> If we have:
>>
>>   my_module() {
>>       cube();
>>       cylinder();
>>   }
>>
>> Then cube() should be children(0) in my_module and cylinder()
>> children(1). If { ...} makes a group then they would both be children(0);
>>
>>
>> On 4 February 2016 at 20:34, Ronaldo Persiano <rcmpersiano at gmail.com>
>> wrote:
>>
>>> Well, this open a new world I have never been aware of. But I don't
>>> understand what a group is. In a few tests I have just built, two
>>> overlapping cubes in a group is previewed as two cubes (I see 24 edges) and
>>> rendered as their union (with 12 edges). After all, what is a group?
>>>
>>> 2016-02-04 18:21 GMT-02:00 doug moen <doug at moens.org>:
>>>
>>>> Consider this code:
>>>>
>>>> module m()
>>>> {
>>>>     cube(10,center=true);
>>>>     sphere(6,center=true);
>>>> };
>>>>
>>>> m() returns a group containing two children, a cube and a sphere. The
>>>> use of '{...}' is necessary here to construct a group containing more than
>>>> one child.
>>>>
>>>> Now consider this:
>>>>
>>>> module m2()
>>>> {
>>>>     {
>>>>         cube(10,center=true);
>>>>         sphere(6,center=true);
>>>>     }
>>>>     cylinder(r=1,h=20,center=true);
>>>> }
>>>>
>>>> I would like m2() to return a group with 2 children; the first child is
>>>> a group of a cube and sphere, the second child is the cylinder.
>>>>
>>>> What actually happens is that the inner {....} brackets are ignored,
>>>> and a group of 3 shapes is returned.
>>>>
>>>> This, I think, is the situation where the group(){...} syntax must be
>>>> used explicitly. If {...} worked the way I think it should work, then you
>>>> wouldn't need to call group() explicitly. We wouldn't need group() at all,
>>>> and we could just use {...} in the CSG tree.
>>>>
>>>> In a related matter, I also think that variables defined within {...}
>>>> should be local to the {...} in all cases, but that doesn't happen either,
>>>> in the same case where {...} fails to form a group.
>>>>
>>>> Doug.
>>>>
>>>> On 4 February 2016 at 14:00, nop head <nop.head at gmail.com> wrote:
>>>>
>>>>> Yes but if {...} made a group, how would you pass multiple children as
>>>>> separate children?
>>>>>
>>>>> On 4 February 2016 at 18:49, doug moen <doug at moens.org> wrote:
>>>>>
>>>>>> Okay, cool. That probably means we should document the group()
>>>>>> operator.
>>>>>>
>>>>>> And you had to do that because {...} standing alone (not as a module
>>>>>> argument) doesn't create a group. This is unfortunately another
>>>>>> incompatibility with OpenSCAD2.
>>>>>>
>>>>>> Doug.
>>>>>>
>>>>>>
>>>>>> On Thursday, 4 February 2016, nop head <nop.head at gmail.com> wrote:
>>>>>>
>>>>>>> I have used group() explicitly to make a bunch of children into a
>>>>>>> first child.
>>>>>>>
>>>>>>> On 4 February 2016 at 18:04, doug moen <doug at moens.org> wrote:
>>>>>>>
>>>>>>>> Ronaldo said: "Best than just eliminating the top level implicit
>>>>>>>> union would be to have another operator: the set (or aggregate) operator.
>>>>>>>> The set operator would collect a set of bodies preserving each one as a
>>>>>>>> separated entity. If you union the set, then they become one (possibly
>>>>>>>> manifold) body only but before that the set may not represent a manifold.
>>>>>>>> Its bodies may not even be disjoint."
>>>>>>>>
>>>>>>>> We already have a "set (or aggregate)" operator. It is called
>>>>>>>> "group". The explicit syntax is 'group() { shape1; shape2; ... }'. You can
>>>>>>>> see this operator if you display the CSG tree. Nobody types it explicitly,
>>>>>>>> because groups are generated implicitly for every module call (the
>>>>>>>> 'children()' of a module call is represented by a group, and the output is
>>>>>>>> always a group).
>>>>>>>>
>>>>>>>> There is a design flaw in how groups currently work. In short, too
>>>>>>>> many groups are being implicitly generated. If the tail argument to a
>>>>>>>> module call is a single (non-compound) statement, like a for loop or a
>>>>>>>> module call, then the results returned by that statement (which may be a
>>>>>>>> group) are wrapped in another group with a single element. This prevents
>>>>>>>> you from feeding multiple outputs from one module call into another module
>>>>>>>> as its children(). This is why intersection_for() exists.
>>>>>>>>
>>>>>>>> There is a plan to fix this problem, but it is called "lazy union",
>>>>>>>> because the same feature also eliminates the implicit top level union.
>>>>>>>> https://github.com/openscad/openscad/issues/350
>>>>>>>>
>>>>>>>> OpenSCAD2 fixes the problem by adopting so-called "lazy union"
>>>>>>>> semantics for module calls, and also by reinterpreting the "{ ... }" syntax
>>>>>>>> as the group constructor. In OpenSCAD2, groups are always constructed
>>>>>>>> explicitly using {...} syntax, except for at the top level, where all top
>>>>>>>> level objects are implicitly collected into a group.
>>>>>>>>
>>>>>>>> Even in OpenSCAD2, there is a requirement that each element of a
>>>>>>>> group be either another group, or a manifold shape. The CGAL union operator
>>>>>>>> requires that its arguments be manifold; that's where the restriction comes
>>>>>>>> from.
>>>>>>>>
>>>>>>>> Doug Moen.
>>>>>>>>
>>>>>>>> On 4 February 2016 at 11:13, Ronaldo Persiano <
>>>>>>>> rcmpersiano at gmail.com> wrote:
>>>>>>>>
>>>>>>>>> doug moen brings another important aspect to this discussion: "
>>>>>>>>> the top level implicit union that occurs before exporting an STL file". STL
>>>>>>>>> is intended to represent one object only presumably a 2-manifold and this
>>>>>>>>> is a serious limitation of STL format. I agree that, excluding
>>>>>>>>> numerical approximation issues, STL allows the recovering of the missing
>>>>>>>>> topological information if and only if the geometrical embedding of it is a
>>>>>>>>> manifold. As I showed before by examples, we can represent several
>>>>>>>>> non-disjoint manifolds in STL as far as they do not have common vertices.
>>>>>>>>> But that is very restrictive.
>>>>>>>>>
>>>>>>>>> I would like to represent not only one body in OSCAD. I would like
>>>>>>>>> to represent a set of distinct (not necessarily disjoint) objects. One
>>>>>>>>> simple application of that, besides the ones Arholm brought, is an
>>>>>>>>> animation of, say, a ball bouncing in a billiard table. If I define a fixed
>>>>>>>>> table and a ball on it, as their union is not a 2-manifold, I may have
>>>>>>>>> problems. Two gears may have contact. In the real world, objects have
>>>>>>>>> contact.
>>>>>>>>>
>>>>>>>>> Best than just eliminating the top level implicit union would be
>>>>>>>>> to have another operator: the set (or aggregate) operator. The set operator
>>>>>>>>> would collect a set of bodies preserving each one as a separated entity. If
>>>>>>>>> you union the set, then they become one (possibly manifold) body only but
>>>>>>>>> before that the set may not represent a manifold. Its bodies may not even
>>>>>>>>> be disjoint. May be, I don't know, there is no non-manifold objects in the
>>>>>>>>> world but the world itself is not a manifold.
>>>>>>>>>
>>>>>>>>> If we go in that way, STL should be abandoned.
>>>>>>>>>
>>>>>>>>> 2016-02-04 13:17 GMT-02:00 doug moen <doug at moens.org>:
>>>>>>>>>
>>>>>>>>>> "a non-manifold face is a face internal to the body, it has
>>>>>>>>>> material on both sides and does not describe the external surface of the
>>>>>>>>>> solid body."
>>>>>>>>>>
>>>>>>>>>> The ability to partition a solid into a collection of disjoint
>>>>>>>>>> subvolumes with shared faces is also useful in OpenSCAD; it's not just a
>>>>>>>>>> ship design/ACIS thing.
>>>>>>>>>>
>>>>>>>>>> One obvious example is 3D printing of multi-material/multi-colour
>>>>>>>>>> objects. There have been a number of discussions about how to support this
>>>>>>>>>> in OpenSCAD. Internally, the volumes for each colour/material need to be
>>>>>>>>>> kept separate and labeled. To export such a model, you either need to
>>>>>>>>>> export multiple STL files (one per material/colour), or you need to export
>>>>>>>>>> an AMF file with distinct volume elements for each colour/material. In no
>>>>>>>>>> case should any of the individual volumes that we track internally or
>>>>>>>>>> export contain non-manifold faces.
>>>>>>>>>>
>>>>>>>>>> This situation can arise in feature request #1562, which requests
>>>>>>>>>> a convex_decomposition() operator. The result of this operator is a group
>>>>>>>>>> of solids which share faces between them. Each group element is a convex
>>>>>>>>>> polyhedron, which is manifold. This feature isn't useful unless we get rid
>>>>>>>>>> of the implicit union that would otherwise occur when passing the results
>>>>>>>>>> of convex_decomposition() to another module: see issue #350. But, issue
>>>>>>>>>> #350 also eliminates the top level implicit union that occurs before
>>>>>>>>>> exporting an STL file. If we get rid of top level implicit union, and the
>>>>>>>>>> top level element in a script is a call to convex_decomposition() on
>>>>>>>>>> non-convex input, then we can't meaningfully export to STL. There is a
>>>>>>>>>> manifoldness check prior to STL export which *should* report this problem
>>>>>>>>>> (issue #1215). Exporting the same object to AMF can be supported, because
>>>>>>>>>> we can put each convex polyhedron into a separate volume.
>>>>>>>>>>
>>>>>>>>>> In summary, OpenSCAD should support models that contain disjoint
>>>>>>>>>> subvolumes with shared faces. There are features we need to add and
>>>>>>>>>> bugs/design flaws we need to fix before this support is complete.
>>>>>>>>>>
>>>>>>>>>> On 4 February 2016 at 02:13, <arnholm at arnholm.org> wrote:
>>>>>>>>>>
>>>>>>>>>>> On 2016-02-04 06:54, Triffid Hunter wrote:
>>>>>>>>>>>
>>>>>>>>>>>> non-manifold means that the topology is somehow ambiguous.
>>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> No, it does not.
>>>>>>>>>>>
>>>>>>>>>>> An example of non-manifold topology is where a topological edge
>>>>>>>>>>> is shared by more than 2 faces.
>>>>>>>>>>>
>>>>>>>>>>> http://docs.mcneel.com/rhino/5/help/en-us/popup_moreinformation/non-manifold_edges.htm
>>>>>>>>>>>
>>>>>>>>>>> It is not ambiguous, and in many cases a desired feature. This
>>>>>>>>>>> kind of non-manifold topology is much used in ship design when designing
>>>>>>>>>>> FEM models with shell elements. Often, non-manifold topology is perfectly
>>>>>>>>>>> acceptable and is not ambiguous in any way. CAD systems like e.g. ACIS (
>>>>>>>>>>> https://en.wikipedia.org/wiki/ACIS ) have no issues
>>>>>>>>>>> representing non-manifold topology.
>>>>>>>>>>>
>>>>>>>>>>> In the special case of 3d solid topological models, a
>>>>>>>>>>> non-manifold face is a face internal to the body, it has material on both
>>>>>>>>>>> sides and does not describe the external surface of the solid body. That
>>>>>>>>>>> does not mean it is topologically ambiguous. Such faces may be and are used
>>>>>>>>>>> for subdivision, for example to guide 3d solid meshing (solid FEM models).
>>>>>>>>>>> Whether such non-manifold topological entities are  desirable or not
>>>>>>>>>>> depends on the application area, but it is not topologically ambiguous.
>>>>>>>>>>>
>>>>>>>>>>> It is only when the topological description is non-existent
>>>>>>>>>>> things like this become a problem.
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> Carsten Arnholm
>>>>>>>>>>>
>>>>>>>>>>> _______________________________________________
>>>>>>>>>>> OpenSCAD mailing list
>>>>>>>>>>> Discuss at lists.openscad.org
>>>>>>>>>>>
>>>>>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> _______________________________________________
>>>>>>>>>> OpenSCAD mailing list
>>>>>>>>>> Discuss at lists.openscad.org
>>>>>>>>>>
>>>>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>> _______________________________________________
>>>>>>>>> OpenSCAD mailing list
>>>>>>>>> Discuss at lists.openscad.org
>>>>>>>>>
>>>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>> _______________________________________________
>>>>>>>> OpenSCAD mailing list
>>>>>>>> Discuss at lists.openscad.org
>>>>>>>>
>>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>> _______________________________________________
>>>>>> OpenSCAD mailing list
>>>>>> Discuss at lists.openscad.org
>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>
>>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> OpenSCAD mailing list
>>>>> Discuss at lists.openscad.org
>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>
>>>>>
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/a82726bb/attachment.html>

From nop.head at gmail.com  Thu Feb  4 18:12:05 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 4 Feb 2016 23:12:05 +0000
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <CA+i9EaC0ziNN=-mQKDspf7-v6nKWno3dDZp_bX2zAnQnrBuJxQ@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
	<CA+i9EaCXid49U8Y1UbV4A_xecmqh0KbWhscZeVWnLSJVw0wgRw@mail.gmail.com>
	<CAGV6i+O0R6X3-4NmEDuwgUJ-U8f-CMfGecPD0E5F-D-cJxBz9Q@mail.gmail.com>
	<CAEEmnrPA_rzMftMpwjzjAwDKutTbNGYoVHTPGyTYU0E-fx7SUg@mail.gmail.com>
	<CAGV6i+N8z9dmtOU-q-82H3m71o4xveqyKNPH3QxbXAbn21rvcg@mail.gmail.com>
	<CAEEmnrP++RzpUU1QAYcyk-pQwa66j=dd9P6z77tyuixNoF90ag@mail.gmail.com>
	<CAGV6i+N76=EHUhS5F+vA3mfA-cUqa5f96ZZ7djNKi+B2tDHvbQ@mail.gmail.com>
	<CA+i9EaD2ZK__4xwSScJ=tX+r+DX7-2hipBpxSWQzyr0kuFg9cw@mail.gmail.com>
	<CAEEmnrOS8hpTt6uCmadt+-1aA+nXEJerfpuHMLgqoCe7eEe-cA@mail.gmail.com>
	<CAGV6i+NCAKQY2qna4q-iv3bQzpuSMVksDhpSiUt83oM=Rha-cg@mail.gmail.com>
	<CA+i9EaC0ziNN=-mQKDspf7-v6nKWno3dDZp_bX2zAnQnrBuJxQ@mail.gmail.com>
Message-ID: <CAEEmnrMC9XfNpzNbKAzAR13tmDAzYuMchH3sCD2YSXb+HBJ5+Q@mail.gmail.com>

I am not sure why you say it is previewed as two cubes. It looks like a
union to me unless I turn on show edges. But that is exactly what union()
does. The preview never does a real union. It just draws both objects.

On 4 February 2016 at 21:36, Ronaldo Persiano <rcmpersiano at gmail.com> wrote:

> nop head said:
> <quote>
> Ronaldo,
>
> With implicit union, a group currently acts like union.
> </quote>
>
> I didn't use implicit group but:
>
> group(){
>     cube(50);
>     translate([0,0,30]) cube(50);
> }
>
> which is previewed as two cubes and rendered as their union.
>
> 2016-02-04 18:58 GMT-02:00 doug moen <doug at moens.org>:
>
>> Nop head, If we have:
>>
>>   my_module() {
>>       cube();
>>       cylinder();
>>   }
>>
>> then my_module is called with two children, a cube and a cylinder. The
>> children() are a group. The only way to pass two children to a module is to
>> use the {...} syntax, so of course {...} makes a group.
>>
>> This is the way I've always understood OpenSCAD to work. Apparently you
>> have a different way of thinking about it?
>>
>>
>> On 4 February 2016 at 15:47, nop head <nop.head at gmail.com> wrote:
>>
>>> Ronaldo,
>>>
>>> With implicit union, a group currently acts like union.
>>>
>>> Doug,
>>>
>>> If we have:
>>>
>>>   my_module() {
>>>       cube();
>>>       cylinder();
>>>   }
>>>
>>> Then cube() should be children(0) in my_module and cylinder()
>>> children(1). If { ...} makes a group then they would both be children(0);
>>>
>>>
>>> On 4 February 2016 at 20:34, Ronaldo Persiano <rcmpersiano at gmail.com>
>>> wrote:
>>>
>>>> Well, this open a new world I have never been aware of. But I don't
>>>> understand what a group is. In a few tests I have just built, two
>>>> overlapping cubes in a group is previewed as two cubes (I see 24 edges) and
>>>> rendered as their union (with 12 edges). After all, what is a group?
>>>>
>>>> 2016-02-04 18:21 GMT-02:00 doug moen <doug at moens.org>:
>>>>
>>>>> Consider this code:
>>>>>
>>>>> module m()
>>>>> {
>>>>>     cube(10,center=true);
>>>>>     sphere(6,center=true);
>>>>> };
>>>>>
>>>>> m() returns a group containing two children, a cube and a sphere. The
>>>>> use of '{...}' is necessary here to construct a group containing more than
>>>>> one child.
>>>>>
>>>>> Now consider this:
>>>>>
>>>>> module m2()
>>>>> {
>>>>>     {
>>>>>         cube(10,center=true);
>>>>>         sphere(6,center=true);
>>>>>     }
>>>>>     cylinder(r=1,h=20,center=true);
>>>>> }
>>>>>
>>>>> I would like m2() to return a group with 2 children; the first child
>>>>> is a group of a cube and sphere, the second child is the cylinder.
>>>>>
>>>>> What actually happens is that the inner {....} brackets are ignored,
>>>>> and a group of 3 shapes is returned.
>>>>>
>>>>> This, I think, is the situation where the group(){...} syntax must be
>>>>> used explicitly. If {...} worked the way I think it should work, then you
>>>>> wouldn't need to call group() explicitly. We wouldn't need group() at all,
>>>>> and we could just use {...} in the CSG tree.
>>>>>
>>>>> In a related matter, I also think that variables defined within {...}
>>>>> should be local to the {...} in all cases, but that doesn't happen either,
>>>>> in the same case where {...} fails to form a group.
>>>>>
>>>>> Doug.
>>>>>
>>>>> On 4 February 2016 at 14:00, nop head <nop.head at gmail.com> wrote:
>>>>>
>>>>>> Yes but if {...} made a group, how would you pass multiple children
>>>>>> as separate children?
>>>>>>
>>>>>> On 4 February 2016 at 18:49, doug moen <doug at moens.org> wrote:
>>>>>>
>>>>>>> Okay, cool. That probably means we should document the group()
>>>>>>> operator.
>>>>>>>
>>>>>>> And you had to do that because {...} standing alone (not as a module
>>>>>>> argument) doesn't create a group. This is unfortunately another
>>>>>>> incompatibility with OpenSCAD2.
>>>>>>>
>>>>>>> Doug.
>>>>>>>
>>>>>>>
>>>>>>> On Thursday, 4 February 2016, nop head <nop.head at gmail.com> wrote:
>>>>>>>
>>>>>>>> I have used group() explicitly to make a bunch of children into a
>>>>>>>> first child.
>>>>>>>>
>>>>>>>> On 4 February 2016 at 18:04, doug moen <doug at moens.org> wrote:
>>>>>>>>
>>>>>>>>> Ronaldo said: "Best than just eliminating the top level implicit
>>>>>>>>> union would be to have another operator: the set (or aggregate) operator.
>>>>>>>>> The set operator would collect a set of bodies preserving each one as a
>>>>>>>>> separated entity. If you union the set, then they become one (possibly
>>>>>>>>> manifold) body only but before that the set may not represent a manifold.
>>>>>>>>> Its bodies may not even be disjoint."
>>>>>>>>>
>>>>>>>>> We already have a "set (or aggregate)" operator. It is called
>>>>>>>>> "group". The explicit syntax is 'group() { shape1; shape2; ... }'. You can
>>>>>>>>> see this operator if you display the CSG tree. Nobody types it explicitly,
>>>>>>>>> because groups are generated implicitly for every module call (the
>>>>>>>>> 'children()' of a module call is represented by a group, and the output is
>>>>>>>>> always a group).
>>>>>>>>>
>>>>>>>>> There is a design flaw in how groups currently work. In short, too
>>>>>>>>> many groups are being implicitly generated. If the tail argument to a
>>>>>>>>> module call is a single (non-compound) statement, like a for loop or a
>>>>>>>>> module call, then the results returned by that statement (which may be a
>>>>>>>>> group) are wrapped in another group with a single element. This prevents
>>>>>>>>> you from feeding multiple outputs from one module call into another module
>>>>>>>>> as its children(). This is why intersection_for() exists.
>>>>>>>>>
>>>>>>>>> There is a plan to fix this problem, but it is called "lazy
>>>>>>>>> union", because the same feature also eliminates the implicit top level
>>>>>>>>> union. https://github.com/openscad/openscad/issues/350
>>>>>>>>>
>>>>>>>>> OpenSCAD2 fixes the problem by adopting so-called "lazy union"
>>>>>>>>> semantics for module calls, and also by reinterpreting the "{ ... }" syntax
>>>>>>>>> as the group constructor. In OpenSCAD2, groups are always constructed
>>>>>>>>> explicitly using {...} syntax, except for at the top level, where all top
>>>>>>>>> level objects are implicitly collected into a group.
>>>>>>>>>
>>>>>>>>> Even in OpenSCAD2, there is a requirement that each element of a
>>>>>>>>> group be either another group, or a manifold shape. The CGAL union operator
>>>>>>>>> requires that its arguments be manifold; that's where the restriction comes
>>>>>>>>> from.
>>>>>>>>>
>>>>>>>>> Doug Moen.
>>>>>>>>>
>>>>>>>>> On 4 February 2016 at 11:13, Ronaldo Persiano <
>>>>>>>>> rcmpersiano at gmail.com> wrote:
>>>>>>>>>
>>>>>>>>>> doug moen brings another important aspect to this discussion: "
>>>>>>>>>> the top level implicit union that occurs before exporting an STL file". STL
>>>>>>>>>> is intended to represent one object only presumably a 2-manifold and this
>>>>>>>>>> is a serious limitation of STL format. I agree that, excluding
>>>>>>>>>> numerical approximation issues, STL allows the recovering of the missing
>>>>>>>>>> topological information if and only if the geometrical embedding of it is a
>>>>>>>>>> manifold. As I showed before by examples, we can represent several
>>>>>>>>>> non-disjoint manifolds in STL as far as they do not have common vertices.
>>>>>>>>>> But that is very restrictive.
>>>>>>>>>>
>>>>>>>>>> I would like to represent not only one body in OSCAD. I would
>>>>>>>>>> like to represent a set of distinct (not necessarily disjoint) objects. One
>>>>>>>>>> simple application of that, besides the ones Arholm brought, is an
>>>>>>>>>> animation of, say, a ball bouncing in a billiard table. If I define a fixed
>>>>>>>>>> table and a ball on it, as their union is not a 2-manifold, I may have
>>>>>>>>>> problems. Two gears may have contact. In the real world, objects have
>>>>>>>>>> contact.
>>>>>>>>>>
>>>>>>>>>> Best than just eliminating the top level implicit union would be
>>>>>>>>>> to have another operator: the set (or aggregate) operator. The set operator
>>>>>>>>>> would collect a set of bodies preserving each one as a separated entity. If
>>>>>>>>>> you union the set, then they become one (possibly manifold) body only but
>>>>>>>>>> before that the set may not represent a manifold. Its bodies may not even
>>>>>>>>>> be disjoint. May be, I don't know, there is no non-manifold objects in the
>>>>>>>>>> world but the world itself is not a manifold.
>>>>>>>>>>
>>>>>>>>>> If we go in that way, STL should be abandoned.
>>>>>>>>>>
>>>>>>>>>> 2016-02-04 13:17 GMT-02:00 doug moen <doug at moens.org>:
>>>>>>>>>>
>>>>>>>>>>> "a non-manifold face is a face internal to the body, it has
>>>>>>>>>>> material on both sides and does not describe the external surface of the
>>>>>>>>>>> solid body."
>>>>>>>>>>>
>>>>>>>>>>> The ability to partition a solid into a collection of disjoint
>>>>>>>>>>> subvolumes with shared faces is also useful in OpenSCAD; it's not just a
>>>>>>>>>>> ship design/ACIS thing.
>>>>>>>>>>>
>>>>>>>>>>> One obvious example is 3D printing of
>>>>>>>>>>> multi-material/multi-colour objects. There have been a number of
>>>>>>>>>>> discussions about how to support this in OpenSCAD. Internally, the volumes
>>>>>>>>>>> for each colour/material need to be kept separate and labeled. To export
>>>>>>>>>>> such a model, you either need to export multiple STL files (one per
>>>>>>>>>>> material/colour), or you need to export an AMF file with distinct volume
>>>>>>>>>>> elements for each colour/material. In no case should any of the individual
>>>>>>>>>>> volumes that we track internally or export contain non-manifold faces.
>>>>>>>>>>>
>>>>>>>>>>> This situation can arise in feature request #1562, which
>>>>>>>>>>> requests a convex_decomposition() operator. The result of this operator is
>>>>>>>>>>> a group of solids which share faces between them. Each group element is a
>>>>>>>>>>> convex polyhedron, which is manifold. This feature isn't useful unless we
>>>>>>>>>>> get rid of the implicit union that would otherwise occur when passing the
>>>>>>>>>>> results of convex_decomposition() to another module: see issue #350. But,
>>>>>>>>>>> issue #350 also eliminates the top level implicit union that occurs before
>>>>>>>>>>> exporting an STL file. If we get rid of top level implicit union, and the
>>>>>>>>>>> top level element in a script is a call to convex_decomposition() on
>>>>>>>>>>> non-convex input, then we can't meaningfully export to STL. There is a
>>>>>>>>>>> manifoldness check prior to STL export which *should* report this problem
>>>>>>>>>>> (issue #1215). Exporting the same object to AMF can be supported, because
>>>>>>>>>>> we can put each convex polyhedron into a separate volume.
>>>>>>>>>>>
>>>>>>>>>>> In summary, OpenSCAD should support models that contain disjoint
>>>>>>>>>>> subvolumes with shared faces. There are features we need to add and
>>>>>>>>>>> bugs/design flaws we need to fix before this support is complete.
>>>>>>>>>>>
>>>>>>>>>>> On 4 February 2016 at 02:13, <arnholm at arnholm.org> wrote:
>>>>>>>>>>>
>>>>>>>>>>>> On 2016-02-04 06:54, Triffid Hunter wrote:
>>>>>>>>>>>>
>>>>>>>>>>>>> non-manifold means that the topology is somehow ambiguous.
>>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>> No, it does not.
>>>>>>>>>>>>
>>>>>>>>>>>> An example of non-manifold topology is where a topological edge
>>>>>>>>>>>> is shared by more than 2 faces.
>>>>>>>>>>>>
>>>>>>>>>>>> http://docs.mcneel.com/rhino/5/help/en-us/popup_moreinformation/non-manifold_edges.htm
>>>>>>>>>>>>
>>>>>>>>>>>> It is not ambiguous, and in many cases a desired feature. This
>>>>>>>>>>>> kind of non-manifold topology is much used in ship design when designing
>>>>>>>>>>>> FEM models with shell elements. Often, non-manifold topology is perfectly
>>>>>>>>>>>> acceptable and is not ambiguous in any way. CAD systems like e.g. ACIS (
>>>>>>>>>>>> https://en.wikipedia.org/wiki/ACIS ) have no issues
>>>>>>>>>>>> representing non-manifold topology.
>>>>>>>>>>>>
>>>>>>>>>>>> In the special case of 3d solid topological models, a
>>>>>>>>>>>> non-manifold face is a face internal to the body, it has material on both
>>>>>>>>>>>> sides and does not describe the external surface of the solid body. That
>>>>>>>>>>>> does not mean it is topologically ambiguous. Such faces may be and are used
>>>>>>>>>>>> for subdivision, for example to guide 3d solid meshing (solid FEM models).
>>>>>>>>>>>> Whether such non-manifold topological entities are  desirable or not
>>>>>>>>>>>> depends on the application area, but it is not topologically ambiguous.
>>>>>>>>>>>>
>>>>>>>>>>>> It is only when the topological description is non-existent
>>>>>>>>>>>> things like this become a problem.
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>> Carsten Arnholm
>>>>>>>>>>>>
>>>>>>>>>>>> _______________________________________________
>>>>>>>>>>>> OpenSCAD mailing list
>>>>>>>>>>>> Discuss at lists.openscad.org
>>>>>>>>>>>>
>>>>>>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> _______________________________________________
>>>>>>>>>>> OpenSCAD mailing list
>>>>>>>>>>> Discuss at lists.openscad.org
>>>>>>>>>>>
>>>>>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> _______________________________________________
>>>>>>>>>> OpenSCAD mailing list
>>>>>>>>>> Discuss at lists.openscad.org
>>>>>>>>>>
>>>>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>> _______________________________________________
>>>>>>>>> OpenSCAD mailing list
>>>>>>>>> Discuss at lists.openscad.org
>>>>>>>>>
>>>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> OpenSCAD mailing list
>>>>>>> Discuss at lists.openscad.org
>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>
>>>>>>>
>>>>>>
>>>>>> _______________________________________________
>>>>>> OpenSCAD mailing list
>>>>>> Discuss at lists.openscad.org
>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>
>>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> OpenSCAD mailing list
>>>>> Discuss at lists.openscad.org
>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>
>>>>>
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/9b97a029/attachment.html>

From marius at kintel.net  Thu Feb  4 18:35:22 2016
From: marius at kintel.net (Marius Kintel)
Date: Thu, 4 Feb 2016 18:35:22 -0500
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <CAEEmnrPUOO3dAe9a-v=h31ufVbrbaT5Q27c03VeBhU9iieestQ@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org> <1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
	<CA+i9EaCXid49U8Y1UbV4A_xecmqh0KbWhscZeVWnLSJVw0wgRw@mail.gmail.com>
	<CAGV6i+O0R6X3-4NmEDuwgUJ-U8f-CMfGecPD0E5F-D-cJxBz9Q@mail.gmail.com>
	<CAEEmnrPA_rzMftMpwjzjAwDKutTbNGYoVHTPGyTYU0E-fx7SUg@mail.gmail.com>
	<CAGV6i+N8z9dmtOU-q-82H3m71o4xveqyKNPH3QxbXAbn21rvcg@mail.gmail.com>
	<CAEEmnrP++RzpUU1QAYcyk-pQwa66j=dd9P6z77tyuixNoF90ag@mail.gmail.com>
	<CAGV6i+N76=EHUhS5F+vA3mfA-cUqa5f96ZZ7djNKi+B2tDHvbQ@mail.gmail.com>
	<CA+i9EaD2ZK__4xwSScJ=tX+r+DX7-2hipBpxSWQzyr0kuFg9cw@mail.gmail.com>
	<CAEEmnrOS8hpTt6uCmadt+-1aA+nXEJerfpuHMLgqoCe7eEe-cA@mail.gmail.com>
	<CAGV6i+NCAKQY2qna4q-iv3bQzpuSMVksDhpSiUt83oM=Rha-cg@mail.gmail.com>
	<CAEEmnrPUOO3dAe9a-v=h31ufVbrbaT5Q27c03VeBhU9iieestQ@mail.gmail.com>
Message-ID: <3B5A1485-7C38-4085-9CF9-2ED7AA8B48CB@kintel.net>

That looks like a bug.

 -Marius

> On Feb 4, 2016, at 18:06 PM, nop head <nop.head at gmail.com> wrote:
> 
> Now here is a weird one: [?]
> 
> WARNING: Ignoring unknown variable 'b'.
> ECHO: 1, undef
> ECHO: 1
> 
> I expected group to force { ...} to make an new scope but it does something weird instead. However union() does force a new scope:
> 



From rcmpersiano at gmail.com  Thu Feb  4 19:32:36 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Thu, 4 Feb 2016 22:32:36 -0200
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <3B5A1485-7C38-4085-9CF9-2ED7AA8B48CB@kintel.net>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
	<CA+i9EaCXid49U8Y1UbV4A_xecmqh0KbWhscZeVWnLSJVw0wgRw@mail.gmail.com>
	<CAGV6i+O0R6X3-4NmEDuwgUJ-U8f-CMfGecPD0E5F-D-cJxBz9Q@mail.gmail.com>
	<CAEEmnrPA_rzMftMpwjzjAwDKutTbNGYoVHTPGyTYU0E-fx7SUg@mail.gmail.com>
	<CAGV6i+N8z9dmtOU-q-82H3m71o4xveqyKNPH3QxbXAbn21rvcg@mail.gmail.com>
	<CAEEmnrP++RzpUU1QAYcyk-pQwa66j=dd9P6z77tyuixNoF90ag@mail.gmail.com>
	<CAGV6i+N76=EHUhS5F+vA3mfA-cUqa5f96ZZ7djNKi+B2tDHvbQ@mail.gmail.com>
	<CA+i9EaD2ZK__4xwSScJ=tX+r+DX7-2hipBpxSWQzyr0kuFg9cw@mail.gmail.com>
	<CAEEmnrOS8hpTt6uCmadt+-1aA+nXEJerfpuHMLgqoCe7eEe-cA@mail.gmail.com>
	<CAGV6i+NCAKQY2qna4q-iv3bQzpuSMVksDhpSiUt83oM=Rha-cg@mail.gmail.com>
	<CAEEmnrPUOO3dAe9a-v=h31ufVbrbaT5Q27c03VeBhU9iieestQ@mail.gmail.com>
	<3B5A1485-7C38-4085-9CF9-2ED7AA8B48CB@kintel.net>
Message-ID: <CA+i9EaCWqM8G4kXjC8_0hyuT_P=Ee-USykoZ7MN=XhoOqfGh+Q@mail.gmail.com>

I'm sorry but I still do not understand what is a group. What is the
difference between grouping and unioning?

2016-02-04 21:35 GMT-02:00 Marius Kintel <marius at kintel.net>:

> That looks like a bug.
>
>  -Marius
>
> > On Feb 4, 2016, at 18:06 PM, nop head <nop.head at gmail.com> wrote:
> >
> > Now here is a weird one: [?]
> >
> > WARNING: Ignoring unknown variable 'b'.
> > ECHO: 1, undef
> > ECHO: 1
> >
> > I expected group to force { ...} to make an new scope but it does
> something weird instead. However union() does force a new scope:
> >
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/deb7b4ed/attachment.html>

From doug at moens.org  Thu Feb  4 19:38:21 2016
From: doug at moens.org (doug moen)
Date: Thu, 4 Feb 2016 19:38:21 -0500
Subject: [OpenSCAD] next generation 3D printers
In-Reply-To: <56B3C565.2020109@gmail.com>
References: <1454159264651-15977.post@n5.nabble.com>
	<CAGV6i+PBC9q=8LT8NrOBVZExBTSrBvEDmcPqM0GvUgCqUbDfvw@mail.gmail.com>
	<56B3C565.2020109@gmail.com>
Message-ID: <CAGV6i+Pb47q+R5bHhiX1Fok5ua5V2r_uvNmj_ACEuY=8AFdy7w@mail.gmail.com>

You're right, OpenSCAD doesn't have a DB.

On 4 February 2016 at 16:40, Francesco <gurdulu66 at gmail.com> wrote:

> I feel like I opened the Pandora vase.
> Maybe, in a couple of month, I will be able to write without the sensation
> of writing non sense.
> Just few  questions.
> Openscad seems not having an internal representation of his owns, don't
> have a DB, don't write in my home dir (exept for scad e STL files), ...
> kind of translator from drawing orders to mesh (very complicated argument,
> browsing the forum).
> Am I right?
> My limited (and years ago) experience was as Unix C programmer and  most
> of my time was spent writing custum DB (C with system calls for debug).
> That's all and that's  why probably I feel disoriended.
> I have a sensation that having a DB would change most of the discussions I
> had read.
> But maybe I don't know what I am writing about and it make no sense
> talking about a DB.
>
>
>
>
>
>
>
>
>
>
> On 01/30/2016 11:59 AM, doug moen wrote:
>
> Here are some steps to supporting multiple materials and colours in
> OpenSCAD.
>
> Step 0. With most consumer-grade 3D printers, the best you can do is
> create multiple STL files, one for each colour or material. Each STL file
> is imported into the slicer and associated with a different print head.
> This is all that OpenSCAD supports today (ie, OpenSCAD has no knowledge of
> multiple materials & colours in the exported model).
>
> Step 1. The AMF file format supports multi-part models, where each part
> can represent a different colour or material. This is more convenient: your
> multi-colour, multi-material model is represented by a single file, instead
> of a collection of STL files. Cura and Slic3r can read multi-part AMF files
> (and convert them to GCode for controlling your printer). Step 1 is to
> extend OpenSCAD so that it can export multi-part AMF files.
>
> There is a recent forum thread where we discuss adding new syntax to tag
> different parts of the CSG tree as belonging to different components of a
> multi-part model. If we design and implement this feature correctly, then
> you could create a single scad file that specifies a multi-part model, and
> export it as either multiple STL files, or as a single AMF file.
> <http://forum.openscad.org/export-function-td15428.html>
> http://forum.openscad.org/export-function-td15428.html
>
> Step 2. Extend OpenSCAD so that it can *import* multi-part AMF files.
> Generalize the concept of a "shape" so that a shape can have 2 or more
> disjoint regions consisting of different materials or colours, and
> generalize the CSG operators to cope with this.
>
> Last year, we had a forum discussion about this, and bobc prototyped an
> extension to OpenSCAD to support multi-colour models.
>
> http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-td12667i20.html#a12867
>
> Step 3. Full colour 3D printing exists, which allows you to print
> near-photo-realistic colour models, with potentially millions of colours.
> Shapeways supports full colour printing. The "disjoint region" model of
> multiple colours from step 2 isn't really suitable for representing
> continous colour gradations. Texture mapping is one approach, and is good
> enough for Shapeways colour prints, but all it does is apply colour to the
> surface of a model. It doesn't allow you to specify continuous material
> gradations within the interior of a model (something that's possible with a
> 3D Systems polyjet printer). For that, you need a volumetric description of
> the model. OpenSCAD currently describes models using a boundary
> representation. With a functional representation, functions of the form
> f[x,y,z] map each point in 3-space onto different properties of the object,
> including geometry, colour and material. The volumetric approach is the
> only one that fully supports the underlying capabilities of 3D printers. I
> think OpenSCAD needs to eventually support a hybrid of functional and
> boundary representations.
>
> On 30 January 2016 at 08:07, wood <gurdulu66 at gmail.com> wrote:
>
>> Hi.
>> A started Openscade 2 weeks ago. Needed to make renderings.
>> While browsing 3D's for Linux I played with Openscad
>> for a couple of hours with my little doughter.
>> I tought it was amazing (in another life I was a Unix ANSI C programmer)
>> but not what I needed to make renderings.
>> Downloded some 3D for Linux and started with SweetHome3D.
>> Nice rendering but no way to create new 3D objects.  But while stressing
>> myself
>> passing from triyng to fly with supersonic spatial ship (Blender GUI) to
>> dragging and dropping (mouse kills), thinking that I must learn pyton
>> I had a flash and tryed OpenScad angain. Fantastic.
>> Had a kitchen (forniture) 3D model with just "cube" and "translate".
>> Imported in Sweethome and wow (had to use FreeCad [.stl to .obj]!
>> Perfect. I now know that most of the Openscade users use it for 3D
>> printing
>> but I had no idea at the time (At the beginnig I tought that photos
>> of piece of plastic where renderings .. not real objects!).
>> When I found that Openscade is an imperative programming (I read
>> wikipedia about) I just started to use Bash scripts (It would be better
>> in C
>> but I was just making a try).
>> Using Openscade means that you are, more or less, a programmer so what is
>> the point of complainig about missing functionality (math, logic,
>> variable,
>> function) of
>> an imperative programming language (that's was I tought). Just produce
>> the imperative sequence with the right instrument for you.
>> Choose the language that has what you need.
>> It very easy. You do all the numerical and logical things in Bash (C,
>> Python
>> ...)
>> and produce a .scad file ...[I am sure most of You has done this].
>>
>> something like [in Bash]:
>> define -i H
>> let H=1200
>> .... [definition and initialisation of all the variables]
>> echo "// Inserisco Cubo"        > myfile.scad
>> echo "cube([$H,$L,$W]);"    >> myfile.scad
>> echo "cube[$H,$L,$W]"       >> Misure.txt
>> exit 0
>>
>> Of course I had some problems when triyng to realize the renderings
>> that other users had done in my missunderstunding (the photos of real
>> objects!).
>> Did not know nothing of 3D in general so it took me a while to realize
>> that it was not what Openscade was made for (Colors and texture).
>> I am pretty sure that Openscade is perfect for "sane" interior design.
>> I realize artigianal wood forniture (de facto I am the 3D printer, the way
>> the most of You use Openscade) and renderings from architects
>> are a pain (wondeful to see for the client but
>> no idea of how to make it).  The scripts I started with Bash are very poor
>> but
>> produce not only a 3D models (to look at) but also all the mesures of the
>> pieces of the forniture (remember, I am the 3D printer!). Fantastic.
>> But what about matirials, texture, colors (Ok is just rapresentation but,
>> if you dont show you dont sell).
>> First I tought that it was just my problem (Openscade is for 3D printing
>> not
>> for
>> interior design) and I did not want to complain and ask the Openscade team
>> to
>> understand my needs. Then, browsing the forum, I read about next
>> generation
>> 3D
>> printers, that probably will be able to use more matirials and add
>> finitures
>> (know
>> nothing about 3D printing until 2 weeks ago).
>> At the moment I have to read a little more about .obj .3DS ... just to
>> have
>> an idea.
>>
>> But I guess there must be someone else out there
>> (mybe thinking about next generation 3D printers) that is interested in
>> solving
>> the same issue.
>> saluti
>> wood
>>
>>
>>
>> wood
>>
>>
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/next-generation-3D-printers-tp15977.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>
>
> _______________________________________________
> OpenSCAD mailing listDiscuss at lists.openscad.orghttp://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/8b246cf3/attachment.html>

From doug at moens.org  Thu Feb  4 19:48:55 2016
From: doug at moens.org (doug moen)
Date: Thu, 4 Feb 2016 19:48:55 -0500
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <CA+i9EaCWqM8G4kXjC8_0hyuT_P=Ee-USykoZ7MN=XhoOqfGh+Q@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
	<CA+i9EaCXid49U8Y1UbV4A_xecmqh0KbWhscZeVWnLSJVw0wgRw@mail.gmail.com>
	<CAGV6i+O0R6X3-4NmEDuwgUJ-U8f-CMfGecPD0E5F-D-cJxBz9Q@mail.gmail.com>
	<CAEEmnrPA_rzMftMpwjzjAwDKutTbNGYoVHTPGyTYU0E-fx7SUg@mail.gmail.com>
	<CAGV6i+N8z9dmtOU-q-82H3m71o4xveqyKNPH3QxbXAbn21rvcg@mail.gmail.com>
	<CAEEmnrP++RzpUU1QAYcyk-pQwa66j=dd9P6z77tyuixNoF90ag@mail.gmail.com>
	<CAGV6i+N76=EHUhS5F+vA3mfA-cUqa5f96ZZ7djNKi+B2tDHvbQ@mail.gmail.com>
	<CA+i9EaD2ZK__4xwSScJ=tX+r+DX7-2hipBpxSWQzyr0kuFg9cw@mail.gmail.com>
	<CAEEmnrOS8hpTt6uCmadt+-1aA+nXEJerfpuHMLgqoCe7eEe-cA@mail.gmail.com>
	<CAGV6i+NCAKQY2qna4q-iv3bQzpuSMVksDhpSiUt83oM=Rha-cg@mail.gmail.com>
	<CAEEmnrPUOO3dAe9a-v=h31ufVbrbaT5Q27c03VeBhU9iieestQ@mail.gmail.com>
	<3B5A1485-7C38-4085-9CF9-2ED7AA8B48CB@kintel.net>
	<CA+i9EaCWqM8G4kXjC8_0hyuT_P=Ee-USykoZ7MN=XhoOqfGh+Q@mail.gmail.com>
Message-ID: <CAGV6i+PGzNwe9wKZsP8pzcz=8i-mGE60Z=R5Cst8JB+gujfUoQ@mail.gmail.com>

Ronaldo, do you know what a module is? A module is kind of like a function,
except that you can pass zero or more shapes to a module as arguments (the
shape arguments are called "children"), and a module returns zero or more
shapes as results. "union" is one example of a module. For example,
'union(){cube(10);circle(6);}' is a call to the "union" module. This module
call has two shape arguments, a cube and a circle, and returns a single
shape as its result. A group is the data structure used to pass multiple
shapes as arguments to a module, and is the data structure used when
multiple shapes are returned as results. You can explicitly create a group
using the syntax 'group(){...}' but this is of limited usefulness (although
nop head, as an expert user, has found a use for groups).

On 4 February 2016 at 19:32, Ronaldo Persiano <rcmpersiano at gmail.com> wrote:

> I'm sorry but I still do not understand what is a group. What is the
> difference between grouping and unioning?
>
> 2016-02-04 21:35 GMT-02:00 Marius Kintel <marius at kintel.net>:
>
>> That looks like a bug.
>>
>>  -Marius
>>
>> > On Feb 4, 2016, at 18:06 PM, nop head <nop.head at gmail.com> wrote:
>> >
>> > Now here is a weird one: [?]
>> >
>> > WARNING: Ignoring unknown variable 'b'.
>> > ECHO: 1, undef
>> > ECHO: 1
>> >
>> > I expected group to force { ...} to make an new scope but it does
>> something weird instead. However union() does force a new scope:
>> >
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/6413fd90/attachment.html>

From rcmpersiano at gmail.com  Thu Feb  4 20:38:13 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Thu, 4 Feb 2016 23:38:13 -0200
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <CAGV6i+PGzNwe9wKZsP8pzcz=8i-mGE60Z=R5Cst8JB+gujfUoQ@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
	<CA+i9EaCXid49U8Y1UbV4A_xecmqh0KbWhscZeVWnLSJVw0wgRw@mail.gmail.com>
	<CAGV6i+O0R6X3-4NmEDuwgUJ-U8f-CMfGecPD0E5F-D-cJxBz9Q@mail.gmail.com>
	<CAEEmnrPA_rzMftMpwjzjAwDKutTbNGYoVHTPGyTYU0E-fx7SUg@mail.gmail.com>
	<CAGV6i+N8z9dmtOU-q-82H3m71o4xveqyKNPH3QxbXAbn21rvcg@mail.gmail.com>
	<CAEEmnrP++RzpUU1QAYcyk-pQwa66j=dd9P6z77tyuixNoF90ag@mail.gmail.com>
	<CAGV6i+N76=EHUhS5F+vA3mfA-cUqa5f96ZZ7djNKi+B2tDHvbQ@mail.gmail.com>
	<CA+i9EaD2ZK__4xwSScJ=tX+r+DX7-2hipBpxSWQzyr0kuFg9cw@mail.gmail.com>
	<CAEEmnrOS8hpTt6uCmadt+-1aA+nXEJerfpuHMLgqoCe7eEe-cA@mail.gmail.com>
	<CAGV6i+NCAKQY2qna4q-iv3bQzpuSMVksDhpSiUt83oM=Rha-cg@mail.gmail.com>
	<CAEEmnrPUOO3dAe9a-v=h31ufVbrbaT5Q27c03VeBhU9iieestQ@mail.gmail.com>
	<3B5A1485-7C38-4085-9CF9-2ED7AA8B48CB@kintel.net>
	<CA+i9EaCWqM8G4kXjC8_0hyuT_P=Ee-USykoZ7MN=XhoOqfGh+Q@mail.gmail.com>
	<CAGV6i+PGzNwe9wKZsP8pzcz=8i-mGE60Z=R5Cst8JB+gujfUoQ@mail.gmail.com>
Message-ID: <CA+i9EaC0JOz6r=hfVv0JDAV+zcbT13sfKKM_Qkg-B5k00B988w@mail.gmail.com>

Thank you, Doug, for your explanation. I grasped a bit more of modules from
it. I can't see however why did bring groups to the discussion. You has
said that the set operator I would like  to have in OSCAD already exists it
is the group operator. I can't see how.

What I meant by a set is a aggregate of independent bodies. A collection of
meshes. Each component of a set might be a manifold but their union are
possibly not. You could display the set by displaying independently each of
its components without any explicit or implicit union. So the system would
never check if the set is a manifold or if their components are disjoint.

A set would be a way to represent different materials of a body to be
printed. Or to represent the set of parts of a mechanism where they touch
each other. Or a (ghost) ball crossing a wall in an animation. No boolean
operations would be required for that.

I can imagine doing boolean operations with sets (after all, Minkovski
added two sets!) but that would be another story.

2016-02-04 22:48 GMT-02:00 doug moen <doug at moens.org>:

> Ronaldo, do you know what a module is? A module is kind of like a
> function, except that you can pass zero or more shapes to a module as
> arguments (the shape arguments are called "children"), and a module returns
> zero or more shapes as results. "union" is one example of a module. For
> example, 'union(){cube(10);circle(6);}' is a call to the "union" module.
> This module call has two shape arguments, a cube and a circle, and returns
> a single shape as its result. A group is the data structure used to pass
> multiple shapes as arguments to a module, and is the data structure used
> when multiple shapes are returned as results. You can explicitly create a
> group using the syntax 'group(){...}' but this is of limited usefulness
> (although nop head, as an expert user, has found a use for groups).
>
> On 4 February 2016 at 19:32, Ronaldo Persiano <rcmpersiano at gmail.com>
> wrote:
>
>> I'm sorry but I still do not understand what is a group. What is the
>> difference between grouping and unioning?
>>
>> 2016-02-04 21:35 GMT-02:00 Marius Kintel <marius at kintel.net>:
>>
>>> That looks like a bug.
>>>
>>>  -Marius
>>>
>>> > On Feb 4, 2016, at 18:06 PM, nop head <nop.head at gmail.com> wrote:
>>> >
>>> > Now here is a weird one: [?]
>>> >
>>> > WARNING: Ignoring unknown variable 'b'.
>>> > ECHO: 1, undef
>>> > ECHO: 1
>>> >
>>> > I expected group to force { ...} to make an new scope but it does
>>> something weird instead. However union() does force a new scope:
>>> >
>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/6e6ce66b/attachment.html>

From doug at moens.org  Thu Feb  4 21:10:11 2016
From: doug at moens.org (doug moen)
Date: Thu, 4 Feb 2016 21:10:11 -0500
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <CA+i9EaC0JOz6r=hfVv0JDAV+zcbT13sfKKM_Qkg-B5k00B988w@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
	<CA+i9EaCXid49U8Y1UbV4A_xecmqh0KbWhscZeVWnLSJVw0wgRw@mail.gmail.com>
	<CAGV6i+O0R6X3-4NmEDuwgUJ-U8f-CMfGecPD0E5F-D-cJxBz9Q@mail.gmail.com>
	<CAEEmnrPA_rzMftMpwjzjAwDKutTbNGYoVHTPGyTYU0E-fx7SUg@mail.gmail.com>
	<CAGV6i+N8z9dmtOU-q-82H3m71o4xveqyKNPH3QxbXAbn21rvcg@mail.gmail.com>
	<CAEEmnrP++RzpUU1QAYcyk-pQwa66j=dd9P6z77tyuixNoF90ag@mail.gmail.com>
	<CAGV6i+N76=EHUhS5F+vA3mfA-cUqa5f96ZZ7djNKi+B2tDHvbQ@mail.gmail.com>
	<CA+i9EaD2ZK__4xwSScJ=tX+r+DX7-2hipBpxSWQzyr0kuFg9cw@mail.gmail.com>
	<CAEEmnrOS8hpTt6uCmadt+-1aA+nXEJerfpuHMLgqoCe7eEe-cA@mail.gmail.com>
	<CAGV6i+NCAKQY2qna4q-iv3bQzpuSMVksDhpSiUt83oM=Rha-cg@mail.gmail.com>
	<CAEEmnrPUOO3dAe9a-v=h31ufVbrbaT5Q27c03VeBhU9iieestQ@mail.gmail.com>
	<3B5A1485-7C38-4085-9CF9-2ED7AA8B48CB@kintel.net>
	<CA+i9EaCWqM8G4kXjC8_0hyuT_P=Ee-USykoZ7MN=XhoOqfGh+Q@mail.gmail.com>
	<CAGV6i+PGzNwe9wKZsP8pzcz=8i-mGE60Z=R5Cst8JB+gujfUoQ@mail.gmail.com>
	<CA+i9EaC0JOz6r=hfVv0JDAV+zcbT13sfKKM_Qkg-B5k00B988w@mail.gmail.com>
Message-ID: <CAGV6i+O5NYxX0qyjkqsDv-LHCYo2235OJHMi50OXHszU7sB_3A@mail.gmail.com>

Yes, there have been a number of discussions about adding these kinds of
capabilities to OpenSCAD, but the plan is to use groups as the "aggregates
of independent shapes" and to change or extend the language semantics to
make groups more useful.

On 4 February 2016 at 20:38, Ronaldo Persiano <rcmpersiano at gmail.com> wrote:

> Thank you, Doug, for your explanation. I grasped a bit more of modules
> from it. I can't see however why did bring groups to the discussion. You
> has said that the set operator I would like  to have in OSCAD already
> exists it is the group operator. I can't see how.
>
> What I meant by a set is a aggregate of independent bodies. A collection
> of meshes. Each component of a set might be a manifold but their union are
> possibly not. You could display the set by displaying independently each of
> its components without any explicit or implicit union. So the system would
> never check if the set is a manifold or if their components are disjoint.
>
> A set would be a way to represent different materials of a body to be
> printed. Or to represent the set of parts of a mechanism where they touch
> each other. Or a (ghost) ball crossing a wall in an animation. No boolean
> operations would be required for that.
>
> I can imagine doing boolean operations with sets (after all, Minkovski
> added two sets!) but that would be another story.
>
> 2016-02-04 22:48 GMT-02:00 doug moen <doug at moens.org>:
>
>> Ronaldo, do you know what a module is? A module is kind of like a
>> function, except that you can pass zero or more shapes to a module as
>> arguments (the shape arguments are called "children"), and a module returns
>> zero or more shapes as results. "union" is one example of a module. For
>> example, 'union(){cube(10);circle(6);}' is a call to the "union" module.
>> This module call has two shape arguments, a cube and a circle, and returns
>> a single shape as its result. A group is the data structure used to pass
>> multiple shapes as arguments to a module, and is the data structure used
>> when multiple shapes are returned as results. You can explicitly create a
>> group using the syntax 'group(){...}' but this is of limited usefulness
>> (although nop head, as an expert user, has found a use for groups).
>>
>> On 4 February 2016 at 19:32, Ronaldo Persiano <rcmpersiano at gmail.com>
>> wrote:
>>
>>> I'm sorry but I still do not understand what is a group. What is the
>>> difference between grouping and unioning?
>>>
>>> 2016-02-04 21:35 GMT-02:00 Marius Kintel <marius at kintel.net>:
>>>
>>>> That looks like a bug.
>>>>
>>>>  -Marius
>>>>
>>>> > On Feb 4, 2016, at 18:06 PM, nop head <nop.head at gmail.com> wrote:
>>>> >
>>>> > Now here is a weird one: [?]
>>>> >
>>>> > WARNING: Ignoring unknown variable 'b'.
>>>> > ECHO: 1, undef
>>>> > ECHO: 1
>>>> >
>>>> > I expected group to force { ...} to make an new scope but it does
>>>> something weird instead. However union() does force a new scope:
>>>> >
>>>>
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160204/12627789/attachment.html>

From arnholm at arnholm.org  Fri Feb  5 05:24:03 2016
From: arnholm at arnholm.org (arnholm at arnholm.org)
Date: Fri, 05 Feb 2016 11:24:03 +0100
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <CA+i9EaC0JOz6r=hfVv0JDAV+zcbT13sfKKM_Qkg-B5k00B988w@mail.gmail.com>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org> <1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
	<CA+i9EaCXid49U8Y1UbV4A_xecmqh0KbWhscZeVWnLSJVw0wgRw@mail.gmail.com>
	<CAGV6i+O0R6X3-4NmEDuwgUJ-U8f-CMfGecPD0E5F-D-cJxBz9Q@mail.gmail.com>
	<CAEEmnrPA_rzMftMpwjzjAwDKutTbNGYoVHTPGyTYU0E-fx7SUg@mail.gmail.com>
	<CAGV6i+N8z9dmtOU-q-82H3m71o4xveqyKNPH3QxbXAbn21rvcg@mail.gmail.com>
	<CAEEmnrP++RzpUU1QAYcyk-pQwa66j=dd9P6z77tyuixNoF90ag@mail.gmail.com>
	<CAGV6i+N76=EHUhS5F+vA3mfA-cUqa5f96ZZ7djNKi+B2tDHvbQ@mail.gmail.com>
	<CA+i9EaD2ZK__4xwSScJ=tX+r+DX7-2hipBpxSWQzyr0kuFg9cw@mail.gmail.com>
	<CAEEmnrOS8hpTt6uCmadt+-1aA+nXEJerfpuHMLgqoCe7eEe-cA@mail.gmail.com>
	<CAGV6i+NCAKQY2qna4q-iv3bQzpuSMVksDhpSiUt83oM=Rha-cg@mail.gmail.com>
	<CAEEmnrPUOO3dAe9a-v=h31ufVbrbaT5Q27c03VeBhU9iieestQ@mail.gmail.com>
	<3B5A1485-7C38-4085-9CF9-2ED7AA8B48CB@kintel.net>
	<CA+i9EaCWqM8G4kXjC8_0hyuT_P=Ee-USykoZ7MN=XhoOqfGh+Q@mail.gmail.com>
	<CAGV6i+PGzNwe9wKZsP8pzcz=8i-mGE60Z=R5Cst8JB+gujfUoQ@mail.gmail.com>
	<CA+i9EaC0JOz6r=hfVv0JDAV+zcbT13sfKKM_Qkg-B5k00B988w@mail.gmail.com>
Message-ID: <4194a7ff9498ef828822f955d7110657@arnholm.org>

On 2016-02-05 02:38, Ronaldo Persiano wrote:
> What I meant by a set is a aggregate of independent bodies. A
> collection of meshes. Each component of a set might be a manifold but
> their union are possibly not. You could display the set by displaying
> independently each of its components without any explicit or implicit
> union. So the system would never check if the set is a manifold or if
> their components are disjoint.

I have seen similar needs as well. In AngelScript CSG you can create 
aggregates of independent bodies:

    double r=10,s=15,h=20;
    solid@[] solids = { sphere(r), cube(s), cylinder(h,r/2) };

"solids" is here the variable name of a collection of disjoint solids, 
in this case a sphere, a cube and a cylinder. The "[]" syntax indicates 
an array serving the same purpose as your set, and the "solid@" syntax 
indicates a reference to a solid. So "solid@[]" is an array of 
references to (disjoint) solids.

Obviously you can use it later to do

    solid@ model = union3d(solids);

i.e. an explicit union of the solids from the array into a single solid. 
Whether or not to retain non-manifold edges/faces in such a union would 
typically need an additional parameter.

OpenSCAD could probably benefit from similar features.

Carsten Arnholm
http://arnholm.org/





From rcmpersiano at gmail.com  Fri Feb  5 08:22:21 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Fri, 5 Feb 2016 11:22:21 -0200
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <4194a7ff9498ef828822f955d7110657@arnholm.org>
References: <1454280049987-16004.post@n5.nabble.com>
	<5fd84bafa4c8be993fd0928369d6adb9@arnholm.org>
	<CAEEmnrP4826x2FxDB=sZ0E=RDLKVU1EfAFt6-zqu-_Vp5J9GNQ@mail.gmail.com>
	<56AFB6D4.3040002@arnholm.org>
	<CAGV6i+Nx_AUaRg1=nM2V8CQxa8WBORLfaeCQVQbS3+GgiBVTSA@mail.gmail.com>
	<56AFBF21.5060301@arnholm.org>
	<CAEEmnrMsMehpCTfd2RyDB_vHHZ==O3sSoagfJ-ezNB7=tKdReg@mail.gmail.com>
	<56B0FCE4.8030506@arnholm.org>
	<CAEEmnrNtp=DKQ9+c3FyDUTwusfJNiDrrq0zwEp3XTw-sA3rw5w@mail.gmail.com>
	<56B11B2C.6040700@arnholm.org>
	<1454512051472-16026.post@n5.nabble.com>
	<56B23C7A.8030605@arnholm.org>
	<CAEEmnrM+xNb-2aKVm+U99SQTNvp3QOL_9gLh5E5eC2iXLA_B5g@mail.gmail.com>
	<CACL3eKDrw7qj+CgMJZYj3zfn5tWt3xxe9PAXWh9p2jwUSJJFFg@mail.gmail.com>
	<17b87a72fead01c6d8c4741afa8ae515@arnholm.org>
	<CAGV6i+Nx5umZ_Am=Ek5YWCVx098TkjVST4TjbmEh9HxFw=uxag@mail.gmail.com>
	<CA+i9EaCXid49U8Y1UbV4A_xecmqh0KbWhscZeVWnLSJVw0wgRw@mail.gmail.com>
	<CAGV6i+O0R6X3-4NmEDuwgUJ-U8f-CMfGecPD0E5F-D-cJxBz9Q@mail.gmail.com>
	<CAEEmnrPA_rzMftMpwjzjAwDKutTbNGYoVHTPGyTYU0E-fx7SUg@mail.gmail.com>
	<CAGV6i+N8z9dmtOU-q-82H3m71o4xveqyKNPH3QxbXAbn21rvcg@mail.gmail.com>
	<CAEEmnrP++RzpUU1QAYcyk-pQwa66j=dd9P6z77tyuixNoF90ag@mail.gmail.com>
	<CAGV6i+N76=EHUhS5F+vA3mfA-cUqa5f96ZZ7djNKi+B2tDHvbQ@mail.gmail.com>
	<CA+i9EaD2ZK__4xwSScJ=tX+r+DX7-2hipBpxSWQzyr0kuFg9cw@mail.gmail.com>
	<CAEEmnrOS8hpTt6uCmadt+-1aA+nXEJerfpuHMLgqoCe7eEe-cA@mail.gmail.com>
	<CAGV6i+NCAKQY2qna4q-iv3bQzpuSMVksDhpSiUt83oM=Rha-cg@mail.gmail.com>
	<CAEEmnrPUOO3dAe9a-v=h31ufVbrbaT5Q27c03VeBhU9iieestQ@mail.gmail.com>
	<3B5A1485-7C38-4085-9CF9-2ED7AA8B48CB@kintel.net>
	<CA+i9EaCWqM8G4kXjC8_0hyuT_P=Ee-USykoZ7MN=XhoOqfGh+Q@mail.gmail.com>
	<CAGV6i+PGzNwe9wKZsP8pzcz=8i-mGE60Z=R5Cst8JB+gujfUoQ@mail.gmail.com>
	<CA+i9EaC0JOz6r=hfVv0JDAV+zcbT13sfKKM_Qkg-B5k00B988w@mail.gmail.com>
	<4194a7ff9498ef828822f955d7110657@arnholm.org>
Message-ID: <CA+i9EaAaBHPWcJktv4sVB4Vhw+J=-SaaUAkoKbGDt0XvaEXkHg@mail.gmail.com>

Thank you for the reference, Carsten. I will take a look on it.

2016-02-05 8:24 GMT-02:00 <arnholm at arnholm.org>:

> On 2016-02-05 02:38, Ronaldo Persiano wrote:
>
>> What I meant by a set is a aggregate of independent bodies. A
>> collection of meshes. Each component of a set might be a manifold but
>> their union are possibly not. You could display the set by displaying
>> independently each of its components without any explicit or implicit
>> union. So the system would never check if the set is a manifold or if
>> their components are disjoint.
>>
>
> I have seen similar needs as well. In AngelScript CSG you can create
> aggregates of independent bodies:
>
>    double r=10,s=15,h=20;
>    solid@[] solids = { sphere(r), cube(s), cylinder(h,r/2) };
>
> "solids" is here the variable name of a collection of disjoint solids, in
> this case a sphere, a cube and a cylinder. The "[]" syntax indicates an
> array serving the same purpose as your set, and the "solid@" syntax
> indicates a reference to a solid. So "solid@[]" is an array of references
> to (disjoint) solids.
>
> Obviously you can use it later to do
>
>    solid@ model = union3d(solids);
>
> i.e. an explicit union of the solids from the array into a single solid.
> Whether or not to retain non-manifold edges/faces in such a union would
> typically need an additional parameter.
>
> OpenSCAD could probably benefit from similar features.
>
> Carsten Arnholm
> http://arnholm.org/
>
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160205/6ad06dad/attachment.html>

From gurdulu66 at gmail.com  Fri Feb  5 14:24:05 2016
From: gurdulu66 at gmail.com (Francesco)
Date: Fri, 5 Feb 2016 13:24:05 -0600
Subject: [OpenSCAD] next generation 3D printers
In-Reply-To: <CAGV6i+Pb47q+R5bHhiX1Fok5ua5V2r_uvNmj_ACEuY=8AFdy7w@mail.gmail.com>
References: <1454159264651-15977.post@n5.nabble.com>
	<CAGV6i+PBC9q=8LT8NrOBVZExBTSrBvEDmcPqM0GvUgCqUbDfvw@mail.gmail.com>
	<56B3C565.2020109@gmail.com>
	<CAGV6i+Pb47q+R5bHhiX1Fok5ua5V2r_uvNmj_ACEuY=8AFdy7w@mail.gmail.com>
Message-ID: <56B4F6D5.9040805@gmail.com>

Please, why?

Am I correct saying that polyhedon IS the Primitive Solid, meaning that 
it can represent all the others. Like "a shera is a polyhedon, is just 
that Openscad in place of asking you to describe it by points and facets 
give you a geometrical description (and $fa,$fs,$fn)as a simpler way for 
input data". So Primitivs in Openscade are Face-Vertex mesh (with a rule 
for orientation).





On 02/04/2016 06:38 PM, doug moen wrote:
> You're right, OpenSCAD doesn't have a DB.
>
> On 4 February 2016 at 16:40, Francesco <gurdulu66 at gmail.com 
> <mailto:gurdulu66 at gmail.com>> wrote:
>
>     I feel like I opened the Pandora vase.
>     Maybe, in a couple of month, I will be able to write without the
>     sensation of writing non sense.
>     Just few  questions.
>     Openscad seems not having an internal representation of his owns,
>     don't have a DB, don't write in my home dir (exept for scad e STL
>     files), ... kind of translator from drawing orders to mesh (very
>     complicated argument, browsing the forum).
>     Am I right?
>     My limited (and years ago) experience was as Unix C programmer
>     and  most of my time was spent writing custum DB (C with system
>     calls for debug). That's all and that's why probably I feel
>     disoriended.
>     I have a sensation that having a DB would change most of the
>     discussions I had read.
>     But maybe I don't know what I am writing about and it make no
>     sense talking about a DB.
>
>
>
>
>
>
>
>
>
>
>     On 01/30/2016 11:59 AM, doug moen wrote:
>>     Here are some steps to supporting multiple materials and colours
>>     in OpenSCAD.
>>
>>     Step 0. With most consumer-grade 3D printers, the best you can do
>>     is create multiple STL files, one for each colour or material.
>>     Each STL file is imported into the slicer and associated with a
>>     different print head. This is all that OpenSCAD supports today
>>     (ie, OpenSCAD has no knowledge of multiple materials & colours in
>>     the exported model).
>>
>>     Step 1. The AMF file format supports multi-part models, where
>>     each part can represent a different colour or material. This is
>>     more convenient: your multi-colour, multi-material model is
>>     represented by a single file, instead of a collection of STL
>>     files. Cura and Slic3r can read multi-part AMF files (and convert
>>     them to GCode for controlling your printer). Step 1 is to extend
>>     OpenSCAD so that it can export multi-part AMF files.
>>
>>     There is a recent forum thread where we discuss adding new syntax
>>     to tag different parts of the CSG tree as belonging to different
>>     components of a multi-part model. If we design and implement this
>>     feature correctly, then you could create a single scad file that
>>     specifies a multi-part model, and export it as either multiple
>>     STL files, or as a single AMF file.
>>     http://forum.openscad.org/export-function-td15428.html
>>
>>     Step 2. Extend OpenSCAD so that it can *import* multi-part AMF
>>     files. Generalize the concept of a "shape" so that a shape can
>>     have 2 or more disjoint regions consisting of different materials
>>     or colours, and generalize the CSG operators to cope with this.
>>
>>     Last year, we had a forum discussion about this, and bobc
>>     prototyped an extension to OpenSCAD to support multi-colour models.
>>     http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-td12667i20.html#a12867
>>
>>     Step 3. Full colour 3D printing exists, which allows you to print
>>     near-photo-realistic colour models, with potentially millions of
>>     colours. Shapeways supports full colour printing. The "disjoint
>>     region" model of multiple colours from step 2 isn't really
>>     suitable for representing continous colour gradations. Texture
>>     mapping is one approach, and is good enough for Shapeways colour
>>     prints, but all it does is apply colour to the surface of a
>>     model. It doesn't allow you to specify continuous material
>>     gradations within the interior of a model (something that's
>>     possible with a 3D Systems polyjet printer). For that, you need a
>>     volumetric description of the model. OpenSCAD currently describes
>>     models using a boundary representation. With a functional
>>     representation, functions of the form f[x,y,z] map each point in
>>     3-space onto different properties of the object, including
>>     geometry, colour and material. The volumetric approach is the
>>     only one that fully supports the underlying capabilities of 3D
>>     printers. I think OpenSCAD needs to eventually support a hybrid
>>     of functional and boundary representations.
>>
>>     On 30 January 2016 at 08:07, wood <gurdulu66 at gmail.com
>>     <mailto:gurdulu66 at gmail.com>> wrote:
>>
>>         Hi.
>>         A started Openscade 2 weeks ago. Needed to make renderings.
>>         While browsing 3D's for Linux I played with Openscad
>>         for a couple of hours with my little doughter.
>>         I tought it was amazing (in another life I was a Unix ANSI C
>>         programmer)
>>         but not what I needed to make renderings.
>>         Downloded some 3D for Linux and started with SweetHome3D.
>>         Nice rendering but no way to create new 3D objects.  But
>>         while stressing
>>         myself
>>         passing from triyng to fly with supersonic spatial ship
>>         (Blender GUI) to
>>         dragging and dropping (mouse kills), thinking that I must
>>         learn pyton
>>         I had a flash and tryed OpenScad angain. Fantastic.
>>         Had a kitchen (forniture) 3D model with just "cube" and
>>         "translate".
>>         Imported in Sweethome and wow (had to use FreeCad [.stl to .obj]!
>>         Perfect. I now know that most of the Openscade users use it
>>         for 3D printing
>>         but I had no idea at the time (At the beginnig I tought that
>>         photos
>>         of piece of plastic where renderings .. not real objects!).
>>         When I found that Openscade is an imperative programming (I read
>>         wikipedia about) I just started to use Bash scripts (It would
>>         be better in C
>>         but I was just making a try).
>>         Using Openscade means that you are, more or less, a
>>         programmer so what is
>>         the point of complainig about missing functionality (math,
>>         logic, variable,
>>         function) of
>>         an imperative programming language (that's was I tought).
>>         Just produce
>>         the imperative sequence with the right instrument for you.
>>         Choose the language that has what you need.
>>         It very easy. You do all the numerical and logical things in
>>         Bash (C, Python
>>         ...)
>>         and produce a .scad file ...[I am sure most of You has done
>>         this].
>>
>>         something like [in Bash]:
>>         define -i H
>>         let H=1200
>>         .... [definition and initialisation of all the variables]
>>         echo "// Inserisco Cubo"        > myfile.scad
>>         echo "cube([$H,$L,$W]);"    >> myfile.scad
>>         echo "cube[$H,$L,$W]"       >> Misure.txt
>>         exit 0
>>
>>         Of course I had some problems when triyng to realize the
>>         renderings
>>         that other users had done in my missunderstunding (the photos
>>         of real
>>         objects!).
>>         Did not know nothing of 3D in general so it took me a while
>>         to realize
>>         that it was not what Openscade was made for (Colors and texture).
>>         I am pretty sure that Openscade is perfect for "sane"
>>         interior design.
>>         I realize artigianal wood forniture (de facto I am the 3D
>>         printer, the way
>>         the most of You use Openscade) and renderings from architects
>>         are a pain (wondeful to see for the client but
>>         no idea of how to make it).  The scripts I started with Bash
>>         are very poor
>>         but
>>         produce not only a 3D models (to look at) but also all the
>>         mesures of the
>>         pieces of the forniture (remember, I am the 3D printer!).
>>         Fantastic.
>>         But what about matirials, texture, colors (Ok is just
>>         rapresentation but,
>>         if you dont show you dont sell).
>>         First I tought that it was just my problem (Openscade is for
>>         3D printing not
>>         for
>>         interior design) and I did not want to complain and ask the
>>         Openscade team
>>         to
>>         understand my needs. Then, browsing the forum, I read about
>>         next generation
>>         3D
>>         printers, that probably will be able to use more matirials
>>         and add finitures
>>         (know
>>         nothing about 3D printing until 2 weeks ago).
>>         At the moment I have to read a little more about .obj .3DS
>>         ... just to have
>>         an idea.
>>
>>         But I guess there must be someone else out there
>>         (mybe thinking about next generation 3D printers) that is
>>         interested in
>>         solving
>>         the same issue.
>>         saluti
>>         wood
>>
>>
>>
>>         wood
>>
>>
>>
>>
>>
>>         --
>>         View this message in context:
>>         http://forum.openscad.org/next-generation-3D-printers-tp15977.html
>>         Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>>         _______________________________________________
>>         OpenSCAD mailing list
>>         Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
>>         http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>>
>>
>>     _______________________________________________
>>     OpenSCAD mailing list
>>     Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
>>     http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>     _______________________________________________
>     OpenSCAD mailing list
>     Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
>     http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160205/3180f9f9/attachment.html>

From doug at moens.org  Fri Feb  5 14:43:36 2016
From: doug at moens.org (doug moen)
Date: Fri, 5 Feb 2016 14:43:36 -0500
Subject: [OpenSCAD] next generation 3D printers
In-Reply-To: <56B4F6D5.9040805@gmail.com>
References: <1454159264651-15977.post@n5.nabble.com>
	<CAGV6i+PBC9q=8LT8NrOBVZExBTSrBvEDmcPqM0GvUgCqUbDfvw@mail.gmail.com>
	<56B3C565.2020109@gmail.com>
	<CAGV6i+Pb47q+R5bHhiX1Fok5ua5V2r_uvNmj_ACEuY=8AFdy7w@mail.gmail.com>
	<56B4F6D5.9040805@gmail.com>
Message-ID: <CAGV6i+ODB-WDd9SvvKpbW+xLE8-3zmaA3OMYyzzJHXQ9GJn2tA@mail.gmail.com>

The OpenSCAD program takes a description of a 3D shape, written in the
OpenSCAD language (a text file) and converts that into an STL file, which
can then be used for 3D printing. This can be done without using a database.

You are correct, all 3D shapes are represented internally as polyhedra.

On 5 February 2016 at 14:24, Francesco <gurdulu66 at gmail.com> wrote:

> Please, why?
>
> Am I correct saying that polyhedon IS the Primitive Solid, meaning that it
> can represent all the others. Like "a shera is a polyhedon, is just that
> Openscad in place of asking you to describe it by points and facets give
> you a geometrical description (and $fa,$fs,$fn)as a simpler way for input
> data". So Primitivs in Openscade are Face-Vertex mesh (with a rule for
> orientation).
>
>
>
>
>
> On 02/04/2016 06:38 PM, doug moen wrote:
>
> You're right, OpenSCAD doesn't have a DB.
>
> On 4 February 2016 at 16:40, Francesco <gurdulu66 at gmail.com> wrote:
>
>> I feel like I opened the Pandora vase.
>> Maybe, in a couple of month, I will be able to write without the
>> sensation of writing non sense.
>> Just few  questions.
>> Openscad seems not having an internal representation of his owns, don't
>> have a DB, don't write in my home dir (exept for scad e STL files), ...
>> kind of translator from drawing orders to mesh (very complicated argument,
>> browsing the forum).
>> Am I right?
>> My limited (and years ago) experience was as Unix C programmer and  most
>> of my time was spent writing custum DB (C with system calls for debug).
>> That's all and that's  why probably I feel disoriended.
>> I have a sensation that having a DB would change most of the discussions
>> I had read.
>> But maybe I don't know what I am writing about and it make no sense
>> talking about a DB.
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>> On 01/30/2016 11:59 AM, doug moen wrote:
>>
>> Here are some steps to supporting multiple materials and colours in
>> OpenSCAD.
>>
>> Step 0. With most consumer-grade 3D printers, the best you can do is
>> create multiple STL files, one for each colour or material. Each STL file
>> is imported into the slicer and associated with a different print head.
>> This is all that OpenSCAD supports today (ie, OpenSCAD has no knowledge of
>> multiple materials & colours in the exported model).
>>
>> Step 1. The AMF file format supports multi-part models, where each part
>> can represent a different colour or material. This is more convenient: your
>> multi-colour, multi-material model is represented by a single file, instead
>> of a collection of STL files. Cura and Slic3r can read multi-part AMF files
>> (and convert them to GCode for controlling your printer). Step 1 is to
>> extend OpenSCAD so that it can export multi-part AMF files.
>>
>> There is a recent forum thread where we discuss adding new syntax to tag
>> different parts of the CSG tree as belonging to different components of a
>> multi-part model. If we design and implement this feature correctly, then
>> you could create a single scad file that specifies a multi-part model, and
>> export it as either multiple STL files, or as a single AMF file.
>> <http://forum.openscad.org/export-function-td15428.html>
>> http://forum.openscad.org/export-function-td15428.html
>>
>> Step 2. Extend OpenSCAD so that it can *import* multi-part AMF files.
>> Generalize the concept of a "shape" so that a shape can have 2 or more
>> disjoint regions consisting of different materials or colours, and
>> generalize the CSG operators to cope with this.
>>
>> Last year, we had a forum discussion about this, and bobc prototyped an
>> extension to OpenSCAD to support multi-colour models.
>>
>> http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-td12667i20.html#a12867
>>
>> Step 3. Full colour 3D printing exists, which allows you to print
>> near-photo-realistic colour models, with potentially millions of colours.
>> Shapeways supports full colour printing. The "disjoint region" model of
>> multiple colours from step 2 isn't really suitable for representing
>> continous colour gradations. Texture mapping is one approach, and is good
>> enough for Shapeways colour prints, but all it does is apply colour to the
>> surface of a model. It doesn't allow you to specify continuous material
>> gradations within the interior of a model (something that's possible with a
>> 3D Systems polyjet printer). For that, you need a volumetric description of
>> the model. OpenSCAD currently describes models using a boundary
>> representation. With a functional representation, functions of the form
>> f[x,y,z] map each point in 3-space onto different properties of the object,
>> including geometry, colour and material. The volumetric approach is the
>> only one that fully supports the underlying capabilities of 3D printers. I
>> think OpenSCAD needs to eventually support a hybrid of functional and
>> boundary representations.
>>
>> On 30 January 2016 at 08:07, wood < <gurdulu66 at gmail.com>
>> gurdulu66 at gmail.com> wrote:
>>
>>> Hi.
>>> A started Openscade 2 weeks ago. Needed to make renderings.
>>> While browsing 3D's for Linux I played with Openscad
>>> for a couple of hours with my little doughter.
>>> I tought it was amazing (in another life I was a Unix ANSI C programmer)
>>> but not what I needed to make renderings.
>>> Downloded some 3D for Linux and started with SweetHome3D.
>>> Nice rendering but no way to create new 3D objects.  But while stressing
>>> myself
>>> passing from triyng to fly with supersonic spatial ship (Blender GUI) to
>>> dragging and dropping (mouse kills), thinking that I must learn pyton
>>> I had a flash and tryed OpenScad angain. Fantastic.
>>> Had a kitchen (forniture) 3D model with just "cube" and "translate".
>>> Imported in Sweethome and wow (had to use FreeCad [.stl to .obj]!
>>> Perfect. I now know that most of the Openscade users use it for 3D
>>> printing
>>> but I had no idea at the time (At the beginnig I tought that photos
>>> of piece of plastic where renderings .. not real objects!).
>>> When I found that Openscade is an imperative programming (I read
>>> wikipedia about) I just started to use Bash scripts (It would be better
>>> in C
>>> but I was just making a try).
>>> Using Openscade means that you are, more or less, a programmer so what is
>>> the point of complainig about missing functionality (math, logic,
>>> variable,
>>> function) of
>>> an imperative programming language (that's was I tought). Just produce
>>> the imperative sequence with the right instrument for you.
>>> Choose the language that has what you need.
>>> It very easy. You do all the numerical and logical things in Bash (C,
>>> Python
>>> ...)
>>> and produce a .scad file ...[I am sure most of You has done this].
>>>
>>> something like [in Bash]:
>>> define -i H
>>> let H=1200
>>> .... [definition and initialisation of all the variables]
>>> echo "// Inserisco Cubo"        > myfile.scad
>>> echo "cube([$H,$L,$W]);"    >> myfile.scad
>>> echo "cube[$H,$L,$W]"       >> Misure.txt
>>> exit 0
>>>
>>> Of course I had some problems when triyng to realize the renderings
>>> that other users had done in my missunderstunding (the photos of real
>>> objects!).
>>> Did not know nothing of 3D in general so it took me a while to realize
>>> that it was not what Openscade was made for (Colors and texture).
>>> I am pretty sure that Openscade is perfect for "sane" interior design.
>>> I realize artigianal wood forniture (de facto I am the 3D printer, the
>>> way
>>> the most of You use Openscade) and renderings from architects
>>> are a pain (wondeful to see for the client but
>>> no idea of how to make it).  The scripts I started with Bash are very
>>> poor
>>> but
>>> produce not only a 3D models (to look at) but also all the mesures of the
>>> pieces of the forniture (remember, I am the 3D printer!). Fantastic.
>>> But what about matirials, texture, colors (Ok is just rapresentation but,
>>> if you dont show you dont sell).
>>> First I tought that it was just my problem (Openscade is for 3D printing
>>> not
>>> for
>>> interior design) and I did not want to complain and ask the Openscade
>>> team
>>> to
>>> understand my needs. Then, browsing the forum, I read about next
>>> generation
>>> 3D
>>> printers, that probably will be able to use more matirials and add
>>> finitures
>>> (know
>>> nothing about 3D printing until 2 weeks ago).
>>> At the moment I have to read a little more about .obj .3DS ... just to
>>> have
>>> an idea.
>>>
>>> But I guess there must be someone else out there
>>> (mybe thinking about next generation 3D printers) that is interested in
>>> solving
>>> the same issue.
>>> saluti
>>> wood
>>>
>>>
>>>
>>> wood
>>>
>>>
>>>
>>>
>>>
>>> --
>>> View this message in context:
>>> <http://forum.openscad.org/next-generation-3D-printers-tp15977.html>
>>> http://forum.openscad.org/next-generation-3D-printers-tp15977.html
>>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>>
>>
>>
>> _______________________________________________
>> OpenSCAD mailing listDiscuss at lists.openscad.orghttp://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
>
> _______________________________________________
> OpenSCAD mailing listDiscuss at lists.openscad.orghttp://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160205/ee1243b9/attachment.html>

From rcmpersiano at gmail.com  Fri Feb  5 15:37:07 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Fri, 5 Feb 2016 13:37:07 -0700 (MST)
Subject: [OpenSCAD] List comprehension filters
Message-ID: <1454704627564-16069.post@n5.nabble.com>

I am learning how to use list comprehension in OpenScad. The Oskar demos in
github has been an invaluable source to my studies. But there is some cases
I feel myself constrained. One of that cases is the absence of an else in
the filter if. I imagine that this has been discussed before but I were not
able to find it.

At a first glance, it seems that the conditional expression could be used
instead but the conditional expression is not a filter, it always produces a
value. I already faced cases were an if-else would give a cleaner and more
readable code. Here is an example. Suppose I want to express the following
filter in the context of list comprehension:

if ( A ) 
  if( B ) 
    x 
  else 
    if (C) y 
else
  z

It is possible to express that with only the standard resources of list
comprehension. But with very cryptic code:

  if ( B || C )
    !A? z :
      B? x : 
          y

It is not easy to understand the last code and it is not easy to arrive to
it. I had to make a table of A, B and C possible values and the outcome to
arrive there. 

Besides, if I change the first code eliminating the 'else z' part, the
standard code will change to:

if ( A ) 
  if(B || C) 
    (B)? x: y

which is far from an obvious change.

The question is: there is a strong reason for the absence of an else clause
of the filter 'if' ?

I am sorry if this had been answered before. A reference would be welcome.




--
View this message in context: http://forum.openscad.org/List-comprehension-filters-tp16069.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Fri Feb  5 15:47:12 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Fri, 5 Feb 2016 21:47:12 +0100
Subject: [OpenSCAD] List comprehension filters
In-Reply-To: <1454704627564-16069.post@n5.nabble.com>
References: <1454704627564-16069.post@n5.nabble.com>
Message-ID: <56B50A50.1030104@gmx.de>

On 02/05/2016 09:37 PM, Ronaldo wrote:
> The question is: there is a strong reason for the absence of an else clause
> of the filter 'if' ?
> 
It's available as experimental feature in the development snapshots.
(Which means it needs to be enabled in the preferences and there might
be changes to the currently implemented syntax/behavior)

Note that precedence can be specified using ( ), e.g.

echo([ for (a = [0 : 3]) if (a < 2) ( if (a < 1) ["+", a] ) else ["-", a] ]);

ciao,
  Torsten.



From thomas at bornhaupt.de  Fri Feb  5 16:25:35 2016
From: thomas at bornhaupt.de (KoenigDickBauch)
Date: Fri, 5 Feb 2016 14:25:35 -0700 (MST)
Subject: [OpenSCAD] Image Size by Animate
In-Reply-To: <56AFB2C7.9040107@gmx.de>
References: <1453707153859-15884.post@n5.nabble.com>
	<CAEEmnrN=+vXWsKsoUNg+Mvrn3DYEu+PGSfqvKQTYtBTz21N0Ug@mail.gmail.com>
	<trinity-3bc93de3-cb71-4404-9ce6-f9a750210aaa-1453725036703@3capp-gmx-bs43>
	<CAEEmnrNfKKN=N-zGXtAP-2-677r4yz4tiaW=VKFwQak_bCZ6TQ@mail.gmail.com>
	<trinity-98501d10-52a7-467a-9333-d732b378f264-1453727691749@3capp-gmx-bs43>
	<56AFA911.90605@gmx.de>
	<CAEEmnrO2g_4afvgsPX5qnxoCaOqkaPkQF07pJymPP0tS0ZwPFA@mail.gmail.com>
	<56AFB2C7.9040107@gmx.de>
Message-ID: <1454707535953-16071.post@n5.nabble.com>

Hi,

I found a tool with the name Au3Info.exe.
https://www.autoitscript.com/autoit3/docs/intro/au3spy.htm

This is inside this download
https://www.autoitscript.com/site/autoit/downloads/

it is a workaround to size the window.

regards
Thomas





--
View this message in context: http://forum.openscad.org/Image-Size-by-Animate-tp15884p16071.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Fri Feb  5 20:29:41 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 5 Feb 2016 18:29:41 -0700 (MST)
Subject: [OpenSCAD] OpenSCAD and Woodworking
In-Reply-To: <1454715595585-16072.post@n5.nabble.com>
References: <1443022794001-13966.post@n5.nabble.com>
	<1454715595585-16072.post@n5.nabble.com>
Message-ID: <1454722181603-16073.post@n5.nabble.com>

jnutt wrote
> Thanks for sharing.  I'm just starting with OpenScad and pretty new to
> coding also.  I will be mostly using it for woodworking to create
> parametric models.  Have you run across any helpful info on using for
> woodworking?

Hi Jnutt,
Welcome to the forum. Your post is still flagged as "This post has NOT been
accepted by the mailing list yet", so nobody gets it unless they look. 
You need to subscribe to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.




-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/OpenSCAD-and-Woodworking-tp13966p16073.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Sat Feb  6 07:44:23 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Sat, 6 Feb 2016 10:44:23 -0200
Subject: [OpenSCAD] List comprehension filters
In-Reply-To: <56B50A50.1030104@gmx.de>
References: <1454704627564-16069.post@n5.nabble.com> <56B50A50.1030104@gmx.de>
Message-ID: <CA+i9EaB0K8zQLeVkMz0S5iyoukiHG7jHvH6KW8_+bv69vza90g@mail.gmail.com>

Thank you, Torsten, for your kind information. It was nice to see that the
constraint is being removed.

However, I was not able to run OpenSCAD-2016.02.01-x86-64-Installer.exe. It
appears 3 times in the process list but nothing happens. And I have no
success trying to kill those process except rebooting.

Ronaldo

2016-02-05 18:47 GMT-02:00 Torsten Paul <Torsten.Paul at gmx.de>:

> On 02/05/2016 09:37 PM, Ronaldo wrote:
> > The question is: there is a strong reason for the absence of an else
> clause
> > of the filter 'if' ?
> >
> It's available as experimental feature in the development snapshots.
> (Which means it needs to be enabled in the preferences and there might
> be changes to the currently implemented syntax/behavior)
>
> Note that precedence can be specified using ( ), e.g.
>
> echo([ for (a = [0 : 3]) if (a < 2) ( if (a < 1) ["+", a] ) else ["-", a]
> ]);
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160206/a9f95785/attachment.html>

From Torsten.Paul at gmx.de  Sat Feb  6 10:07:37 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sat, 6 Feb 2016 16:07:37 +0100
Subject: [OpenSCAD] List comprehension filters
In-Reply-To: <CA+i9EaB0K8zQLeVkMz0S5iyoukiHG7jHvH6KW8_+bv69vza90g@mail.gmail.com>
References: <1454704627564-16069.post@n5.nabble.com> <56B50A50.1030104@gmx.de>
	<CA+i9EaB0K8zQLeVkMz0S5iyoukiHG7jHvH6KW8_+bv69vza90g@mail.gmail.com>
Message-ID: <56B60C39.2070303@gmx.de>

On 02/06/2016 01:44 PM, Ronaldo Persiano wrote:
> However, I was not able to run OpenSCAD-2016.02.01-x86-64-Installer.exe.
> It appears 3 times in the process list but nothing happens. And I have
> no success trying to kill those process except rebooting.
>
Are you running Avast antivirus 2015 by any chance? This sounds a bit like
the report in:
http://forum.openscad.org/Can-t-install-the-2016-1-26-Windows-snapshot-in-my-64-bit-Windows-7-OS-td15902.html#a15973

FWIW I ran both files though https://www.virustotal.com/

https://www.virustotal.com/en/url/b263dc45a702031cab5351b24b1ae5ef6a384905cd50d9ec6d6a2755693c5a31/analysis/
https://www.virustotal.com/en/url/c1f8afb2ba55d483e3d268ce815ed76782acd93c9ffb60feba660636ffd9b367/analysis/

and https://www.metascan-online.com/

https://www.metascan-online.com/#!/results/file/57114db7b7a0409e8dd4874e18a7ea59/regular
(complains about ZIP file having more than 100 files and refuses to scan that)

You can try the ZIP file meanwhile, in case it's the installer that's
freaking out. Nothing special required, just unzip and run the openscad.exe.

ciao,
  Torsten.



From Torsten.Paul at gmx.de  Sat Feb  6 15:18:44 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sat, 6 Feb 2016 21:18:44 +0100
Subject: [OpenSCAD] List comprehension filters
In-Reply-To: <CA+i9EaB0K8zQLeVkMz0S5iyoukiHG7jHvH6KW8_+bv69vza90g@mail.gmail.com>
References: <1454704627564-16069.post@n5.nabble.com> <56B50A50.1030104@gmx.de>
	<CA+i9EaB0K8zQLeVkMz0S5iyoukiHG7jHvH6KW8_+bv69vza90g@mail.gmail.com>
Message-ID: <56B65524.3070401@gmx.de>

On 02/06/2016 01:44 PM, Ronaldo Persiano wrote:
> Thank you, Torsten, for your kind information. It was nice to see that the constraint is being removed.
> 
I've created a wiki page to list the experimental features that are not yet ready for the release and therefor also not yet documented in
the main manual.

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/WIP

Disclaimer: I'm not going to promise that will always be up to date or complete ;-).

ciao,
  Torsten.




From jpmendes54 at gmail.com  Sat Feb  6 16:06:55 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Sat, 6 Feb 2016 14:06:55 -0700 (MST)
Subject: [OpenSCAD] List comprehension filters
In-Reply-To: <56B60C39.2070303@gmx.de>
References: <1454704627564-16069.post@n5.nabble.com> <56B50A50.1030104@gmx.de>
	<CA+i9EaB0K8zQLeVkMz0S5iyoukiHG7jHvH6KW8_+bv69vza90g@mail.gmail.com>
	<56B60C39.2070303@gmx.de>
Message-ID: <1454792815304-16077.post@n5.nabble.com>

Hello,

The zip doesn't work either. The sole solution is to block Avast from
checking the Openscad dir.
With Avast active the installer hangs itself. If we suspend Avast for some
time and install from the installer it installs OpenSCAD successsfully.
After restarting Avast, openscad.exe hangs. OpenSCAD is not the only
app to hang, ImageMagic for instance has the same behaviour in Windows 7 OS
with the latest updates.

jpmendes



--
View this message in context: http://forum.openscad.org/List-comprehension-filters-tp16069p16077.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Sat Feb  6 18:38:02 2016
From: marius at kintel.net (Marius Kintel)
Date: Sat, 6 Feb 2016 18:38:02 -0500
Subject: [OpenSCAD] List comprehension filters
In-Reply-To: <1454792815304-16077.post@n5.nabble.com>
References: <1454704627564-16069.post@n5.nabble.com> <56B50A50.1030104@gmx.de>
	<CA+i9EaB0K8zQLeVkMz0S5iyoukiHG7jHvH6KW8_+bv69vza90g@mail.gmail.com>
	<56B60C39.2070303@gmx.de> <1454792815304-16077.post@n5.nabble.com>
Message-ID: <4F6F7A4C-8F66-41CF-AE5E-DE9D7FEE6DC4@kintel.net>

> On Feb 6, 2016, at 16:06 PM, jpmendes <jpmendes54 at gmail.com> wrote:

> The zip doesn't work either. The sole solution is to block Avast from
> checking the Openscad dir.

Could you file a bug report with Avast for this?
Perhaps they will do an analysis and explain why it doesn?t work.

 -Marius



From rcmpersiano at gmail.com  Tue Feb  9 10:10:04 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Tue, 9 Feb 2016 13:10:04 -0200
Subject: [OpenSCAD] List comprehension filters
In-Reply-To: <56B60C39.2070303@gmx.de>
References: <1454704627564-16069.post@n5.nabble.com> <56B50A50.1030104@gmx.de>
	<CA+i9EaB0K8zQLeVkMz0S5iyoukiHG7jHvH6KW8_+bv69vza90g@mail.gmail.com>
	<56B60C39.2070303@gmx.de>
Message-ID: <CA+i9EaAZqq9DtJ_kVhJxqm=BcxR6QMuT8RgnLM+67Ex9PXP0fQ@mail.gmail.com>

I had the same issues JPMendes described. But anyway I couldn't test the
extra features because I couldn't find how to set the preferences of the
snapshot. There is no related option in Edit/Preferences/Advanced.

2016-02-06 13:07 GMT-02:00 Torsten Paul <Torsten.Paul at gmx.de>:

> On 02/06/2016 01:44 PM, Ronaldo Persiano wrote:
> > However, I was not able to run OpenSCAD-2016.02.01-x86-64-Installer.exe.
> > It appears 3 times in the process list but nothing happens. And I have
> > no success trying to kill those process except rebooting.
> >
> Are you running Avast antivirus 2015 by any chance? This sounds a bit like
> the report in:
>
> http://forum.openscad.org/Can-t-install-the-2016-1-26-Windows-snapshot-in-my-64-bit-Windows-7-OS-td15902.html#a15973
>
> FWIW I ran both files though https://www.virustotal.com/
>
>
> https://www.virustotal.com/en/url/b263dc45a702031cab5351b24b1ae5ef6a384905cd50d9ec6d6a2755693c5a31/analysis/
>
> https://www.virustotal.com/en/url/c1f8afb2ba55d483e3d268ce815ed76782acd93c9ffb60feba660636ffd9b367/analysis/
>
> and https://www.metascan-online.com/
>
>
> https://www.metascan-online.com/#!/results/file/57114db7b7a0409e8dd4874e18a7ea59/regular
> (complains about ZIP file having more than 100 files and refuses to scan
> that)
>
> You can try the ZIP file meanwhile, in case it's the installer that's
> freaking out. Nothing special required, just unzip and run the
> openscad.exe.
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160209/5b62ba7e/attachment.html>

From Torsten.Paul at gmx.de  Tue Feb  9 10:48:55 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Tue, 9 Feb 2016 16:48:55 +0100
Subject: [OpenSCAD] List comprehension filters
In-Reply-To: <CA+i9EaAZqq9DtJ_kVhJxqm=BcxR6QMuT8RgnLM+67Ex9PXP0fQ@mail.gmail.com>
References: <1454704627564-16069.post@n5.nabble.com> <56B50A50.1030104@gmx.de>
	<CA+i9EaB0K8zQLeVkMz0S5iyoukiHG7jHvH6KW8_+bv69vza90g@mail.gmail.com>
	<56B60C39.2070303@gmx.de>,
	<CA+i9EaAZqq9DtJ_kVhJxqm=BcxR6QMuT8RgnLM+67Ex9PXP0fQ@mail.gmail.com>
Message-ID: <trinity-fc88d127-aa41-450c-a5f3-f96fdb3990c3-1455032935703@3capp-gmx-bs03>

Von:?"Ronaldo Persiano" <rcmpersiano at gmail.com>
> I had the same issues JPMendes described. But anyway I couldn't
> test the extra features because I couldn't find how to set the
> preferences of the snapshot. There is no related option in
> Edit/Preferences/Advanced.
>
Hmm, there should be Features tab in the preferences dialog.
If that's not there, it's an issue with the snapshot build,
I'll have a look...

ciao,
  Torsten.


From Torsten.Paul at gmx.de  Tue Feb  9 15:50:06 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Tue, 9 Feb 2016 21:50:06 +0100
Subject: [OpenSCAD] List comprehension filters
In-Reply-To: <trinity-fc88d127-aa41-450c-a5f3-f96fdb3990c3-1455032935703@3capp-gmx-bs03>
References: <1454704627564-16069.post@n5.nabble.com> <56B50A50.1030104@gmx.de>
	<CA+i9EaB0K8zQLeVkMz0S5iyoukiHG7jHvH6KW8_+bv69vza90g@mail.gmail.com>
	<56B60C39.2070303@gmx.de>
	<CA+i9EaAZqq9DtJ_kVhJxqm=BcxR6QMuT8RgnLM+67Ex9PXP0fQ@mail.gmail.com>
	<trinity-fc88d127-aa41-450c-a5f3-f96fdb3990c3-1455032935703@3capp-gmx-bs03>
Message-ID: <56BA50FE.1060302@gmx.de>

The build script had the snapshot flag missing, new snapshots are
up on the download page (http://www.openscad.org/downloads.html).

ciao,
  Torsten.


From rcmpersiano at gmail.com  Tue Feb  9 17:40:05 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Tue, 9 Feb 2016 20:40:05 -0200
Subject: [OpenSCAD] List comprehension filters
In-Reply-To: <56BA50FE.1060302@gmx.de>
References: <1454704627564-16069.post@n5.nabble.com> <56B50A50.1030104@gmx.de>
	<CA+i9EaB0K8zQLeVkMz0S5iyoukiHG7jHvH6KW8_+bv69vza90g@mail.gmail.com>
	<56B60C39.2070303@gmx.de>
	<CA+i9EaAZqq9DtJ_kVhJxqm=BcxR6QMuT8RgnLM+67Ex9PXP0fQ@mail.gmail.com>
	<trinity-fc88d127-aa41-450c-a5f3-f96fdb3990c3-1455032935703@3capp-gmx-bs03>
	<56BA50FE.1060302@gmx.de>
Message-ID: <CA+i9EaBmmEsMKMtTWUPWbwo2AdPB7yYWHtG7+opAnSVmi_QXzA@mail.gmail.com>

Thank you, Torsten! Now I have how to enable the new list comprehension
features I had seen in the wiki page you created. And I like them.

2016-02-09 18:50 GMT-02:00 Torsten Paul <Torsten.Paul at gmx.de>:

> The build script had the snapshot flag missing, new snapshots are
> up on the download page (http://www.openscad.org/downloads.html).
>
> ciao,
>   Torsten.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160209/a82e2fa7/attachment.html>

From adamtimm1 at msn.com  Tue Feb  9 20:31:23 2016
From: adamtimm1 at msn.com (adamtimm1)
Date: Tue, 9 Feb 2016 18:31:23 -0700 (MST)
Subject: [OpenSCAD] converting svg files from Inkscape to scad files to stl
	files
Message-ID: <1455067883681-16084.post@n5.nabble.com>

I hope I do not offend anyone with this request or my stupidity.  This was
supposed to be a simple "thing."

>From an "instructable" and a "Thing" in Thingiverse (
http://www.instructables.com/id/Convert-any-2D-image-to-a-3D-object-using-OpenSCAD/ 
) the instructions said that I could import a 2D jpeg into Inkscape, covert
it into an svg file, click Path>Object to Path  then click extensions
>Paths2openscad.  When I opened openscad I was supposed to be able to easily
convert the file to an extruded stl that I could print on my 3D printer. 
REally??  I have been working on it for 2 days.

I am a photographer and an artist.  I want to create 3D images from my
photos and from artwork so that the blind can touch an image and "see it." 
That is* all *I want to do. I did it once through another venue.

I did drop a "dxf" file onto the command line but I haven't the foggiest how
to implement it.  The first time I did it I got a message saying I had
dropped an invalid dxf file onto the command line.

I am told that I have to "correctly escape the string." How do I do that?  I
am totally overwhelmed with things I have to do at the moment and I do not
want more.  I am at a point where everything I do takes me further afield
from my goals.  I know that there is a manual but for the little thing I am
attempting to do I only need a couple of instructions.  I have no intention
of doing any greater things with SCAD.  It is a task I will repeat many
times until something better/easier comes along.

Could someone please tell me how to import the dxf file I want, extrude it
then save it as an STL?  I was thinking I would get an  "import" button, but
noooo!

Can/would someone please walk me through this?



--
View this message in context: http://forum.openscad.org/converting-svg-files-from-Inkscape-to-scad-files-to-stl-files-tp16084.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From fred_dot_u at yahoo.com  Tue Feb  9 20:45:14 2016
From: fred_dot_u at yahoo.com (fred)
Date: Wed, 10 Feb 2016 01:45:14 +0000 (UTC)
Subject: [OpenSCAD] converting svg files from Inkscape to scad files to
 stl	files
In-Reply-To: <1455067883681-16084.post@n5.nabble.com>
References: <1455067883681-16084.post@n5.nabble.com>
Message-ID: <548914176.1586883.1455068714297.JavaMail.yahoo@mail.yahoo.com>

I've done just as you've described. One could consider that it's a bit less obvious than one could hope. If you are able to import your DXF file into Inkscape, that's a tiny part of the battle. Please keep in mind that I rarely know what I'm doing, but often enough muddle through it and accomplish the desired result.
Rather than pursue this particular direction, have you considered to create a lithophane? I ask this because a DXF or other vector file could be considered a two-bit image, black and white, while a lithophane will have greyscale, in a manner of speaking. With some lithophane generators, you can specify the depth/thickness of the print. For sighted viewing, one wants a minimal thickness for the light portions, which would work for non-sighted people as well, I suppose. I usually print a lithophane at 3-4mm, but you could have something as thick as 6-10 for exaggerated contrast for non-sighted viewers.
I'm not going to be able to create a workflow for you tonight, but I expect I'll have enough time tomorrow morning to address your request. It's really quite fun, in my opinion.?

    On Tuesday, February 9, 2016 8:32 PM, adamtimm1 <adamtimm1 at msn.com> wrote:
 

 I hope I do not offend anyone with this request or my stupidity.? This was
supposed to be a simple "thing."

>From an "instructable" and a "Thing" in Thingiverse (
http://www.instructables.com/id/Convert-any-2D-image-to-a-3D-object-using-OpenSCAD/ 
) the instructions said that I could import a 2D jpeg into Inkscape, covert
it into an svg file, click Path>Object to Path? then click extensions
>Paths2openscad.? When I opened openscad I was supposed to be able to easily
convert the file to an extruded stl that I could print on my 3D printer. 
REally??? I have been working on it for 2 days.

I am a photographer and an artist.? I want to create 3D images from my
photos and from artwork so that the blind can touch an image and "see it." 
That is* all *I want to do. I did it once through another venue.

I did drop a "dxf" file onto the command line but I haven't the foggiest how
to implement it.? The first time I did it I got a message saying I had
dropped an invalid dxf file onto the command line.

I am told that I have to "correctly escape the string." How do I do that?? I
am totally overwhelmed with things I have to do at the moment and I do not
want more.? I am at a point where everything I do takes me further afield
from my goals.? I know that there is a manual but for the little thing I am
attempting to do I only need a couple of instructions.? I have no intention
of doing any greater things with SCAD.? It is a task I will repeat many
times until something better/easier comes along.

Could someone please tell me how to import the dxf file I want, extrude it
then save it as an STL?? I was thinking I would get an? "import" button, but
noooo!

Can/would someone please walk me through this?



--
View this message in context: http://forum.openscad.org/converting-svg-files-from-Inkscape-to-scad-files-to-stl-files-tp16084.html
Sent from the OpenSCAD mailing list archive at Nabble.com.

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160210/f2548250/attachment.html>

From doug at moens.org  Tue Feb  9 20:56:50 2016
From: doug at moens.org (doug moen)
Date: Tue, 9 Feb 2016 20:56:50 -0500
Subject: [OpenSCAD] converting svg files from Inkscape to scad files to
 stl files
In-Reply-To: <1455067883681-16084.post@n5.nabble.com>
References: <1455067883681-16084.post@n5.nabble.com>
Message-ID: <CAGV6i+NugwAuVs7G1rH49WYzKFeHSk2XZrgFBP5RcY5ercXiag@mail.gmail.com>

The \ character is magic inside a "..." character string.

If you are using windows, change all occurrences of \ to / within the path
name, and your problem should go away.

Usually people who are getting error messages from OpenSCAD post the source
code and the error message, it makes it easier for us to see what is going
on.

On 9 February 2016 at 20:31, adamtimm1 <adamtimm1 at msn.com> wrote:

> I hope I do not offend anyone with this request or my stupidity.  This was
> supposed to be a simple "thing."
>
> From an "instructable" and a "Thing" in Thingiverse (
>
> http://www.instructables.com/id/Convert-any-2D-image-to-a-3D-object-using-OpenSCAD/
> ) the instructions said that I could import a 2D jpeg into Inkscape, covert
> it into an svg file, click Path>Object to Path  then click extensions
> >Paths2openscad.  When I opened openscad I was supposed to be able to
> easily
> convert the file to an extruded stl that I could print on my 3D printer.
> REally??  I have been working on it for 2 days.
>
> I am a photographer and an artist.  I want to create 3D images from my
> photos and from artwork so that the blind can touch an image and "see it."
> That is* all *I want to do. I did it once through another venue.
>
> I did drop a "dxf" file onto the command line but I haven't the foggiest
> how
> to implement it.  The first time I did it I got a message saying I had
> dropped an invalid dxf file onto the command line.
>
> I am told that I have to "correctly escape the string." How do I do that?
> I
> am totally overwhelmed with things I have to do at the moment and I do not
> want more.  I am at a point where everything I do takes me further afield
> from my goals.  I know that there is a manual but for the little thing I am
> attempting to do I only need a couple of instructions.  I have no intention
> of doing any greater things with SCAD.  It is a task I will repeat many
> times until something better/easier comes along.
>
> Could someone please tell me how to import the dxf file I want, extrude it
> then save it as an STL?  I was thinking I would get an  "import" button,
> but
> noooo!
>
> Can/would someone please walk me through this?
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/converting-svg-files-from-Inkscape-to-scad-files-to-stl-files-tp16084.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160209/695543d0/attachment.html>

From mschafer at wireframe.biz  Tue Feb  9 21:17:41 2016
From: mschafer at wireframe.biz (Neon22)
Date: Tue, 9 Feb 2016 19:17:41 -0700 (MST)
Subject: [OpenSCAD] converting svg files from Inkscape to scad files to
	stl files
In-Reply-To: <1455067883681-16084.post@n5.nabble.com>
References: <1455067883681-16084.post@n5.nabble.com>
Message-ID: <1455070661773-16087.post@n5.nabble.com>

@adamtimm1 keep at it- you'll get there.
Not sure if you're trying to import a dxf (already a vector format) or
vectorise a 2D raster image like a jpg.

1. to transform a 2D raster image like a jpg you need to convert it to
vector form, then export it to .scad file
- drop the jpg onto the inkscape canvas (or use File/Import)
- select it and select Path/Trace_Bitmap
  - this will allow you to chose how to threshold it and create one or more
vector layers. 
  - I'm going to assume you want a simple, single level, outline. 
      - Choose "Brightness Cutoff" = 0.5. Hit update to preview and OK to
add to canvas.
  - You will now have an extra object which is a 2D threshholded vectored
version of your jpg image.
  - You can scale it and position it manually. 
      - Use the paper size as a guide and set Default units to mm in
File/Document_Properties.
      - So you can see its actual size when you export to OPENscad
- export it
  - select it and then choose Extensions/Generate_from_path/Paths to
OPENscad
  - it will save into profile.scad in your home directory
Double click it to open in openSCAD.
 - see more details on using it once its there in this thingiverse post
where the latest version of the paths to openscad.py conversion tool is.
    - http://www.thingiverse.com/thing:1065500

Note: To make a multilevel vectored version of your jpg artwork - check out
inkscape and trace bitmap online for help. basically the same but several
grouped layers.

Also the Lithopane idea mentioned by @fred_dot_u is very good one for many
layers but for touch you may need to scale the off-page axis quite a lot.

2. Using a 2D dxf file as the source
- just import it or drop it onto the canvas.
- if it won't load and complains about the format in some way - then the dxf
is crafted a bit special to the authoring program.
   - I suggest you load it into some kind of dxf converter and save as dxf
again or svg if it can do it.
- if it appers in inkscape then it should be ok.
- select it and save to openscad as per 1.

Let us know how you get on...
good luck.



--
View this message in context: http://forum.openscad.org/converting-svg-files-from-Inkscape-to-scad-files-to-stl-files-tp16084p16087.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From adamtimm1 at msn.com  Tue Feb  9 22:13:19 2016
From: adamtimm1 at msn.com (Adam)
Date: Tue, 9 Feb 2016 21:13:19 -0600
Subject: [OpenSCAD] converting svg files from Inkscape to scad files to
	stl files
In-Reply-To: <1455067883681-16084.post@n5.nabble.com>
	<CAGV6i+NugwAuVs7G1rH49WYzKFeHSk2XZrgFBP5RcY5ercXiag@mail.gmail.com>
References: <1455067883681-16084.post@n5.nabble.com>
	<CAGV6i+NugwAuVs7G1rH49WYzKFeHSk2XZrgFBP5RcY5ercXiag@mail.gmail.com>
Message-ID: <COL130-DS2330F67E51C62DDA09EF43E0D70@phx.gbl>

   
Thanks Doug,

     I think "usually" means that they weren't ambushed by a language they are not familiar with and know a little about what they are doing.

     I was able to paste the dxf file, but how do I implement?

 

Adam


----- Original Message ----- 

From: doug moen<mailto:doug at moens.org> 

To: OpenSCAD general discussion<mailto:discuss at lists.openscad.org> 

Sent: Tuesday, February 09, 2016 7:56 PM

Subject: Re: [OpenSCAD] converting svg files from Inkscape to scad files to stl files





The \ character is magic inside a "..." character string.



If you are using windows, change all occurrences of \ to / within the path name, and your problem should go away. 



Usually people who are getting error messages from OpenSCAD post the source code and the error message, it makes it easier for us to see what is going on.



On 9 February 2016 at 20:31, adamtimm1 <adamtimm1 at msn.com<mailto:adamtimm1 at msn.com>> wrote:

I hope I do not offend anyone with this request or my stupidity.  This was
supposed to be a simple "thing."

>From an "instructable" and a "Thing" in Thingiverse (
http://www.instructables.com/id/Convert-any-2D-image-to-a-3D-object-using-OpenSCAD/<http://www.instructables.com/id/Convert-any-2D-image-to-a-3D-object-using-OpenSCAD/>
) the instructions said that I could import a 2D jpeg into Inkscape, covert
it into an svg file, click Path>Object to Path  then click extensions
>Paths2openscad.  When I opened openscad I was supposed to be able to easily
convert the file to an extruded stl that I could print on my 3D printer.
REally??  I have been working on it for 2 days.

I am a photographer and an artist.  I want to create 3D images from my
photos and from artwork so that the blind can touch an image and "see it."
That is* all *I want to do. I did it once through another venue.

I did drop a "dxf" file onto the command line but I haven't the foggiest how
to implement it.  The first time I did it I got a message saying I had
dropped an invalid dxf file onto the command line.

I am told that I have to "correctly escape the string." How do I do that?  I
am totally overwhelmed with things I have to do at the moment and I do not
want more.  I am at a point where everything I do takes me further afield
from my goals.  I know that there is a manual but for the little thing I am
attempting to do I only need a couple of instructions.  I have no intention
of doing any greater things with SCAD.  It is a task I will repeat many
times until something better/easier comes along.

Could someone please tell me how to import the dxf file I want, extrude it
then save it as an STL?  I was thinking I would get an  "import" button, but
noooo!

Can/would someone please walk me through this?



--
View this message in context: http://forum.openscad.org/converting-svg-files-from-Inkscape-to-scad-files-to-stl-files-tp16084.html<http://forum.openscad.org/converting-svg-files-from-Inkscape-to-scad-files-to-stl-files-tp16084.html>
Sent from the OpenSCAD mailing list archive at Nabble.com.

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org<mailto:Discuss at lists.openscad.org>
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org<http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org>




_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160209/871cbe4a/attachment.html>

From laurataalman at gmail.com  Tue Feb  9 22:23:39 2016
From: laurataalman at gmail.com (Laura Taalman)
Date: Tue, 9 Feb 2016 22:23:39 -0500
Subject: [OpenSCAD] converting svg files from Inkscape to scad files to
	stl files
In-Reply-To: <1455067883681-16084.post@n5.nabble.com>
References: <1455067883681-16084.post@n5.nabble.com>
Message-ID: <378B1508-9FD9-4209-95A8-80CECDD9797B@gmail.com>

Maybe this is too simple a solution, but maybe not... If you really don't need openscad functionality beyond extruding a 2D image, then you could try using tinkercad instead. Here's instructions for how to do that: http://www.thingiverse.com/thing:1031735

-----
Laura Taalman
educ.jmu.edu/~taalmala
www.mathgrrl.com

> On Feb 9, 2016, at 8:31 PM, adamtimm1 <adamtimm1 at msn.com> wrote:
> 
> I hope I do not offend anyone with this request or my stupidity.  This was
> supposed to be a simple "thing."
> 
> From an "instructable" and a "Thing" in Thingiverse (
> http://www.instructables.com/id/Convert-any-2D-image-to-a-3D-object-using-OpenSCAD/ 
> ) the instructions said that I could import a 2D jpeg into Inkscape, covert
> it into an svg file, click Path>Object to Path  then click extensions
>> Paths2openscad.  When I opened openscad I was supposed to be able to easily
> convert the file to an extruded stl that I could print on my 3D printer. 
> REally??  I have been working on it for 2 days.
> 
> I am a photographer and an artist.  I want to create 3D images from my
> photos and from artwork so that the blind can touch an image and "see it." 
> That is* all *I want to do. I did it once through another venue.
> 
> I did drop a "dxf" file onto the command line but I haven't the foggiest how
> to implement it.  The first time I did it I got a message saying I had
> dropped an invalid dxf file onto the command line.
> 
> I am told that I have to "correctly escape the string." How do I do that?  I
> am totally overwhelmed with things I have to do at the moment and I do not
> want more.  I am at a point where everything I do takes me further afield
> from my goals.  I know that there is a manual but for the little thing I am
> attempting to do I only need a couple of instructions.  I have no intention
> of doing any greater things with SCAD.  It is a task I will repeat many
> times until something better/easier comes along.
> 
> Could someone please tell me how to import the dxf file I want, extrude it
> then save it as an STL?  I was thinking I would get an  "import" button, but
> noooo!
> 
> Can/would someone please walk me through this?
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/converting-svg-files-from-Inkscape-to-scad-files-to-stl-files-tp16084.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160209/4e08ff60/attachment.html>

From adamtimm1 at msn.com  Tue Feb  9 23:09:33 2016
From: adamtimm1 at msn.com (Adam)
Date: Tue, 9 Feb 2016 22:09:33 -0600
Subject: [OpenSCAD] converting svg files from Inkscape to scad files
	tostl files
In-Reply-To: <1455067883681-16084.post@n5.nabble.com>
	<1455070661773-16087.post@n5.nabble.com>
References: <1455067883681-16084.post@n5.nabble.com>
	<1455070661773-16087.post@n5.nabble.com>
Message-ID: <COL130-DS1128291508D1673C75F842E0D70@phx.gbl>

   
Thank you!

 

If you get a chance look at the Instructable or the "Thing" on Thingiverse that I posted on the message.  What you described is exactly what I am attempting to do.  I have imported a jpeg into InkScape, and converted to an svg file with which one is supposedly able to use an extension "path2openscad" to convert to a "scad" which can then be manipulated and saved as a 3D STL.

 

These are the kinds of images I am working with. You can see below that I am already doing what you suggest. 

 



 

In the 80's all one had to do was to change the file extension in DOS and bang!

 

The alternate method was to use InkScape to save the image as a dxf and "use OpenScads import function."  Silly me, I expected an "import" button.  After all there is one for export and most of the programs I work with are not this primative--bare bones.  

 

Marius the admin for OpenScad said that I could drag and drop the dxf file directly into OpenScad but then I am stuck with how the heck do I implement the import.  The line of code means nothing to me as much as I wish it meant more.  This is the only use I will ever have for this program, that plus adjusting the depth of the image to make it more tactile.

 

As for the Extensions > export, I have Guillotine, plot, and Win32 vector print.  Nothing else.  I do not have an "export to OpenScad." and believe me, I have looked. 

 

But it's the "select it and then choose Extensions/Generate_from_path/Paths to OPENscad" that has been bugging me the most. It just is not there and I have been looking for two days.    I do not believe that the previous step was even mentioned in the "how to" on the Instructable.

 

I have attempted to install the extensions but they do not show up.  Path2openscad3 shows the inv and pyth extensions in file explorer but the extension does not work.

 

I have installed and uninstalled Inkscape and the extensions 4 times in different directories.  The program practically insisted on installing to my desk top and would not work at all unless I did. 

 

It probably shows where I am on the image I am sending. 

 

So if you know what I am doing right or wrong I would greatly appreciate the help. I know I will feel really stupid when I finally get it.  I mean this is supposed to be easy right?  

 

I used to move files between floppy disks because we did not have hard drives.  This cannot be that difficult, right???


----- Original Message ----- 

From: Neon22<mailto:mschafer at wireframe.biz> 

To: discuss at lists.openscad.org<mailto:discuss at lists.openscad.org> 

Sent: Tuesday, February 09, 2016 8:17 PM

Subject: Re: [OpenSCAD] converting svg files from Inkscape to scad files tostl files



@adamtimm1 keep at it- you'll get there.
Not sure if you're trying to import a dxf (already a vector format) or
vectorise a 2D raster image like a jpg.

1. to transform a 2D raster image like a jpg you need to convert it to
vector form, then export it to .scad file
- drop the jpg onto the inkscape canvas (or use File/Import)
- select it and select Path/Trace_Bitmap
  - this will allow you to chose how to threshold it and create one or more
vector layers. 
  - I'm going to assume you want a simple, single level, outline. 
      - Choose "Brightness Cutoff" = 0.5. Hit update to preview and OK to
add to canvas.
  - You will now have an extra object which is a 2D threshholded vectored
version of your jpg image.
  - You can scale it and position it manually. 
      - Use the paper size as a guide and set Default units to mm in
File/Document_Properties.
      - So you can see its actual size when you export to OPENscad
- export it
  - select it and then choose Extensions/Generate_from_path/Paths to
OPENscad
  - it will save into profile.scad in your home directory
Double click it to open in openSCAD.
 - see more details on using it once its there in this thingiverse post
where the latest version of the paths to openscad.py conversion tool is.
    - http://www.thingiverse.com/thing:1065500

Note: To make a multilevel vectored version of your jpg artwork - check out
inkscape and trace bitmap online for help. basically the same but several
grouped layers.

Also the Lithopane idea mentioned by @fred_dot_u is very good one for many
layers but for touch you may need to scale the off-page axis quite a lot.

2. Using a 2D dxf file as the source
- just import it or drop it onto the canvas.
- if it won't load and complains about the format in some way - then the dxf
is crafted a bit special to the authoring program.
   - I suggest you load it into some kind of dxf converter and save as dxf
again or svg if it can do it.
- if it appers in inkscape then it should be ok.
- select it and save to openscad as per 1.

Let us know how you get on...
good luck.



--
View this message in context: http://forum.openscad.org/converting-svg-files-from-Inkscape-to-scad-files-to-stl-files-tp16084p16087.html
Sent from the OpenSCAD mailing list archive at Nabble.com.

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160209/b8f6571c/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: C1AD.jpg
Type: image/jpeg
Size: 24897 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160209/b8f6571c/attachment.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: C1CD.jpg
Type: image/jpeg
Size: 47790 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160209/b8f6571c/attachment-0001.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: C1DE.jpg
Type: image/jpeg
Size: 26170 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160209/b8f6571c/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Emoticon2.gif
Type: image/gif
Size: 258 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160209/b8f6571c/attachment.gif>

From adamtimm1 at msn.com  Tue Feb  9 23:51:36 2016
From: adamtimm1 at msn.com (Adam)
Date: Tue, 9 Feb 2016 22:51:36 -0600
Subject: [OpenSCAD] converting svg files from Inkscape to scad files
	tostl files
In-Reply-To: <1455067883681-16084.post@n5.nabble.com>
	<378B1508-9FD9-4209-95A8-80CECDD9797B@gmail.com>
References: <1455067883681-16084.post@n5.nabble.com>
	<378B1508-9FD9-4209-95A8-80CECDD9797B@gmail.com>
Message-ID: <COL130-DS1BDBFFC155967791C1EFBE0D70@phx.gbl>

   
Thank you Laura.  Are you related to Taulman filments?

I tried Tinkercad out and it only works with svg and stl files.  It also did not give me the topography that I wanted rather just a bunch of dots all over the place and in 2D no matter how much I elevated.  Messy!  In short not powerful enough.

 

I use FreeCad but don't know how to get it to give me what I want.  I printed this lion once and got some topography and want to do it again but better.  I want people to be able to touch the image and get a sense of what it looks like.

 

Adam


----- Original Message ----- 

From: Laura Taalman<mailto:laurataalman at gmail.com> 

To: OpenSCAD general discussion<mailto:discuss at lists.openscad.org> 

Sent: Tuesday, February 09, 2016 9:23 PM

Subject: Re: [OpenSCAD] converting svg files from Inkscape to scad files tostl files




Maybe this is too simple a solution, but maybe not... If you really don't need openscad functionality beyond extruding a 2D image, then you could try using tinkercad instead. Here's instructions for how to do that: http://www.thingiverse.com/thing:1031735<http://www.thingiverse.com/thing:1031735>

----- 

Laura Taalman

educ.jmu.edu/~taalmala<http://educ.jmu.edu/~taalmala>

www.mathgrrl.com<http://www.mathgrrl.com/>


On Feb 9, 2016, at 8:31 PM, adamtimm1 <adamtimm1 at msn.com<mailto:adamtimm1 at msn.com>> wrote:




I hope I do not offend anyone with this request or my stupidity.  This was
supposed to be a simple "thing."

>From an "instructable" and a "Thing" in Thingiverse (
http://www.instructables.com/id/Convert-any-2D-image-to-a-3D-object-using-OpenSCAD/<http://www.instructables.com/id/Convert-any-2D-image-to-a-3D-object-using-OpenSCAD/> 
) the instructions said that I could import a 2D jpeg into Inkscape, covert
it into an svg file, click Path>Object to Path  then click extensions

Paths2openscad.  When I opened openscad I was supposed to be able to easily

convert the file to an extruded stl that I could print on my 3D printer. 
REally??  I have been working on it for 2 days.

I am a photographer and an artist.  I want to create 3D images from my
photos and from artwork so that the blind can touch an image and "see it." 
That is* all *I want to do. I did it once through another venue.

I did drop a "dxf" file onto the command line but I haven't the foggiest how
to implement it.  The first time I did it I got a message saying I had
dropped an invalid dxf file onto the command line.

I am told that I have to "correctly escape the string." How do I do that?  I
am totally overwhelmed with things I have to do at the moment and I do not
want more.  I am at a point where everything I do takes me further afield
from my goals.  I know that there is a manual but for the little thing I am
attempting to do I only need a couple of instructions.  I have no intention
of doing any greater things with SCAD.  It is a task I will repeat many
times until something better/easier comes along.

Could someone please tell me how to import the dxf file I want, extrude it
then save it as an STL?  I was thinking I would get an  "import" button, but
noooo!

Can/would someone please walk me through this?



--
View this message in context: http://forum.openscad.org/converting-svg-files-from-Inkscape-to-scad-files-to-stl-files-tp16084.html<http://forum.openscad.org/converting-svg-files-from-Inkscape-to-scad-files-to-stl-files-tp16084.html>
Sent from the OpenSCAD mailing list archive at Nabble.com<http://nabble.com/>.

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org<mailto:Discuss at lists.openscad.org>
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org<http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org>
_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160209/e8f733d0/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 4EE5.jpg
Type: image/jpeg
Size: 10172 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160209/e8f733d0/attachment.jpg>

From laurataalman at gmail.com  Wed Feb 10 00:10:34 2016
From: laurataalman at gmail.com (Laura Taalman)
Date: Wed, 10 Feb 2016 00:10:34 -0500
Subject: [OpenSCAD] converting svg files from Inkscape to scad files
	tostl files
In-Reply-To: <COL130-DS1BDBFFC155967791C1EFBE0D70@phx.gbl>
References: <1455067883681-16084.post@n5.nabble.com>
	<378B1508-9FD9-4209-95A8-80CECDD9797B@gmail.com>
	<COL130-DS1BDBFFC155967791C1EFBE0D70@phx.gbl>
Message-ID: <CANQ1j_s8xibHJwkuzho-L=3nkA=Oiy0RuRpAmp+vWH6sL_uvrQ@mail.gmail.com>

Haha, no, not related to Taulman, but that is a neat coincidence.

Tinkercad is indeed only good for simple things, too bad that was not
enough!  My next-easiest quick-fix probably-too-simple suggestion is to try
to use the Thingiverse Customizer for lithopanes:
http://www.thingiverse.com/thing:74322 (press "Open in Customizer"). It
works well but it is limited in what it can do since it is for the specific
purpose of making lithopanes. Might work for what you want to do, though.
You can also select "View Source" when in the Customizer, and you'll see
the OpenSCAD code that is used; maybe you can extend or modify it to suit
your purposes.



On Tue, Feb 9, 2016 at 11:51 PM, Adam <adamtimm1 at msn.com> wrote:

> Thank you Laura.  Are you related to Taulman filments?
> I tried Tinkercad out and it only works with svg and stl files.  It also
> did not give me the topography that I wanted rather just a bunch of dots
> all over the place and in 2D no matter how much I elevated.  Messy!  In
> short not powerful enough.
>
> I use FreeCad but don't know how to get it to give me what I want.  I
> printed this lion once and got some topography and want to do it again
> but better.  I want people to be able to touch the image and get a sense of
> what it looks like.
>
> Adam
>
> ----- Original Message -----
> *From:* Laura Taalman <laurataalman at gmail.com>
> *To:* OpenSCAD general discussion <discuss at lists.openscad.org>
> *Sent:* Tuesday, February 09, 2016 9:23 PM
> *Subject:* Re: [OpenSCAD] converting svg files from Inkscape to scad
> files tostl files
>
> Maybe this is too simple a solution, but maybe not... If you really don't
> need openscad functionality beyond extruding a 2D image, then you could try
> using tinkercad instead. Here's instructions for how to do that:
> http://www.thingiverse.com/thing:1031735
>
> -----
> Laura Taalman
> educ.jmu.edu/~taalmala
> www.mathgrrl.com
>
> On Feb 9, 2016, at 8:31 PM, adamtimm1 <adamtimm1 at msn.com> wrote:
>
> I hope I do not offend anyone with this request or my stupidity.  This was
> supposed to be a simple "thing."
>
> From an "instructable" and a "Thing" in Thingiverse (
>
> http://www.instructables.com/id/Convert-any-2D-image-to-a-3D-object-using-OpenSCAD/
> ) the instructions said that I could import a 2D jpeg into Inkscape, covert
> it into an svg file, click Path>Object to Path  then click extensions
>
> Paths2openscad.  When I opened openscad I was supposed to be able to easily
>
> convert the file to an extruded stl that I could print on my 3D printer.
> REally??  I have been working on it for 2 days.
>
> I am a photographer and an artist.  I want to create 3D images from my
> photos and from artwork so that the blind can touch an image and "see it."
> That is* all *I want to do. I did it once through another venue.
>
> I did drop a "dxf" file onto the command line but I haven't the foggiest
> how
> to implement it.  The first time I did it I got a message saying I had
> dropped an invalid dxf file onto the command line.
>
> I am told that I have to "correctly escape the string." How do I do that?
>  I
> am totally overwhelmed with things I have to do at the moment and I do not
> want more.  I am at a point where everything I do takes me further afield
> from my goals.  I know that there is a manual but for the little thing I am
> attempting to do I only need a couple of instructions.  I have no intention
> of doing any greater things with SCAD.  It is a task I will repeat many
> times until something better/easier comes along.
>
> Could someone please tell me how to import the dxf file I want, extrude it
> then save it as an STL?  I was thinking I would get an  "import" button,
> but
> noooo!
>
> Can/would someone please walk me through this?
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/converting-svg-files-from-Inkscape-to-scad-files-to-stl-files-tp16084.html
> Sent from the OpenSCAD mailing list archive at Nabble.com
> <http://nabble.com>.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>


-- 
Dr. Laura Taalman
www.mathgrrl.com/hacktastic + educ.jmu.edu/~taalmala + @mathgrrl
<http://www.twitter.com/mathgrrl>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160210/cf7fc75c/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 4EE5.jpg
Type: image/jpeg
Size: 10172 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160210/cf7fc75c/attachment.jpg>

From mschafer at wireframe.biz  Wed Feb 10 00:39:17 2016
From: mschafer at wireframe.biz (Neon22)
Date: Tue, 9 Feb 2016 22:39:17 -0700 (MST)
Subject: [OpenSCAD] converting svg files from Inkscape to scad files
	tostl files
In-Reply-To: <COL130-DS1128291508D1673C75F842E0D70@phx.gbl>
References: <1455067883681-16084.post@n5.nabble.com>
	<COL130-DS1128291508D1673C75F842E0D70@phx.gbl>
Message-ID: <1455082757921-16093.post@n5.nabble.com>

ok thanks for the detail. A couple of things first.

1. Regrettably changing a raster file to a vector file cannot be done by
just changing the file extension. That would be like changing a car to an
airplane by swapping the gas caps over. While they are both forms of
transport, they do different things. So there is no way it'll ever be that
simple. Sorry.

2. Your image is going to need to be in several layers. One for each of the
contour colors you can see in your image. Maybe 8 or more. Oh yes - as you
can see (way below), the image needs a bit of editing and tidying at the
borders before you begin to get a good result and no cruft at the edges.

So things to try:
1. You really should look at lithopanes. The author solved an interesting
problem and its worth considering if you can use it for what you want.
The live customiser online version cannot use really big files. But if you
download the scad then you can use much bigger images.
Try it:
   - http://www.thingiverse.com/thing:74322
   - http://www.thingiverse.com/search?q=lithopane&sa=

2. I'm sorry for your troubles with Inkscape.
You need 0.91. You also need to download the extension (which what inkscape
calls plugins) and put it in the right directory. If you're on windows
that's %APPDATA% then go looking for the inkscape/extensions folder.
 - you really should use the zip file from here:
http://www.thingiverse.com/thing:1065500/#files
 - unpack it into that extensions folder
    - http://www.thingiverse.com/thing:25036
    - if you unpack it then it should appear on that specific menu - when
you restart inkscape.

The instructable you reference is making a simple black and white one-layer
shape. Your image looks like its maybe > 8 layers.
When you split your image into 8 layers - using the Trace_Bitmap tool -
you'll need to have these settings:
 - choose colors,
 - 8 layers (or however many you need)
 - stack scans off
 - remove_background off (but you can play with this and the previous
option)
 - smooth on (optional)
<http://forum.openscad.org/file/n16093/bitmap_001315.png> 
Then export using the extension (must be v8). force line output must be off.
Then open in openscad and be disappointed to see a low cube....

But wait....
at the end of the file will be 8 (or whatever you chose) poly_path
statements.
You can toggle visibiility of these on and off using the // comment operator
to check each shape is there.

Anyway - if you translate each one away from the next one (by whatever
height you choose) then you'll end up with a stacked scan like this:
<http://forum.openscad.org/file/n16093/profile_001316.png> 
 - now they won't come in in the exact order you need. You'll have to swap
them round until they are in correct height order.

The following numbers won't match yours at all but see what I'm doing with
the translates in Z... ?
// The shapes
poly_path4313(height, width);
translate([0,0,-height])
    poly_path4319(height, width);
translate([0,0,-height*2])
    poly_path4311(height, width);
translate([0,0,-height*3])
    poly_path4315(height, width);
translate([0,0,-height*4])
    poly_path4321(height, width);
translate([0,0,-height*5])
    poly_path4317(height, width);
translate([0,0,-height*6])
    poly_path4309(height, width);
translate([0,0,-height*7])
    poly_path4307(height, width);

Try again
Cheers...



--
View this message in context: http://forum.openscad.org/converting-svg-files-from-Inkscape-to-scad-files-to-stl-files-tp16084p16093.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Wed Feb 10 03:46:40 2016
From: arnholm at arnholm.org (arnholm at arnholm.org)
Date: Wed, 10 Feb 2016 09:46:40 +0100
Subject: [OpenSCAD] converting svg files from Inkscape to scad files to
 stl files
In-Reply-To: <1455067883681-16084.post@n5.nabble.com>
References: <1455067883681-16084.post@n5.nabble.com>
Message-ID: <4239c7bdac290ecfcc24ed35cb4874aa@arnholm.org>

On 2016-02-10 02:31, adamtimm1 wrote:
> I am a photographer and an artist.  I want to create 3D images from my
> photos and from artwork so that the blind can touch an image and "see 
> it."
> That is* all *I want to do. I did it once through another venue.

Hi, you may be interested in this
http://arnholm.org/a-reverse-3d-printing-experiment/

Where I convert a 2d image to a printable 3d object. The description is 
fairly detailed. Observe that there are different forms of DXF.

Also, this relates to the same issue, but possibly closer to what you 
want
http://arnholm.org/angelscript-csg-part-3/

Carsten Arnholm


From bioinformatics at gringene.org  Wed Feb 10 03:51:27 2016
From: bioinformatics at gringene.org (David Eccles (gringer))
Date: Wed, 10 Feb 2016 01:51:27 -0700 (MST)
Subject: [OpenSCAD] converting svg files from Inkscape to scad files to
	stl files
In-Reply-To: <1455067883681-16084.post@n5.nabble.com>
References: <1455067883681-16084.post@n5.nabble.com>
Message-ID: <1455094287418-16095.post@n5.nabble.com>

Another option is to save the files as a *small* png image, then use ImageJ
to convert the image to a text image (File->Save As->Text Image). This will
convert greyscale values into numbers, which can be read in by openscad as a
height map. Things are improved by converting to greyscale (8-bit colour)
first, then applying a gaussian blur, but the example image you've provided
doesn't really work in its current form as a height/bump map:

<http://forum.openscad.org/file/n16095/4EE5_bumpmap.png> 

I've had more success in doing this from light-field microscope images,
although it still takes a bit of work to get things working properly:

http://www.thingiverse.com/thing:897505



--
View this message in context: http://forum.openscad.org/converting-svg-files-from-Inkscape-to-scad-files-to-stl-files-tp16084p16095.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Wed Feb 10 18:38:40 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Wed, 10 Feb 2016 16:38:40 -0700 (MST)
Subject: [OpenSCAD] Problem after installations
In-Reply-To: <1455140870423-16097.post@n5.nabble.com>
References: <1455140870423-16097.post@n5.nabble.com>
Message-ID: <1455147520643-16098.post@n5.nabble.com>

Hi,
Welcome to the forum. Your post is still flagged as "This post has NOT been
accepted by the mailing list yet", so nobody gets it unless they look. 
You need to subscribe to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.

Re your issue. That looks like your graphics driver, try updating it.

What version of OpenSCAD and 32 or 64 bit?

If the driver update doesn't help please post the info in Help/Library_Info.







-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Problem-after-installations-tp16097p16098.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From adamtimm1 at msn.com  Wed Feb 10 22:43:11 2016
From: adamtimm1 at msn.com (Adam)
Date: Wed, 10 Feb 2016 21:43:11 -0600
Subject: [OpenSCAD] Problem after installations
In-Reply-To: <1455140870423-16097.post@n5.nabble.com>
	<1455147520643-16098.post@n5.nabble.com>
References: <1455140870423-16097.post@n5.nabble.com>
	<1455147520643-16098.post@n5.nabble.com>
Message-ID: <COL130-DS83B2A5868AEFB2A2710E3E0A80@phx.gbl>

   
Thank you for the reply Michael.  I have tried to update the graphics driver for my graphics card but am getting a message that says there is no NVidiea update for Windows 10 yet.  I may have to put in a new card as I want 3D viewing capablity anyway.  I mean I can see graphic representations but if I use a pair of 3D glasses I can't.  

 

There is an instructable that shows how to make a cell phone screen 3d and I think it would apply well to a vid screen.  Just thinking with my fingers.

Adam


----- Original Message ----- 

From: MichaelAtOz<mailto:oz.at.michael at gmail.com> 

To: discuss at lists.openscad.org<mailto:discuss at lists.openscad.org> 

Sent: Wednesday, February 10, 2016 5:38 PM

Subject: Re: [OpenSCAD] Problem after installations



Hi,
Welcome to the forum. Your post is still flagged as "This post has NOT been
accepted by the mailing list yet", so nobody gets it unless they look. 
You need to subscribe to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.

Re your issue. That looks like your graphics driver, try updating it.

What version of OpenSCAD and 32 or 64 bit?

If the driver update doesn't help please post the info in Help/Library_Info.







-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Problem-after-installations-tp16097p16098.html
Sent from the OpenSCAD mailing list archive at Nabble.com.

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160210/e25e0c8a/attachment.html>

From adamtimm1 at msn.com  Wed Feb 10 22:49:43 2016
From: adamtimm1 at msn.com (Adam)
Date: Wed, 10 Feb 2016 21:49:43 -0600
Subject: [OpenSCAD] converting svg files from Inkscape to scad files
	tostl files
In-Reply-To: <1455067883681-16084.post@n5.nabble.com>
	<1455094287418-16095.post@n5.nabble.com>
References: <1455067883681-16084.post@n5.nabble.com>
	<1455094287418-16095.post@n5.nabble.com>
Message-ID: <COL130-DS149D3BA0810484F65FFE79E0A80@phx.gbl>

   
Absolutely cool suggestion.  I will check them out.


----- Original Message ----- 

From: David Eccles (gringer)<mailto:bioinformatics at gringene.org> 

To: discuss at lists.openscad.org<mailto:discuss at lists.openscad.org> 

Sent: Wednesday, February 10, 2016 2:51 AM

Subject: Re: [OpenSCAD] converting svg files from Inkscape to scad files tostl files



Another option is to save the files as a *small* png image, then use ImageJ
to convert the image to a text image (File->Save As->Text Image). This will
convert greyscale values into numbers, which can be read in by openscad as a
height map. Things are improved by converting to greyscale (8-bit colour)
first, then applying a gaussian blur, but the example image you've provided
doesn't really work in its current form as a height/bump map:

<http://forum.openscad.org/file/n16095/4EE5_bumpmap.png> 

I've had more success in doing this from light-field microscope images,
although it still takes a bit of work to get things working properly:

http://www.thingiverse.com/thing:897505



--
View this message in context: http://forum.openscad.org/converting-svg-files-from-Inkscape-to-scad-files-to-stl-files-tp16084p16095.html
Sent from the OpenSCAD mailing list archive at Nabble.com.

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160210/0d69b82d/attachment.html>

From adamtimm1 at msn.com  Wed Feb 10 22:50:42 2016
From: adamtimm1 at msn.com (Adam)
Date: Wed, 10 Feb 2016 21:50:42 -0600
Subject: [OpenSCAD] converting svg files from Inkscape to scad files to
	stl files
In-Reply-To: <1455067883681-16084.post@n5.nabble.com>
	<4239c7bdac290ecfcc24ed35cb4874aa@arnholm.org>
References: <1455067883681-16084.post@n5.nabble.com>
	<4239c7bdac290ecfcc24ed35cb4874aa@arnholm.org>
Message-ID: <COL130-DS14BBCBE9A6F7347CE2C586E0A80@phx.gbl>

   
Fabulous Carsten!  Thank you!


----- Original Message ----- 

From: arnholm at arnholm.org<mailto:arnholm at arnholm.org> 

To: OpenSCAD general discussion<mailto:discuss at lists.openscad.org> 

Sent: Wednesday, February 10, 2016 2:46 AM

Subject: Re: [OpenSCAD] converting svg files from Inkscape to scad files to stl files



On 2016-02-10 02:31, adamtimm1 wrote:
> I am a photographer and an artist.  I want to create 3D images from my
> photos and from artwork so that the blind can touch an image and "see 
> it."
> That is* all *I want to do. I did it once through another venue.

Hi, you may be interested in this
http://arnholm.org/a-reverse-3d-printing-experiment/

Where I convert a 2d image to a printable 3d object. The description is 
fairly detailed. Observe that there are different forms of DXF.

Also, this relates to the same issue, but possibly closer to what you 
want
http://arnholm.org/angelscript-csg-part-3/

Carsten Arnholm

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160210/cd9ce729/attachment.html>

From adamtimm1 at msn.com  Wed Feb 10 22:56:28 2016
From: adamtimm1 at msn.com (Adam)
Date: Wed, 10 Feb 2016 21:56:28 -0600
Subject: [OpenSCAD] converting svg files from Inkscape to scad
	filestostl files
In-Reply-To: <1455067883681-16084.post@n5.nabble.com><COL130-DS1128291508D1673C75F842E0D70@phx.gbl>
	<1455082757921-16093.post@n5.nabble.com>
References: <1455067883681-16084.post@n5.nabble.com><COL130-DS1128291508D1673C75F842E0D70@phx.gbl>
	<1455082757921-16093.post@n5.nabble.com>
Message-ID: <COL130-DS27B235CAFC6549A4394F03E0A80@phx.gbl>

   
And to  you my friend!  

 

Thank you so much for your detailed description.  I am getting wonderful feedback.

 

I am on the FreeCad forum and one of their moderators ran a paragraph rant about how stupid my questions were/are.  I responded that one cannot learn if they think their questions are too stupid to be asked.

 

I feel better.

 

Best,

Adam


----- Original Message ----- 

From: Neon22<mailto:mschafer at wireframe.biz> 

To: discuss at lists.openscad.org<mailto:discuss at lists.openscad.org> 

Sent: Tuesday, February 09, 2016 11:39 PM

Subject: Re: [OpenSCAD] converting svg files from Inkscape to scad filestostl files



ok thanks for the detail. A couple of things first.

1. Regrettably changing a raster file to a vector file cannot be done by
just changing the file extension. That would be like changing a car to an
airplane by swapping the gas caps over. While they are both forms of
transport, they do different things. So there is no way it'll ever be that
simple. Sorry.

2. Your image is going to need to be in several layers. One for each of the
contour colors you can see in your image. Maybe 8 or more. Oh yes - as you
can see (way below), the image needs a bit of editing and tidying at the
borders before you begin to get a good result and no cruft at the edges.

So things to try:
1. You really should look at lithopanes. The author solved an interesting
problem and its worth considering if you can use it for what you want.
The live customiser online version cannot use really big files. But if you
download the scad then you can use much bigger images.
Try it:
   - http://www.thingiverse.com/thing:74322
   - http://www.thingiverse.com/search?q=lithopane&sa=

2. I'm sorry for your troubles with Inkscape.
You need 0.91. You also need to download the extension (which what inkscape
calls plugins) and put it in the right directory. If you're on windows
that's %APPDATA% then go looking for the inkscape/extensions folder.
 - you really should use the zip file from here:
http://www.thingiverse.com/thing:1065500/#files
 - unpack it into that extensions folder
    - http://www.thingiverse.com/thing:25036
    - if you unpack it then it should appear on that specific menu - when
you restart inkscape.

The instructable you reference is making a simple black and white one-layer
shape. Your image looks like its maybe > 8 layers.
When you split your image into 8 layers - using the Trace_Bitmap tool -
you'll need to have these settings:
 - choose colors,
 - 8 layers (or however many you need)
 - stack scans off
 - remove_background off (but you can play with this and the previous
option)
 - smooth on (optional)
<http://forum.openscad.org/file/n16093/bitmap_001315.png> 
Then export using the extension (must be v8). force line output must be off.
Then open in openscad and be disappointed to see a low cube....

But wait....
at the end of the file will be 8 (or whatever you chose) poly_path
statements.
You can toggle visibiility of these on and off using the // comment operator
to check each shape is there.

Anyway - if you translate each one away from the next one (by whatever
height you choose) then you'll end up with a stacked scan like this:
<http://forum.openscad.org/file/n16093/profile_001316.png> 
 - now they won't come in in the exact order you need. You'll have to swap
them round until they are in correct height order.

The following numbers won't match yours at all but see what I'm doing with
the translates in Z... ?
// The shapes
poly_path4313(height, width);
translate([0,0,-height])
    poly_path4319(height, width);
translate([0,0,-height*2])
    poly_path4311(height, width);
translate([0,0,-height*3])
    poly_path4315(height, width);
translate([0,0,-height*4])
    poly_path4321(height, width);
translate([0,0,-height*5])
    poly_path4317(height, width);
translate([0,0,-height*6])
    poly_path4309(height, width);
translate([0,0,-height*7])
    poly_path4307(height, width);

Try again
Cheers...



--
View this message in context: http://forum.openscad.org/converting-svg-files-from-Inkscape-to-scad-files-to-stl-files-tp16084p16093.html
Sent from the OpenSCAD mailing list archive at Nabble.com.

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160210/04393d4e/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Emoticon2.gif
Type: image/gif
Size: 258 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160210/04393d4e/attachment.gif>

From adamtimm1 at msn.com  Wed Feb 10 23:11:51 2016
From: adamtimm1 at msn.com (Adam)
Date: Wed, 10 Feb 2016 22:11:51 -0600
Subject: [OpenSCAD] converting svg files from Inkscape to scad
	filestostl files
In-Reply-To: <1455067883681-16084.post@n5.nabble.com><378B1508-9FD9-4209-95A8-80CECDD9797B@gmail.com><COL130-DS1BDBFFC155967791C1EFBE0D70@phx.gbl>
	<CANQ1j_s8xibHJwkuzho-L=3nkA=Oiy0RuRpAmp+vWH6sL_uvrQ@mail.gmail.com>
References: <1455067883681-16084.post@n5.nabble.com><378B1508-9FD9-4209-95A8-80CECDD9797B@gmail.com><COL130-DS1BDBFFC155967791C1EFBE0D70@phx.gbl>
	<CANQ1j_s8xibHJwkuzho-L=3nkA=Oiy0RuRpAmp+vWH6sL_uvrQ@mail.gmail.com>
Message-ID: <COL130-DS697F625D56A8D0DAAE42BE0A80@phx.gbl>

   
Thank you Laura.  As I said my goal is about making a textured topology of a 2D image.  I want people to "feel" the lion when they cannot see.

 

Think of yourself as blind.  How would anyone describe Van Gough's Starry Night to you?  Maybe, if it could be touched.  That is my goal.

 

Have you ever seen a Monet up close?  I did at the Denver Art Museum.  I got so close I was surprised that I did not end up in trouble with security.  I could see the brush marks of Monet himself, (he uses check marks) because I have eyes.  Who can touch such a masterpiece and how can you define what you really cannot see?  ABS plastic can stand up to a lot of rough use and a new image can be printed again when needed.

 

Additionally I have sketches of feet of women I know.  I want to print shoes that will exactly fit a womans foot-no more scrunching into a "cute" shoe that does not fit.  No sending your foot to an Italian shoe maker.  Taulman 3D has a new filament that would work with that.  It's called PCPTE.

 


----- Original Message ----- 

From: Laura Taalman<mailto:laurataalman at gmail.com> 

To: OpenSCAD general discussion<mailto:discuss at lists.openscad.org> 

Sent: Tuesday, February 09, 2016 11:10 PM

Subject: Re: [OpenSCAD] converting svg files from Inkscape to scad filestostl files




Haha, no, not related to Taulman, but that is a neat coincidence. 



Tinkercad is indeed only good for simple things, too bad that was not enough!  My next-easiest quick-fix probably-too-simple suggestion is to try to use the Thingiverse Customizer for lithopanes: http://www.thingiverse.com/thing:74322<http://www.thingiverse.com/thing:74322> (press "Open in Customizer"). It works well but it is limited in what it can do since it is for the specific purpose of making lithopanes. Might work for what you want to do, though. You can also select "View Source" when in the Customizer, and you'll see the OpenSCAD code that is used; maybe you can extend or modify it to suit your purposes.









On Tue, Feb 9, 2016 at 11:51 PM, Adam <adamtimm1 at msn.com<mailto:adamtimm1 at msn.com>> wrote:

 


Thank you Laura.  Are you related to Taulman filments?

I tried Tinkercad out and it only works with svg and stl files.  It also did not give me the topography that I wanted rather just a bunch of dots all over the place and in 2D no matter how much I elevated.  Messy!  In short not powerful enough.

 

I use FreeCad but don't know how to get it to give me what I want.  I printed this lion once and got some topography and want to do it again but better.  I want people to be able to touch the image and get a sense of what it looks like.

 

Adam


----- Original Message ----- 

From: Laura Taalman<mailto:laurataalman at gmail.com> 

To: OpenSCAD general discussion<mailto:discuss at lists.openscad.org> 

Sent: Tuesday, February 09, 2016 9:23 PM

Subject: Re: [OpenSCAD] converting svg files from Inkscape to scad files tostl files



 


Maybe this is too simple a solution, but maybe not... If you really don't need openscad functionality beyond extruding a 2D image, then you could try using tinkercad instead. Here's instructions for how to do that: http://www.thingiverse.com/thing:1031735<http://www.thingiverse.com/thing:1031735>

----- 

Laura Taalman

educ.jmu.edu/~taalmala<http://educ.jmu.edu/~taalmala>

www.mathgrrl.com<http://www.mathgrrl.com/>


On Feb 9, 2016, at 8:31 PM, adamtimm1 <adamtimm1 at msn.com<mailto:adamtimm1 at msn.com>> wrote:




I hope I do not offend anyone with this request or my stupidity.  This was
supposed to be a simple "thing."

>From an "instructable" and a "Thing" in Thingiverse (
http://www.instructables.com/id/Convert-any-2D-image-to-a-3D-object-using-OpenSCAD/<http://www.instructables.com/id/Convert-any-2D-image-to-a-3D-object-using-OpenSCAD/> 
) the instructions said that I could import a 2D jpeg into Inkscape, covert
it into an svg file, click Path>Object to Path  then click extensions

Paths2openscad.  When I opened openscad I was supposed to be able to easily

convert the file to an extruded stl that I could print on my 3D printer. 
REally??  I have been working on it for 2 days.

I am a photographer and an artist.  I want to create 3D images from my
photos and from artwork so that the blind can touch an image and "see it." 
That is* all *I want to do. I did it once through another venue.

I did drop a "dxf" file onto the command line but I haven't the foggiest how
to implement it.  The first time I did it I got a message saying I had
dropped an invalid dxf file onto the command line.

I am told that I have to "correctly escape the string." How do I do that?  I
am totally overwhelmed with things I have to do at the moment and I do not
want more.  I am at a point where everything I do takes me further afield
from my goals.  I know that there is a manual but for the little thing I am
attempting to do I only need a couple of instructions.  I have no intention
of doing any greater things with SCAD.  It is a task I will repeat many
times until something better/easier comes along.

Could someone please tell me how to import the dxf file I want, extrude it
then save it as an STL?  I was thinking I would get an  "import" button, but
noooo!

Can/would someone please walk me through this?



--
View this message in context: http://forum.openscad.org/converting-svg-files-from-Inkscape-to-scad-files-to-stl-files-tp16084.html<http://forum.openscad.org/converting-svg-files-from-Inkscape-to-scad-files-to-stl-files-tp16084.html>
Sent from the OpenSCAD mailing list archive at Nabble.com<http://nabble.com/>.

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org<mailto:Discuss at lists.openscad.org>
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org<http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org>
_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org<mailto:Discuss at lists.openscad.org>
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org<http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org>

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org<mailto:Discuss at lists.openscad.org>
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org<http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org>






-- 











Dr. Laura Taalman 

www.mathgrrl.com/hacktastic<http://www.mathgrrl.com/hacktastic> + educ.jmu.edu/~taalmala<http://educ.jmu.edu/~taalmala> + @mathgrrl<http://www.twitter.com/mathgrrl>

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160210/a6f1bd22/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 416E.jpg
Type: image/jpeg
Size: 7885 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160210/a6f1bd22/attachment.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 4EE5.jpg
Type: image/jpeg
Size: 10172 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160210/a6f1bd22/attachment-0001.jpg>

From johnmdanskin at gmail.com  Thu Feb 11 12:22:50 2016
From: johnmdanskin at gmail.com (johnmdanskin)
Date: Thu, 11 Feb 2016 10:22:50 -0700 (MST)
Subject: [OpenSCAD] Problem after installations
In-Reply-To: <COL130-DS83B2A5868AEFB2A2710E3E0A80@phx.gbl>
References: <1455140870423-16097.post@n5.nabble.com>
	<COL130-DS83B2A5868AEFB2A2710E3E0A80@phx.gbl>
Message-ID: <1455211370325-16104.post@n5.nabble.com>


Note: aticfx64.dll is part of the ati driver, not the nvidia driver. ATI
might have an update. 
If openscad is calling the ati driver to drive an nvidia card, you might
want to try de-installing the ATI drivers and reinstalling the NVIDIA
drivers. 

There are forums at www.nvidia.com that can help you with this kind of
stuff. NVIDIA customer support will assist even if you have an evil ATI
card, but ATI might have better support for ATI cards.

I'd love to help myself, but although I know how the hardware works from the
inside out, I do not know much about how it works from the outside in.

jdanskin at nvidia.com  :)

>>Fault Module Name:	aticfx64.dll 
...
>>I have tried to update the graphics driver for my graphics card but am
getting a message that says there is no NVidiea update for Windows 10 yet.





--
View this message in context: http://forum.openscad.org/Problem-after-installations-tp16097p16104.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From stempeldergeschichte at googlemail.com  Thu Feb 11 17:07:08 2016
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Thu, 11 Feb 2016 23:07:08 +0100
Subject: [OpenSCAD] converting svg files from Inkscape to scad
	filestostl files
In-Reply-To: <COL130-DS697F625D56A8D0DAAE42BE0A80@phx.gbl>
References: <1455067883681-16084.post@n5.nabble.com>
	<378B1508-9FD9-4209-95A8-80CECDD9797B@gmail.com>
	<COL130-DS1BDBFFC155967791C1EFBE0D70@phx.gbl>
	<CANQ1j_s8xibHJwkuzho-L=3nkA=Oiy0RuRpAmp+vWH6sL_uvrQ@mail.gmail.com>
	<COL130-DS697F625D56A8D0DAAE42BE0A80@phx.gbl>
Message-ID: <CAJgOqADNrgBC8C79ituiremEctY7kOOwb=oA08cf7uh8fuj0Cg@mail.gmail.com>

A few thoughts about 3d.

If U want to let them "see" a lion, than print the lion in 3d.

Start with black and white images, better even images that are only full
black and full white.

Think about what lightning U need.
One hard light from the side can through a hard shadow that defines  a
shape.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160211/9c5ee02a/attachment.html>

From bstajcar at iinet.net.au  Thu Feb 11 18:33:21 2016
From: bstajcar at iinet.net.au (Bojan)
Date: Thu, 11 Feb 2016 16:33:21 -0700 (MST)
Subject: [OpenSCAD] Problem after installations
In-Reply-To: <1455147520643-16098.post@n5.nabble.com>
References: <1455140870423-16097.post@n5.nabble.com>
	<1455147520643-16098.post@n5.nabble.com>
Message-ID: <1455233601556-16106.post@n5.nabble.com>

I tried to reistall video driver, but Windows decided I have the latest.
So.. OpenSCAD (both 64 and 32 versions) doesn't work on my machine.


 



--
View this message in context: http://forum.openscad.org/Problem-after-installations-tp16097p16106.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Fri Feb 12 21:08:39 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 12 Feb 2016 19:08:39 -0700 (MST)
Subject: [OpenSCAD] Problem after installations
In-Reply-To: <1455233601556-16106.post@n5.nabble.com>
References: <1455140870423-16097.post@n5.nabble.com>
	<1455147520643-16098.post@n5.nabble.com>
	<1455233601556-16106.post@n5.nabble.com>
Message-ID: <1455329319125-16107.post@n5.nabble.com>

Bojan wrote
> I tried to reistall video driver, but Windows decided I have the latest.
> So.. OpenSCAD (both 64 and 32 versions) doesn't work on my machine.

So I presume Win 7 64 bit.

> Fault Module Name: aticfx64.dll Fault Module Version: 8.17.10.1230 

I'm no expert, but that version looks years old.
Have a look  here
<http://support.amd.com/en-us/download/desktop?os=Windows+7+-+64>  .



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Problem-after-installations-tp16097p16107.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From adamtimm1 at msn.com  Sat Feb 13 00:01:29 2016
From: adamtimm1 at msn.com (Adam)
Date: Fri, 12 Feb 2016 23:01:29 -0600
Subject: [OpenSCAD] Problem after installations
In-Reply-To: <1455140870423-16097.post@n5.nabble.com><1455147520643-16098.post@n5.nabble.com><1455233601556-16106.post@n5.nabble.com>
	<1455329319125-16107.post@n5.nabble.com>
References: <1455140870423-16097.post@n5.nabble.com><1455147520643-16098.post@n5.nabble.com><1455233601556-16106.post@n5.nabble.com>
	<1455329319125-16107.post@n5.nabble.com>
Message-ID: <COL130-DS2050DF1CF01318883859FE0AA0@phx.gbl>

   
Win 10 64 bit on an AMD  quad phenom I build myself. 


----- Original Message ----- 

From: MichaelAtOz<mailto:oz.at.michael at gmail.com> 

To: discuss at lists.openscad.org<mailto:discuss at lists.openscad.org> 

Sent: Friday, February 12, 2016 8:08 PM

Subject: Re: [OpenSCAD] Problem after installations



Bojan wrote
> I tried to reistall video driver, but Windows decided I have the latest.
> So.. OpenSCAD (both 64 and 32 versions) doesn't work on my machine.

So I presume Win 7 64 bit.

> Fault Module Name: aticfx64.dll Fault Module Version: 8.17.10.1230 

I'm no expert, but that version looks years old.
Have a look  here
<http://support.amd.com/en-us/download/desktop?os=Windows+7+-+64>  .



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Problem-after-installations-tp16097p16107.html
Sent from the OpenSCAD mailing list archive at Nabble.com.

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160212/7068febd/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Emoticon2.gif
Type: image/gif
Size: 258 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160212/7068febd/attachment.gif>

From adamtimm1 at msn.com  Sat Feb 13 00:03:38 2016
From: adamtimm1 at msn.com (Adam)
Date: Fri, 12 Feb 2016 23:03:38 -0600
Subject: [OpenSCAD] Problem after installations
In-Reply-To: <1455140870423-16097.post@n5.nabble.com><1455147520643-16098.post@n5.nabble.com><1455233601556-16106.post@n5.nabble.com>
	<1455329319125-16107.post@n5.nabble.com>
References: <1455140870423-16097.post@n5.nabble.com><1455147520643-16098.post@n5.nabble.com><1455233601556-16106.post@n5.nabble.com>
	<1455329319125-16107.post@n5.nabble.com>
Message-ID: <COL130-DS92641558F63A42AA14E0FE0AA0@phx.gbl>

   
Win 10 and I installed it in Sept.  I like it because it mimics the look and feel of older OS's but has a few more perks.


----- Original Message ----- 

From: MichaelAtOz<mailto:oz.at.michael at gmail.com> 

To: discuss at lists.openscad.org<mailto:discuss at lists.openscad.org> 

Sent: Friday, February 12, 2016 8:08 PM

Subject: Re: [OpenSCAD] Problem after installations



Bojan wrote
> I tried to reistall video driver, but Windows decided I have the latest.
> So.. OpenSCAD (both 64 and 32 versions) doesn't work on my machine.

So I presume Win 7 64 bit.

> Fault Module Name: aticfx64.dll Fault Module Version: 8.17.10.1230 

I'm no expert, but that version looks years old.
Have a look  here
<http://support.amd.com/en-us/download/desktop?os=Windows+7+-+64>  .



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Problem-after-installations-tp16097p16107.html
Sent from the OpenSCAD mailing list archive at Nabble.com.

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160212/a3d5af86/attachment.html>

From oz.at.michael at gmail.com  Sat Feb 13 05:21:08 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 13 Feb 2016 03:21:08 -0700 (MST)
Subject: [OpenSCAD] Problem after installations
In-Reply-To: <COL130-DS92641558F63A42AA14E0FE0AA0@phx.gbl>
References: <1455140870423-16097.post@n5.nabble.com>
	<COL130-DS92641558F63A42AA14E0FE0AA0@phx.gbl>
Message-ID: <1455358868847-16110.post@n5.nabble.com>

ADAM,

I DON'T CARE because it does NOT relate to this issue.

This thread is about Bojan's issue.

Please STOP posting in threads that do not apply to you!





-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Problem-after-installations-tp16097p16110.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From db5765 at outlook.com  Sat Feb 13 10:39:17 2016
From: db5765 at outlook.com (Trygon)
Date: Sat, 13 Feb 2016 08:39:17 -0700 (MST)
Subject: [OpenSCAD] Determining what data type a variable is holding
Message-ID: <1455377957307-16111.post@n5.nabble.com>

Hi All,

I want to determine what type of data is passed into a module through a
single variable, i.e. whether it is a number, string or vector:

foo(5);
foo("hello");
foo([0,1,2]);

I came up with the following:

module foo(a){
    if(a==undef) echo("undefined");
        else if(len(a)==0) echo("zero length string or empty vector");
        else if(a[0]==undef) echo("number");
        else if(a[0]+0==undef) echo("string");
        else echo("vector");
}

Questions:
1) Is there a better way?
2) Is this the only way (at present)?
2) Does this method use undocumented language "features" that may change in
future releases? (... and thus break this code)

Thanks,
Trygon




--
View this message in context: http://forum.openscad.org/Determining-what-data-type-a-variable-is-holding-tp16111.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sat Feb 13 10:58:52 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sat, 13 Feb 2016 16:58:52 +0100
Subject: [OpenSCAD] Determining what data type a variable is holding
In-Reply-To: <1455377957307-16111.post@n5.nabble.com>
References: <1455377957307-16111.post@n5.nabble.com>
Message-ID: <56BF52BC.9000502@gmx.de>

On 02/13/2016 04:39 PM, Trygon wrote:
> I want to determine what type of data is passed into a module through a
> single variable, i.e. whether it is a number, string or vector:
> 
Just curious... why is that needed?

> Questions:
> 1) Is there a better way?
>
No, I don't think there's a good way right now, as there is no "official"
way to determine the type.

Well, in my opinion the better way would be to not use that type
detection at all, but I guess that answer was not in scope of the
question...

> 2) Is this the only way (at present)?
>
There might be variations, but I'd tend to say yes.

> 2) Does this method use undocumented language "features" that may
> change in future releases? (... and thus break this code)
> 
Yes. It tries to infer information based on assumptions that will
break easily by adding new features. Normally new features are not
a big deal as they can't be used in existing code (there are some
exceptions like naming clashes).
So depending on how this code is actually used, it may be very
prone to break with future releases.

It's also incomplete as it ignores ranges. Calling foo([3:4]) returns
"vector" (which basically shows the point I tried to make above).

ciao,
  Torsten.



From db5765 at outlook.com  Sat Feb 13 12:41:01 2016
From: db5765 at outlook.com (Trygon)
Date: Sat, 13 Feb 2016 10:41:01 -0700 (MST)
Subject: [OpenSCAD] Determining what data type a variable is holding
In-Reply-To: <56BF52BC.9000502@gmx.de>
References: <1455377957307-16111.post@n5.nabble.com> <56BF52BC.9000502@gmx.de>
Message-ID: <1455385261943-16113.post@n5.nabble.com>

Thanks Torsten, I didn't know if I had missed something obvious.

"Just curious... why is that needed?":

I have an idea for a module that will produce a specific object from a
family of related objects based on a description passed to it.  The object
description "language" is a vector containing a variable length sequence of
numbers, vectors and strings.  The syntax I have arrived at for this simple
description language does not allow the "interpreter" to determine in
advance what the next element will be, hence the need to determine the data
type of a variable.

This probably shouldn't be scripted in OpenSCAD... ;-)

Cheers,
Trygon




--
View this message in context: http://forum.openscad.org/Determining-what-data-type-a-variable-is-holding-tp16111p16113.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Sat Feb 13 12:43:49 2016
From: doug at moens.org (doug moen)
Date: Sat, 13 Feb 2016 12:43:49 -0500
Subject: [OpenSCAD] Determining what data type a variable is holding
In-Reply-To: <1455377957307-16111.post@n5.nabble.com>
References: <1455377957307-16111.post@n5.nabble.com>
Message-ID: <CAGV6i+NW_yZvvbn_=JzLKdEct9JXC4sxu0gd4DkpKN34UrArdQ@mail.gmail.com>

There is no better way, right now. And yeah, lots of people write code like
this, based on my own observations.

If you write code like this, then it will break the feature being discussed
here:
https://github.com/openscad/openscad/issues/1574#issuecomment-177988896

That's okay, it just means we'll need a migration strategy.

In OpenSCAD2, I've dealt with this problem by providing functions that test
the type of a value, and return true or false. The OpenSCAD2 API doesn't
quite fit into OpenSCAD right now, so I won't show that, but based on that
design, I'd recommend we add the following functions to OpenSCAD:
* is_bool
* is_int
* is_num
* is_string
* is_list

In OpenSCAD2, ranges are not distinguishable from lists at the user level
(although the internal representation is different). [1:4] is
indistinguishable from [1,2,3,4], and you can even use range notation as
part of the extended list comprehension syntax that Torsten recently
implemented. Eg, [1,1:3,5,8] == [1,1,2,3,5,8]. That's why I didn't propose
an is_range test.
<https://github.com/openscad/openscad/issues/1574#issuecomment-183660896>

On 13 February 2016 at 10:39, Trygon <db5765 at outlook.com> wrote:

> Hi All,
>
> I want to determine what type of data is passed into a module through a
> single variable, i.e. whether it is a number, string or vector:
>
> foo(5);
> foo("hello");
> foo([0,1,2]);
>
> I came up with the following:
>
> module foo(a){
>     if(a==undef) echo("undefined");
>         else if(len(a)==0) echo("zero length string or empty vector");
>         else if(a[0]==undef) echo("number");
>         else if(a[0]+0==undef) echo("string");
>         else echo("vector");
> }
>
> Questions:
> 1) Is there a better way?
> 2) Is this the only way (at present)?
> 2) Does this method use undocumented language "features" that may change in
> future releases? (... and thus break this code)
>
> Thanks,
> Trygon
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Determining-what-data-type-a-variable-is-holding-tp16111.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160213/4ca8b879/attachment.html>

From Torsten.Paul at gmx.de  Sat Feb 13 12:58:50 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sat, 13 Feb 2016 18:58:50 +0100
Subject: [OpenSCAD] Determining what data type a variable is holding
In-Reply-To: <1455385261943-16113.post@n5.nabble.com>
References: <1455377957307-16111.post@n5.nabble.com> <56BF52BC.9000502@gmx.de>
	<1455385261943-16113.post@n5.nabble.com>
Message-ID: <56BF6EDA.8000604@gmx.de>

On 02/13/2016 06:41 PM, Trygon wrote:
> This probably shouldn't be scripted in OpenSCAD... ;-)
> 
Well, as always, it's a good idea to consider the implications
and also trying to step back and consider other options.

If you have a clearly defined set of input values and a
single central implementation for the type check, you
should be ok-ish with the detection logic you have right
now.
In case OpenSCAD grows data introspection features later,
you can just swap out the current heuristics with the
official feature.
With OpenSCAD targeted as model description language,
it does lack a number of features needed for general
data processing, it's still interesting to see the
borders tested by clever usage of existing things :-).

ciao,
  Torsten.



From johangjonker at zonnet.nl  Sat Feb 13 16:36:09 2016
From: johangjonker at zonnet.nl (Johan Jonker)
Date: Sat, 13 Feb 2016 14:36:09 -0700 (MST)
Subject: [OpenSCAD] use of for loop in function
Message-ID: <1455399369786-16116.post@n5.nabble.com>

Hello,

I tried to generate an array in a function using a for loop, but it does not
work.
What am I doing wrong.

I tried to do something like this:
The ct function generate a two dimensional vector.

function chamber_(r,rb,h,bt,bb,pc) = [ 
        [0,0],
        [for (i=[1:8]) ct(r,bt*i/16,0,r)],
        [for (i=[1:8]) ct(rb,-bb*i/16,-h-rb,0,1)],
        [-h,0],
        [for (i=[8:1]) ct(rb,bb*i/16,-h-rb,0,1)],
        [for (i=[8:1]) ct(r,bt*i/16,0,r)],
        [0,0],
        ];
		



--
View this message in context: http://forum.openscad.org/use-of-for-loop-in-function-tp16116.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sat Feb 13 16:50:40 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sat, 13 Feb 2016 22:50:40 +0100
Subject: [OpenSCAD] use of for loop in function
In-Reply-To: <1455399369786-16116.post@n5.nabble.com>
References: <1455399369786-16116.post@n5.nabble.com>
Message-ID: <56BFA530.6020300@gmx.de>

You probably need to remove the [ ] around the "for" calls:

p = [
	[ 0, 0 ],
	for (a = [ 1 : 9 ]) [ a, a ],
	[ 10, 10 ],
	for (a = [ 9 : -1 : 1 ]) [ a, a ],
	[ 0, 0 ]
];
	
echo(p);

Also please use the 3 value variant for ranges that decrement
the value, e.g. [ 9 : -1 : 1 ].

Due to backward compatibility, defining [8:1] will NOT produce
the expected order, which is also mentioned in the warning:

DEPRECATED: Using ranges of the form [begin:end] with begin value greater than the end value is deprecated.

ciao,
  Torsten.



From adamtimm1 at msn.com  Sat Feb 13 20:25:32 2016
From: adamtimm1 at msn.com (Adam)
Date: Sat, 13 Feb 2016 19:25:32 -0600
Subject: [OpenSCAD] use of for loop in function
In-Reply-To: <1455399369786-16116.post@n5.nabble.com> <56BFA530.6020300@gmx.de>
References: <1455399369786-16116.post@n5.nabble.com> <56BFA530.6020300@gmx.de>
Message-ID: <COL130-DS2333F146E9953C0EC265DFE0AB0@phx.gbl>

   
Hi Paul,

    Thank you for the info.  

    I am not at all certain what you are talking about because I do not know the language that OpenScad uses.  I am a BASIC and Fortran guy.

    I do understand "For Loops" etc but I need a reference for this language and more I need to understand the algorithm being used.  I am accustomed to "Top Down algorythmic design."


----- Original Message ----- 

From: Torsten Paul<mailto:Torsten.Paul at gmx.de> 

To: discuss at lists.openscad.org<mailto:discuss at lists.openscad.org> 

Sent: Saturday, February 13, 2016 3:50 PM

Subject: Re: [OpenSCAD] use of for loop in function



You probably need to remove the [ ] around the "for" calls:

p = [
[ 0, 0 ],
for (a = [ 1 : 9 ]) [ a, a ],
[ 10, 10 ],
for (a = [ 9 : -1 : 1 ]) [ a, a ],
[ 0, 0 ]
];

echo(p);

Also please use the 3 value variant for ranges that decrement
the value, e.g. [ 9 : -1 : 1 ].

Due to backward compatibility, defining [8:1] will NOT produce
the expected order, which is also mentioned in the warning:

DEPRECATED: Using ranges of the form [begin:end] with begin value greater than the end value is deprecated.

ciao,
  Torsten.


_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160213/a02822f9/attachment.html>

From johangjonker at zonnet.nl  Sun Feb 14 01:59:23 2016
From: johangjonker at zonnet.nl (Johan Jonker)
Date: Sat, 13 Feb 2016 23:59:23 -0700 (MST)
Subject: [OpenSCAD] use of for loop in function
In-Reply-To: <56BFA530.6020300@gmx.de>
References: <1455399369786-16116.post@n5.nabble.com> <56BFA530.6020300@gmx.de>
Message-ID: <1455433163557-16119.post@n5.nabble.com>

Thanks for reacting Torsten,

I made the modificatinos you suggested but get an error indicated after the
for statement when I remove the [].


ERROR: Parser error in line 410: syntax error 
ERROR: Compilation failed! 



--
View this message in context: http://forum.openscad.org/use-of-for-loop-in-function-tp16116p16119.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From johangjonker at zonnet.nl  Sun Feb 14 02:07:15 2016
From: johangjonker at zonnet.nl (Johan Jonker)
Date: Sun, 14 Feb 2016 00:07:15 -0700 (MST)
Subject: [OpenSCAD] use of for loop in function
In-Reply-To: <1455433163557-16119.post@n5.nabble.com>
References: <1455399369786-16116.post@n5.nabble.com> <56BFA530.6020300@gmx.de>
	<1455433163557-16119.post@n5.nabble.com>
Message-ID: <1455433635206-16120.post@n5.nabble.com>

I also tried this one:

function chamber_(r,rb,h,bt,bb,pc) = [ 
        concat([0,0], 
        [for (i=[1:1:8]) ct(r,bt*i/16,0,r)], 
        [for (i=[1:1:8]) ct(rb,-bb*i/16,-h-rb,0,1)], 
        [-h,0], 
        [for (i=[8:-1:1]) ct(rb,bb*i/16,-h-rb,0,1)], 
        [for (i=[8:-1:1]) ct(r,bt*i/16,0,r)], 
        [0,0]) 
        ]; 

It compiles but gives:
WARNING: PolySet has degenerate polygons 



--
View this message in context: http://forum.openscad.org/use-of-for-loop-in-function-tp16116p16120.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From johangjonker at zonnet.nl  Sun Feb 14 02:38:21 2016
From: johangjonker at zonnet.nl (Johan Jonker)
Date: Sun, 14 Feb 2016 00:38:21 -0700 (MST)
Subject: [OpenSCAD] use of for loop in function
In-Reply-To: <1455433635206-16120.post@n5.nabble.com>
References: <1455399369786-16116.post@n5.nabble.com> <56BFA530.6020300@gmx.de>
	<1455433163557-16119.post@n5.nabble.com>
	<1455433635206-16120.post@n5.nabble.com>
Message-ID: <1455435501587-16121.post@n5.nabble.com>

As soon as I combine the [0,0] with the for statement it requires [] around
the for statement to compile.

This
ECHO: [[0, 0], [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0,
0]]]

is the result from this:

echo( newchamber_(0,0,0,0,0,0));
function newchamber_(r,rb,h,bt,bb,pc) = [
        [0,0],
      [for (i=[1:1:8]) ct(r,i*bt/16,0,r)]
];




and this
ECHO: [[0, 0, [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0,
0]]]

from this:
function newchamber_(r,rb,h,bt,bb,pc) = [
        concat([0,0],
      [for (i=[1:1:8]) ct(r,i*bt/16,0,r)])
];



--
View this message in context: http://forum.openscad.org/use-of-for-loop-in-function-tp16116p16121.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From johangjonker at zonnet.nl  Sun Feb 14 03:29:47 2016
From: johangjonker at zonnet.nl (Johan Jonker)
Date: Sun, 14 Feb 2016 01:29:47 -0700 (MST)
Subject: [OpenSCAD] use of for loop in function
In-Reply-To: <1455435501587-16121.post@n5.nabble.com>
References: <1455399369786-16116.post@n5.nabble.com> <56BFA530.6020300@gmx.de>
	<1455433163557-16119.post@n5.nabble.com>
	<1455433635206-16120.post@n5.nabble.com>
	<1455435501587-16121.post@n5.nabble.com>
Message-ID: <1455438587724-16122.post@n5.nabble.com>

I decide to solve it in another way:

function drawroom(i,r,rb,h,bt,bb,pc) =
        (i<= $fn/8)? ct(r,-bt*i/($fn/4),0,r):
        (i<= 3*$fn/8)? csl(r,rb,h,bt,bb, (i-$fn/8)/($fn/4)):
        (i<= 4*$fn/8) ? ct(rb,-bb*(4*$fn/8-i)/($fn/4),-h-rb,0,1):
        (i<= 5*$fn/8) ? ct(rb,bb*(5*$fn/8-i)/($fn/4),-h-rb,0,1):
        (i<= 7*$fn/8) ? csr(r,rb,h,bt,bb, (7*$fn/8-i)/($fn/4)):
        ct(r,bt*(8*$fn/8-i),0,r);

function newchamber_(r,rb,h,bt,bb,pc) = [
      for (i=[0:1:$fn-1]) drawroom(i,r,rb,h,bt,bb,pc)
];

There are still some bugs, but it compiles and it draws.



--
View this message in context: http://forum.openscad.org/use-of-for-loop-in-function-tp16116p16122.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sun Feb 14 03:43:43 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 14 Feb 2016 09:43:43 +0100
Subject: [OpenSCAD] use of for loop in function
In-Reply-To: <1455433163557-16119.post@n5.nabble.com>
References: <1455399369786-16116.post@n5.nabble.com> <56BFA530.6020300@gmx.de>
	<1455433163557-16119.post@n5.nabble.com>
Message-ID: <56C03E3F.6000201@gmx.de>

On 02/14/2016 07:59 AM, Johan Jonker wrote:
> I made the modificatinos you suggested but get an error indicated
> after the for statement when I remove the [].
> 
> ERROR: Parser error in line 410: syntax error 
> ERROR: Compilation failed! 
> 
This feature to have multiple "for" expressions in a single
list is just a couple of days old. If you want to use that,
you'll need the latest snapshot versions, it will not work
with the 2015.03 release.

It is possible to get the same result with the release
version using concat(), e.g.

echo([
	for (a = [0 : 9]) [ a, 0 ],
	for (a = [9 : -1 : 0]) [ a, 1 ],
	[0, 0]
]);

is the same the following statement using concat() in the
release (note that this requires the double [] for the
[0, 0].

echo(concat(
	[ for (a = [0 : 9]) [ a, 0 ] ],
	[ for (a = [9 : -1 : 0]) [ a, 1 ] ],
	[ [0, 0] ]));

ciao,
  Torsten.



From johangjonker at zonnet.nl  Sun Feb 14 06:44:56 2016
From: johangjonker at zonnet.nl (Johan Jonker)
Date: Sun, 14 Feb 2016 04:44:56 -0700 (MST)
Subject: [OpenSCAD] use of for loop in function
In-Reply-To: <56C03E3F.6000201@gmx.de>
References: <1455399369786-16116.post@n5.nabble.com> <56BFA530.6020300@gmx.de>
	<1455433163557-16119.post@n5.nabble.com> <56C03E3F.6000201@gmx.de>
Message-ID: <1455450296259-16124.post@n5.nabble.com>

Ah, good to hear that openscad is evolving!



--
View this message in context: http://forum.openscad.org/use-of-for-loop-in-function-tp16116p16124.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Sun Feb 14 11:54:12 2016
From: runsun at gmail.com (runsun)
Date: Sun, 14 Feb 2016 09:54:12 -0700 (MST)
Subject: [OpenSCAD] Determining what data type a variable is holding
In-Reply-To: <1455377957307-16111.post@n5.nabble.com>
References: <1455377957307-16111.post@n5.nabble.com>
Message-ID: <1455468852655-16126.post@n5.nabble.com>

@Trygon, type detection and casting have been crucial parts of my lib. Here
is how I did it:


> function type(x)= 
> (
>    x==undef?undef
>    : floor(x)==x? "int"
>    : ( abs(x)+1>abs(x)?"float"
>      : str(x)==x?"str"
>      : str(x)=="false"||str(x)=="true"?"bool"
>      : (x[0]==x[0])&&len(x)!=undef? "arr" // range below doesn't have len
>      : let( s=str(x) 
>          , s2= split(slice(s,1,-1)," : ")
>          ) 
>          s[0]=="[" && s[len(s)-1]=="]" 
>          && all( [ for(x=s2) isint(int(x)) ] )?"range"
>         :"unknown"
>     )
> );

This passes all tests below:

>  type ( x )=str ( tested:18 ) (mode:12)
> ------------------------------------------------
> | 0> type([2, 3])= "arr"
> | 1> type([])= "arr"
> | 2> type(-4)= "int"
> | 3> type(0)= "int"
> | 4> type(0.3)= "float"
> | 5> type(-0.3)= "float"
> | 6> type(2e-6)= "float"
> | 7> type(2e3)= "int"
> | 8> type(2e-06)= "float"
> | 9> type(2e+03)= "int"
> | 10> type("a")= "str"
> | 11> type("10")= "str"
> | 12> type(true)= "bool"
> | 13> type(false)= "bool"
> | 14> type([1:2:10])= "range" // New 2015.9.10
> | 15> type([1:1.5:10])= "range" // New 2015.9.10
> | 16> type(undef)= undef
> | 17> type(12345678901234500)= "int" // Bugfix 2015.11.17





-----

$  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ), runscad.py( 1 , 2 , git ), synwrite( 1 , 2 );  $ tips: hash( 1 , 2 ), sweep , var( 1 , 2 ), lerp , animGif , prodVid , precision( 1 , 2 ), xl-control 





--
View this message in context: http://forum.openscad.org/Determining-what-data-type-a-variable-is-holding-tp16111p16126.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From adamtimm1 at msn.com  Sun Feb 14 15:10:00 2016
From: adamtimm1 at msn.com (Adam)
Date: Sun, 14 Feb 2016 14:10:00 -0600
Subject: [OpenSCAD] Determining what data type a variable is holding
In-Reply-To: <1455377957307-16111.post@n5.nabble.com>
	<1455468852655-16126.post@n5.nabble.com>
References: <1455377957307-16111.post@n5.nabble.com>
	<1455468852655-16126.post@n5.nabble.com>
Message-ID: <COL130-DS214F3E72E4999333CC5E87E0AB0@phx.gbl>

   
"Guys"
    First and foremost, thank you for your responses.

    Michael,  I am not posting here deliberately as I am getting flooded with emails that do not apply to my request.    I am not deliberately irritating you.  I am replying out of courtesy. How do I stop getting information about this primitive program where it does not apply to my original post?
     As I said in my original post, I have no idea what language you are using and no idea how to code in it.  

    If you understand my dilema and are sympathetic and willing to help me out I would be greatly appreciative.
    All I wanted to do was to import an InkScape file into OpenScad then covert it to a 3D image, a project which I found on "Instructables" and "Thingiverse."  The author said it was simple and there were users who agreed.  Now my email is being flooded with info about "For" loops and coding instructions which seemingly have nothing to do with my original project.
   The method said that I was supposed to be able to convert the 2D image into a Scad file and import it into OpenScad.  I have followed instructions faithfully and I cannot get InkScape to convert the file or OpenScad to import the image.
   Now I am getting a lot of emails with code and I have no idea what the language is or how to use it inspite of the fact that I can code in 4 different flavors of BASIC and Fortran.  As one who has no clue about the programming language I have no use for "For" Loops even though they are an integral part of Structured BASIC and I do not wish to learn a new programming language as I already am far too sidetracted from my original mission.
    

    As for OpenScad "evolving," I have not seen this level of "throw back" programming since 1985.  One well meaning individual even said that my OS looked like a very old version.  It's Windows 10/64 on a quad phenom.


----- Original Message ----- 

From: runsun<mailto:runsun at gmail.com> 

To: discuss at lists.openscad.org<mailto:discuss at lists.openscad.org> 

Sent: Sunday, February 14, 2016 10:54 AM

Subject: Re: [OpenSCAD] Determining what data type a variable is holding



@Trygon, type detection and casting have been crucial parts of my lib. Here
is how I did it:


> function type(x)= 
> (
>    x==undef?undef
>    : floor(x)==x? "int"
>    : ( abs(x)+1>abs(x)?"float"
>      : str(x)==x?"str"
>      : str(x)=="false"||str(x)=="true"?"bool"
>      : (x[0]==x[0])&&len(x)!=undef? "arr" // range below doesn't have len
>      : let( s=str(x) 
>          , s2= split(slice(s,1,-1)," : ")
>          ) 
>          s[0]=="[" && s[len(s)-1]=="]" 
>          && all( [ for(x=s2) isint(int(x)) ] )?"range"
>         :"unknown"
>     )
> );

This passes all tests below:

>  type ( x )=str ( tested:18 ) (mode:12)
> ------------------------------------------------
> | 0> type([2, 3])= "arr"
> | 1> type([])= "arr"
> | 2> type(-4)= "int"
> | 3> type(0)= "int"
> | 4> type(0.3)= "float"
> | 5> type(-0.3)= "float"
> | 6> type(2e-6)= "float"
> | 7> type(2e3)= "int"
> | 8> type(2e-06)= "float"
> | 9> type(2e+03)= "int"
> | 10> type("a")= "str"
> | 11> type("10")= "str"
> | 12> type(true)= "bool"
> | 13> type(false)= "bool"
> | 14> type([1:2:10])= "range" // New 2015.9.10
> | 15> type([1:1.5:10])= "range" // New 2015.9.10
> | 16> type(undef)= undef
> | 17> type(12345678901234500)= "int" // Bugfix 2015.11.17





-----

$  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ), runscad.py( 1 , 2 , git ), synwrite( 1 , 2 );  $ tips: hash( 1 , 2 ), sweep , var( 1 , 2 ), lerp , animGif , prodVid , precision( 1 , 2 ), xl-control 





--
View this message in context: http://forum.openscad.org/Determining-what-data-type-a-variable-is-holding-tp16111p16126.html
Sent from the OpenSCAD mailing list archive at Nabble.com.

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160214/03db6163/attachment.html>

From runsun at gmail.com  Sun Feb 14 15:47:46 2016
From: runsun at gmail.com (runsun)
Date: Sun, 14 Feb 2016 13:47:46 -0700 (MST)
Subject: [OpenSCAD] Determining what data type a variable is holding
In-Reply-To: <COL130-DS214F3E72E4999333CC5E87E0AB0@phx.gbl>
References: <1455377957307-16111.post@n5.nabble.com>
	<COL130-DS214F3E72E4999333CC5E87E0AB0@phx.gbl>
Message-ID: <1455482866124-16128.post@n5.nabble.com>

adamtimm1 wrote
> I am getting flooded with emails that do not apply to my request.    I am
> not deliberately irritating you.  I am replying out of courtesy. How do I
> stop getting information about this primitive program where it does not
> apply to my original post?

Obviously you've turned on the mail delivery in you account settings. 



-----

$  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ), runscad.py( 1 , 2 , git ), synwrite( 1 , 2 );  $ tips: hash( 1 , 2 ), sweep( 1 , 2 ), var( 1 , 2 ), lerp , animGif , prodVid , precision( 1 , 2 ), xl-control , type 





--
View this message in context: http://forum.openscad.org/Determining-what-data-type-a-variable-is-holding-tp16111p16128.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sun Feb 14 16:10:34 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sun, 14 Feb 2016 14:10:34 -0700 (MST)
Subject: [OpenSCAD] Determining what data type a variable is holding
In-Reply-To: <1455482866124-16128.post@n5.nabble.com>
References: <1455377957307-16111.post@n5.nabble.com>
	<COL130-DS214F3E72E4999333CC5E87E0AB0@phx.gbl>
	<1455482866124-16128.post@n5.nabble.com>
Message-ID: <1455484234734-16129.post@n5.nabble.com>

 removed adam from the mailing list and will explain via PM.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Determining-what-data-type-a-variable-is-holding-tp16111p16129.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sun Feb 14 17:00:36 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sun, 14 Feb 2016 15:00:36 -0700 (MST)
Subject: [OpenSCAD] converting svg files from Inkscape to scad files to
	stl files
In-Reply-To: <1455067883681-16084.post@n5.nabble.com>
References: <1455067883681-16084.post@n5.nabble.com>
Message-ID: <1455487236028-16130.post@n5.nabble.com>

adamtimm1 wrote
> Can/would someone please walk me through this?

Adam,

Did you get the Inkscape plug-in to work as per Neon22's  suggestion
<http://forum.openscad.org/converting-svg-files-from-Inkscape-to-scad-files-to-stl-files-tp16084p16093.html> 
?

Where are you at?

Note for others. Adman just wants a black box, not an intro to how OpenSCAD
can be used.




-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/converting-svg-files-from-Inkscape-to-scad-files-to-stl-files-tp16084p16130.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sun Feb 14 17:53:49 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 14 Feb 2016 23:53:49 +0100
Subject: [OpenSCAD] converting svg files from Inkscape to scad files to
 stl files
In-Reply-To: <1455487236028-16130.post@n5.nabble.com>
References: <1455067883681-16084.post@n5.nabble.com>
	<1455487236028-16130.post@n5.nabble.com>
Message-ID: <56C1057D.3080908@gmx.de>

On 02/14/2016 11:00 PM, MichaelAtOz wrote:
> Note for others. Adman just wants a black box, not an intro to how
> OpenSCAD can be used.
> 
There's an older snapshot version for the potrace branch which would
remove the need to use inkscape and make the conversion from image
to 2D-vector to 3D as simple as:

height = 10;
linear_extrude(height) trace(file = "file.png", threshold = 0.5);

(must be non-transparent PNG image, no other formats supported yet)

http://files.openscad.org/snapshots/OpenSCAD-2015.05.17-x86-64_potrace.zip
http://files.openscad.org/snapshots/OpenSCAD-2015.05.17-x86-64_potrace-Installer.exe

However after the rude words in the last mail, my motivation to
check the state of that snapshot version or even build a newer
one is currently a bit limited.

ciao,
  Torsten.



From d4v1dd at gmail.com  Sun Feb 14 18:17:01 2016
From: d4v1dd at gmail.com (dknell)
Date: Sun, 14 Feb 2016 16:17:01 -0700 (MST)
Subject: [OpenSCAD] polyhedron with cube not valid 2-manifold
Message-ID: <1455491821073-16132.post@n5.nabble.com>

Hello,

I have a simple polyhedron and I'm trying to attach a cube to it. My code is
below.

The preview looks like this:
<http://forum.openscad.org/file/n16132/img1.png> 

The render looks like this:
<http://forum.openscad.org/file/n16132/img2.png> 

If I remove the cube, it renders fine:
<http://forum.openscad.org/file/n16132/img3.png> 

I've read a bunch of posts regarding this subject on the OpenSCAD forums and
a few other places and I can't seem to figure out why my object is not
rendering correctly.

If anyone can shed some light, I'd really appreciate it.

Here is my code:







--
View this message in context: http://forum.openscad.org/polyhedron-with-cube-not-valid-2-manifold-tp16132.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From stempeldergeschichte at googlemail.com  Sun Feb 14 18:39:30 2016
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Mon, 15 Feb 2016 00:39:30 +0100
Subject: [OpenSCAD] polyhedron with cube not valid 2-manifold
In-Reply-To: <1455491821073-16132.post@n5.nabble.com>
References: <1455491821073-16132.post@n5.nabble.com>
Message-ID: <CAJgOqAAUOFv1598XbA=jNtBDF_e9BfATTdXbDMqMhfHPixMT3Q@mail.gmail.com>

Most likely there are wrongly orientated triangles:

Have a look here:
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Primitive_Solids

Let's now see how to fix polyhedrons with badly oriented polygons. When you
select 'Thrown together' from the view menu and *compile* the design (*not*
compile and render!) you will see a preview with the mis-oriented polygons
highlighted. Unfortunately this highlighting is not possible in the OpenCSG
preview mode because it would interfere with the way the OpenCSG preview
mode is implemented.)

Below you can see such a problematic polyhedron, bad triangles are in pink.

2016-02-15 0:17 GMT+01:00 dknell <d4v1dd at gmail.com>:

> Hello,
>
> I have a simple polyhedron and I'm trying to attach a cube to it. My code
> is
> below.
>
> The preview looks like this:
> <http://forum.openscad.org/file/n16132/img1.png>
>
> The render looks like this:
> <http://forum.openscad.org/file/n16132/img2.png>
>
> If I remove the cube, it renders fine:
> <http://forum.openscad.org/file/n16132/img3.png>
>
> I've read a bunch of posts regarding this subject on the OpenSCAD forums
> and
> a few other places and I can't seem to figure out why my object is not
> rendering correctly.
>
> If anyone can shed some light, I'd really appreciate it.
>
> Here is my code:
>
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/polyhedron-with-cube-not-valid-2-manifold-tp16132.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160215/2e7cc4e8/attachment.html>

From Torsten.Paul at gmx.de  Sun Feb 14 18:58:23 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 15 Feb 2016 00:58:23 +0100
Subject: [OpenSCAD] converting svg files from Inkscape to scad files to
 stl files
In-Reply-To: <56C1057D.3080908@gmx.de>
References: <1455067883681-16084.post@n5.nabble.com>
	<1455487236028-16130.post@n5.nabble.com> <56C1057D.3080908@gmx.de>
Message-ID: <56C1149F.4070806@gmx.de>

On 02/14/2016 11:53 PM, Torsten Paul wrote:
> There's an older snapshot version for the potrace branch...
>
Forgot to add the link to the pull request which has an
example screenshot of importing 2 images:

https://github.com/openscad/openscad/pull/1110

ciao,
  Torsten.




From adamtimm1 at msn.com  Sun Feb 14 17:15:28 2016
From: adamtimm1 at msn.com (Adam)
Date: Sun, 14 Feb 2016 16:15:28 -0600
Subject: [OpenSCAD] converting svg files from Inkscape to scadfilestostl
	files
In-Reply-To: <1455067883681-16084.post@n5.nabble.com><378B1508-9FD9-4209-95A8-80CECDD9797B@gmail.com><COL130-DS1BDBFFC155967791C1EFBE0D70@phx.gbl><CANQ1j_s8xibHJwkuzho-L=3nkA=Oiy0RuRpAmp+vWH6sL_uvrQ@mail.gmail.com><COL130-DS697F625D56A8D0DAAE42BE0A80@phx.gbl>
	<CAJgOqADNrgBC8C79ituiremEctY7kOOwb=oA08cf7uh8fuj0Cg@mail.gmail.com>
References: <1455067883681-16084.post@n5.nabble.com><378B1508-9FD9-4209-95A8-80CECDD9797B@gmail.com><COL130-DS1BDBFFC155967791C1EFBE0D70@phx.gbl><CANQ1j_s8xibHJwkuzho-L=3nkA=Oiy0RuRpAmp+vWH6sL_uvrQ@mail.gmail.com><COL130-DS697F625D56A8D0DAAE42BE0A80@phx.gbl>
	<CAJgOqADNrgBC8C79ituiremEctY7kOOwb=oA08cf7uh8fuj0Cg@mail.gmail.com>
Message-ID: <COL130-DS1508A45485915205BAD43FE0AB0@phx.gbl>

   
Thank you Peter, 

 

Per the "Instructables" article I am trying to work from I had not thought about copying an image from a jpg into InkScape, saving the image as an svg or dxf file then importing from InkScape to OpenScad and once in OpenScad converting the image to an STL so that I can print it with my 3D printer.

 

Sorry, could not resist. I am getting posts from threads I did not subscribe to and they are flooding my email.

 

 

What I have found is that in InkScape the "Extensions" > "paths to OpenScad" does not work.  I did not  know how to use the OpenScad "import" function, which the author forgot to mention instructions for, but it is a moot point if I cannot export the file from InkScape .

 

I actually had one of my images converted by a "free" source and was able to print it the way I wanted to.  While not perfect it was pretty cool and I am trying to learn how to do it so I have control over the results.  I have attached the file from Instructables and please see below.  I could use some help if you know how or are of a mind to be merciful.

 

"1. to transform a 2D raster image like a jpg you need to convert it to
vector form, then export it to .scad file
- drop the jpg onto the inkscape canvas (or use File/Import)
- select it and select Path/Trace_Bitmap
  - this will allow you to chose how to threshold it and create one or more
vector layers. 
  - I'm going to assume you want a simple, single level, outline. 
      - Choose "Brightness Cutoff" = 0.5. Hit update to preview and OK to
add to canvas.
  - You will now have an extra object which is a 2D threshholded vectored
version of your jpg image.
  - You can scale it and position it manually. 
      - Use the paper size as a guide and set Default units to mm in
File/Document_Properties.
      - So you can see its actual size when you export to OPENscad
- export it
  - select it and then choose Extensions/Generate_from_path/Paths to
OPENscad
  - it will save into profile.scad in your home directory
Double click it to open in openSCAD.
 - see more details on using it once its there in this thingiverse post
where the latest version of the paths to openscad.py conversion tool is.
    - http://www.thingiverse.com/thing:1065500<http://www.thingiverse.com/thing:1065500>

 

Note: To make a multilevel vectored version of your jpg artwork - check out
inkscape and trace bitmap online for help. basically the same but several
grouped layers.

 

Also the Lithopane idea mentioned by @fred_dot_u is very good one for many
layers but for touch you may need to scale the off-page axis quite a lot.

 

2. Using a 2D dxf file as the source
- just import it or drop it onto the canvas.
- if it won't load and complains about the format in some way - then the dxf
is crafted a bit special to the authoring program.
   - I suggest you load it into some kind of dxf converter and save as dxf
again or svg if it can do it.
- if it appers in inkscape then it should be ok.
- select it and save to openscad as per 1.

 

BTW do you still have the "raincoat?" 

Adam

 

 


----- Original Message ----- 

From: Peter Falke<mailto:stempeldergeschichte at googlemail.com> 

To: OpenSCAD general discussion<mailto:discuss at lists.openscad.org> 

Sent: Thursday, February 11, 2016 4:07 PM

Subject: Re: [OpenSCAD] converting svg files from Inkscape to scadfilestostl files








A few thoughts about 3d.


If U want to let them "see" a lion, than print the lion in 3d.

Start with black and white images, better even images that are only full black and full white.

Think about what lightning U need.
One hard light from the side can through a hard shadow that defines  a shape. 











_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160214/c770c53d/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Emoticon2.gif
Type: image/gif
Size: 258 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160214/c770c53d/attachment.gif>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Emoticon3.gif
Type: image/gif
Size: 1338 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160214/c770c53d/attachment-0001.gif>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Convert-any-2D-image-to-a-3D-object-using-OpenSCAD.pdf
Type: application/pdf
Size: 407651 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160214/c770c53d/attachment.pdf>

From jpmendes54 at gmail.com  Sun Feb 14 19:22:53 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Sun, 14 Feb 2016 17:22:53 -0700 (MST)
Subject: [OpenSCAD] polyhedron with cube not valid 2-manifold
In-Reply-To: <1455491821073-16132.post@n5.nabble.com>
References: <1455491821073-16132.post@n5.nabble.com>
Message-ID: <1455495773388-16135.post@n5.nabble.com>

Hello

You must connect the top vertices of the top triangles. If you check the
part in wireframe mode "F11" you will see what I mean.

jpmendes 



--
View this message in context: http://forum.openscad.org/polyhedron-with-cube-not-valid-2-manifold-tp16132p16135.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jpmendes54 at gmail.com  Sun Feb 14 20:13:37 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Sun, 14 Feb 2016 18:13:37 -0700 (MST)
Subject: [OpenSCAD] polyhedron with cube not valid 2-manifold
In-Reply-To: <CAJgOqAAUOFv1598XbA=jNtBDF_e9BfATTdXbDMqMhfHPixMT3Q@mail.gmail.com>
References: <1455491821073-16132.post@n5.nabble.com>
	<CAJgOqAAUOFv1598XbA=jNtBDF_e9BfATTdXbDMqMhfHPixMT3Q@mail.gmail.com>
Message-ID: <1455498817557-16137.post@n5.nabble.com>


Hey

Check this.

Code:     
 
$fn = 180;

size = 34;

side_a = size * sin(45);
side_b = size * cos(45);
side_c = size * tan(45);
tri_top_0 = [0,0,0];
tri_top_1 = [side_b,0,0];
tri_top_2 = [0,-side_a,0];
tri_bot_3 = [0,0,size];
tri_bot_4 = [side_b,0,size];
tri_bot_5 = [0,-side_a,size];

show_mount_plate = true;

mount_plate_thickness = 5;

union() {
    polyhedron(
      points=[ 
        tri_top_0, tri_top_1, tri_top_2,
        tri_bot_3, tri_bot_4, tri_bot_5,
      ], 
     // faces=[ [0,1,2], [3,4,5], [0,1,4,3], [1,2,5,4], [2,0,3,5] ]
     faces=[ [1,0,2], [3,4,5], [1,2,5,4], [0,3,5,2] , [0,1,4,3 ] ]
     );
   
    if (show_mount_plate == true) {
        translate([0,-side_b,0])
            rotate([0,0,-45])
                cube([mount_plate_thickness, size, size]); 
    }
}


jpmendes




--
View this message in context: http://forum.openscad.org/polyhedron-with-cube-not-valid-2-manifold-tp16132p16137.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From d4v1dd at gmail.com  Sun Feb 14 20:26:03 2016
From: d4v1dd at gmail.com (dknell)
Date: Sun, 14 Feb 2016 18:26:03 -0700 (MST)
Subject: [OpenSCAD] polyhedron with cube not valid 2-manifold
In-Reply-To: <1455498817557-16137.post@n5.nabble.com>
References: <1455491821073-16132.post@n5.nabble.com>
	<CAJgOqAAUOFv1598XbA=jNtBDF_e9BfATTdXbDMqMhfHPixMT3Q@mail.gmail.com>
	<1455498817557-16137.post@n5.nabble.com>
Message-ID: <1455499563497-16138.post@n5.nabble.com>

Thanks for the help jpmendes and peter!

I was just reading about the "Point ordering for faces" in  the manual
<https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Primitive_Solids#polyhedron>  
and it looks like my problem was with the order of points in the bottom
triangle going counter-clockwise instead of clockwise.

Thanks so much for the tips!



--
View this message in context: http://forum.openscad.org/polyhedron-with-cube-not-valid-2-manifold-tp16132p16138.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jpmendes54 at gmail.com  Sun Feb 14 20:34:52 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Sun, 14 Feb 2016 18:34:52 -0700 (MST)
Subject: [OpenSCAD] polyhedron with cube not valid 2-manifold
In-Reply-To: <1455498817557-16137.post@n5.nabble.com>
References: <1455491821073-16132.post@n5.nabble.com>
	<CAJgOqAAUOFv1598XbA=jNtBDF_e9BfATTdXbDMqMhfHPixMT3Q@mail.gmail.com>
	<1455498817557-16137.post@n5.nabble.com>
Message-ID: <1455500092307-16139.post@n5.nabble.com>

Hey

In fact it is sufficient to change the order of the points of the bottom
triangle only:

  faces=[ [1,0,2], [4,3,5], [0,1,4,3], [1,2,5,4], [2,0,3,5] ] );

Can anybody explain why?

Thanks

jpmendes



--
View this message in context: http://forum.openscad.org/polyhedron-with-cube-not-valid-2-manifold-tp16132p16139.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From d4v1dd at gmail.com  Sun Feb 14 20:39:46 2016
From: d4v1dd at gmail.com (dknell)
Date: Sun, 14 Feb 2016 18:39:46 -0700 (MST)
Subject: [OpenSCAD] polyhedron with cube not valid 2-manifold
In-Reply-To: <1455500092307-16139.post@n5.nabble.com>
References: <1455491821073-16132.post@n5.nabble.com>
	<CAJgOqAAUOFv1598XbA=jNtBDF_e9BfATTdXbDMqMhfHPixMT3Q@mail.gmail.com>
	<1455498817557-16137.post@n5.nabble.com>
	<1455500092307-16139.post@n5.nabble.com>
Message-ID: <CECCD681-CBEE-4CEB-AB43-40F3D5208782@gmail.com>

According to the documentation, ? When looking at the face from the outside inwards, the points must be clockwise?. I incorrectly oriented the bottom triangle by looking from the inside outward. 


> On Feb 14, 2016, at 8:34 PM, jpmendes [via OpenSCAD] <ml-node+s1091067n16139h13 at n5.nabble.com> wrote:
> 
> Hey 
> 
> In fact it is sufficient to change the order of the points of the bottom triangle only: 
> 
>   faces=[ [1,0,2], [4,3,5], [0,1,4,3], [1,2,5,4], [2,0,3,5] ] ); 
> 
> Can anybody explain why? 
> 
> Thanks 
> 
> jpmendes 
> 
> If you reply to this email, your message will be added to the discussion below:
> http://forum.openscad.org/polyhedron-with-cube-not-valid-2-manifold-tp16132p16139.html <http://forum.openscad.org/polyhedron-with-cube-not-valid-2-manifold-tp16132p16139.html>
> To unsubscribe from polyhedron with cube not valid 2-manifold, click here <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=16132&code=ZDR2MWRkQGdtYWlsLmNvbXwxNjEzMnwxOTcwMjIwODAw>.
> NAML <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>




--
View this message in context: http://forum.openscad.org/polyhedron-with-cube-not-valid-2-manifold-tp16132p16140.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160214/2da24011/attachment.html>

From jpmendes54 at gmail.com  Sun Feb 14 20:55:41 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Sun, 14 Feb 2016 18:55:41 -0700 (MST)
Subject: [OpenSCAD] polyhedron with cube not valid 2-manifold
In-Reply-To: <1455500092307-16139.post@n5.nabble.com>
References: <1455491821073-16132.post@n5.nabble.com>
	<CAJgOqAAUOFv1598XbA=jNtBDF_e9BfATTdXbDMqMhfHPixMT3Q@mail.gmail.com>
	<1455498817557-16137.post@n5.nabble.com>
	<1455500092307-16139.post@n5.nabble.com>
Message-ID: <1455501341000-16141.post@n5.nabble.com>

Ok, I read the manual.

However I can't understand why this have to be this way. I do not imagine me
spending a lot of time making a complex polyhedron from points and having to
care about the order of points for each face.
I think that the language should infer the correct order and rearrange the
points order internally if necessary to avoid crashing or the type of issues
above. 
As a minimum, an error message should be echoed reporting the faces with
problems.

jpmendes



--
View this message in context: http://forum.openscad.org/polyhedron-with-cube-not-valid-2-manifold-tp16132p16141.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sun Feb 14 22:04:30 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sun, 14 Feb 2016 20:04:30 -0700 (MST)
Subject: [OpenSCAD] Determining what data type a variable is holding
In-Reply-To: <1455468852655-16126.post@n5.nabble.com>
References: <1455377957307-16111.post@n5.nabble.com>
	<1455468852655-16126.post@n5.nabble.com>
Message-ID: <1455505470000-16142.post@n5.nabble.com>

runsun wrote
>> function type(x)= 
>> (
>>    x==undef?undef
>>    : floor(x)==x? "int"
>>    : ( abs(x)+1>abs(x)?"float"
>>      : str(x)==x?"str"
>>      : str(x)=="false"||str(x)=="true"?"bool"
>>      : (x[0]==x[0])&&len(x)!=undef? "arr" // range below doesn't have len
>>      : let( s=str(x) 
>>          , s2= split(slice(s,1,-1)," : ")
>>          ) 
>>          s[0]=="[" && s[len(s)-1]=="]" 
>>          && all( [ for(x=s2) isint(int(x)) ] )?"range"
>>         :"unknown"
>>     )
>> );

@runsun, ' isint(int(x))' I presume your int() function returns undef or nan
when x is not a number?




-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Determining-what-data-type-a-variable-is-holding-tp16111p16142.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From adamtimm1 at msn.com  Sun Feb 14 22:33:05 2016
From: adamtimm1 at msn.com (Adam)
Date: Sun, 14 Feb 2016 21:33:05 -0600
Subject: [OpenSCAD] converting svg files from Inkscape to scad files to
	stl files
In-Reply-To: <1455067883681-16084.post@n5.nabble.com>
	<4239c7bdac290ecfcc24ed35cb4874aa@arnholm.org>
References: <1455067883681-16084.post@n5.nabble.com>
	<4239c7bdac290ecfcc24ed35cb4874aa@arnholm.org>
Message-ID: <COL130-DS17FF1AB407C0975904DFA8E0AC0@phx.gbl>

   
Carsten,

    Thank you very much!


----- Original Message ----- 

From: arnholm at arnholm.org<mailto:arnholm at arnholm.org> 

To: OpenSCAD general discussion<mailto:discuss at lists.openscad.org> 

Sent: Wednesday, February 10, 2016 2:46 AM

Subject: Re: [OpenSCAD] converting svg files from Inkscape to scad files to stl files



On 2016-02-10 02:31, adamtimm1 wrote:
> I am a photographer and an artist.  I want to create 3D images from my
> photos and from artwork so that the blind can touch an image and "see 
> it."
> That is* all *I want to do. I did it once through another venue.

Hi, you may be interested in this
http://arnholm.org/a-reverse-3d-printing-experiment/

Where I convert a 2d image to a printable 3d object. The description is 
fairly detailed. Observe that there are different forms of DXF.

Also, this relates to the same issue, but possibly closer to what you 
want
http://arnholm.org/angelscript-csg-part-3/

Carsten Arnholm

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160214/71ba46bc/attachment.html>

From adamtimm1 at msn.com  Sun Feb 14 22:36:27 2016
From: adamtimm1 at msn.com (Adam)
Date: Sun, 14 Feb 2016 21:36:27 -0600
Subject: [OpenSCAD] converting svg files from Inkscape to scad files
	tostl files
In-Reply-To: <1455067883681-16084.post@n5.nabble.com>
	<1455094287418-16095.post@n5.nabble.com>
References: <1455067883681-16084.post@n5.nabble.com>
	<1455094287418-16095.post@n5.nabble.com>
Message-ID: <COL130-DS7589A49471F8299AF448EE0AC0@phx.gbl>

   
Thanks David,

    InkScape converted the image into a grey scale for me but the problem was that I could not do the rest of the process which was  Path to openscade.  When I went to the right drop down box the "Path to openscad" was not there to send the image to.


----- Original Message ----- 

From: David Eccles (gringer)<mailto:bioinformatics at gringene.org> 

To: discuss at lists.openscad.org<mailto:discuss at lists.openscad.org> 

Sent: Wednesday, February 10, 2016 2:51 AM

Subject: Re: [OpenSCAD] converting svg files from Inkscape to scad files tostl files



Another option is to save the files as a *small* png image, then use ImageJ
to convert the image to a text image (File->Save As->Text Image). This will
convert greyscale values into numbers, which can be read in by openscad as a
height map. Things are improved by converting to greyscale (8-bit colour)
first, then applying a gaussian blur, but the example image you've provided
doesn't really work in its current form as a height/bump map:

<http://forum.openscad.org/file/n16095/4EE5_bumpmap.png> 

I've had more success in doing this from light-field microscope images,
although it still takes a bit of work to get things working properly:

http://www.thingiverse.com/thing:897505



--
View this message in context: http://forum.openscad.org/converting-svg-files-from-Inkscape-to-scad-files-to-stl-files-tp16084p16095.html
Sent from the OpenSCAD mailing list archive at Nabble.com.

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160214/6b43af81/attachment.html>

From adamtimm1 at msn.com  Sun Feb 14 22:39:10 2016
From: adamtimm1 at msn.com (Adam)
Date: Sun, 14 Feb 2016 21:39:10 -0600
Subject: [OpenSCAD] converting svg files from Inkscape to scad
	filestostl files
In-Reply-To: <1455067883681-16084.post@n5.nabble.com><COL130-DS1128291508D1673C75F842E0D70@phx.gbl>
	<1455082757921-16093.post@n5.nabble.com>
References: <1455067883681-16084.post@n5.nabble.com><COL130-DS1128291508D1673C75F842E0D70@phx.gbl>
	<1455082757921-16093.post@n5.nabble.com>
Message-ID: <COL130-DS272F0AB3AC88BFD293263CE0AC0@phx.gbl>

   
Neon,

    Thank you again.  I will be printing in only one color because 3D printers do not yet do the "inkjet' thing.  So only one color is fine.  Besides if one is blind what is the point of color especially if one has a good friend and the actual painting to describe?

    I will be working on your solutions.

Adam


----- Original Message ----- 

From: Neon22<mailto:mschafer at wireframe.biz> 

To: discuss at lists.openscad.org<mailto:discuss at lists.openscad.org> 

Sent: Tuesday, February 09, 2016 11:39 PM

Subject: Re: [OpenSCAD] converting svg files from Inkscape to scad filestostl files



ok thanks for the detail. A couple of things first.

1. Regrettably changing a raster file to a vector file cannot be done by
just changing the file extension. That would be like changing a car to an
airplane by swapping the gas caps over. While they are both forms of
transport, they do different things. So there is no way it'll ever be that
simple. Sorry.

2. Your image is going to need to be in several layers. One for each of the
contour colors you can see in your image. Maybe 8 or more. Oh yes - as you
can see (way below), the image needs a bit of editing and tidying at the
borders before you begin to get a good result and no cruft at the edges.

So things to try:
1. You really should look at lithopanes. The author solved an interesting
problem and its worth considering if you can use it for what you want.
The live customiser online version cannot use really big files. But if you
download the scad then you can use much bigger images.
Try it:
   - http://www.thingiverse.com/thing:74322
   - http://www.thingiverse.com/search?q=lithopane&sa=

2. I'm sorry for your troubles with Inkscape.
You need 0.91. You also need to download the extension (which what inkscape
calls plugins) and put it in the right directory. If you're on windows
that's %APPDATA% then go looking for the inkscape/extensions folder.
 - you really should use the zip file from here:
http://www.thingiverse.com/thing:1065500/#files
 - unpack it into that extensions folder
    - http://www.thingiverse.com/thing:25036
    - if you unpack it then it should appear on that specific menu - when
you restart inkscape.

The instructable you reference is making a simple black and white one-layer
shape. Your image looks like its maybe > 8 layers.
When you split your image into 8 layers - using the Trace_Bitmap tool -
you'll need to have these settings:
 - choose colors,
 - 8 layers (or however many you need)
 - stack scans off
 - remove_background off (but you can play with this and the previous
option)
 - smooth on (optional)
<http://forum.openscad.org/file/n16093/bitmap_001315.png> 
Then export using the extension (must be v8). force line output must be off.
Then open in openscad and be disappointed to see a low cube....

But wait....
at the end of the file will be 8 (or whatever you chose) poly_path
statements.
You can toggle visibiility of these on and off using the // comment operator
to check each shape is there.

Anyway - if you translate each one away from the next one (by whatever
height you choose) then you'll end up with a stacked scan like this:
<http://forum.openscad.org/file/n16093/profile_001316.png> 
 - now they won't come in in the exact order you need. You'll have to swap
them round until they are in correct height order.

The following numbers won't match yours at all but see what I'm doing with
the translates in Z... ?
// The shapes
poly_path4313(height, width);
translate([0,0,-height])
    poly_path4319(height, width);
translate([0,0,-height*2])
    poly_path4311(height, width);
translate([0,0,-height*3])
    poly_path4315(height, width);
translate([0,0,-height*4])
    poly_path4321(height, width);
translate([0,0,-height*5])
    poly_path4317(height, width);
translate([0,0,-height*6])
    poly_path4309(height, width);
translate([0,0,-height*7])
    poly_path4307(height, width);

Try again
Cheers...



--
View this message in context: http://forum.openscad.org/converting-svg-files-from-Inkscape-to-scad-files-to-stl-files-tp16084p16093.html
Sent from the OpenSCAD mailing list archive at Nabble.com.

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160214/df9060ef/attachment.html>

From tim.thawkins at gmail.com  Sun Feb 14 23:04:56 2016
From: tim.thawkins at gmail.com (Tim Hawkins)
Date: Mon, 15 Feb 2016 04:04:56 +0000
Subject: [OpenSCAD] converting svg files from Inkscape to scad files to
 stl files
In-Reply-To: <1455067883681-16084.post@n5.nabble.com>
References: <1455067883681-16084.post@n5.nabble.com>
Message-ID: <CAEbsasQ4Yg-gchcrhg7aX2iGVAusGMykBADFZXn_Cu7DmSm2DQ@mail.gmail.com>

If all you want to do is create "height or bump maps" where the height of
the model at X/y is equivalent to the luminance of the image pixel at that
point. then Openscad has a built in function to do that.

if you can convert your artwork to a monochrome 2d png image, then the
following snippet will render it as a height map in OpenSCAD

scale([1, 1, 0.1])
  surface(file = "smiley.png", center = true, invert = true);

Change "smiley.png" to be the path to the image you want to use.

Change the scale([x,y,z]) numbers - 1 means 100%, 0.1 means 10%

see:
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Other_Language_Features#Images


On Wed, Feb 10, 2016 at 9:32 AM adamtimm1 <adamtimm1 at msn.com> wrote:

> I hope I do not offend anyone with this request or my stupidity.  This was
> supposed to be a simple "thing."
>
> From an "instructable" and a "Thing" in Thingiverse (
>
> http://www.instructables.com/id/Convert-any-2D-image-to-a-3D-object-using-OpenSCAD/
> ) the instructions said that I could import a 2D jpeg into Inkscape, covert
> it into an svg file, click Path>Object to Path  then click extensions
> >Paths2openscad.  When I opened openscad I was supposed to be able to
> easily
> convert the file to an extruded stl that I could print on my 3D printer.
> REally??  I have been working on it for 2 days.
>
> I am a photographer and an artist.  I want to create 3D images from my
> photos and from artwork so that the blind can touch an image and "see it."
> That is* all *I want to do. I did it once through another venue.
>
> I did drop a "dxf" file onto the command line but I haven't the foggiest
> how
> to implement it.  The first time I did it I got a message saying I had
> dropped an invalid dxf file onto the command line.
>
> I am told that I have to "correctly escape the string." How do I do that?
> I
> am totally overwhelmed with things I have to do at the moment and I do not
> want more.  I am at a point where everything I do takes me further afield
> from my goals.  I know that there is a manual but for the little thing I am
> attempting to do I only need a couple of instructions.  I have no intention
> of doing any greater things with SCAD.  It is a task I will repeat many
> times until something better/easier comes along.
>
> Could someone please tell me how to import the dxf file I want, extrude it
> then save it as an STL?  I was thinking I would get an  "import" button,
> but
> noooo!
>
> Can/would someone please walk me through this?
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/converting-svg-files-from-Inkscape-to-scad-files-to-stl-files-tp16084.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160215/41f84450/attachment.html>

From runsun at gmail.com  Mon Feb 15 00:57:24 2016
From: runsun at gmail.com (runsun)
Date: Sun, 14 Feb 2016 22:57:24 -0700 (MST)
Subject: [OpenSCAD] Determining what data type a variable is holding
In-Reply-To: <1455505470000-16142.post@n5.nabble.com>
References: <1455377957307-16111.post@n5.nabble.com>
	<1455468852655-16126.post@n5.nabble.com>
	<1455505470000-16142.post@n5.nabble.com>
Message-ID: <1455515844585-16147.post@n5.nabble.com>

MichaelAtOz wrote
> @runsun, ' isint(int(x))' I presume your int() function returns undef or
> nan when x is not a number?

Not exactly. It will try to type-cast x into an int. So int("3.3")=> 3. The
test cases for int() are:

> int ( x )=int ( tested:22 ) (mode:12)
> | 0> int(3)= 3
> | 1> int(3.3)= 3
> | 2> int(-3.3)= -3
> | 3> int(3.8)= 4
> | 4> int(9.8)= 10
> | 5> int(-3.8)= -4
> | 6> int("-3.3")= -3
> | 7> int("-3.8")= -3 // !!Note this!!
> | 8> int("3")= 3
> | 9> int("3.0")= 3
> | 10> int("0.3")= 0
> | 11> int("34")= 34
> | 12> int("-34")= -34
> | 13> int("-34.5")= -34
> | 14> int("345")= 345
> | 15> int("3456")= 3456
> | 16> int("789987")= 789987
> | 17> int("789.987")= 789 // !!Note this!!
> | 18> int([3,4])= undef
> | 19> int("x")= undef
> | 20> int("34-5")= undef
> | 21> int("34x56")= undef

I apologize that I didn't realize there are couple of user functions used. I
double checked and see that it'd take too much work trying to put all of
them here ('cos they also use other user functions). So maybe just remove
the "range detection" part ? I suppose not many ppl will need it, anyway. 
 



-----

$  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ), runscad.py( 1 , 2 , git ), synwrite( 1 , 2 );  $ tips: hash( 1 , 2 ), sweep( 1 , 2 ), var( 1 , 2 ), lerp , animGif , prodVid , precision( 1 , 2 ), xl-control , type 





--
View this message in context: http://forum.openscad.org/Determining-what-data-type-a-variable-is-holding-tp16111p16147.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From db5765 at outlook.com  Mon Feb 15 09:39:28 2016
From: db5765 at outlook.com (Trygon)
Date: Mon, 15 Feb 2016 07:39:28 -0700 (MST)
Subject: [OpenSCAD] Determining what data type a variable is holding
In-Reply-To: <1455468852655-16126.post@n5.nabble.com>
References: <1455377957307-16111.post@n5.nabble.com>
	<1455468852655-16126.post@n5.nabble.com>
Message-ID: <1455547168946-16148.post@n5.nabble.com>

Hi Runsun,

I had not thought of str(x)==x to test for a string, thanks.

Trygon



--
View this message in context: http://forum.openscad.org/Determining-what-data-type-a-variable-is-holding-tp16111p16148.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From db5765 at outlook.com  Mon Feb 15 09:46:51 2016
From: db5765 at outlook.com (Trygon)
Date: Mon, 15 Feb 2016 07:46:51 -0700 (MST)
Subject: [OpenSCAD] Determining what data type a variable is holding
In-Reply-To: <CAGV6i+NW_yZvvbn_=JzLKdEct9JXC4sxu0gd4DkpKN34UrArdQ@mail.gmail.com>
References: <1455377957307-16111.post@n5.nabble.com>
	<CAGV6i+NW_yZvvbn_=JzLKdEct9JXC4sxu0gd4DkpKN34UrArdQ@mail.gmail.com>
Message-ID: <1455547611503-16149.post@n5.nabble.com>

Hi Doug,

You have my vote - type tests of the form is_int etc. would be nice to have
since they would be guaranteed to be robust.

-Trygon



--
View this message in context: http://forum.openscad.org/Determining-what-data-type-a-variable-is-holding-tp16111p16149.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Mon Feb 15 12:19:52 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Mon, 15 Feb 2016 18:19:52 +0100
Subject: [OpenSCAD] converting svg files from Inkscape to scad files to
 stl files
In-Reply-To: <COL130-DS17FF1AB407C0975904DFA8E0AC0@phx.gbl>
References: <1455067883681-16084.post@n5.nabble.com>
	<4239c7bdac290ecfcc24ed35cb4874aa@arnholm.org>
	<COL130-DS17FF1AB407C0975904DFA8E0AC0@phx.gbl>
Message-ID: <56C208B8.1060309@arnholm.org>

On 15. feb. 2016 04:33, Adam wrote:
> Carsten,
>      Thank you _very_ much!

You're welcome. I had fun exploring how to go from an image profile to 
an OpenSCAD model. It is not really straightforward.

For the other referece, observe that AngelScript CSG handles the image 
-> 3d independently of OpenSCAD. A polyhedron is created directly 
instead of relying in the OpenSCAD surface command. Therefore, the 
results may become slightly different.

Carsten Arnholm



From Paul at Sehorne.org  Mon Feb 15 14:04:02 2016
From: Paul at Sehorne.org (psehorne)
Date: Mon, 15 Feb 2016 12:04:02 -0700 (MST)
Subject: [OpenSCAD] STL shows unwanted co-planar faces in SketchUp and
	DesignSpark
Message-ID: <1455563042557-16152.post@n5.nabble.com>

When I import the STL file exported from OpenSCAD from the code below into
either SketchUp or DesignSpark all faces of the model have two  co-planar
sections.
<http://forum.openscad.org/file/n16152/OpenSCAD.png>  
What's going on?

pitch = 1.25;  //8mm coarse thread
height = pitch * cos(30); //based on 60 degree profile
major_diameter = 7.78; //M8 = 7.78-8.00
minor_diameter = major_diameter - 2*(height*5/8);
echo ("major_diameter = ", major_diameter);
echo ("minor_diameter = ", minor_diameter);
echo ("pitch = ", pitch);
echo ("height = ", height);

//external thread for a bolt
square_size = pitch/8+.2;

linear_extrude(height = .01)
difference()
{
    polygon(points = [ [0, 0], [0, pitch],[height,pitch/2], ], convexity =
2);
    #translate([height*7/8+square_size/2,pitch/2,0])
    square(square_size,center=true);
}



--
View this message in context: http://forum.openscad.org/STL-shows-unwanted-co-planar-faces-in-SketchUp-and-DesignSpark-tp16152.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Mon Feb 15 14:06:56 2016
From: nop.head at gmail.com (nop head)
Date: Mon, 15 Feb 2016 19:06:56 +0000
Subject: [OpenSCAD] STL shows unwanted co-planar faces in SketchUp and
	DesignSpark
In-Reply-To: <1455563042557-16152.post@n5.nabble.com>
References: <1455563042557-16152.post@n5.nabble.com>
Message-ID: <CAEEmnrMmNEu-s2Re1Kxm17a7=c34r0Wa5uRJE_L_hFzQE3w-=w@mail.gmail.com>

STL files only store triangles so each face is broken into triangular
facets.

On 15 February 2016 at 19:04, psehorne <Paul at sehorne.org> wrote:

> When I import the STL file exported from OpenSCAD from the code below into
> either SketchUp or DesignSpark all faces of the model have two  co-planar
> sections.
> <http://forum.openscad.org/file/n16152/OpenSCAD.png>
> What's going on?
>
> pitch = 1.25;  //8mm coarse thread
> height = pitch * cos(30); //based on 60 degree profile
> major_diameter = 7.78; //M8 = 7.78-8.00
> minor_diameter = major_diameter - 2*(height*5/8);
> echo ("major_diameter = ", major_diameter);
> echo ("minor_diameter = ", minor_diameter);
> echo ("pitch = ", pitch);
> echo ("height = ", height);
>
> //external thread for a bolt
> square_size = pitch/8+.2;
>
> linear_extrude(height = .01)
> difference()
> {
>     polygon(points = [ [0, 0], [0, pitch],[height,pitch/2], ], convexity =
> 2);
>     #translate([height*7/8+square_size/2,pitch/2,0])
>     square(square_size,center=true);
> }
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/STL-shows-unwanted-co-planar-faces-in-SketchUp-and-DesignSpark-tp16152.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160215/1ebc4089/attachment.html>

From Paul at Sehorne.org  Mon Feb 15 14:23:37 2016
From: Paul at Sehorne.org (psehorne)
Date: Mon, 15 Feb 2016 12:23:37 -0700 (MST)
Subject: [OpenSCAD] STL shows unwanted co-planar faces in SketchUp and
	DesignSpark
In-Reply-To: <CAEEmnrMmNEu-s2Re1Kxm17a7=c34r0Wa5uRJE_L_hFzQE3w-=w@mail.gmail.com>
References: <1455563042557-16152.post@n5.nabble.com>
	<CAEEmnrMmNEu-s2Re1Kxm17a7=c34r0Wa5uRJE_L_hFzQE3w-=w@mail.gmail.com>
Message-ID: <1455564217344-16154.post@n5.nabble.com>

Darn!  but THANKS, nophead.  I'll have to work around that behavior.



--
View this message in context: http://forum.openscad.org/STL-shows-unwanted-co-planar-faces-in-SketchUp-and-DesignSpark-tp16152p16154.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From moorejohnny at gmail.com  Mon Feb 15 14:33:41 2016
From: moorejohnny at gmail.com (John)
Date: Mon, 15 Feb 2016 12:33:41 -0700 (MST)
Subject: [OpenSCAD] openscad hangs up after upgrading to Windows 10
Message-ID: <1455564821206-16155.post@n5.nabble.com>

I have been fighting the preview problem with difference(), mentioned in
other threads, for months on my old HP laptop.  I am using the vanilla
OpenSCAD-2015.03-2-x86-64-Installer.exe downloaded from the web site.

Finally I bit the bullet and upgraded Windows 7 Home Premium to Windows 10. 
As I hoped, this updated my ATI video driver from an old relic to something
dated in 2015.  Now my problem is even worse.

The logo.scad file that comes with the system still seems to work just fine,
as do some of my simpler files.  But now all of my non-trivial .scad files
just make openSCAD hang up ("not responding").  They report that the total
"rendering" time for the preview is about 1 second, and then hang with a
blank display.

Some of them seem to hang forever, but some will do the preview if I leave
the room for a very long break.  At least some of the ones that eventually
preview, will also move the camera in response to a mouse drag, but only
after a long (multi-minute) delay.  I don't know if the preview problem with
difference() is gone or not.

Now my project, which of course is crucial to the welfare of all humanity,
is dead in the water.

Has anyone else seen such a result from upgrading to Windows 10?  Any
suggestions will be appreciated.

--thanks
  john




--
View this message in context: http://forum.openscad.org/openscad-hangs-up-after-upgrading-to-Windows-10-tp16155.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Mon Feb 15 17:03:43 2016
From: runsun at gmail.com (runsun)
Date: Mon, 15 Feb 2016 15:03:43 -0700 (MST)
Subject: [OpenSCAD] openscad hangs up after upgrading to Windows 10
In-Reply-To: <1455564821206-16155.post@n5.nabble.com>
References: <1455564821206-16155.post@n5.nabble.com>
Message-ID: <1455573823911-16156.post@n5.nabble.com>

I'm using OpenSCAD version 2015.10.17 (git fba8130) on Win10Pro for couple of
months. No issue so far. 



-----

$  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ), runscad.py( 1 , 2 , git ), synwrite( 1 , 2 );  $ tips: hash( 1 , 2 ), sweep( 1 , 2 ), var( 1 , 2 ), lerp , animGif , prodVid , precision( 1 , 2 ), xl-control , type 





--
View this message in context: http://forum.openscad.org/openscad-hangs-up-after-upgrading-to-Windows-10-tp16155p16156.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Mon Feb 15 17:05:30 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Mon, 15 Feb 2016 15:05:30 -0700 (MST)
Subject: [OpenSCAD] openscad hangs up after upgrading to Windows 10
In-Reply-To: <1455564821206-16155.post@n5.nabble.com>
References: <1455564821206-16155.post@n5.nabble.com>
Message-ID: <1455573930797-16157.post@n5.nabble.com>

You could try Edit/Preferences/Advanced/Force-Goldfeather

Perhaps try the 32bit version?? (hunch)

Upgrade your laptop....



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/openscad-hangs-up-after-upgrading-to-Windows-10-tp16155p16157.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Mon Feb 15 18:05:22 2016
From: runsun at gmail.com (runsun)
Date: Mon, 15 Feb 2016 16:05:22 -0700 (MST)
Subject: [OpenSCAD] openscad hangs up after upgrading to Windows 10
In-Reply-To: <1455573930797-16157.post@n5.nabble.com>
References: <1455564821206-16155.post@n5.nabble.com>
	<1455573930797-16157.post@n5.nabble.com>
Message-ID: <1455577522485-16158.post@n5.nabble.com>

Or maybe try using Linux. Before I got my current laptop, I've been using one
that was purchased back in 2005. With Linux (Mint 17), it runs OpenSCAD
pretty well. 



-----

$  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ), runscad.py( 1 , 2 , git ), synwrite( 1 , 2 );  $ tips: hash( 1 , 2 ), sweep( 1 , 2 ), var( 1 , 2 ), lerp , animGif , prodVid , precision( 1 , 2 ), xl-control , type 





--
View this message in context: http://forum.openscad.org/openscad-hangs-up-after-upgrading-to-Windows-10-tp16155p16158.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jpmendes54 at gmail.com  Tue Feb 16 13:36:26 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Tue, 16 Feb 2016 11:36:26 -0700 (MST)
Subject: [OpenSCAD] converting svg files from Inkscape to scad files
	tostl files
In-Reply-To: <COL130-DS7589A49471F8299AF448EE0AC0@phx.gbl>
References: <1455067883681-16084.post@n5.nabble.com>
	<COL130-DS7589A49471F8299AF448EE0AC0@phx.gbl>
Message-ID: <1455647786223-16159.post@n5.nabble.com>

Hey

If not done already, you should install the Inkscape python script plugin V6
at: 

http://www.thingiverse.com/thing:25036/#files

jpmendes



--
View this message in context: http://forum.openscad.org/converting-svg-files-from-Inkscape-to-scad-files-to-stl-files-tp16084p16159.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jpmendes54 at gmail.com  Tue Feb 16 14:28:25 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Tue, 16 Feb 2016 12:28:25 -0700 (MST)
Subject: [OpenSCAD] openscad hangs up after upgrading to Windows 10
In-Reply-To: <1455564821206-16155.post@n5.nabble.com>
References: <1455564821206-16155.post@n5.nabble.com>
Message-ID: <1455650905748-16160.post@n5.nabble.com>

Hey

These are the drawbacks of changing to an immature OS. People that is
satisfied with a certain OS as I am with Windows 7, should stay with it
until the new OS matures.
Just in case try to suspend the anti-virus and observe if any change in
behavior happens. I had problems with the new OpenSCAd snapshots. Your case
is a lot different from mine however some miracle may happen. 
Blind suggestions: try to give more memory to the GPU in the laptop bios,
try to enlarge the OpenSCAD caches, force goldfeather option in preferences
menu. BTW can some one explain what goldfeather is? I mean how it works.
Try this: https://www.youtube.com/watch?v=6sviDmWczz0
             https://www.youtube.com/watch?v=-9ZgPW6EaPM
Good luck. 

jpmendes



--
View this message in context: http://forum.openscad.org/openscad-hangs-up-after-upgrading-to-Windows-10-tp16155p16160.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jon at jonbondy.com  Tue Feb 16 21:26:37 2016
From: jon at jonbondy.com (jon)
Date: Tue, 16 Feb 2016 21:26:37 -0500
Subject: [OpenSCAD] openscad hangs up after upgrading to Windows 10
In-Reply-To: <1455650905748-16160.post@n5.nabble.com>
References: <1455564821206-16155.post@n5.nabble.com>
	<1455650905748-16160.post@n5.nabble.com>
Message-ID: <56C3DA5D.8000603@jonbondy.com>

I have not been following this thread carefully, but OpenSCAD runs on my 
Win 8.1 laptop that I upgraded to Win 10.  Was there something specific 
that had to be done to get OpenSCAD to hang?

Jon

On 2/16/2016 2:28 PM, jpmendes wrote:
> Hey
>
> These are the drawbacks of changing to an immature OS. People that is
> satisfied with a certain OS as I am with Windows 7, should stay with it
> until the new OS matures.
> Just in case try to suspend the anti-virus and observe if any change in
> behavior happens. I had problems with the new OpenSCAd snapshots. Your case
> is a lot different from mine however some miracle may happen.
> Blind suggestions: try to give more memory to the GPU in the laptop bios,
> try to enlarge the OpenSCAD caches, force goldfeather option in preferences
> menu. BTW can some one explain what goldfeather is? I mean how it works.
> Try this: https://www.youtube.com/watch?v=6sviDmWczz0
>               https://www.youtube.com/watch?v=-9ZgPW6EaPM
> Good luck.
>
> jpmendes
>
>
>
> --
> View this message in context: http://forum.openscad.org/openscad-hangs-up-after-upgrading-to-Windows-10-tp16155p16160.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
> -----
> No virus found in this message.
> Checked by AVG - www.avg.com
> Version: 2016.0.7442 / Virus Database: 4530/11635 - Release Date: 02/16/16
>
>



From doug at moens.org  Wed Feb 17 10:37:17 2016
From: doug at moens.org (doug moen)
Date: Wed, 17 Feb 2016 10:37:17 -0500
Subject: [OpenSCAD] Determining what data type a variable is holding
In-Reply-To: <1455547611503-16149.post@n5.nabble.com>
References: <1455377957307-16111.post@n5.nabble.com>
	<CAGV6i+NW_yZvvbn_=JzLKdEct9JXC4sxu0gd4DkpKN34UrArdQ@mail.gmail.com>
	<1455547611503-16149.post@n5.nabble.com>
Message-ID: <CAGV6i+PKER-XeOwVHJubeRsiRk1ANT7SjyFsMjcS4G5A0MXCxg@mail.gmail.com>

Added issue #1584, Type Test Functions.
https://github.com/openscad/openscad/issues/1584

On 15 February 2016 at 09:46, Trygon <db5765 at outlook.com> wrote:

> Hi Doug,
>
> You have my vote - type tests of the form is_int etc. would be nice to have
> since they would be guaranteed to be robust.
>
> -Trygon
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Determining-what-data-type-a-variable-is-holding-tp16111p16149.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160217/60f710c8/attachment.html>

From marius at kintel.net  Wed Feb 17 16:51:13 2016
From: marius at kintel.net (Marius Kintel)
Date: Wed, 17 Feb 2016 16:51:13 -0500
Subject: [OpenSCAD] STL shows unwanted co-planar faces in SketchUp and
	DesignSpark
In-Reply-To: <1455564217344-16154.post@n5.nabble.com>
References: <1455563042557-16152.post@n5.nabble.com>
	<CAEEmnrMmNEu-s2Re1Kxm17a7=c34r0Wa5uRJE_L_hFzQE3w-=w@mail.gmail.com>
	<1455564217344-16154.post@n5.nabble.com>
Message-ID: <C89053C8-3CB0-4A6F-A8D5-87DBA3B805BB@kintel.net>

> On Feb 15, 2016, at 14:23 PM, psehorne <Paul at Sehorne.org> wrote:
> 
> Darn!  but THANKS, nophead.  I'll have to work around that behavior.
> 
What formats do DesignSpark and SketchUp import which would be able to provide the wanted results?

Merging planar triangles into larger faces is something that can be done on import. Such functionality would typically be part of said CAD packages. I would recommend contacting customer support there and inquire about this.

 -Marius



From fred_dot_u at yahoo.com  Wed Feb 17 16:56:23 2016
From: fred_dot_u at yahoo.com (fred)
Date: Wed, 17 Feb 2016 21:56:23 +0000 (UTC)
Subject: [OpenSCAD] STL shows unwanted co-planar faces in SketchUp
	and	DesignSpark
In-Reply-To: <C89053C8-3CB0-4A6F-A8D5-87DBA3B805BB@kintel.net>
References: <C89053C8-3CB0-4A6F-A8D5-87DBA3B805BB@kintel.net>
Message-ID: <1790237400.5581912.1455746183660.JavaMail.yahoo@mail.yahoo.com>

Meshmixer is a free program that has an "inspector" feature. I've not intentionally created co-planar triangles, so I can't say that it would correct it, but the price is right. 

    On Wednesday, February 17, 2016 4:52 PM, Marius Kintel <marius at kintel.net> wrote:
 

 > On Feb 15, 2016, at 14:23 PM, psehorne <Paul at Sehorne.org> wrote:
> 
> Darn!? but THANKS, nophead.? I'll have to work around that behavior.
> 
What formats do DesignSpark and SketchUp import which would be able to provide the wanted results?

Merging planar triangles into larger faces is something that can be done on import. Such functionality would typically be part of said CAD packages. I would recommend contacting customer support there and inquire about this.

 -Marius


_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160217/2f5ca778/attachment.html>

From kennethrsloan at gmail.com  Wed Feb 17 18:46:29 2016
From: kennethrsloan at gmail.com (Kenneth Sloan)
Date: Wed, 17 Feb 2016 17:46:29 -0600
Subject: [OpenSCAD] STL shows unwanted co-planar faces in SketchUp and
	DesignSpark
In-Reply-To: <C89053C8-3CB0-4A6F-A8D5-87DBA3B805BB@kintel.net>
References: <1455563042557-16152.post@n5.nabble.com>
	<CAEEmnrMmNEu-s2Re1Kxm17a7=c34r0Wa5uRJE_L_hFzQE3w-=w@mail.gmail.com>
	<1455564217344-16154.post@n5.nabble.com>
	<C89053C8-3CB0-4A6F-A8D5-87DBA3B805BB@kintel.net>
Message-ID: <24DC71A0-6BF8-4D1D-9031-B1546E0CDC26@gmail.com>

Can someone point me to an authoritative STANDARD for .stl files that says that all facets must consist of a single outerloop and that loop must contain exactly 3 vertices?

This is, of course, for ASCII .stl files.

--
Kenneth Sloan
KennethRSloan at gmail.com
Vision is the art of seeing what is invisible to others.




> On Feb 17, 2016, at 15:51 , Marius Kintel <marius at kintel.net> wrote:
> 
>> On Feb 15, 2016, at 14:23 PM, psehorne <Paul at Sehorne.org> wrote:
>> 
>> Darn!  but THANKS, nophead.  I'll have to work around that behavior.
>> 
> What formats do DesignSpark and SketchUp import which would be able to provide the wanted results?
> 
> Merging planar triangles into larger faces is something that can be done on import. Such functionality would typically be part of said CAD packages. I would recommend contacting customer support there and inquire about this.
> 
> -Marius
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From marius at kintel.net  Wed Feb 17 19:15:16 2016
From: marius at kintel.net (Marius Kintel)
Date: Wed, 17 Feb 2016 19:15:16 -0500
Subject: [OpenSCAD] STL shows unwanted co-planar faces in SketchUp and
	DesignSpark
In-Reply-To: <24DC71A0-6BF8-4D1D-9031-B1546E0CDC26@gmail.com>
References: <1455563042557-16152.post@n5.nabble.com>
	<CAEEmnrMmNEu-s2Re1Kxm17a7=c34r0Wa5uRJE_L_hFzQE3w-=w@mail.gmail.com>
	<1455564217344-16154.post@n5.nabble.com>
	<C89053C8-3CB0-4A6F-A8D5-87DBA3B805BB@kintel.net>
	<24DC71A0-6BF8-4D1D-9031-B1546E0CDC26@gmail.com>
Message-ID: <0EC7A55F-867E-43BB-87DC-CD7B909D24C9@kintel.net>

> On Feb 17, 2016, at 18:46 PM, Kenneth Sloan <kennethrsloan at gmail.com> wrote:
> 
> Can someone point me to an authoritative STANDARD for .stl files that says that all facets must consist of a single outerloop and that loop must contain exactly 3 vertices?
> 
AFAIK, there is no authorative STL standard.
Technically, you could store any size polygon in STL files, but the convention is that it?s only used for triangles.
As binary STL doesn?t even have an option for storing other than triangles, that should be a good guideline for what to put in ASCII STL files, to allow bi-directional compatibility.

 -Marius



From nop.head at gmail.com  Wed Feb 17 19:19:39 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 18 Feb 2016 00:19:39 +0000
Subject: [OpenSCAD] STL shows unwanted co-planar faces in SketchUp and
	DesignSpark
In-Reply-To: <24DC71A0-6BF8-4D1D-9031-B1546E0CDC26@gmail.com>
References: <1455563042557-16152.post@n5.nabble.com>
	<CAEEmnrMmNEu-s2Re1Kxm17a7=c34r0Wa5uRJE_L_hFzQE3w-=w@mail.gmail.com>
	<1455564217344-16154.post@n5.nabble.com>
	<C89053C8-3CB0-4A6F-A8D5-87DBA3B805BB@kintel.net>
	<24DC71A0-6BF8-4D1D-9031-B1546E0CDC26@gmail.com>
Message-ID: <CAEEmnrNMdvy6EOQpX=TReQVnBy4EzgpEOdF8O+JcswvGvCZpOw@mail.gmail.com>

Here is the original document I think:
https://static-content.springer.com/lookinside/chp%3A10.1007%2F978-1-4419-1120-9_13/001.png

It says an STL file consists of lists of triangular facets.



On 17 February 2016 at 23:46, Kenneth Sloan <kennethrsloan at gmail.com> wrote:

> Can someone point me to an authoritative STANDARD for .stl files that says
> that all facets must consist of a single outerloop and that loop must
> contain exactly 3 vertices?
>
> This is, of course, for ASCII .stl files.
>
> --
> Kenneth Sloan
> KennethRSloan at gmail.com
> Vision is the art of seeing what is invisible to others.
>
>
>
>
> > On Feb 17, 2016, at 15:51 , Marius Kintel <marius at kintel.net> wrote:
> >
> >> On Feb 15, 2016, at 14:23 PM, psehorne <Paul at Sehorne.org> wrote:
> >>
> >> Darn!  but THANKS, nophead.  I'll have to work around that behavior.
> >>
> > What formats do DesignSpark and SketchUp import which would be able to
> provide the wanted results?
> >
> > Merging planar triangles into larger faces is something that can be done
> on import. Such functionality would typically be part of said CAD packages.
> I would recommend contacting customer support there and inquire about this.
> >
> > -Marius
> >
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160218/651c1b0b/attachment.html>

From doug at moens.org  Wed Feb 17 22:19:10 2016
From: doug at moens.org (doug moen)
Date: Wed, 17 Feb 2016 22:19:10 -0500
Subject: [OpenSCAD] STL shows unwanted co-planar faces in SketchUp and
	DesignSpark
In-Reply-To: <24DC71A0-6BF8-4D1D-9031-B1546E0CDC26@gmail.com>
References: <1455563042557-16152.post@n5.nabble.com>
	<CAEEmnrMmNEu-s2Re1Kxm17a7=c34r0Wa5uRJE_L_hFzQE3w-=w@mail.gmail.com>
	<1455564217344-16154.post@n5.nabble.com>
	<C89053C8-3CB0-4A6F-A8D5-87DBA3B805BB@kintel.net>
	<24DC71A0-6BF8-4D1D-9031-B1546E0CDC26@gmail.com>
Message-ID: <CAGV6i+O+B6hO2d-e9xbVEYfrnaHeTLU2x25vJX7jb3K1Cv5dHQ@mail.gmail.com>

This is a historical reconstruction of the original 1989 STL specification.
http://www.fabbers.com/tech/STL_Format

On Wednesday, 17 February 2016, Kenneth Sloan <kennethrsloan at gmail.com>
wrote:

> Can someone point me to an authoritative STANDARD for .stl files that says
> that all facets must consist of a single outerloop and that loop must
> contain exactly 3 vertices?
>
> This is, of course, for ASCII .stl files.
>
> --
> Kenneth Sloan
> KennethRSloan at gmail.com <javascript:;>
> Vision is the art of seeing what is invisible to others.
>
>
>
>
> > On Feb 17, 2016, at 15:51 , Marius Kintel <marius at kintel.net
> <javascript:;>> wrote:
> >
> >> On Feb 15, 2016, at 14:23 PM, psehorne <Paul at Sehorne.org> wrote:
> >>
> >> Darn!  but THANKS, nophead.  I'll have to work around that behavior.
> >>
> > What formats do DesignSpark and SketchUp import which would be able to
> provide the wanted results?
> >
> > Merging planar triangles into larger faces is something that can be done
> on import. Such functionality would typically be part of said CAD packages.
> I would recommend contacting customer support there and inquire about this.
> >
> > -Marius
> >
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org <javascript:;>
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org <javascript:;>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160217/35089b3d/attachment.html>

From paul at sehorne.org  Wed Feb 17 23:54:14 2016
From: paul at sehorne.org (Paul F. Sehorne)
Date: Wed, 17 Feb 2016 22:54:14 -0600
Subject: [OpenSCAD] STL shows unwanted co-planar faces in SketchUp and
 DesignSpark
Message-ID: <56C54E76.4020006@sehorne.org>

I have found in DesignSpark that I can right-click on an object in the
Structure view and select 'Convert to solid' -> 'Merge faces' and undo the
unsavory behavior of OpenSCAD

-- 
*Paul*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160217/a0d39528/attachment.html>

From rcmpersiano at gmail.com  Thu Feb 18 00:32:46 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Thu, 18 Feb 2016 03:32:46 -0200
Subject: [OpenSCAD] STL shows unwanted co-planar faces in SketchUp and
	DesignSpark
In-Reply-To: <56C54E76.4020006@sehorne.org>
References: <56C54E76.4020006@sehorne.org>
Message-ID: <CA+i9EaA+_1Xo1=Pmi8w5xOBMPQF+My0kUkspzAezyTBtChmS9Q@mail.gmail.com>

Paul
What you call "unsavory" behaviour of OpenSCAD is a standard procedure most
software do when exporting stl. If you want to discard the disposable edges
of the stl in Sketchup use the plugin Cleanup by Thomthom (
http://sketchucation.com/pluginstore?pagecount=1&author=1149&listtype=1&currentpage=1&actualpage=Next+%3E
).

What I call unsavoury behaviour is the ability Sketchup has to destroy the
topology when importing a healthy stl with a dense set of vertices. To
confirm this just import any gear you find in Thingverse. To solve this you
will need another plugin by Thomthom: Solid Inspector and a lot of manual
work.

Ronaldo

2016-02-18 2:54 GMT-02:00 Paul F. Sehorne <paul at sehorne.org>:

> I have found in DesignSpark that I can right-click on an object in the
> Structure view and select 'Convert to solid' -> 'Merge faces' and undo the
> unsavory behavior of OpenSCAD
>
> --
> *Paul*
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160218/c141cbae/attachment.html>

From ed.nisley at pobox.com  Wed Feb 17 19:40:58 2016
From: ed.nisley at pobox.com (Ed Nisley)
Date: Wed, 17 Feb 2016 19:40:58 -0500
Subject: [OpenSCAD] STL shows unwanted co-planar faces in SketchUp and
 DesignSpark
In-Reply-To: <24DC71A0-6BF8-4D1D-9031-B1546E0CDC26@gmail.com>
References: <1455563042557-16152.post@n5.nabble.com>
	<CAEEmnrMmNEu-s2Re1Kxm17a7=c34r0Wa5uRJE_L_hFzQE3w-=w@mail.gmail.com>
	<1455564217344-16154.post@n5.nabble.com>
	<C89053C8-3CB0-4A6F-A8D5-87DBA3B805BB@kintel.net>
	<24DC71A0-6BF8-4D1D-9031-B1546E0CDC26@gmail.com>
Message-ID: <56C5131A.80202@pobox.com>

> an authoritative STANDARD for .stl files

Wikipedia probably isn't authoritative:

> The STL file format appears capable of defining a polyhedron
 > with any polygonal facet, but in practice it is only ever used
 > for triangles, which means that much of the syntax of the
 > ASCII protocol is superfluous.

So, yeah, you /could/ put more than three vertexes in each entry, but 
/everything/ else would immediately break.

They reference a "Standard Data Format for Fabbers" document dating back 
to 1989 that everybody probably used as The Definitive Document:

http://www.fabbers.com/tech/STL_Format

It starts off by saying that it's triangles all the way down...


-- 
Ed
softsolder.com


From jon at jonbondy.com  Thu Feb 18 02:33:07 2016
From: jon at jonbondy.com (jon)
Date: Thu, 18 Feb 2016 02:33:07 -0500
Subject: [OpenSCAD] STL shows unwanted co-planar faces in SketchUp and
 DesignSpark
In-Reply-To: <CA+i9EaA+_1Xo1=Pmi8w5xOBMPQF+My0kUkspzAezyTBtChmS9Q@mail.gmail.com>
References: <56C54E76.4020006@sehorne.org>
	<CA+i9EaA+_1Xo1=Pmi8w5xOBMPQF+My0kUkspzAezyTBtChmS9Q@mail.gmail.com>
Message-ID: <56C573B3.8020001@jonbondy.com>

Paul, Ronaldo:

The best way to import STLs into SketchUp is to first use an external 
utility (NetFabb Basic is fine) to make them 10 or 100 times larger than 
the original.  Then SketchUp does not bother to "fix" the fine/detailed 
aspects of the model, and you do not have to use Cleanup or Solid 
Inspector.  I then re-scale them back down when I'm done, sometimes in 
SketchUp, but sometimes using NetFabb Basic again.

Jon

On 2/18/2016 12:32 AM, Ronaldo Persiano wrote:
> Paul
> What you call "unsavory" behaviour of OpenSCAD is a standard procedure 
> most software do when exporting stl. If you want to discard the 
> disposable edges of the stl in Sketchup use the plugin Cleanup by 
> Thomthom 
> (http://sketchucation.com/pluginstore?pagecount=1&author=1149&listtype=1&currentpage=1&actualpage=Next+%3E).
>
> What I call unsavoury behaviour is the ability Sketchup has to destroy 
> the topology when importing a healthy stl with a dense set of 
> vertices. To confirm this just import any gear you find in Thingverse. 
> To solve this you will need another plugin by Thomthom: Solid 
> Inspector and a lot of manual work.
>
> Ronaldo
>
> 2016-02-18 2:54 GMT-02:00 Paul F. Sehorne <paul at sehorne.org 
> <mailto:paul at sehorne.org>>:
>
>     I have found in DesignSpark that I can right-click on an object in the
>     Structure view and select 'Convert to solid' -> 'Merge faces' and undo the
>     unsavory behavior of OpenSCAD
>
>     -- 
>     *Paul*
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160218/04382145/attachment.html>

From paul at sehorne.org  Thu Feb 18 10:52:10 2016
From: paul at sehorne.org (Paul F. Sehorne)
Date: Thu, 18 Feb 2016 09:52:10 -0600
Subject: [OpenSCAD] STL shows unwanted co-planar faces in SketchUp and
 DesignSpark
In-Reply-To: <CA+i9EaA+_1Xo1=Pmi8w5xOBMPQF+My0kUkspzAezyTBtChmS9Q@mail.gmail.com>
References: <56C54E76.4020006@sehorne.org>
	<CA+i9EaA+_1Xo1=Pmi8w5xOBMPQF+My0kUkspzAezyTBtChmS9Q@mail.gmail.com>
Message-ID: <56C5E8AA.3020201@sehorne.org>

I tried Cleanup2 in Sketchup.  Although it improved the model, it still 
left two co-planar facets on each face which DesignSpark treated, of 
course, as separate items.  I still had to use DesignSpark's 'merge 
faces' capability.

On 2/17/2016 11:32 PM, Ronaldo Persiano wrote:
> Paul
> What you call "unsavory" behaviour of OpenSCAD is a standard procedure 
> most software do when exporting stl. If you want to discard the 
> disposable edges of the stl in Sketchup use the plugin Cleanup by 
> Thomthom 
> (http://sketchucation.com/pluginstore?pagecount=1&author=1149&listtype=1&currentpage=1&actualpage=Next+%3E).
>
> What I call unsavoury behaviour is the ability Sketchup has to destroy 
> the topology when importing a healthy stl with a dense set of 
> vertices. To confirm this just import any gear you find in Thingverse. 
> To solve this you will need another plugin by Thomthom: Solid 
> Inspector and a lot of manual work.
>
> Ronaldo
>
> 2016-02-18 2:54 GMT-02:00 Paul F. Sehorne <paul at sehorne.org 
> <mailto:paul at sehorne.org>>:
>
>     I have found in DesignSpark that I can right-click on an object in the
>     Structure view and select 'Convert to solid' -> 'Merge faces' and undo the
>     unsavory behavior of OpenSCAD
>
>     -- 
>     *Paul*
>
>     _______________________________________________
>     OpenSCAD mailing list
>     Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
>     http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


-- 
*Paul*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160218/ab300ff5/attachment.html>

From Paul at Sehorne.org  Thu Feb 18 10:54:09 2016
From: Paul at Sehorne.org (psehorne)
Date: Thu, 18 Feb 2016 08:54:09 -0700 (MST)
Subject: [OpenSCAD] STL shows unwanted co-planar faces in SketchUp and
	DesignSpark
In-Reply-To: <56C573B3.8020001@jonbondy.com>
References: <1455563042557-16152.post@n5.nabble.com>
	<56C54E76.4020006@sehorne.org>
	<CA+i9EaA+_1Xo1=Pmi8w5xOBMPQF+My0kUkspzAezyTBtChmS9Q@mail.gmail.com>
	<56C573B3.8020001@jonbondy.com>
Message-ID: <56C5E8EC.6030902@sehorne.org>

Thanks for the info

On 2/18/2016 1:34 AM, jon_bondy [via OpenSCAD] wrote:
> Paul, Ronaldo:
>
> The best way to import STLs into SketchUp is to first use an external 
> utility (NetFabb Basic is fine) to make them 10 or 100 times larger 
> than the original.  Then SketchUp does not bother to "fix" the 
> fine/detailed aspects of the model, and you do not have to use Cleanup 
> or Solid Inspector.  I then re-scale them back down when I'm done, 
> sometimes in SketchUp, but sometimes using NetFabb Basic again.
>
> Jon
>
> On 2/18/2016 12:32 AM, Ronaldo Persiano wrote:
>> Paul
>> What you call "unsavory" behaviour of OpenSCAD is a standard 
>> procedure most software do when exporting stl. If you want to discard 
>> the disposable edges of the stl in Sketchup use the plugin Cleanup by 
>> Thomthom 
>> (http://sketchucation.com/pluginstore?pagecount=1&author=1149&listtype=1&currentpage=1&actualpage=Next+%3E).
>>
>> What I call unsavoury behaviour is the ability Sketchup has to 
>> destroy the topology when importing a healthy stl with a dense set of 
>> vertices. To confirm this just import any gear you find in 
>> Thingverse. To solve this you will need another plugin by Thomthom: 
>> Solid Inspector and a lot of manual work.
>>
>> Ronaldo
>>
>> 2016-02-18 2:54 GMT-02:00 Paul F. Sehorne <[hidden email] 
>> </user/SendEmail.jtp?type=node&node=16172&i=0>>:
>>
>>     I have found in DesignSpark that I can right-click on an object in the
>>     Structure view and select 'Convert to solid' -> 'Merge faces' and undo the
>>     unsavory behavior of OpenSCAD
>>
>>     -- 
>>     *Paul*
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] </user/SendEmail.jtp?type=node&node=16172&i=1>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> ------------------------------------------------------------------------
> If you reply to this email, your message will be added to the 
> discussion below:
> http://forum.openscad.org/STL-shows-unwanted-co-planar-faces-in-SketchUp-and-DesignSpark-tp16152p16172.html 
>
> To unsubscribe from STL shows unwanted co-planar faces in SketchUp and 
> DesignSpark, click here 
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=16152&code=UGF1bEBTZWhvcm5lLm9yZ3wxNjE1MnwxMjQ0NjQ0MDQ2>.
> NAML 
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml> 
>

-- 
*Paul*




--
View this message in context: http://forum.openscad.org/STL-shows-unwanted-co-planar-faces-in-SketchUp-and-DesignSpark-tp16152p16174.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160218/dca5c4b3/attachment.html>

From lboyd at frontiernet.net  Thu Feb 18 12:15:33 2016
From: lboyd at frontiernet.net (L Boyd)
Date: Thu, 18 Feb 2016 10:15:33 -0700 (MST)
Subject: [OpenSCAD] Polyhedron face point order
Message-ID: <1455815733528-16175.post@n5.nabble.com>

In the manual description of polyhedron it states: "Point ordering for faces
When looking at the face from the outside inwards, the points must be
clockwise."

I have found that F6 seems happy with all faces counter clockwise, just no
mixed.

Anyone with knowledge of OpenSCAD internals have a comment?



-----
Larry
--
View this message in context: http://forum.openscad.org/Polyhedron-face-point-order-tp16175.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Thu Feb 18 12:32:33 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 18 Feb 2016 17:32:33 +0000
Subject: [OpenSCAD] Polyhedron face point order
In-Reply-To: <1455815733528-16175.post@n5.nabble.com>
References: <1455815733528-16175.post@n5.nabble.com>
Message-ID: <CAEEmnrMD+npuDAOpT5WzNTCMJ6a7rVWmD1gRzqdj6gruG8jt_A@mail.gmail.com>

Does it look purple in the F12 view?  If so it is inside out. I.e. a
cavity, instead of a solid.

On 18 February 2016 at 17:15, L Boyd <lboyd at frontiernet.net> wrote:

> In the manual description of polyhedron it states: "Point ordering for
> faces
> When looking at the face from the outside inwards, the points must be
> clockwise."
>
> I have found that F6 seems happy with all faces counter clockwise, just no
> mixed.
>
> Anyone with knowledge of OpenSCAD internals have a comment?
>
>
>
> -----
> Larry
> --
> View this message in context:
> http://forum.openscad.org/Polyhedron-face-point-order-tp16175.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160218/03b60833/attachment.html>

From arnholm at arnholm.org  Thu Feb 18 13:16:40 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Thu, 18 Feb 2016 19:16:40 +0100
Subject: [OpenSCAD] Polyhedron face point order
In-Reply-To: <1455815733528-16175.post@n5.nabble.com>
References: <1455815733528-16175.post@n5.nabble.com>
Message-ID: <56C60A88.8030207@arnholm.org>

On 18. feb. 2016 18:15, L Boyd wrote:
> In the manual description of polyhedron it states: "Point ordering for faces
> When looking at the face from the outside inwards, the points must be
> clockwise."
>
> I have found that F6 seems happy with all faces counter clockwise, just no
> mixed.
>
> Anyone with knowledge of OpenSCAD internals have a comment?

In most systems I have encountered, counterclockwise is the logical 
definition. I used that in Angelscript CSG which ends up in OpenSCAD as 
polyhedrons, and I observed no issues when I did that.

The recent thread about STL referred to a format description where it is 
explicitly stated in text and with a figure that the correct vertex 
order is counterclockwise (CCW) when looking at the face from outside 
looking inwards http://www.fabbers.com/tech/STL_Format

Unless OpenSCAD reverses all faces in polyhedrons when writing to STL, I 
guess the polyhedron face vertex order definition you are referring to 
is simply wrong.

If you check with the example under the definition text, this guess 
appears to be confirmed. The pyramid polyhedron example lists all the 
face vertices in CCW order when observing from outside looking in, 
exactly opposite the text definition.

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Primitive_Solids#polyhedron

So I think the definition in the text should be corrected from CW to CCW.

Carsten Arnholm



From doug at moens.org  Thu Feb 18 13:49:32 2016
From: doug at moens.org (doug moen)
Date: Thu, 18 Feb 2016 13:49:32 -0500
Subject: [OpenSCAD] Polyhedron face point order
In-Reply-To: <56C60A88.8030207@arnholm.org>
References: <1455815733528-16175.post@n5.nabble.com>
	<56C60A88.8030207@arnholm.org>
Message-ID: <CAGV6i+MRuWBnwYAn--1=M_B7oiakFqFSmNunaqMZw7R9PP23_g@mail.gmail.com>

I agree it seems weird for OpenSCAD to use the left hand rule for
polyhedron(), since both STL and CGAL use the opposite convention, but the
documentation appears to be correct. I tried creating a right-hand rule
polyhedron() a while back (counter-clockwise vertices as viewed from
outside), but the faces are purple in thrown-together mode, and you get
CGAL assertions if you try to do CSG operations on the polyhedron.

If you want to check my work and see if I'm mistaken, here it is:

points = [
[ 1,  1,  1],
[ 1,  1, -1],
[ 1, -1,  1],
[ 1, -1, -1],
[-1,  1,  1],
[-1,  1, -1],
[-1, -1,  1],
[-1, -1, -1],
];
faces = [
[ 4 , 5, 1, 0],
[ 2 , 6, 4, 0],
[ 1 , 3, 2, 0],
[ 6 , 2, 3, 7],
[ 5 , 4, 6, 7],
[ 3 , 1, 5, 7],
];
// vertexes are in the wrong order:
rfaces = [
[0,1,4,5],
[0,4,6,2],
[0,2,3,1],
[7,3,2,6],
[7,6,4,5],
[7,5,1,3],
];

polyhedron(points,rfaces);
cube(2); // CGAL error if rfaces used


On 18 February 2016 at 13:16, Carsten Arnholm <arnholm at arnholm.org> wrote:

> On 18. feb. 2016 18:15, L Boyd wrote:
>
>> In the manual description of polyhedron it states: "Point ordering for
>> faces
>> When looking at the face from the outside inwards, the points must be
>> clockwise."
>>
>> I have found that F6 seems happy with all faces counter clockwise, just no
>> mixed.
>>
>> Anyone with knowledge of OpenSCAD internals have a comment?
>>
>
> In most systems I have encountered, counterclockwise is the logical
> definition. I used that in Angelscript CSG which ends up in OpenSCAD as
> polyhedrons, and I observed no issues when I did that.
>
> The recent thread about STL referred to a format description where it is
> explicitly stated in text and with a figure that the correct vertex order
> is counterclockwise (CCW) when looking at the face from outside looking
> inwards http://www.fabbers.com/tech/STL_Format
>
> Unless OpenSCAD reverses all faces in polyhedrons when writing to STL, I
> guess the polyhedron face vertex order definition you are referring to is
> simply wrong.
>
> If you check with the example under the definition text, this guess
> appears to be confirmed. The pyramid polyhedron example lists all the face
> vertices in CCW order when observing from outside looking in, exactly
> opposite the text definition.
>
>
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Primitive_Solids#polyhedron
>
> So I think the definition in the text should be corrected from CW to CCW.
>
> Carsten Arnholm
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160218/d8fcc3d6/attachment.html>

From nop.head at gmail.com  Thu Feb 18 14:47:39 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 18 Feb 2016 19:47:39 +0000
Subject: [OpenSCAD] Polyhedron face point order
In-Reply-To: <CAGV6i+MRuWBnwYAn--1=M_B7oiakFqFSmNunaqMZw7R9PP23_g@mail.gmail.com>
References: <1455815733528-16175.post@n5.nabble.com>
	<56C60A88.8030207@arnholm.org>
	<CAGV6i+MRuWBnwYAn--1=M_B7oiakFqFSmNunaqMZw7R9PP23_g@mail.gmail.com>
Message-ID: <CAEEmnrNZUXUx=EGJXDdmDOTVgw_8pn5gbuPXo7ay6P_Y5jQtNw@mail.gmail.com>

Actually you have the first rface as a self intersecting polygon, which
CGAL hates. Fixing to [0,1,5,4], seems to make it happy and the result is a
pair of unioned cubes and is manifold. Very odd.


On 18 February 2016 at 18:49, doug moen <doug at moens.org> wrote:

> I agree it seems weird for OpenSCAD to use the left hand rule for
> polyhedron(), since both STL and CGAL use the opposite convention, but the
> documentation appears to be correct. I tried creating a right-hand rule
> polyhedron() a while back (counter-clockwise vertices as viewed from
> outside), but the faces are purple in thrown-together mode, and you get
> CGAL assertions if you try to do CSG operations on the polyhedron.
>
> If you want to check my work and see if I'm mistaken, here it is:
>
> points = [
> [ 1,  1,  1],
> [ 1,  1, -1],
> [ 1, -1,  1],
> [ 1, -1, -1],
> [-1,  1,  1],
> [-1,  1, -1],
> [-1, -1,  1],
> [-1, -1, -1],
> ];
> faces = [
> [ 4 , 5, 1, 0],
> [ 2 , 6, 4, 0],
> [ 1 , 3, 2, 0],
> [ 6 , 2, 3, 7],
> [ 5 , 4, 6, 7],
> [ 3 , 1, 5, 7],
> ];
> // vertexes are in the wrong order:
> rfaces = [
> [0,1,4,5],
> [0,4,6,2],
> [0,2,3,1],
> [7,3,2,6],
> [7,6,4,5],
> [7,5,1,3],
> ];
>
> polyhedron(points,rfaces);
> cube(2); // CGAL error if rfaces used
>
>
> On 18 February 2016 at 13:16, Carsten Arnholm <arnholm at arnholm.org> wrote:
>
>> On 18. feb. 2016 18:15, L Boyd wrote:
>>
>>> In the manual description of polyhedron it states: "Point ordering for
>>> faces
>>> When looking at the face from the outside inwards, the points must be
>>> clockwise."
>>>
>>> I have found that F6 seems happy with all faces counter clockwise, just
>>> no
>>> mixed.
>>>
>>> Anyone with knowledge of OpenSCAD internals have a comment?
>>>
>>
>> In most systems I have encountered, counterclockwise is the logical
>> definition. I used that in Angelscript CSG which ends up in OpenSCAD as
>> polyhedrons, and I observed no issues when I did that.
>>
>> The recent thread about STL referred to a format description where it is
>> explicitly stated in text and with a figure that the correct vertex order
>> is counterclockwise (CCW) when looking at the face from outside looking
>> inwards http://www.fabbers.com/tech/STL_Format
>>
>> Unless OpenSCAD reverses all faces in polyhedrons when writing to STL, I
>> guess the polyhedron face vertex order definition you are referring to is
>> simply wrong.
>>
>> If you check with the example under the definition text, this guess
>> appears to be confirmed. The pyramid polyhedron example lists all the face
>> vertices in CCW order when observing from outside looking in, exactly
>> opposite the text definition.
>>
>>
>> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Primitive_Solids#polyhedron
>>
>> So I think the definition in the text should be corrected from CW to CCW.
>>
>> Carsten Arnholm
>>
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160218/9d487811/attachment.html>

From arnholm at arnholm.org  Thu Feb 18 14:59:39 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Thu, 18 Feb 2016 20:59:39 +0100
Subject: [OpenSCAD] Polyhedron face point order
In-Reply-To: <CAGV6i+MRuWBnwYAn--1=M_B7oiakFqFSmNunaqMZw7R9PP23_g@mail.gmail.com>
References: <1455815733528-16175.post@n5.nabble.com>
	<56C60A88.8030207@arnholm.org>
	<CAGV6i+MRuWBnwYAn--1=M_B7oiakFqFSmNunaqMZw7R9PP23_g@mail.gmail.com>
Message-ID: <56C622AB.20701@arnholm.org>

On 18. feb. 2016 19:49, doug moen wrote:
> I agree it seems weird for OpenSCAD to use the left hand rule for
> polyhedron(), since both STL and CGAL use the opposite convention, but
> the documentation appears to be correct.

I misread the polyhedron example and came to the wrong conclusion when I 
said "The pyramid polyhedron example lists all the face vertices in CCW 
order when observing from outside looking in, exactly opposite the text 
definition. ". After double checking I can see now I was wrong, the 
vertices are listed in CW order in the example, consistent with the text 
requirement.

Still it is counterintuitive and inconsistent with STL and CGAL as you say.

> I tried creating a right-hand
> rule polyhedron() a while back (counter-clockwise vertices as viewed
> from outside), but the faces are purple in thrown-together mode, and you
> get CGAL assertions if you try to do CSG operations on the polyhedron.
>
> If you want to check my work and see if I'm mistaken, here it is:
>
> points = [
> [ 1,  1,  1],
> [ 1,  1, -1],
> [ 1, -1,  1],
> [ 1, -1, -1],
> [-1,  1,  1],
> [-1,  1, -1],
> [-1, -1,  1],
> [-1, -1, -1],
> ];
> faces = [
> [ 4 , 5, 1, 0],
> [ 2 , 6, 4, 0],
> [ 1 , 3, 2, 0],
> [ 6 , 2, 3, 7],
> [ 5 , 4, 6, 7],
> [ 3 , 1, 5, 7],
> ];
> // vertexes are in the wrong order:
> rfaces = [
> [0,1,4,5],
> [0,4,6,2],
> [0,2,3,1],
> [7,3,2,6],
> [7,6,4,5],
> [7,5,1,3],
> ];
>
> polyhedron(points,rfaces);
> cube(2); // CGAL error if rfaces used

The comment for rfaces is correct, it is in the wrong order. But the 
real problem is that first face is neither CW nor CCW, there are two 
diagonals crossing each other, so it should fail.

Try this instead:

points = [
[ 1,  1,  1],
[ 1,  1, -1],
[ 1, -1,  1],
[ 1, -1, -1],
[-1,  1,  1],
[-1,  1, -1],
[-1, -1,  1],
[-1, -1, -1],
];
cw_faces = [
[ 4 , 5, 1, 0],
[ 2 , 6, 4, 0],
[ 1 , 3, 2, 0],
[ 6 , 2, 3, 7],
[ 5 , 4, 6, 7],
[ 3 , 1, 5, 7],
];

ccw_faces = [
[ 0 , 1, 5, 4],
[ 2 , 0, 4, 6],
[ 1 , 0, 2, 3],
[ 6 , 7, 3, 2],
[ 5 , 7, 6, 4],
[ 3 , 7, 5, 1],
];

union() {
    polyhedron(points,ccw_faces);
    cube(2);
}

The union works fine with ccw_faces as well as cw_faces. I am guessing 
that someone is flipping the vertex order silently somewhere when 
cw_faces are given. However, a mix of cw and ccw faces will not work.

I really don't know how the "thrown together" thing is implemented, but 
to me it looks like it is trying to enforce what I would call the wrong 
rule. If you ignore it and use CCW consistent with STL and CGAL it looks 
to me booleans work fine.

Carsten Arnholm



From valerio at geody.com  Thu Feb 18 17:21:51 2016
From: valerio at geody.com (Valerio Capello)
Date: Thu, 18 Feb 2016 23:21:51 +0100
Subject: [OpenSCAD] OpenSCAD script generator for geolocated spots on a
	Planet Earth's model
Message-ID: <CAMbJgqAVXBcM1NkqxxKyUj=xVGUd6xpYGRr9sBbdPQ8Np5=fyg@mail.gmail.com>

Hi, I'm the developer at Geody, the geospatial web tool. I've recently
added support for OpenSCAD, so that you can choose one or multiple
places on Earth and get a script that adds geolocated spots on a
planet's model (the Earth model is included from the script and can be
downloaded separately from the website).

To generate the script you have to search for the place you want, or
enter coordinates directly, then you can download the script for a
single spot directly from the OpenSCAD link or you can add the spot to
the Cart and then from the Cart's page export all the spots (for
example, all the places you visited, or the location of all F1
circuits) you added as an OpenSCAD script. In the Cart's page there's
also the link to download the Earth's model. Scripts generated by
Geody are licensed as GPL/CC-by-sa.

You can test it here: http://www.geody.com

Feedback and photos of printed works are very welcomed

Valerio


From oz.at.michael at gmail.com  Thu Feb 18 17:55:26 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 18 Feb 2016 15:55:26 -0700 (MST)
Subject: [OpenSCAD] OpenSCAD script generator for geolocated spots on a
 Planet Earth's model
In-Reply-To: <CAMbJgqAVXBcM1NkqxxKyUj=xVGUd6xpYGRr9sBbdPQ8Np5=fyg@mail.gmail.com>
References: <CAMbJgqAVXBcM1NkqxxKyUj=xVGUd6xpYGRr9sBbdPQ8Np5=fyg@mail.gmail.com>
Message-ID: <1455836126029-16182.post@n5.nabble.com>

I think the globe needs at least twice the resolution.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/OpenSCAD-script-generator-for-geolocated-spots-on-a-Planet-Earth-s-model-tp16181p16182.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rl.ward at bigpond.com  Thu Feb 18 20:36:02 2016
From: rl.ward at bigpond.com (Rob Ward)
Date: Fri, 19 Feb 2016 12:36:02 +1100
Subject: [OpenSCAD] OpenSCAD script generator for geolocated spots on a
 Planet Earth's model
In-Reply-To: <1455836126029-16182.post@n5.nabble.com>
References: <CAMbJgqAVXBcM1NkqxxKyUj=xVGUd6xpYGRr9sBbdPQ8Np5=fyg@mail.gmail.com>
	<1455836126029-16182.post@n5.nabble.com>
Message-ID: <56C67182.1040600@bigpond.com>



Maybe I have done something wrong (I just copied the .scad file and 
geody_earthmap.stl to a local pathway and ran it) , but I thought I had 
requested a chunk of the model near where I live in South Eastern 
Australia, and it has drawn a sphere centered on it but concealing the 
detail I was after.  However if the resolution can be changed with $fn 
in my chosen area, that would be good, but at the moment I can't see 
what I am after.
Interesting concept all the same.
Cheers, Rob

On 19/02/16 09:55, MichaelAtOz wrote:
> I think the globe needs at least twice the resolution.
>
>
>
> -----
> Newly minted Admin - PM me if you need anything, or if I've done something stupid...
>
> Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.
>
> The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
> --
> View this message in context: http://forum.openscad.org/OpenSCAD-script-generator-for-geolocated-spots-on-a-Planet-Earth-s-model-tp16181p16182.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160219/2886d8e7/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: SE_Australia
Type: image/png
Size: 121302 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160219/2886d8e7/attachment.png>

From oz.at.michael at gmail.com  Thu Feb 18 20:42:47 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 18 Feb 2016 18:42:47 -0700 (MST)
Subject: [OpenSCAD] OpenSCAD script generator for geolocated spots on a
 Planet Earth's model
In-Reply-To: <56C67182.1040600@bigpond.com>
References: <CAMbJgqAVXBcM1NkqxxKyUj=xVGUd6xpYGRr9sBbdPQ8Np5=fyg@mail.gmail.com>
	<1455836126029-16182.post@n5.nabble.com>
	<56C67182.1040600@bigpond.com>
Message-ID: <1455846167627-16184.post@n5.nabble.com>

Rob,

Just change the variables, I used

wrad=wwrad/60; // Radius of the Spot
wradp=wwrad; // Distance of the Spot from the center of the Planet

<http://forum.openscad.org/file/n16184/geo.jpg> 
(Canberra)




-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/OpenSCAD-script-generator-for-geolocated-spots-on-a-Planet-Earth-s-model-tp16181p16184.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From fred_dot_u at yahoo.com  Thu Feb 18 20:43:09 2016
From: fred_dot_u at yahoo.com (fred)
Date: Fri, 19 Feb 2016 01:43:09 +0000 (UTC)
Subject: [OpenSCAD] OpenSCAD script generator for geolocated spots on a
 Planet Earth's model
In-Reply-To: <56C67182.1040600@bigpond.com>
References: <56C67182.1040600@bigpond.com>
Message-ID: <1439680063.6621234.1455846189298.JavaMail.yahoo@mail.yahoo.com>

I expect it's too much to hope for high resolution at a smaller region level. Instead of getting the entire planet in OpenSCAD format, it would be great if the information could be collected for a restricted area. If one considers the entire Earth data as a 3d object, there's far too many triangles to load at one time in any appreciable resolution. Give me a square kilometer or nine of them around a selected point but to a resolution of a meter or so.
 

    On Thursday, February 18, 2016 8:37 PM, Rob Ward <rl.ward at bigpond.com> wrote:
 

  
 
 Maybe I have done something wrong (I just copied the .scad file and geody_earthmap.stl to a local pathway and ran it) , but I thought I had requested a chunk of the model near where I live in South Eastern Australia, and it has drawn a sphere centered on it but concealing the detail I was after.? However if the resolution can be changed with $fn in my chosen area, that would be good, but at the moment I can't see what I am after.
 Interesting concept all the same.
 Cheers, Rob
 
 On 19/02/16 09:55, MichaelAtOz wrote:
  
 I think the globe needs at least twice the resolution.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/OpenSCAD-script-generator-for-geolocated-spots-on-a-Planet-Earth-s-model-tp16181p16182.html
Sent from the OpenSCAD mailing list archive at Nabble.com.

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
 
 
 
_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160219/0a79e922/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: SE_Australia
Type: image/png
Size: 121302 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160219/0a79e922/attachment.png>

From oz.at.michael at gmail.com  Thu Feb 18 20:55:08 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 18 Feb 2016 18:55:08 -0700 (MST)
Subject: [OpenSCAD] OpenSCAD script generator for geolocated spots on a
 Planet Earth's model
In-Reply-To: <CAMbJgqAVXBcM1NkqxxKyUj=xVGUd6xpYGRr9sBbdPQ8Np5=fyg@mail.gmail.com>
References: <CAMbJgqAVXBcM1NkqxxKyUj=xVGUd6xpYGRr9sBbdPQ8Np5=fyg@mail.gmail.com>
Message-ID: <1455846908593-16186.post@n5.nabble.com>

ElfQrin wrote
> Feedback and photos of printed works are very welcomed


Valerio,

It would help of the spots were oriented tangential to the notional sphere.
I was hoping this would look spiky.
<http://forum.openscad.org/file/n16186/geo_non-tangent.jpg>  



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/OpenSCAD-script-generator-for-geolocated-spots-on-a-Planet-Earth-s-model-tp16181p16186.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Feb 18 21:09:52 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 18 Feb 2016 19:09:52 -0700 (MST)
Subject: [OpenSCAD] OpenSCAD script generator for geolocated spots on a
 Planet Earth's model
In-Reply-To: <1455846908593-16186.post@n5.nabble.com>
References: <CAMbJgqAVXBcM1NkqxxKyUj=xVGUd6xpYGRr9sBbdPQ8Np5=fyg@mail.gmail.com>
	<1455846908593-16186.post@n5.nabble.com>
Message-ID: <1455847792498-16187.post@n5.nabble.com>

tangent - radial you know what I mean, spiky...either would do.
In fact tangential aligned to the longitude, with north being +Z, would
probably be useful. Then you know which way you are pointing

i.e supplying the appropriate rotations like this
<http://forum.openscad.org/file/n16187/geo_tangent.jpg> 



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/OpenSCAD-script-generator-for-geolocated-spots-on-a-Planet-Earth-s-model-tp16181p16187.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Feb 18 21:17:30 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 18 Feb 2016 19:17:30 -0700 (MST)
Subject: [OpenSCAD] OpenSCAD script generator for geolocated spots on a
 Planet Earth's model
In-Reply-To: <CAMbJgqAVXBcM1NkqxxKyUj=xVGUd6xpYGRr9sBbdPQ8Np5=fyg@mail.gmail.com>
References: <CAMbJgqAVXBcM1NkqxxKyUj=xVGUd6xpYGRr9sBbdPQ8Np5=fyg@mail.gmail.com>
Message-ID: <1455848250717-16188.post@n5.nabble.com>

Valerio, I assume the XZ plane is through Greenwich? 




-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/OpenSCAD-script-generator-for-geolocated-spots-on-a-Planet-Earth-s-model-tp16181p16188.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Feb 18 21:28:57 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 18 Feb 2016 19:28:57 -0700 (MST)
Subject: [OpenSCAD] OpenSCAD script generator for geolocated spots on a
 Planet Earth's model
In-Reply-To: <1455848250717-16188.post@n5.nabble.com>
References: <CAMbJgqAVXBcM1NkqxxKyUj=xVGUd6xpYGRr9sBbdPQ8Np5=fyg@mail.gmail.com>
	<1455848250717-16188.post@n5.nabble.com>
Message-ID: <1455848937925-16189.post@n5.nabble.com>

You also need a convexity= on the import, 4 worked for me.
Showed as a problem on preview when I differenced a cube to get a
hemisphere.



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/OpenSCAD-script-generator-for-geolocated-spots-on-a-Planet-Earth-s-model-tp16181p16189.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From lboyd at frontiernet.net  Fri Feb 19 09:09:31 2016
From: lboyd at frontiernet.net (L Boyd)
Date: Fri, 19 Feb 2016 07:09:31 -0700 (MST)
Subject: [OpenSCAD] Polyhedron face point order
In-Reply-To: <56C622AB.20701@arnholm.org>
References: <1455815733528-16175.post@n5.nabble.com>
	<56C60A88.8030207@arnholm.org>
	<CAGV6i+MRuWBnwYAn--1=M_B7oiakFqFSmNunaqMZw7R9PP23_g@mail.gmail.com>
	<56C622AB.20701@arnholm.org>
Message-ID: <1455890971065-16190.post@n5.nabble.com>

Ok, you inspired me to test further using a simple example with 4 faces.

Looking at the STL files:
   CW faces are converted to CCW, with normals pointing out
   CCW faces are converted to CW, with normals pointing in

I did it twice to be sure I didn't get them mixed up
Cura likes both, showing the same time and material to print each

Here is my example with 4 points and 4 faces

  points = [
    [0,0,10],
    [10,0,0],
    [0,-10,0],
    [-10,0,0]];

  cw_faces = [
    [0,1,2],
    [0,2,3],
    [0,3,1],
    [3,2,1]];
    
  ccw_faces = [
    [0,2,1],
    [0,3,2],
    [0,1,3],
    [1,2,3]];
    
polyhedron(points,cw_faces);
//polyhedron(points,ccw_faces);

Looking at the bottom face in the XY plane, with added comments:
Others faces are treated in like fashion.


CW  [3,2,1]                 // becomes [1,2,3]
  facet normal -0 0 -1   //out
    outer loop
      vertex 10 0 0         //1
      vertex 0 -10 0       //2
      vertex -10 0 0       //3
    endloop
  endfacet

CCW  [1,2,3]              //becomes [3,2,1]
    facet normal -0 0 1  //in
    outer loop
      vertex -10 0 0      //3
      vertex 0 -10 0      //2
      vertex 10 0 0       //1
    endloop
  endfacet




-----
Larry
--
View this message in context: http://forum.openscad.org/Polyhedron-face-point-order-tp16175p16190.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jenna.vergeynst at ugent.be  Fri Feb 19 09:29:48 2016
From: jenna.vergeynst at ugent.be (Jenna)
Date: Fri, 19 Feb 2016 07:29:48 -0700 (MST)
Subject: [OpenSCAD] OpenSCAD for sluice complex
Message-ID: <1455892188666-16191.post@n5.nabble.com>

Hi,

I?m looking for a program to draw a sluice complex in 3D. I have the plans
with the dimensions, but only in scanned pdf-format (no CAD-plans) and from
this, I need to make a geometry that can serve as a basis in OpenFOAM. The
objective is to build a CFD-model for this sluice complex. Is OpenSCAD a
convenient program for this application?
I read on the side that it is compatible with OpenFOAM, because it can give
.stl files, but there is quite emphasis on creating solid models, like
machine parts, which is not the case for my application (as the sluice
complex is an open geometry).

Thanks in advance for your advise,
Jenna



--
View this message in context: http://forum.openscad.org/OpenSCAD-for-sluice-complex-tp16191.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Fri Feb 19 09:56:18 2016
From: nop.head at gmail.com (nop head)
Date: Fri, 19 Feb 2016 14:56:18 +0000
Subject: [OpenSCAD] OpenSCAD for sluice complex
In-Reply-To: <1455892188666-16191.post@n5.nabble.com>
References: <1455892188666-16191.post@n5.nabble.com>
Message-ID: <CAEEmnrN8itTigFs4y1Vyr71ZGZ6UaOuzQygvpusBTestFOWrJg@mail.gmail.com>

Not sure what you mean by "open geometry".  If it is a realistic 3D model
of a sluice then it must be a solid model. That doesn't mean it cant have
holes through it or cavities. It means the mesh that represents its surface
must be closed and not have holes in it. I.e. it must be a 2-manifold, as
all real world objects are.

If, on the other hand, you want to make a non-manifold mesh then OpenScad
is not the right tool.

On 19 February 2016 at 14:29, Jenna <jenna.vergeynst at ugent.be> wrote:

> Hi,
>
> I?m looking for a program to draw a sluice complex in 3D. I have the plans
> with the dimensions, but only in scanned pdf-format (no CAD-plans) and from
> this, I need to make a geometry that can serve as a basis in OpenFOAM. The
> objective is to build a CFD-model for this sluice complex. Is OpenSCAD a
> convenient program for this application?
> I read on the side that it is compatible with OpenFOAM, because it can give
> .stl files, but there is quite emphasis on creating solid models, like
> machine parts, which is not the case for my application (as the sluice
> complex is an open geometry).
>
> Thanks in advance for your advise,
> Jenna
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/OpenSCAD-for-sluice-complex-tp16191.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160219/92f31673/attachment.html>

From arnholm at arnholm.org  Fri Feb 19 13:15:12 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Fri, 19 Feb 2016 19:15:12 +0100
Subject: [OpenSCAD] Polyhedron face point order
In-Reply-To: <1455890971065-16190.post@n5.nabble.com>
References: <1455815733528-16175.post@n5.nabble.com>
	<56C60A88.8030207@arnholm.org>
	<CAGV6i+MRuWBnwYAn--1=M_B7oiakFqFSmNunaqMZw7R9PP23_g@mail.gmail.com>
	<56C622AB.20701@arnholm.org> <1455890971065-16190.post@n5.nabble.com>
Message-ID: <56C75BB0.7050708@arnholm.org>

On 19. feb. 2016 15:09, L Boyd wrote:
> Ok, you inspired me to test further using a simple example with 4 faces.
>
> Looking at the STL files:
>     CW faces are converted to CCW, with normals pointing out
>     CCW faces are converted to CW, with normals pointing in

Apparently, that means OpenSCAD is flipping the sense of the faces 
without any check. It would make more sense not to do that.

Carsten Arnholm


From kennethrsloan at gmail.com  Fri Feb 19 13:30:44 2016
From: kennethrsloan at gmail.com (Kenneth Sloan)
Date: Fri, 19 Feb 2016 12:30:44 -0600
Subject: [OpenSCAD] Polyhedron face point order
In-Reply-To: <56C75BB0.7050708@arnholm.org>
References: <1455815733528-16175.post@n5.nabble.com>
	<56C60A88.8030207@arnholm.org>
	<CAGV6i+MRuWBnwYAn--1=M_B7oiakFqFSmNunaqMZw7R9PP23_g@mail.gmail.com>
	<56C622AB.20701@arnholm.org>
	<1455890971065-16190.post@n5.nabble.com>
	<56C75BB0.7050708@arnholm.org>
Message-ID: <36E1AB85-773A-43DD-AE19-0A95A48B2F00@gmail.com>

And Cura accepts either - which (IMNSHO) is not correct.  I think it should at least generate a warning.

There are competing conventions - the only reason to pick one over the other is consistency.

The next interesting test might be to create a difference of two cubes (each cube built as is done here and scaled differently).  What does OpenSCAD do with the faces defining the hole?  Of course, now there are 4 conditions to check:

a) big cube  CW, smaller hole  CW
b) big cube  CW, smaller hole  CCW
c) big cube CCW, smaller hole CW
d) big cube CCW, smaller hole CCW

and what we want to know is: direction of the facets on the outer surface and on the interior hole, for each of the above.
?
Kenneth Sloan
KennethRSloan at gmail.com <mailto:KennethRSloan at gmail.com>
Vision is the art of seeing what is invisible to others.

> On Feb 19, 2016, at 12:15, Carsten Arnholm <arnholm at arnholm.org> wrote:
> 
> On 19. feb. 2016 15:09, L Boyd wrote:
>> Ok, you inspired me to test further using a simple example with 4 faces.
>> 
>> Looking at the STL files:
>>    CW faces are converted to CCW, with normals pointing out
>>    CCW faces are converted to CW, with normals pointing in
> 
> Apparently, that means OpenSCAD is flipping the sense of the faces without any check. It would make more sense not to do that.
> 
> Carsten Arnholm
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160219/4b5ff33e/attachment.html>

From nop.head at gmail.com  Fri Feb 19 13:33:42 2016
From: nop.head at gmail.com (nop head)
Date: Fri, 19 Feb 2016 18:33:42 +0000
Subject: [OpenSCAD] Polyhedron face point order
In-Reply-To: <56C75BB0.7050708@arnholm.org>
References: <1455815733528-16175.post@n5.nabble.com>
	<56C60A88.8030207@arnholm.org>
	<CAGV6i+MRuWBnwYAn--1=M_B7oiakFqFSmNunaqMZw7R9PP23_g@mail.gmail.com>
	<56C622AB.20701@arnholm.org>
	<1455890971065-16190.post@n5.nabble.com>
	<56C75BB0.7050708@arnholm.org>
Message-ID: <CAEEmnrON14Gt6t_cS=7am6o9+NkvLxb5Z+R0a5Q5Z3JF9jc5Ew@mail.gmail.com>

Doesn't it just mean that polyhedron uses the opposite convention to STL,
so they should always get flipped going from one the other.

On 19 February 2016 at 18:15, Carsten Arnholm <arnholm at arnholm.org> wrote:

> On 19. feb. 2016 15:09, L Boyd wrote:
>
>> Ok, you inspired me to test further using a simple example with 4 faces.
>>
>> Looking at the STL files:
>>     CW faces are converted to CCW, with normals pointing out
>>     CCW faces are converted to CW, with normals pointing in
>>
>
> Apparently, that means OpenSCAD is flipping the sense of the faces without
> any check. It would make more sense not to do that.
>
> Carsten Arnholm
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160219/3f7f0362/attachment.html>

From ilceren at hotmail.com  Fri Feb 19 15:25:02 2016
From: ilceren at hotmail.com (Ilceren)
Date: Fri, 19 Feb 2016 13:25:02 -0700 (MST)
Subject: [OpenSCAD] OpenSCAD command line crash in Ubuntu
Message-ID: <1455913502741-16196.post@n5.nabble.com>

Good afternoon,
I've been trying to run OpenSCAD in a remote server running Ubuntu, which
means I don't have access to the GUI and I have to do everything via the
command lime. Everything looks fine on every end, but on execution, OpenSCAD
crashes with the following error:
ERROR: boost::filesystem::canonical: No such file or directory:
"/home/example-user/.local/share"

The SCAD file is built in runtime, and it makes use of a STL file and a PNG
image, but all of them separately look good. I have tried taking all those
files to my local Windows system and running OpenSCAD from the command line
here, and it runs smoothly and generates the STL output almost instantly.

Windows version is 2015.03-1, while the Ubuntu server version is
2015.03-1+dfsg-0.1~trusty1, which I imagine is pretty much the same. The
only difference between the command and SCAD file used is that I changed the
address from being absolute in Ubuntu to being relative in Windows.

The command used reads as follows:
 openscad /home/[path]/bayern.stl.custom_1.scad -o
/home/[path]/bayern.stl.custom_1.stl --render

The SCAD file has the following content:
union() {
	import(file = "/home/[path]/bayern.stl", origin = [0, 0]);
	union() {
		translate(v = [0.0000000000, -1.0000000000, 4.0000000000]) {
			rotate(a = [0.0000000000, 0.0000000000, 0.0000000000]) {
				scale(v = [0.1000000000, 0.1000000000, 0.0039370079]) {
					surface(center = true, file =
"/home/[path]/3182a2c5454c7408e7032969b3a3aff8-97.png.png", invert = false);
				}
			}
		}
	}
}


Any ideas? I have censored the real paths of the files, but I can assure you
that the path the error mentions isn't remotely close to the ones used. The
only common part would be the name of the user after /home/, but the next
two folders are non-existent as far as I know.

I can't afford to do the OpenSCAD rendering by hand as this is supposed to
be an automated process performed on demand to arbitrary STL and PNG files,
with custom SCAD properties for each. I know the file names look odd, but
they work well in Windows.

Thank you for your time,
Ilceren



--
View this message in context: http://forum.openscad.org/OpenSCAD-command-line-crash-in-Ubuntu-tp16196.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jdawgaz at gmail.com  Fri Feb 19 15:34:12 2016
From: jdawgaz at gmail.com (Jerry Davis)
Date: Fri, 19 Feb 2016 13:34:12 -0700
Subject: [OpenSCAD] OpenSCAD command line crash in Ubuntu
In-Reply-To: <1455913502741-16196.post@n5.nabble.com>
References: <1455913502741-16196.post@n5.nabble.com>
Message-ID: <CAMyDR6LnVDhSQTkgK38A6WrUYysaU_0h8zgQ04g9JtKdaZykzg@mail.gmail.com>

you didn't delete that directory did you?

read this:
http://askubuntu.com/questions/14535/whats-the-local-folder-for-in-my-home-directory

I don't know if openscad uses that directory or not. but it may appear that
it does.



--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson

On Fri, Feb 19, 2016 at 1:25 PM, Ilceren <ilceren at hotmail.com> wrote:

> Good afternoon,
> I've been trying to run OpenSCAD in a remote server running Ubuntu, which
> means I don't have access to the GUI and I have to do everything via the
> command lime. Everything looks fine on every end, but on execution,
> OpenSCAD
> crashes with the following error:
> ERROR: boost::filesystem::canonical: No such file or directory:
> "/home/example-user/.local/share"
>
> The SCAD file is built in runtime, and it makes use of a STL file and a PNG
> image, but all of them separately look good. I have tried taking all those
> files to my local Windows system and running OpenSCAD from the command line
> here, and it runs smoothly and generates the STL output almost instantly.
>
> Windows version is 2015.03-1, while the Ubuntu server version is
> 2015.03-1+dfsg-0.1~trusty1, which I imagine is pretty much the same. The
> only difference between the command and SCAD file used is that I changed
> the
> address from being absolute in Ubuntu to being relative in Windows.
>
> The command used reads as follows:
>  openscad /home/[path]/bayern.stl.custom_1.scad -o
> /home/[path]/bayern.stl.custom_1.stl --render
>
> The SCAD file has the following content:
> union() {
>         import(file = "/home/[path]/bayern.stl", origin = [0, 0]);
>         union() {
>                 translate(v = [0.0000000000, -1.0000000000, 4.0000000000])
> {
>                         rotate(a = [0.0000000000, 0.0000000000,
> 0.0000000000]) {
>                                 scale(v = [0.1000000000, 0.1000000000,
> 0.0039370079]) {
>                                         surface(center = true, file =
> "/home/[path]/3182a2c5454c7408e7032969b3a3aff8-97.png.png", invert =
> false);
>                                 }
>                         }
>                 }
>         }
> }
>
>
> Any ideas? I have censored the real paths of the files, but I can assure
> you
> that the path the error mentions isn't remotely close to the ones used. The
> only common part would be the name of the user after /home/, but the next
> two folders are non-existent as far as I know.
>
> I can't afford to do the OpenSCAD rendering by hand as this is supposed to
> be an automated process performed on demand to arbitrary STL and PNG files,
> with custom SCAD properties for each. I know the file names look odd, but
> they work well in Windows.
>
> Thank you for your time,
> Ilceren
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/OpenSCAD-command-line-crash-in-Ubuntu-tp16196.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160219/95ed89f6/attachment.html>

From valerio at geody.com  Fri Feb 19 20:12:56 2016
From: valerio at geody.com (Valerio Capello)
Date: Sat, 20 Feb 2016 02:12:56 +0100
Subject: [OpenSCAD] OpenSCAD script generator for geolocated spots on a
 Planet Earth's model
In-Reply-To: <1455848937925-16189.post@n5.nabble.com>
References: <CAMbJgqAVXBcM1NkqxxKyUj=xVGUd6xpYGRr9sBbdPQ8Np5=fyg@mail.gmail.com>
	<1455848250717-16188.post@n5.nabble.com>
	<1455848937925-16189.post@n5.nabble.com>
Message-ID: <CAMbJgqBBNRdhRj-kYH=7-fEYBOuVVUdeSGnWzzAwBWb5ebT1=w@mail.gmail.com>

Thank you everybody for the feedback so far.

I'll add convexity = 4 on the import, and I'll look into the maths for
the spiky spots (in fact, when you use small spheres as dots as I did
you don't need to care about their orientation).

MichaelAtOz: Yes, XZ plane is through Greenwich. Geographical
coordinates work as expected.

Valerio


2016-02-19 3:28 GMT+01:00 MichaelAtOz <oz.at.michael at gmail.com>:
> You also need a convexity= on the import, 4 worked for me.
> Showed as a problem on preview when I differenced a cube to get a
> hemisphere.
>
>
>
> -----
> Admin - PM me if you need anything, or if I've done something stupid...
>
> Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.
>
> The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
> --
> View this message in context: http://forum.openscad.org/OpenSCAD-script-generator-for-geolocated-spots-on-a-Planet-Earth-s-model-tp16181p16189.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


From ilceren at hotmail.com  Sat Feb 20 11:24:19 2016
From: ilceren at hotmail.com (Ilceren)
Date: Sat, 20 Feb 2016 09:24:19 -0700 (MST)
Subject: [OpenSCAD] OpenSCAD command line crash in Ubuntu
In-Reply-To: <CAMyDR6LnVDhSQTkgK38A6WrUYysaU_0h8zgQ04g9JtKdaZykzg@mail.gmail.com>
References: <1455913502741-16196.post@n5.nabble.com>
	<CAMyDR6LnVDhSQTkgK38A6WrUYysaU_0h8zgQ04g9JtKdaZykzg@mail.gmail.com>
Message-ID: <1455985459102-16200.post@n5.nabble.com>

Hm, no, I haven't deleted it. Since the user folder was created manually, the
folder probably wasn't there from the start. I created the folder and the
error stopped happening, so that was it. However, it appeared the process
was killed by the system before finishing.

I've found out that is because the server doesn't have enough resources, and
once OpenSCAD reaches the limit, the system kills the process. A big part of
that is because, while the input STL file is about 250 KB in size, the
OpenSCAD-produced output weights 6 MB. Does anyone know how to reduce the
quality of the produced mesh and therefore the STL size? Or maybe I should
open a new thread with that question and close this one?



--
View this message in context: http://forum.openscad.org/OpenSCAD-command-line-crash-in-Ubuntu-tp16196p16200.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Sat Feb 20 16:54:55 2016
From: nop.head at gmail.com (nop head)
Date: Sat, 20 Feb 2016 21:54:55 +0000
Subject: [OpenSCAD] OpenSCAD command line crash in Ubuntu
In-Reply-To: <1455985459102-16200.post@n5.nabble.com>
References: <1455913502741-16196.post@n5.nabble.com>
	<CAMyDR6LnVDhSQTkgK38A6WrUYysaU_0h8zgQ04g9JtKdaZykzg@mail.gmail.com>
	<1455985459102-16200.post@n5.nabble.com>
Message-ID: <CAEEmnrOt248qqQBbaviUD_-12cnOzBzNeCBAgc_114qS=Ze12w@mail.gmail.com>

OpenScad produces ASCII STLs. If your source file is binary it will get a
lot bigger. That doesn't affect resource use though. CGAL can use lots of
memory to represent simple things when you start doing boolean ops.

On 20 February 2016 at 16:24, Ilceren <ilceren at hotmail.com> wrote:

> Hm, no, I haven't deleted it. Since the user folder was created manually,
> the
> folder probably wasn't there from the start. I created the folder and the
> error stopped happening, so that was it. However, it appeared the process
> was killed by the system before finishing.
>
> I've found out that is because the server doesn't have enough resources,
> and
> once OpenSCAD reaches the limit, the system kills the process. A big part
> of
> that is because, while the input STL file is about 250 KB in size, the
> OpenSCAD-produced output weights 6 MB. Does anyone know how to reduce the
> quality of the produced mesh and therefore the STL size? Or maybe I should
> open a new thread with that question and close this one?
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/OpenSCAD-command-line-crash-in-Ubuntu-tp16196p16200.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160220/d07a4015/attachment.html>

From oz.at.michael at gmail.com  Sun Feb 21 01:05:19 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 20 Feb 2016 23:05:19 -0700 (MST)
Subject: [OpenSCAD] just in case your design is affected
Message-ID: <1456034719425-16202.post@n5.nabble.com>

Some of you may have not seen  this
<http://www.thingiverse.com/thing:1350837>  .
Some  analysis
<http://michaelweinberg.org/post/139607754335/abusing-models-on-thingiverse-or-the-plight-of> 
.



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/just-in-case-your-design-is-affected-tp16202.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From fma at gbiloba.org  Sun Feb 21 04:22:27 2016
From: fma at gbiloba.org (fma)
Date: Sun, 21 Feb 2016 02:22:27 -0700 (MST)
Subject: [OpenSCAD] Driving OpenSCAD
Message-ID: <1456046547986-16203.post@n5.nabble.com>

Hi,

Is there ? way to 'drive' an OpenSCAD design from an external application,
throught an API or a socket or so?

I designed a 3D printed hexapod, and I'm also working on a python framework
to control it, and I'm looking for a solution to simulate the hexapod
without hardware; being able to use my OpenSCAD design would be really
great!

Thank's

Fr?d?ric



--
View this message in context: http://forum.openscad.org/Driving-OpenSCAD-tp16203.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Sun Feb 21 05:56:21 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Sun, 21 Feb 2016 11:56:21 +0100
Subject: [OpenSCAD] Driving OpenSCAD
In-Reply-To: <1456046547986-16203.post@n5.nabble.com>
References: <1456046547986-16203.post@n5.nabble.com>
Message-ID: <56C997D5.7050209@arnholm.org>

On 21. feb. 2016 10:22, fma wrote:
> Hi,
>
> Is there ? way to 'drive' an OpenSCAD design from an external application,
> throught an API or a socket or so?

You could generate an OpenSCAD .csg file from your application, it is 
essentially a much simplified "compiled" version of the .scad language. 
This is what AngelScript CSG is currently doing.

Carsten Arnholm
http://arnholm.org/



From fma at gbiloba.org  Sun Feb 21 06:24:38 2016
From: fma at gbiloba.org (fma)
Date: Sun, 21 Feb 2016 04:24:38 -0700 (MST)
Subject: [OpenSCAD] Driving OpenSCAD
In-Reply-To: <56C997D5.7050209@arnholm.org>
References: <1456046547986-16203.post@n5.nabble.com>
	<56C997D5.7050209@arnholm.org>
Message-ID: <20160221122418.0ef2d998@gbiloba.org>

Le dimanche 21 f?vrier 2016, cacb a ?crit :

> You could generate an OpenSCAD .csg file from your application, it is 
> essentially a much simplified "compiled" version of the .scad language. 
> This is what AngelScript CSG is currently doing.

I see.

But what I want to do is just to move some already defined objects, and
have them rendered in OpenSCAD in real time? while my python framework
compute new positions; how can I do that with .csg file?

Thanks,

? as fast as the computer can render objects.

-- 
    Fr?d?ric




--
View this message in context: http://forum.openscad.org/Driving-OpenSCAD-tp16203p16205.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160221/cad7ca7c/attachment.html>

From Torsten.Paul at gmx.de  Sun Feb 21 06:35:46 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 21 Feb 2016 12:35:46 +0100
Subject: [OpenSCAD] Driving OpenSCAD
In-Reply-To: <20160221122418.0ef2d998@gbiloba.org>
References: <1456046547986-16203.post@n5.nabble.com>
	<56C997D5.7050209@arnholm.org> <20160221122418.0ef2d998@gbiloba.org>
Message-ID: <56C9A112.9000307@gmx.de>

On 02/21/2016 12:24 PM, fma wrote:
> But what I want to do is just to move some already defined objects, and
> have them rendered in OpenSCAD in real time? while my python framework
> compute new positions; how can I do that with .csg file?
>
With a .csg file, you can't.

However there might be a way that comes close to what you
describe. The $vpX variables that define the camera position
are writable on top-level .scad file.

So you could include a simple control file on top of your
model, e.g.

  include</tmp/vpx.scad>

and write the values to that file, e.g.

  $vpt = [ 1, 1, 10];
  $vpr = [ 10, 0, 0 ];
  $vpd = 100;

with "Automatic reload and preview" any change to that control
file will update the display.

To make it "realtime", you probably also need to add some
tweaks to the model to make maximum use of caching. Just
simple preview of a complex model is probably too slow.

Of cause you can also put additional things into the control
file, like simulating the animation feature.

ciao,
  Torsten.



From nop.head at gmail.com  Sun Feb 21 06:40:13 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 21 Feb 2016 11:40:13 +0000
Subject: [OpenSCAD] Driving OpenSCAD
In-Reply-To: <20160221122418.0ef2d998@gbiloba.org>
References: <1456046547986-16203.post@n5.nabble.com>
	<56C997D5.7050209@arnholm.org>
	<20160221122418.0ef2d998@gbiloba.org>
Message-ID: <CAEEmnrMS1mQWS03KHO1v0TbP--LP=Z429fkFB6fHV9BJ3TRWew@mail.gmail.com>

OpenScad doesn't really do real time rendering, other than for changes in
the camera position.

I think the best you can do is write your equations of motion in OpenScad
instead of Python and base them on $t. Then you can generate an animation
as fast as OpenScad can manage. If you save the images of each frame you
can make a movie that does play in real time.

On 21 February 2016 at 11:24, fma <fma at gbiloba.org> wrote:

> Le dimanche 21 f?vrier 2016, cacb a ?crit :
>
> > You could generate an OpenSCAD .csg file from your application, it is
> > essentially a much simplified "compiled" version of the .scad language.
> > This is what AngelScript CSG is currently doing.
>
> I see.
>
> But what I want to do is just to move some already defined objects, and
> have them rendered in OpenSCAD in real time? while my python framework
> compute new positions; how can I do that with .csg file?
>
> Thanks,
>
> ? as fast as the computer can render objects.
>
> --
>     Fr?d?ric
>
> ------------------------------
> View this message in context: Re: Driving OpenSCAD
> <http://forum.openscad.org/Driving-OpenSCAD-tp16203p16205.html>
>
> Sent from the OpenSCAD mailing list archive <http://forum.openscad.org/>
> at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160221/2536853c/attachment.html>

From arnholm at arnholm.org  Sun Feb 21 07:01:05 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Sun, 21 Feb 2016 13:01:05 +0100
Subject: [OpenSCAD] Driving OpenSCAD
In-Reply-To: <20160221122418.0ef2d998@gbiloba.org>
References: <1456046547986-16203.post@n5.nabble.com>
	<56C997D5.7050209@arnholm.org> <20160221122418.0ef2d998@gbiloba.org>
Message-ID: <56C9A701.70608@arnholm.org>

On 21. feb. 2016 12:24, fma wrote:
> Le dimanche 21 f?vrier 2016, cacb a ?crit :
>
>  > You could generate an OpenSCAD .csg file from your application, it is
>  > essentially a much simplified "compiled" version of the .scad language.
>  > This is what AngelScript CSG is currently doing.
>
> I see.
>
> But what I want to do is just to move some already defined objects, and
> have them rendered in OpenSCAD in real time? while my python framework
> compute new positions; how can I do that with .csg file?

You could update the .csg file frequently and it would work in a way by 
OpenSCAD auto-reloading it, but it would be *far* too slow for your 
expectations. I don't think OpenSCAD is the right tool for something 
like that, unless you find some way to use the animation mode (I have 
not used it)
http://kitwallace.tumblr.com/post/85663417144/openscad-animation-view

Perhaps what you want is to define your objects and export each as STL. 
Then find an application or API somewhere able to read/display those 
STLs and dynamically apply different transformations to each. If this 
does not already exist, it would be a useful project for someone with 
the right OpenGL knowledge.

Carsten Arnholm
http://arnholm.org/





From fma at gbiloba.org  Sun Feb 21 07:03:48 2016
From: fma at gbiloba.org (fma)
Date: Sun, 21 Feb 2016 05:03:48 -0700 (MST)
Subject: [OpenSCAD] Driving OpenSCAD
In-Reply-To: <56C9A112.9000307@gmx.de>
References: <1456046547986-16203.post@n5.nabble.com>
	<56C997D5.7050209@arnholm.org>
	<20160221122418.0ef2d998@gbiloba.org> <56C9A112.9000307@gmx.de>
Message-ID: <20160221130330.6de9e154@gbiloba.org>

Le dimanche 21 f?vrier 2016, tp3 a ?crit :

> However there might be a way that comes close to what you
> describe. The $vpX variables that define the camera position
> are writable on top-level .scad file.
> [...]

Thank's for the suggestion!

-- 
    Fr?d?ric




--
View this message in context: http://forum.openscad.org/Driving-OpenSCAD-tp16203p16209.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160221/9113e571/attachment.html>

From fma at gbiloba.org  Sun Feb 21 07:06:18 2016
From: fma at gbiloba.org (fma)
Date: Sun, 21 Feb 2016 05:06:18 -0700 (MST)
Subject: [OpenSCAD] Driving OpenSCAD
In-Reply-To: <CAEEmnrMS1mQWS03KHO1v0TbP--LP=Z429fkFB6fHV9BJ3TRWew@mail.gmail.com>
References: <1456046547986-16203.post@n5.nabble.com>
	<56C997D5.7050209@arnholm.org>
	<20160221122418.0ef2d998@gbiloba.org>
	<CAEEmnrMS1mQWS03KHO1v0TbP--LP=Z429fkFB6fHV9BJ3TRWew@mail.gmail.com>
Message-ID: <20160221130559.3ea394f2@gbiloba.org>

Le dimanche 21 f?vrier 2016, nophead a ?crit :

> I think the best you can do is write your equations of motion in OpenScad
> instead of Python and base them on $t. Then you can generate an animation
> as fast as OpenScad can manage. If you save the images of each frame you
> can make a movie that does play in real time.

I thought to use that solution, but there are too much maths in the python
framework.

And I would like to be able to react on user inputs.

I'll give a try to Torsten's solution, using the auto-reload feature.

-- 
    Fr?d?ric




--
View this message in context: http://forum.openscad.org/Driving-OpenSCAD-tp16203p16210.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160221/a8831ddc/attachment.html>

From fma at gbiloba.org  Sun Feb 21 07:16:41 2016
From: fma at gbiloba.org (fma)
Date: Sun, 21 Feb 2016 05:16:41 -0700 (MST)
Subject: [OpenSCAD] Driving OpenSCAD
In-Reply-To: <56C9A112.9000307@gmx.de>
References: <1456046547986-16203.post@n5.nabble.com>
	<56C997D5.7050209@arnholm.org>
	<20160221122418.0ef2d998@gbiloba.org> <56C9A112.9000307@gmx.de>
Message-ID: <20160221131627.57c3d3a6@gbiloba.org>

Le dimanche 21 f?vrier 2016, tp3 a ?crit :

> However there might be a way that comes close to what you
> describe. The $vpX variables that define the camera position
> are writable on top-level .scad file.
> 
> So you could include a simple control file on top of your
> model, e.g.
> 
>   include</tmp/vpx.scad>
> 
> and write the values to that file, e.g.
> 
>   $vpt = [ 1, 1, 10];
>   $vpr = [ 10, 0, 0 ];
>   $vpd = 100;
> 
> with "Automatic reload and preview" any change to that control
> file will update the display.

In fact, that solution works with any included file! So, all I have to do
is:

- main.scad:

include <vars.scad>

translate([X, Y, Z]) {
    shpere();
}

- vars.scad:

X = 1;
Y = 2;
Z = 3;

My python script just have to generate the vars.scad file, with all my
maths results, and that's it!

Yeah, OpenSCAD is not really fast, but it is mainly for debug purpose, and
I don't need 24fps ;o)

Thanks you all for your help.

-- 
    Fr?d?ric




--
View this message in context: http://forum.openscad.org/Driving-OpenSCAD-tp16203p16211.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160221/ac641c82/attachment.html>

From fma at gbiloba.org  Sun Feb 21 07:40:39 2016
From: fma at gbiloba.org (fma)
Date: Sun, 21 Feb 2016 05:40:39 -0700 (MST)
Subject: [OpenSCAD] Driving OpenSCAD
In-Reply-To: <56C9A701.70608@arnholm.org>
References: <1456046547986-16203.post@n5.nabble.com>
	<56C997D5.7050209@arnholm.org>
	<20160221122418.0ef2d998@gbiloba.org> <56C9A701.70608@arnholm.org>
Message-ID: <20160221134022.2efe1e08@gbiloba.org>

Le dimanche 21 f?vrier 2016, cacb a ?crit :

> Perhaps what you want is to define your objects and export each as STL. 
> Then find an application or API somewhere able to read/display those 
> STLs and dynamically apply different transformations to each. If this 
> does not already exist, it would be a useful project for someone with 
> the right OpenGL knowledge.

Well, I think pygame could be used that way...

-- 
    Fr?d?ric




--
View this message in context: http://forum.openscad.org/Driving-OpenSCAD-tp16203p16212.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160221/3a011f81/attachment.html>

From marius at kintel.net  Mon Feb 22 17:03:40 2016
From: marius at kintel.net (Marius Kintel)
Date: Mon, 22 Feb 2016 17:03:40 -0500
Subject: [OpenSCAD] Driving OpenSCAD
In-Reply-To: <1456046547986-16203.post@n5.nabble.com>
References: <1456046547986-16203.post@n5.nabble.com>
Message-ID: <C6082362-37C3-471F-827C-30D70DA79FA5@kintel.net>

> On Feb 21, 2016, at 04:22 AM, fma <fma at gbiloba.org> wrote:
> 
> I designed a 3D printed hexapod, and I'm also working on a python framework
> to control it, and I'm looking for a solution to simulate the hexapod
> without hardware; being able to use my OpenSCAD design would be really
> great!

This is pretty old, but could give some inspiration:

https://www.thingiverse.com/thing:1604

 -Marius




From oz.at.michael at gmail.com  Mon Feb 22 23:46:14 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Mon, 22 Feb 2016 21:46:14 -0700 (MST)
Subject: [OpenSCAD] Ability to specify contents of exported header
Message-ID: <1456202774873-16214.post@n5.nabble.com>

As part of the   Sad Face
<https://www.thingiverse.com/thing:1350837/#comments>   discussions, there
is mention of watermarking your photos.
I' like to talk about the equivalent for your mesh files.

Export currently flags
STL files with, "solid OpenSCAD_Model"
AMF files with,  " <metadata type="producer">OpenSCAD 2016.02.09 (git
9950e6a)</metadata>"

I haven't checked the other formats.

I did a check of some other STLs, and found (for B:inary & A:SCII) these in
the wild:

A:solid t231461 ak47 netfabb (repaired)
B:binary stl file 
B:STL File created by netfabb - http://www.netfabb.com UNITS=MM
A:solid Default
B:MESHMIXER-STL-BINARY-FORMAT----------------------------------------------------
B:File exported by Artec Group 3D Scanning Solutions, www.artec-group.com
B:Exported from Blender-2.74 (sub 0)
B:solid Bag Handle v1-5 Slim    
B:COLOR= ...,MATERIAL=... ;SOLID

While STL and AMF are ASCII there is no problem, they can be manually
edited.
However there has been discussion on introducing binary/compressed files
which make that harder.

I think some feature to add other meta-data to the export would be good.

Binary STL seems to be the limiting factor, 80 character header. If we want
to keep the OpenSCAD branding then we need to reserve some of that for
OpenSCAD. Given the AMF string is ~30 chars, that could reserve the first 40
chars for branding, and allow user meta-data to use the last 40 chars.

You could fit a copyright symbol, a short form CC tag and a bit.ly etc URL,
or the like. 

Thoughts?



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Ability-to-specify-contents-of-exported-header-tp16214.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Tue Feb 23 09:48:36 2016
From: doug at moens.org (doug moen)
Date: Tue, 23 Feb 2016 09:48:36 -0500
Subject: [OpenSCAD] Ability to specify contents of exported header
In-Reply-To: <1456202774873-16214.post@n5.nabble.com>
References: <1456202774873-16214.post@n5.nabble.com>
Message-ID: <CAGV6i+Pyp2d56eYMyhAdikocDighgrkB-Cv-w_AUYa9f-x1sOg@mail.gmail.com>

TLDR; I think that the metadata should be a set of name/value pairs, as
that's what's most appropriate for the 7 file formats that we currently
export. Most modern file formats support metadata in the form of name/value
pairs, which means you aren't supposed to jam all the metadata into a
single short string without any tagging of the components.

Binary STL is an exception, but we don't support that yet, and there are
significant technical problems with binary STL support that might delay it
indefinitely, or place limitations on how well it works. Maybe binary STL
will be the one format for which metadata isn't supported.

Eg, PNG supports the Extensible Metadata Platform, which is a superset of
the Dublin Core metadata, which has the tags Title, Creator, Subject,
Description, Publisher, Contributor, Date, Type, Format, Identifier,
Source, Language, Relation, Coverage and Rights.

The AMF standard reserves a number of metadata types; the following are the
ones relevant to us:

* name - The alphanumeric label of the entity, to be used by the
interpreter if interacting with the user.

* description - A description of the content of the entity

* url - A link to an external resource relating to the entity

* author - Specifies the name(s) of the author(s) of the entity

* company - Specifying the company generating the entity

* cad - specifies the name of the originating CAD software and version

* revision - specifies the revision of the entity

* tolerance - specifies the desired manufacturing tolerance of the entity
in entity?s unit system

We should be using "cad" instead of "producer" for the OpenSCAD version.
Different metadata types should be used for other information.

The 3MF file format supports any of the metadata types in the Open
Packaging Conventions/Core Properties. Same idea, a set of name/value
pairs, but there's a longer list of standard types, including creation
time, modification time, search keywords, thumbnail images.

And so on. For old ascii formats like ascii STL and OFF, we can put
name/value metadata pairs into comments, one pair per line.

On 22 February 2016 at 23:46, MichaelAtOz <oz.at.michael at gmail.com> wrote:

> As part of the   Sad Face
> <https://www.thingiverse.com/thing:1350837/#comments>   discussions, there
> is mention of watermarking your photos.
> I' like to talk about the equivalent for your mesh files.
>
> Export currently flags
> STL files with, "solid OpenSCAD_Model"
> AMF files with,  " <metadata type="producer">OpenSCAD 2016.02.09 (git
> 9950e6a)</metadata>"
>
> I haven't checked the other formats.
>
> I did a check of some other STLs, and found (for B:inary & A:SCII) these in
> the wild:
>
> A:solid t231461 ak47 netfabb (repaired)
> B:binary stl file
> B:STL File created by netfabb - http://www.netfabb.com UNITS=MM
> A:solid Default
>
> B:MESHMIXER-STL-BINARY-FORMAT----------------------------------------------------
> B:File exported by Artec Group 3D Scanning Solutions, www.artec-group.com
> B:Exported from Blender-2.74 (sub 0)
> B:solid Bag Handle v1-5 Slim
> B:COLOR= ...,MATERIAL=... ;SOLID
>
> While STL and AMF are ASCII there is no problem, they can be manually
> edited.
> However there has been discussion on introducing binary/compressed files
> which make that harder.
>
> I think some feature to add other meta-data to the export would be good.
>
> Binary STL seems to be the limiting factor, 80 character header. If we want
> to keep the OpenSCAD branding then we need to reserve some of that for
> OpenSCAD. Given the AMF string is ~30 chars, that could reserve the first
> 40
> chars for branding, and allow user meta-data to use the last 40 chars.
>
> You could fit a copyright symbol, a short form CC tag and a bit.ly etc
> URL,
> or the like.
>
> Thoughts?
>
>
>
> -----
> Admin - PM me if you need anything, or if I've done something stupid...
>
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; to the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work. Obviously
> inclusion of works of previous authors is not included in the above.
>
> The TPP is no simple ?trade agreement.?   Fight it!
> http://www.ourfairdeal.org/   time is running out!
> --
> View this message in context:
> http://forum.openscad.org/Ability-to-specify-contents-of-exported-header-tp16214.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160223/15a14241/attachment.html>

From nop.head at gmail.com  Tue Feb 23 10:01:59 2016
From: nop.head at gmail.com (nop head)
Date: Tue, 23 Feb 2016 15:01:59 +0000
Subject: [OpenSCAD] Ability to specify contents of exported header
In-Reply-To: <CAGV6i+Pyp2d56eYMyhAdikocDighgrkB-Cv-w_AUYa9f-x1sOg@mail.gmail.com>
References: <1456202774873-16214.post@n5.nabble.com>
	<CAGV6i+Pyp2d56eYMyhAdikocDighgrkB-Cv-w_AUYa9f-x1sOg@mail.gmail.com>
Message-ID: <CAEEmnrMYZb9cK6sC5SnS-a7xCEi8=Fp-ePWSmcYbbROHzmPgZw@mail.gmail.com>

>and there are significant technical problems with binary STL support that
might delay it indefinitely

I think it is simply a matter of writing binary records instead of ASCII.
The issue of keeping it manifold after truncating the values is common to
ASCII floats and binary floats. I.e. if we simply change the output format
we are no worse off than we are now with ASCII STLs. Possibly slightly
better as it removes the conversion to string and back again that can
change the value slightly unless it is done very carefully.

>For old ascii formats like ascii STL and OFF, we can put name/value
metadata pairs into comments, one pair per line.

I don't think STL files have comment lines do they?


On 23 February 2016 at 14:48, doug moen <doug at moens.org> wrote:

> TLDR; I think that the metadata should be a set of name/value pairs, as
> that's what's most appropriate for the 7 file formats that we currently
> export. Most modern file formats support metadata in the form of name/value
> pairs, which means you aren't supposed to jam all the metadata into a
> single short string without any tagging of the components.
>
> Binary STL is an exception, but we don't support that yet, and there are
> significant technical problems with binary STL support that might delay it
> indefinitely, or place limitations on how well it works. Maybe binary STL
> will be the one format for which metadata isn't supported.
>
> Eg, PNG supports the Extensible Metadata Platform, which is a superset of
> the Dublin Core metadata, which has the tags Title, Creator, Subject,
> Description, Publisher, Contributor, Date, Type, Format, Identifier,
> Source, Language, Relation, Coverage and Rights.
>
> The AMF standard reserves a number of metadata types; the following are
> the ones relevant to us:
>
> * name - The alphanumeric label of the entity, to be used by the
> interpreter if interacting with the user.
>
> * description - A description of the content of the entity
>
> * url - A link to an external resource relating to the entity
>
> * author - Specifies the name(s) of the author(s) of the entity
>
> * company - Specifying the company generating the entity
>
> * cad - specifies the name of the originating CAD software and version
>
> * revision - specifies the revision of the entity
>
> * tolerance - specifies the desired manufacturing tolerance of the entity
> in entity?s unit system
>
> We should be using "cad" instead of "producer" for the OpenSCAD version.
> Different metadata types should be used for other information.
>
> The 3MF file format supports any of the metadata types in the Open
> Packaging Conventions/Core Properties. Same idea, a set of name/value
> pairs, but there's a longer list of standard types, including creation
> time, modification time, search keywords, thumbnail images.
>
> And so on. For old ascii formats like ascii STL and OFF, we can put
> name/value metadata pairs into comments, one pair per line.
>
> On 22 February 2016 at 23:46, MichaelAtOz <oz.at.michael at gmail.com> wrote:
>
>> As part of the   Sad Face
>> <https://www.thingiverse.com/thing:1350837/#comments>   discussions,
>> there
>> is mention of watermarking your photos.
>> I' like to talk about the equivalent for your mesh files.
>>
>> Export currently flags
>> STL files with, "solid OpenSCAD_Model"
>> AMF files with,  " <metadata type="producer">OpenSCAD 2016.02.09 (git
>> 9950e6a)</metadata>"
>>
>> I haven't checked the other formats.
>>
>> I did a check of some other STLs, and found (for B:inary & A:SCII) these
>> in
>> the wild:
>>
>> A:solid t231461 ak47 netfabb (repaired)
>> B:binary stl file
>> B:STL File created by netfabb - http://www.netfabb.com UNITS=MM
>> A:solid Default
>>
>> B:MESHMIXER-STL-BINARY-FORMAT----------------------------------------------------
>> B:File exported by Artec Group 3D Scanning Solutions, www.artec-group.com
>> B:Exported from Blender-2.74 (sub 0)
>> B:solid Bag Handle v1-5 Slim
>> B:COLOR= ...,MATERIAL=... ;SOLID
>>
>> While STL and AMF are ASCII there is no problem, they can be manually
>> edited.
>> However there has been discussion on introducing binary/compressed files
>> which make that harder.
>>
>> I think some feature to add other meta-data to the export would be good.
>>
>> Binary STL seems to be the limiting factor, 80 character header. If we
>> want
>> to keep the OpenSCAD branding then we need to reserve some of that for
>> OpenSCAD. Given the AMF string is ~30 chars, that could reserve the first
>> 40
>> chars for branding, and allow user meta-data to use the last 40 chars.
>>
>> You could fit a copyright symbol, a short form CC tag and a bit.ly etc
>> URL,
>> or the like.
>>
>> Thoughts?
>>
>>
>>
>> -----
>> Admin - PM me if you need anything, or if I've done something stupid...
>>
>> Unless specifically shown otherwise above, my contribution is in the
>> Public Domain; to the extent possible under law, I have waived all
>> copyright and related or neighbouring rights to this work. Obviously
>> inclusion of works of previous authors is not included in the above.
>>
>> The TPP is no simple ?trade agreement.?   Fight it!
>> http://www.ourfairdeal.org/   time is running out!
>> --
>> View this message in context:
>> http://forum.openscad.org/Ability-to-specify-contents-of-exported-header-tp16214.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160223/30990a4d/attachment.html>

From doug at moens.org  Tue Feb 23 10:46:39 2016
From: doug at moens.org (doug moen)
Date: Tue, 23 Feb 2016 10:46:39 -0500
Subject: [OpenSCAD] Ability to specify contents of exported header
In-Reply-To: <CAEEmnrMYZb9cK6sC5SnS-a7xCEi8=Fp-ePWSmcYbbROHzmPgZw@mail.gmail.com>
References: <1456202774873-16214.post@n5.nabble.com>
	<CAGV6i+Pyp2d56eYMyhAdikocDighgrkB-Cv-w_AUYa9f-x1sOg@mail.gmail.com>
	<CAEEmnrMYZb9cK6sC5SnS-a7xCEi8=Fp-ePWSmcYbbROHzmPgZw@mail.gmail.com>
Message-ID: <CAGV6i+P9uK6SV6MJUQOseOssjwd1riYQ8kPBSsTw1Pf61-YJZw@mail.gmail.com>

Oops you are correct. No comment lines in STL. Maybe could still use "solid
tag1=val1; tag2=val2; ..." in ASCII stl.

On Tuesday, 23 February 2016, nop head <nop.head at gmail.com> wrote:

> >and there are significant technical problems with binary STL support that
> might delay it indefinitely
>
> I think it is simply a matter of writing binary records instead of ASCII.
> The issue of keeping it manifold after truncating the values is common to
> ASCII floats and binary floats. I.e. if we simply change the output format
> we are no worse off than we are now with ASCII STLs. Possibly slightly
> better as it removes the conversion to string and back again that can
> change the value slightly unless it is done very carefully.
>
> >For old ascii formats like ascii STL and OFF, we can put name/value
> metadata pairs into comments, one pair per line.
>
> I don't think STL files have comment lines do they?
>
>
> On 23 February 2016 at 14:48, doug moen <doug at moens.org
> <javascript:_e(%7B%7D,'cvml','doug at moens.org');>> wrote:
>
>> TLDR; I think that the metadata should be a set of name/value pairs, as
>> that's what's most appropriate for the 7 file formats that we currently
>> export. Most modern file formats support metadata in the form of name/value
>> pairs, which means you aren't supposed to jam all the metadata into a
>> single short string without any tagging of the components.
>>
>> Binary STL is an exception, but we don't support that yet, and there are
>> significant technical problems with binary STL support that might delay it
>> indefinitely, or place limitations on how well it works. Maybe binary STL
>> will be the one format for which metadata isn't supported.
>>
>> Eg, PNG supports the Extensible Metadata Platform, which is a superset of
>> the Dublin Core metadata, which has the tags Title, Creator, Subject,
>> Description, Publisher, Contributor, Date, Type, Format, Identifier,
>> Source, Language, Relation, Coverage and Rights.
>>
>> The AMF standard reserves a number of metadata types; the following are
>> the ones relevant to us:
>>
>> * name - The alphanumeric label of the entity, to be used by the
>> interpreter if interacting with the user.
>>
>> * description - A description of the content of the entity
>>
>> * url - A link to an external resource relating to the entity
>>
>> * author - Specifies the name(s) of the author(s) of the entity
>>
>> * company - Specifying the company generating the entity
>>
>> * cad - specifies the name of the originating CAD software and version
>>
>> * revision - specifies the revision of the entity
>>
>> * tolerance - specifies the desired manufacturing tolerance of the entity
>> in entity?s unit system
>>
>> We should be using "cad" instead of "producer" for the OpenSCAD version.
>> Different metadata types should be used for other information.
>>
>> The 3MF file format supports any of the metadata types in the Open
>> Packaging Conventions/Core Properties. Same idea, a set of name/value
>> pairs, but there's a longer list of standard types, including creation
>> time, modification time, search keywords, thumbnail images.
>>
>> And so on. For old ascii formats like ascii STL and OFF, we can put
>> name/value metadata pairs into comments, one pair per line.
>>
>> On 22 February 2016 at 23:46, MichaelAtOz <oz.at.michael at gmail.com
>> <javascript:_e(%7B%7D,'cvml','oz.at.michael at gmail.com');>> wrote:
>>
>>> As part of the   Sad Face
>>> <https://www.thingiverse.com/thing:1350837/#comments>   discussions,
>>> there
>>> is mention of watermarking your photos.
>>> I' like to talk about the equivalent for your mesh files.
>>>
>>> Export currently flags
>>> STL files with, "solid OpenSCAD_Model"
>>> AMF files with,  " <metadata type="producer">OpenSCAD 2016.02.09 (git
>>> 9950e6a)</metadata>"
>>>
>>> I haven't checked the other formats.
>>>
>>> I did a check of some other STLs, and found (for B:inary & A:SCII) these
>>> in
>>> the wild:
>>>
>>> A:solid t231461 ak47 netfabb (repaired)
>>> B:binary stl file
>>> B:STL File created by netfabb - http://www.netfabb.com UNITS=MM
>>> A:solid Default
>>>
>>> B:MESHMIXER-STL-BINARY-FORMAT----------------------------------------------------
>>> B:File exported by Artec Group 3D Scanning Solutions,
>>> www.artec-group.com
>>> B:Exported from Blender-2.74 (sub 0)
>>> B:solid Bag Handle v1-5 Slim
>>> B:COLOR= ...,MATERIAL=... ;SOLID
>>>
>>> While STL and AMF are ASCII there is no problem, they can be manually
>>> edited.
>>> However there has been discussion on introducing binary/compressed files
>>> which make that harder.
>>>
>>> I think some feature to add other meta-data to the export would be good.
>>>
>>> Binary STL seems to be the limiting factor, 80 character header. If we
>>> want
>>> to keep the OpenSCAD branding then we need to reserve some of that for
>>> OpenSCAD. Given the AMF string is ~30 chars, that could reserve the
>>> first 40
>>> chars for branding, and allow user meta-data to use the last 40 chars.
>>>
>>> You could fit a copyright symbol, a short form CC tag and a bit.ly etc
>>> URL,
>>> or the like.
>>>
>>> Thoughts?
>>>
>>>
>>>
>>> -----
>>> Admin - PM me if you need anything, or if I've done something stupid...
>>>
>>> Unless specifically shown otherwise above, my contribution is in the
>>> Public Domain; to the extent possible under law, I have waived all
>>> copyright and related or neighbouring rights to this work. Obviously
>>> inclusion of works of previous authors is not included in the above.
>>>
>>> The TPP is no simple ?trade agreement.?   Fight it!
>>> http://www.ourfairdeal.org/   time is running out!
>>> --
>>> View this message in context:
>>> http://forum.openscad.org/Ability-to-specify-contents-of-exported-header-tp16214.html
>>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> <javascript:_e(%7B%7D,'cvml','Discuss at lists.openscad.org');>
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> <javascript:_e(%7B%7D,'cvml','Discuss at lists.openscad.org');>
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160223/ce2c4ba1/attachment.html>

From erdalyildiz1974 at gmail.com  Tue Feb 23 15:33:30 2016
From: erdalyildiz1974 at gmail.com (Erdal Yildiz)
Date: Tue, 23 Feb 2016 21:33:30 +0100
Subject: [OpenSCAD] troubles in my tribbles: questions about $t in animate
 mode and random values
Message-ID: <CAPf62chH0sG9ZqN2EbUboV5qHgb5JeYL0w6QJFiXBrX-9QDcbg@mail.gmail.com>

Hi All,

I have been playing with openscad, and i love it:)


this is my toy project i have been working on:
https://github.com/e7dal/tribbles

basically what i have done is create a chain of my special  triangular
blocks,which i will now call a *tribble*
after that  i created a timeslice function, which animate each added block
in it's own time slice.

here is a sample image:
https://www.flickr.com/photos/e7dal/25135527145/in/dateposted/

here is a sample animation
https://www.flickr.com/photos/e7dal/24514525184/in/photostream/

please have a look at the tribbles.scad in animation mode at my repo, to
see the animation at work.

i wanted to do the same with a random chain of blocks, but that gave me
very unexpected results.
because the random list of block becomes a new random list and any value $t
for a given step.

That's why i had to introduce a randomizing variable, which will just
disable the whole animation with timeslices, which is not so cool:(  i can
get the random list from the console and paste it in to new file to see it
animating. or to this kind of randomizing in an another tool, and just
preview the animation in openscad.

these are the questions i have now:
- Is there a way to generate  random values for a single animation?
- Is there any other setting or configuration i am missing?
- is there a way to start openscad with a file, directly in animation mode?
- what is the best way to calculate/detect collision in openscad, that some
of my random blocks are going to be in the same space?
and a more general question:
- what is the best way make the animation perform faster, for larger amount
of blocks?

Any help or feedback is welcome,

Thanks,

Kind regards,

Erdal Yildiz
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160223/73a5e643/attachment.html>

From moorejohnny at gmail.com  Tue Feb 23 17:31:26 2016
From: moorejohnny at gmail.com (John)
Date: Tue, 23 Feb 2016 15:31:26 -0700 (MST)
Subject: [OpenSCAD] openscad hangs up after upgrading to Windows 10
In-Reply-To: <1455564821206-16155.post@n5.nabble.com>
References: <1455564821206-16155.post@n5.nabble.com>
Message-ID: <1456266686583-16220.post@n5.nabble.com>

Thanks to all of you responders.  Here are some responses to your responses.

Am I using this mailing list correctly?  Please feel free to slap me into
shape.

The question from Jon about doing anything in particular to trigger it made
me feel guilty, since I am an old QA engineer.  So I started trashing
everything that didn't cause the failure until I got to a small piece.  Very
laborious, but it finally paid off.

The code following the signature below is one of the culprits.  There is a
module named cube_RC, followed by 2 calls to it.  If I run the call that
passes a wrong-named parameter to the module, which is the first of the 2
calls, I get the hang/loop.  The parameter is defined in the module without
a default, and referenced as a vector.  Presumably <undef> is used, and
causes the problem.  If I name the parameter correctly in the call, as in
the second of the 2 calls, I get the intended result.

Being a (sorry!) total newbie to github, I could not find 2015.10.17 (git
fba8130) there.  Probably my ignorance.

I have tried forcing Goldfeather, and it doesn't seem to make a difference.

I have tried the 32-bit version of openSCAD, and that behaves the same as
the 64-bit version.

I have not tried disabling Norton antivirus yet to see if that has any
effect.

Again, many thanks, and I will keep searching for the other features of my
own buggy code that trigger this behavior.

--john

//////////////////
// SAMPLE CODE: //
//////////////////
/*
    play.scad
*/

$fn = 50;
echo("*****************");
echo($fn = $fn);
echo("*****************");

/*  cube with roundeded corners (and edges).  A replacement for
 *  the one I did using minkowski() because that seemed pretty
 *  slow.
 *
 *  The funny business with <fuzz> is for fighting the
 *  "z-fighting" problem discussed in the on-line manual.
*/
module cube_RC(size_P, rR_P = 0.01) { // cube with rounded
                                      // corners and edges.
                                      // center = false.
                                      // <size_P> is a size vector.

    fuzz = 1e-4;
    //////////////////////////////
    module zEdge() {
        difference() {
            translate([-fuzz, -fuzz, -fuzz])
                cube([rR_P + fuzz, rR_P + fuzz, size_P[2] + 2 * fuzz]);
            translate([rR_P, rR_P, rR_P])
                cylinder(r=rR_P, h=size_P[2] - 2 * rR_P);
            translate([rR_P, rR_P, rR_P]) sphere(r=rR_P);
            translate([rR_P, rR_P, size_P[2] - rR_P]) sphere(r=rR_P);
        }
    }
    //////////////////////////////
    //////////////////////////////
    module yEdge() {
        translate([rR_P - fuzz, 0, - fuzz])
        rotate([0, -90, 0])
        difference() {
            // lower left.
            translate([-fuzz, -fuzz, -fuzz])
                cube([rR_P + fuzz, size_P[1] + 2 * fuzz, rR_P + fuzz]);
            translate([rR_P, rR_P, 0]) rotate([-90, 0, 0])
                cylinder(r=rR_P, h=size_P[1] - 2 * rR_P);
            translate([rR_P, rR_P, 0]) sphere(r=rR_P);
            translate([rR_P, size_P[2] - rR_P], rR_P) sphere(r=rR_P);
        }
    }
    //////////////////////////////

        difference() {
            cube(size_P);
            zEdge();
            translate([size_P[0], 0, 0]) rotate([0, 0, 90]) zEdge();
            translate([size_P[0], size_P[1], 0]) rotate([0, 0, 180])
                zEdge();
            translate([0, size_P[1], 0]) rotate([0, 0, 270]) zEdge();
            yEdge();
            translate([-fuzz, 0, size_P[2]]) rotate([0, 90, 0]) yEdge();
            translate([size_P[0], 0, size_P[2]]) mirror([1, 0, 1]) yEdge();
            translate([size_P[0], 0, 0]) rotate([0, 270, 0]) yEdge();
        }
}
//////////////////////////////

cube_RC(cubeSize_P=[2.5, 2.5, 2.5]);  // causes hang.
                                        // Incorrectly named parameter.
                                        // Does not blank display
                                        // containing a good
                                        // object until after the
                                        // first screen flash
                                        // during the hang/loop.

* cube_RC(size_P=[2.5, 2.5, 2.5]);  // doesn't hang.  Correctly named
parameter.






--
View this message in context: http://forum.openscad.org/openscad-hangs-up-after-upgrading-to-Windows-10-tp16155p16220.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Tue Feb 23 17:55:48 2016
From: marius at kintel.net (Marius Kintel)
Date: Tue, 23 Feb 2016 17:55:48 -0500
Subject: [OpenSCAD] openscad hangs up after upgrading to Windows 10
In-Reply-To: <1456266686583-16220.post@n5.nabble.com>
References: <1455564821206-16155.post@n5.nabble.com>
	<1456266686583-16220.post@n5.nabble.com>
Message-ID: <0F2C5221-ABEB-4D94-8986-69F0BC2CE04E@kintel.net>

Hi John,

Thanks for digging in - that cleared up the core cause of the problem:

As you don?t have a default value for size_P in the cube_RC() module, the value used to calculate the geometry is undefined. In this case, OpenSCAD currently falls back to an internal default value (typically 1.0). This, again, causes your object to become a bit malformed. This doesn?t do anything bad, except that the preview renderer gets a lot more work to do (again for internal reasons on how we can render previews without calculating the final object).

Now: This should have _exactly_ the same behavior independent on which OS you happen to be on. The only thing I can think about that would cause such a hang (it?s not really a hang, just a very badly performing rendering job) is if the GPU drivers on your new OS installation either A) suck extremely badly or B) are not installed, causing software rendering.

If you look at Help->Library Info and look for "OpenGL Version?, there should be some version info there. Please take a look and google around to see if there are any updated drivers or known problems with those drivers.

 -Marius



From jdawgaz at gmail.com  Tue Feb 23 18:07:48 2016
From: jdawgaz at gmail.com (Jerry Davis)
Date: Tue, 23 Feb 2016 16:07:48 -0700
Subject: [OpenSCAD] openscad hangs up after upgrading to Windows 10
In-Reply-To: <0F2C5221-ABEB-4D94-8986-69F0BC2CE04E@kintel.net>
References: <1455564821206-16155.post@n5.nabble.com>
	<1456266686583-16220.post@n5.nabble.com>
	<0F2C5221-ABEB-4D94-8986-69F0BC2CE04E@kintel.net>
Message-ID: <CAMyDR6KiUAirdKD2ufx1mZKCtBf8Verm=yfWYFnqeWCLV6YWoA@mail.gmail.com>

this indeed has a little latency on osx 10.10.5 (Yosemite)
about 5 seconds per render.

the good cube_RC has no latency at all.
I have a NVIDIA GeForce GT 750M 2048 MB
on my macbook pro

jerry


--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson

On Tue, Feb 23, 2016 at 3:55 PM, Marius Kintel <marius at kintel.net> wrote:

> Hi John,
>
> Thanks for digging in - that cleared up the core cause of the problem:
>
> As you don?t have a default value for size_P in the cube_RC() module, the
> value used to calculate the geometry is undefined. In this case, OpenSCAD
> currently falls back to an internal default value (typically 1.0). This,
> again, causes your object to become a bit malformed. This doesn?t do
> anything bad, except that the preview renderer gets a lot more work to do
> (again for internal reasons on how we can render previews without
> calculating the final object).
>
> Now: This should have _exactly_ the same behavior independent on which OS
> you happen to be on. The only thing I can think about that would cause such
> a hang (it?s not really a hang, just a very badly performing rendering job)
> is if the GPU drivers on your new OS installation either A) suck extremely
> badly or B) are not installed, causing software rendering.
>
> If you look at Help->Library Info and look for "OpenGL Version?, there
> should be some version info there. Please take a look and google around to
> see if there are any updated drivers or known problems with those drivers.
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160223/3ec24f88/attachment.html>

From jpmendes54 at gmail.com  Wed Feb 24 10:53:02 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Wed, 24 Feb 2016 08:53:02 -0700 (MST)
Subject: [OpenSCAD] just in case your design is affected
In-Reply-To: <1456244257802-16218.post@n5.nabble.com>
References: <1456034719425-16202.post@n5.nabble.com>
	<1456244257802-16218.post@n5.nabble.com>
Message-ID: <1456329182510-16224.post@n5.nabble.com>

Makerbot reply on the subject:

http://www.makerbot.com/blog/2016/02/24/your-rights-when-you-upload-to-thingiverse
<http://www.makerbot.com/blog/2016/02/24/your-rights-when-you-upload-to-thingiverse>  

Thanks Michael for your efforts.

jpmendes 



--
View this message in context: http://forum.openscad.org/just-in-case-your-design-is-affected-tp16202p16224.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From alan at lxorguk.ukuu.org.uk  Wed Feb 24 13:44:52 2016
From: alan at lxorguk.ukuu.org.uk (Alan Cox)
Date: Wed, 24 Feb 2016 18:44:52 +0000
Subject: [OpenSCAD] just in case your design is affected
In-Reply-To: <1456329182510-16224.post@n5.nabble.com>
References: <1456034719425-16202.post@n5.nabble.com>
	<1456244257802-16218.post@n5.nabble.com>
	<1456329182510-16224.post@n5.nabble.com>
Message-ID: <20160224184452.4e94c81a@www.etchedpixels.co.uk>

On Wed, 24 Feb 2016 08:53:02 -0700 (MST)
jpmendes <jpmendes54 at gmail.com> wrote:

> Makerbot reply on the subject:
> 
> http://www.makerbot.com/blog/2016/02/24/your-rights-when-you-upload-to-thingiverse
> <http://www.makerbot.com/blog/2016/02/24/your-rights-when-you-upload-to-thingiverse>  
> 
> Thanks Michael for your efforts.

There's almost nothing you can do about it. It's an old problem with
things like printable card kits. Even if your design says I can't resell
it I can print a hundred of them, and give them away but neither of us
can stop the recipient from reselling them as they feel like it (first
sale doctrine)

Alan


From oz.at.michael at gmail.com  Wed Feb 24 16:56:53 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Wed, 24 Feb 2016 14:56:53 -0700 (MST)
Subject: [OpenSCAD] Is it possible to use shapes as variables?
In-Reply-To: <1456306960659-16223.post@n5.nabble.com>
References: <1456306960659-16223.post@n5.nabble.com>
Message-ID: <1456351013420-16227.post@n5.nabble.com>

Aetig wrote
> I am a newbie with regard to OpenSCAD, and I was wondering is it possible
> to use shapes as variables?
> 
> I think the usual way goes like this:
> 
> union()  {
>     cylinder(15, 7);
>     difference()  {cube(12, center=true); sphere(8);}
> }
> 
> In this case the structure is build somehow from bottom up, first shapes
> being generates deepest / last in the code.
> 
> 
> Somehow, at least for me, it would be easier to read and write code using
> shapes as variables and manipulating them incrementally, and the same code
> could look something like this:
> 
> myShape = difference()  {cube(12, center=true); sphere(8);};
> myShape = union()  {myShape; cylinder(15, 7);};
> 
> In this case first shapes are first in the code, and they are
> incrementally developed.
> 
> So is it possible to write code like in second imaginary example?
> 
> Is there some general guidelines how bigger projects should be organized
> so that they remain readable, understandable, and editable? Currently I
> feel that whenever I am adding complexity to my models, they became very
> difficult to understand afterwards.
> 
> Any input is welcome! Thank you!


Hi Aetiq,
Welcome to the forum. Your post is still flagged as "This post has NOT been
accepted by the mailing list yet", so nobody gets it unless they look. 
You need to subscribe to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.

You can't use variables to hold shapes. This will likely become available in
a new generation of OpenSCAD, called OpenSCAD2 at this stag, but don't hold
your breath yet.

For bigger projects you should use  module and functions
<https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/User-Defined_Functions_and_Modules>  
and lots of comments. 

I'd also suggest using variables for geometry size with meaningful names.

stemDiameter=5;
stemLong=10;
cylinder(d=stemDiameter,h=stemLong);





-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Is-it-possible-to-use-shapes-as-variables-tp16223p16227.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Wed Feb 24 16:59:35 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Wed, 24 Feb 2016 14:59:35 -0700 (MST)
Subject: [OpenSCAD] Why intersection does not work with extruded text?
In-Reply-To: <1456343649865-16226.post@n5.nabble.com>
References: <1456343649865-16226.post@n5.nabble.com>
Message-ID: <1456351175899-16228.post@n5.nabble.com>

Lookup convexity=

i.e.

intersection() {
    cylinder(20, 7, 7, true);
   
    linear_extrude(height = 12.5,convexity=9) {
        text("Testing!", size=2.8, font ="Arial");
    }

Only needed for preview.



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Why-intersection-does-not-work-with-extruded-text-tp16226p16228.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Wed Feb 24 17:35:14 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Wed, 24 Feb 2016 23:35:14 +0100
Subject: [OpenSCAD] Is it possible to use shapes as variables?
In-Reply-To: <1456351013420-16227.post@n5.nabble.com>
References: <1456306960659-16223.post@n5.nabble.com>
	<1456351013420-16227.post@n5.nabble.com>
Message-ID: <56CE3022.5050807@arnholm.org>

> Aetig wrote
>> Somehow, at least for me, it would be easier to read and write code using
>> shapes as variables and manipulating them incrementally, and the same code
>> could look something like this:
>>
>> myShape = difference()  {cube(12, center=true); sphere(8);};
>> myShape = union()  {myShape; cylinder(15, 7);};
>>
>> In this case first shapes are first in the code, and they are
>> incrementally developed.
>>
>> So is it possible to write code like in second imaginary example?

You cannot do it in the OpenSCAD language, as you are not allowed to 
modify variables, and you cannot store shapes in variables.

As I had similar thoughts after using OpenSCAD for some time, I made 
AngelScript CSG which I currently use for generating OpenSCAD models. 
Your example then becomes straight forward (AngelScript syntax):

    solid@ myShape = difference3d(cube(12,true),sphere(8));
    @myShape       = union3d(myShape, cylinder(15,7));

When running this, an OpenSCAD .csg file can be generated and the result 
in OpenSCAD is as shown in the attached image.

Carsten Arnholm
http://arnholm.org/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: myShape.png
Type: image/png
Size: 17355 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160224/6cd2d39e/attachment.png>

From nop.head at gmail.com  Wed Feb 24 17:48:59 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 24 Feb 2016 22:48:59 +0000
Subject: [OpenSCAD] Is it possible to use shapes as variables?
In-Reply-To: <56CE3022.5050807@arnholm.org>
References: <1456306960659-16223.post@n5.nabble.com>
	<1456351013420-16227.post@n5.nabble.com>
	<56CE3022.5050807@arnholm.org>
Message-ID: <CAEEmnrOt6MgTzTyxRU-93oZa+TvuEAeSxkgy9Qu_d85NbhJYRQ@mail.gmail.com>

module partOfMyShape() difference()  {cube(12, center=true); sphere(8);};
module myShape() union()  {partOfMyShape(); cylinder(15, 7);};

myShape();

Makes a lot more sense though. Why use a single name to represent two
different things?

It produces this:


?
Seems like AngelScript CSG interprets the cylinder parameters differently
to OpenScad.

On 24 February 2016 at 22:35, Carsten Arnholm <arnholm at arnholm.org> wrote:

> Aetig wrote
>>
>>> Somehow, at least for me, it would be easier to read and write code using
>>> shapes as variables and manipulating them incrementally, and the same
>>> code
>>> could look something like this:
>>>
>>> myShape = difference()  {cube(12, center=true); sphere(8);};
>>> myShape = union()  {myShape; cylinder(15, 7);};
>>>
>>> In this case first shapes are first in the code, and they are
>>> incrementally developed.
>>>
>>> So is it possible to write code like in second imaginary example?
>>>
>>
> You cannot do it in the OpenSCAD language, as you are not allowed to
> modify variables, and you cannot store shapes in variables.
>
> As I had similar thoughts after using OpenSCAD for some time, I made
> AngelScript CSG which I currently use for generating OpenSCAD models. Your
> example then becomes straight forward (AngelScript syntax):
>
>    solid@ myShape = difference3d(cube(12,true),sphere(8));
>    @myShape       = union3d(myShape, cylinder(15,7));
>
> When running this, an OpenSCAD .csg file can be generated and the result
> in OpenSCAD is as shown in the attached image.
>
> Carsten Arnholm
> http://arnholm.org/
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160224/1f40b96a/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: hisShape.png
Type: image/png
Size: 22783 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160224/1f40b96a/attachment.png>

From Torsten.Paul at gmx.de  Wed Feb 24 17:59:55 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Wed, 24 Feb 2016 23:59:55 +0100
Subject: [OpenSCAD] Is it possible to use shapes as variables?
In-Reply-To: <56CE3022.5050807@arnholm.org>
References: <1456306960659-16223.post@n5.nabble.com>
	<1456351013420-16227.post@n5.nabble.com> <56CE3022.5050807@arnholm.org>
Message-ID: <56CE35EB.1070103@gmx.de>

On 02/24/2016 11:35 PM, Carsten Arnholm wrote:
>> Aetig wrote
>>> Somehow, at least for me, it would be easier to read and write code using
>>> shapes as variables and manipulating them incrementally, and the same code
>>> could look something like this:
>>>
>>> myShape = difference()  {cube(12, center=true); sphere(8);};
>>> myShape = union()  {myShape; cylinder(15, 7);};
>>>
>>> In this case first shapes are first in the code, and they are
>>> incrementally developed.
>>>
>>> So is it possible to write code like in second imaginary example?
> 
> You cannot do it in the OpenSCAD language, as you are not allowed to modify
> variables, and you cannot store shapes in variables.
>

Sure you can incrementally build objects, even with OpenSCAD
currently not being able to assign shapes to a variable.

Using modules can be even more flexible as they can be
parameterized.

// define the first part by giving it a name (making it a module)
module myShape() difference() { cube(12, center=true); sphere(8); }

// use it to create more complex objects (with a parameter)
module moreComplexShape(h = 0) union() { myShape(); cylinder(15 + h, 7); }

// now use the moreComplexShape multiple times
moreComplexShape();
for (a = [ 0 : 45 : 359 ]) {
    rotate([0, 0, a]) translate([30, 0, 0]) moreComplexShape(a / 20);
}

ciao,
  Torsten.



From ivo.knutsel at gmail.com  Wed Feb 24 18:50:41 2016
From: ivo.knutsel at gmail.com (Ivo)
Date: Wed, 24 Feb 2016 16:50:41 -0700 (MST)
Subject: [OpenSCAD] Is it possible to use shapes as variables?
In-Reply-To: <1456306960659-16223.post@n5.nabble.com>
References: <1456306960659-16223.post@n5.nabble.com>
Message-ID: <1456357841948-16232.post@n5.nabble.com>

Aetig wrote
> ..
> myShape = difference()  {cube(12, center=true); sphere(8);};
> myShape = union()  {myShape; cylinder(15, 7);};
> ..

The second myShape is unclear in meaning. If it's a new object it should
have a new name. If it is a geometry-modifier (i'm trying to avoid the word
"function") than it should have a new name as well, but then you can
actually use it as a generic geometry modifier.

module myShape() difference()  {cube(12, center=true); sphere(8);}; 
module cylinderiser() union()  {children(0); cylinder(15, 7);}; 

cylinderiser(){ 
  myShape(); 
};

Openscad doesn't have variables, but it can pass modules to other modules.




--
View this message in context: http://forum.openscad.org/Is-it-possible-to-use-shapes-as-variables-tp16223p16232.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Thu Feb 25 03:38:59 2016
From: arnholm at arnholm.org (arnholm at arnholm.org)
Date: Thu, 25 Feb 2016 09:38:59 +0100
Subject: [OpenSCAD]
 =?utf-8?q?Is_it_possible_to_use_shapes_as_variables=3F?=
In-Reply-To: <56CE35EB.1070103@gmx.de>
References: <1456306960659-16223.post@n5.nabble.com>
	<1456351013420-16227.post@n5.nabble.com> <56CE3022.5050807@arnholm.org>
	<56CE35EB.1070103@gmx.de>
Message-ID: <59104da1b11a636fba6bdad0e2e2ddc4@arnholm.org>

On 2016-02-24 23:59, Torsten Paul wrote:
> On 02/24/2016 11:35 PM, Carsten Arnholm wrote:
>>> Aetig wrote
>>>> Somehow, at least for me, it would be easier to read and write code 
>>>> using
>>>> shapes as variables and manipulating them incrementally, and the 
>>>> same code
>>>> could look something like this:
>>>> 
>>>> myShape = difference()  {cube(12, center=true); sphere(8);};
>>>> myShape = union()  {myShape; cylinder(15, 7);};
>>>> 
>>>> In this case first shapes are first in the code, and they are
>>>> incrementally developed.
>>>> 
>>>> So is it possible to write code like in second imaginary example?
>> 
>> You cannot do it in the OpenSCAD language, as you are not allowed to 
>> modify
>> variables, and you cannot store shapes in variables.
>> 
> 
> Sure you can incrementally build objects, even with OpenSCAD
> currently not being able to assign shapes to a variable.
> 
> Using modules can be even more flexible as they can be
> parameterized.

Modules are functions by another name. Most languages have them, 
including OpenSCAD and AngelScript. Functions are named algorithms, 
variables are named object instances, functions and object instances are 
not generally interchangeable. Modifiable variables are useful for 
incrementally building objects like Aetig asked for, by iteration or 
other methods, or as sources for further duplication. Plus much more. 
Most languages have this ability as it is a generally useful thing.

Carsten Arnholm


From Torsten.Paul at gmx.de  Thu Feb 25 05:25:27 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Thu, 25 Feb 2016 11:25:27 +0100
Subject: [OpenSCAD] Is it possible to use shapes as variables?
In-Reply-To: <59104da1b11a636fba6bdad0e2e2ddc4@arnholm.org>
References: <1456306960659-16223.post@n5.nabble.com>
	<1456351013420-16227.post@n5.nabble.com> <56CE3022.5050807@arnholm.org>
	<56CE35EB.1070103@gmx.de>,
	<59104da1b11a636fba6bdad0e2e2ddc4@arnholm.org>
Message-ID: <trinity-022151a0-6e05-4d15-9025-65f8d780a586-1456395927517@3capp-gmx-bs72>

> Modules are functions by another name. Most languages have them,
> including OpenSCAD and AngelScript. Functions are named algorithms,
> variables are named object instances, functions and object instances are
> not generally interchangeable. Modifiable variables are useful for
> incrementally building objects like Aetig asked for, by iteration or
> other methods, or as sources for further duplication. Plus much more.
> Most languages have this ability as it is a generally useful thing.
>
Yes, all true.

However, my understanding of the original question was "How can I
get the modelling done in OpenSCAD using an incremental approach",
so that's what my answer was aming at.

I do find the language discussion part interesting and insightful,
but I'm not sure it's the most helpful thing for the original
question in this thread.

ciao,
  Torsten.


From stefan.gottsche at gmail.com  Thu Feb 25 07:53:09 2016
From: stefan.gottsche at gmail.com (=?UTF-8?Q?Stefan_G=c3=b6ttsche?=)
Date: Thu, 25 Feb 2016 13:53:09 +0100
Subject: [OpenSCAD] Is it possible to use shapes as variables? (cylinder
 question)
In-Reply-To: <CAEEmnrOt6MgTzTyxRU-93oZa+TvuEAeSxkgy9Qu_d85NbhJYRQ@mail.gmail.com>
References: <1456306960659-16223.post@n5.nabble.com>
	<1456351013420-16227.post@n5.nabble.com> <56CE3022.5050807@arnholm.org>
	<CAEEmnrOt6MgTzTyxRU-93oZa+TvuEAeSxkgy9Qu_d85NbhJYRQ@mail.gmail.com>
Message-ID: <56CEF935.5010106@gmail.com>

On 24. feb. 2016 23:48, nop head wrote:
> cylinder(15, 7);
  Just inserting myself here as the openscad newbie.
Is this expected?
If I check the manual, it says

cylinder(h = height, r1 = BottomRadius, r2 = TopRadius, center = true/false);

    *Parameters*

    *h* : height of the cylinder or cone
    *r*  : radius of cylinder. r1 = r2 = r.
    *r1* : radius, bottom of cone.
    *r2* : radius, top of cone.

so I would have assumed that when writing cylinder(15,7); openSCAD 
interprets the single r as r=r1=r2 and gives me a cylinder, 15 high, 7 
in diameter?
But then again, that is not visible from the functions' parameter list.

The manual goes on to state

defaults: cylinder();  yields: cylinder($fn = 0, $fa = 12, $fs = 2, h = 1, r1 = 1, r2 = 1, center = false);


which probably explains the cone (H and R1 are given, R2 is assumed 
default).

But this is a bit confusing to me, shouldn't the manual then NOT state 
that r1=r2=r ?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160225/4b9dbdcb/attachment.html>

From nop.head at gmail.com  Thu Feb 25 08:31:52 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 25 Feb 2016 13:31:52 +0000
Subject: [OpenSCAD] Is it possible to use shapes as variables? (cylinder
	question)
In-Reply-To: <56CEF935.5010106@gmail.com>
References: <1456306960659-16223.post@n5.nabble.com>
	<1456351013420-16227.post@n5.nabble.com>
	<56CE3022.5050807@arnholm.org>
	<CAEEmnrOt6MgTzTyxRU-93oZa+TvuEAeSxkgy9Qu_d85NbhJYRQ@mail.gmail.com>
	<56CEF935.5010106@gmail.com>
Message-ID: <CAEEmnrNfOjMS0S6izdgST=htLu8pYxO4E=6_whn0uTzA3FOFJw@mail.gmail.com>

Yes it was a surprise to me as well but cylinder also takes d and d1 and
d2, so I have no idea how positional parameters are interpreted. I always
use the names for cylinder.

On 25 February 2016 at 12:53, Stefan G?ttsche <stefan.gottsche at gmail.com>
wrote:

> On 24. feb. 2016 23:48, nop head wrote:
>
> cylinder(15, 7);
>
>  Just inserting myself here as the openscad newbie.
> Is this expected?
> If I check the manual, it says
>
> cylinder(h = height, r1 = BottomRadius, r2 = TopRadius, center = true/false);
>
> *Parameters* *h* : height of the cylinder or cone *r*  : radius of
> cylinder. r1 = r2 = r. *r1* : radius, bottom of cone. *r2* : radius, top
> of cone.
>
> so I would have assumed that when writing cylinder(15,7); openSCAD
> interprets the single r as r=r1=r2 and gives me a cylinder, 15 high, 7 in
> diameter?
> But then again, that is not visible from the functions' parameter list.
>
> The manual goes on to state
>
> defaults: cylinder();  yields: cylinder($fn = 0, $fa = 12, $fs = 2, h = 1, r1 = 1, r2 = 1, center = false);
>
>
>
> which probably explains the cone (H and R1 are given, R2 is assumed
> default).
>
> But this is a bit confusing to me, shouldn't the manual then NOT state
> that r1=r2=r ?
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160225/59c390a9/attachment.html>

From arnholm at arnholm.org  Thu Feb 25 09:02:20 2016
From: arnholm at arnholm.org (arnholm at arnholm.org)
Date: Thu, 25 Feb 2016 15:02:20 +0100
Subject: [OpenSCAD]
 =?utf-8?q?Is_it_possible_to_use_shapes_as_variables=3F?=
 =?utf-8?q?_=28cylinder_question=29?=
In-Reply-To: <56CEF935.5010106@gmail.com>
References: <1456306960659-16223.post@n5.nabble.com>
	<1456351013420-16227.post@n5.nabble.com> <56CE3022.5050807@arnholm.org>
	<CAEEmnrOt6MgTzTyxRU-93oZa+TvuEAeSxkgy9Qu_d85NbhJYRQ@mail.gmail.com>
	<56CEF935.5010106@gmail.com>
Message-ID: <bdd7ca97023018d9aae198c0d7fe699b@arnholm.org>

On 2016-02-25 13:53, Stefan G?ttsche wrote:
> 
> so I would have assumed that when writing cylinder(15,7); openSCAD
> interprets the single r as r=r1=r2 and gives me a cylinder, 15 high, 7
> in diameter?

cylinder(15,7) in OpenSCAD is equivalent to cylinder(15,r1=7) which will 
give you a cone with default r2=1. You can, however, write 
cylinder(15,r=7) to get a proper cylinder (constant radius).

In AngelScript CSG, cone and cylinder are distinct types, a cylinder 
will always have constant radius:

cylinder@ c1 = cylinder(15,7);  // a cylinder: h, r
cone@ c2 = cone(15,7,1);    // a cone: h, r1, r2

Carsten Arnholm
http://arnholm.org/






From lboyd at frontiernet.net  Thu Feb 25 10:12:33 2016
From: lboyd at frontiernet.net (L Boyd)
Date: Thu, 25 Feb 2016 08:12:33 -0700 (MST)
Subject: [OpenSCAD] Is it possible to use shapes as variables?
In-Reply-To: <1456400193084-16235.post@n5.nabble.com>
References: <1456306960659-16223.post@n5.nabble.com>
	<1456357841948-16232.post@n5.nabble.com>
	<1456400193084-16235.post@n5.nabble.com>
Message-ID: <1456413153766-16240.post@n5.nabble.com>

>From   https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/General#Variables
<https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/General#Variables>  

"Unlike Imperative languages, such a C, OpenSCAD is not an iterative
language, as such the concept of x = x + 1  is not valid"



-----
Larry
--
View this message in context: http://forum.openscad.org/Is-it-possible-to-use-shapes-as-variables-tp16223p16240.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From lboyd at frontiernet.net  Thu Feb 25 10:33:08 2016
From: lboyd at frontiernet.net (L Boyd)
Date: Thu, 25 Feb 2016 08:33:08 -0700 (MST)
Subject: [OpenSCAD] Is it possible to use shapes as variables? (cylinder
	question)
In-Reply-To: <bdd7ca97023018d9aae198c0d7fe699b@arnholm.org>
References: <1456306960659-16223.post@n5.nabble.com>
	<1456351013420-16227.post@n5.nabble.com>
	<56CE3022.5050807@arnholm.org>
	<CAEEmnrOt6MgTzTyxRU-93oZa+TvuEAeSxkgy9Qu_d85NbhJYRQ@mail.gmail.com>
	<56CEF935.5010106@gmail.com>
	<bdd7ca97023018d9aae198c0d7fe699b@arnholm.org>
Message-ID: <1456414388612-16241.post@n5.nabble.com>

>From  
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Primitive_Solids#cylinder
<https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Primitive_Solids#cylinder>  

"cylinder

Creates a cylinder or cone centered about the z axis. When center is true,
it is also centered vertically along the z axis.

Parameter names are optional if given in the order shown here. If a
parameter is named, all following parameters must also be named.

cylinder(h = height, r1 = BottomRadius, r2 = TopRadius, center =
true/false);

"

cylinder(15,7); is equivalent to cylinder(h=15,r1=7); This generates a cone
since the default r2=1 is used. 

What manual does not state here, although perhaps it should, is that to use 
alternates such as r, d, d1, d2 they must be named, as they are in the
examples.



-----
Larry
--
View this message in context: http://forum.openscad.org/Is-it-possible-to-use-shapes-as-variables-tp16223p16241.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Feb 25 16:11:03 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 25 Feb 2016 14:11:03 -0700 (MST)
Subject: [OpenSCAD] Importing STL files
In-Reply-To: <1456427447221-16242.post@n5.nabble.com>
References: <1456427447221-16242.post@n5.nabble.com>
Message-ID: <1456434663345-16243.post@n5.nabble.com>

Welcome to the forum. Your post is still flagged as "This post has NOT been
accepted by the mailing list yet", so nobody gets it unless they look. 
You need to subscribe to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.

Try putting a "#' in front of your import() to highlight them so you can
confirm they are where you think they are.

Some STL files are not well formed and OpenSCAD may not be able to handle
them. Check them with Netfabb Basic.

If yo still have a problem share your code, and if possible the STLs.







-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Importing-STL-files-tp16242p16243.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Feb 25 16:26:47 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 25 Feb 2016 14:26:47 -0700 (MST)
Subject: [OpenSCAD] troubles in my tribbles: questions about $t in
 animate mode and random values
In-Reply-To: <CAPf62chH0sG9ZqN2EbUboV5qHgb5JeYL0w6QJFiXBrX-9QDcbg@mail.gmail.com>
References: <CAPf62chH0sG9ZqN2EbUboV5qHgb5JeYL0w6QJFiXBrX-9QDcbg@mail.gmail.com>
Message-ID: <1456435607307-16244.post@n5.nabble.com>

Erdal Yildiz wrote
> these are the questions i have now:
> Q1- Is there a way to generate  random values for a single animation?
> Q2- Is there any other setting or configuration i am missing?
> Q3- is there a way to start openscad with a file, directly in animation
> mode?
> Q4- what is the best way to calculate/detect collision in openscad, that
> some
> of my random blocks are going to be in the same space?
> and a more general question:
> Q5- what is the best way make the animation perform faster, for larger
> amount
> of blocks?

Sorry haven't looked at your code, but;

Q1/2. Use the rands(seed_value=) parameter? 

Q3. Not that I know of. 

Q4. Complicated trigonometry? Sorry.

Q5. Get a faster PC. Use the dump feature and make a video. 



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/troubles-in-my-tribbles-questions-about-t-in-animate-mode-and-random-values-tp16219p16244.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Feb 25 17:10:23 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 25 Feb 2016 15:10:23 -0700 (MST)
Subject: [OpenSCAD] insights for openscad and pyopenscad from the libre
 15.6in laptop project
In-Reply-To: <1455548318895-16150.post@n5.nabble.com>
References: <1455548318895-16150.post@n5.nabble.com>
Message-ID: <1456438223089-16245.post@n5.nabble.com>

Hmmm. Where to start.

Firstly, if you haven't subscribed yet, Your post is still flagged as "This
post has NOT been accepted by the mailing list yet", so nobody gets it
unless they look. 
You need to subscribe to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.

I'll quote the full OP below for those only on the mailing-list.

"however that the openscad language is *not* NP-complete" - that do you mean
by that?

'btw in the vein of "stark simplicity", i noticed that the latest version
of openscad (which i couldn't use because of severe useability flaws
in the frame-rate rendering, due to known bugs in libqt5) has a toolbar.
PLEASE MAKE THIS OPTIONAL.' - View/Hide-Toolbars

"my recommendation to you therefore would be to *CUT* the in-tool editor
entirely." There are many types and levels of OpenSCAD users (and operating
systems used). I don't think not having an editor would be helpful to many.
IMO

Others may have something to comment on below.



lkcl wrote
> hi folks,
> 
> i just wanted to let you - especially the developers - know that i've been
> using openscad (and something called pyopenscad) for the past fifteen
> months to develop an extremely complex GPLv3+ project containing over
> 35 separate parts: a libre 15.6in laptop.  the source code is currently
> almost five THOUSAND lines long (excluding support libraries).
> 
> to say that i am extremely grateful that openscad exists would be a
> huge understatement.  i am a big fan of simplicity (zero cruft) and
> high bang-per-buck ratio tools.  i tried mm3d once, and stopped
> after manually adding 2,500 points by hand with a mouse.  that
> experience was enough of a stark contrast to make me deeply
> appreciate the power of parametric design.
> 
> so after fifteen months of near-continuous use i have some insights
> that i'd like to share with you.
> 
> the key critical advantage of being able to use a text-based parametric
> design i find is that i can use git revision control.  i recently needed
> to
> revert a modification involving magnetic catches in the lid, and it was
> a simple matter of "git log | grep -10 magnet" to find out what i had
> done, because i am regularly committing with descriptive comments for
> exactly this purpose.
> 
> the key critical advantage of using pyopenscad is however that the
> openscad language is *not* NP-complete, and i can neither recommend
> to the developers that they even *remotely* contemplate making the
> openscad language NP-complete (why would you ever want to both
> create and maintain an obscure programming language when there
> exist perfectly good ones already?), nor, even if the openscad language
> *were* made NP-complete would i ever consider using it directly.
> the reason: python is a well-known, extremely comprehensive language
> with object-orientated features.  i use it because it's easier to do so.
> 
> now, in an earlier incarnation of my programming history i would have
> advocated or suggested adding language bindings to openscad, but
> honestly, i feel that the openscad language itself - when combined
> with language translators (such as pyopenscad) is perfectly suited to
> the task.  pyopenscad is "another tool based on the unix principle",
> whilst openscad is likewise, and the same with python.
> 
> ... why make openscad complex?  the moment you add language
> bindings for python, the .NET developers will want one too.  and perl.
> and everyone else, and that just opens the floodgates and you'll be
> making language bindings forever instead of focussing on improving
> openscad.
> 
> btw in the vein of "stark simplicity", i noticed that the latest version
> of openscad (which i couldn't use because of severe useability flaws
> in the frame-rate rendering, due to known bugs in libqt5) has a toolbar.
> PLEASE MAKE THIS OPTIONAL.  screen real-estate is critical to me,
> and there is literally nothing on the toolbar that i need or will need...
> EVER.  i use a single-key vim macro to run the python program that
> auto-generates the openscad output; this in turn triggers openscad
> to reload that output and automatically generate the render.  following
> that, i can press F6, and if the CGAL looks good i can export to STL.
> 
> there is ZERO need in this scenario for an in-tool editor (nothing beats
> vim or emacs or the end-user's editor of choice: i'm curious to know
> why openscad even has a built-in editor at all - it breaks the unix
> principle "do one thing and do it well").  example: you're never going
> to duplicate the vim "colour syntax highlighting" capabilities, and even
> if you do they will never be as good (or as customisable) as vim. even
> if you did duplicate the full set of vim "colour syntax highlighting"
> which is so advantageous an aid to programming, you would now be
> vim contributors... not openscad developers.  my recommendation to
> you therefore would be to *CUT* the in-tool editor entirely.  make it
> a completely separate program in order to keep people happy who
> currently use it... but advise them that it has become a "non-maintained"
> external tool that will be deprecated within the next 18-24 months.
> 
> there is also zero need (except when there are CGAL "invalid manifold"
> errors) for the console - i hide that.  likewise, i notice the addition
> of a tree-view in the latest version.  whilst i can see its potential for
> small-scale objects (especially if combined for example with object
> highlighting, which i have to say would be *incredibly* useful even
> and especially with massively-complex objects), again it is something
> that, for the most part, just takes up screen real-estate.  so it too
> is gone: off.
> 
> basically i would be happy if there was literally no menu, that there
> was pretty much a single window, and for accessing the menu the
> only way to do so was by right-mouse context-menu.  given that
> scroll-wheel equals the same functionality as middle-wheel
> press-and-drag, and dual left-and-right button is the same as
> left-button, there is room here to jig things around, move the entire
> menu onto right-mouse button, and save some screen real-estate.
> honestly, though, the size of the menus (and the status bar),
> UNLIKE the new toolbar, are small enough in font size that they are
> really no bother, and the change in UI expectations is a definite
> barrier.  the new toolbar however, as it uses massively oversized
> icons, HAS TO GO.  if i absolutely have to upgrade any time soon,
> i will actually download the source, hack the toolbar OUT, and use
> a modified self-maintained version, it's that serious an impediment
> to useability.
> 
> on the subject of focussing your efforts to make specialist "do one
> thing and do it well" style improvements to the actual core function
> of what openscad does, i would recommend looking up the reasons
> why julia longtin *completely* reimplemented openscad in haskell.
> the two key reasons are: to add an *automatic* "rounding corners"
> feature to union and intersection (by way of a parameter).  this
> extra parameter basically caused special (spherical at corners,
> cylindrical at edges) "fuzzing" joins that save a vast amount of
> futzing about, as well as make parts that properly fit together,
> *and* make 3D-printing of parts come out without the usual
> "blobbing" at corners.  3D print-heads do not turn right-angles
> on a dime, so it is necessary to add "curvature".  julia made it
> unnnbelievably simple to do that: add a cube to a union with
> the "rounding" parameter set to exactly how much curvature you'd
> like, and... job's done: the cube comes out with rounded edges
> and corners.  this turns out to be *really* critical when doing
> lostPLA aluminium casting [which is what julia's doing, and is the
> whole reason why she rewrote openscad in haskell].
> 
> second thing: when two objects are mathematically exactly lined up
> and touching, openscad (actually probably libCGAL) sometimes
> decides that the objects are separate, and sometimes decides that
> they are *one* object.  the fact that there is indecision *is* itself
> the problem.  it's critical that openscad decide to be one or the
> other, not either.  honestly i feel that you should either generate
> a compile error or decide to bite the bullet and fix this one (as it's
> "core functionality").  forcing users to make their openscad
> source code that much more complex - by forcing them to add in
> "overlap" - isn't a nice thing to do to them!  even adding an extra
> parameter to union and intersect etc. to say "these two objects
> are definitely, definitely part of the same one object, ALTER THE
> OBJECT to make ABSOLUTELY sure that's the case, or if you
> genuinely can't programmatically work out what faces are actually
> touching, to within a reasonable (and very very small) margin,
> throw a compile error".
> 
> personally i would set this parameter to default to "True" and i
> would strongly recommend that it be set to "True" on union (etc.)
> but even if you didn't, because i am using pyopenscad i could
> get pyopenscad to auto-generate scad files that override
> whatever default behaviour you chose.
> 
> so, if this parameter was set on a union, openscad would go,
> "hey, these two faces are pretty close (to within the
> accuracy of floating-point precision) - let me just work out
> the intersect space and EXTEND one of the objects INTO
> the other AUTOMATICALLY for the user, so that they don't
> have to do that themselves in a non-standard, tiresome,
> laborious, code-complicating and code-untidy way".
> 
> one last thing: i noted from discussions on debian bugs that there has
> been a decision made to track the highly-unstable libqt5.  code has
> been *specifically* added to take into account severe useability
> flaws inherent in libqt5 that render openscad completely and
> utterly unusable.  given that it was possible to simply recompile the
> entire [latest] codebase to use libqt4, and a significant speed-increase
> was noted when doing so (over the previous stable debian version
> of openscad), i can only ask why the developers would effectively
> poison the openscad codebase with fatally-flawed workarounds
> to use completely-non-production-ready code from a *third party*?
> surely it would make far more sense to make a bugreport to those
> third party developers, and say "hey guys, libqt5 is just not ready
> for production, we're not going to use it, here's a full detailed
> report including repro-code instructions, go fix it, we'll use libqt5
> *only* when it's ready".
> 
> in essence, other people's problem code *isn't* your responsibility,
> so why make life difficult for yourself and the sorts of end-users
> who don't have the ability to compile or modify code [i say this
> to deliberately exclude myself from this question, as i *can*
> both modify and compile up code].
> 
> that's basically it - i believe that's everything from the
> [near-full-time]
> use of openscad for the past 15 months.  you're welcome to listen
> or not to anything i've said above: i am perfectly happy with the
> setup that i have.  if you'd like to follow what i'm doing or take a
> look at the results, details are here:
> https://www.youmagine.com/designs/libre-hardware-licensed-parametric-laptop-design
> 
> and, once things get up-and-running financially, i promise i'll make
> sure you get some financial compensation.  like many software
> libre developers who have done key strategic work and not been
> in the slightest bit adequately financially rewarded, i recognise
> keenly the importance of financially rewarding people for the
> service that they provide... despite the fact that libre software
> licenses *actively* prohibit the usual well-recognised method of
> compensation: sale of goods/services.
> 
> l.





-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/insights-for-openscad-and-pyopenscad-from-the-libre-15-6in-laptop-project-tp16150p16245.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From louijp at yahoo.com  Thu Feb 25 22:42:17 2016
From: louijp at yahoo.com (Jean-Paul Louis)
Date: Thu, 25 Feb 2016 22:42:17 -0500
Subject: [OpenSCAD] Is it possible to use shapes as variables?
In-Reply-To: <59104da1b11a636fba6bdad0e2e2ddc4@arnholm.org>
References: <1456306960659-16223.post@n5.nabble.com>
	<1456351013420-16227.post@n5.nabble.com>
	<56CE3022.5050807@arnholm.org> <56CE35EB.1070103@gmx.de>
	<59104da1b11a636fba6bdad0e2e2ddc4@arnholm.org>
Message-ID: <4EAA4208-A4B2-48A4-AC09-57B4CCDF39DF@yahoo.com>

Carsten,

A module is not a function by any name. a function ALWAYS return a value, a module does not.

Maybe you meant a procedure.


Just my $0.02,
Jean-Paul
N1JPL


> On Feb 25, 2016, at 3:38 AM, arnholm at arnholm.org wrote:
> 
> On 2016-02-24 23:59, Torsten Paul wrote:
>> On 02/24/2016 11:35 PM, Carsten Arnholm wrote:
>>>> Aetig wrote
>>>>> Somehow, at least for me, it would be easier to read and write code using
>>>>> shapes as variables and manipulating them incrementally, and the same code
>>>>> could look something like this:
>>>>> myShape = difference()  {cube(12, center=true); sphere(8);};
>>>>> myShape = union()  {myShape; cylinder(15, 7);};
>>>>> In this case first shapes are first in the code, and they are
>>>>> incrementally developed.
>>>>> So is it possible to write code like in second imaginary example?
>>> You cannot do it in the OpenSCAD language, as you are not allowed to modify
>>> variables, and you cannot store shapes in variables.
>> Sure you can incrementally build objects, even with OpenSCAD
>> currently not being able to assign shapes to a variable.
>> Using modules can be even more flexible as they can be
>> parameterized.
> 
> Modules are functions by another name. Most languages have them, including OpenSCAD and AngelScript. Functions are named algorithms, variables are named object instances, functions and object instances are not generally interchangeable. Modifiable variables are useful for incrementally building objects like Aetig asked for, by iteration or other methods, or as sources for further duplication. Plus much more. Most languages have this ability as it is a generally useful thing.
> 
> Carsten Arnholm
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From dj at deadhat.com  Thu Feb 25 23:22:01 2016
From: dj at deadhat.com (David Johnston)
Date: Thu, 25 Feb 2016 20:22:01 -0800
Subject: [OpenSCAD] Strange see-through result when taking the difference of
 a cube and a polyhedron.
In-Reply-To: <4EAA4208-A4B2-48A4-AC09-57B4CCDF39DF@yahoo.com>
References: <1456306960659-16223.post@n5.nabble.com>
	<1456351013420-16227.post@n5.nabble.com> <56CE3022.5050807@arnholm.org>
	<56CE35EB.1070103@gmx.de>
	<59104da1b11a636fba6bdad0e2e2ddc4@arnholm.org>
	<4EAA4208-A4B2-48A4-AC09-57B4CCDF39DF@yahoo.com>
Message-ID: <56CFD2E9.2070508@deadhat.com>

An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160225/44947310/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Screen Shot 2016-02-25 at 8.09.01 PM.png
Type: image/png
Size: 40910 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160225/44947310/attachment.png>

From oz.at.michael at gmail.com  Fri Feb 26 00:26:39 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 25 Feb 2016 22:26:39 -0700 (MST)
Subject: [OpenSCAD] Strange see-through result when taking the
 difference of a cube and a polyhedron.
In-Reply-To: <56CFD2E9.2070508@deadhat.com>
References: <1456306960659-16223.post@n5.nabble.com>
	<1456351013420-16227.post@n5.nabble.com>
	<56CE3022.5050807@arnholm.org> <56CE35EB.1070103@gmx.de>
	<59104da1b11a636fba6bdad0e2e2ddc4@arnholm.org>
	<4EAA4208-A4B2-48A4-AC09-57B4CCDF39DF@yahoo.com>
	<56CFD2E9.2070508@deadhat.com>
Message-ID: <1456464399709-16248.post@n5.nabble.com>

Hi David,

It's a good idea to start a new topic rather than replying to someone
else's.

You problem isa face is inside-out. You see this in View/Thrown-together as
purple;
<http://forum.openscad.org/file/n16248/davidJohnson.jpg> 

See Point ordering for faces in
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Primitive_Solids#polyhedron





-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Is-it-possible-to-use-shapes-as-variables-tp16223p16248.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From dj at deadhat.com  Fri Feb 26 00:50:20 2016
From: dj at deadhat.com (dj at deadhat.com)
Date: Fri, 26 Feb 2016 05:50:20 -0000
Subject: [OpenSCAD] Strange see-through result when taking the
 difference of a cube and a polyhedron.
In-Reply-To: <1456464399709-16248.post@n5.nabble.com>
References: <1456306960659-16223.post@n5.nabble.com>
	<1456351013420-16227.post@n5.nabble.com> <56CE3022.5050807@arnholm.org>
	<56CE35EB.1070103@gmx.de>
	<59104da1b11a636fba6bdad0e2e2ddc4@arnholm.org>
	<4EAA4208-A4B2-48A4-AC09-57B4CCDF39DF@yahoo.com>
	<56CFD2E9.2070508@deadhat.com>
	<1456464399709-16248.post@n5.nabble.com>
Message-ID: <a3442a7faa2e57b5bd8166cdf4ef46c5.squirrel@deadhat.com>

> Hi David,
>
> It's a good idea to start a new topic rather than replying to someone
> else's.
>
> You problem isa face is inside-out. You see this in View/Thrown-together
> as
> purple;
> <http://forum.openscad.org/file/n16248/davidJohnson.jpg>
>
> See Point ordering for faces in
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Primitive_Solids#polyhedron
>

Ah. That got quite counterintuitive. The polyhedron is declared all CW on
all faces, but when taking a difference and the face becomes the inside,
so needs to be run CCW.

So constructing the polyhedron as a solid first (so you can see what
you're making) then stuffing into your solid as a difference, doesn't
work. You have to CCWize the formerly outside faces that are now inside.

Changing the first face (the bottom) to CCW works..
    faces=[[0,1,2,3],[0,4,7,3],[0,1,5,4],[1,2,6,5],[3,7,6,2],[4,5,6,7]],
convexity = 10);
to
    faces=[[0,3,2,1],[0,4,7,3],[0,1,5,4],[1,2,6,5],[3,7,6,2],[4,5,6,7]],
convexity = 10);

I.E. [[CCW],[CW],[CW],[CW],[CW].[CW]]

Thank you.
David




From ivo.knutsel at gmail.com  Fri Feb 26 01:46:04 2016
From: ivo.knutsel at gmail.com (Ivo)
Date: Fri, 26 Feb 2016 07:46:04 +0100
Subject: [OpenSCAD] troubles in my tribbles: questions about $t in
 animate mode and random values
In-Reply-To: <1456435607307-16244.post@n5.nabble.com>
References: <CAPf62chH0sG9ZqN2EbUboV5qHgb5JeYL0w6QJFiXBrX-9QDcbg@mail.gmail.com>
	<1456435607307-16244.post@n5.nabble.com>
Message-ID: <CAKr+76xurG3OyLZJSP99Gkvew62A7kiG-eNqN5q1SVQZGf3gcA@mail.gmail.com>

Q3 : it's messy and requires scripting but i have implemented collision
detection by intersecting the two modules i'm interested in and exporting
that as STL. If the STL is empty then the two modules don't collide.

On Thu, Feb 25, 2016 at 10:26 PM, MichaelAtOz <oz.at.michael at gmail.com>
wrote:

> Erdal Yildiz wrote
> > these are the questions i have now:
> > Q1- Is there a way to generate  random values for a single animation?
> > Q2- Is there any other setting or configuration i am missing?
> > Q3- is there a way to start openscad with a file, directly in animation
> > mode?
> > Q4- what is the best way to calculate/detect collision in openscad, that
> > some
> > of my random blocks are going to be in the same space?
> > and a more general question:
> > Q5- what is the best way make the animation perform faster, for larger
> > amount
> > of blocks?
>
> Sorry haven't looked at your code, but;
>
> Q1/2. Use the rands(seed_value=) parameter?
>
> Q3. Not that I know of.
>
> Q4. Complicated trigonometry? Sorry.
>
> Q5. Get a faster PC. Use the dump feature and make a video.
>
>
>
> -----
> Admin - PM me if you need anything, or if I've done something stupid...
>
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; to the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work. Obviously
> inclusion of works of previous authors is not included in the above.
>
> The TPP is no simple ?trade agreement.?   Fight it!
> http://www.ourfairdeal.org/   time is running out!
> --
> View this message in context:
> http://forum.openscad.org/troubles-in-my-tribbles-questions-about-t-in-animate-mode-and-random-values-tp16219p16244.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160226/baa44a63/attachment.html>

From nop.head at gmail.com  Fri Feb 26 03:04:41 2016
From: nop.head at gmail.com (nop head)
Date: Fri, 26 Feb 2016 08:04:41 +0000
Subject: [OpenSCAD] Strange see-through result when taking the
 difference of a cube and a polyhedron.
In-Reply-To: <a3442a7faa2e57b5bd8166cdf4ef46c5.squirrel@deadhat.com>
References: <1456306960659-16223.post@n5.nabble.com>
	<1456351013420-16227.post@n5.nabble.com>
	<56CE3022.5050807@arnholm.org> <56CE35EB.1070103@gmx.de>
	<59104da1b11a636fba6bdad0e2e2ddc4@arnholm.org>
	<4EAA4208-A4B2-48A4-AC09-57B4CCDF39DF@yahoo.com>
	<56CFD2E9.2070508@deadhat.com>
	<1456464399709-16248.post@n5.nabble.com>
	<a3442a7faa2e57b5bd8166cdf4ef46c5.squirrel@deadhat.com>
Message-ID: <CAEEmnrPj6J8TvTp=rATXrEmqAmqz20Gy4xgR1R9+3hAcbZ-iZQ@mail.gmail.com>

No that isn't true. You don't have to construct a polyhedron differently
when it is used in a difference. You simply had the bottom face CCW and it
needs to be CW looking from the outside, i.e. viewed from underneath.
I.e. [0,1,2,3]
is CW.

On 26 February 2016 at 05:50, <dj at deadhat.com> wrote:

> > Hi David,
> >
> > It's a good idea to start a new topic rather than replying to someone
> > else's.
> >
> > You problem isa face is inside-out. You see this in View/Thrown-together
> > as
> > purple;
> > <http://forum.openscad.org/file/n16248/davidJohnson.jpg>
> >
> > See Point ordering for faces in
> >
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Primitive_Solids#polyhedron
> >
>
> Ah. That got quite counterintuitive. The polyhedron is declared all CW on
> all faces, but when taking a difference and the face becomes the inside,
> so needs to be run CCW.
>
> So constructing the polyhedron as a solid first (so you can see what
> you're making) then stuffing into your solid as a difference, doesn't
> work. You have to CCWize the formerly outside faces that are now inside.
>
> Changing the first face (the bottom) to CCW works..
>     faces=[[0,1,2,3],[0,4,7,3],[0,1,5,4],[1,2,6,5],[3,7,6,2],[4,5,6,7]],
> convexity = 10);
> to
>     faces=[[0,3,2,1],[0,4,7,3],[0,1,5,4],[1,2,6,5],[3,7,6,2],[4,5,6,7]],
> convexity = 10);
>
> I.E. [[CCW],[CW],[CW],[CW],[CW].[CW]]
>
> Thank you.
> David
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160226/0d9efb77/attachment.html>

From johangjonker at zonnet.nl  Fri Feb 26 03:16:43 2016
From: johangjonker at zonnet.nl (Johan Jonker)
Date: Fri, 26 Feb 2016 01:16:43 -0700 (MST)
Subject: [OpenSCAD] ERROR: Recursion detected calling function 'pow'
Message-ID: <1456474603165-16252.post@n5.nabble.com>

What does the error above mean?
It appears when I add the following line:

    chzt = [for (zz= [ze: 1: zb]) zz];       

kind regards
Johan Jonker



--
View this message in context: http://forum.openscad.org/ERROR-Recursion-detected-calling-function-pow-tp16252.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Fri Feb 26 03:34:05 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 26 Feb 2016 01:34:05 -0700 (MST)
Subject: [OpenSCAD] ERROR: Recursion detected calling function 'pow'
In-Reply-To: <1456474603165-16252.post@n5.nabble.com>
References: <1456474603165-16252.post@n5.nabble.com>
Message-ID: <1456475645006-16253.post@n5.nabble.com>

ink we neeed to know what ze & zb are. 



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/ERROR-Recursion-detected-calling-function-pow-tp16252p16253.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Fri Feb 26 09:28:36 2016
From: arnholm at arnholm.org (arnholm at arnholm.org)
Date: Fri, 26 Feb 2016 15:28:36 +0100
Subject: [OpenSCAD]
 =?utf-8?q?Is_it_possible_to_use_shapes_as_variables=3F?=
In-Reply-To: <4EAA4208-A4B2-48A4-AC09-57B4CCDF39DF@yahoo.com>
References: <1456306960659-16223.post@n5.nabble.com>
	<1456351013420-16227.post@n5.nabble.com> <56CE3022.5050807@arnholm.org>
	<56CE35EB.1070103@gmx.de>
	<59104da1b11a636fba6bdad0e2e2ddc4@arnholm.org>
	<4EAA4208-A4B2-48A4-AC09-57B4CCDF39DF@yahoo.com>
Message-ID: <1d796cf48dee5cf066a62f7e5e44366f@arnholm.org>

On 2016-02-26 04:42, Jean-Paul Louis wrote:
> Carsten,
> 
> A module is not a function by any name. a function ALWAYS return a
> value, a module does not.

Jean-Paul,

You are of course correct about function/module strictly within the 
OpenSCAD language, but I was speaking generally. Also, a module in 
OpenSCAD definitely returns a value, it returns a geometric object. It 
is just that it is returned implicitly rather than explicitly and you 
cannot store the result in a variable.

> Maybe you meant a procedure.

Not really. An OpenSCAD module maps to a function in AngelScript CSG. 
Similarly, in C or C++ functions may or may not return values. There are 
no procedures in either of these languages. The difference in 
terminology and similarity of concept was my point ("A module is a 
function by another name"). The terminology is slightly different in 
different languages (Pascal has procedures, Fortran has subroutines). 
All of them are named algorithms in one way or another.

Carsten Arnholm


From doug at moens.org  Fri Feb 26 11:17:18 2016
From: doug at moens.org (doug moen)
Date: Fri, 26 Feb 2016 11:17:18 -0500
Subject: [OpenSCAD] Is it possible to use shapes as variables?
In-Reply-To: <1456351013420-16227.post@n5.nabble.com>
References: <1456306960659-16223.post@n5.nabble.com>
	<1456351013420-16227.post@n5.nabble.com>
Message-ID: <CAGV6i+Me2GSYw_P58y8xRm79ifOw7h2WFY6Cb+S5eYcLvT57Ug@mail.gmail.com>

Aetig wrote
+ I am a newbie with regard to OpenSCAD, and I was wondering is it possible
+ to use shapes as variables?

You cannot currently write
   myShape = difference()  {cube(12, center=true); sphere(8);};
although that is being considered as a future extension.

Instead, you must write
   module myShape() difference()  {cube(12, center=true); sphere(8);};
and write "myShape()" instead of "myShape" to reference the definition.
This is more verbose, but is otherwise equivalent to "myShape = ..."

+ I think the usual way goes like this:
+
+ union()  {
+     cylinder(15, 7);
+     difference()  {cube(12, center=true); sphere(8);}
+ }
+
+ In this case the structure is build somehow from bottom up, first shapes
+ being generates deepest / last in the code.
+
+
+ Somehow, at least for me, it would be easier to read and write code using
+ shapes as variables and manipulating them incrementally, and the same code
+ could look something like this:
+
+ myShape = difference()  {cube(12, center=true); sphere(8);};
+ myShape = union()  {myShape; cylinder(15, 7);};
+
+ In this case first shapes are first in the code, and they are
+ incrementally developed.
+
+ So is it possible to write code like in second imaginary example?

Yes, but you need to use a slightly different style than you are used to.

OpenSCAD is a declarative, "single-assignment" language. A variable can
only be assigned once. Another way to think of this: "x = y;" is a
*definition* of x.

You can still write a sequence of definitions, and define your shape
incrementally, but each definition must have a different name. That's only
a small change from the way you'd code this in an imperative language.

If we supported shape variables, you'd write:

   myShape = difference()  {cube(12, center=true); sphere(8);};
   myShape2 = union()  {myShape; cylinder(15, 7);};

But since you need to use module definitions, you instead will write:

   module myShape() difference()  {cube(12, center=true); sphere(8);};
   module myShape2() union()  {myShape(); cylinder(15, 7);};

You need to know 2 more things to make the transition from an imperative to
a declarative style: how to code incremental definitions involving
conditionals, and involving loops.

In an imperative language, using conditionals you might write:

   myShape = difference()  {cube(12, center=true); sphere(8);};
   if (flag) myShape = union()  {myShape; cylinder(15, 7);};

In OpenSCAD, you can't update a variable from inside an if statement, but
you can do something equivalent by rearranging the code. First, in variable
form (not yet valid OpenSCAD):

   myShape = difference()  {cube(12, center=true); sphere(8);};
   myShape2 = union() {myShape; if (flag) cylinder(15, 7); }

In the second definition, union has 1 argument if flag is false, or 2
arguments if flag is true.

And now in module form:

   module myShape() difference()  {cube(12, center=true); sphere(8);};
   module myShape2() union() {myShape(); if (flag) cylinder(15, 7); }

In an imperative language, using a loop, you might write:

   myShape = sphere(10, center=true);
   for (i = [0:60:300]) {
      bump = rotate(i) translate([10,0,0]) sphere(2, center=true);
      myShape = union() {myShape; bump;};
   }

In OpenSCAD, you can't update a variable from inside a loop, but by
rearranging the code, you can do something equivalent. First in variable
form (not yet valid OpenSCAD):

   myShape = sphere(10, center=true);
   bumps = for (i = [0:60:300]) {
      rotate(i) translate([10,0,0]) sphere(2, center=true);
   }
   myShape2 = union() {myShape; bumps;}

and now in module form:

   module myShape() sphere(10, center=true);
   module bumps() for (i = [0:60:300]) {
      rotate(i) translate([10,0,0]) sphere(2, center=true);
   }
   module myShape2() union() {myShape(); bumps();}

To summarize, there are 3 basic idioms involved in incrementally defining a
shape: sequences of definitions, conditionals, and loops. I've shown how to
translate those 3 idioms from an imperative language to a declarative
language like OpenSCAD. There's nothing missing from OpenSCAD, relative to
an imperative language, you just need to write your code slightly
differently.

Carsten said: "You cannot do it in the OpenSCAD language, as you are not
allowed to modify variables, and you cannot store shapes in variables."

That may be overstating the issue. The same concepts can be expressed; it's
just that the idioms and syntax are different. Once we have shape
variables, we'll be able to write terser code, but the issue here is
verbosity, not expressibility.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160226/ffda3a33/attachment.html>

From ilceren at hotmail.com  Fri Feb 26 12:36:39 2016
From: ilceren at hotmail.com (Ilceren)
Date: Fri, 26 Feb 2016 10:36:39 -0700 (MST)
Subject: [OpenSCAD] Importing STL files
In-Reply-To: <1456427447221-16242.post@n5.nabble.com>
References: <1456427447221-16242.post@n5.nabble.com>
Message-ID: <1456508199530-16256.post@n5.nabble.com>

You may also need to translate() one of the files so you can see it. If one
of them is small, they may load one inside the other and therefore not be
visible, by they are there.



--
View this message in context: http://forum.openscad.org/Importing-STL-files-tp16242p16256.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Fri Feb 26 15:34:54 2016
From: doug at moens.org (doug moen)
Date: Fri, 26 Feb 2016 15:34:54 -0500
Subject: [OpenSCAD] insights for openscad and pyopenscad from the libre
 15.6in laptop project
In-Reply-To: <1456438223089-16245.post@n5.nabble.com>
References: <1455548318895-16150.post@n5.nabble.com>
	<1456438223089-16245.post@n5.nabble.com>
Message-ID: <CAGV6i+P6TVaZnFATynCERaKnFN7JEr2m8rE-9h3-x6YP=LqVKQ@mail.gmail.com>

Julia Longtin isn't the original author of ImplicitCAD. Credit should go to
Christopher Olah, who wrote it in 2011. Julia's contribution, while
important, is AFAIK some much needed bug fixing and maintenance during
2014-2015.


On 25 February 2016 at 17:10, MichaelAtOz <oz.at.michael at gmail.com> wrote:

> Hmmm. Where to start.
>
> Firstly, if you haven't subscribed yet, Your post is still flagged as "This
> post has NOT been accepted by the mailing list yet", so nobody gets it
> unless they look.
> You need to subscribe to the  mailing list
> <http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
> and respond to the registration email.
>
> I'll quote the full OP below for those only on the mailing-list.
>
> "however that the openscad language is *not* NP-complete" - that do you
> mean
> by that?
>
> 'btw in the vein of "stark simplicity", i noticed that the latest version
> of openscad (which i couldn't use because of severe useability flaws
> in the frame-rate rendering, due to known bugs in libqt5) has a toolbar.
> PLEASE MAKE THIS OPTIONAL.' - View/Hide-Toolbars
>
> "my recommendation to you therefore would be to *CUT* the in-tool editor
> entirely." There are many types and levels of OpenSCAD users (and operating
> systems used). I don't think not having an editor would be helpful to many.
> IMO
>
> Others may have something to comment on below.
>
>
>
> lkcl wrote
> > hi folks,
> >
> > i just wanted to let you - especially the developers - know that i've
> been
> > using openscad (and something called pyopenscad) for the past fifteen
> > months to develop an extremely complex GPLv3+ project containing over
> > 35 separate parts: a libre 15.6in laptop.  the source code is currently
> > almost five THOUSAND lines long (excluding support libraries).
> >
> > to say that i am extremely grateful that openscad exists would be a
> > huge understatement.  i am a big fan of simplicity (zero cruft) and
> > high bang-per-buck ratio tools.  i tried mm3d once, and stopped
> > after manually adding 2,500 points by hand with a mouse.  that
> > experience was enough of a stark contrast to make me deeply
> > appreciate the power of parametric design.
> >
> > so after fifteen months of near-continuous use i have some insights
> > that i'd like to share with you.
> >
> > the key critical advantage of being able to use a text-based parametric
> > design i find is that i can use git revision control.  i recently needed
> > to
> > revert a modification involving magnetic catches in the lid, and it was
> > a simple matter of "git log | grep -10 magnet" to find out what i had
> > done, because i am regularly committing with descriptive comments for
> > exactly this purpose.
> >
> > the key critical advantage of using pyopenscad is however that the
> > openscad language is *not* NP-complete, and i can neither recommend
> > to the developers that they even *remotely* contemplate making the
> > openscad language NP-complete (why would you ever want to both
> > create and maintain an obscure programming language when there
> > exist perfectly good ones already?), nor, even if the openscad language
> > *were* made NP-complete would i ever consider using it directly.
> > the reason: python is a well-known, extremely comprehensive language
> > with object-orientated features.  i use it because it's easier to do so.
> >
> > now, in an earlier incarnation of my programming history i would have
> > advocated or suggested adding language bindings to openscad, but
> > honestly, i feel that the openscad language itself - when combined
> > with language translators (such as pyopenscad) is perfectly suited to
> > the task.  pyopenscad is "another tool based on the unix principle",
> > whilst openscad is likewise, and the same with python.
> >
> > ... why make openscad complex?  the moment you add language
> > bindings for python, the .NET developers will want one too.  and perl.
> > and everyone else, and that just opens the floodgates and you'll be
> > making language bindings forever instead of focussing on improving
> > openscad.
> >
> > btw in the vein of "stark simplicity", i noticed that the latest version
> > of openscad (which i couldn't use because of severe useability flaws
> > in the frame-rate rendering, due to known bugs in libqt5) has a toolbar.
> > PLEASE MAKE THIS OPTIONAL.  screen real-estate is critical to me,
> > and there is literally nothing on the toolbar that i need or will need...
> > EVER.  i use a single-key vim macro to run the python program that
> > auto-generates the openscad output; this in turn triggers openscad
> > to reload that output and automatically generate the render.  following
> > that, i can press F6, and if the CGAL looks good i can export to STL.
> >
> > there is ZERO need in this scenario for an in-tool editor (nothing beats
> > vim or emacs or the end-user's editor of choice: i'm curious to know
> > why openscad even has a built-in editor at all - it breaks the unix
> > principle "do one thing and do it well").  example: you're never going
> > to duplicate the vim "colour syntax highlighting" capabilities, and even
> > if you do they will never be as good (or as customisable) as vim. even
> > if you did duplicate the full set of vim "colour syntax highlighting"
> > which is so advantageous an aid to programming, you would now be
> > vim contributors... not openscad developers.  my recommendation to
> > you therefore would be to *CUT* the in-tool editor entirely.  make it
> > a completely separate program in order to keep people happy who
> > currently use it... but advise them that it has become a "non-maintained"
> > external tool that will be deprecated within the next 18-24 months.
> >
> > there is also zero need (except when there are CGAL "invalid manifold"
> > errors) for the console - i hide that.  likewise, i notice the addition
> > of a tree-view in the latest version.  whilst i can see its potential for
> > small-scale objects (especially if combined for example with object
> > highlighting, which i have to say would be *incredibly* useful even
> > and especially with massively-complex objects), again it is something
> > that, for the most part, just takes up screen real-estate.  so it too
> > is gone: off.
> >
> > basically i would be happy if there was literally no menu, that there
> > was pretty much a single window, and for accessing the menu the
> > only way to do so was by right-mouse context-menu.  given that
> > scroll-wheel equals the same functionality as middle-wheel
> > press-and-drag, and dual left-and-right button is the same as
> > left-button, there is room here to jig things around, move the entire
> > menu onto right-mouse button, and save some screen real-estate.
> > honestly, though, the size of the menus (and the status bar),
> > UNLIKE the new toolbar, are small enough in font size that they are
> > really no bother, and the change in UI expectations is a definite
> > barrier.  the new toolbar however, as it uses massively oversized
> > icons, HAS TO GO.  if i absolutely have to upgrade any time soon,
> > i will actually download the source, hack the toolbar OUT, and use
> > a modified self-maintained version, it's that serious an impediment
> > to useability.
> >
> > on the subject of focussing your efforts to make specialist "do one
> > thing and do it well" style improvements to the actual core function
> > of what openscad does, i would recommend looking up the reasons
> > why julia longtin *completely* reimplemented openscad in haskell.
> > the two key reasons are: to add an *automatic* "rounding corners"
> > feature to union and intersection (by way of a parameter).  this
> > extra parameter basically caused special (spherical at corners,
> > cylindrical at edges) "fuzzing" joins that save a vast amount of
> > futzing about, as well as make parts that properly fit together,
> > *and* make 3D-printing of parts come out without the usual
> > "blobbing" at corners.  3D print-heads do not turn right-angles
> > on a dime, so it is necessary to add "curvature".  julia made it
> > unnnbelievably simple to do that: add a cube to a union with
> > the "rounding" parameter set to exactly how much curvature you'd
> > like, and... job's done: the cube comes out with rounded edges
> > and corners.  this turns out to be *really* critical when doing
> > lostPLA aluminium casting [which is what julia's doing, and is the
> > whole reason why she rewrote openscad in haskell].
> >
> > second thing: when two objects are mathematically exactly lined up
> > and touching, openscad (actually probably libCGAL) sometimes
> > decides that the objects are separate, and sometimes decides that
> > they are *one* object.  the fact that there is indecision *is* itself
> > the problem.  it's critical that openscad decide to be one or the
> > other, not either.  honestly i feel that you should either generate
> > a compile error or decide to bite the bullet and fix this one (as it's
> > "core functionality").  forcing users to make their openscad
> > source code that much more complex - by forcing them to add in
> > "overlap" - isn't a nice thing to do to them!  even adding an extra
> > parameter to union and intersect etc. to say "these two objects
> > are definitely, definitely part of the same one object, ALTER THE
> > OBJECT to make ABSOLUTELY sure that's the case, or if you
> > genuinely can't programmatically work out what faces are actually
> > touching, to within a reasonable (and very very small) margin,
> > throw a compile error".
> >
> > personally i would set this parameter to default to "True" and i
> > would strongly recommend that it be set to "True" on union (etc.)
> > but even if you didn't, because i am using pyopenscad i could
> > get pyopenscad to auto-generate scad files that override
> > whatever default behaviour you chose.
> >
> > so, if this parameter was set on a union, openscad would go,
> > "hey, these two faces are pretty close (to within the
> > accuracy of floating-point precision) - let me just work out
> > the intersect space and EXTEND one of the objects INTO
> > the other AUTOMATICALLY for the user, so that they don't
> > have to do that themselves in a non-standard, tiresome,
> > laborious, code-complicating and code-untidy way".
> >
> > one last thing: i noted from discussions on debian bugs that there has
> > been a decision made to track the highly-unstable libqt5.  code has
> > been *specifically* added to take into account severe useability
> > flaws inherent in libqt5 that render openscad completely and
> > utterly unusable.  given that it was possible to simply recompile the
> > entire [latest] codebase to use libqt4, and a significant speed-increase
> > was noted when doing so (over the previous stable debian version
> > of openscad), i can only ask why the developers would effectively
> > poison the openscad codebase with fatally-flawed workarounds
> > to use completely-non-production-ready code from a *third party*?
> > surely it would make far more sense to make a bugreport to those
> > third party developers, and say "hey guys, libqt5 is just not ready
> > for production, we're not going to use it, here's a full detailed
> > report including repro-code instructions, go fix it, we'll use libqt5
> > *only* when it's ready".
> >
> > in essence, other people's problem code *isn't* your responsibility,
> > so why make life difficult for yourself and the sorts of end-users
> > who don't have the ability to compile or modify code [i say this
> > to deliberately exclude myself from this question, as i *can*
> > both modify and compile up code].
> >
> > that's basically it - i believe that's everything from the
> > [near-full-time]
> > use of openscad for the past 15 months.  you're welcome to listen
> > or not to anything i've said above: i am perfectly happy with the
> > setup that i have.  if you'd like to follow what i'm doing or take a
> > look at the results, details are here:
> >
> https://www.youmagine.com/designs/libre-hardware-licensed-parametric-laptop-design
> >
> > and, once things get up-and-running financially, i promise i'll make
> > sure you get some financial compensation.  like many software
> > libre developers who have done key strategic work and not been
> > in the slightest bit adequately financially rewarded, i recognise
> > keenly the importance of financially rewarding people for the
> > service that they provide... despite the fact that libre software
> > licenses *actively* prohibit the usual well-recognised method of
> > compensation: sale of goods/services.
> >
> > l.
>
>
>
>
>
> -----
> Admin - PM me if you need anything, or if I've done something stupid...
>
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; to the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work. Obviously
> inclusion of works of previous authors is not included in the above.
>
> The TPP is no simple ?trade agreement.?   Fight it!
> http://www.ourfairdeal.org/   time is running out!
> --
> View this message in context:
> http://forum.openscad.org/insights-for-openscad-and-pyopenscad-from-the-libre-15-6in-laptop-project-tp16150p16245.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160226/0c6bab3c/attachment.html>

From shnbwmn at gmail.com  Fri Feb 26 15:55:24 2016
From: shnbwmn at gmail.com (shnbwmn)
Date: Fri, 26 Feb 2016 13:55:24 -0700 (MST)
Subject: [OpenSCAD] Portability on Windows
Message-ID: <1456520124265-16258.post@n5.nabble.com>

Hi there.

OpenSCAD has two builds available for Win: installer and zip packages. The
zip packages write to the registry, which in turn makes portability on
different computers difficult. It also creates a folder in Documents. Is it
possible to make the application write to its own folder instead of the
registry, and to set the folder to be created in a user-defined location
(preferably with relative paths)? At the moment I use a custom  yaP
<http://rolandtoth.hu/yaP/>   config to achieve this, but it would be ideal
if the app itself was natively stealth.

Regards
Shane



--
View this message in context: http://forum.openscad.org/Portability-on-Windows-tp16258.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From stefan.gottsche at gmail.com  Sat Feb 27 03:35:53 2016
From: stefan.gottsche at gmail.com (=?UTF-8?Q?Stefan_G=c3=b6ttsche?=)
Date: Sat, 27 Feb 2016 09:35:53 +0100
Subject: [OpenSCAD] Is it possible to use shapes as variables? (cylinder
 question)
In-Reply-To: <bdd7ca97023018d9aae198c0d7fe699b@arnholm.org>
References: <1456306960659-16223.post@n5.nabble.com>
	<1456351013420-16227.post@n5.nabble.com> <56CE3022.5050807@arnholm.org>
	<CAEEmnrOt6MgTzTyxRU-93oZa+TvuEAeSxkgy9Qu_d85NbhJYRQ@mail.gmail.com>
	<56CEF935.5010106@gmail.com>
	<bdd7ca97023018d9aae198c0d7fe699b@arnholm.org>
Message-ID: <56D15FE9.9060900@gmail.com>

Yes, well that pretty much explains the model differences in the two 
previous examples.

On 25. feb. 2016 15:02, arnholm at arnholm.org wrote:
> On 2016-02-25 13:53, Stefan G?ttsche wrote:
>>
>> so I would have assumed that when writing cylinder(15,7); openSCAD
>> interprets the single r as r=r1=r2 and gives me a cylinder, 15 high, 7
>> in diameter?
>
> cylinder(15,7) in OpenSCAD is equivalent to cylinder(15,r1=7) which 
> will give you a cone with default r2=1. You can, however, write 
> cylinder(15,r=7) to get a proper cylinder (constant radius).
> What manual does not state here, although perhaps it should, is that to use
> alternates such as r, d, d1, d2 they must be named, as they are in the
> examples.
>
> In AngelScript CSG, cone and cylinder are distinct types, a cylinder 
> will always have constant radius:
>
> cylinder@ c1 = cylinder(15,7);  // a cylinder: h, r
> cone@ c2 = cone(15,7,1);    // a cone: h, r1, r2
>
> Carsten Arnholm
> http://arnholm.org/
>
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From johangjonker at zonnet.nl  Sat Feb 27 07:24:52 2016
From: johangjonker at zonnet.nl (Johan Jonker)
Date: Sat, 27 Feb 2016 05:24:52 -0700 (MST)
Subject: [OpenSCAD] ERROR: Recursion detected calling function 'pow'
In-Reply-To: <1456475645006-16253.post@n5.nabble.com>
References: <1456474603165-16252.post@n5.nabble.com>
	<1456475645006-16253.post@n5.nabble.com>
Message-ID: <1456575892987-16260.post@n5.nabble.com>

 
I think nothing special:



   xa  = h_table(l_base)+ chamber_backwards;
    dxa = (sin(p_beak_out_c)/sin(p_beak_outside))*h_tip;
    za  = l_base;
    //color("orange")show_marker_line(xa,0,za, 90,0,0);
    xb  = xa + l_tip_rail*tan(p_tip_c);
    zb  = l_base-l_tip_rail+chamber_upwards;
    //color("red")show_marker_line(xb,0,zb, 90,0,0);
    xc  = xb-l_baffle*tan(p_baffle_c);
    zc  = zb-l_baffle;
    //color("white")show_marker_line(xc,0,zc, 90,0,0);
    xf  = xc+tan(p_beak_in_c)*(za-zc);
    zf  = za;
    //color("yellow")show_marker_line(xf,0,zf, 90,0,0);
    xd  = xf-tan(p_beak_in_c)*l_window_r;
    zd  = za-l_window_r;
    //color("green")show_marker_line(xd,0,zd, 90,0,0);
    xh  = xa+dxa;
    zh  = l_base + dxa/sin(p_beak_out_c);
    //color("blue")show_marker_line(xh,0,zh, 90,0,0);
    xg  = xh+(zh - l_base + l_window_r)*tan(p_table);
    zg  = l_base-l_window_r;
    //color("purple")show_marker_line(xg,0,zg, 90,0,0);
    h   = cos(p_beak_in_c)* abs(xd-xg);
    xe  = xg - h* cos(p_beak_in_c);
    ze  = zg + h*sin(p_beak_in_c);
    //color("yellow")show_marker_line(xe,0,ze, 90,0,0);
    echo(h=h);
    r_bt = 100;      
    echo ("W", w_chamber_bore +
(ze-ze)/(zb-ze)*(w_window_tip-w_chamber_bore));
    echo ("W", w_chamber_bore +
(zb-ze)/(zb-ze)*(w_window_tip-w_chamber_bore));
    chxt = [ for (zz=[ze:1:zb]) ip3(zz,ze,zc,zb,xe,xc,xb)];
 (zz= [ze: 1: zb]) 60];                       // percentage van de z ten
bate van curved side
    echo (chzt);



--
View this message in context: http://forum.openscad.org/ERROR-Recursion-detected-calling-function-pow-tp16252p16260.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From johangjonker at zonnet.nl  Sat Feb 27 07:39:02 2016
From: johangjonker at zonnet.nl (Johan Jonker)
Date: Sat, 27 Feb 2016 05:39:02 -0700 (MST)
Subject: [OpenSCAD] ERROR: Recursion detected calling function 'pow'
In-Reply-To: <1456575892987-16260.post@n5.nabble.com>
References: <1456474603165-16252.post@n5.nabble.com>
	<1456475645006-16253.post@n5.nabble.com>
	<1456575892987-16260.post@n5.nabble.com>
Message-ID: <1456576742986-16261.post@n5.nabble.com>

Found it:

I tried to add new items in a wrong way:

   chzt = [for (zz= [ze: 1: zb]) zz];  
   chzt = [for (zz= [zb: 1: zd]) zz*2];  

Sorry for distrubing with this question.



--
View this message in context: http://forum.openscad.org/ERROR-Recursion-detected-calling-function-pow-tp16252p16261.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From james-witt at cox.net  Mon Feb 29 01:48:45 2016
From: james-witt at cox.net (JWW)
Date: Sun, 28 Feb 2016 23:48:45 -0700 (MST)
Subject: [OpenSCAD] Line up pin missing on mold
Message-ID: <1456728525432-16262.post@n5.nabble.com>

I was hoping that someone here can identify why one of the lineup pins is
missing on my mold and how to solve the problem? 

<http://forum.openscad.org/file/n16262/JasonWebb2016-02-28_23-03-40.jpg> 



--
View this message in context: http://forum.openscad.org/Line-up-pin-missing-on-mold-tp16262.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Mon Feb 29 02:45:18 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Mon, 29 Feb 2016 00:45:18 -0700 (MST)
Subject: [OpenSCAD] Line up pin missing on mold
In-Reply-To: <1456728525432-16262.post@n5.nabble.com>
References: <1456728525432-16262.post@n5.nabble.com>
Message-ID: <1456731918977-16263.post@n5.nabble.com>

I suspect the import()ed STL has issues, check it with Netfabb Basic.



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Line-up-pin-missing-on-mold-tp16262p16263.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From stempeldergeschichte at googlemail.com  Mon Feb 29 12:33:22 2016
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Mon, 29 Feb 2016 18:33:22 +0100
Subject: [OpenSCAD] Line up pin missing on mold
In-Reply-To: <1456731918977-16263.post@n5.nabble.com>
References: <1456728525432-16262.post@n5.nabble.com>
	<1456731918977-16263.post@n5.nabble.com>
Message-ID: <CAJgOqADAc83wGrWPqiNaeZ9XLk-_JvDRTeQAuKfmrH9t+FbHZA@mail.gmail.com>

Sometimes the parts are not there where on expexts them to be.
To test this you can use the % and/or the # operator:

difference(){
    %cube(10);
    translate([0,0,5])#sphere(3);
}

2016-02-29 8:45 GMT+01:00 MichaelAtOz <oz.at.michael at gmail.com>:

> I suspect the import()ed STL has issues, check it with Netfabb Basic.
>
>
>
> -----
> Admin - PM me if you need anything, or if I've done something stupid...
>
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; to the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work. Obviously
> inclusion of works of previous authors is not included in the above.
>
> The TPP is no simple ?trade agreement.?   Fight it!
> http://www.ourfairdeal.org/   time is running out!
> --
> View this message in context:
> http://forum.openscad.org/Line-up-pin-missing-on-mold-tp16262p16263.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160229/74086c10/attachment.html>

From oz.at.michael at gmail.com  Mon Feb 29 17:06:48 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Mon, 29 Feb 2016 15:06:48 -0700 (MST)
Subject: [OpenSCAD] Interesting development
Message-ID: <1456783608047-16265.post@n5.nabble.com>

http://www.thingiverse.com/thing:1378681




-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Interesting-development-tp16265.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


