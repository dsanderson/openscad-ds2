From marius at kintel.net  Sun Nov  1 12:46:14 2015
From: marius at kintel.net (kintel)
Date: Sun, 1 Nov 2015 10:46:14 -0700 (MST)
Subject: [OpenSCAD] Running on OSX 10.11 El Capitan
In-Reply-To: <1446398719735-14257.post@n5.nabble.com>
References: <1446398719735-14257.post@n5.nabble.com>
Message-ID: <1446399974277-14258.post@n5.nabble.com>

To my understanding OpenGL is not running on top of Metal. Metal is just an
alternative API, so introducing Metal shouldn't have any effect on OpenGL
performance.

 -Marius



--
View this message in context: http://forum.openscad.org/Running-on-OSX-10-11-El-Capitan-tp14257p14258.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From glennswest at neuralcloudcomputing.com  Sun Nov  1 05:38:45 2015
From: glennswest at neuralcloudcomputing.com (Glenn West)
Date: Sun, 1 Nov 2015 18:38:45 +0800
Subject: [OpenSCAD] Access violation on starting OpenSCAD (Win8)
In-Reply-To: <1445734059737-14204.post@n5.nabble.com>
References: <1445729623139-14201.post@n5.nabble.com>
	<1445734059737-14204.post@n5.nabble.com>
Message-ID: <CAONgR55Fx=PgeL_B9dBMsFmKiCmkTyhFq_cpF2OO=tFXNC2E0A@mail.gmail.com>

px to inch.

I just created my first part for CNC, using openscad, been using it for 3d
printing for a long time.
To get accurage parts using a openscad->svg->jscut->chillipeppr I found I
needed to set a px to inch in
jscut to a magic number of 26.74 which is a very different value.

Is this settable somewhere in openscad?

https://github.com/glennswest/metalcar.git



CNC Workflow:
    Create part in openscad - Finish with a projection, and export to svg
    open JScut in your web browser (http://jscut.org)
    Setup your tool sizes (I use a 1mm bit)
    Setup your PX to Inch to 26.74
    Setup how thick you want to cut (6mm for dibond for me)
    Select the object
    Generate a outside cut
    Save to ChilliPeppr via gdrive
    Switch to http://chilipeppr.com/tinyg
    Load the gcode using the jscut via gdrive
    Preview to make sure it looks right
    Start Cutting

On Sun, Oct 25, 2015 at 8:47 AM, MichaelAtOz <oz.at.michael at gmail.com>
wrote:

> Hi, welcome to the forum.
>
> You need to complete the mailing list registration too,  here.
> <http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>
>
> Re your issue, have you tried the  Dev snapshot binaries
> <http://www.openscad.org/downloads.html#snapshots>  ?
>
>
>
>
>
> -----
> Newly minted Admin - PM me if you need anything, or if I've done something
> stupid...
>
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; to the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work. Obviously
> inclusion of works of previous authors is not included in the above.
>
> The TPP is no simple ?trade agreement.?   Fight it!
> http://www.ourfairdeal.org/   time is running out!
> --
> View this message in context:
> http://forum.openscad.org/Access-violation-on-starting-OpenSCAD-Win8-tp14201p14204.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151101/a6da6125/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: jscut-settings.png
Type: image/png
Size: 349284 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151101/a6da6125/attachment-0001.png>

From oz.at.michael at gmail.com  Sun Nov  1 22:18:17 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sun, 1 Nov 2015 20:18:17 -0700 (MST)
Subject: [OpenSCAD] make an object hollow with constant wall thickness
In-Reply-To: <1446409630711-14259.post@n5.nabble.com>
References: <1446377779240-14255.post@n5.nabble.com>
	<1446409630711-14259.post@n5.nabble.com>
Message-ID: <1446434297607-14261.post@n5.nabble.com>

Hi, Welcome to the forum.

Your posts are flagged "This post has NOT been accepted by the mailing list
yet. " you need to subscribe to the mailing list too, see  here
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  .



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/make-an-object-hollow-with-constant-wall-thickness-tp14255p14261.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Mon Nov  2 06:41:42 2015
From: nop.head at gmail.com (nop head)
Date: Mon, 2 Nov 2015 11:41:42 +0000
Subject: [OpenSCAD] Access violation on starting OpenSCAD (Win8)
In-Reply-To: <CAONgR55Fx=PgeL_B9dBMsFmKiCmkTyhFq_cpF2OO=tFXNC2E0A@mail.gmail.com>
References: <1445729623139-14201.post@n5.nabble.com>
	<1445734059737-14204.post@n5.nabble.com>
	<CAONgR55Fx=PgeL_B9dBMsFmKiCmkTyhFq_cpF2OO=tFXNC2E0A@mail.gmail.com>
Message-ID: <CAEEmnrPxbAb=N9wKQhzMtLpHw_Cuz+J4CSPo6i2gQZxfhff-+A@mail.gmail.com>

I export DXF from OpenScad and use PyCam to make gcode tool paths. It all
works in mm, so no conversion factors needed.

On 1 November 2015 at 10:38, Glenn West <glennswest at neuralcloudcomputing.com
> wrote:

> px to inch.
>
> I just created my first part for CNC, using openscad, been using it for 3d
> printing for a long time.
> To get accurage parts using a openscad->svg->jscut->chillipeppr I found I
> needed to set a px to inch in
> jscut to a magic number of 26.74 which is a very different value.
>
> Is this settable somewhere in openscad?
>
> https://github.com/glennswest/metalcar.git
>
>
>
> CNC Workflow:
>     Create part in openscad - Finish with a projection, and export to svg
>     open JScut in your web browser (http://jscut.org)
>     Setup your tool sizes (I use a 1mm bit)
>     Setup your PX to Inch to 26.74
>     Setup how thick you want to cut (6mm for dibond for me)
>     Select the object
>     Generate a outside cut
>     Save to ChilliPeppr via gdrive
>     Switch to http://chilipeppr.com/tinyg
>     Load the gcode using the jscut via gdrive
>     Preview to make sure it looks right
>     Start Cutting
>
> On Sun, Oct 25, 2015 at 8:47 AM, MichaelAtOz <oz.at.michael at gmail.com>
> wrote:
>
>> Hi, welcome to the forum.
>>
>> You need to complete the mailing list registration too,  here.
>> <http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>
>>
>> Re your issue, have you tried the  Dev snapshot binaries
>> <http://www.openscad.org/downloads.html#snapshots>  ?
>>
>>
>>
>>
>>
>> -----
>> Newly minted Admin - PM me if you need anything, or if I've done
>> something stupid...
>>
>> Unless specifically shown otherwise above, my contribution is in the
>> Public Domain; to the extent possible under law, I have waived all
>> copyright and related or neighbouring rights to this work. Obviously
>> inclusion of works of previous authors is not included in the above.
>>
>> The TPP is no simple ?trade agreement.?   Fight it!
>> http://www.ourfairdeal.org/   time is running out!
>> --
>> View this message in context:
>> http://forum.openscad.org/Access-violation-on-starting-OpenSCAD-Win8-tp14201p14204.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151102/c10dc8a9/attachment.html>

From stempeldergeschichte at googlemail.com  Mon Nov  2 13:22:56 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Mon, 2 Nov 2015 19:22:56 +0100
Subject: [OpenSCAD] make an object hollow with constant wall thickness
In-Reply-To: <1446434297607-14261.post@n5.nabble.com>
References: <1446377779240-14255.post@n5.nabble.com>
	<1446409630711-14259.post@n5.nabble.com>
	<1446434297607-14261.post@n5.nabble.com>
Message-ID: <CAJgOqABwhjRmu+GdWayR7wnvJQ+MJaFW7h181T3ovM1AqhDyfA@mail.gmail.com>

The best (fastest) way is to include the wall thickness already into
MyObject():

module MyObject() {
    $fn=12;
    union() {
        sphere(10-Wall);
        translate([15,0,0]) sphere(10-Wall);
        cube([3-2*Wall,30-2*Wall,6-2*Wall],center=true);
    }
}

2015-11-02 4:18 GMT+01:00 MichaelAtOz <oz.at.michael at gmail.com>:

> Hi, Welcome to the forum.
>
> Your posts are flagged "This post has NOT been accepted by the mailing list
> yet. " you need to subscribe to the mailing list too, see  here
> <http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  .
>
>
>
> -----
> Newly minted Admin - PM me if you need anything, or if I've done something
> stupid...
>
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; to the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work. Obviously
> inclusion of works of previous authors is not included in the above.
>
> The TPP is no simple ?trade agreement.?   Fight it!
> http://www.ourfairdeal.org/   time is running out!
> --
> View this message in context:
> http://forum.openscad.org/make-an-object-hollow-with-constant-wall-thickness-tp14255p14261.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151102/00ea11da/attachment.html>

From stempeldergeschichte at googlemail.com  Mon Nov  2 13:27:12 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Mon, 2 Nov 2015 19:27:12 +0100
Subject: [OpenSCAD] make an object hollow with constant wall thickness
In-Reply-To: <CAJgOqABwhjRmu+GdWayR7wnvJQ+MJaFW7h181T3ovM1AqhDyfA@mail.gmail.com>
References: <1446377779240-14255.post@n5.nabble.com>
	<1446409630711-14259.post@n5.nabble.com>
	<1446434297607-14261.post@n5.nabble.com>
	<CAJgOqABwhjRmu+GdWayR7wnvJQ+MJaFW7h181T3ovM1AqhDyfA@mail.gmail.com>
Message-ID: <CAJgOqABNom-Rcpr0POmDzMv=3cWr7ijDYaqrm0kXWuKXo9=T9g@mail.gmail.com>

It gets a little faster if you dont use a cube  (cube(2*Wall,center=true);)
for the minkowski(), but a 3 sided pyramid (tetrahedral), as it has less
vertices.


2015-11-02 19:22 GMT+01:00 Peter Falke <stempeldergeschichte at googlemail.com>
:

> The best (fastest) way is to include the wall thickness already into
> MyObject():
>
> module MyObject() {
>     $fn=12;
>     union() {
>         sphere(10-Wall);
>         translate([15,0,0]) sphere(10-Wall);
>         cube([3-2*Wall,30-2*Wall,6-2*Wall],center=true);
>
>     }
> }
>
> 2015-11-02 4:18 GMT+01:00 MichaelAtOz <oz.at.michael at gmail.com>:
>
>> Hi, Welcome to the forum.
>>
>> Your posts are flagged "This post has NOT been accepted by the mailing
>> list
>> yet. " you need to subscribe to the mailing list too, see  here
>> <http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>
>> .
>>
>>
>>
>> -----
>> Newly minted Admin - PM me if you need anything, or if I've done
>> something stupid...
>>
>> Unless specifically shown otherwise above, my contribution is in the
>> Public Domain; to the extent possible under law, I have waived all
>> copyright and related or neighbouring rights to this work. Obviously
>> inclusion of works of previous authors is not included in the above.
>>
>> The TPP is no simple ?trade agreement.?   Fight it!
>> http://www.ourfairdeal.org/   time is running out!
>> --
>> View this message in context:
>> http://forum.openscad.org/make-an-object-hollow-with-constant-wall-thickness-tp14255p14261.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151102/44db844e/attachment.html>

From andrew at plumb.org  Mon Nov  2 14:31:20 2015
From: andrew at plumb.org (clothbot)
Date: Mon, 2 Nov 2015 12:31:20 -0700 (MST)
Subject: [OpenSCAD] make an object hollow with constant wall thickness
In-Reply-To: <1446377779240-14255.post@n5.nabble.com>
References: <1446377779240-14255.post@n5.nabble.com>
Message-ID: <1446492680415-14270.post@n5.nabble.com>

If you don't care as much about the inner geometry and precision of the wall
thickness, and want something that runs reasonably quickly, you can do
something like this old "shell_3d()" module I came up with:

https://github.com/clothbot/makerbot/blob/master/fabjects/libraries/constructors/shell_3d.scad

It's basically a union of shifted-difference operations.  Handy if you want
to be asymmetric in your thicknesses, e.g. thicker top relative to bottom
and sides to allow for more 3d-printed internal self-supporting structure.

Andrew.




--
View this message in context: http://forum.openscad.org/make-an-object-hollow-with-constant-wall-thickness-tp14255p14270.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From lboyd at frontiernet.net  Mon Nov  2 16:00:30 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Mon, 2 Nov 2015 14:00:30 -0700 (MST)
Subject: [OpenSCAD] User manual order
Message-ID: <1446498030103-14271.post@n5.nabble.com>

Although less important with the cheat sheet, this is my 1st pass at,
hopefully, a more logical order.

The biggest change is separating the language reference from the rest

Link on this trial page are not active.

Trial_Reorder
<https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Trial_Reorder>  

Please post your comments



--
View this message in context: http://forum.openscad.org/User-manual-order-tp14271.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Mon Nov  2 16:45:07 2015
From: doug at moens.org (doug moen)
Date: Mon, 2 Nov 2015 16:45:07 -0500
Subject: [OpenSCAD] User manual order
In-Reply-To: <1446498030103-14271.post@n5.nabble.com>
References: <1446498030103-14271.post@n5.nabble.com>
Message-ID: <CAGV6i+NQGKMwEhYsL73iQBgJgCxqPaUb4Cy4g_a=s9rP-SWzDA@mail.gmail.com>

Overall, I think it is a big improvement to put the entire language
reference manual into a single node.

A small issue: the "Export as STL" command is in the GUI and CLI, it is not
part of the language, so shouldn't be in the language reference manual. See
section 8.5 of your reordered language reference manual.

On 2 November 2015 at 16:00, L Boyd <lboyd at frontiernet.net> wrote:

> Although less important with the cheat sheet, this is my 1st pass at,
> hopefully, a more logical order.
>
> The biggest change is separating the language reference from the rest
>
> Link on this trial page are not active.
>
> Trial_Reorder
> <https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Trial_Reorder>
>
> Please post your comments
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/User-manual-order-tp14271.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151102/d8563a11/attachment.html>

From lboyd at frontiernet.net  Mon Nov  2 17:40:43 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Mon, 2 Nov 2015 15:40:43 -0700 (MST)
Subject: [OpenSCAD] User manual order
In-Reply-To: <CAGV6i+NQGKMwEhYsL73iQBgJgCxqPaUb4Cy4g_a=s9rP-SWzDA@mail.gmail.com>
References: <1446498030103-14271.post@n5.nabble.com>
	<CAGV6i+NQGKMwEhYsL73iQBgJgCxqPaUb4Cy4g_a=s9rP-SWzDA@mail.gmail.com>
Message-ID: <1446504043553-14273.post@n5.nabble.com>

Was not sure about export and import.
Thanks for the feedback



--
View this message in context: http://forum.openscad.org/User-manual-order-tp14271p14273.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Tue Nov  3 06:13:38 2015
From: mschafer at wireframe.biz (Neon22)
Date: Tue, 3 Nov 2015 04:13:38 -0700 (MST)
Subject: [OpenSCAD] User manual order
In-Reply-To: <1446504043553-14273.post@n5.nabble.com>
References: <1446498030103-14271.post@n5.nabble.com>
	<CAGV6i+NQGKMwEhYsL73iQBgJgCxqPaUb4Cy4g_a=s9rP-SWzDA@mail.gmail.com>
	<1446504043553-14273.post@n5.nabble.com>
Message-ID: <1446549218519-14274.post@n5.nabble.com>

Looks really good.
(How about rename Include to "Include and Use Statements")




--
View this message in context: http://forum.openscad.org/User-manual-order-tp14271p14274.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From peter.ragosch at kabelmail.de  Tue Nov  3 12:49:51 2015
From: peter.ragosch at kabelmail.de (Peter Ragosch)
Date: Tue, 3 Nov 2015 18:49:51 +0100
Subject: [OpenSCAD] User manual order
In-Reply-To: <1446549218519-14274.post@n5.nabble.com>
References: <1446498030103-14271.post@n5.nabble.com>
	<CAGV6i+NQGKMwEhYsL73iQBgJgCxqPaUb4Cy4g_a=s9rP-SWzDA@mail.gmail.com>
	<1446504043553-14273.post@n5.nabble.com>
	<1446549218519-14274.post@n5.nabble.com>
Message-ID: <20151103184951.54ad5402@raven.ragdomain.top>

Am Tue, 3 Nov 2015 04:13:38 -0700 (MST)
schrieb Neon22 <mschafer at wireframe.biz>:

> Looks really good.
> (How about rename Include to "Include and Use Statements")
> 
> 
> 
> 
> --
> View this message in context:
> http://forum.openscad.org/User-manual-order-tp14271p14274.html Sent
> from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> 

"Include and Use Statements" sounds good.


In the headings there are no commands used, except "import_dxf" - why
not useing "DXF Import" 


My two cent ;)
-- 
Mit freundlichen Gr??en
Kind Regards

Peter Ragosch



From vo.publique at gmail.com  Tue Nov  3 15:22:08 2015
From: vo.publique at gmail.com (vicnet)
Date: Tue, 3 Nov 2015 13:22:08 -0700 (MST)
Subject: [OpenSCAD] 3d hull() with 2d primitives needed!
In-Reply-To: <1446026881276-14237.post@n5.nabble.com>
References: <1383590090426-5845.post@n5.nabble.com>
	<D80ECFB3-24AF-4A4F-B39B-009595FDB777@kintel.net>
	<1446026175698-14235.post@n5.nabble.com>
	<1446026881276-14237.post@n5.nabble.com>
Message-ID: <1446582128351-14276.post@n5.nabble.com>

I check the code and currently, only 2d vector is used for hull if the first
children is a 2D primitive, even if the 2D primitive is transform and not
more in XY plane.
For example:

The second circle is no more in XY plane.
It has 3D coordinates (display is fine) but only [x,y] is used, like a
projection, in hull.
Why ?

A 2D primitive that is no more in XY plane should be used as a 3D in hull or
other built-in modules.

You could also use linerar_extrude(0.1) <2D primitive>(...) to get a thin 3D
object from 2D primitive.

Rq: projection(cut = false) rotate([45,0,0]) circle2(5); do nothing

a+
Vicnet




--
View this message in context: http://forum.openscad.org/3d-hull-with-2d-primitives-needed-tp5845p14276.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Tue Nov  3 21:51:39 2015
From: c.t.chin at szu.edu.cn (=?UTF-8?B?Q0hJTiwgQ2hpZW4gVGluZyDpkrHlu7rluq0=?=)
Date: Wed, 4 Nov 2015 10:51:39 +0800
Subject: [OpenSCAD] User manual order
In-Reply-To: <1446498030103-14271.post@n5.nabble.com>
References: <1446498030103-14271.post@n5.nabble.com>
Message-ID: <563972BB.8010008@szu.edu.cn>

Dear All,

My first post!  Hopefully many more will come.

I salute you for taking on this important and monumental task.  The 
current doc is just functional enough but far from professional 
quality.  I too have started making my own "book"  with a faintest hope 
of writing and publishing an actual book. When I use OpenSCAD, I like to 
have a "dead-tree version" by my keyboard.  And I can imagine a lot of 
users would similarly desired a nicely-printed book.

But alas, I discipline myself NOT to spend time on my "book" because I 
should put my time on more "important" things.

So perhaps my best hope to air my views (some might be considered 
radical) and perhaps trick you into writing the book that I want to 
have, but may not want to write :P

Firstly, I am mystified why there's such a thing as 2D __subsystem__.  I 
use both 2D and 3D primitives and transformations frequently and I find 
no sense in talking about a subsystem.  It makes no sense as the same as 
talking about a vector subsystem or string subsystem. It is very 
confusing because "offset" which operates on 2D isn't found in the 2D 
subsystem chapter but in the Transformation chapter/section.  Similarly 
it's arbitrary to put projection in 3D and extrusions in 2D.

I propose merging all primitives in one chapter, first listing all the 
solids: cube, sphere etc, then list the 2D shapes, square, circle and 
polygon.  A short section preceding the primitives should clearly 
explain 2D and 3D objects and preview a few commands (to be covered 
later) that transform between 2D and 3D objects.

Then after primitives, all transformations should be covered.  Each 
should be clearly labelled to work on 3D objects, 2D objects or both.  
It is easy to create a module that operates on a mix of 2D and 3D 
children.  It makes no sense to divide projection, extrusions and 
"common" transformation (e.g. rotate) into three different sections.

Now, for a radical idea: treat "for", "intersection_for",  "if" as 
transformations.

I have more radical ideas/views, but enough for today: just expunge 
"subsystem" and treat "for" as a transformation.

Hope I am stirring the pot in a positive way.


On 11/3/2015 5:00 AM, L Boyd wrote:
> Although less important with the cheat sheet, this is my 1st pass at,
> hopefully, a more logical order.
>
> The biggest change is separating the language reference from the rest
>
> Link on this trial page are not active.
>
> Trial_Reorder
> <https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Trial_Reorder>
>
> Please post your comments
>
>
>
> --
> View this message in context: http://forum.openscad.org/User-manual-order-tp14271.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

-- 
??? ?????????
???? ???????

CHIN, Chien Ting, Professor, Vice Chairman (Education)
Department of Biomedical Engineering
Shenzhen University
Tel: +86-755-8667-1915




From sukritgg at gmail.com  Thu Nov  5 14:37:44 2015
From: sukritgg at gmail.com (sukrit_gupta)
Date: Thu, 5 Nov 2015 12:37:44 -0700 (MST)
Subject: [OpenSCAD] Non valid 2-manifold warning
In-Reply-To: <1421416215739-11053.post@n5.nabble.com>
References: <1421330360191-11049.post@n5.nabble.com>
	<1421416215739-11053.post@n5.nabble.com>
Message-ID: <1446752264062-14278.post@n5.nabble.com>

I also feel that Warning message should always be there, or log that, as
other member said.



--
View this message in context: http://forum.openscad.org/Non-valid-2-manifold-warning-tp11049p14278.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jdawgaz at gmail.com  Thu Nov  5 15:25:09 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Thu, 5 Nov 2015 13:25:09 -0700
Subject: [OpenSCAD] User manual order
In-Reply-To: <563972BB.8010008@szu.edu.cn>
References: <1446498030103-14271.post@n5.nabble.com>
	<563972BB.8010008@szu.edu.cn>
Message-ID: <CAMyDR6JyJXarZptjzChZckgK3c8hVEmCtzkohtvQCgGQaPSxfQ@mail.gmail.com>

In addition to the reorder and Chien TIng's nice post.

I have been teaching openscad to some members of my Amateur Radio Club.
Most have not come from ANY programming type background, and are having
trouble.
I have retired from doing programming for 40+ years.

A lot of this is over their heads, but they want to learn.

In the first steps section, I would like to see a detailed tutorial on
building some simple part. The steps taken, and why, and what each little
step looks like when previewed.

Then you could maybe link out to some youtube, and other links that you
know of that are "tutorials" or how to's.

I am not sure that everyone coming to openscad has a programming
background. Having done scripting for years it is easy for me to KNOW that
for every ( you must have a corresponding ), and for every {, a }. But I
know there are some people that wonder why at just those simple things.

I would be willing to help in this regard, if asked. Being retired, I DO
have the time.

Jerry


--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson

On Tue, Nov 3, 2015 at 7:51 PM, CHIN, Chien Ting ??? <c.t.chin at szu.edu.cn>
wrote:

> Dear All,
>
> My first post!  Hopefully many more will come.
>
> I salute you for taking on this important and monumental task.  The
> current doc is just functional enough but far from professional quality.  I
> too have started making my own "book"  with a faintest hope of writing and
> publishing an actual book. When I use OpenSCAD, I like to have a "dead-tree
> version" by my keyboard.  And I can imagine a lot of users would similarly
> desired a nicely-printed book.
>
> But alas, I discipline myself NOT to spend time on my "book" because I
> should put my time on more "important" things.
>
> So perhaps my best hope to air my views (some might be considered radical)
> and perhaps trick you into writing the book that I want to have, but may
> not want to write :P
>
> Firstly, I am mystified why there's such a thing as 2D __subsystem__.  I
> use both 2D and 3D primitives and transformations frequently and I find no
> sense in talking about a subsystem.  It makes no sense as the same as
> talking about a vector subsystem or string subsystem. It is very confusing
> because "offset" which operates on 2D isn't found in the 2D subsystem
> chapter but in the Transformation chapter/section.  Similarly it's
> arbitrary to put projection in 3D and extrusions in 2D.
>
> I propose merging all primitives in one chapter, first listing all the
> solids: cube, sphere etc, then list the 2D shapes, square, circle and
> polygon.  A short section preceding the primitives should clearly explain
> 2D and 3D objects and preview a few commands (to be covered later) that
> transform between 2D and 3D objects.
>
> Then after primitives, all transformations should be covered.  Each should
> be clearly labelled to work on 3D objects, 2D objects or both.  It is easy
> to create a module that operates on a mix of 2D and 3D children.  It makes
> no sense to divide projection, extrusions and "common" transformation (e.g.
> rotate) into three different sections.
>
> Now, for a radical idea: treat "for", "intersection_for",  "if" as
> transformations.
>
> I have more radical ideas/views, but enough for today: just expunge
> "subsystem" and treat "for" as a transformation.
>
> Hope I am stirring the pot in a positive way.
>
>
>
> On 11/3/2015 5:00 AM, L Boyd wrote:
>
>> Although less important with the cheat sheet, this is my 1st pass at,
>> hopefully, a more logical order.
>>
>> The biggest change is separating the language reference from the rest
>>
>> Link on this trial page are not active.
>>
>> Trial_Reorder
>> <https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Trial_Reorder>
>>
>> Please post your comments
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/User-manual-order-tp14271.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
> --
> ??? ?????????
> ???? ???????
>
> CHIN, Chien Ting, Professor, Vice Chairman (Education)
> Department of Biomedical Engineering
> Shenzhen University
> Tel: +86-755-8667-1915
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151105/75f74f10/attachment.html>

From lboyd at frontiernet.net  Thu Nov  5 16:29:43 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Thu, 5 Nov 2015 14:29:43 -0700 (MST)
Subject: [OpenSCAD] User manual order
In-Reply-To: <CAMyDR6JyJXarZptjzChZckgK3c8hVEmCtzkohtvQCgGQaPSxfQ@mail.gmail.com>
References: <1446498030103-14271.post@n5.nabble.com>
	<563972BB.8010008@szu.edu.cn>
	<CAMyDR6JyJXarZptjzChZckgK3c8hVEmCtzkohtvQCgGQaPSxfQ@mail.gmail.com>
Message-ID: <1446758983018-14280.post@n5.nabble.com>

First of all, I am not rewriting the OpenSCAD manual.  The existing manual
consists of many files, each of which describe a small portion of the total
picture.  There is a list ( 3 actually ) of these files, which allow a user
to access these various portions.
The task, which I have assigned myself, is to reorder these lists in a more
logical fashion, hopefully making things easier to find. Reordering these
lists does not entail changing the contents of the the various files pointed
to in the list.

There have been some excellent suggestions about content. I would encourage
each of you, just as others have encouraged me, to dig in and make your
changes. 
 



--
View this message in context: http://forum.openscad.org/User-manual-order-tp14271p14280.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From lboyd at frontiernet.net  Fri Nov  6 11:17:49 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Fri, 6 Nov 2015 09:17:49 -0700 (MST)
Subject: [OpenSCAD] Import
Message-ID: <1446826669883-14281.post@n5.nabble.com>

OpenSCAD can now export STL, OFF, AMF, DXF, SVG, CSG and PNG (image).

How many of these can it import?
Can it tell, from the file contents, which it is?



--
View this message in context: http://forum.openscad.org/Import-tp14281.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Fri Nov  6 11:49:21 2015
From: marius at kintel.net (Marius Kintel)
Date: Fri, 6 Nov 2015 11:49:21 -0500
Subject: [OpenSCAD] Import
In-Reply-To: <1446826669883-14281.post@n5.nabble.com>
References: <1446826669883-14281.post@n5.nabble.com>
Message-ID: <4E566F28-F9E7-4DD6-9E0F-5AFA8814663E@kintel.net>

> On Nov 6, 2015, at 11:17 AM, L Boyd <lboyd at frontiernet.net> wrote:
> 
> OpenSCAD can now export STL, OFF, AMF, DXF, SVG, CSG and PNG (image).
> 
STL, OFF and DXF are imported using import().
CSG can be imported using include<> 
PNG can be imported using surface()
We have open pull requests for SVG and AMF, which require a bit more work/testing.

We require a valid file suffix to determine type, but that?s possible to improve.

 -Marius



From sukritgg at gmail.com  Fri Nov  6 12:44:15 2015
From: sukritgg at gmail.com (sukrit_gupta)
Date: Fri, 6 Nov 2015 10:44:15 -0700 (MST)
Subject: [OpenSCAD] Polyhedron and cube: Not a Valid 2-Manifold
Message-ID: <1446831855101-14283.post@n5.nabble.com>

Can anyone suggest how to make the below model render without showing a
"WARNING: Object may not be a valid 2-manifold and may need repair! "
https://drive.google.com/uc?export=download&id=0Bxg0L-sj9zVtQUlNWVhoS2oxRzQ
p1 = [10,10,0];
p2 = [10,-10,0];
p3 = [-10,-10,0];
p4 = [-10,10,0];
p5 = [ 0,  0,10];

polyhedron(
points = [ p1, p2, p3, p4, p5], 
faces = [ 
[0,1,4], [1,2,4], [2,3,4], [3,0,4], 
//[0,1,2], [0,2,3] ,
//[0,1,2,3]
]);
translate([0,0,-2.5])
cube([20,20,5], true);

I've tried increasing or decreasing the size of cube().
Without the bottom cube, no warning is shown, but once I add the below cube,
I get the warning.





--
View this message in context: http://forum.openscad.org/Polyhedron-and-cube-Not-a-Valid-2-Manifold-tp14283.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Fri Nov  6 12:59:35 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Fri, 06 Nov 2015 18:59:35 +0100
Subject: [OpenSCAD] Polyhedron and cube: Not a Valid 2-Manifold
In-Reply-To: <1446831855101-14283.post@n5.nabble.com>
References: <1446831855101-14283.post@n5.nabble.com>
Message-ID: <563CEA87.7060004@gmx.de>

Hi!

On 11/06/2015 06:44 PM, sukrit_gupta wrote:
> polyhedron(
> points = [ p1, p2, p3, p4, p5], 
> faces = [ 
> [0,1,4], [1,2,4], [2,3,4], [3,0,4], 
> //[0,1,2], [0,2,3] ,
> //[0,1,2,3]
> ]);
>
That polyhedron must be a solid object too, you can't just leave off
the bottom and close it with the cube.

ciao,
  Torsten.




From runsun at gmail.com  Fri Nov  6 13:02:59 2015
From: runsun at gmail.com (runsun)
Date: Fri, 6 Nov 2015 11:02:59 -0700 (MST)
Subject: [OpenSCAD] Polyhedron and cube: Not a Valid 2-Manifold
In-Reply-To: <1446831855101-14283.post@n5.nabble.com>
References: <1446831855101-14283.post@n5.nabble.com>
Message-ID: <1446832979660-14285.post@n5.nabble.com>

Try adding [0,3,2,1] to faces. 



-----

$  Runsun Pan, PhD 

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );

 $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif 






--
View this message in context: http://forum.openscad.org/Polyhedron-and-cube-Not-a-Valid-2-Manifold-tp14283p14285.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From sukritgg at gmail.com  Fri Nov  6 13:11:32 2015
From: sukritgg at gmail.com (sukrit_gupta)
Date: Fri, 6 Nov 2015 11:11:32 -0700 (MST)
Subject: [OpenSCAD] Polyhedron and cube: Not a Valid 2-Manifold
In-Reply-To: <1446832979660-14285.post@n5.nabble.com>
References: <1446831855101-14283.post@n5.nabble.com>
	<1446832979660-14285.post@n5.nabble.com>
Message-ID: <1446833492521-14286.post@n5.nabble.com>

runsun wrote
> Try adding [0,3,2,1] to faces.

Thanks.
It resulted in a correct rendering and no warning.
Can you share any tip, in general, that may help us in finding the "cause"
behind this error.



--
View this message in context: http://forum.openscad.org/Polyhedron-and-cube-Not-a-Valid-2-Manifold-tp14283p14286.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Fri Nov  6 13:31:53 2015
From: mschafer at wireframe.biz (Neon22)
Date: Fri, 6 Nov 2015 11:31:53 -0700 (MST)
Subject: [OpenSCAD] Polyhedron and cube: Not a Valid 2-Manifold
In-Reply-To: <1446833492521-14286.post@n5.nabble.com>
References: <1446831855101-14283.post@n5.nabble.com>
	<1446832979660-14285.post@n5.nabble.com>
	<1446833492521-14286.post@n5.nabble.com>
Message-ID: <1446834713815-14287.post@n5.nabble.com>

The term 'solid' means what it says. A solid object. 
There are several ways to restate this that might be useful when trying to
determine "Is my object a solid?"
-  No zero thickness walls. All triangles or quads etc have no thickness.
-  All faces must fully connect with each other to form a continuous
surface. All vertices must meet.
-  The object is watertight:
  -  I.e. if filled with water there are no gaps where water might leak out.
  -  E.g. if you have a triangle and another two triangles meet in the
middle of one of it's edges. It appears to be solid but that middle edge is
not connected at the vertices to the other two. So when filled with water it
will leak out the gap.
  -  Think of the faces as sheets of metal and the vertices as welds.


Check out many links online for help on what a "solid" model is.



--
View this message in context: http://forum.openscad.org/Polyhedron-and-cube-Not-a-Valid-2-Manifold-tp14283p14287.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From lboyd at frontiernet.net  Fri Nov  6 14:06:22 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Fri, 6 Nov 2015 12:06:22 -0700 (MST)
Subject: [OpenSCAD] Import
In-Reply-To: <4E566F28-F9E7-4DD6-9E0F-5AFA8814663E@kintel.net>
References: <1446826669883-14281.post@n5.nabble.com>
	<4E566F28-F9E7-4DD6-9E0F-5AFA8814663E@kintel.net>
Message-ID: <1446836782767-14288.post@n5.nabble.com>

Thanks, I will update the manual to reflect the current status



--
View this message in context: http://forum.openscad.org/Import-tp14281p14288.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From lboyd at frontiernet.net  Fri Nov  6 14:18:06 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Fri, 6 Nov 2015 12:18:06 -0700 (MST)
Subject: [OpenSCAD] Import
In-Reply-To: <1446836782767-14288.post@n5.nabble.com>
References: <1446826669883-14281.post@n5.nabble.com>
	<4E566F28-F9E7-4DD6-9E0F-5AFA8814663E@kintel.net>
	<1446836782767-14288.post@n5.nabble.com>
Message-ID: <1446837486111-14289.post@n5.nabble.com>

By the way is the syntax for surface() the same as import()?
i.e.
import("example012.stl", convexity=3);
surface("example012.png", convexity=3);



--
View this message in context: http://forum.openscad.org/Import-tp14281p14289.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Fri Nov  6 14:25:10 2015
From: nop.head at gmail.com (nop head)
Date: Fri, 6 Nov 2015 19:25:10 +0000
Subject: [OpenSCAD] Polyhedron and cube: Not a Valid 2-Manifold
In-Reply-To: <1446834713815-14287.post@n5.nabble.com>
References: <1446831855101-14283.post@n5.nabble.com>
	<1446832979660-14285.post@n5.nabble.com>
	<1446833492521-14286.post@n5.nabble.com>
	<1446834713815-14287.post@n5.nabble.com>
Message-ID: <CAEEmnrOR4i5dbX_giSoAj96AfwBgOV9Xw-Y077f5Uyqud1+MNQ@mail.gmail.com>

A simple way to think of it is: does it represent a solid that you can have
in real life? A shell with infinitely thin walls cannot exist so there can
be no edges of triangles exposed. They must always share each of their
edges with just one other triangle.

On 6 November 2015 at 18:31, Neon22 <mschafer at wireframe.biz> wrote:

> The term 'solid' means what it says. A solid object.
> There are several ways to restate this that might be useful when trying to
> determine "Is my object a solid?"
> -  No zero thickness walls. All triangles or quads etc have no thickness.
> -  All faces must fully connect with each other to form a continuous
> surface. All vertices must meet.
> -  The object is watertight:
>   -  I.e. if filled with water there are no gaps where water might leak
> out.
>   -  E.g. if you have a triangle and another two triangles meet in the
> middle of one of it's edges. It appears to be solid but that middle edge is
> not connected at the vertices to the other two. So when filled with water
> it
> will leak out the gap.
>   -  Think of the faces as sheets of metal and the vertices as welds.
>
>
> Check out many links online for help on what a "solid" model is.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Polyhedron-and-cube-Not-a-Valid-2-Manifold-tp14283p14287.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151106/0d9979bd/attachment.html>

From lboyd at frontiernet.net  Fri Nov  6 14:48:45 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Fri, 6 Nov 2015 12:48:45 -0700 (MST)
Subject: [OpenSCAD] Import
In-Reply-To: <1446837486111-14289.post@n5.nabble.com>
References: <1446826669883-14281.post@n5.nabble.com>
	<4E566F28-F9E7-4DD6-9E0F-5AFA8814663E@kintel.net>
	<1446836782767-14288.post@n5.nabble.com>
	<1446837486111-14289.post@n5.nabble.com>
Message-ID: <1446839325513-14291.post@n5.nabble.com>

Ignore last question. I found surface() in the manual



--
View this message in context: http://forum.openscad.org/Import-tp14281p14291.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From wv99999 at gmail.com  Fri Nov  6 14:56:11 2015
From: wv99999 at gmail.com (wolf)
Date: Fri, 6 Nov 2015 12:56:11 -0700 (MST)
Subject: [OpenSCAD] 3d hull() with 2d primitives needed!
In-Reply-To: <1446582128351-14276.post@n5.nabble.com>
References: <1383590090426-5845.post@n5.nabble.com>
	<D80ECFB3-24AF-4A4F-B39B-009595FDB777@kintel.net>
	<1446026175698-14235.post@n5.nabble.com>
	<1446026881276-14237.post@n5.nabble.com>
	<1446582128351-14276.post@n5.nabble.com>
Message-ID: <1446839771217-14292.post@n5.nabble.com>

This code creates an ellipsoid out of individual triangles - not those 2D
primitives you find described in the manual, as these are not compatible
with CGAL in a 3D environment. Rather, my 2D primitives use an undocumented
property of polyhedron().

I'll leave the comments in, this is experimental and unfinished code . . .
<http://forum.openscad.org/file/n14292/Ellipsoid.ellipsoid>  When finished,
I intend to submit the code to the team to be implemented as a variant of
surface(). That should improve rendering speed, which is rather slow
currently.

Wolf

a=30;   b=20;   c=10;    //half-axes of ellipse
Step=10;
StartVal_u=0;   EndVal_u=360;    // 10 seconds, 1224 facets, 614 vertices, 2
volumes
StartVal_v=0;   EndVal_v=180;
//StartVal_u=10;   EndVal_u=360;    // 10 seconds, 1190 facets, 614
vertices, 1 volumes
//StartVal_v=0;   EndVal_v=180;
 
 
 //scale([a,b,c])    sphere(1,$fn=51);       // used in debugging

for (v=[StartVal_v+Step/2:Step:EndVal_v])   for
(u=[StartVal_u+Step/2:Step:EndVal_u])   SurfaceElement(u,v);       

  
module SurfaceElement(u,v)
  { Center=P(u,v);                    // centre vector for SurfaceElement()
    P0=P(u-Step/2,v-Step/2);          // corner vector for SurfaceElement()
    P1=P(u+Step/2,v-Step/2);          // corner vector for SurfaceElement()
    P2=P(u+Step/2,v+Step/2);          // corner vector for SurfaceElement()
    P3=P(u-Step/2,v+Step/2);          // corner vector for SurfaceElement()
 //   translate(Center)    color("magenta")   cube([.3,.3,.3], center=true);  
// used in debugging
//    translate(P0)        color("red")       cube([.3,.3,.03],
center=true);   // used in debugging
//    translate(P1)        color("white")     cube([.3,.3,.03],
center=true);   // used in debugging
//    translate(P2)        color("green")     cube([.3,.3,.03],
center=true);   // used in debugging
//    translate(P3)        color("yellow")    cube([.3,.3,.03],
center=true);   // used in debugging
//     polygon(P0,P1,P2);   // accepts only 2-vectors
//     polygon(P0,P2,P3);   // accepts only 2-vectors
    if(P0 != P1 && P1 != P2)  color("red")     polyhedron
(points=[P0,P1,P2], faces=[[0,1,2]]);
    if(P0 != P2 && P2 != P3)  color("yellow")  polyhedron
(points=[P0,P2,P3], faces=[[0,1,2]]);
       // CGAL does'nt like degenerate faces!
 //  polyhedron (points=[P0,P1,P2,P3], faces=[[0,1,2,3]]);   // non-planar
face, CGAl complains
 //   echo(u-Step/2,u+Step/2,v-Step/2,v+Step/2,P0,P1,P2,P3,Center);
  }      
  
  function P(u,v)=[a*cos(u)*sin(v),b*sin(u)*sin(v),c*cos(v)];  //point on
the surface of an ellipsoid



--
View this message in context: http://forum.openscad.org/3d-hull-with-2d-primitives-needed-tp5845p14292.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From wv99999 at gmail.com  Fri Nov  6 15:36:42 2015
From: wv99999 at gmail.com (wolf)
Date: Fri, 6 Nov 2015 13:36:42 -0700 (MST)
Subject: [OpenSCAD] Polyhedron and cube: Not a Valid 2-Manifold
In-Reply-To: <CAEEmnrOR4i5dbX_giSoAj96AfwBgOV9Xw-Y077f5Uyqud1+MNQ@mail.gmail.com>
References: <1446831855101-14283.post@n5.nabble.com>
	<1446832979660-14285.post@n5.nabble.com>
	<1446833492521-14286.post@n5.nabble.com>
	<1446834713815-14287.post@n5.nabble.com>
	<CAEEmnrOR4i5dbX_giSoAj96AfwBgOV9Xw-Y077f5Uyqud1+MNQ@mail.gmail.com>
Message-ID: <1446842202899-14293.post@n5.nabble.com>

In another  thread
<http://forum.openscad.org/3d-hull-with-2d-primitives-needed-tp5845p14276.html>  
I have placed a piece of code that demonstrates that nophead and Neon22's
comments are at variance with how polyhedron() actually behaves. 

In that code, change any of the StartVal_ or EndVal_  parameters and see how
an ellipsoid changes into a vase. If you count the vertices or faces, there
are exactly as many as there should be, and thus the shape is watertight.
But it does not have a volume, irrespective of what OpenSCAD reports, as all
faces are of zero thickness.

But if you create an stl and export it into MeshLab, the number of vertices
triples, and the ellipsoid / vase would no longer be watertight. Whose
messages are then to be trusted?

To me, it means that someone has buggered the C++ code, either in creating
the stl mesh, or in reading it. Does anybody have an idea how to find the
bug, preferably without me first learning C++?

Wolf



--
View this message in context: http://forum.openscad.org/Polyhedron-and-cube-Not-a-Valid-2-Manifold-tp14283p14293.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Fri Nov  6 16:24:35 2015
From: nop.head at gmail.com (nop head)
Date: Fri, 6 Nov 2015 21:24:35 +0000
Subject: [OpenSCAD] Polyhedron and cube: Not a Valid 2-Manifold
In-Reply-To: <1446842202899-14293.post@n5.nabble.com>
References: <1446831855101-14283.post@n5.nabble.com>
	<1446832979660-14285.post@n5.nabble.com>
	<1446833492521-14286.post@n5.nabble.com>
	<1446834713815-14287.post@n5.nabble.com>
	<CAEEmnrOR4i5dbX_giSoAj96AfwBgOV9Xw-Y077f5Uyqud1+MNQ@mail.gmail.com>
	<1446842202899-14293.post@n5.nabble.com>
Message-ID: <CAEEmnrOnsH9c4GL-n1h=HiC0Rx2i2RrimXz6=pMz1E=C8TJTkg@mail.gmail.com>

Openscad buggers STLs when it writes them if the vertices are too close
together, such that after truncation to floats some topologically distinct
vertices become numerically the same.

On 6 November 2015 at 20:36, wolf <wv99999 at gmail.com> wrote:

> In another  thread
> <
> http://forum.openscad.org/3d-hull-with-2d-primitives-needed-tp5845p14276.html
> >
> I have placed a piece of code that demonstrates that nophead and Neon22's
> comments are at variance with how polyhedron() actually behaves.
>
> In that code, change any of the StartVal_ or EndVal_  parameters and see
> how
> an ellipsoid changes into a vase. If you count the vertices or faces, there
> are exactly as many as there should be, and thus the shape is watertight.
> But it does not have a volume, irrespective of what OpenSCAD reports, as
> all
> faces are of zero thickness.
>
> But if you create an stl and export it into MeshLab, the number of vertices
> triples, and the ellipsoid / vase would no longer be watertight. Whose
> messages are then to be trusted?
>
> To me, it means that someone has buggered the C++ code, either in creating
> the stl mesh, or in reading it. Does anybody have an idea how to find the
> bug, preferably without me first learning C++?
>
> Wolf
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Polyhedron-and-cube-Not-a-Valid-2-Manifold-tp14283p14293.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151106/5fe42f0a/attachment.html>

From marius at kintel.net  Sat Nov  7 00:10:42 2015
From: marius at kintel.net (Marius Kintel)
Date: Sat, 7 Nov 2015 00:10:42 -0500
Subject: [OpenSCAD] Polyhedron and cube: Not a Valid 2-Manifold
In-Reply-To: <CAEEmnrOnsH9c4GL-n1h=HiC0Rx2i2RrimXz6=pMz1E=C8TJTkg@mail.gmail.com>
References: <1446831855101-14283.post@n5.nabble.com>
	<1446832979660-14285.post@n5.nabble.com>
	<1446833492521-14286.post@n5.nabble.com>
	<1446834713815-14287.post@n5.nabble.com>
	<CAEEmnrOR4i5dbX_giSoAj96AfwBgOV9Xw-Y077f5Uyqud1+MNQ@mail.gmail.com>
	<1446842202899-14293.post@n5.nabble.com>
	<CAEEmnrOnsH9c4GL-n1h=HiC0Rx2i2RrimXz6=pMz1E=C8TJTkg@mail.gmail.com>
Message-ID: <F7565ABF-6761-4DEC-A5EA-45B029FBA396@kintel.net>

> On Nov 6, 2015, at 16:24 PM, nop head <nop.head at gmail.com> wrote:
> 
> Openscad buggers STLs when it writes them if the vertices are too close together, such that after truncation to floats some topologically distinct vertices become numerically the same.
> 
We are doing a much better job these days, but we?re still limited by floating point precision.
The alternative would be to do some sort of mesh optimization by merging close vertices or edges in a topology-preserving fashion. While this is doable, it?s non-trivial to get the edge cases right.

 -Marius



From mschafer at wireframe.biz  Sat Nov  7 04:12:28 2015
From: mschafer at wireframe.biz (Neon22)
Date: Sat, 7 Nov 2015 02:12:28 -0700 (MST)
Subject: [OpenSCAD] Polyhedron and cube: Not a Valid 2-Manifold
In-Reply-To: <1446842202899-14293.post@n5.nabble.com>
References: <1446831855101-14283.post@n5.nabble.com>
	<1446832979660-14285.post@n5.nabble.com>
	<1446833492521-14286.post@n5.nabble.com>
	<1446834713815-14287.post@n5.nabble.com>
	<CAEEmnrOR4i5dbX_giSoAj96AfwBgOV9Xw-Y077f5Uyqud1+MNQ@mail.gmail.com>
	<1446842202899-14293.post@n5.nabble.com>
Message-ID: <1446887548856-14296.post@n5.nabble.com>

Looking at @wolf's code the vertex location calc is done 4(I think) times for
each vertex. 
I.e. 4 faces join at a vertex but that vertex is calculated 4 times instead
of once.

Perhaps a way to do it where the vertices are shared, is to calculate all
the points once, in a list, and then build the faces list using those
vertices.
Then there will be no floating point error as the vertices will really be
shared. And therefore it will be a solid.

Sorry don't have time to do it right now :(



--
View this message in context: http://forum.openscad.org/Polyhedron-and-cube-Not-a-Valid-2-Manifold-tp14283p14296.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Sat Nov  7 04:38:50 2015
From: nop.head at gmail.com (nop head)
Date: Sat, 7 Nov 2015 09:38:50 +0000
Subject: [OpenSCAD] Polyhedron and cube: Not a Valid 2-Manifold
In-Reply-To: <1446887548856-14296.post@n5.nabble.com>
References: <1446831855101-14283.post@n5.nabble.com>
	<1446832979660-14285.post@n5.nabble.com>
	<1446833492521-14286.post@n5.nabble.com>
	<1446834713815-14287.post@n5.nabble.com>
	<CAEEmnrOR4i5dbX_giSoAj96AfwBgOV9Xw-Y077f5Uyqud1+MNQ@mail.gmail.com>
	<1446842202899-14293.post@n5.nabble.com>
	<1446887548856-14296.post@n5.nabble.com>
Message-ID: <CAEEmnrO0MT4rVSb+3cM=JYrv7-Y-u=rNbn+O4R0ft3uiQn6reg@mail.gmail.com>

I don't think zero thickness faces will ever survive being put into an STL
file. I don't think there is enough information to recover the topology
when the triangles overlap. Even if it is 2 manifold mathematically (which
I am not sure of) it isn't a valid 3D solid, so even if OpenScad can handle
it internally, it won't be representable in all 3D file formats or work
properly in programs that operate on solids.

On 7 November 2015 at 09:12, Neon22 <mschafer at wireframe.biz> wrote:

> Looking at @wolf's code the vertex location calc is done 4(I think) times
> for
> each vertex.
> I.e. 4 faces join at a vertex but that vertex is calculated 4 times instead
> of once.
>
> Perhaps a way to do it where the vertices are shared, is to calculate all
> the points once, in a list, and then build the faces list using those
> vertices.
> Then there will be no floating point error as the vertices will really be
> shared. And therefore it will be a solid.
>
> Sorry don't have time to do it right now :(
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Polyhedron-and-cube-Not-a-Valid-2-Manifold-tp14283p14296.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151107/6d41803e/attachment.html>

From wv99999 at gmail.com  Sat Nov  7 18:51:00 2015
From: wv99999 at gmail.com (wolf)
Date: Sat, 7 Nov 2015 16:51:00 -0700 (MST)
Subject: [OpenSCAD] Polyhedron and cube: Not a Valid 2-Manifold
In-Reply-To: <CAEEmnrO0MT4rVSb+3cM=JYrv7-Y-u=rNbn+O4R0ft3uiQn6reg@mail.gmail.com>
References: <1446831855101-14283.post@n5.nabble.com>
	<1446832979660-14285.post@n5.nabble.com>
	<1446833492521-14286.post@n5.nabble.com>
	<1446834713815-14287.post@n5.nabble.com>
	<CAEEmnrOR4i5dbX_giSoAj96AfwBgOV9Xw-Y077f5Uyqud1+MNQ@mail.gmail.com>
	<1446842202899-14293.post@n5.nabble.com>
	<1446887548856-14296.post@n5.nabble.com>
	<CAEEmnrO0MT4rVSb+3cM=JYrv7-Y-u=rNbn+O4R0ft3uiQn6reg@mail.gmail.com>
Message-ID: <1446940260960-14299.post@n5.nabble.com>

First, to kintel's comment: The financial industry sits with the same
problem: floating point accuracy is not good enough to add up trillions of
dollar without essentially unpredictable consequences for the last cents. If
I can find the methods, used there to make sure rounding errors do not
happen, again, I will let you know.
My approach to rounding errors would be to define, internally, a unit length
roughly equivalent to the diameter of an atom, and thus all numbers used to
be represented by integers. Externally, in user space, this can readily be
converted into the customary millimeter, or, if you want, inches and feet.
Thus all vertices are treated as vectors made up of integers, the smallest
value representable being the diameter of a single atom.  This way internal
accuracy can be assured, down to the smallest possible unit to represent in
a real world solid. Where floating point numbers are unavoidable (sines, pi,
logarithms, roots, etc), infinite accuracy algorithms are available to
calculate those numbers to the accuracy needed. Guessing a user's intention
by merging close, but separate vertices into a single one violates, in my
view, the reasons behind creating a functional language in the first place:
separation.
Should an integer representation for internal unit length place unacceptable
limits on the upper length limits, that can always be extended by replacing
integers (=list of bits in a register) with lists of memory entries
(=strings of digits). But that would seen unlikely to me, since a 64 bit
signed integer can represent double the distance Earth - Moon down to atomic
accuracy - more than enough I should think.

To Neon22's comment: Yes, the vertices are calculated multiple times, once
for each quadrangle defined by a pair of [u,v] values. If I may ignore the
exceptional situation at the poles, where half the triangles degenerate into
lines and therefore are excluded from being rendered, each pair of
red/yellow triangles has its vertices calculated separately. But that also
means that one third of the edges separating faces are based upon the same
vertices, and the different vertex counts by OpenSCAD and MeshLab remain
unexplained. On average, this means that each vertex is calculated slightly
more than twice (pole exception!) for each vertex rendered.
In terms of execution speed, multiple calculation of vertices makes no
contribution to overall rendering time, as time is consumed measurably only
by the polyhedron() instructions. But, of course, there are other reasons to
prefer reading data from a list rather than recreating them afresh every
time they are needed.
You could create such a list using external software. That is a crutch not
acceptable to me.
I am looking for a way to do that inside OpenSCAD, inside user space. As we
all know, the manual currently says exporting a value from a module onto,
e.g. a list, is not possible. Whether that is true in light of what has
recently been said in this forum about tail recursion remains to be tested.

To nophead: Zero thickness faces are a standard feature of OpenSCAD, as all
rendering is done using CGAL's implementation of Nef polyhedra.  To quote
<http://doc.cgal.org/latest/Nef_3/index.html>  : "In our implementation of
Nef polyhedra in 3D, we offer a B-rep data structure that is closed under
Boolean operations and with all their generality." Unquote. May I suggest
that you read the documentation? Since polyhedron() became available, open
data structures (an alternative name for "Open Data Structure" is
"Non-Manifold Model") have also become available in OpenSCAD. And many users
cannot handle them, as this forum shows again and again. But that only means
that the manual is inadequate, that many users (me included) do not
understand the entry for polyhedron(). 

In spite of what many participants in this forum claim, OpenSCAD is not
Constructive Solid Geometry (CSG). It has the properties of CSG, in that it
can handle union(), difference() and intersection(), i.e. the boolean
operations mentioned above. It also does Boundary Representation (B-rep),
since it uses CGAL's Nef polyhedra. It even does Functional Representation
(F-rep), as my little piece of software shows.
It does it all. OpenSCAD is not limited to the one or the other. OpenSCAD's
limitations arise principally from the mindset of some of its most
loquacious users, which restricts its use to 3D-printing and laser cutting.
Sheet-metal folding, for example, is served well using  non-manifold models
<https://en.wikipedia.org/wiki/Boundary_representation>  . And building a
cube with rounded edges is computationally rather expensive in OpenSCAD, as
it is done either the using expensive functions (hull(), minkowski()) or, if
done using a union of cylinders, spheres and cubes, the computation of many
vertices and faces that are later discarded.

Wolf




--
View this message in context: http://forum.openscad.org/Polyhedron-and-cube-Not-a-Valid-2-Manifold-tp14283p14299.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Sat Nov  7 19:30:54 2015
From: nop.head at gmail.com (nop head)
Date: Sun, 8 Nov 2015 00:30:54 +0000
Subject: [OpenSCAD] Polyhedron and cube: Not a Valid 2-Manifold
In-Reply-To: <1446940260960-14299.post@n5.nabble.com>
References: <1446831855101-14283.post@n5.nabble.com>
	<1446832979660-14285.post@n5.nabble.com>
	<1446833492521-14286.post@n5.nabble.com>
	<1446834713815-14287.post@n5.nabble.com>
	<CAEEmnrOR4i5dbX_giSoAj96AfwBgOV9Xw-Y077f5Uyqud1+MNQ@mail.gmail.com>
	<1446842202899-14293.post@n5.nabble.com>
	<1446887548856-14296.post@n5.nabble.com>
	<CAEEmnrO0MT4rVSb+3cM=JYrv7-Y-u=rNbn+O4R0ft3uiQn6reg@mail.gmail.com>
	<1446940260960-14299.post@n5.nabble.com>
Message-ID: <CAEEmnrPoQzhJgweAfkTASFsBgQgH++Sv+6G0mm+n4FMtcprjGQ@mail.gmail.com>

It doesn't matter whether OpenScan can represent zero thickness walls or
work in infinite precision, STL can't, so you can't export it in STL
without problems. It is just a jumble of triangles which downstream
programs expect to share each edge with one other. There is no information
about which triangles meet other than numerically comparing the vertices in
floating point format. So if the wall has no thickness triangles can easily
be sharing too many edges and may intersect.  Then it is down to how clever
the program reading it is at untangling the mess to make a mesh.

It has been said many times OpenScad could do a better job writing STLs by
using a topologically aware truncation scheme to make sure vertices that
are distinct are still distinct after truncation to floats, which means
fudging them a little in such a way that the topology is preserved. I think
that would be far from trivial.

You can easily build lists of vertices in OpenScad using recursive
functions, or list comprehensions. You don't need external programs.

Any real object you can make, sheet metal or otherwise, will be manifold.
Openscad doesn't need to be able to handle non manifold geometry.

On 7 November 2015 at 23:51, wolf <wv99999 at gmail.com> wrote:

> First, to kintel's comment: The financial industry sits with the same
> problem: floating point accuracy is not good enough to add up trillions of
> dollar without essentially unpredictable consequences for the last cents.
> If
> I can find the methods, used there to make sure rounding errors do not
> happen, again, I will let you know.
> My approach to rounding errors would be to define, internally, a unit
> length
> roughly equivalent to the diameter of an atom, and thus all numbers used to
> be represented by integers. Externally, in user space, this can readily be
> converted into the customary millimeter, or, if you want, inches and feet.
> Thus all vertices are treated as vectors made up of integers, the smallest
> value representable being the diameter of a single atom.  This way internal
> accuracy can be assured, down to the smallest possible unit to represent in
> a real world solid. Where floating point numbers are unavoidable (sines,
> pi,
> logarithms, roots, etc), infinite accuracy algorithms are available to
> calculate those numbers to the accuracy needed. Guessing a user's intention
> by merging close, but separate vertices into a single one violates, in my
> view, the reasons behind creating a functional language in the first place:
> separation.
> Should an integer representation for internal unit length place
> unacceptable
> limits on the upper length limits, that can always be extended by replacing
> integers (=list of bits in a register) with lists of memory entries
> (=strings of digits). But that would seen unlikely to me, since a 64 bit
> signed integer can represent double the distance Earth - Moon down to
> atomic
> accuracy - more than enough I should think.
>
> To Neon22's comment: Yes, the vertices are calculated multiple times, once
> for each quadrangle defined by a pair of [u,v] values. If I may ignore the
> exceptional situation at the poles, where half the triangles degenerate
> into
> lines and therefore are excluded from being rendered, each pair of
> red/yellow triangles has its vertices calculated separately. But that also
> means that one third of the edges separating faces are based upon the same
> vertices, and the different vertex counts by OpenSCAD and MeshLab remain
> unexplained. On average, this means that each vertex is calculated slightly
> more than twice (pole exception!) for each vertex rendered.
> In terms of execution speed, multiple calculation of vertices makes no
> contribution to overall rendering time, as time is consumed measurably only
> by the polyhedron() instructions. But, of course, there are other reasons
> to
> prefer reading data from a list rather than recreating them afresh every
> time they are needed.
> You could create such a list using external software. That is a crutch not
> acceptable to me.
> I am looking for a way to do that inside OpenSCAD, inside user space. As we
> all know, the manual currently says exporting a value from a module onto,
> e.g. a list, is not possible. Whether that is true in light of what has
> recently been said in this forum about tail recursion remains to be tested.
>
> To nophead: Zero thickness faces are a standard feature of OpenSCAD, as all
> rendering is done using CGAL's implementation of Nef polyhedra.  To quote
> <http://doc.cgal.org/latest/Nef_3/index.html>  : "In our implementation of
> Nef polyhedra in 3D, we offer a B-rep data structure that is closed under
> Boolean operations and with all their generality." Unquote. May I suggest
> that you read the documentation? Since polyhedron() became available, open
> data structures (an alternative name for "Open Data Structure" is
> "Non-Manifold Model") have also become available in OpenSCAD. And many
> users
> cannot handle them, as this forum shows again and again. But that only
> means
> that the manual is inadequate, that many users (me included) do not
> understand the entry for polyhedron().
>
> In spite of what many participants in this forum claim, OpenSCAD is not
> Constructive Solid Geometry (CSG). It has the properties of CSG, in that it
> can handle union(), difference() and intersection(), i.e. the boolean
> operations mentioned above. It also does Boundary Representation (B-rep),
> since it uses CGAL's Nef polyhedra. It even does Functional Representation
> (F-rep), as my little piece of software shows.
> It does it all. OpenSCAD is not limited to the one or the other. OpenSCAD's
> limitations arise principally from the mindset of some of its most
> loquacious users, which restricts its use to 3D-printing and laser cutting.
> Sheet-metal folding, for example, is served well using  non-manifold models
> <https://en.wikipedia.org/wiki/Boundary_representation>  . And building a
> cube with rounded edges is computationally rather expensive in OpenSCAD, as
> it is done either the using expensive functions (hull(), minkowski()) or,
> if
> done using a union of cylinders, spheres and cubes, the computation of many
> vertices and faces that are later discarded.
>
> Wolf
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Polyhedron-and-cube-Not-a-Valid-2-Manifold-tp14283p14299.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151108/933da2dd/attachment.html>

From alan at lxorguk.ukuu.org.uk  Sun Nov  8 04:52:00 2015
From: alan at lxorguk.ukuu.org.uk (Alan Cox)
Date: Sun, 8 Nov 2015 09:52:00 +0000
Subject: [OpenSCAD] Polyhedron and cube: Not a Valid 2-Manifold
In-Reply-To: <1446940260960-14299.post@n5.nabble.com>
References: <1446831855101-14283.post@n5.nabble.com>
	<1446832979660-14285.post@n5.nabble.com>
	<1446833492521-14286.post@n5.nabble.com>
	<1446834713815-14287.post@n5.nabble.com>
	<CAEEmnrOR4i5dbX_giSoAj96AfwBgOV9Xw-Y077f5Uyqud1+MNQ@mail.gmail.com>
	<1446842202899-14293.post@n5.nabble.com>
	<1446887548856-14296.post@n5.nabble.com>
	<CAEEmnrO0MT4rVSb+3cM=JYrv7-Y-u=rNbn+O4R0ft3uiQn6reg@mail.gmail.com>
	<1446940260960-14299.post@n5.nabble.com>
Message-ID: <20151108095200.294048d0@www.etchedpixels.co.uk>

> My approach to rounding errors would be to define, internally, a unit length
> roughly equivalent to the diameter of an atom, and thus all numbers used to
> be represented by integers.

If you look through the archive this was discussed a long time back,
using something like 32:32 fixed format because it can be handled very
fast by a modern processor, and would potentially even allow an ARM based
tablet device to run OpenSCAD usefully.

> integers (=list of bits in a register) with lists of memory entries
> (=strings of digits). But that would seen unlikely to me, since a 64 bit

Read the existing CGAL code and documentation for mathematical
representations of points.

> In terms of execution speed, multiple calculation of vertices makes no
> contribution to overall rendering time, as time is consumed measurably only
> by the polyhedron() instructions. But, of course, there are other reasons to

If you write the CGAL numeric classes to support fixed point then the
rest shoudldn't matter for any realistically complex object. Export is a
different problem. STL is basically broken by design so you have to fudge
your exports.

> <https://en.wikipedia.org/wiki/Boundary_representation>  . And building a
> cube with rounded edges is computationally rather expensive in OpenSCAD, as
> it is done either the using expensive functions (hull(), minkowski()) or, if
> done using a union of cylinders, spheres and cubes, the computation of many
> vertices and faces that are later discarded.

Yes - some of the other equivalents did (IMhO) a rather nicer job of
things like rounding and flanges by using implicit functions and different
algorithms to generate any mesh output.

ImplicitCAD unfortunately seems to have mostly died, although it got a
few fixes over the last couple of months

https://github.com/colah/ImplicitCAD

Alan


From jon at jonbondy.com  Sun Nov  8 08:57:21 2015
From: jon at jonbondy.com (jon)
Date: Sun, 8 Nov 2015 08:57:21 -0500
Subject: [OpenSCAD] printing a punch out to avoid needing support
Message-ID: <563F54C1.2050907@jonbondy.com>

I needed to design a custom Arduino case with a rectangular cut out for 
an LCD display.  The problem is that my printer does not print support 
very well, and the LCD hole was on a vertical face (I print with the two 
small power holes on the bottom).  I was concerned about printing the 
bridge across the top of the LCD hole.

Instead, I filled the hole but cut out a channel around the hole so that 
I could just press out the plastic that filled the LCD panel hole.  To 
my surprise, it worked really nicely, first time.  See "perforation for 
LCD" below.

Jon


// box sizes
bX = 65.5;
bY = 116;
bZ = 36;
wall = 2; // wall thickness
pcbThick = 2; // PCB thickness
pcbLen = bY; // length of PCB in slot
lcdX = 51;
lcdY = 72;
rch = 0.1;

module slot()
     cube([wall + rch, pcbLen, pcbThick]);

module Top() {
     translate([-1.5*bX, 0, 0]) {
         cube([bX + 4*wall, 3, bZ + 2*wall]);
         translate([2 * wall + rch, 3, wall + rch])
             cube([bX - 2*rch, 2, bZ - 2*rch]);
         }
     }

module Box() {
     difference() {
         // exterior; X is thicker for PC board slot
         cube([bX + 4*wall, bY + wall, bZ + 2*wall]);
         // interior
         translate([2*wall, wall, wall])
             cube([bX, bY + rch, bZ]);
         // slots for PC board
         translate([wall, bY - pcbLen + wall + rch, 32])
             slot();
         translate([2*wall + bX - rch, bY - pcbLen + wall + rch, 32])
             slot();
         // hole for LCD - deprecated
         *translate([wall + 5, wall + 16, bZ + wall - rch])
             cube([lcdX, lcdY, wall + 2*rch]);
         // perforation for LCD
         xMargin = (bX + 4*wall - lcdX) / 2;
         difference() {
             translate([xMargin, wall + 27, bZ + wall + 2*rch])
                 cube([lcdX, lcdY, wall - 2*rch]);
             translate([xMargin + 0.25, wall + 27 + 0.25, bZ + wall - 
2*rch])
                 cube([lcdX - 0.5, lcdY - 0.5, wall + 4*rch]);
             }
         // hole for hanging
             translate([(bX + 4*wall)/2, 0.85*(bY + 2*wall), -1])
                 rotate([0, 0, 90])
                     cylinder(h = 10, r = 3, $fn = 3);
         // hole for USB
         translate([14.5 + 2*wall, -1, 5 + wall])
             cube([12.5, 11.25, 11]);
         // hole for DC
         translate([45.5 + 2*wall, -1, 4.5 + wall])
             cube([9.5, 11.5, 11]);
         }
     }

Box();
Top();


From stempeldergeschichte at googlemail.com  Sun Nov  8 10:03:50 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Sun, 8 Nov 2015 16:03:50 +0100
Subject: [OpenSCAD] 3d hull() with 2d primitives needed!
In-Reply-To: <1446839771217-14292.post@n5.nabble.com>
References: <1383590090426-5845.post@n5.nabble.com>
	<D80ECFB3-24AF-4A4F-B39B-009595FDB777@kintel.net>
	<1446026175698-14235.post@n5.nabble.com>
	<1446026881276-14237.post@n5.nabble.com>
	<1446582128351-14276.post@n5.nabble.com>
	<1446839771217-14292.post@n5.nabble.com>
Message-ID: <CAJgOqACah2eKFyk5G2KADgsBAQKBwF57y4nKNUuExjzvvPA8ew@mail.gmail.com>

Hi Wolf: nice work. If I remember correctly this was not allowed in older
versions.

Why dont you remove the debugging and and post your code into a new thread?



2015-11-06 20:56 GMT+01:00 wolf <wv99999 at gmail.com>:

> This code creates an ellipsoid out of individual triangles - not those 2D
> primitives you find described in the manual, as these are not compatible
> with CGAL in a 3D environment. Rather, my 2D primitives use an undocumented
> property of polyhedron().
>
> I'll leave the comments in, this is experimental and unfinished code . . .
> <http://forum.openscad.org/file/n14292/Ellipsoid.ellipsoid>  When
> finished,
> I intend to submit the code to the team to be implemented as a variant of
> surface(). That should improve rendering speed, which is rather slow
> currently.
>
> Wolf
>
> a=30;   b=20;   c=10;    //half-axes of ellipse
> Step=10;
> StartVal_u=0;   EndVal_u=360;    // 10 seconds, 1224 facets, 614 vertices,
> 2
> volumes
> StartVal_v=0;   EndVal_v=180;
> //StartVal_u=10;   EndVal_u=360;    // 10 seconds, 1190 facets, 614
> vertices, 1 volumes
> //StartVal_v=0;   EndVal_v=180;
>
>
>  //scale([a,b,c])    sphere(1,$fn=51);       // used in debugging
>
> for (v=[StartVal_v+Step/2:Step:EndVal_v])   for
> (u=[StartVal_u+Step/2:Step:EndVal_u])   SurfaceElement(u,v);
>
>
> module SurfaceElement(u,v)
>   { Center=P(u,v);                    // centre vector for SurfaceElement()
>     P0=P(u-Step/2,v-Step/2);          // corner vector for SurfaceElement()
>     P1=P(u+Step/2,v-Step/2);          // corner vector for SurfaceElement()
>     P2=P(u+Step/2,v+Step/2);          // corner vector for SurfaceElement()
>     P3=P(u-Step/2,v+Step/2);          // corner vector for SurfaceElement()
>  //   translate(Center)    color("magenta")   cube([.3,.3,.3],
> center=true);
> // used in debugging
> //    translate(P0)        color("red")       cube([.3,.3,.03],
> center=true);   // used in debugging
> //    translate(P1)        color("white")     cube([.3,.3,.03],
> center=true);   // used in debugging
> //    translate(P2)        color("green")     cube([.3,.3,.03],
> center=true);   // used in debugging
> //    translate(P3)        color("yellow")    cube([.3,.3,.03],
> center=true);   // used in debugging
> //     polygon(P0,P1,P2);   // accepts only 2-vectors
> //     polygon(P0,P2,P3);   // accepts only 2-vectors
>     if(P0 != P1 && P1 != P2)  color("red")     polyhedron
> (points=[P0,P1,P2], faces=[[0,1,2]]);
>     if(P0 != P2 && P2 != P3)  color("yellow")  polyhedron
> (points=[P0,P2,P3], faces=[[0,1,2]]);
>        // CGAL does'nt like degenerate faces!
>  //  polyhedron (points=[P0,P1,P2,P3], faces=[[0,1,2,3]]);   // non-planar
> face, CGAl complains
>  //   echo(u-Step/2,u+Step/2,v-Step/2,v+Step/2,P0,P1,P2,P3,Center);
>   }
>
>   function P(u,v)=[a*cos(u)*sin(v),b*sin(u)*sin(v),c*cos(v)];  //point on
> the surface of an ellipsoid
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/3d-hull-with-2d-primitives-needed-tp5845p14292.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151108/401ed3e0/attachment.html>

From runsun at gmail.com  Sun Nov  8 10:32:31 2015
From: runsun at gmail.com (runsun)
Date: Sun, 8 Nov 2015 08:32:31 -0700 (MST)
Subject: [OpenSCAD] Nth degree Bezier Recursion
In-Reply-To: <1446982872921-14302.post@n5.nabble.com>
References: <1446982872921-14302.post@n5.nabble.com>
Message-ID: <1446996751936-14305.post@n5.nabble.com>

You set resolution=0.01 and send it to fac(n=0.01) which never reaches the
ending condition of n==0 inside fac(n).






-----

$  Runsun Pan, PhD 

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );

 $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif 






--
View this message in context: http://forum.openscad.org/Nth-degree-Bezier-Recursion-tp14302p14305.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Sun Nov  8 11:00:42 2015
From: doug at moens.org (doug moen)
Date: Sun, 8 Nov 2015 11:00:42 -0500
Subject: [OpenSCAD] 3d hull() with 2d primitives needed!
In-Reply-To: <1446839771217-14292.post@n5.nabble.com>
References: <1383590090426-5845.post@n5.nabble.com>
	<D80ECFB3-24AF-4A4F-B39B-009595FDB777@kintel.net>
	<1446026175698-14235.post@n5.nabble.com>
	<1446026881276-14237.post@n5.nabble.com>
	<1446582128351-14276.post@n5.nabble.com>
	<1446839771217-14292.post@n5.nabble.com>
Message-ID: <CAGV6i+P2VmiA7q5iiiw0UT5mJLSui7FEpTB1xTMZOZv4R3Gf-w@mail.gmail.com>

I tried Wolf's ellipsoid in OpenSCAD 2014.03, and got a lot of CGAL
assertion errors.

Those error messages went away in OpenSCAD 2015.03. However, when I tried
to intersect the ellipsoid with a cylinder, I got garbage results, and a
message indicating that my object is non-manifold.

Wolf's program is not a valid OpenSCAD program, and does not construct a
valid 3D shape. I consider it a bug that there are no error messages in
OpenSCAD 2015.03 until you try to apply a geometric operation to the
ellipsoid.

On 6 November 2015 at 14:56, wolf <wv99999 at gmail.com> wrote:

> This code creates an ellipsoid out of individual triangles - not those 2D
> primitives you find described in the manual, as these are not compatible
> with CGAL in a 3D environment. Rather, my 2D primitives use an undocumented
> property of polyhedron().
>
> I'll leave the comments in, this is experimental and unfinished code . . .
> <http://forum.openscad.org/file/n14292/Ellipsoid.ellipsoid>  When
> finished,
> I intend to submit the code to the team to be implemented as a variant of
> surface(). That should improve rendering speed, which is rather slow
> currently.
>
> Wolf
>
> a=30;   b=20;   c=10;    //half-axes of ellipse
> Step=10;
> StartVal_u=0;   EndVal_u=360;    // 10 seconds, 1224 facets, 614 vertices,
> 2
> volumes
> StartVal_v=0;   EndVal_v=180;
> //StartVal_u=10;   EndVal_u=360;    // 10 seconds, 1190 facets, 614
> vertices, 1 volumes
> //StartVal_v=0;   EndVal_v=180;
>
>
>  //scale([a,b,c])    sphere(1,$fn=51);       // used in debugging
>
> for (v=[StartVal_v+Step/2:Step:EndVal_v])   for
> (u=[StartVal_u+Step/2:Step:EndVal_u])   SurfaceElement(u,v);
>
>
> module SurfaceElement(u,v)
>   { Center=P(u,v);                    // centre vector for SurfaceElement()
>     P0=P(u-Step/2,v-Step/2);          // corner vector for SurfaceElement()
>     P1=P(u+Step/2,v-Step/2);          // corner vector for SurfaceElement()
>     P2=P(u+Step/2,v+Step/2);          // corner vector for SurfaceElement()
>     P3=P(u-Step/2,v+Step/2);          // corner vector for SurfaceElement()
>  //   translate(Center)    color("magenta")   cube([.3,.3,.3],
> center=true);
> // used in debugging
> //    translate(P0)        color("red")       cube([.3,.3,.03],
> center=true);   // used in debugging
> //    translate(P1)        color("white")     cube([.3,.3,.03],
> center=true);   // used in debugging
> //    translate(P2)        color("green")     cube([.3,.3,.03],
> center=true);   // used in debugging
> //    translate(P3)        color("yellow")    cube([.3,.3,.03],
> center=true);   // used in debugging
> //     polygon(P0,P1,P2);   // accepts only 2-vectors
> //     polygon(P0,P2,P3);   // accepts only 2-vectors
>     if(P0 != P1 && P1 != P2)  color("red")     polyhedron
> (points=[P0,P1,P2], faces=[[0,1,2]]);
>     if(P0 != P2 && P2 != P3)  color("yellow")  polyhedron
> (points=[P0,P2,P3], faces=[[0,1,2]]);
>        // CGAL does'nt like degenerate faces!
>  //  polyhedron (points=[P0,P1,P2,P3], faces=[[0,1,2,3]]);   // non-planar
> face, CGAl complains
>  //   echo(u-Step/2,u+Step/2,v-Step/2,v+Step/2,P0,P1,P2,P3,Center);
>   }
>
>   function P(u,v)=[a*cos(u)*sin(v),b*sin(u)*sin(v),c*cos(v)];  //point on
> the surface of an ellipsoid
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/3d-hull-with-2d-primitives-needed-tp5845p14292.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151108/49278605/attachment.html>

From doug at moens.org  Sun Nov  8 11:03:17 2015
From: doug at moens.org (doug moen)
Date: Sun, 8 Nov 2015 11:03:17 -0500
Subject: [OpenSCAD] printing a punch out to avoid needing support
In-Reply-To: <563F54C1.2050907@jonbondy.com>
References: <563F54C1.2050907@jonbondy.com>
Message-ID: <CAGV6i+MCYyuB86D8tbRW6ayJLXrED+ZD9O6ptWT8CvmV+4Oh5A@mail.gmail.com>

Nice!

On 8 November 2015 at 08:57, jon <jon at jonbondy.com> wrote:

> I needed to design a custom Arduino case with a rectangular cut out for an
> LCD display.  The problem is that my printer does not print support very
> well, and the LCD hole was on a vertical face (I print with the two small
> power holes on the bottom).  I was concerned about printing the bridge
> across the top of the LCD hole.
>
> Instead, I filled the hole but cut out a channel around the hole so that I
> could just press out the plastic that filled the LCD panel hole.  To my
> surprise, it worked really nicely, first time.  See "perforation for LCD"
> below.
>
> Jon
>
>
> // box sizes
> bX = 65.5;
> bY = 116;
> bZ = 36;
> wall = 2; // wall thickness
> pcbThick = 2; // PCB thickness
> pcbLen = bY; // length of PCB in slot
> lcdX = 51;
> lcdY = 72;
> rch = 0.1;
>
> module slot()
>     cube([wall + rch, pcbLen, pcbThick]);
>
> module Top() {
>     translate([-1.5*bX, 0, 0]) {
>         cube([bX + 4*wall, 3, bZ + 2*wall]);
>         translate([2 * wall + rch, 3, wall + rch])
>             cube([bX - 2*rch, 2, bZ - 2*rch]);
>         }
>     }
>
> module Box() {
>     difference() {
>         // exterior; X is thicker for PC board slot
>         cube([bX + 4*wall, bY + wall, bZ + 2*wall]);
>         // interior
>         translate([2*wall, wall, wall])
>             cube([bX, bY + rch, bZ]);
>         // slots for PC board
>         translate([wall, bY - pcbLen + wall + rch, 32])
>             slot();
>         translate([2*wall + bX - rch, bY - pcbLen + wall + rch, 32])
>             slot();
>         // hole for LCD - deprecated
>         *translate([wall + 5, wall + 16, bZ + wall - rch])
>             cube([lcdX, lcdY, wall + 2*rch]);
>         // perforation for LCD
>         xMargin = (bX + 4*wall - lcdX) / 2;
>         difference() {
>             translate([xMargin, wall + 27, bZ + wall + 2*rch])
>                 cube([lcdX, lcdY, wall - 2*rch]);
>             translate([xMargin + 0.25, wall + 27 + 0.25, bZ + wall -
> 2*rch])
>                 cube([lcdX - 0.5, lcdY - 0.5, wall + 4*rch]);
>             }
>         // hole for hanging
>             translate([(bX + 4*wall)/2, 0.85*(bY + 2*wall), -1])
>                 rotate([0, 0, 90])
>                     cylinder(h = 10, r = 3, $fn = 3);
>         // hole for USB
>         translate([14.5 + 2*wall, -1, 5 + wall])
>             cube([12.5, 11.25, 11]);
>         // hole for DC
>         translate([45.5 + 2*wall, -1, 4.5 + wall])
>             cube([9.5, 11.5, 11]);
>         }
>     }
>
> Box();
> Top();
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151108/0124e6c7/attachment-0001.html>

From doug at moens.org  Sun Nov  8 11:09:44 2015
From: doug at moens.org (doug moen)
Date: Sun, 8 Nov 2015 11:09:44 -0500
Subject: [OpenSCAD] Polyhedron and cube: Not a Valid 2-Manifold
In-Reply-To: <1446842202899-14293.post@n5.nabble.com>
References: <1446831855101-14283.post@n5.nabble.com>
	<1446832979660-14285.post@n5.nabble.com>
	<1446833492521-14286.post@n5.nabble.com>
	<1446834713815-14287.post@n5.nabble.com>
	<CAEEmnrOR4i5dbX_giSoAj96AfwBgOV9Xw-Y077f5Uyqud1+MNQ@mail.gmail.com>
	<1446842202899-14293.post@n5.nabble.com>
Message-ID: <CAGV6i+OJEFrz93F85ZYbU9etn5FuMAHQ1LkPKXX5YF4JrOugqw@mail.gmail.com>

Wolf, I replied to your message in the other thread. This is not a valid
OpenSCAD program. It doesn't construct a 3D solid, just a cloud of
non-manifold objects. It produces CGAL error messages in 2014.03, but not
in 2015.03, and I consider it a bug that we don't report an error in
2015.03.

You said: "I have placed a piece of code that demonstrates that nophead and
Neon22's comments are at variance with how polyhedron() actually behaves."

Nophead and Neon22 are correct. The underlying problem is that polyhedron()
fails to report an error for invalid arguments, and returns something that
is not a valid solid. In general, OpenSCAD is very sloppy at detecting and
reporting errors.

On 6 November 2015 at 15:36, wolf <wv99999 at gmail.com> wrote:

> In another  thread
> <
> http://forum.openscad.org/3d-hull-with-2d-primitives-needed-tp5845p14276.html
> >
> I have placed a piece of code that demonstrates that nophead and Neon22's
> comments are at variance with how polyhedron() actually behaves.
>
> In that code, change any of the StartVal_ or EndVal_  parameters and see
> how
> an ellipsoid changes into a vase. If you count the vertices or faces, there
> are exactly as many as there should be, and thus the shape is watertight.
> But it does not have a volume, irrespective of what OpenSCAD reports, as
> all
> faces are of zero thickness.
>
> But if you create an stl and export it into MeshLab, the number of vertices
> triples, and the ellipsoid / vase would no longer be watertight. Whose
> messages are then to be trusted?
>
> To me, it means that someone has buggered the C++ code, either in creating
> the stl mesh, or in reading it. Does anybody have an idea how to find the
> bug, preferably without me first learning C++?
>
> Wolf
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Polyhedron-and-cube-Not-a-Valid-2-Manifold-tp14283p14293.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151108/7a27f3f7/attachment.html>

From stempeldergeschichte at googlemail.com  Sun Nov  8 14:03:05 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Sun, 8 Nov 2015 20:03:05 +0100
Subject: [OpenSCAD] 3d hull() with 2d primitives needed!
In-Reply-To: <CAGV6i+P2VmiA7q5iiiw0UT5mJLSui7FEpTB1xTMZOZv4R3Gf-w@mail.gmail.com>
References: <1383590090426-5845.post@n5.nabble.com>
	<D80ECFB3-24AF-4A4F-B39B-009595FDB777@kintel.net>
	<1446026175698-14235.post@n5.nabble.com>
	<1446026881276-14237.post@n5.nabble.com>
	<1446582128351-14276.post@n5.nabble.com>
	<1446839771217-14292.post@n5.nabble.com>
	<CAGV6i+P2VmiA7q5iiiw0UT5mJLSui7FEpTB1xTMZOZv4R3Gf-w@mail.gmail.com>
Message-ID: <CAJgOqADOxh+ye-hZNUhTE0YpfLoaaf01N5+41-o_7RODzStA6Q@mail.gmail.com>

>From a constracten point of view, it would be nice if OpneSCAD would allow
the piecewise construction of polyhedron.
When you do e.g. a extrusion along a path, it would be easier to have 3 for
loop: for the top, the side, and the button.

Mybe with a syntax like:

polyhedron(...);
continue_polyhedron(...);

2015-11-08 17:00 GMT+01:00 doug moen <doug at moens.org>:

> I tried Wolf's ellipsoid in OpenSCAD 2014.03, and got a lot of CGAL
> assertion errors.
>
> Those error messages went away in OpenSCAD 2015.03. However, when I tried
> to intersect the ellipsoid with a cylinder, I got garbage results, and a
> message indicating that my object is non-manifold.
>
> Wolf's program is not a valid OpenSCAD program, and does not construct a
> valid 3D shape. I consider it a bug that there are no error messages in
> OpenSCAD 2015.03 until you try to apply a geometric operation to the
> ellipsoid.
>
> On 6 November 2015 at 14:56, wolf <wv99999 at gmail.com> wrote:
>
>> This code creates an ellipsoid out of individual triangles - not those 2D
>> primitives you find described in the manual, as these are not compatible
>> with CGAL in a 3D environment. Rather, my 2D primitives use an
>> undocumented
>> property of polyhedron().
>>
>> I'll leave the comments in, this is experimental and unfinished code . . .
>> <http://forum.openscad.org/file/n14292/Ellipsoid.ellipsoid>  When
>> finished,
>> I intend to submit the code to the team to be implemented as a variant of
>> surface(). That should improve rendering speed, which is rather slow
>> currently.
>>
>> Wolf
>>
>> a=30;   b=20;   c=10;    //half-axes of ellipse
>> Step=10;
>> StartVal_u=0;   EndVal_u=360;    // 10 seconds, 1224 facets, 614
>> vertices, 2
>> volumes
>> StartVal_v=0;   EndVal_v=180;
>> //StartVal_u=10;   EndVal_u=360;    // 10 seconds, 1190 facets, 614
>> vertices, 1 volumes
>> //StartVal_v=0;   EndVal_v=180;
>>
>>
>>  //scale([a,b,c])    sphere(1,$fn=51);       // used in debugging
>>
>> for (v=[StartVal_v+Step/2:Step:EndVal_v])   for
>> (u=[StartVal_u+Step/2:Step:EndVal_u])   SurfaceElement(u,v);
>>
>>
>> module SurfaceElement(u,v)
>>   { Center=P(u,v);                    // centre vector for
>> SurfaceElement()
>>     P0=P(u-Step/2,v-Step/2);          // corner vector for
>> SurfaceElement()
>>     P1=P(u+Step/2,v-Step/2);          // corner vector for
>> SurfaceElement()
>>     P2=P(u+Step/2,v+Step/2);          // corner vector for
>> SurfaceElement()
>>     P3=P(u-Step/2,v+Step/2);          // corner vector for
>> SurfaceElement()
>>  //   translate(Center)    color("magenta")   cube([.3,.3,.3],
>> center=true);
>> // used in debugging
>> //    translate(P0)        color("red")       cube([.3,.3,.03],
>> center=true);   // used in debugging
>> //    translate(P1)        color("white")     cube([.3,.3,.03],
>> center=true);   // used in debugging
>> //    translate(P2)        color("green")     cube([.3,.3,.03],
>> center=true);   // used in debugging
>> //    translate(P3)        color("yellow")    cube([.3,.3,.03],
>> center=true);   // used in debugging
>> //     polygon(P0,P1,P2);   // accepts only 2-vectors
>> //     polygon(P0,P2,P3);   // accepts only 2-vectors
>>     if(P0 != P1 && P1 != P2)  color("red")     polyhedron
>> (points=[P0,P1,P2], faces=[[0,1,2]]);
>>     if(P0 != P2 && P2 != P3)  color("yellow")  polyhedron
>> (points=[P0,P2,P3], faces=[[0,1,2]]);
>>        // CGAL does'nt like degenerate faces!
>>  //  polyhedron (points=[P0,P1,P2,P3], faces=[[0,1,2,3]]);   // non-planar
>> face, CGAl complains
>>  //   echo(u-Step/2,u+Step/2,v-Step/2,v+Step/2,P0,P1,P2,P3,Center);
>>   }
>>
>>   function P(u,v)=[a*cos(u)*sin(v),b*sin(u)*sin(v),c*cos(v)];  //point on
>> the surface of an ellipsoid
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/3d-hull-with-2d-primitives-needed-tp5845p14292.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151108/a1551483/attachment.html>

From nop.head at gmail.com  Sun Nov  8 14:20:34 2015
From: nop.head at gmail.com (nop head)
Date: Sun, 8 Nov 2015 19:20:34 +0000
Subject: [OpenSCAD] 3d hull() with 2d primitives needed!
In-Reply-To: <CAJgOqADOxh+ye-hZNUhTE0YpfLoaaf01N5+41-o_7RODzStA6Q@mail.gmail.com>
References: <1383590090426-5845.post@n5.nabble.com>
	<D80ECFB3-24AF-4A4F-B39B-009595FDB777@kintel.net>
	<1446026175698-14235.post@n5.nabble.com>
	<1446026881276-14237.post@n5.nabble.com>
	<1446582128351-14276.post@n5.nabble.com>
	<1446839771217-14292.post@n5.nabble.com>
	<CAGV6i+P2VmiA7q5iiiw0UT5mJLSui7FEpTB1xTMZOZv4R3Gf-w@mail.gmail.com>
	<CAJgOqADOxh+ye-hZNUhTE0YpfLoaaf01N5+41-o_7RODzStA6Q@mail.gmail.com>
Message-ID: <CAEEmnrOy86G+oXGX1NtnwcEVQ8ZVwFzDbekJp-qtVVC9hSS6NA@mail.gmail.com>

Polyhedron takes lists and lists can be created with for loops in recent
versions of OpenScad, so you can do exactly that without new syntax.

On 8 November 2015 at 19:03, Peter Falke <
stempeldergeschichte at googlemail.com> wrote:

> From a constracten point of view, it would be nice if OpneSCAD would allow
> the piecewise construction of polyhedron.
> When you do e.g. a extrusion along a path, it would be easier to have 3
> for loop: for the top, the side, and the button.
>
> Mybe with a syntax like:
>
> polyhedron(...);
> continue_polyhedron(...);
>
> 2015-11-08 17:00 GMT+01:00 doug moen <doug at moens.org>:
>
>> I tried Wolf's ellipsoid in OpenSCAD 2014.03, and got a lot of CGAL
>> assertion errors.
>>
>> Those error messages went away in OpenSCAD 2015.03. However, when I tried
>> to intersect the ellipsoid with a cylinder, I got garbage results, and a
>> message indicating that my object is non-manifold.
>>
>> Wolf's program is not a valid OpenSCAD program, and does not construct a
>> valid 3D shape. I consider it a bug that there are no error messages in
>> OpenSCAD 2015.03 until you try to apply a geometric operation to the
>> ellipsoid.
>>
>> On 6 November 2015 at 14:56, wolf <wv99999 at gmail.com> wrote:
>>
>>> This code creates an ellipsoid out of individual triangles - not those 2D
>>> primitives you find described in the manual, as these are not compatible
>>> with CGAL in a 3D environment. Rather, my 2D primitives use an
>>> undocumented
>>> property of polyhedron().
>>>
>>> I'll leave the comments in, this is experimental and unfinished code . .
>>> .
>>> <http://forum.openscad.org/file/n14292/Ellipsoid.ellipsoid>  When
>>> finished,
>>> I intend to submit the code to the team to be implemented as a variant of
>>> surface(). That should improve rendering speed, which is rather slow
>>> currently.
>>>
>>> Wolf
>>>
>>> a=30;   b=20;   c=10;    //half-axes of ellipse
>>> Step=10;
>>> StartVal_u=0;   EndVal_u=360;    // 10 seconds, 1224 facets, 614
>>> vertices, 2
>>> volumes
>>> StartVal_v=0;   EndVal_v=180;
>>> //StartVal_u=10;   EndVal_u=360;    // 10 seconds, 1190 facets, 614
>>> vertices, 1 volumes
>>> //StartVal_v=0;   EndVal_v=180;
>>>
>>>
>>>  //scale([a,b,c])    sphere(1,$fn=51);       // used in debugging
>>>
>>> for (v=[StartVal_v+Step/2:Step:EndVal_v])   for
>>> (u=[StartVal_u+Step/2:Step:EndVal_u])   SurfaceElement(u,v);
>>>
>>>
>>> module SurfaceElement(u,v)
>>>   { Center=P(u,v);                    // centre vector for
>>> SurfaceElement()
>>>     P0=P(u-Step/2,v-Step/2);          // corner vector for
>>> SurfaceElement()
>>>     P1=P(u+Step/2,v-Step/2);          // corner vector for
>>> SurfaceElement()
>>>     P2=P(u+Step/2,v+Step/2);          // corner vector for
>>> SurfaceElement()
>>>     P3=P(u-Step/2,v+Step/2);          // corner vector for
>>> SurfaceElement()
>>>  //   translate(Center)    color("magenta")   cube([.3,.3,.3],
>>> center=true);
>>> // used in debugging
>>> //    translate(P0)        color("red")       cube([.3,.3,.03],
>>> center=true);   // used in debugging
>>> //    translate(P1)        color("white")     cube([.3,.3,.03],
>>> center=true);   // used in debugging
>>> //    translate(P2)        color("green")     cube([.3,.3,.03],
>>> center=true);   // used in debugging
>>> //    translate(P3)        color("yellow")    cube([.3,.3,.03],
>>> center=true);   // used in debugging
>>> //     polygon(P0,P1,P2);   // accepts only 2-vectors
>>> //     polygon(P0,P2,P3);   // accepts only 2-vectors
>>>     if(P0 != P1 && P1 != P2)  color("red")     polyhedron
>>> (points=[P0,P1,P2], faces=[[0,1,2]]);
>>>     if(P0 != P2 && P2 != P3)  color("yellow")  polyhedron
>>> (points=[P0,P2,P3], faces=[[0,1,2]]);
>>>        // CGAL does'nt like degenerate faces!
>>>  //  polyhedron (points=[P0,P1,P2,P3], faces=[[0,1,2,3]]);   //
>>> non-planar
>>> face, CGAl complains
>>>  //   echo(u-Step/2,u+Step/2,v-Step/2,v+Step/2,P0,P1,P2,P3,Center);
>>>   }
>>>
>>>   function P(u,v)=[a*cos(u)*sin(v),b*sin(u)*sin(v),c*cos(v)];  //point on
>>> the surface of an ellipsoid
>>>
>>>
>>>
>>> --
>>> View this message in context:
>>> http://forum.openscad.org/3d-hull-with-2d-primitives-needed-tp5845p14292.html
>>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151108/8c9000bb/attachment.html>

From rl.ward at bigpond.com  Sun Nov  8 16:32:11 2015
From: rl.ward at bigpond.com (Rob Ward)
Date: Mon, 9 Nov 2015 08:32:11 +1100
Subject: [OpenSCAD] printing a punch out to avoid needing support
In-Reply-To: <563F54C1.2050907@jonbondy.com>
References: <563F54C1.2050907@jonbondy.com>
Message-ID: <563FBF5B.4000403@bigpond.com>

Nice one!! Could be a very good practical suggestion to go in the SCAD 
wiki somewhere?
Maybe there are other openSCAD tricks that people can share in the wiki 
that makes 3-D printing projects more viable/versatile?

*Rob*<http://www.laketyersbeach.net.au/XP2XU.html>

On 09/11/15 00:57, jon wrote:
> // box sizes
> bX = 65.5;
> bY = 116;
> bZ = 36;
> wall = 2; // wall thickness
> pcbThick = 2; // PCB thickness
> pcbLen = bY; // length of PCB in slot
> lcdX = 51;
> lcdY = 72;
> rch = 0.1;
>
> module slot()
>     cube([wall + rch, pcbLen, pcbThick]);
>
> module Top() {
>     translate([-1.5*bX, 0, 0]) {
>         cube([bX + 4*wall, 3, bZ + 2*wall]);
>         translate([2 * wall + rch, 3, wall + rch])
>             cube([bX - 2*rch, 2, bZ - 2*rch]);
>         }
>     }
>
> module Box() {
>     difference() {
>         // exterior; X is thicker for PC board slot
>         cube([bX + 4*wall, bY + wall, bZ + 2*wall]);
>         // interior
>         translate([2*wall, wall, wall])
>             cube([bX, bY + rch, bZ]);
>         // slots for PC board
>         translate([wall, bY - pcbLen + wall + rch, 32])
>             slot();
>         translate([2*wall + bX - rch, bY - pcbLen + wall + rch, 32])
>             slot();
>         // hole for LCD - deprecated
>         *translate([wall + 5, wall + 16, bZ + wall - rch])
>             cube([lcdX, lcdY, wall + 2*rch]);
>         // perforation for LCD
>         xMargin = (bX + 4*wall - lcdX) / 2;
>         difference() {
>             translate([xMargin, wall + 27, bZ + wall + 2*rch])
>                 cube([lcdX, lcdY, wall - 2*rch]);
>             translate([xMargin + 0.25, wall + 27 + 0.25, bZ + wall - 
> 2*rch])
>                 cube([lcdX - 0.5, lcdY - 0.5, wall + 4*rch]);
>             }
>         // hole for hanging
>             translate([(bX + 4*wall)/2, 0.85*(bY + 2*wall), -1])
>                 rotate([0, 0, 90])
>                     cylinder(h = 10, r = 3, $fn = 3);
>         // hole for USB
>         translate([14.5 + 2*wall, -1, 5 + wall])
>             cube([12.5, 11.25, 11]);
>         // hole for DC
>         translate([45.5 + 2*wall, -1, 4.5 + wall])
>             cube([9.5, 11.5, 11]);
>         }
>     }
>
> Box();
> Top(); 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151109/a97eef5c/attachment-0001.html>

From mschafer at wireframe.biz  Sun Nov  8 16:55:25 2015
From: mschafer at wireframe.biz (Neon22)
Date: Sun, 8 Nov 2015 14:55:25 -0700 (MST)
Subject: [OpenSCAD] printing a punch out to avoid needing support
In-Reply-To: <563FBF5B.4000403@bigpond.com>
References: <563F54C1.2050907@jonbondy.com> <563FBF5B.4000403@bigpond.com>
Message-ID: <1447019725975-14313.post@n5.nabble.com>

Nice idea. Visually it looks like this
<http://forum.openscad.org/file/n14313/2elzecj.jpg> 



--
View this message in context: http://forum.openscad.org/printing-a-punch-out-to-avoid-needing-support-tp14303p14313.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Sun Nov  8 17:41:13 2015
From: nop.head at gmail.com (nop head)
Date: Sun, 8 Nov 2015 22:41:13 +0000
Subject: [OpenSCAD] printing a punch out to avoid needing support
In-Reply-To: <1447019725975-14313.post@n5.nabble.com>
References: <563F54C1.2050907@jonbondy.com> <563FBF5B.4000403@bigpond.com>
	<1447019725975-14313.post@n5.nabble.com>
Message-ID: <CAEEmnrM+FpqHMwLBPpgAnQqnrLc4gWBe3=mcHA+pAMZZjQNY+w@mail.gmail.com>

When I want to support something like that I start the support pillar on
the build platform and slant it inwards so it just meets the object below
the bridge. That way there is only one interface to be separated. I make it
hollow, two outlines thick, so it supports the outline of the bridge and
the ends of the infill. Then the infill can be normal diagonal fill and it
doesn't rely on the slicer detecting bridge direction.

On 8 November 2015 at 21:55, Neon22 <mschafer at wireframe.biz> wrote:

> Nice idea. Visually it looks like this
> <http://forum.openscad.org/file/n14313/2elzecj.jpg>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/printing-a-punch-out-to-avoid-needing-support-tp14303p14313.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151108/c59f7f55/attachment.html>

From c.t.chin at szu.edu.cn  Mon Nov  9 02:50:19 2015
From: c.t.chin at szu.edu.cn (=?UTF-8?B?Q0hJTiwgQ2hpZW4gVGluZyDpkrHlu7rluq0=?=)
Date: Mon, 9 Nov 2015 15:50:19 +0800
Subject: [OpenSCAD] User manual order
In-Reply-To: <CAMyDR6JyJXarZptjzChZckgK3c8hVEmCtzkohtvQCgGQaPSxfQ@mail.gmail.com>
References: <1446498030103-14271.post@n5.nabble.com>
	<563972BB.8010008@szu.edu.cn>
	<CAMyDR6JyJXarZptjzChZckgK3c8hVEmCtzkohtvQCgGQaPSxfQ@mail.gmail.com>
Message-ID: <5640503B.9050005@szu.edu.cn>

In my unwritten book, I open the introduction with the following paragraphs:

The official introduction page of OpenSCAD declares it is a software for 
creating solid 3D CAD models.A better description is found in the 
tagline: The Programmer?s Solid 3D CAD Modeller.Unlike most CAD 
software, which have the designer working with data specifying a model, 
in OpenSCAD, the designer write a program to create a model.This design 
philosophy encourage designers to /engineer/ a parametric model instead 
of /sculpting/ a work of creation.

Software like Google Sketch-up is the natural choice for designers who 
are not trained in mathematics and programming and who need to create 
organic or artistic designs.

Software like AutoCAD and Pro/Engineer are used by many enterprises and 
professionals for mechanical or structure designs.They are loaded with 
very advanced and powerful features which would be very challenging (and 
likely too costly) for the amateur or occasional users.

OpenSCAD is the best choice for designers who needs mathematical 
precision in the creation but cannot or would not dive into the deep 
ocean of a full-brown professional CAD package.The instruction set is 
quite small (and it?s fair to complain that it lacks powerful features), 
but its simplicity is a great advantage for generalists, hobbyists and 
professionals who possess a number of technical and artistic skills and 
integrate them in his or her projects.


In another word, if you and your class come to OpenSCAD without at least 
some exposure to computer programming then you ought to think a bit 
harder if there's a easier way to build your projects.  Have you looked 
into Google SketchUp, AutoDesk 123D, TinkerCAD?

Of course it's not forbidden to learn OpenSCAD as your first programming 
language, but there are a variety of choices for building a design (for 
3D printing, I presume?).  Blender (I presume to characterize it) is 
attractive to artists, 123D might be good for mechanical  engineers who 
knew drafting, and OpenSCAD is attractive to programmers.


On 11/6/2015 4:25 AM, Jerry Davis wrote:
> In addition to the reorder and Chien TIng's nice post.
>
> I have been teaching openscad to some members of my Amateur Radio Club.
> Most have not come from ANY programming type background, and are 
> having trouble.
> I have retired from doing programming for 40+ years.
>
> A lot of this is over their heads, but they want to learn.
>
> In the first steps section, I would like to see a detailed tutorial on 
> building some simple part. The steps taken, and why, and what each 
> little step looks like when previewed.
>
> Then you could maybe link out to some youtube, and other links that 
> you know of that are "tutorials" or how to's.
>
> I am not sure that everyone coming to openscad has a programming 
> background. Having done scripting for years it is easy for me to KNOW 
> that for every ( you must have a corresponding ), and for every {, a 
> }. But I know there are some people that wonder why at just those 
> simple things.
>
> I would be willing to help in this regard, if asked. Being retired, I 
> DO have the time.
>
> Jerry
>
>
> --
> Extra Ham Operator: K7AZJ
> Registered Linux User: 275424
> Raspberry Pi and Arduino developer
>
> /The most exciting phrase to hear in science - the one that heralds 
> new discoveries - is not "Eureka!" but "That's funny...".
> /- Isaac. Asimov
>
> /I//f you give someone a program, you will frustrate them for a day; 
> if you teach them how to program, you will frustrate them for a lifetime.
> /- Anonymous
>
> /If writing good code requires very little comments, then writing 
> really excellent code requires no comments at all!
> /- Ken Thompson
>
>
> On Tue, Nov 3, 2015 at 7:51 PM, CHIN, Chien Ting ??? 
> <c.t.chin at szu.edu.cn <mailto:c.t.chin at szu.edu.cn>> wrote:
>
>     Dear All,
>
>     My first post!  Hopefully many more will come.
>
>     I salute you for taking on this important and monumental task. 
>     The current doc is just functional enough but far from
>     professional quality.  I too have started making my own "book" 
>     with a faintest hope of writing and publishing an actual book.
>     When I use OpenSCAD, I like to have a "dead-tree version" by my
>     keyboard.  And I can imagine a lot of users would similarly
>     desired a nicely-printed book.
>
>     But alas, I discipline myself NOT to spend time on my "book"
>     because I should put my time on more "important" things.
>
>     So perhaps my best hope to air my views (some might be considered
>     radical) and perhaps trick you into writing the book that I want
>     to have, but may not want to write :P
>
>     Firstly, I am mystified why there's such a thing as 2D
>     __subsystem__.  I use both 2D and 3D primitives and
>     transformations frequently and I find no sense in talking about a
>     subsystem.  It makes no sense as the same as talking about a
>     vector subsystem or string subsystem. It is very confusing because
>     "offset" which operates on 2D isn't found in the 2D subsystem
>     chapter but in the Transformation chapter/section.  Similarly it's
>     arbitrary to put projection in 3D and extrusions in 2D.
>
>     I propose merging all primitives in one chapter, first listing all
>     the solids: cube, sphere etc, then list the 2D shapes, square,
>     circle and polygon.  A short section preceding the primitives
>     should clearly explain 2D and 3D objects and preview a few
>     commands (to be covered later) that transform between 2D and 3D
>     objects.
>
>     Then after primitives, all transformations should be covered. 
>     Each should be clearly labelled to work on 3D objects, 2D objects
>     or both.  It is easy to create a module that operates on a mix of
>     2D and 3D children.  It makes no sense to divide projection,
>     extrusions and "common" transformation (e.g. rotate) into three
>     different sections.
>
>     Now, for a radical idea: treat "for", "intersection_for", "if" as
>     transformations.
>
>     I have more radical ideas/views, but enough for today: just
>     expunge "subsystem" and treat "for" as a transformation.
>
>     Hope I am stirring the pot in a positive way.
>
>
>
>     On 11/3/2015 5:00 AM, L Boyd wrote:
>
>         Although less important with the cheat sheet, this is my 1st
>         pass at,
>         hopefully, a more logical order.
>
>         The biggest change is separating the language reference from
>         the rest
>
>         Link on this trial page are not active.
>
>         Trial_Reorder
>         <https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Trial_Reorder>
>
>         Please post your comments
>
>
>
>         --
>         View this message in context:
>         http://forum.openscad.org/User-manual-order-tp14271.html
>         Sent from the OpenSCAD mailing list archive at Nabble.com.
>
>         _______________________________________________
>         OpenSCAD mailing list
>         Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
>         http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>     -- 
>     ??? ?????????
>     ???? ???????
>
>     CHIN, Chien Ting, Professor, Vice Chairman (Education)
>     Department of Biomedical Engineering
>     Shenzhen University
>     Tel: +86-755-8667-1915 <tel:%2B86-755-8667-1915>
>
>
>
>
>     _______________________________________________
>     OpenSCAD mailing list
>     Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
>     http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

-- 
??? ?????????
???? ???????

CHIN, Chien Ting, Professor, Vice Chairman (Education)
Department of Biomedical Engineering
Shenzhen University
Tel: +86-755-8667-1915

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151109/1e200423/attachment-0001.html>

From vo.publique at gmail.com  Mon Nov  9 05:47:49 2015
From: vo.publique at gmail.com (vicnet)
Date: Mon, 9 Nov 2015 03:47:49 -0700 (MST)
Subject: [OpenSCAD] How to make...
In-Reply-To: <1447023426433-14315.post@n5.nabble.com>
References: <1447023426433-14315.post@n5.nabble.com>
Message-ID: <1447066069139-14317.post@n5.nabble.com>

Hello,

Peharps with  offset
<https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Transformations#offset>  
module and linear_extrusion ?

a+
Vicnet



--
View this message in context: http://forum.openscad.org/How-to-make-tp14315p14317.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jon at jonbondy.com  Mon Nov  9 10:49:45 2015
From: jon at jonbondy.com (jon)
Date: Mon, 9 Nov 2015 10:49:45 -0500
Subject: [OpenSCAD] using a PNG logo
Message-ID: <5640C099.9000209@jonbondy.com>

I've been "engraving" a logo on a surface by differencing some text that 
I created using write().

The customer now supplied a logo file (attached as a PNG).  I can get 
the thing to appear using

             scale([0.1, 0.1, 0.1])
                surface(file = 
"d:/jon/Logo_AnywhereTideClock_Inverted.png", center = true);

The problem is that once that is done, OpenSCAD becomes essentially 
unresponsive.  F5 and F6 take forever, and the visible model when using 
F5 is very slow.  I tried using render() but that did not help either.

I tried computing an STL separately and then using import(), but that is 
equally slow (the STL is 150KB).

Any idea how to "emboss" an arbitrary PNG onto a surface without making 
OpenSCAD unusable?

Jon
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Logo_AnywhereTideClock_Inverted.PNG
Type: image/png
Size: 52900 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151109/39e2b5dd/attachment-0001.PNG>

From gregorybartonfrost at gmail.com  Mon Nov  9 10:53:57 2015
From: gregorybartonfrost at gmail.com (Greg Frost)
Date: Tue, 10 Nov 2015 02:23:57 +1030
Subject: [OpenSCAD] How to make...
In-Reply-To: <1447066069139-14317.post@n5.nabble.com>
References: <1447023426433-14315.post@n5.nabble.com>
	<1447066069139-14317.post@n5.nabble.com>
Message-ID: <2FAED85E-5505-46CA-AE06-D087532F50FD@gmail.com>

This should do something like you want:

http://www.thingiverse.com/thing:135408

Greg Frost

> On 9 Nov 2015, at 9:17 pm, vicnet <vo.publique at gmail.com> wrote:
> 
> Hello,
> 
> Peharps with  offset
> <https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Transformations#offset>  
> module and linear_extrusion ?
> 
> a+
> Vicnet
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/How-to-make-tp14315p14317.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


From marius at kintel.net  Mon Nov  9 11:47:34 2015
From: marius at kintel.net (Marius Kintel)
Date: Mon, 9 Nov 2015 11:47:34 -0500
Subject: [OpenSCAD] using a PNG logo
In-Reply-To: <5640C099.9000209@jonbondy.com>
References: <5640C099.9000209@jonbondy.com>
Message-ID: <15B53D86-E2A1-4EC0-8FC9-F64E681480C9@kintel.net>

For this particular design, get a vector file rather than a bitmap, or remake the design using OpenSCAD primitives.
surface() is going to destroy responsiveness as it has to generate massive amounts of polygons.

 -Marius

> On Nov 9, 2015, at 10:49 AM, jon <jon at jonbondy.com> wrote:
> 
> I've been "engraving" a logo on a surface by differencing some text that I created using write().
> 
> The customer now supplied a logo file (attached as a PNG).  I can get the thing to appear using
> 
>            scale([0.1, 0.1, 0.1])
>               surface(file = "d:/jon/Logo_AnywhereTideClock_Inverted.png", center = true);
> 
> The problem is that once that is done, OpenSCAD becomes essentially unresponsive.  F5 and F6 take forever, and the visible model when using F5 is very slow.  I tried using render() but that did not help either.
> 
> I tried computing an STL separately and then using import(), but that is equally slow (the STL is 150KB).
> 
> Any idea how to "emboss" an arbitrary PNG onto a surface without making OpenSCAD unusable?
> 
> Jon
> <Logo_AnywhereTideClock_Inverted.PNG>_______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From ed.nisley at pobox.com  Mon Nov  9 12:58:24 2015
From: ed.nisley at pobox.com (Ed Nisley)
Date: Mon, 09 Nov 2015 12:58:24 -0500
Subject: [OpenSCAD] using a PNG logo
In-Reply-To: <5640C099.9000209@jonbondy.com>
References: <5640C099.9000209@jonbondy.com>
Message-ID: <5640DEC0.6010001@pobox.com>

On 11/09/2015 10:49 AM, jon wrote:
> how to "emboss" an arbitrary PNG

Use a much smaller image with the worst resolution = fewest pixels you 
can possibly stand.

A year or two ago, OpenSCAD could handle an image up to about 300x300 
pixels. That may have changed one way or the other, but it'll give you 
an idea of how small "fewest" must be.

Here's the checklist I used to create PNG images for cookie cutter outlines:

http://softsolder.com/2012/11/29/automated-cookie-cutters-image-preparation-checklist/

And for chocolate molds:

http://softsolder.com/2014/02/14/chocolate-mold-image-preparation-checklist/

When you need more dots, surface() is not your friend...

-- 
Ed
softsolder.com


From bradpitcher at gmail.com  Mon Nov  9 13:05:32 2015
From: bradpitcher at gmail.com (Brad Pitcher)
Date: Mon, 09 Nov 2015 18:05:32 +0000
Subject: [OpenSCAD] using a PNG logo
In-Reply-To: <5640DEC0.6010001@pobox.com>
References: <5640C099.9000209@jonbondy.com> <5640DEC0.6010001@pobox.com>
Message-ID: <CAMFpZriv=8i_EVaTZe5gNeZB+KTY935hFYftkzH4k-JZWwkmmg@mail.gmail.com>

Trace the bitmap to a path in Inkscape and export it the path to *.dxf[0]
or even*.scad[1] using an Inkscape plugin

[0] http://www.thingiverse.com/thing:14221
[1] http://www.thingiverse.com/thing:25036

On Mon, Nov 9, 2015 at 9:59 AM Ed Nisley <ed.nisley at pobox.com> wrote:

> On 11/09/2015 10:49 AM, jon wrote:
> > how to "emboss" an arbitrary PNG
>
> Use a much smaller image with the worst resolution = fewest pixels you
> can possibly stand.
>
> A year or two ago, OpenSCAD could handle an image up to about 300x300
> pixels. That may have changed one way or the other, but it'll give you
> an idea of how small "fewest" must be.
>
> Here's the checklist I used to create PNG images for cookie cutter
> outlines:
>
>
> http://softsolder.com/2012/11/29/automated-cookie-cutters-image-preparation-checklist/
>
> And for chocolate molds:
>
>
> http://softsolder.com/2014/02/14/chocolate-mold-image-preparation-checklist/
>
> When you need more dots, surface() is not your friend...
>
> --
> Ed
> softsolder.com
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151109/6683db6e/attachment.html>

From oz.at.michael at gmail.com  Mon Nov  9 15:14:27 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Mon, 9 Nov 2015 13:14:27 -0700 (MST)
Subject: [OpenSCAD] How to make...
In-Reply-To: <1447023426433-14315.post@n5.nabble.com>
References: <1447023426433-14315.post@n5.nabble.com>
Message-ID: <1447100067236-14324.post@n5.nabble.com>

Hi, 

Welcome to the forum.

Your post is still flagged as "This post has NOT been accepted by the
mailing list yet", so nobody gets it unless they look. You need to subscribe
to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.




-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/How-to-make-tp14315p14324.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Mon Nov  9 16:02:08 2015
From: mschafer at wireframe.biz (Neon22)
Date: Mon, 9 Nov 2015 14:02:08 -0700 (MST)
Subject: [OpenSCAD] using a PNG logo
In-Reply-To: <CAMFpZriv=8i_EVaTZe5gNeZB+KTY935hFYftkzH4k-JZWwkmmg@mail.gmail.com>
References: <5640C099.9000209@jonbondy.com> <5640DEC0.6010001@pobox.com>
	<CAMFpZriv=8i_EVaTZe5gNeZB+KTY935hFYftkzH4k-JZWwkmmg@mail.gmail.com>
Message-ID: <1447102928641-14325.post@n5.nabble.com>

I also advise inkscape and the "Trace bitmap" command and then export using
the openscad export script.
But I made a v7 which works better if you're going to use the polygon shape
in a dedicated piece of code.
It puts the polygon into a avriable of points and paths if required.
Here: 
- http://www.thingiverse.com/thing:1065500

But then you may have to use png for some reason. In which case make it as
small as possible.



--
View this message in context: http://forum.openscad.org/using-a-PNG-logo-tp14319p14325.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Mon Nov  9 16:18:21 2015
From: marius at kintel.net (Marius Kintel)
Date: Mon, 9 Nov 2015 16:18:21 -0500
Subject: [OpenSCAD] using a PNG logo
In-Reply-To: <1447102928641-14325.post@n5.nabble.com>
References: <5640C099.9000209@jonbondy.com> <5640DEC0.6010001@pobox.com>
	<CAMFpZriv=8i_EVaTZe5gNeZB+KTY935hFYftkzH4k-JZWwkmmg@mail.gmail.com>
	<1447102928641-14325.post@n5.nabble.com>
Message-ID: <50A98CC4-3412-4968-8EEC-08320CC8DCCB@kintel.net>

Btw.,

For the adventurous, there is an experimental bitmap tracer in a separate OpenSCAD branch:
https://github.com/openscad/openscad/pull/1110
https://github.com/openscad/openscad/tree/potrace

 -Marius



From sukritgg at gmail.com  Mon Nov  9 16:49:38 2015
From: sukritgg at gmail.com (sukrit_gupta)
Date: Mon, 9 Nov 2015 14:49:38 -0700 (MST)
Subject: [OpenSCAD] Compulsory distinct/visible Projection of certain objects
Message-ID: <1447105778344-14327.post@n5.nabble.com>

For the following code:
projection(cut = true) cylinder (d= 16, h =50, center = true);
projection(cut = true) cube (45, center = true);

is it possible with openSCAD that I can get both circle and square for the
above code? 
i.e Can I get compulsory point generation of circle object.
I want to export it to DXF.

In what other ways, can the above objective be achieved?



--
View this message in context: http://forum.openscad.org/Compulsory-distinct-visible-Projection-of-certain-objects-tp14327.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Mon Nov  9 16:58:39 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 09 Nov 2015 22:58:39 +0100
Subject: [OpenSCAD] Compulsory distinct/visible Projection of certain
 objects
In-Reply-To: <1447105778344-14327.post@n5.nabble.com>
References: <1447105778344-14327.post@n5.nabble.com>
Message-ID: <5641170F.50804@gmx.de>

On 11/09/2015 10:49 PM, sukrit_gupta wrote:
> For the following code:
> projection(cut = true) cylinder (d= 16, h =50, center = true);
> projection(cut = true) cube (45, center = true);
> 
> is it possible with openSCAD that I can get both circle and square for the
> above code? 
>
like so?

difference() {
	square(45, center = true);
	circle(d = 16);
}

ciao,
  Torsten.



From c.t.chin at szu.edu.cn  Mon Nov  9 22:32:34 2015
From: c.t.chin at szu.edu.cn (=?UTF-8?B?Q0hJTiwgQ2hpZW4gVGluZyDpkrHlu7rluq0=?=)
Date: Tue, 10 Nov 2015 11:32:34 +0800
Subject: [OpenSCAD] using a PNG logo
In-Reply-To: <5640C099.9000209@jonbondy.com>
References: <5640C099.9000209@jonbondy.com>
Message-ID: <56416552.5010206@szu.edu.cn>

Yeah I think the number of pixels is killing OpenSCAD due to the 
unnecessarily large number of polygons.  This particular design is 
simple enough that it OUGHT to be generated with some vector-based 
format.  By .DXF as someone suggested or re-design it from OpenSCAD coding.

I've made 512x512 bitmap embossing on OpenSCAD with satisfactory result 
(pre-2015-03).

On 11/9/2015 11:49 PM, jon wrote:
> I've been "engraving" a logo on a surface by differencing some text 
> that I created using write().
>
> The customer now supplied a logo file (attached as a PNG).  I can get 
> the thing to appear using
>
>             scale([0.1, 0.1, 0.1])
>                surface(file = 
> "d:/jon/Logo_AnywhereTideClock_Inverted.png", center = true);
>
> The problem is that once that is done, OpenSCAD becomes essentially 
> unresponsive.  F5 and F6 take forever, and the visible model when 
> using F5 is very slow.  I tried using render() but that did not help 
> either.
>
> I tried computing an STL separately and then using import(), but that 
> is equally slow (the STL is 150KB).
>
> Any idea how to "emboss" an arbitrary PNG onto a surface without 
> making OpenSCAD unusable?
>
> Jon
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

-- 
??? ?????????
???? ???????

CHIN, Chien Ting, Professor, Vice Chairman (Education)
Department of Biomedical Engineering
Shenzhen University
Tel: +86-755-8667-1915

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151110/86f1011d/attachment.html>

From c.t.chin at szu.edu.cn  Mon Nov  9 23:02:48 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Mon, 9 Nov 2015 21:02:48 -0700 (MST)
Subject: [OpenSCAD] Compulsory distinct/visible Projection of certain
	objects
In-Reply-To: <5641170F.50804@gmx.de>
References: <1447105778344-14327.post@n5.nabble.com> <5641170F.50804@gmx.de>
Message-ID: <1447128168795-14330.post@n5.nabble.com>

It does do the trick since it makes a DXF with a square minus a circle.  But
I have a feeling this may not satisfy mr. gupta.  I am guessing he wants a
general solution that lets him make 2D (traditional drafting) DXF out of
some 3D models he designed. 

What if one shape isn't entirely within another shape?  difference() won't
preserve both original shapes.  The reason his code doesn't work (missing
circle) is that OpenSCAD implicitly union() all objects at the same level
(top level) unless it's being fed to a module (such as difference()). 
Therefore you can never preserve the separate completeness of two
overlapping objects.  In fact, overlapping or not doesn't matter.  OpenSCAD
treats all objects as one, if they don't overlap it just become a disjointed
object.  

So except for those special cases (every shape's boundaries don't cross each
other) Signor Torsten's solution won't work.  I remember coming across a
project that claims to create classic 2D drafts from OpenSCAD models, give
that a try.  



--
View this message in context: http://forum.openscad.org/Compulsory-distinct-visible-Projection-of-certain-objects-tp14327p14330.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Mon Nov  9 23:09:58 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Mon, 9 Nov 2015 21:09:58 -0700 (MST)
Subject: [OpenSCAD] User manual order
In-Reply-To: <5640503B.9050005@szu.edu.cn>
References: <1446498030103-14271.post@n5.nabble.com>
	<563972BB.8010008@szu.edu.cn>
	<CAMyDR6JyJXarZptjzChZckgK3c8hVEmCtzkohtvQCgGQaPSxfQ@mail.gmail.com>
	<5640503B.9050005@szu.edu.cn>
Message-ID: <1447128598230-14331.post@n5.nabble.com>

I hear you, L.  I had the same idea even before 2015-03 was released but ...
with due respect to the developers/writers who contributed so much already,
a pure re-ordering without adding and correcting the text would not be
satisfactory.  For example:

Matrix multiplication:
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language#Matrix_Multiplication
The text is completely inadequate.  It is not reasonable to expect most
readers to understand "matrix multiplication", as many have never learned
linear algebra and most who have do not retain that knowledge.  At least a 
reference (e.g. Wikipedia) and an example is needed. The behavior of
ill-posed matrix multiplication () should be explained (result in undef).

The text for minkowski() is also inadequate,  it is not an easy concept to
explain but at least an attempt should be made, and at least two examples
(2D and 3D) should be given. 

There are more! 

I've been wondering about the "source code" for the documentation,
especially with the "online" and "print" editions being somewhat different. 
Where can I find the list(s) and the files themselves?  Then I can actually
put in my (draft) edit for the community to consider instead of just whining
about it on the mailing list. 




--
View this message in context: http://forum.openscad.org/User-manual-order-tp14271p14331.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Mon Nov  9 23:22:10 2015
From: doug at moens.org (doug moen)
Date: Mon, 9 Nov 2015 23:22:10 -0500
Subject: [OpenSCAD] User manual order
In-Reply-To: <1447128598230-14331.post@n5.nabble.com>
References: <1446498030103-14271.post@n5.nabble.com>
	<563972BB.8010008@szu.edu.cn>
	<CAMyDR6JyJXarZptjzChZckgK3c8hVEmCtzkohtvQCgGQaPSxfQ@mail.gmail.com>
	<5640503B.9050005@szu.edu.cn>
	<1447128598230-14331.post@n5.nabble.com>
Message-ID: <CAGV6i+Ok-dxA6Z4d8oxv1zrzCeXGBJ+vVdsaaj+sF-bH4LYpPA@mail.gmail.com>

I am hoping that L will put both the print and online editions into the
same order.

On Monday, 9 November 2015, ctchin <c.t.chin at szu.edu.cn> wrote:

> I hear you, L.  I had the same idea even before 2015-03 was released but
> ...
> with due respect to the developers/writers who contributed so much already,
> a pure re-ordering without adding and correcting the text would not be
> satisfactory.  For example:
>
> Matrix multiplication:
>
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language#Matrix_Multiplication
> The text is completely inadequate.  It is not reasonable to expect most
> readers to understand "matrix multiplication", as many have never learned
> linear algebra and most who have do not retain that knowledge.  At least a
> reference (e.g. Wikipedia) and an example is needed. The behavior of
> ill-posed matrix multiplication () should be explained (result in undef).
>
> The text for minkowski() is also inadequate,  it is not an easy concept to
> explain but at least an attempt should be made, and at least two examples
> (2D and 3D) should be given.
>
> There are more!
>
> I've been wondering about the "source code" for the documentation,
> especially with the "online" and "print" editions being somewhat different.
> Where can I find the list(s) and the files themselves?  Then I can actually
> put in my (draft) edit for the community to consider instead of just
> whining
> about it on the mailing list.
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/User-manual-order-tp14271p14331.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org <javascript:;>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151109/b0c96f2c/attachment.html>

From c.t.chin at szu.edu.cn  Tue Nov 10 00:21:18 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Mon, 9 Nov 2015 22:21:18 -0700 (MST)
Subject: [OpenSCAD] Improving the doc
Message-ID: <1447132878960-14333.post@n5.nabble.com>

There... I'm starting to put my words where my mouth is... ehh something like
that.  

I've extensively edited a small (manageable) section of the doc:
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language#Relational_Operators

Next I may tackle the more tricky Matrix Multiplication.

Suggestion and criticism welcome. 



--
View this message in context: http://forum.openscad.org/Improving-the-doc-tp14333.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From sukritgg at gmail.com  Tue Nov 10 02:36:12 2015
From: sukritgg at gmail.com (sukrit_gupta)
Date: Tue, 10 Nov 2015 00:36:12 -0700 (MST)
Subject: [OpenSCAD] Compulsory distinct/visible Projection of certain
	objects
In-Reply-To: <5641170F.50804@gmx.de>
References: <1447105778344-14327.post@n5.nabble.com> <5641170F.50804@gmx.de>
Message-ID: <1447140972768-14334.post@n5.nabble.com>

tp3 wrote
> difference() { 
>         square(45, center = true); 
>         circle(d = 16); 
> }

Thanks.
This code also works:
projection(cut = true) 
difference(){
cube (45, center = true);
cylinder (d= 16, h =50, center = true); 
}

This difference() approach will be valid only till the objects don't
intersect with each other. This won't work in the following case:
projection(cut = true) 
difference(){
cube (45, center = true);
translate([22.5,0,0])
cylinder (d= 16, h =50, center = true); 
}

Adding a new feature to add this support will be helpful in projection. eg.
projection(cut = true) 
{cube (45, center = true);
translate([22.5,0,0])
##cylinder (d= 16, h =50, center = true); 
}
where ## under projection() denotes compulsory projection.



--
View this message in context: http://forum.openscad.org/Compulsory-distinct-visible-Projection-of-certain-objects-tp14327p14334.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From sukritgg at gmail.com  Tue Nov 10 02:46:32 2015
From: sukritgg at gmail.com (sukrit_gupta)
Date: Tue, 10 Nov 2015 00:46:32 -0700 (MST)
Subject: [OpenSCAD] Compulsory distinct/visible Projection of certain
	objects
In-Reply-To: <1447128168795-14330.post@n5.nabble.com>
References: <1447105778344-14327.post@n5.nabble.com> <5641170F.50804@gmx.de>
	<1447128168795-14330.post@n5.nabble.com>
Message-ID: <1447141592398-14335.post@n5.nabble.com>

ctchin wrote
> I am guessing he wants a general solution that lets him make 2D
> (traditional drafting) DXF out of some 3D models he designed. 

Yes, I want a general solution.


ctchin wrote
> I remember coming across a project that claims to create classic 2D drafts
> from OpenSCAD models, give that a try.

Can you share the link of that project that you came across?



--
View this message in context: http://forum.openscad.org/Compulsory-distinct-visible-Projection-of-certain-objects-tp14327p14335.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From wv99999 at gmail.com  Tue Nov 10 04:56:35 2015
From: wv99999 at gmail.com (wolf)
Date: Tue, 10 Nov 2015 02:56:35 -0700 (MST)
Subject: [OpenSCAD] Compulsory distinct/visible Projection of certain
	objects
In-Reply-To: <1447141592398-14335.post@n5.nabble.com>
References: <1447105778344-14327.post@n5.nabble.com> <5641170F.50804@gmx.de>
	<1447128168795-14330.post@n5.nabble.com>
	<1447141592398-14335.post@n5.nabble.com>
Message-ID: <1447149395892-14337.post@n5.nabble.com>

Google for dimlines.scad
Wolf



--
View this message in context: http://forum.openscad.org/Compulsory-distinct-visible-Projection-of-certain-objects-tp14327p14337.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From wv99999 at gmail.com  Tue Nov 10 05:55:26 2015
From: wv99999 at gmail.com (wolf)
Date: Tue, 10 Nov 2015 03:55:26 -0700 (MST)
Subject: [OpenSCAD] Polyhedron()
Message-ID: <1447152926772-14338.post@n5.nabble.com>

A few days ago I  posted
<http://forum.openscad.org/3d-hull-with-2d-primitives-needed-td5845.htmlhttp://>  
a piece of code creating an ellipsoid out of individual polyhedron() faces.
As  doug.moen
<http://forum.openscad.org/Polyhedron-and-cube-Not-a-Valid-2-Manifold-td14283.html>  
pointed out, it looked like a solid, but was just a collection of faces.
Here I show what happened, and why, and how to make it a solid.

First, recall that 
polyhedron
(points=[[0,0,0],[0,1,0],[0,1,1],[0,0,1],[1,0,0],[1,1,0],[1,1,1],[1,0,1]], 
                    
faces=[[0,1,2,3],[4,5,6,7],[3,2,6,7],[1,5,6,2],[0,4,7,3],[0,1,5,4]]);
creates a cube, which is a solid.
Multiple calls 
polyhedron (points=[[0,0,0],[0,1,0],[0,1,1],[0,0,1]],faces=[[0,1,2,3]]);             
polyhedron (points=[[1,0,0],[1,1,0],[1,1,1],[1,0,1]],faces=[[0,1,2,3]]);             
polyhedron (points=[[0,0,1],[0,1,1],[1,1,1],[1,0,1]],faces=[[0,1,2,3]]);             
polyhedron (points=[[0,1,0],[1,1,0],[1,1,1],[0,1,1]],faces=[[0,1,2,3]]);             
polyhedron (points=[[0,0,0],[1,0,0],[1,0,1],[0,0,1]],faces=[[0,1,2,3]]);             
polyhedron (points=[[0,0,0],[0,1,0],[1,1,0],[1,0,0]],faces=[[0,1,2,3]]);
create the same cube, but this one is just a collection of faces, and an
intersection() cannot be made.
These faces need to be welded together using hull() to make it a solid that
can be intersected, as follows:
difference()
  { MyCube();
    translate([.5,.5,.5]) cylinder(h=2,d=.2,$fn=20,center=true);
  }
module MyCube()
 hull()
  { color("red")      polyhedron
(points=[[0,0,0],[0,1,0],[0,1,1],[0,0,1]],faces=[[0,1,2,3]]);             
    color("yellow")   polyhedron
(points=[[1,0,0],[1,1,0],[1,1,1],[1,0,1]],faces=[[0,1,2,3]]);             
    color("green")    polyhedron
(points=[[0,0,1],[0,1,1],[1,1,1],[1,0,1]],faces=[[0,1,2,3]]);             
    color("magenta")  polyhedron
(points=[[0,1,0],[1,1,0],[1,1,1],[0,1,1]],faces=[[0,1,2,3]]);             
    color("pink")     polyhedron
(points=[[0,0,0],[1,0,0],[1,0,1],[0,0,1]],faces=[[0,1,2,3]]);             
    color("purple")   polyhedron
(points=[[0,0,0],[0,1,0],[1,1,0],[1,0,0]],faces=[[0,1,2,3]]);  
  } 
With hull() commented out, each face of the cube has a different colour, and
behaves as a separate entity. With hull() active, all faces have the same
colour, and there is only one entity, a cube. hull() does even more: it
allows you to remove the last three calls to polyhedron() without affecting
the cube. Since calls to polyhedron() are rather slow, using hull() actually
speeds up rendering. 
The code for the ellipsoid has been given this optimization, and rendering
times have dropped from 10 seconds on my machine to 5 seconds - always with
cache flushed.
This is the optimised code:

a=30;   b=20;   c=10;    //half-axes of ellipse
Step=10;
difference()  { h();     cylinder(h=40, d=2, center=true, $fn=20);}
module h()    
hull()   Ellipsoid(); 
module Ellipsoid()
for (v=[Step/2:Step:180-Step])   for (u=[Step/2:Step:360-Step/2])  
SurfaceElement(u,v);       
module SurfaceElement(u,v)
  { P0=P(u-Step/2,v-Step/2);          // corner vector for SurfaceElement()
    P1=P(u+Step/2,v-Step/2);          // corner vector for SurfaceElement()
    P2=P(u+Step/2,v+Step/2);          // corner vector for SurfaceElement()
    polyhedron (points=[P0,P1,P2], faces=[[0,1,2]]);
  }      
function P(u,v)=[a*cos(u)*sin(v),b*sin(u)*sin(v),c*cos(v)];  //point on the
surface of an ellipsoid

There is no need to merge all points into a single list first, as has been 
suggested
<http://forum.openscad.org/3d-hull-with-2d-primitives-needed-td5845.html>  .
But I still would like to know how this is done . . .

Wolf





--
View this message in context: http://forum.openscad.org/Polyhedron-tp14338.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jon at jonbondy.com  Tue Nov 10 06:59:21 2015
From: jon at jonbondy.com (jon)
Date: Tue, 10 Nov 2015 06:59:21 -0500
Subject: [OpenSCAD] Polyhedron()
In-Reply-To: <1447152926772-14338.post@n5.nabble.com>
References: <1447152926772-14338.post@n5.nabble.com>
Message-ID: <5641DC19.2060409@jonbondy.com>

I like this!  It seems that it could be used to generate other shapes, 
since the "shape" code is all in the final function.

Jon

On 11/10/2015 5:55 AM, wolf wrote:
> A few days ago I  posted
> <http://forum.openscad.org/3d-hull-with-2d-primitives-needed-td5845.htmlhttp://>
> a piece of code creating an ellipsoid out of individual polyhedron() faces.
> As  doug.moen
> <http://forum.openscad.org/Polyhedron-and-cube-Not-a-Valid-2-Manifold-td14283.html>
> pointed out, it looked like a solid, but was just a collection of faces.
> Here I show what happened, and why, and how to make it a solid.
>
> First, recall that
> polyhedron
> (points=[[0,0,0],[0,1,0],[0,1,1],[0,0,1],[1,0,0],[1,1,0],[1,1,1],[1,0,1]],
>                      
> faces=[[0,1,2,3],[4,5,6,7],[3,2,6,7],[1,5,6,2],[0,4,7,3],[0,1,5,4]]);
> creates a cube, which is a solid.
> Multiple calls
> polyhedron (points=[[0,0,0],[0,1,0],[0,1,1],[0,0,1]],faces=[[0,1,2,3]]);
> polyhedron (points=[[1,0,0],[1,1,0],[1,1,1],[1,0,1]],faces=[[0,1,2,3]]);
> polyhedron (points=[[0,0,1],[0,1,1],[1,1,1],[1,0,1]],faces=[[0,1,2,3]]);
> polyhedron (points=[[0,1,0],[1,1,0],[1,1,1],[0,1,1]],faces=[[0,1,2,3]]);
> polyhedron (points=[[0,0,0],[1,0,0],[1,0,1],[0,0,1]],faces=[[0,1,2,3]]);
> polyhedron (points=[[0,0,0],[0,1,0],[1,1,0],[1,0,0]],faces=[[0,1,2,3]]);
> create the same cube, but this one is just a collection of faces, and an
> intersection() cannot be made.
> These faces need to be welded together using hull() to make it a solid that
> can be intersected, as follows:
> difference()
>    { MyCube();
>      translate([.5,.5,.5]) cylinder(h=2,d=.2,$fn=20,center=true);
>    }
> module MyCube()
>   hull()
>    { color("red")      polyhedron
> (points=[[0,0,0],[0,1,0],[0,1,1],[0,0,1]],faces=[[0,1,2,3]]);
>      color("yellow")   polyhedron
> (points=[[1,0,0],[1,1,0],[1,1,1],[1,0,1]],faces=[[0,1,2,3]]);
>      color("green")    polyhedron
> (points=[[0,0,1],[0,1,1],[1,1,1],[1,0,1]],faces=[[0,1,2,3]]);
>      color("magenta")  polyhedron
> (points=[[0,1,0],[1,1,0],[1,1,1],[0,1,1]],faces=[[0,1,2,3]]);
>      color("pink")     polyhedron
> (points=[[0,0,0],[1,0,0],[1,0,1],[0,0,1]],faces=[[0,1,2,3]]);
>      color("purple")   polyhedron
> (points=[[0,0,0],[0,1,0],[1,1,0],[1,0,0]],faces=[[0,1,2,3]]);
>    }
> With hull() commented out, each face of the cube has a different colour, and
> behaves as a separate entity. With hull() active, all faces have the same
> colour, and there is only one entity, a cube. hull() does even more: it
> allows you to remove the last three calls to polyhedron() without affecting
> the cube. Since calls to polyhedron() are rather slow, using hull() actually
> speeds up rendering.
> The code for the ellipsoid has been given this optimization, and rendering
> times have dropped from 10 seconds on my machine to 5 seconds - always with
> cache flushed.
> This is the optimised code:
>
> a=30;   b=20;   c=10;    //half-axes of ellipse
> Step=10;
> difference()  { h();     cylinder(h=40, d=2, center=true, $fn=20);}
> module h()
> hull()   Ellipsoid();
> module Ellipsoid()
> for (v=[Step/2:Step:180-Step])   for (u=[Step/2:Step:360-Step/2])
> SurfaceElement(u,v);
> module SurfaceElement(u,v)
>    { P0=P(u-Step/2,v-Step/2);          // corner vector for SurfaceElement()
>      P1=P(u+Step/2,v-Step/2);          // corner vector for SurfaceElement()
>      P2=P(u+Step/2,v+Step/2);          // corner vector for SurfaceElement()
>      polyhedron (points=[P0,P1,P2], faces=[[0,1,2]]);
>    }
> function P(u,v)=[a*cos(u)*sin(v),b*sin(u)*sin(v),c*cos(v)];  //point on the
> surface of an ellipsoid
>
> There is no need to merge all points into a single list first, as has been
> suggested
> <http://forum.openscad.org/3d-hull-with-2d-primitives-needed-td5845.html>  .
> But I still would like to know how this is done . . .
>
> Wolf
>
>
>
>
>
> --
> View this message in context: http://forum.openscad.org/Polyhedron-tp14338.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
> -----
> No virus found in this message.
> Checked by AVG - www.avg.com
> Version: 2016.0.7227 / Virus Database: 4457/10972 - Release Date: 11/09/15
>
>



From nop.head at gmail.com  Tue Nov 10 07:05:40 2015
From: nop.head at gmail.com (nophead)
Date: Tue, 10 Nov 2015 05:05:40 -0700 (MST)
Subject: [OpenSCAD] Polyhedron()
In-Reply-To: <1447152926772-14338.post@n5.nabble.com>
References: <1447152926772-14338.post@n5.nabble.com>
Message-ID: <1447157140051-14340.post@n5.nabble.com>

This is how you do it with list comprehensions to make a manifold polyhedron
that doesn't need wrapping in hull.a=30;   b=20;   c=10;    //half-axes of
ellipseStep=10;  function P(u,v)=[a*cos(u)*sin(v),b*sin(u)*sin(v),c*cos(v)]; 
//point on the surface of an ellipsoid  function SurfaceElement(u,v) =
let(hs = Step / 2) [ P(u - hs, v - hs),                                                    
P(u + hs, v - hs),                                                    P(u +
hs, v + hs),                                                    P(u - hs, v
+ hs)];function quad(i) = let(p = i * 4) [[p, p + 1, p + 2], [p, p + 2, p +
3]];  function flatten(l) = [ for (a = l) for (b = a) b ] ;    elements =
flatten([let(s = Step / 2) for(v = [s : Step : 180 - s]) for(u = [s : Step:
360 - s]) SurfaceElement(u, v)]);faces    = flatten([for(v = [0 : 180 / Step
- 1]) for(u = [0 : 360 / Step - 1]) quad(v * 360 / Step + u) ]);difference()
{     polyhedron(elements, faces);    cylinder(h=40, d=2, center=true,
$fn=20);}



--
View this message in context: http://forum.openscad.org/Polyhedron-tp14338p14340.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151110/36f50bba/attachment-0001.html>

From nop.head at gmail.com  Tue Nov 10 07:08:11 2015
From: nop.head at gmail.com (nop head)
Date: Tue, 10 Nov 2015 12:08:11 +0000
Subject: [OpenSCAD] Polyhedron()
In-Reply-To: <1447157140051-14340.post@n5.nabble.com>
References: <1447152926772-14338.post@n5.nabble.com>
	<1447157140051-14340.post@n5.nabble.com>
Message-ID: <CAEEmnrOELAr7u-a3LZ3KF6BWsAqNe_xvU12aJUrO=b+ok7iswQ@mail.gmail.com>

Hmm, all the newlines got eaten but I have fixed it on the forum post.

On 10 November 2015 at 12:05, nophead <nop.head at gmail.com> wrote:

> This is how you do it with list comprehensions to make a manifold
> polyhedron that doesn't need wrapping in hull. a=30; b=20; c=10;
> //half-axes of ellipse Step=10; function
> P(u,v)=[a*cos(u)*sin(v),b*sin(u)*sin(v),c*cos(v)]; //point on the surface
> of an ellipsoid function SurfaceElement(u,v) = let(hs = Step / 2) [ P(u -
> hs, v - hs), P(u + hs, v - hs), P(u + hs, v + hs), P(u - hs, v + hs)];
> function quad(i) = let(p = i * 4) [[p, p + 1, p + 2], [p, p + 2, p + 3]];
> function flatten(l) = [ for (a = l) for (b = a) b ] ; elements =
> flatten([let(s = Step / 2) for(v = [s : Step : 180 - s]) for(u = [s : Step:
> 360 - s]) SurfaceElement(u, v)]); faces = flatten([for(v = [0 : 180 / Step
> - 1]) for(u = [0 : 360 / Step - 1]) quad(v * 360 / Step + u) ]);
> difference() { polyhedron(elements, faces); cylinder(h=40, d=2,
> center=true, $fn=20); }
> ------------------------------
> View this message in context: Re: Polyhedron()
> <http://forum.openscad.org/Polyhedron-tp14338p14340.html>
>
> Sent from the OpenSCAD mailing list archive <http://forum.openscad.org/>
> at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151110/0fba2bdc/attachment.html>

From andrew at plumb.org  Tue Nov 10 09:19:16 2015
From: andrew at plumb.org (clothbot)
Date: Tue, 10 Nov 2015 07:19:16 -0700 (MST)
Subject: [OpenSCAD] using a PNG logo
In-Reply-To: <50A98CC4-3412-4968-8EEC-08320CC8DCCB@kintel.net>
References: <5640C099.9000209@jonbondy.com> <5640DEC0.6010001@pobox.com>
	<CAMFpZriv=8i_EVaTZe5gNeZB+KTY935hFYftkzH4k-JZWwkmmg@mail.gmail.com>
	<1447102928641-14325.post@n5.nabble.com>
	<50A98CC4-3412-4968-8EEC-08320CC8DCCB@kintel.net>
Message-ID: <1447165156384-14342.post@n5.nabble.com>

Hey Marius,

Some smarts could be added to this section of surface.cc:

https://github.com/openscad/openscad/blob/master/src/surface.cc#L236-L260

...to only create two poly's (not four with vx average midpoint) in the
following three cases:

v1==v3
v2==v4
v1==v2 && v3==v4

This could reduce the mesh size significantly in monochrome and same-colour
regions, and it should also take care of many artificial "saw tooth
diagonals" around the perimeter of same-colour regions.

Thoughts?

Andrew.




--
View this message in context: http://forum.openscad.org/using-a-PNG-logo-tp14319p14342.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From stempeldergeschichte at googlemail.com  Tue Nov 10 09:32:11 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Tue, 10 Nov 2015 15:32:11 +0100
Subject: [OpenSCAD] Polyhedron()
In-Reply-To: <CAEEmnrOELAr7u-a3LZ3KF6BWsAqNe_xvU12aJUrO=b+ok7iswQ@mail.gmail.com>
References: <1447152926772-14338.post@n5.nabble.com>
	<1447157140051-14340.post@n5.nabble.com>
	<CAEEmnrOELAr7u-a3LZ3KF6BWsAqNe_xvU12aJUrO=b+ok7iswQ@mail.gmail.com>
Message-ID: <CAJgOqAAkxhdgv4A=79+x6P5UmwWoCPVEcHSrAcw4z1sXKiHZoQ@mail.gmail.com>

It is nice that hull() accepts a collection of non-manifold faces.

Does anyone know: would hull() also accept a collection of points as inputs?
Even if you can not define a point in OpenSCAD, (yet).


2015-11-10 13:08 GMT+01:00 nop head <nop.head at gmail.com>:

> Hmm, all the newlines got eaten but I have fixed it on the forum post.
>
> On 10 November 2015 at 12:05, nophead <nop.head at gmail.com> wrote:
>
>> This is how you do it with list comprehensions to make a manifold
>> polyhedron that doesn't need wrapping in hull. a=30; b=20; c=10;
>> //half-axes of ellipse Step=10; function
>> P(u,v)=[a*cos(u)*sin(v),b*sin(u)*sin(v),c*cos(v)]; //point on the surface
>> of an ellipsoid function SurfaceElement(u,v) = let(hs = Step / 2) [ P(u -
>> hs, v - hs), P(u + hs, v - hs), P(u + hs, v + hs), P(u - hs, v + hs)];
>> function quad(i) = let(p = i * 4) [[p, p + 1, p + 2], [p, p + 2, p + 3]];
>> function flatten(l) = [ for (a = l) for (b = a) b ] ; elements =
>> flatten([let(s = Step / 2) for(v = [s : Step : 180 - s]) for(u = [s : Step:
>> 360 - s]) SurfaceElement(u, v)]); faces = flatten([for(v = [0 : 180 / Step
>> - 1]) for(u = [0 : 360 / Step - 1]) quad(v * 360 / Step + u) ]);
>> difference() { polyhedron(elements, faces); cylinder(h=40, d=2,
>> center=true, $fn=20); }
>> ------------------------------
>> View this message in context: Re: Polyhedron()
>> <http://forum.openscad.org/Polyhedron-tp14338p14340.html>
>>
>> Sent from the OpenSCAD mailing list archive <http://forum.openscad.org/>
>> at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151110/aa5da0b5/attachment.html>

From stempeldergeschichte at googlemail.com  Tue Nov 10 09:56:49 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Tue, 10 Nov 2015 15:56:49 +0100
Subject: [OpenSCAD] Polyhedron()
In-Reply-To: <CAEEmnrOELAr7u-a3LZ3KF6BWsAqNe_xvU12aJUrO=b+ok7iswQ@mail.gmail.com>
References: <1447152926772-14338.post@n5.nabble.com>
	<1447157140051-14340.post@n5.nabble.com>
	<CAEEmnrOELAr7u-a3LZ3KF6BWsAqNe_xvU12aJUrO=b+ok7iswQ@mail.gmail.com>
Message-ID: <CAJgOqACnRSbzzaQ6JopJn2Ai5ck+SLHvK9rJuFYP6d4p5Gf3vQ@mail.gmail.com>

Dear nop head,

your solution looks nice and clean
I'm sort of able to follow your code, but I would not be able to write it
myself.

After looking at your code for a while I realised that there could be a
gain in velocity by a factor of 2:

p + 2, p + 3 of the old faces is identically to  p , p +1 of the new faces.
(while iterating over u)

I sort of know how to do it:

Only write the points p , p+1 for every SurfaceElement(u,v) into elements.
And rewrite quad(i) correspondingly.
Also quad(i) most be modified to deal with the last point to wrap around to
the first points: p0, p0+1.

There should also be a gain in velocity while iterating in v - direction,
half the points are already known from the last iteration.

...

I had a look at the preview time: 9 sec with steps set to Steps=1 (degree).
This is very fast and a very high resolution (corresponds to fn=360).

The render time is (on my computer) 1min 40sec with steps set to Steps=1
(degree).
This is also very fast for this fine resolution.

So, my idea for speeding up the code is probably not needed. :-)


2015-11-10 13:08 GMT+01:00 nop head <nop.head at gmail.com>:

> Hmm, all the newlines got eaten but I have fixed it on the forum post.
>
> On 10 November 2015 at 12:05, nophead <nop.head at gmail.com> wrote:
>
>> This is how you do it with list comprehensions to make a manifold
>> polyhedron that doesn't need wrapping in hull. a=30; b=20; c=10;
>> //half-axes of ellipse Step=10; function
>> P(u,v)=[a*cos(u)*sin(v),b*sin(u)*sin(v),c*cos(v)]; //point on the surface
>> of an ellipsoid function SurfaceElement(u,v) = let(hs = Step / 2) [ P(u -
>> hs, v - hs), P(u + hs, v - hs), P(u + hs, v + hs), P(u - hs, v + hs)];
>> function quad(i) = let(p = i * 4) [[p, p + 1, p + 2], [p, p + 2, p + 3]];
>> function flatten(l) = [ for (a = l) for (b = a) b ] ; elements =
>> flatten([let(s = Step / 2) for(v = [s : Step : 180 - s]) for(u = [s : Step:
>> 360 - s]) SurfaceElement(u, v)]); faces = flatten([for(v = [0 : 180 / Step
>> - 1]) for(u = [0 : 360 / Step - 1]) quad(v * 360 / Step + u) ]);
>> difference() { polyhedron(elements, faces); cylinder(h=40, d=2,
>> center=true, $fn=20); }
>> ------------------------------
>> View this message in context: Re: Polyhedron()
>> <http://forum.openscad.org/Polyhedron-tp14338p14340.html>
>>
>> Sent from the OpenSCAD mailing list archive <http://forum.openscad.org/>
>> at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151110/ce1a6c86/attachment.html>

From stempeldergeschichte at googlemail.com  Tue Nov 10 10:20:10 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Tue, 10 Nov 2015 16:20:10 +0100
Subject: [OpenSCAD] Polyhedron()
In-Reply-To: <CAJgOqACnRSbzzaQ6JopJn2Ai5ck+SLHvK9rJuFYP6d4p5Gf3vQ@mail.gmail.com>
References: <1447152926772-14338.post@n5.nabble.com>
	<1447157140051-14340.post@n5.nabble.com>
	<CAEEmnrOELAr7u-a3LZ3KF6BWsAqNe_xvU12aJUrO=b+ok7iswQ@mail.gmail.com>
	<CAJgOqACnRSbzzaQ6JopJn2Ai5ck+SLHvK9rJuFYP6d4p5Gf3vQ@mail.gmail.com>
Message-ID: <CAJgOqADksn0gsb9MmMijZqWJvp+VuA4HjfhH+FuqAbfL9dUFxg@mail.gmail.com>

There is a grave error in my last post:

Yes, on could save time calculating less points P(u,v), but this would only
speed up the preview somewhat.
But the preview is very fast anyway.

It wouls not noticeably speed up the time to render: the time to create the
polyhedron is what takes so long,


2015-11-10 15:56 GMT+01:00 Peter Falke <stempeldergeschichte at googlemail.com>
:

> Dear nop head,
>
> your solution looks nice and clean
> I'm sort of able to follow your code, but I would not be able to write it
> myself.
>
> After looking at your code for a while I realised that there could be a
> gain in velocity by a factor of 2:
>
> p + 2, p + 3 of the old faces is identically to  p , p +1 of the new
> faces. (while iterating over u)
>
> I sort of know how to do it:
>
> Only write the points p , p+1 for every SurfaceElement(u,v) into elements.
> And rewrite quad(i) correspondingly.
> Also quad(i) most be modified to deal with the last point to wrap around
> to the first points: p0, p0+1.
>
> There should also be a gain in velocity while iterating in v - direction,
> half the points are already known from the last iteration.
>
> ...
>
> I had a look at the preview time: 9 sec with steps set to Steps=1 (degree).
> This is very fast and a very high resolution (corresponds to fn=360).
>
> The render time is (on my computer) 1min 40sec with steps set to Steps=1
> (degree).
> This is also very fast for this fine resolution.
>
> So, my idea for speeding up the code is probably not needed. :-)
>
>
> 2015-11-10 13:08 GMT+01:00 nop head <nop.head at gmail.com>:
>
>> Hmm, all the newlines got eaten but I have fixed it on the forum post.
>>
>> On 10 November 2015 at 12:05, nophead <nop.head at gmail.com> wrote:
>>
>>> This is how you do it with list comprehensions to make a manifold
>>> polyhedron that doesn't need wrapping in hull. a=30; b=20; c=10;
>>> //half-axes of ellipse Step=10; function
>>> P(u,v)=[a*cos(u)*sin(v),b*sin(u)*sin(v),c*cos(v)]; //point on the surface
>>> of an ellipsoid function SurfaceElement(u,v) = let(hs = Step / 2) [ P(u -
>>> hs, v - hs), P(u + hs, v - hs), P(u + hs, v + hs), P(u - hs, v + hs)];
>>> function quad(i) = let(p = i * 4) [[p, p + 1, p + 2], [p, p + 2, p + 3]];
>>> function flatten(l) = [ for (a = l) for (b = a) b ] ; elements =
>>> flatten([let(s = Step / 2) for(v = [s : Step : 180 - s]) for(u = [s : Step:
>>> 360 - s]) SurfaceElement(u, v)]); faces = flatten([for(v = [0 : 180 / Step
>>> - 1]) for(u = [0 : 360 / Step - 1]) quad(v * 360 / Step + u) ]);
>>> difference() { polyhedron(elements, faces); cylinder(h=40, d=2,
>>> center=true, $fn=20); }
>>> ------------------------------
>>> View this message in context: Re: Polyhedron()
>>> <http://forum.openscad.org/Polyhedron-tp14338p14340.html>
>>>
>>> Sent from the OpenSCAD mailing list archive <http://forum.openscad.org/>
>>> at Nabble.com.
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151110/6cfd568e/attachment-0001.html>

From doug at moens.org  Tue Nov 10 10:33:13 2015
From: doug at moens.org (doug moen)
Date: Tue, 10 Nov 2015 10:33:13 -0500
Subject: [OpenSCAD] Polyhedron()
In-Reply-To: <CAJgOqAAkxhdgv4A=79+x6P5UmwWoCPVEcHSrAcw4z1sXKiHZoQ@mail.gmail.com>
References: <1447152926772-14338.post@n5.nabble.com>
	<1447157140051-14340.post@n5.nabble.com>
	<CAEEmnrOELAr7u-a3LZ3KF6BWsAqNe_xvU12aJUrO=b+ok7iswQ@mail.gmail.com>
	<CAJgOqAAkxhdgv4A=79+x6P5UmwWoCPVEcHSrAcw4z1sXKiHZoQ@mail.gmail.com>
Message-ID: <CAGV6i+M9skoiQdvpkEFFB4rR-JcUVjKY2ZqV_rsG-xwoTDwbGQ@mail.gmail.com>

I think that the underlying topic of discussion is: polyhedron() is
difficult to use. Is there an easier way to convert a collection of
vertices into a 3D object?

Wolf has explored the idea of gluing a cloud of non-manifold objects into a
polyhedron using hull(). It relies on passing an invalid argument list to
polyhedron(), and relying on the fact that you don't currently get an
error. Worse, this technique is not general, since it can't be used to
construct a non-convex object. It's also much slower than directly
constructing your object with a single call to polyhedron().

Peter Falke has suggested the idea of feeding a collection of points to
hull(). I don't think there's any way to do that right now. But it's an
interesting suggestion, since specifying a point cloud is easier to do than
specifying a disconnected cloud of faces (as in Wolf's code), which in turn
is easier than specifying a connected set of faces (ie, the arguments to
polyhedron()).

The raw output from a 3D scanner is a point cloud. There exists software
for converting this point cloud into a polyhedral mesh. I think it would be
interesting to add a point_cloud() operation to OpenSCAD, for converting a
list of vertices into a manifold 3D object. The algorithm should exist
somewhere as open source. It's probably slower than polyhedron(), but much
easier to use.

The point_cloud() primitive would give us very simple and easy to write
code for generating an ellipsoid. Something like this:

a=30;   b=20;   c=10;    //half-axes of ellipse
Step=10;

point_cloud(
  [for (v=[0: Step: 180])
    for (u=[0: Step: 360])
      P(u,v)
  ]);

function P(u,v)=[a*cos(u)*sin(v),b*sin(u)*sin(v),c*cos(v)];

On 10 November 2015 at 09:32, Peter Falke <
stempeldergeschichte at googlemail.com> wrote:

> It is nice that hull() accepts a collection of non-manifold faces.
>
> Does anyone know: would hull() also accept a collection of points as
> inputs?
> Even if you can not define a point in OpenSCAD, (yet).
>
>
> 2015-11-10 13:08 GMT+01:00 nop head <nop.head at gmail.com>:
>
>> Hmm, all the newlines got eaten but I have fixed it on the forum post.
>>
>> On 10 November 2015 at 12:05, nophead <nop.head at gmail.com> wrote:
>>
>>> This is how you do it with list comprehensions to make a manifold
>>> polyhedron that doesn't need wrapping in hull. a=30; b=20; c=10;
>>> //half-axes of ellipse Step=10; function
>>> P(u,v)=[a*cos(u)*sin(v),b*sin(u)*sin(v),c*cos(v)]; //point on the surface
>>> of an ellipsoid function SurfaceElement(u,v) = let(hs = Step / 2) [ P(u -
>>> hs, v - hs), P(u + hs, v - hs), P(u + hs, v + hs), P(u - hs, v + hs)];
>>> function quad(i) = let(p = i * 4) [[p, p + 1, p + 2], [p, p + 2, p + 3]];
>>> function flatten(l) = [ for (a = l) for (b = a) b ] ; elements =
>>> flatten([let(s = Step / 2) for(v = [s : Step : 180 - s]) for(u = [s : Step:
>>> 360 - s]) SurfaceElement(u, v)]); faces = flatten([for(v = [0 : 180 / Step
>>> - 1]) for(u = [0 : 360 / Step - 1]) quad(v * 360 / Step + u) ]);
>>> difference() { polyhedron(elements, faces); cylinder(h=40, d=2,
>>> center=true, $fn=20); }
>>> ------------------------------
>>> View this message in context: Re: Polyhedron()
>>> <http://forum.openscad.org/Polyhedron-tp14338p14340.html>
>>>
>>> Sent from the OpenSCAD mailing list archive <http://forum.openscad.org/>
>>> at Nabble.com.
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151110/885a8453/attachment.html>

From andrew at plumb.org  Tue Nov 10 11:02:00 2015
From: andrew at plumb.org (clothbot)
Date: Tue, 10 Nov 2015 09:02:00 -0700 (MST)
Subject: [OpenSCAD] Polyhedron()
In-Reply-To: <CAGV6i+M9skoiQdvpkEFFB4rR-JcUVjKY2ZqV_rsG-xwoTDwbGQ@mail.gmail.com>
References: <1447152926772-14338.post@n5.nabble.com>
	<1447157140051-14340.post@n5.nabble.com>
	<CAEEmnrOELAr7u-a3LZ3KF6BWsAqNe_xvU12aJUrO=b+ok7iswQ@mail.gmail.com>
	<CAJgOqAAkxhdgv4A=79+x6P5UmwWoCPVEcHSrAcw4z1sXKiHZoQ@mail.gmail.com>
	<CAGV6i+M9skoiQdvpkEFFB4rR-JcUVjKY2ZqV_rsG-xwoTDwbGQ@mail.gmail.com>
Message-ID: <1447171320114-14347.post@n5.nabble.com>

doug.moen wrote
> I think that the underlying topic of discussion is: polyhedron() is
> difficult to use. Is there an easier way to convert a collection of
> vertices into a 3D object?
> ...

There are surface reconstruction hooks in CGAL:

http://doc.cgal.org/latest/Surface_reconstruction_points_3/

...but as with many things, the devil's in the implementation-details.

Andrew.




--
View this message in context: http://forum.openscad.org/Polyhedron-tp14338p14347.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Tue Nov 10 11:03:21 2015
From: nop.head at gmail.com (nop head)
Date: Tue, 10 Nov 2015 16:03:21 +0000
Subject: [OpenSCAD] Polyhedron()
In-Reply-To: <CAGV6i+M9skoiQdvpkEFFB4rR-JcUVjKY2ZqV_rsG-xwoTDwbGQ@mail.gmail.com>
References: <1447152926772-14338.post@n5.nabble.com>
	<1447157140051-14340.post@n5.nabble.com>
	<CAEEmnrOELAr7u-a3LZ3KF6BWsAqNe_xvU12aJUrO=b+ok7iswQ@mail.gmail.com>
	<CAJgOqAAkxhdgv4A=79+x6P5UmwWoCPVEcHSrAcw4z1sXKiHZoQ@mail.gmail.com>
	<CAGV6i+M9skoiQdvpkEFFB4rR-JcUVjKY2ZqV_rsG-xwoTDwbGQ@mail.gmail.com>
Message-ID: <CAEEmnrNHL=PPFjrssA1kfA=hbEWNimv0FRFzyXvmt7g89Y+_Qw@mail.gmail.com>

Yes and a 2D version would be very useful as well.  It would basically fit
a curve through a list of points, although there are many ways to do that
of course.

Another thing I would like is a concave hull, for want of a better name. As
well as shapes it has to encompass it would also have a list of shapes to
avoid. It would work like difference in that the first child is all the
positive shapes on the inside and the rest are negative shapes on the
outside.

E.g.
concave_hull() {
     hull()
        for(x = [-10,10], y = [-10,10], z = [0, 20])
            translate([x,y, z])
                 sphere(2);
     translate([0, 0, 18])
        sphere(5);
}

Would make cube with rounded corners with a depression in the top that had
a rounded bottom. Imaging a balloon skin wrapped over 8 spheres with a
ninth resting on top. It is hard to make these sorts of shapes, even in 2D
as you have to calculate tangents to circles from other circles.


On 10 November 2015 at 15:33, doug moen <doug at moens.org> wrote:

> I think that the underlying topic of discussion is: polyhedron() is
> difficult to use. Is there an easier way to convert a collection of
> vertices into a 3D object?
>
> Wolf has explored the idea of gluing a cloud of non-manifold objects into
> a polyhedron using hull(). It relies on passing an invalid argument list to
> polyhedron(), and relying on the fact that you don't currently get an
> error. Worse, this technique is not general, since it can't be used to
> construct a non-convex object. It's also much slower than directly
> constructing your object with a single call to polyhedron().
>
> Peter Falke has suggested the idea of feeding a collection of points to
> hull(). I don't think there's any way to do that right now. But it's an
> interesting suggestion, since specifying a point cloud is easier to do than
> specifying a disconnected cloud of faces (as in Wolf's code), which in turn
> is easier than specifying a connected set of faces (ie, the arguments to
> polyhedron()).
>
> The raw output from a 3D scanner is a point cloud. There exists software
> for converting this point cloud into a polyhedral mesh. I think it would be
> interesting to add a point_cloud() operation to OpenSCAD, for converting a
> list of vertices into a manifold 3D object. The algorithm should exist
> somewhere as open source. It's probably slower than polyhedron(), but much
> easier to use.
>
> The point_cloud() primitive would give us very simple and easy to write
> code for generating an ellipsoid. Something like this:
>
> a=30;   b=20;   c=10;    //half-axes of ellipse
> Step=10;
>
> point_cloud(
>   [for (v=[0: Step: 180])
>     for (u=[0: Step: 360])
>       P(u,v)
>   ]);
>
> function P(u,v)=[a*cos(u)*sin(v),b*sin(u)*sin(v),c*cos(v)];
>
> On 10 November 2015 at 09:32, Peter Falke <
> stempeldergeschichte at googlemail.com> wrote:
>
>> It is nice that hull() accepts a collection of non-manifold faces.
>>
>> Does anyone know: would hull() also accept a collection of points as
>> inputs?
>> Even if you can not define a point in OpenSCAD, (yet).
>>
>>
>> 2015-11-10 13:08 GMT+01:00 nop head <nop.head at gmail.com>:
>>
>>> Hmm, all the newlines got eaten but I have fixed it on the forum post.
>>>
>>> On 10 November 2015 at 12:05, nophead <nop.head at gmail.com> wrote:
>>>
>>>> This is how you do it with list comprehensions to make a manifold
>>>> polyhedron that doesn't need wrapping in hull. a=30; b=20; c=10;
>>>> //half-axes of ellipse Step=10; function
>>>> P(u,v)=[a*cos(u)*sin(v),b*sin(u)*sin(v),c*cos(v)]; //point on the surface
>>>> of an ellipsoid function SurfaceElement(u,v) = let(hs = Step / 2) [ P(u -
>>>> hs, v - hs), P(u + hs, v - hs), P(u + hs, v + hs), P(u - hs, v + hs)];
>>>> function quad(i) = let(p = i * 4) [[p, p + 1, p + 2], [p, p + 2, p + 3]];
>>>> function flatten(l) = [ for (a = l) for (b = a) b ] ; elements =
>>>> flatten([let(s = Step / 2) for(v = [s : Step : 180 - s]) for(u = [s : Step:
>>>> 360 - s]) SurfaceElement(u, v)]); faces = flatten([for(v = [0 : 180 / Step
>>>> - 1]) for(u = [0 : 360 / Step - 1]) quad(v * 360 / Step + u) ]);
>>>> difference() { polyhedron(elements, faces); cylinder(h=40, d=2,
>>>> center=true, $fn=20); }
>>>> ------------------------------
>>>> View this message in context: Re: Polyhedron()
>>>> <http://forum.openscad.org/Polyhedron-tp14338p14340.html>
>>>>
>>>> Sent from the OpenSCAD mailing list archive
>>>> <http://forum.openscad.org/> at Nabble.com.
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151110/911c5ec4/attachment-0001.html>

From runsun at gmail.com  Tue Nov 10 11:49:23 2015
From: runsun at gmail.com (runsun)
Date: Tue, 10 Nov 2015 09:49:23 -0700 (MST)
Subject: [OpenSCAD] Polyhedron()
In-Reply-To: <CAGV6i+M9skoiQdvpkEFFB4rR-JcUVjKY2ZqV_rsG-xwoTDwbGQ@mail.gmail.com>
References: <1447152926772-14338.post@n5.nabble.com>
	<1447157140051-14340.post@n5.nabble.com>
	<CAEEmnrOELAr7u-a3LZ3KF6BWsAqNe_xvU12aJUrO=b+ok7iswQ@mail.gmail.com>
	<CAJgOqAAkxhdgv4A=79+x6P5UmwWoCPVEcHSrAcw4z1sXKiHZoQ@mail.gmail.com>
	<CAGV6i+M9skoiQdvpkEFFB4rR-JcUVjKY2ZqV_rsG-xwoTDwbGQ@mail.gmail.com>
Message-ID: <1447174163782-14349.post@n5.nabble.com>

doug.moen wrote
> I think that the underlying topic of discussion is: polyhedron() is
> difficult to use. Is there an easier way to convert a collection of
> vertices into a 3D object?
> ......
> The raw output from a 3D scanner is a point cloud. There exists software
> for converting this point cloud into a polyhedral mesh. I think it would
> be
> interesting to add a point_cloud() operation to OpenSCAD, for converting a
> list of vertices into a manifold 3D object. The algorithm should exist
> somewhere as open source. It's probably slower than polyhedron(), but much
> easier to use.
> 
> The point_cloud() primitive would give us very simple and easy to write
> code for generating an ellipsoid. Something like this:
> 
> a=30;   b=20;   c=10;    //half-axes of ellipse
> Step=10;
> 
> point_cloud(
>   [for (v=[0: Step: 180])
>     for (u=[0: Step: 360])
>       P(u,v)
>   ]);
> 
> function P(u,v)=[a*cos(u)*sin(v),b*sin(u)*sin(v),c*cos(v)];

The underlying approach could be simplified into generating simple shapes.
For example, the ellipsoid shape, if watched closely, is basically the same
as the "chain" object described in my  faces.scad
<http://forum.openscad.org/A-faces-function-for-simple-polyhedrons-td12809.html>  
tool topologically. So a *point_cloud()* primitive can be easily coded as
such:


> a=30;   b=20;   c=10;    //half-axes of ellipse 
> Step=10;
> 
> function P(u,v)=[ a*cos(u)*sin(v)
>                 , b*sin(u)*sin(v)
>                 , c*cos(v) ];  
> 
> module 
*
> point_cloud
*
> ( pts, shape, nside, nseg ){
>      polyhedron( points=pts, faces= 
*
> faces(shape, nside, nseg)
*
>  );
> }
> 
> pts = [for (v=[Step: Step: 180-Step])
>           for (u=[Step: Step: 360])
>             P(u,v)
>         ];
> 
> point_cloud(
>    pts
>   , shape="chain"
>   , nside= 360/Step
>   , nseg= 180/Step-2 
> ); 

In fact, this approach is why I made  faces.scad
<http://forum.openscad.org/A-faces-function-for-simple-polyhedrons-td12809.html>  
in the first place. As seen in the link mentioned, generating a basic form
of polyhedron is a simple matter of generating points and picking a shape. 





-----

$  Runsun Pan, PhD 

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );

 $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif 






--
View this message in context: http://forum.openscad.org/Polyhedron-tp14338p14349.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Tue Nov 10 13:02:59 2015
From: runsun at gmail.com (runsun)
Date: Tue, 10 Nov 2015 11:02:59 -0700 (MST)
Subject: [OpenSCAD] Inconsistent conversion of floating number to string at
 7th significant digit
Message-ID: <1447178579842-14350.post@n5.nabble.com>

This post is about how OpenScad *type-casts* a floating point number to a
string(str()) or *displays* it in the console (echo()). I.e., nothing to do
with the internal calculation. Observation is carried out with OpenSCAD
version 2015.06.21.nightly (git 68e41af) running on Linux Mint 17.

I. First we know that round() gets rid of 4, advances 5:

>  round(1.4) => 1 
>  round(1.5) => 2 
>  round(4.4) => 4 
>  round(4.5) => 5 
>  round(5.4) => 5 
>  round(5.5) => 6 

II. OpenScad displays only 6 significant digits. I would expect extra
significant digits to be treated as the way round() works, i.e., cut 4,
advance 5. But it is not:

II-1. Integer -- When extra significant digit is 5, simply cut away:

>  str(123456) = 123456  
>  str(1234560) = 1.23456e+06  // Sci.Notation
>  str(1234564) = 1.23456e+06  // 4 gets cut
>  str(1234565) = 1.23456e+06  // Why not 1.23457 ? 
>  str(1234566) = 1.23457e+06  // 6 advances

II-2. Float (>=1) -- Rounded up normally to 6 significant digits: cut 4,
advance 5:

>  str(1.123456)     = 1.12346  
>  str(1.0123456)    = 1.01235  
>  str(1.00123456)   = 1.00123  
>  str(1.000123456)  = 1.00012  
>  str(1.0000123456) = 1.00001  

II-3. Float (<1) -- 5 sometimes cut, sometimes advances:

>  str(0.1234565)     = 0.123456  // Why is 5 cut? 
>  str(0.01234565)    = 0.0123456  // Why is 5 cut? 
>  str(0.001234565)   = 0.00123456  // Why is 5 cut? 
>  str(0.0001234565)  = 0.000123457  // 5 advances 
>  str(0.00001234565) = 1.23456e-05  // Why is 5 cut? 

III. This section is to test 6 digits + a 5, like 0.1111115, 0.2222225, etc,
and multiply them with 0.1 repeatedly. It appears that the extra-5 is
treated in an irregular manner:

>  str(0.1111115)     = 0.111112  
>  str(0.01111115)    = 0.0111112  
>  str(0.001111115)   = 0.00111111  // Why is 5 cut? 
>  str(0.0001111115)  = 0.000111111  // Why is 5 cut? 
>  str(0.00001111115) = 1.11111e-05  // Why is 5 cut? 


>  str(0.2222225)     = 0.222222  // Why is 5 cut? 
>  str(0.02222225)    = 0.0222222  // Why is 5 cut? 
>  str(0.002222225)   = 0.00222222  // Why is 5 cut? 
>  str(0.0002222225)  = 0.000222223  
>  str(0.00002222225) = 2.22222e-05  // Why is 5 cut? 


>  str(0.3333335)     = 0.333334  
>  str(0.03333335)    = 0.0333333  // Why is 5 cut? 
>  str(0.003333335)   = 0.00333334  
>  str(0.0003333335)  = 0.000333334  
>  str(0.00003333335) = 3.33333e-05  // Why is 5 cut? 


>  str(0.4444445)     = 0.444445  
>  str(0.04444445)    = 0.0444445  
>  str(0.004444445)   = 0.00444444  // Why is 5 cut? 
>  str(0.0004444445)  = 0.000444445  
>  str(0.00004444445) = 4.44445e-05  // Why is 5 cut? 


>  str(0.5555555)     = 0.555555  // Why is 5 cut? 
>  str(0.05555555)    = 0.0555556  
>  str(0.005555555)   = 0.00555556  
>  str(0.0005555555)  = 0.000555555  // Why is 5 cut? 
>  str(0.00005555555) = 5.55555e-05  // Why is 5 cut? 


>  str(0.6666665)     = 0.666667  
>  str(0.06666665)    = 0.0666666  // Why is 5 cut? 
>  str(0.006666665)   = 0.00666666  // Why is 5 cut? 
>  str(0.0006666665)  = 0.000666666  // Why is 5 cut? 
>  str(0.00006666665) = 6.66667e-05  


>  str(0.7777775)     = 0.777778  
>  str(0.07777775)    = 0.0777778  
>  str(0.007777775)   = 0.00777777  // Why is 5 cut? 
>  str(0.0007777775)  = 0.000777777  // Why is 5 cut? 
>  str(0.00007777775) = 7.77777e-05  // Why is 5 cut? 


>  str(0.8888885)     = 0.888888  // Why is 5 cut? 
>  str(0.08888885)    = 0.0888889  
>  str(0.008888885)   = 0.00888888  // Why is 5 cut? 
>  str(0.0008888885)  = 0.000888888  // Why is 5 cut? 
>  str(0.00008888885) = 8.88888e-05  // Why is 5 cut? 


>  str(0.9999995)     = 1  
>  str(0.09999995)    = 0.1  
>  str(0.009999995)   = 0.00999999  // Why is 5 cut? 
>  str(0.0009999995)  = 0.001  
>  str(0.00009999995) = 0.0001  

IV. In this observation, 7 digits of 5 (5555555) is multiplied by pow(10,n).
Again, this shows the extra-5 is treated unpredictably: 

>  str(5555555000)   = 5.55556e+09  
>  str(555555500)    = 5.55556e+08  
>  str(55555550)     = 5.55556e+07  
>  str(5555555)      = 5.55556e+06  
>  str(5.555555)     = 5.55556  
>  str(0.5555555)    = 0.555555  // Why is 5 cut? 
>  str(0.05555555)   = 0.0555556  
>  str(0.005555555)  = 0.00555556  
>  str(0.0005555555) = 0.000555555  // Why is 5 cut? 
>  str(0.00005555555)= 5.55555e-05  // Why is 5 cut? 





-----

$  Runsun Pan, PhD 

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );

 $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif 






--
View this message in context: http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Tue Nov 10 13:15:04 2015
From: marius at kintel.net (Marius Kintel)
Date: Tue, 10 Nov 2015 13:15:04 -0500
Subject: [OpenSCAD] Polyhedron()
In-Reply-To: <CAGV6i+M9skoiQdvpkEFFB4rR-JcUVjKY2ZqV_rsG-xwoTDwbGQ@mail.gmail.com>
References: <1447152926772-14338.post@n5.nabble.com>
	<1447157140051-14340.post@n5.nabble.com>
	<CAEEmnrOELAr7u-a3LZ3KF6BWsAqNe_xvU12aJUrO=b+ok7iswQ@mail.gmail.com>
	<CAJgOqAAkxhdgv4A=79+x6P5UmwWoCPVEcHSrAcw4z1sXKiHZoQ@mail.gmail.com>
	<CAGV6i+M9skoiQdvpkEFFB4rR-JcUVjKY2ZqV_rsG-xwoTDwbGQ@mail.gmail.com>
Message-ID: <8426CCB6-AF74-4CCC-B6E6-DDE99E425DC5@kintel.net>

> On Nov 10, 2015, at 10:33 AM, doug moen <doug at moens.org> wrote:
> 
> Peter Falke has suggested the idea of feeding a collection of points to hull().

This would be as simple as adding an optional ?points? parameter to hull; i.e. pass points=[?] instead of children will just hull the points. I?m uncertain if this should perhaps be a separate module, to avoid mixing group nodes and leaf nodes.

> I think it would be interesting to add a point_cloud() operation to OpenSCAD, for converting a list of vertices into a manifold 3D object. The algorithm should exist somewhere as open source.

This would be cool. One challenge could be that the output of such an operation is depending on which algorithm was used, which would potentially lock us into one particular library or implementation where people start to depend on specific artifacts (similar to how people are using cylinder($fn=6) to create prisms).

 -Marius



From marius at kintel.net  Tue Nov 10 13:17:29 2015
From: marius at kintel.net (Marius Kintel)
Date: Tue, 10 Nov 2015 13:17:29 -0500
Subject: [OpenSCAD] Polyhedron()
In-Reply-To: <CAGV6i+M9skoiQdvpkEFFB4rR-JcUVjKY2ZqV_rsG-xwoTDwbGQ@mail.gmail.com>
References: <1447152926772-14338.post@n5.nabble.com>
	<1447157140051-14340.post@n5.nabble.com>
	<CAEEmnrOELAr7u-a3LZ3KF6BWsAqNe_xvU12aJUrO=b+ok7iswQ@mail.gmail.com>
	<CAJgOqAAkxhdgv4A=79+x6P5UmwWoCPVEcHSrAcw4z1sXKiHZoQ@mail.gmail.com>
	<CAGV6i+M9skoiQdvpkEFFB4rR-JcUVjKY2ZqV_rsG-xwoTDwbGQ@mail.gmail.com>
Message-ID: <DAA05AC6-E774-4DA0-9662-A9472EC5D1AD@kintel.net>


> On Nov 10, 2015, at 10:33 AM, doug moen <doug at moens.org> wrote:
> 
> I think that the underlying topic of discussion is: polyhedron() is difficult to use. Is there an easier way to convert a collection of vertices into a 3D object?

Another potential operator: skin
-> create and orient a bunch of 2D polygons in 3D space and create a skin around the result.

This is already possible in user-space, but requires building 2D shapes manually:
https://github.com/openscad/list-comprehension-demos#extrusionscad

 -Marius



From Torsten.Paul at gmx.de  Tue Nov 10 13:24:00 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Tue, 10 Nov 2015 19:24:00 +0100
Subject: [OpenSCAD] Polyhedron()
In-Reply-To: <CAGV6i+M9skoiQdvpkEFFB4rR-JcUVjKY2ZqV_rsG-xwoTDwbGQ@mail.gmail.com>
References: <1447152926772-14338.post@n5.nabble.com>	<1447157140051-14340.post@n5.nabble.com>	<CAEEmnrOELAr7u-a3LZ3KF6BWsAqNe_xvU12aJUrO=b+ok7iswQ@mail.gmail.com>	<CAJgOqAAkxhdgv4A=79+x6P5UmwWoCPVEcHSrAcw4z1sXKiHZoQ@mail.gmail.com>
	<CAGV6i+M9skoiQdvpkEFFB4rR-JcUVjKY2ZqV_rsG-xwoTDwbGQ@mail.gmail.com>
Message-ID: <56423640.3000305@gmx.de>

On 11/10/2015 04:33 PM, doug moen wrote:
> Peter Falke has suggested the idea of feeding a collection of points to hull().
>
See also there: https://github.com/openscad/openscad/pull/1168

I guess that would really be a simple way to quickly create some type
of models. The restriction to convex models does restrict the general
usage though.

Unfortunately the generalized extrusion topic did not advance a lot
lately. This would also bring a very powerful tool that is much easier
to use than directly generating polyhedrons.

> The raw output from a 3D scanner is a point cloud. There exists software for
> converting this point cloud into a polyhedral mesh. I think it would be
> interesting to add a point_cloud() operation to OpenSCAD, for converting a
> list of vertices into a manifold 3D object. The algorithm should exist
> somewhere as open source. It's probably slower than polyhedron(), but much
> easier to use.
>
CGAL supports that, see http://doc.cgal.org/latest/Surface_reconstruction_points_3

I guess the concern here is how much geometry is generated, similar to the
issues with surface() that were discussed some days ago.

Still it would probably be a nice addition to the tool set.

ciao,
  Torsten.



From andrew at plumb.org  Tue Nov 10 13:31:08 2015
From: andrew at plumb.org (clothbot)
Date: Tue, 10 Nov 2015 11:31:08 -0700 (MST)
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <1447178579842-14350.post@n5.nabble.com>
References: <1447178579842-14350.post@n5.nabble.com>
Message-ID: <1447180268853-14354.post@n5.nabble.com>

This appears to be the code in question, called when converting doubles into
strings:

https://github.com/openscad/openscad/blob/master/src/value.cc#L225-L238

The key is this comment:

    // attempt to emulate Qt's QString.sprintf("%g"); from old OpenSCAD.
    // see https://github.com/openscad/openscad/issues/158

That https://github.com/openscad/openscad/issues/158 contains details about
the thought-process that went into it.

Andrew.



--
View this message in context: http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14354.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Tue Nov 10 13:42:58 2015
From: marius at kintel.net (Marius Kintel)
Date: Tue, 10 Nov 2015 13:42:58 -0500
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
	at 7th significant digit
In-Reply-To: <1447180268853-14354.post@n5.nabble.com>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
Message-ID: <07831BC4-8E5E-435A-A792-F684F4D964CF@kintel.net>

> On Nov 10, 2015, at 13:31 PM, clothbot <andrew at plumb.org> wrote:
> 
> That https://github.com/openscad/openscad/issues/158 contains details about
> the thought-process that went into it.
> 

FYI: The test framework now has a better way of dealing with cross-platform rounding differences, so that aspect of the problem isn?t an issue any longer.

 -Marius



From marius at kintel.net  Tue Nov 10 13:44:47 2015
From: marius at kintel.net (Marius Kintel)
Date: Tue, 10 Nov 2015 13:44:47 -0500
Subject: [OpenSCAD] Polyhedron()
In-Reply-To: <56423640.3000305@gmx.de>
References: <1447152926772-14338.post@n5.nabble.com>
	<1447157140051-14340.post@n5.nabble.com>
	<CAEEmnrOELAr7u-a3LZ3KF6BWsAqNe_xvU12aJUrO=b+ok7iswQ@mail.gmail.com>
	<CAJgOqAAkxhdgv4A=79+x6P5UmwWoCPVEcHSrAcw4z1sXKiHZoQ@mail.gmail.com>
	<CAGV6i+M9skoiQdvpkEFFB4rR-JcUVjKY2ZqV_rsG-xwoTDwbGQ@mail.gmail.com>
	<56423640.3000305@gmx.de>
Message-ID: <73DD1B07-F94F-4B26-823D-B51B96CC8E11@kintel.net>

> On Nov 10, 2015, at 13:24 PM, Torsten Paul <Torsten.Paul at gmx.de> wrote:
> 
> On 11/10/2015 04:33 PM, doug moen wrote:
>> Peter Falke has suggested the idea of feeding a collection of points to hull().
>> 
> See also there: https://github.com/openscad/openscad/pull/1168
> 
Ah, right. The old CGAL dependency issue.
I?m thinking we should stop looking at CGAL as a library, but as a collection of tools, write wrappers for each of these tools separately, and keep the library dependency decoupled from any interfaces.

 -Marius



From oz.at.michael at gmail.com  Tue Nov 10 20:26:20 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Tue, 10 Nov 2015 18:26:20 -0700 (MST)
Subject: [OpenSCAD] Possible bug in preview vs Render?
In-Reply-To: <1447202678449-14357.post@n5.nabble.com>
References: <1447202678449-14357.post@n5.nabble.com>
Message-ID: <1447205180093-14358.post@n5.nabble.com>

Hi sgall,

Welcome to the forum.

Firstly, you should also subscribe to the mailing list, see  here
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  .
Must members just read the mailing list and will only see posts flagged
"This post has NOT been accepted by the mailing list yet" in passing.

Secondly, your issue.

That works OK for me, so it is likely a driver issue, try updating your
graphics drivers, also try the Edit/Preference/Advanced "Force Goldfeather'
setting. 

If that fails could you post the info from Help/Library info.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Possible-bug-in-preview-vs-Render-tp14357p14358.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Wed Nov 11 04:54:31 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Wed, 11 Nov 2015 02:54:31 -0700 (MST)
Subject: [OpenSCAD] Improving the doc
In-Reply-To: <1447234659607-14363.post@n5.nabble.com>
References: <1447132878960-14333.post@n5.nabble.com>
	<1447218255901-14361.post@n5.nabble.com>
	<1447232064697-14362.post@n5.nabble.com>
	<1447234659607-14363.post@n5.nabble.com>
Message-ID: <1447235671135-14364.post@n5.nabble.com>

Hi Doc,

There seems to be something wrong with your forum/mailing list setup.

As the first post does not say "This post has NOT been accepted by the
mailing list yet" but your subsequent post DO, I suspect that something is
wrong, or you may have unsubscribed from the OpenSCAD mailing list.

So all the posts where you 'threaten' and get 'mad' have not been seen by
the majority of mailing list members. Hence nobody is taking your bait.

I will check on your settings tomorrow, so don't go off half-cocked assuming
everyone has seen your posts.

There is at least one other user who was subscribed some time ago, but is
not now, so there may have been some issue recently.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Improving-the-doc-tp14333p14364.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From don at crystal-computing.co.uk  Wed Nov 11 05:37:39 2015
From: don at crystal-computing.co.uk (donrecardo)
Date: Wed, 11 Nov 2015 03:37:39 -0700 (MST)
Subject: [OpenSCAD] Can someone tell me how to correct this
Message-ID: <1447238259080-14365.post@n5.nabble.com>

I came across a SCAD program that generates DXF files for my laser cutter

It takes user parameters for length width screw size etc and generates the
DXF files that my laser then cuts

The program works fine except for one small fault 

If I tell it my screws are 12mm long it should make a slot for the screw to
sit in that is 
just a little longer than the screw ( say 13mm )and should make a cut out to
hold the nut that is maybe 8 mm down the slot so the 12mm screw can reach it
ok 

However when I tell it I want to use a 12 mm screw it makes the slot 15mm
long and puts the
cut out for the nut almost 9mm down so the screw cannot reach it  ( well it
does but only by 0.2mm) so the thread doesn't engage

 

box_generator.scad
<http://forum.openscad.org/file/n14365/box_generator.scad>  


Cheers 
Don



--
View this message in context: http://forum.openscad.org/Can-someone-tell-me-how-to-correct-this-tp14365.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Wed Nov 11 06:52:51 2015
From: mschafer at wireframe.biz (Neon22)
Date: Wed, 11 Nov 2015 04:52:51 -0700 (MST)
Subject: [OpenSCAD] Can someone tell me how to correct this
In-Reply-To: <1447238259080-14365.post@n5.nabble.com>
References: <1447238259080-14365.post@n5.nabble.com>
Message-ID: <1447242771450-14366.post@n5.nabble.com>

near the bottom you might see a line like this:


LengthScrewSlots(length, tablengthperiod, screwLength, screwDiameter,
hexWidth,hexThickness, offsetHex=screwLength*.6666);


That last number is the offset the hex screw is down the shaft.
The author did not consistently define offsetHex everytime the function is
called. Sometimes its missing. Not sure why. Possibly an error.

The value of 0.6666 seems arbitrary and is too big for your example case. A
global with a mm distance would probably be better.

I suggest you play with value and make all calls to LengthScrewSlots include
the same calc.
You should also check WidthScrewSlots which may suffer from the same
problems.

Is this enough to help you ?



--
View this message in context: http://forum.openscad.org/Can-someone-tell-me-how-to-correct-this-tp14365p14366.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From don at crystal-computing.co.uk  Wed Nov 11 08:13:15 2015
From: don at crystal-computing.co.uk (donrecardo)
Date: Wed, 11 Nov 2015 06:13:15 -0700 (MST)
Subject: [OpenSCAD] Can someone tell me how to correct this
In-Reply-To: <1447242771450-14366.post@n5.nabble.com>
References: <1447238259080-14365.post@n5.nabble.com>
	<1447242771450-14366.post@n5.nabble.com>
Message-ID: <1447247595033-14367.post@n5.nabble.com>

Hi NEON
            and thanks for your reply , It has 50% cured the problem

I found out the lines with the 0.6666 value , there were 3 of them
and by making that number smaller it does move the nut closer to where it
should be 
however it only moves half of the nuts on each panel 
panels with 2 nuts on it only adjusts 1 and panels with 4 nuts on it only
adjusts 2

My problem is I dont really have a clue how SCAD works  so havent any idea
how to move the others 
that are still wrong . I have tried altering various things just to see what
they do but
none has sorted it out yet 

Don



--
View this message in context: http://forum.openscad.org/Can-someone-tell-me-how-to-correct-this-tp14365p14367.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From vo.publique at gmail.com  Wed Nov 11 08:37:17 2015
From: vo.publique at gmail.com (vicnet)
Date: Wed, 11 Nov 2015 06:37:17 -0700 (MST)
Subject: [OpenSCAD] ranges to vectors
In-Reply-To: <1397735820086-7700.post@n5.nabble.com>
References: <1397271750799-7651.post@n5.nabble.com>
	<1397723220128-7698.post@n5.nabble.com>
	<1397732406627-7699.post@n5.nabble.com>
	<1397735820086-7700.post@n5.nabble.com>
Message-ID: <1447249037281-14368.post@n5.nabble.com>

Hello,

Something missing also is to use range for indexes, like in python.

Example:  v=[0,1,2,3]; v[0:1] should return a vector with 2 fist elems.
Also, v[:2], v[1:], v[:-1]... should work !

a+
Vicnet




--
View this message in context: http://forum.openscad.org/ranges-to-vectors-tp7651p14368.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From britfox42 at hotmail.com  Wed Nov 11 09:11:59 2015
From: britfox42 at hotmail.com (Britfox)
Date: Wed, 11 Nov 2015 07:11:59 -0700 (MST)
Subject: [OpenSCAD] Difference between an extruded polygon and a cylinder
Message-ID: <1447251119738-14369.post@n5.nabble.com>

Hello,

*$fa = 0.01;
$fs = 0.2;

difference(){
translate([0,0,10]) rotate([270,0,0])
rotate_extrude() polygon(points=[
[3,0],[3,20],
[6,20],[6,18],
[5,18],[4,16],
[4,0]]);
cylinder(20,8,8);}*

And below is what i'm seeing using this code and the preview mode:
<http://forum.openscad.org/file/n14369/151111025932137720.png> 

I'm seeing "through" the oject at certain view angles:
Is this a known problem ? Does it come from my old graphic card drivers ?

I guess the other way to do this is by using some primitives solids but I
really like the rotate_extrude and polygon commands.

Thanks for your help.




--
View this message in context: http://forum.openscad.org/Difference-between-an-extruded-polygon-and-a-cylinder-tp14369.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From thehans at gmail.com  Wed Nov 11 09:26:52 2015
From: thehans at gmail.com (thehans)
Date: Wed, 11 Nov 2015 07:26:52 -0700 (MST)
Subject: [OpenSCAD] Difference between an extruded polygon and a cylinder
In-Reply-To: <1447251119738-14369.post@n5.nabble.com>
References: <1447251119738-14369.post@n5.nabble.com>
Message-ID: <1447252012858-14370.post@n5.nabble.com>

This issue is solved by increasing the convexity parameter on the
rotate_extrude call

just increasing it to 3 works for me, on your example.  More complex objects
may require higher values.  Higher values will take longer to preview

rotate_extrude(convexity=3) polygon(points=[
...



--
View this message in context: http://forum.openscad.org/Difference-between-an-extruded-polygon-and-a-cylinder-tp14369p14370.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From britfox42 at hotmail.com  Wed Nov 11 09:31:05 2015
From: britfox42 at hotmail.com (Britfox)
Date: Wed, 11 Nov 2015 07:31:05 -0700 (MST)
Subject: [OpenSCAD] Difference between an extruded polygon and a cylinder
In-Reply-To: <1447252012858-14370.post@n5.nabble.com>
References: <1447251119738-14369.post@n5.nabble.com>
	<1447252012858-14370.post@n5.nabble.com>
Message-ID: <1447252265055-14371.post@n5.nabble.com>

Thank you thehans ! 



--
View this message in context: http://forum.openscad.org/Difference-between-an-extruded-polygon-and-a-cylinder-tp14369p14371.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Wed Nov 11 13:53:29 2015
From: runsun at gmail.com (runsun)
Date: Wed, 11 Nov 2015 11:53:29 -0700 (MST)
Subject: [OpenSCAD] ranges to vectors
In-Reply-To: <CAGV6i+OY7v+vsdTkAZZe35aCDQE-nGy5bGJs6RCHhWV+so2Pxg@mail.gmail.com>
References: <1397271750799-7651.post@n5.nabble.com>
	<CAGV6i+OY7v+vsdTkAZZe35aCDQE-nGy5bGJs6RCHhWV+so2Pxg@mail.gmail.com>
Message-ID: <1447268009465-14373.post@n5.nabble.com>

doug.moen wrote
> In my opinion, len([0:9]) ought to work. A range ought to be accepted in
> any context where a vector is accepted, and should be automatically
> converted to a vector if necessary. Eg, concat([0:2], [8,9,10]) should
> return [0,1,2,8,9,10].

+1




-----

$  Runsun Pan, PhD 

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );

 $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif 






--
View this message in context: http://forum.openscad.org/ranges-to-vectors-tp7651p14373.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Wed Nov 11 14:02:55 2015
From: runsun at gmail.com (runsun)
Date: Wed, 11 Nov 2015 12:02:55 -0700 (MST)
Subject: [OpenSCAD] ranges to vectors
In-Reply-To: <1447249037281-14368.post@n5.nabble.com>
References: <1397271750799-7651.post@n5.nabble.com>
	<1397723220128-7698.post@n5.nabble.com>
	<1397732406627-7699.post@n5.nabble.com>
	<1397735820086-7700.post@n5.nabble.com>
	<1447249037281-14368.post@n5.nabble.com>
Message-ID: <1447268575838-14374.post@n5.nabble.com>

vicnet wrote
> Hello,
> 
> Something missing also is to use range for indexes, like in python.
> 
> Example:  v=[0,1,2,3]; v[0:1] should return a vector with 2 fist elems.
> Also, v[:2], v[1:], v[:-1]... should work !
> 
> a+
> Vicnet

There's a similar discussion couple of months back:  Proposal for range (
[i:j:k] ) improvement
<http://forum.openscad.org/Proposal-for-range-i-j-k-improvement-td13184.html> 
. 



-----

$  Runsun Pan, PhD 

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );

 $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif 






--
View this message in context: http://forum.openscad.org/ranges-to-vectors-tp7651p14374.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Wed Nov 11 16:04:11 2015
From: runsun at gmail.com (runsun)
Date: Wed, 11 Nov 2015 14:04:11 -0700 (MST)
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <1447180268853-14354.post@n5.nabble.com>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
Message-ID: <1447275851037-14375.post@n5.nabble.com>

@clothbot: Thx for the links. After reviewing them, however, I do believe
this is a different issue. What bothers me is not "how many digits" in
specific cases (like 8 vs 8.0000000004) nor "different platforms", but what
looks like a totally irregular manner of handling the number 5 --- sometimes
it is rounded up, sometimes it is rounded down, and for all the time I spent
in investigation, I couldn't figure out what rule OpenSCAD follows to decide
rounding up or down number 5. 


clothbot wrote
> This appears to be the code in question, called when converting doubles
> into strings:
> 
> https://github.com/openscad/openscad/blob/master/src/value.cc#L225-L238
> 
> The key is this comment:
> 
>     // attempt to emulate Qt's QString.sprintf("%g"); from old OpenSCAD.
>     // see https://github.com/openscad/openscad/issues/158
> 
> That https://github.com/openscad/openscad/issues/158 contains details
> about the thought-process that went into it.
> 
> Andrew.





-----

$  Runsun Pan, PhD 

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );

 $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif 






--
View this message in context: http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14375.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From experimentalist at aaawesome.co.uk  Wed Nov 11 16:51:49 2015
From: experimentalist at aaawesome.co.uk (Experimentalist)
Date: Wed, 11 Nov 2015 14:51:49 -0700 (MST)
Subject: [OpenSCAD] Create a tube with rounded rims
Message-ID: <1447278709985-14376.post@n5.nabble.com>

Hi

Sorry for the nube question.

I am trying to create a tube with rounded rims top and bottom. 

Can I extrude this in the Z axis to create the tube:

    rotate_extrude(convexity = 10)
        translate([10, 0, 0])
            circle(d = 1); 

Can't figure it out but sure it must be simple

Thanks
Ex



--
View this message in context: http://forum.openscad.org/Create-a-tube-with-rounded-rims-tp14376.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Wed Nov 11 16:58:10 2015
From: marius at kintel.net (Marius Kintel)
Date: Wed, 11 Nov 2015 16:58:10 -0500
Subject: [OpenSCAD] Create a tube with rounded rims
In-Reply-To: <1447278709985-14376.post@n5.nabble.com>
References: <1447278709985-14376.post@n5.nabble.com>
Message-ID: <9DF0027B-F101-4F29-B43C-D0A23C4B5FAF@kintel.net>

This is one suggesion:

$fa=1;
$fs=0.2;
rotate_extrude(convexity = 10) translate([10, 0, 0]) hull() {
    circle(d = 1); 
    translate([0,20]) circle(d = 1); 
}

 -Marius


From experimentalist at aaawesome.co.uk  Wed Nov 11 17:03:02 2015
From: experimentalist at aaawesome.co.uk (Experimentalist)
Date: Wed, 11 Nov 2015 15:03:02 -0700 (MST)
Subject: [OpenSCAD] Create a tube with rounded rims
In-Reply-To: <9DF0027B-F101-4F29-B43C-D0A23C4B5FAF@kintel.net>
References: <1447278709985-14376.post@n5.nabble.com>
	<9DF0027B-F101-4F29-B43C-D0A23C4B5FAF@kintel.net>
Message-ID: <1447279382696-14378.post@n5.nabble.com>

Marius

Thanks. Exactly what I was after. I will go and break it down and understand
it now 

Ex



--
View this message in context: http://forum.openscad.org/Create-a-tube-with-rounded-rims-tp14376p14378.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Wed Nov 11 21:12:24 2015
From: doug at moens.org (doug moen)
Date: Wed, 11 Nov 2015 21:12:24 -0500
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <1447275851037-14375.post@n5.nabble.com>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
Message-ID: <CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>

The round(x) function rounds away from zero. So round(0.5) == 1 and
round(-0.5) == -1.

The conversion from floating point to string is, in my opinion, broken. I
wrote a long explanation of why it is broken, and what I'd like to do
instead, in an earlier post. I should create an issue for this.

But briefly, I would like the float->string conversion to produce the
shortest floating point literal that, when read, exactlly reproduces the
original floating point number. This means no information is thrown away.


On 11 November 2015 at 16:04, runsun <runsun at gmail.com> wrote:

> @clothbot: Thx for the links. After reviewing them, however, I do believe
> this is a different issue. What bothers me is not "how many digits" in
> specific cases (like 8 vs 8.0000000004) nor "different platforms", but what
> looks like a totally irregular manner of handling the number 5 ---
> sometimes
> it is rounded up, sometimes it is rounded down, and for all the time I
> spent
> in investigation, I couldn't figure out what rule OpenSCAD follows to
> decide
> rounding up or down number 5.
>
>
> clothbot wrote
> > This appears to be the code in question, called when converting doubles
> > into strings:
> >
> > https://github.com/openscad/openscad/blob/master/src/value.cc#L225-L238
> >
> > The key is this comment:
> >
> >     // attempt to emulate Qt's QString.sprintf("%g"); from old OpenSCAD.
> >     // see https://github.com/openscad/openscad/issues/158
> >
> > That https://github.com/openscad/openscad/issues/158 contains details
> > about the thought-process that went into it.
> >
> > Andrew.
>
>
>
>
>
> -----
>
> $  Runsun Pan, PhD
>
> $ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 ,
> git );
>
>  $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14375.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151111/4e43987d/attachment.html>

From doug at moens.org  Wed Nov 11 21:25:47 2015
From: doug at moens.org (doug moen)
Date: Wed, 11 Nov 2015 21:25:47 -0500
Subject: [OpenSCAD] ranges to vectors
In-Reply-To: <1447268009465-14373.post@n5.nabble.com>
References: <1397271750799-7651.post@n5.nabble.com>
	<CAGV6i+OY7v+vsdTkAZZe35aCDQE-nGy5bGJs6RCHhWV+so2Pxg@mail.gmail.com>
	<1447268009465-14373.post@n5.nabble.com>
Message-ID: <CAGV6i+NEhyRBVOL+YjNu02ntwOtJE+y4aWAhHXAA+0PY21f=cw@mail.gmail.com>

My range proposal is here:
https://github.com/doug-moen/openscad2/blob/master/rfc/Sequences.md

On 11 November 2015 at 13:53, runsun <runsun at gmail.com> wrote:

> doug.moen wrote
> > In my opinion, len([0:9]) ought to work. A range ought to be accepted in
> > any context where a vector is accepted, and should be automatically
> > converted to a vector if necessary. Eg, concat([0:2], [8,9,10]) should
> > return [0,1,2,8,9,10].
>
> +1
>
>
>
>
> -----
>
> $  Runsun Pan, PhD
>
> $ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 ,
> git );
>
>  $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/ranges-to-vectors-tp7651p14373.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151111/ee1d428d/attachment.html>

From jon at jonbondy.com  Wed Nov 11 21:41:16 2015
From: jon at jonbondy.com (jon)
Date: Wed, 11 Nov 2015 21:41:16 -0500
Subject: [OpenSCAD] bolded fonts using text()
Message-ID: <5643FC4C.3040207@jonbondy.com>

I assume that there is no way to obtain a bolded string using text()

Jon


From marius at kintel.net  Wed Nov 11 21:51:58 2015
From: marius at kintel.net (Marius Kintel)
Date: Wed, 11 Nov 2015 21:51:58 -0500
Subject: [OpenSCAD] bolded fonts using text()
In-Reply-To: <5643FC4C.3040207@jonbondy.com>
References: <5643FC4C.3040207@jonbondy.com>
Message-ID: <7B97D074-DC26-4B7B-8151-6543C3D05A2A@kintel.net>

Like this?

text("Hello", font="Helvetica:style=Light");
translate([0,-12]) text("Hello Bold", "Helvetica:style=Bold?);


> On Nov 11, 2015, at 21:41 PM, jon <jon at jonbondy.com> wrote:
> 
> I assume that there is no way to obtain a bolded string using text()
> 
> Jon
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From jon at jonbondy.com  Wed Nov 11 22:18:55 2015
From: jon at jonbondy.com (jon)
Date: Wed, 11 Nov 2015 22:18:55 -0500
Subject: [OpenSCAD] bolded fonts using text()
In-Reply-To: <7B97D074-DC26-4B7B-8151-6543C3D05A2A@kintel.net>
References: <5643FC4C.3040207@jonbondy.com>
	<7B97D074-DC26-4B7B-8151-6543C3D05A2A@kintel.net>
Message-ID: <5644051F.3070106@jonbondy.com>

Ah.  The very last example.  Might be worth adding a comment about this 
in the definition of the Font field.

Thanks!

On 11/11/2015 9:51 PM, Marius Kintel wrote:
> Like this?
>
> text("Hello", font="Helvetica:style=Light");
> translate([0,-12]) text("Hello Bold", "Helvetica:style=Bold?);
>
>
>> On Nov 11, 2015, at 21:41 PM, jon <jon at jonbondy.com> wrote:
>>
>> I assume that there is no way to obtain a bolded string using text()
>>
>> Jon
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> -----
> No virus found in this message.
> Checked by AVG - www.avg.com
> Version: 2016.0.7227 / Virus Database: 4457/10981 - Release Date: 11/11/15



From serve at perdix.org  Wed Nov 11 22:26:49 2015
From: serve at perdix.org (Mekko)
Date: Wed, 11 Nov 2015 20:26:49 -0700 (MST)
Subject: [OpenSCAD] Question about Debug Modifier (#)
Message-ID: <1447298809276-14384.post@n5.nabble.com>

I really like the transparency that comes with the Debug Modifier (#) but I'm
not sure I understand what determines its behavior. Some objects are
rendered in transparent pink, others are not. I couldn't find anything in
the documentation that explains what factors are at work.

If there's some other way of achieving transparency - so that I can see an
object inside an object - please share it with me. I tried using the
transparency argument in color() but that didn't work.

Thanks!



--
View this message in context: http://forum.openscad.org/Question-about-Debug-Modifier-tp14384.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Wed Nov 11 22:39:22 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Wed, 11 Nov 2015 20:39:22 -0700 (MST)
Subject: [OpenSCAD] bolded fonts using text()
In-Reply-To: <5644051F.3070106@jonbondy.com>
References: <5643FC4C.3040207@jonbondy.com>
	<7B97D074-DC26-4B7B-8151-6543C3D05A2A@kintel.net>
	<5644051F.3070106@jonbondy.com>
Message-ID: <1447299562227-14385.post@n5.nabble.com>

jon_bondy wrote
> Might be worth adding a comment about this in the definition of the Font
> field.

How's  this
<https://en.wikibooks.org/w/index.php?title=OpenSCAD_User_Manual/Text&stable=1> 
?



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/bolded-fonts-using-text-tp14381p14385.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Wed Nov 11 23:03:29 2015
From: c.t.chin at szu.edu.cn (=?UTF-8?B?Q0hJTiwgQ2hpZW4gVGluZyDpkrHlu7rluq0=?=)
Date: Thu, 12 Nov 2015 12:03:29 +0800
Subject: [OpenSCAD] Improving the doc
In-Reply-To: <1447235671135-14364.post@n5.nabble.com>
References: <1447132878960-14333.post@n5.nabble.com>
	<1447218255901-14361.post@n5.nabble.com>
	<1447232064697-14362.post@n5.nabble.com>
	<1447234659607-14363.post@n5.nabble.com>
	<1447235671135-14364.post@n5.nabble.com>
Message-ID: <56440F91.6010303@szu.edu.cn>

I've un-changed my email back to my work email.  Hope that may be a step 
to fix my mailing list issue.  Then I've to look into stop receiving 
emails from the list :-|

(this is a test message)

On 11/11/2015 5:54 PM, MichaelAtOz wrote:
> There seems to be something wrong with your forum/mailing list setup.
>

-- 
??? ?????????
???? ???????

CHIN, Chien Ting, Professor, Vice Chairman (Education)
Department of Biomedical Engineering
Shenzhen University
Tel: +86-755-8667-1915




From c.t.chin at szu.edu.cn  Wed Nov 11 23:12:20 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Wed, 11 Nov 2015 21:12:20 -0700 (MST)
Subject: [OpenSCAD] Polyhedron()
In-Reply-To: <DAA05AC6-E774-4DA0-9662-A9472EC5D1AD@kintel.net>
References: <1447152926772-14338.post@n5.nabble.com>
	<1447157140051-14340.post@n5.nabble.com>
	<CAEEmnrOELAr7u-a3LZ3KF6BWsAqNe_xvU12aJUrO=b+ok7iswQ@mail.gmail.com>
	<CAJgOqAAkxhdgv4A=79+x6P5UmwWoCPVEcHSrAcw4z1sXKiHZoQ@mail.gmail.com>
	<CAGV6i+M9skoiQdvpkEFFB4rR-JcUVjKY2ZqV_rsG-xwoTDwbGQ@mail.gmail.com>
	<DAA05AC6-E774-4DA0-9662-A9472EC5D1AD@kintel.net>
Message-ID: <1447301540452-14387.post@n5.nabble.com>

(I'm re-posting this, due to a tech issue, hope I'm not annoying anyone)


kintel wrote
> This would be cool. One challenge could be that the output of such an
> operation is depending on which algorithm was used, which would
> potentially lock us into one particular library or implementation where
> people start to depend on specific artifacts (similar to how people are
> using cylinder($fn=6) to create prisms).

Actually... upon looking into Wikipedia, the convex hull of a point cloud is
well-defined and not implementation/algorithm dependent.  Someone might
decide to write, say, Chan's algorithm
(https://en.wikipedia.org/wiki/Chan%27s_algorithm) into a OpenSCAD library,
with calling convention as doug suggested. 

On the other hand, the non-convex solid defined by a point cloud is
ill-posed.


doug.moen wrote
> this technique is not general, since it can't be used to
> construct a non-convex object. 

Consider the simple case of 9 points:


Which are the 8 vertices of a cube plus its center point.  A polyhedron with
all these vertices can be
a cube minus a pyramid but which way should the concave side face?  There
problem is ill-posed.

I have my imperfect solution to using polyhedron() to generate highly
complex solids, I understand 
the desire to make it easier to use (thanks to doug's post for
summarizing/clarifying the topic)
but someone need to come up with a rigourously posed question before someone
else could come up with a general solution.




--
View this message in context: http://forum.openscad.org/Polyhedron-tp14338p14387.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Wed Nov 11 23:21:42 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Wed, 11 Nov 2015 21:21:42 -0700 (MST)
Subject: [OpenSCAD] Improving the doc
In-Reply-To: <1447132878960-14333.post@n5.nabble.com>
References: <1447132878960-14333.post@n5.nabble.com>
Message-ID: <1447302102462-14388.post@n5.nabble.com>

(I'm re-posting my posts yesterday due to a tech issue, apologies if I'm
annoying...)

As I threatened to do, I've completely re-written Matrix Multiplication:

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language#Matrix_Multiplication

I am warning you, I will keep doing it unless someone stops me.




Continuing my rampage...

I've created an alternate version of the Section 1.1 General:

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/General_(by_c.t.chin)

While it still can use some work and refinement, I propose to replace the
entirety of General with it:

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language#General

You may notice I've written in my (perhaps very) radical idea of trimming
down all the statements,
etc etc down to just FOUR types: objects, variable assignments, preprocessor
commands, and
function and module definitions.  

I've decide that primitives and transformations are just modules. 
Primitives require no children, and a transformation, on its own, generates
no objects.  But they are both modules.  cube() can be given children (which
are ignored) and rotate() can be given no child (which produces nothing). 
So in the doc for programming language,  "objects" is perfectly sufficient
to cover modules, primitives and transformations.  

I've also cut out a lot of materials, e.g. select() (it's not part of the
language!), Getting Input (belongs much later in the doc), and other bits
(e.g. legacy issues) that adds unnecessary burden to someone who's learning
the language (target reader of this section).  The materials that I cut out
has been saved on separate files on my own PC so I'll find appropriate spots
to put back into the wiki.  

Since it's a radical re-write, I am only proposing this version for
consideration by the community.

If the response is hot, I will continue work on it and eventually overwrite
the existing Wiki page(s).  

If the response is warm, I will continue work on it but not edit the
existing Wiki until the response improves (or I quit).

If the response is cold, I will abandon it and get back to spending my time
on "more important things".  





I'm getting madder by the minute.  

L Boyd wrote
> The existing manual consists of many files, each of which describe a small
> portion of the total picture.  There is a list ( 3 actually ) of these
> files, which allow a user to access these various portions.

Where are these three lists you talked about?  If you mean these three:

http://www.openscad.org/documentation.html#user-manual
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual#Overview
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Print_version

Then yikes each is unsatisfactory.  For example, the following article is
pretty important in a comprehensive documentation:

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/undersized_circular_objects

Also this is a gem that I just discovered today:
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/For_C/Java/Python_Programmers

Both seem to be missing in any kind of complete doc, but can be found only
by linking:
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Primitive_Solids#cylinder

The For C/Java/Python Programmers page wasn't even linked to by any page
until today.

Is there even a comprehensive list of all the articles/pages on the Wiki?  I
suspect some more
gems have been written up by the good folks but still hidden due to
obscurity.   




--
View this message in context: http://forum.openscad.org/Improving-the-doc-tp14333p14388.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Wed Nov 11 23:56:22 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Wed, 11 Nov 2015 21:56:22 -0700 (MST)
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
Message-ID: <1447304182993-14389.post@n5.nabble.com>





--
View this message in context: http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14389.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Thu Nov 12 00:16:04 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Wed, 11 Nov 2015 22:16:04 -0700 (MST)
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
Message-ID: <1447305364511-14391.post@n5.nabble.com>

doug.moen wrote
> The conversion from floating point to string is, in my opinion, broken. I
> wrote a long explanation of why it is broken, and what I'd like to do
> instead, in an earlier post. I should create an issue for this.

Consider the many many things (some are quite challenging) that 
still need adding/fixing/improving in OpenSCAD, I'm not sure str(n)
is high (or even mid-) priority.  

It seems almost easy to just port sprintf() to OpenSCAD and that's 
that.  But in an odd way, I almost relish the various handicaps OpenSCAD 
throw at us.  The subtle message is: DON'T use OpenSCAD for 
conventional programming, don't do text processing (don't even dream
about adding regular expression to OpenSCAD), don't do general
file I/O (fopen, fread, fwrite, fclose), don't do advanced computations (I
was 
toying with the masochistic(???)  idea of writing a matrix inversion
algorithm 
in OpenSCAD).

Sticks to making solids (STL) on OpenSCAD.  A true geek would just mix-
language program (Java+OpenSCAD) to solve his practical problems and 
leaving the masochism (matrix inversion in OpenSCAD) to the nut jobs.  

(hmmm I am assuming no one had actually done it... have I called some 
very smart person a nut job? ... oh wait... it seems really probably
possible
to write it... eh...) 


(oops sorry for empty post previous) 



--
View this message in context: http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14391.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From hmbright at fastmail.com  Thu Nov 12 00:37:18 2015
From: hmbright at fastmail.com (donbright)
Date: Wed, 11 Nov 2015 22:37:18 -0700 (MST)
Subject: [OpenSCAD] Access violation on starting OpenSCAD (Win8)
In-Reply-To: <CAK_H_uH9V5Lst2=9XzuiLLM7w7M+T6NWg7n=PYcZ=sD74vXAxg@mail.gmail.com>
References: <1445734059737-14204.post@n5.nabble.com>
	<CAK_H_uFEs9ze_BzhLCVPnAs8ScYy_RDo3PfdtCRAtgb6+TNnsw@mail.gmail.com>
	<1445902884809-14219.post@n5.nabble.com>
	<CAK_H_uHbimHGKfj9dg+Y5ks+-tZynq6QF8+kC0aYpvHjVvSSZQ@mail.gmail.com>
	<CAK_H_uFRt4U8F5LOKfr5BWpAnO3dABddi-5dcJO1L_Wp4c0rMg@mail.gmail.com>
	<1446118991.338974.423512729.2107D472@webmail.messagingengine.com>
	<CAK_H_uHYg=pKvwCh6pvpX2ZRCaMeiZefs7AD2LhPtFz4YbBKCw@mail.gmail.com>
	<1446174340.265441.424258265.0AE036FF@webmail.messagingengine.com>
	<CAK_H_uE4dtijy4BY8d8iT4gfratQfFbG1XXdc8Rh2u3tUUPjew@mail.gmail.com>
	<CAK_H_uH9V5Lst2=9XzuiLLM7w7M+T6NWg7n=PYcZ=sD74vXAxg@mail.gmail.com>
Message-ID: <1447306638526-14392.post@n5.nabble.com>


Hello

There are some new test builds uploaded (listed below) using a very recent
checkout of the MXE MingW cross build system. 

It would be extremely helpful if anyone with a Windows machine that crashed
on OpenSCAD 2015 would be able to take a few minutes and test both a shared
build and a static build, just enough to see if they still crash before
bootup, and if not to see whether they will do a simple preview of a cube or
whatever. 

http://files.openscad.org/snapshots/OpenSCAD-2015.11.11-MingW-x86-32-shared.zip

http://files.openscad.org/snapshots/OpenSCAD-2015.11.11-MingW-x86-32-static.zip

http://files.openscad.org/snapshots/OpenSCAD-2015.11.11-MingW-x86-64-shared.zip

http://files.openscad.org/snapshots/OpenSCAD-2015.11.11-MingW-x86-64-static.zip

Basically the theory being tested is whether or not the crash is caused by
Static Linking vs Shared Linking... or whether it is just MXE / MingW in
general that is causing the crash. 

Thanks!!!!


--
don bright




--
View this message in context: http://forum.openscad.org/Access-violation-on-starting-OpenSCAD-Win8-tp14201p14392.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From vo.publique at gmail.com  Thu Nov 12 03:10:30 2015
From: vo.publique at gmail.com (vicnet)
Date: Thu, 12 Nov 2015 01:10:30 -0700 (MST)
Subject: [OpenSCAD] ranges to vectors
In-Reply-To: <CAGV6i+NEhyRBVOL+YjNu02ntwOtJE+y4aWAhHXAA+0PY21f=cw@mail.gmail.com>
References: <1397271750799-7651.post@n5.nabble.com>
	<CAGV6i+OY7v+vsdTkAZZe35aCDQE-nGy5bGJs6RCHhWV+so2Pxg@mail.gmail.com>
	<1447268009465-14373.post@n5.nabble.com>
	<CAGV6i+NEhyRBVOL+YjNu02ntwOtJE+y4aWAhHXAA+0PY21f=cw@mail.gmail.com>
Message-ID: <1447315830691-14393.post@n5.nabble.com>

Hello,


doug.moen wrote
> My range proposal is here:
> https://github.com/doug-moen/openscad2/blob/master/rfc/Sequences.md

Wahou, nice compilation !

Just add that end parameter for slice could be negative.

For exemple v[:-1] returns v without it's last element.

Don't like .. notation, espcially for increments [start,start+inc..end].
Too complex for me.
Prefer current notation with :

a+
Vicnet



--
View this message in context: http://forum.openscad.org/ranges-to-vectors-tp7651p14393.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From kent.ahlberg at comhem.se  Thu Nov 12 03:57:35 2015
From: kent.ahlberg at comhem.se (Kent Ahlberg)
Date: Thu, 12 Nov 2015 09:57:35 +0100
Subject: [OpenSCAD] Access violation on starting OpenSCAD (Win8)
In-Reply-To: <1447306638526-14392.post@n5.nabble.com>
References: <1445734059737-14204.post@n5.nabble.com>
	<CAK_H_uFEs9ze_BzhLCVPnAs8ScYy_RDo3PfdtCRAtgb6+TNnsw@mail.gmail.com>
	<1445902884809-14219.post@n5.nabble.com>
	<CAK_H_uHbimHGKfj9dg+Y5ks+-tZynq6QF8+kC0aYpvHjVvSSZQ@mail.gmail.com>
	<CAK_H_uFRt4U8F5LOKfr5BWpAnO3dABddi-5dcJO1L_Wp4c0rMg@mail.gmail.com>
	<1446118991.338974.423512729.2107D472@webmail.messagingengine.com>
	<CAK_H_uHYg=pKvwCh6pvpX2ZRCaMeiZefs7AD2LhPtFz4YbBKCw@mail.gmail.com>
	<1446174340.265441.424258265.0AE036FF@webmail.messagingengine.com>
	<CAK_H_uE4dtijy4BY8d8iT4gfratQfFbG1XXdc8Rh2u3tUUPjew@mail.gmail.com>
	<CAK_H_uH9V5Lst2=9XzuiLLM7w7M+T6NWg7n=PYcZ=sD74vXAxg@mail.gmail.com>
	<1447306638526-14392.post@n5.nabble.com>
Message-ID: <D26A11B0.2747%kent.ahlberg@comhem.se>

Hi, have tested OpenScad 2015-11-11 and it seems to work in my Win 10. I
will continue to test.


Regards

Kent Ahlberg




Den 151211 06:37 skrev Discuss on behalf of donbright
<discuss-bounces at lists.openscad.org on behalf of hmbright at fastmail.com>:

>
>Hello
>
>There are some new test builds uploaded (listed below) using a very recent
>checkout of the MXE MingW cross build system.
>
>It would be extremely helpful if anyone with a Windows machine that
>crashed
>on OpenSCAD 2015 would be able to take a few minutes and test both a
>shared
>build and a static build, just enough to see if they still crash before
>bootup, and if not to see whether they will do a simple preview of a cube
>or
>whatever. 
>
>http://files.openscad.org/snapshots/OpenSCAD-2015.11.11-MingW-x86-32-share
>d.zip
>
>http://files.openscad.org/snapshots/OpenSCAD-2015.11.11-MingW-x86-32-stati
>c.zip
>
>http://files.openscad.org/snapshots/OpenSCAD-2015.11.11-MingW-x86-64-share
>d.zip
>
>http://files.openscad.org/snapshots/OpenSCAD-2015.11.11-MingW-x86-64-stati
>c.zip
>
>Basically the theory being tested is whether or not the crash is caused by
>Static Linking vs Shared Linking... or whether it is just MXE / MingW in
>general that is causing the crash.
>
>Thanks!!!!
>
>
>--
>don bright
>
>
>
>
>--
>View this message in context:
>http://forum.openscad.org/Access-violation-on-starting-OpenSCAD-Win8-tp142
>01p14392.html
>Sent from the OpenSCAD mailing list archive at Nabble.com.
>
>_______________________________________________
>OpenSCAD mailing list
>Discuss at lists.openscad.org
>http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org




From peter.ragosch at kabelmail.de  Thu Nov 12 04:16:46 2015
From: peter.ragosch at kabelmail.de (Peter Ragosch)
Date: Thu, 12 Nov 2015 10:16:46 +0100
Subject: [OpenSCAD] Question about Debug Modifier (#)
In-Reply-To: <1447298809276-14384.post@n5.nabble.com>
References: <1447298809276-14384.post@n5.nabble.com>
Message-ID: <20151112101646.1ffc53ec@raven.ragdomain.top>

Hi!

Use alpha

color

Displays the child elements using the specified RGB color + alpha
value. This is only used for the F5 preview as CGAL and STL (F6) do not
currently support color. The alpha value will default to 1.0 (opaque)
if not specified.

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language
section color

Peter


Am Wed, 11 Nov 2015 20:26:49 -0700 (MST)
schrieb Mekko <serve at perdix.org>:

> I really like the transparency that comes with the Debug Modifier (#)
> but I'm not sure I understand what determines its behavior. Some
> objects are rendered in transparent pink, others are not. I couldn't
> find anything in the documentation that explains what factors are at
> work.
> 
> If there's some other way of achieving transparency - so that I can
> see an object inside an object - please share it with me. I tried
> using the transparency argument in color() but that didn't work.
> 
> Thanks!
> 
> 
> 
> --
> View this message in context:
> http://forum.openscad.org/Question-about-Debug-Modifier-tp14384.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> 



-- 
Mit freundlichen Gr??en
Kind Regards

Peter Ragosch



From nop.head at gmail.com  Thu Nov 12 04:28:30 2015
From: nop.head at gmail.com (nop head)
Date: Thu, 12 Nov 2015 09:28:30 +0000
Subject: [OpenSCAD] Question about Debug Modifier (#)
In-Reply-To: <20151112101646.1ffc53ec@raven.ragdomain.top>
References: <1447298809276-14384.post@n5.nabble.com>
	<20151112101646.1ffc53ec@raven.ragdomain.top>
Message-ID: <CAEEmnrOCfj33uKvjg05tYsCxscj+Nt=TWeBjzzWKwiOgj=S92Q@mail.gmail.com>

Also, if you want to see objects behind a transparent one you have to draw
them first.

On 12 November 2015 at 09:16, Peter Ragosch <peter.ragosch at kabelmail.de>
wrote:

> Hi!
>
> Use alpha
>
> color
>
> Displays the child elements using the specified RGB color + alpha
> value. This is only used for the F5 preview as CGAL and STL (F6) do not
> currently support color. The alpha value will default to 1.0 (opaque)
> if not specified.
>
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language
> section color
>
> Peter
>
>
> Am Wed, 11 Nov 2015 20:26:49 -0700 (MST)
> schrieb Mekko <serve at perdix.org>:
>
> > I really like the transparency that comes with the Debug Modifier (#)
> > but I'm not sure I understand what determines its behavior. Some
> > objects are rendered in transparent pink, others are not. I couldn't
> > find anything in the documentation that explains what factors are at
> > work.
> >
> > If there's some other way of achieving transparency - so that I can
> > see an object inside an object - please share it with me. I tried
> > using the transparency argument in color() but that didn't work.
> >
> > Thanks!
> >
> >
> >
> > --
> > View this message in context:
> > http://forum.openscad.org/Question-about-Debug-Modifier-tp14384.html
> > Sent from the OpenSCAD mailing list archive at Nabble.com.
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> >
>
>
>
> --
> Mit freundlichen Gr??en
> Kind Regards
>
> Peter Ragosch
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151112/8aa5d942/attachment.html>

From martin.Herdieckerhoff at mnet-mail.de  Thu Nov 12 04:49:55 2015
From: martin.Herdieckerhoff at mnet-mail.de (herdima)
Date: Thu, 12 Nov 2015 02:49:55 -0700 (MST)
Subject: [OpenSCAD] Question about Debug Modifier (#)
In-Reply-To: <CAEEmnrOCfj33uKvjg05tYsCxscj+Nt=TWeBjzzWKwiOgj=S92Q@mail.gmail.com>
References: <1447298809276-14384.post@n5.nabble.com>
	<20151112101646.1ffc53ec@raven.ragdomain.top>
	<CAEEmnrOCfj33uKvjg05tYsCxscj+Nt=TWeBjzzWKwiOgj=S92Q@mail.gmail.com>
Message-ID: <1447321795395-14398.post@n5.nabble.com>

This example shows that the order of operation matters as nophead pointed
out.
This holds for the debug modifier (#) as well as for the transparancy value
(alpha channel) of color():

//color(.5*[1,1,1,1])
#translate([-10,0,0])
cube([10,2,10]);

translate([-10,2,0])
cube([20,2,10]);

//color(.5*[1,1,1,1])
#cube([10,2,10]);



--
View this message in context: http://forum.openscad.org/Question-about-Debug-Modifier-tp14384p14398.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From peter.ragosch at kabelmail.de  Thu Nov 12 05:10:36 2015
From: peter.ragosch at kabelmail.de (Peter Ragosch)
Date: Thu, 12 Nov 2015 11:10:36 +0100
Subject: [OpenSCAD] Question about Debug Modifier (#)
In-Reply-To: <1447321795395-14398.post@n5.nabble.com>
References: <1447298809276-14384.post@n5.nabble.com>
	<20151112101646.1ffc53ec@raven.ragdomain.top>
	<CAEEmnrOCfj33uKvjg05tYsCxscj+Nt=TWeBjzzWKwiOgj=S92Q@mail.gmail.com>
	<1447321795395-14398.post@n5.nabble.com>
Message-ID: <20151112111036.1d6ff468@raven.ragdomain.top>

Well, I wasn't aware of this behavior.

Someone who is familiar with openSuSE manual editing should ad it there.

vicnet, may I please you to add it to your agenda? 

Many thanks in advance.
Kind regards
Peter


Am Thu, 12 Nov 2015 02:49:55 -0700 (MST)
schrieb herdima <martin.Herdieckerhoff at mnet-mail.de>:

> This example shows that the order of operation matters as nophead
> pointed out.
> This holds for the debug modifier (#) as well as for the transparancy
> value (alpha channel) of color():
> 
> //color(.5*[1,1,1,1])
> #translate([-10,0,0])
> cube([10,2,10]);
> 
> translate([-10,2,0])
> cube([20,2,10]);
> 
> //color(.5*[1,1,1,1])
> #cube([10,2,10]);
> 
> 
> 
> --
> View this message in context:
> http://forum.openscad.org/Question-about-Debug-Modifier-tp14384p14398.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> 



-- 
Mit freundlichen Gr??en
Kind Regards

Peter Ragosch



From peter.ragosch at kabelmail.de  Thu Nov 12 05:32:30 2015
From: peter.ragosch at kabelmail.de (Peter Ragosch)
Date: Thu, 12 Nov 2015 11:32:30 +0100
Subject: [OpenSCAD] Question about Debug Modifier (#)
In-Reply-To: <1447321795395-14398.post@n5.nabble.com>
References: <1447298809276-14384.post@n5.nabble.com>
	<20151112101646.1ffc53ec@raven.ragdomain.top>
	<CAEEmnrOCfj33uKvjg05tYsCxscj+Nt=TWeBjzzWKwiOgj=S92Q@mail.gmail.com>
	<1447321795395-14398.post@n5.nabble.com>
Message-ID: <20151112113230.5f587bfa@raven.ragdomain.top>

Am I right that the F5 renderer optimisation routine takes no care about
the colour/transparency of an object in the foreground and therefore
doesn't render the covered object, if it comes first in code?


Am Thu, 12 Nov 2015 02:49:55 -0700 (MST)
schrieb herdima <martin.Herdieckerhoff at mnet-mail.de>:

> This example shows that the order of operation matters as nophead
> pointed out.
> This holds for the debug modifier (#) as well as for the transparancy
> value (alpha channel) of color():
> 
> //color(.5*[1,1,1,1])
> #translate([-10,0,0])
> cube([10,2,10]);
> 
> translate([-10,2,0])
> cube([20,2,10]);
> 
> //color(.5*[1,1,1,1])
> #cube([10,2,10]);
> 
> 
> 
> --
> View this message in context:
> http://forum.openscad.org/Question-about-Debug-Modifier-tp14384p14398.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> 



-- 
Mit freundlichen Gr??en
Kind Regards

Peter Ragosch



From tim.shaporev at auriga.ru  Thu Nov 12 06:11:19 2015
From: tim.shaporev at auriga.ru (Tim V. Shaporev)
Date: Thu, 12 Nov 2015 14:11:19 +0300
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <1447275851037-14375.post@n5.nabble.com>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
Message-ID: <564473D7.7010509@auriga.ru>

Advanced rounding algorithms may cast 0.5 to either 1 or 0 depending on 
the preceding bit in the binary representation of the number.

See e.g. "Round half to even" https://en.wikipedia.org/wiki/Rounding

Just my $0.02
Tim


On 12.11.2015 0:04, runsun wrote:
> @clothbot: Thx for the links. After reviewing them, however, I do believe
> this is a different issue. What bothers me is not "how many digits" in
> specific cases (like 8 vs 8.0000000004) nor "different platforms", but what
> looks like a totally irregular manner of handling the number 5 --- sometimes
> it is rounded up, sometimes it is rounded down, and for all the time I spent
> in investigation, I couldn't figure out what rule OpenSCAD follows to decide
> rounding up or down number 5.
>
>
> clothbot wrote
>> This appears to be the code in question, called when converting doubles
>> into strings:
>>
>> https://github.com/openscad/openscad/blob/master/src/value.cc#L225-L238
>>
>> The key is this comment:
>>
>>      // attempt to emulate Qt's QString.sprintf("%g"); from old OpenSCAD.
>>      // see https://github.com/openscad/openscad/issues/158
>>
>> That https://github.com/openscad/openscad/issues/158 contains details
>> about the thought-process that went into it.
>>
>> Andrew.
>
>
>
>
>
> -----
>
> $  Runsun Pan, PhD
>
> $ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );
>
>   $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif
>
>
>
>
>
>
> --
> View this message in context: http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14375.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>



From kit.adams at gmail.com  Thu Nov 12 06:36:39 2015
From: kit.adams at gmail.com (spinorkit)
Date: Thu, 12 Nov 2015 04:36:39 -0700 (MST)
Subject: [OpenSCAD] Access violation on starting OpenSCAD (Win8)
In-Reply-To: <1447306638526-14392.post@n5.nabble.com>
References: <CAK_H_uFEs9ze_BzhLCVPnAs8ScYy_RDo3PfdtCRAtgb6+TNnsw@mail.gmail.com>
	<1445902884809-14219.post@n5.nabble.com>
	<CAK_H_uHbimHGKfj9dg+Y5ks+-tZynq6QF8+kC0aYpvHjVvSSZQ@mail.gmail.com>
	<CAK_H_uFRt4U8F5LOKfr5BWpAnO3dABddi-5dcJO1L_Wp4c0rMg@mail.gmail.com>
	<1446118991.338974.423512729.2107D472@webmail.messagingengine.com>
	<CAK_H_uHYg=pKvwCh6pvpX2ZRCaMeiZefs7AD2LhPtFz4YbBKCw@mail.gmail.com>
	<1446174340.265441.424258265.0AE036FF@webmail.messagingengine.com>
	<CAK_H_uE4dtijy4BY8d8iT4gfratQfFbG1XXdc8Rh2u3tUUPjew@mail.gmail.com>
	<CAK_H_uH9V5Lst2=9XzuiLLM7w7M+T6NWg7n=PYcZ=sD74vXAxg@mail.gmail.com>
	<1447306638526-14392.post@n5.nabble.com>
Message-ID: <CAK_H_uHOW6FosOT2Qx9wBH8YOmAmaRCT7nFDrK6m38YAGko14Q@mail.gmail.com>

Hi Don,
Both these static and shared builds run and display fine on my main Windows
8.0 machine where the 2015.03 build still crashes.

Thanks,
Kit


On Thu, Nov 12, 2015 at 6:37 PM, donbright [via OpenSCAD] <
ml-node+s1091067n14392h97 at n5.nabble.com> wrote:

>
> Hello
>
> There are some new test builds uploaded (listed below) using a very recent
> checkout of the MXE MingW cross build system.
>
> It would be extremely helpful if anyone with a Windows machine that
> crashed on OpenSCAD 2015 would be able to take a few minutes and test both
> a shared build and a static build, just enough to see if they still crash
> before bootup, and if not to see whether they will do a simple preview of a
> cube or whatever.
>
>
> http://files.openscad.org/snapshots/OpenSCAD-2015.11.11-MingW-x86-32-shared.zip
>
>
> http://files.openscad.org/snapshots/OpenSCAD-2015.11.11-MingW-x86-32-static.zip
>
>
> http://files.openscad.org/snapshots/OpenSCAD-2015.11.11-MingW-x86-64-shared.zip
>
>
> http://files.openscad.org/snapshots/OpenSCAD-2015.11.11-MingW-x86-64-static.zip
>
> Basically the theory being tested is whether or not the crash is caused by
> Static Linking vs Shared Linking... or whether it is just MXE / MingW in
> general that is causing the crash.
>
> Thanks!!!!
>
>
> --
> don bright
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
>
> http://forum.openscad.org/Access-violation-on-starting-OpenSCAD-Win8-tp14201p14392.html
> To unsubscribe from Access violation on starting OpenSCAD (Win8), click
> here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=14201&code=a2l0LmFkYW1zQGdtYWlsLmNvbXwxNDIwMXwtMTM1NzI4MDMyMQ==>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/Access-violation-on-starting-OpenSCAD-Win8-tp14201p14402.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151112/f267eadd/attachment.html>

From doug at moens.org  Thu Nov 12 08:05:00 2015
From: doug at moens.org (doug moen)
Date: Thu, 12 Nov 2015 08:05:00 -0500
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <1447305364511-14391.post@n5.nabble.com>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
Message-ID: <CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>

ctchin said "Consider the many many things (some are quite challenging) that
still need adding/fixing/improving in OpenSCAD, I'm not sure str(n)
is high (or even mid-) priority."

I agree, but I'm not saying that. OpenSCAD uses the same float->string
conversion everywhere, including the export to ASCII STL, and the export to
AMF. In the export case, severely truncating each float to 6 significant
digits often damages the mesh, so that OpenSCAD can't read STL files that
it itself has generated. (The conversion from CGAL rational numbers to
floats can also damage the mesh, but the float->string conversion is
responsible for most of the damage.) I'd like to fix this, and str(n) will
get fixed at the same time, as a bonus.

On 12 November 2015 at 00:16, ctchin <c.t.chin at szu.edu.cn> wrote:

> doug.moen wrote
> > The conversion from floating point to string is, in my opinion, broken. I
> > wrote a long explanation of why it is broken, and what I'd like to do
> > instead, in an earlier post. I should create an issue for this.
>
> Consider the many many things (some are quite challenging) that
> still need adding/fixing/improving in OpenSCAD, I'm not sure str(n)
> is high (or even mid-) priority.
>
> It seems almost easy to just port sprintf() to OpenSCAD and that's
> that.  But in an odd way, I almost relish the various handicaps OpenSCAD
> throw at us.  The subtle message is: DON'T use OpenSCAD for
> conventional programming, don't do text processing (don't even dream
> about adding regular expression to OpenSCAD), don't do general
> file I/O (fopen, fread, fwrite, fclose), don't do advanced computations (I
> was
> toying with the masochistic(???)  idea of writing a matrix inversion
> algorithm
> in OpenSCAD).
>
> Sticks to making solids (STL) on OpenSCAD.  A true geek would just mix-
> language program (Java+OpenSCAD) to solve his practical problems and
> leaving the masochism (matrix inversion in OpenSCAD) to the nut jobs.
>
> (hmmm I am assuming no one had actually done it... have I called some
> very smart person a nut job? ... oh wait... it seems really probably
> possible
> to write it... eh...)
>
>
> (oops sorry for empty post previous)
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14391.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151112/daf0e104/attachment.html>

From c.t.chin at szu.edu.cn  Thu Nov 12 09:09:41 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Thu, 12 Nov 2015 07:09:41 -0700 (MST)
Subject: [OpenSCAD] ranges to vectors
In-Reply-To: <1397723220128-7698.post@n5.nabble.com>
References: <1397271750799-7651.post@n5.nabble.com>
	<1397723220128-7698.post@n5.nabble.com>
Message-ID: <1447337381114-14404.post@n5.nabble.com>

MichaelAtOz wrote
> function r2v(r,index=undef) = 
>         (index==undef)					
>         ?  r2v(r,r[0],dir=(r[0]<=r[2]) )		
>         :  (dir && index>r[2]) || (!dir && index&lt;r[2])
>                 ? []
>                 : concat([index],r2v(r,index+r[1],dir=dir)); 

Hmm how about just

function range2vector(r) = [ for (i=r) i];

No recursion needed, seems to work just fine.  It's been in my privately
kept stdlib.scad for a while... Not that's I've found much use of it. 
Ranges are peculiar indeed, but I've found little practical purpose to
manipulate ranges, other than in a for loop. 



--
View this message in context: http://forum.openscad.org/ranges-to-vectors-tp7651p14404.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Thu Nov 12 10:13:10 2015
From: doug at moens.org (doug moen)
Date: Thu, 12 Nov 2015 10:13:10 -0500
Subject: [OpenSCAD] Improving the doc
In-Reply-To: <1447302102462-14388.post@n5.nabble.com>
References: <1447132878960-14333.post@n5.nabble.com>
	<1447302102462-14388.post@n5.nabble.com>
Message-ID: <CAGV6i+OAk7VxK3OyLOqs-RD1XwDLZWdH4As5qStGdnPrUcat1A@mail.gmail.com>

I like what you did with Matrix Multiplication.

I'll read your rewritten General section later, when I have a big enough
block of time to compare both versions.

On 11 November 2015 at 23:21, ctchin <c.t.chin at szu.edu.cn> wrote:

> (I'm re-posting my posts yesterday due to a tech issue, apologies if I'm
> annoying...)
>
> As I threatened to do, I've completely re-written Matrix Multiplication:
>
>
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language#Matrix_Multiplication
>
> I am warning you, I will keep doing it unless someone stops me.
>
>
>
>
> Continuing my rampage...
>
> I've created an alternate version of the Section 1.1 General:
>
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/General_(by_c.t.chin)
>
> While it still can use some work and refinement, I propose to replace the
> entirety of General with it:
>
>
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language#General
>
> You may notice I've written in my (perhaps very) radical idea of trimming
> down all the statements,
> etc etc down to just FOUR types: objects, variable assignments,
> preprocessor
> commands, and
> function and module definitions.
>
> I've decide that primitives and transformations are just modules.
> Primitives require no children, and a transformation, on its own, generates
> no objects.  But they are both modules.  cube() can be given children
> (which
> are ignored) and rotate() can be given no child (which produces nothing).
> So in the doc for programming language,  "objects" is perfectly sufficient
> to cover modules, primitives and transformations.
>
> I've also cut out a lot of materials, e.g. select() (it's not part of the
> language!), Getting Input (belongs much later in the doc), and other bits
> (e.g. legacy issues) that adds unnecessary burden to someone who's learning
> the language (target reader of this section).  The materials that I cut out
> has been saved on separate files on my own PC so I'll find appropriate
> spots
> to put back into the wiki.
>
> Since it's a radical re-write, I am only proposing this version for
> consideration by the community.
>
> If the response is hot, I will continue work on it and eventually overwrite
> the existing Wiki page(s).
>
> If the response is warm, I will continue work on it but not edit the
> existing Wiki until the response improves (or I quit).
>
> If the response is cold, I will abandon it and get back to spending my time
> on "more important things".
>
>
>
>
>
> I'm getting madder by the minute.
>
> L Boyd wrote
> > The existing manual consists of many files, each of which describe a
> small
> > portion of the total picture.  There is a list ( 3 actually ) of these
> > files, which allow a user to access these various portions.
>
> Where are these three lists you talked about?  If you mean these three:
>
> http://www.openscad.org/documentation.html#user-manual
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual#Overview
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Print_version
>
> Then yikes each is unsatisfactory.  For example, the following article is
> pretty important in a comprehensive documentation:
>
>
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/undersized_circular_objects
>
> Also this is a gem that I just discovered today:
>
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/For_C/Java/Python_Programmers
>
> Both seem to be missing in any kind of complete doc, but can be found only
> by linking:
>
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Primitive_Solids#cylinder
>
> The For C/Java/Python Programmers page wasn't even linked to by any page
> until today.
>
> Is there even a comprehensive list of all the articles/pages on the Wiki?
> I
> suspect some more
> gems have been written up by the good folks but still hidden due to
> obscurity.
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Improving-the-doc-tp14333p14388.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151112/13df48bd/attachment-0001.html>

From runsun at gmail.com  Thu Nov 12 12:12:01 2015
From: runsun at gmail.com (runsun)
Date: Thu, 12 Nov 2015 10:12:01 -0700 (MST)
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <564473D7.7010509@auriga.ru>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<564473D7.7010509@auriga.ru>
Message-ID: <1447348321669-14406.post@n5.nabble.com>

Tim V. Shaporev wrote
> Advanced rounding algorithms may cast 0.5 to either 1 or 0 depending on 
> the preceding bit in the binary representation of the number.
> 
> See e.g. "Round half to even" https://en.wikipedia.org/wiki/Rounding
> 
> Just my $0.02
> Tim

Thx, Tim. But this doesn't explain those examples I raised in the first
post, where the rounding of 5 is handled differently even the preceding
number is the same. 




-----

$  Runsun Pan, PhD 

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );

 $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif 






--
View this message in context: http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14406.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Thu Nov 12 12:17:16 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Thu, 12 Nov 2015 10:17:16 -0700 (MST)
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
Message-ID: <1447348636036-14407.post@n5.nabble.com>

doug.moen wrote
> ... the export to ASCII STL, and the export to
> AMF. In the export case, severely truncating each float to 6 significant
> digits often damages the mesh, so that OpenSCAD can't read STL files that
> it itself has generated.

Oh... I wasn't aware of that issue (do apologize I haven't find time to go
over all old threads.)

But I still... question if it's not a bit of a red herring.  If OpenSCAD is
really designed for and 
by 3D printing hobbyists and professionals, then does it serve meaningful
purpose to reproduce 
better than 0.1PPM precision?  I am not asserting it is red herring, just
curious if someone really 
come upon a real world issue arising from such level of inaccuracy.

As for OpenSCAD can't read STL it generates... again is that a high priority
issue?  Unlike 
File->Save and File->Load, I can tolerate, even expect some loss when I
Export... and than
Import... some data, this is true in many apps, even MS Office.  Over the
year (not quite 2 
years yet) I've designed some moderately elaborate shapes and never had
Slic3r reject a 
design that OpenSCAD deemed valid.  

I imagine other apps/devices (laser cutter?) similarly have been accepting
the STL's generated 
by OpenSCAD.  IEEE floats are imperfect representation of physical world.
And text string 
representation are further corruption of accuracy of IEEE floats.  That's
unavoidable.  

We are quite happy to accept 20-side polygon as a circle, 100-ish-faces
polyhedron for a sphere.  
There's easily inaccuracy of 1% in almost all of our designs.  



--
View this message in context: http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14407.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Thu Nov 12 12:35:11 2015
From: runsun at gmail.com (runsun)
Date: Thu, 12 Nov 2015 10:35:11 -0700 (MST)
Subject: [OpenSCAD] Simple addition of numbers introduces error
Message-ID: <1447349711276-14408.post@n5.nabble.com>

Just encountered an odd thing. The process is simple: add 0.1 and 0.02, to
see if it equals 0.12.

> echo( 1/10 == 0.1 );  // true
> echo( 2/100 == 0.02 ); // true 
> echo( 1/10 + 2/100 == 0.12 ); // false <===== duhh ???

How come 1/10 and 2/100 both are accurate, but not if they are added ?

It seems that a simple operation of addition introduces error:

> echo( (1/10 + 2/100 - 0.12)*pow(10,10) ) ==> 1.38778e-07

I tried several other numbers but only 0.12 goes wrong.

This means that if you have code like:

> a = some_value;
> b = some_other_value;
> c = value a + b;

A boolean check like c==a+b? would give false negative some time but not all
the time, which would be extremely hard to debug. 




-----

$  Runsun Pan, PhD 

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );

 $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif 






--
View this message in context: http://forum.openscad.org/Simple-addition-of-numbers-introduces-error-tp14408.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From hypher at gmail.com  Thu Nov 12 13:12:04 2015
From: hypher at gmail.com (Yona Appletree)
Date: Thu, 12 Nov 2015 10:12:04 -0800
Subject: [OpenSCAD] Simple addition of numbers introduces error
In-Reply-To: <1447349711276-14408.post@n5.nabble.com>
References: <1447349711276-14408.post@n5.nabble.com>
Message-ID: <5644D674.9060206@gmail.com>

Runsun,

This is due to the inherent nature of floating point numbers. Not all 
values can be represented exactly, and this behavior is quite standard. 
It's generally not advised to do equality checks on floats... you should 
always use a range check.

This does basically the same thing in javascript:

# node
>  .1 + .02
0.12000000000000001
>  .1 + .02 == .12
false

- Yona
> runsun <mailto:runsun at gmail.com>
> November 12, 2015 at 09:35
> Just encountered an odd thing. The process is simple: add 0.1 and 0.02, to
> see if it equals 0.12.
>
>> echo( 1/10 == 0.1 );  // true
>> echo( 2/100 == 0.02 ); // true
>> echo( 1/10 + 2/100 == 0.12 ); // false<===== duhh ???
>
> How come 1/10 and 2/100 both are accurate, but not if they are added ?
>
> It seems that a simple operation of addition introduces error:
>
>> echo( (1/10 + 2/100 - 0.12)*pow(10,10) ) ==>  1.38778e-07
>
> I tried several other numbers but only 0.12 goes wrong.
>
> This means that if you have code like:
>
>> a = some_value;
>> b = some_other_value;
>> c = value a + b;
>
> A boolean check like c==a+b? would give false negative some time but not all
> the time, which would be extremely hard to debug.
>
>
>
>
> -----
>
> $  Runsun Pan, PhD
>
> $ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );
>
>   $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif
>
>
>
>
>
>
> --
> View this message in context: http://forum.openscad.org/Simple-addition-of-numbers-introduces-error-tp14408.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151112/089cf0eb/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: compose-unknown-contact.jpg
Type: image/jpeg
Size: 770 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151112/089cf0eb/attachment.jpg>

From runsun at gmail.com  Thu Nov 12 13:19:36 2015
From: runsun at gmail.com (runsun)
Date: Thu, 12 Nov 2015 11:19:36 -0700 (MST)
Subject: [OpenSCAD] ranges to vectors
In-Reply-To: <CAGV6i+NEhyRBVOL+YjNu02ntwOtJE+y4aWAhHXAA+0PY21f=cw@mail.gmail.com>
References: <1397271750799-7651.post@n5.nabble.com>
	<CAGV6i+OY7v+vsdTkAZZe35aCDQE-nGy5bGJs6RCHhWV+so2Pxg@mail.gmail.com>
	<1447268009465-14373.post@n5.nabble.com>
	<CAGV6i+NEhyRBVOL+YjNu02ntwOtJE+y4aWAhHXAA+0PY21f=cw@mail.gmail.com>
Message-ID: <1447352376868-14410.post@n5.nabble.com>

doug.moen wrote
> My range proposal is here:
> https://github.com/doug-moen/openscad2/blob/master/rfc/Sequences.md

Nice summary of sequences and suggestions !!


> echo([1..5]) prints [1,2,3,4,5]. Ranges in Python2 and Haskell work the
> same way.

Just a minor side note: it seems that [i..j] gives syntax error in python2.
Also, python range ends with last_index+1.  

 



-----

$  Runsun Pan, PhD 

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );

 $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif 






--
View this message in context: http://forum.openscad.org/ranges-to-vectors-tp7651p14410.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Thu Nov 12 13:27:22 2015
From: runsun at gmail.com (runsun)
Date: Thu, 12 Nov 2015 11:27:22 -0700 (MST)
Subject: [OpenSCAD] Simple addition of numbers introduces error
In-Reply-To: <5644D674.9060206@gmail.com>
References: <1447349711276-14408.post@n5.nabble.com>
	<5644D674.9060206@gmail.com>
Message-ID: <1447352842134-14411.post@n5.nabble.com>

Thx Hypher. Good to know. 

I have a unit test lib in which comparing two values is essential, so
floating point comparison is unavoidable. Guess I'll have to resolve it in
some other way. 



-----

$  Runsun Pan, PhD 

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );

 $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif 






--
View this message in context: http://forum.openscad.org/Simple-addition-of-numbers-introduces-error-tp14408p14411.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From alan at lxorguk.ukuu.org.uk  Thu Nov 12 13:29:03 2015
From: alan at lxorguk.ukuu.org.uk (Alan Cox)
Date: Thu, 12 Nov 2015 18:29:03 +0000
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <1447348636036-14407.post@n5.nabble.com>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<1447348636036-14407.post@n5.nabble.com>
Message-ID: <20151112182903.419b20de@www.etchedpixels.co.uk>

> But I still... question if it's not a bit of a red herring.  If OpenSCAD is
> really designed for and 
> by 3D printing hobbyists and professionals, then does it serve meaningful
> purpose to reproduce 
> better than 0.1PPM precision?  I am not asserting it is red herring, just
> curious if someone really 
> come upon a real world issue arising from such level of inaccuracy.

Probably not - and someone who understands the mathematics classes and
requirements of CGAL could change it to integer. I did look into it but
the requirements are complex and C++ is not my favourite language.

> I imagine other apps/devices (laser cutter?) similarly have been accepting
> the STL's generated 
> by OpenSCAD.  IEEE floats are imperfect representation of physical world.
> And text string 
> representation are further corruption of accuracy of IEEE floats.  That's
> unavoidable.  

Text strings can be far more accuratethan IEEE float. The accuracy isn't
the problem however. The problem is that OpenSCAD does not follow the
accepted rules for creation of "correct" STL objects.

Properly written STL tools use a point dictionary to ensure that they do
not output an STL file with two different points with the same IEEE float
representation. If they find one they either juggle the points in the
dictionary the smallest amount possible to avoid a clash or cull what is
lost. Culling is hairy, juggling points far less so - especially if you
have the dictionary sorted in X Y and Z.

> We are quite happy to accept 20-side polygon as a circle, 100-ish-faces
> polyhedron for a sphere.  
> There's easily inaccuracy of 1% in almost all of our designs.  

Quite a few of my designs have parts that won't work at 1% error, which
is fine because OpenSCAD can do more accuracy when needed. Please don't
assume just because you can tolerate 1% everyone can. When you have
moving parts or parts combined with etched metal pieces and/or mechanisms
the precision needed is often far higher.

Alan


From alan at lxorguk.ukuu.org.uk  Thu Nov 12 13:42:59 2015
From: alan at lxorguk.ukuu.org.uk (Alan Cox)
Date: Thu, 12 Nov 2015 18:42:59 +0000
Subject: [OpenSCAD] Simple addition of numbers introduces error
In-Reply-To: <1447352842134-14411.post@n5.nabble.com>
References: <1447349711276-14408.post@n5.nabble.com>
	<5644D674.9060206@gmail.com>
	<1447352842134-14411.post@n5.nabble.com>
Message-ID: <20151112184259.04dafb86@www.etchedpixels.co.uk>

On Thu, 12 Nov 2015 11:27:22 -0700 (MST)
runsun <runsun at gmail.com> wrote:

> Thx Hypher. Good to know. 
> 
> I have a unit test lib in which comparing two values is essential, so
> floating point comparison is unavoidable. Guess I'll have to resolve it in
> some other way. 

The usual approach would be

	abs(a - b) < ACCEPTABLE_ERROR

Whether adding an ~= operator to OpenSCAD would be helpful I don't know.
It's difficult to define "approximately" in a way that works for every
use.

Alan


From marius at kintel.net  Thu Nov 12 13:53:53 2015
From: marius at kintel.net (Marius Kintel)
Date: Thu, 12 Nov 2015 13:53:53 -0500
Subject: [OpenSCAD] Question about Debug Modifier (#)
In-Reply-To: <20151112113230.5f587bfa@raven.ragdomain.top>
References: <1447298809276-14384.post@n5.nabble.com>
	<20151112101646.1ffc53ec@raven.ragdomain.top>
	<CAEEmnrOCfj33uKvjg05tYsCxscj+Nt=TWeBjzzWKwiOgj=S92Q@mail.gmail.com>
	<1447321795395-14398.post@n5.nabble.com>
	<20151112113230.5f587bfa@raven.ragdomain.top>
Message-ID: <1692C38A-EC55-4DBA-B2D8-6668B8F47BFA@kintel.net>


> On Nov 12, 2015, at 05:32 AM, Peter Ragosch <peter.ragosch at kabelmail.de> wrote:
> 
> Am I right that the F5 renderer optimisation routine takes no care about
> the colour/transparency of an object in the foreground and therefore
> doesn't render the covered object, if it comes first in code?
> 
Yes, that?s how it currently works. We haven?t focused on fixing such rendering issues, as the larger task is to move the rendering code to a real framework: https://github.com/openscad/openscad/wiki/Project%3A-Improve-OpenGL-rendering

 -Marius



From marius at kintel.net  Thu Nov 12 14:03:39 2015
From: marius at kintel.net (Marius Kintel)
Date: Thu, 12 Nov 2015 14:03:39 -0500
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
	at 7th significant digit
In-Reply-To: <CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
Message-ID: <06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>

> On Nov 12, 2015, at 08:05 AM, doug moen <doug at moens.org> wrote:
> 
> I agree, but I'm not saying that. OpenSCAD uses the same float->string conversion everywhere, including the export to ASCII STL, and the export to AMF. In the export case, severely truncating each float to 6 significant digits often damages the mesh, so that OpenSCAD can't read STL files that it itself has generated.

We don?t - file exports are written with the default precision of C++?s stream operator. If you find any cases doing otherwise it would be considered a bug.

The primary reason why OpenSCAD sometimes cannot read back its STL output is that CGAL doesn?t support reading triangles without an area. This tends to happen when converting from CGAL?s internal representation to double, where some insanely small triangles get their coordinates shifted a tiny bit due to floating point accuracy limitations.
One solution, as mentioned earlier, could be to perform a topology-aware surface optimization to ensure all triangles have a valid area, but since CGAL is the most picky component and most other tools can handle zero-area triangles, this hasn?t been a priority.

 -Marius



From serve at perdix.org  Thu Nov 12 14:46:12 2015
From: serve at perdix.org (Mekko)
Date: Thu, 12 Nov 2015 12:46:12 -0700 (MST)
Subject: [OpenSCAD] Question about Debug Modifier (#)
In-Reply-To: <1447298809276-14384.post@n5.nabble.com>
References: <1447298809276-14384.post@n5.nabble.com>
Message-ID: <1447357572692-14416.post@n5.nabble.com>

Thanks for all the comments. My take-away is that the order of operations
matter but I'm still unclear how. The code example that nophead offered
seems to preview exactly as I would expect.

Here's a trivialized example of the behavior that is confusing me: This code
lights up in transparent red (which is what I want):
#difference() {
    union() {
        cube(size=[30, 30, 35]);
        //cube(size=[5,5,40]);
    }
    
    translate(v=[-10, -10, 10]) cube(size=[20, 20, 20]);
}

and this does not (which is what is confusing me):
#difference() {
    union() {
        cube(size=[30, 30, 35]);
        cube(size=[5,5,40]);
    }
    
    translate(v=[-10, -10, 10]) cube(size=[20, 20, 20]);
}

Thanks!




--
View this message in context: http://forum.openscad.org/Question-about-Debug-Modifier-tp14384p14416.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Thu Nov 12 14:57:08 2015
From: marius at kintel.net (Marius Kintel)
Date: Thu, 12 Nov 2015 14:57:08 -0500
Subject: [OpenSCAD] Question about Debug Modifier (#)
In-Reply-To: <1447357572692-14416.post@n5.nabble.com>
References: <1447298809276-14384.post@n5.nabble.com>
	<1447357572692-14416.post@n5.nabble.com>
Message-ID: <9B1FF20A-2795-43D6-803F-E2DEE823F888@kintel.net>

> On Nov 12, 2015, at 14:46 PM, Mekko <serve at perdix.org> wrote:
> and this does not (which is what is confusing me):
> [?]

humm, that might be considered a bug.

 -Marius



From serve at perdix.org  Thu Nov 12 14:57:40 2015
From: serve at perdix.org (Mekko)
Date: Thu, 12 Nov 2015 12:57:40 -0700 (MST)
Subject: [OpenSCAD] Assertion violation
Message-ID: <1447358260282-14417.post@n5.nabble.com>

I'm using OpenSCAD to create a big .STL file to send to a 3D print service.
Basically, the 3D print service gives me a volume to pack anyway I want and
then they print it.

So I'm using OpenSCAD to fill the allowed volume with 14 shapes. My approach
was to import a bunch of .STL files holding the 14 shapes (previously
generated in OpenSCAD); then use translate()'s and rotate()'s to move the
shapes to the correct location; and then export to a final, large, .STL
file.

But this error message comes up on the console:
ERROR: CGAL error in CGAL_Nef_polyhedron3(): CGAL ERROR: assertion
violation! Expr: pe_prev->is_border() ||
!internal::Plane_constructor::get_plane(pe_prev->facet(),pe_prev->facet()->plane()).is_degenerate()
File:
/data/OpenSCAD/libraries-mingw32-master/mxe/usr/i686-w64-mingw32.static/include/CGAL/Nef_3/polyhedron_3_to_nef_3.h
Line: 293 

It renders 12 of the 14 shapes and stops. 

Is this a known bug and is there a work-around?

As usual, thanks for the help!



--
View this message in context: http://forum.openscad.org/Assertion-violation-tp14417.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Thu Nov 12 15:10:32 2015
From: nop.head at gmail.com (nop head)
Date: Thu, 12 Nov 2015 20:10:32 +0000
Subject: [OpenSCAD] Question about Debug Modifier (#)
In-Reply-To: <1447357572692-14416.post@n5.nabble.com>
References: <1447298809276-14384.post@n5.nabble.com>
	<1447357572692-14416.post@n5.nabble.com>
Message-ID: <CAEEmnrM8nFVv33CZJmpxQj8Bn=8ygZuPFUuc+6bQfGkDJgg8DA@mail.gmail.com>

Looks like a strange bug to me. If I put render() between # and
difference() it works.

On 12 November 2015 at 19:46, Mekko <serve at perdix.org> wrote:

> Thanks for all the comments. My take-away is that the order of operations
> matter but I'm still unclear how. The code example that nophead offered
> seems to preview exactly as I would expect.
>
> Here's a trivialized example of the behavior that is confusing me: This
> code
> lights up in transparent red (which is what I want):
> #difference() {
>     union() {
>         cube(size=[30, 30, 35]);
>         //cube(size=[5,5,40]);
>     }
>
>     translate(v=[-10, -10, 10]) cube(size=[20, 20, 20]);
> }
>
> and this does not (which is what is confusing me):
> #difference() {
>     union() {
>         cube(size=[30, 30, 35]);
>         cube(size=[5,5,40]);
>     }
>
>     translate(v=[-10, -10, 10]) cube(size=[20, 20, 20]);
> }
>
> Thanks!
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Question-about-Debug-Modifier-tp14384p14416.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151112/5731899c/attachment.html>

From marius at kintel.net  Thu Nov 12 15:18:00 2015
From: marius at kintel.net (Marius Kintel)
Date: Thu, 12 Nov 2015 15:18:00 -0500
Subject: [OpenSCAD] Assertion violation
In-Reply-To: <1447358260282-14417.post@n5.nabble.com>
References: <1447358260282-14417.post@n5.nabble.com>
Message-ID: <4D239A27-D13C-4C7C-8F57-06F6C177DE55@kintel.net>

Is this a known bug and is there a work-around?
> 
This is a known issue due to a limitation in a library we?re depending on:
https://github.com/openscad/openscad/issues/945

One workaround could be to process the file in Meshlab to flip so-called "T-vertices?.

-Marius



From oz.at.michael at gmail.com  Thu Nov 12 15:59:31 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 12 Nov 2015 13:59:31 -0700 (MST)
Subject: [OpenSCAD] ranges to vectors
In-Reply-To: <1447337381114-14404.post@n5.nabble.com>
References: <1397271750799-7651.post@n5.nabble.com>
	<1397723220128-7698.post@n5.nabble.com>
	<1447337381114-14404.post@n5.nabble.com>
Message-ID: <1447361971612-14421.post@n5.nabble.com>

ctchin wrote
> 
> MichaelAtOz wrote
>> function r2v(r,index=undef) = 
>>         (index==undef)					
>>         ?  r2v(r,r[0],dir=(r[0]<=r[2]) )		
>>         :  (dir && index>r[2]) || (!dir && index&lt;r[2])
>>                 ? []
>>                 : concat([index],r2v(r,index+r[1],dir=dir)); 
> Hmm how about just
> 
> function range2vector(r) = [ for (i=r) i];
> 
> No recursion needed, seems to work just fine.  It's been in my privately
> kept stdlib.scad for a while... Not that's I've found much use of it. 
> Ranges are peculiar indeed, but I've found little practical purpose to
> manipulate ranges, other than in a for loop.

That was written prior to the release of List Comprehensions...



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/ranges-to-vectors-tp7651p14421.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rl.ward at bigpond.com  Thu Nov 12 16:07:19 2015
From: rl.ward at bigpond.com (Rob Ward)
Date: Fri, 13 Nov 2015 08:07:19 +1100
Subject: [OpenSCAD] Simple addition of numbers introduces error
In-Reply-To: <20151112184259.04dafb86@www.etchedpixels.co.uk>
References: <1447349711276-14408.post@n5.nabble.com>
	<5644D674.9060206@gmail.com> <1447352842134-14411.post@n5.nabble.com>
	<20151112184259.04dafb86@www.etchedpixels.co.uk>
Message-ID: <5644FF87.7040807@bigpond.com>

On 13/11/15 05:42, Alan Cox wrote:
> On Thu, 12 Nov 2015 11:27:22 -0700 (MST)
> runsun <runsun at gmail.com> wrote:
>
>> Thx Hypher. Good to know.
>>
>> I have a unit test lib in which comparing two values is essential, so
>> floating point comparison is unavoidable. Guess I'll have to resolve it in
>> some other way.
> The usual approach would be
>
> 	abs(a - b) < ACCEPTABLE_ERROR
>
> Whether adding an ~= operator to OpenSCAD would be helpful I don't know.
> It's difficult to define "approximately" in a way that works for every
> use.
>
> Alan
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
Could there be a setting like the $fn=20; to control 'smoothness', and 
have it set the level of 'approximation',
therefore the feature is available and "let the user beware"?

$fa=0.001; //floating point resolved to within 0.001%

If this was localised to within modules, it could be turned off and on 
as required??

Rob


From rl.ward at bigpond.com  Thu Nov 12 16:19:46 2015
From: rl.ward at bigpond.com (Rob Ward)
Date: Fri, 13 Nov 2015 08:19:46 +1100
Subject: [OpenSCAD] Simple addition of numbers introduces error
In-Reply-To: <1447349711276-14408.post@n5.nabble.com>
References: <1447349711276-14408.post@n5.nabble.com>
Message-ID: <56450272.9020903@bigpond.com>

On 13/11/15 04:35, runsun wrote:
> Just encountered an odd thing. The process is simple: add 0.1 and 0.02, to
> see if it equals 0.12.
>
>> echo( 1/10 == 0.1 );  // true
>> echo( 2/100 == 0.02 ); // true
>> echo( 1/10 + 2/100 == 0.12 ); // false <===== duhh ???
> How come 1/10 and 2/100 both are accurate, but not if they are added ?
>
> It seems that a simple operation of addition introduces error:
>
>> echo( (1/10 + 2/100 - 0.12)*pow(10,10) ) ==> 1.38778e-07
> I tried several other numbers but only 0.12 goes wrong.
>
> This means that if you have code like:
>
>> a = some_value;
>> b = some_other_value;
>> c = value a + b;
> A boolean check like c==a+b? would give false negative some time but not all
> the time, which would be extremely hard to debug.
>
>
>
>
> -----
>
> $  Runsun Pan, PhD
>
> $ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );
>
>   $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif
>
>
>
>
>
>
> --
> View this message in context: http://forum.openscad.org/Simple-addition-of-numbers-introduces-error-tp14408.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
echo( (1/10 + 2/100) ==0.12); // also reports false???
echo( (1/10 + 2/100)) //produces 0.12, curious and curious-er!!

Rob



From nop.head at gmail.com  Thu Nov 12 16:45:47 2015
From: nop.head at gmail.com (nop head)
Date: Thu, 12 Nov 2015 21:45:47 +0000
Subject: [OpenSCAD] Simple addition of numbers introduces error
In-Reply-To: <56450272.9020903@bigpond.com>
References: <1447349711276-14408.post@n5.nabble.com>
	<56450272.9020903@bigpond.com>
Message-ID: <CAEEmnrOodZgrLd3XC6a4cYr83ikH1coMccpjbxS-zJkgZo9xuw@mail.gmail.com>

0.1 and 0.02 are infinitely recurring numbers in binary so that is why they
are never equal in finite word length arithmetic. In general a lot more
fractions are not exact in binary.
echo() does some rounding, which is why it gives 0.12.

Perhaps runsun could convert to strings with str to compare them. E.g.

x = 0.1 + 0.02;

echo(x == 0.12);
echo(str(x) == "0.12");

ECHO: false

ECHO: true




On 12 November 2015 at 21:19, Rob Ward <rl.ward at bigpond.com> wrote:

> On 13/11/15 04:35, runsun wrote:
>
>> Just encountered an odd thing. The process is simple: add 0.1 and 0.02, to
>> see if it equals 0.12.
>>
>> echo( 1/10 == 0.1 );  // true
>>> echo( 2/100 == 0.02 ); // true
>>> echo( 1/10 + 2/100 == 0.12 ); // false <===== duhh ???
>>>
>> How come 1/10 and 2/100 both are accurate, but not if they are added ?
>>
>> It seems that a simple operation of addition introduces error:
>>
>> echo( (1/10 + 2/100 - 0.12)*pow(10,10) ) ==> 1.38778e-07
>>>
>> I tried several other numbers but only 0.12 goes wrong.
>>
>> This means that if you have code like:
>>
>> a = some_value;
>>> b = some_other_value;
>>> c = value a + b;
>>>
>> A boolean check like c==a+b? would give false negative some time but not
>> all
>> the time, which would be extremely hard to debug.
>>
>>
>>
>>
>> -----
>>
>> $  Runsun Pan, PhD
>>
>> $ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 ,
>> git );
>>
>>   $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif
>>
>>
>>
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/Simple-addition-of-numbers-introduces-error-tp14408.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>> echo( (1/10 + 2/100) ==0.12); // also reports false???
> echo( (1/10 + 2/100)) //produces 0.12, curious and curious-er!!
>
>
> Rob
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151112/646a142f/attachment.html>

From serve at perdix.org  Thu Nov 12 18:56:44 2015
From: serve at perdix.org (Mekko)
Date: Thu, 12 Nov 2015 16:56:44 -0700 (MST)
Subject: [OpenSCAD] Assertion violation
In-Reply-To: <1447358260282-14417.post@n5.nabble.com>
References: <1447358260282-14417.post@n5.nabble.com>
Message-ID: <1447372604347-14425.post@n5.nabble.com>

OK, good to know it's a known issue with the CGAL library but I think there
might be something more going on. For one thing, the .STL file that seems to
be making OpenSCAD unhappy - that is, the file that might have the zero-area
triangle(s) in it - was itself created by OpenSCAD. Would OpenSCAD write a
.STL file containing collinear vertices?

For another thing, I used MeshLab to remove the T-vertices (or tried to) and
the problem didn't go away. I don't know that much about MeshLab, so I may
have screwed this up: when I opened each of the .STL files in MeshLab, it
presented me with a dialog box called "Post-Open Processing" and allowed me
to check a "Unify Duplicated Vertices" box. I checked the box and hit OK;
then I used Export Mesh to write out a new .STL file (which doesn't seem to
have helped). 

Was there some other steps I should have taken to make MeshLab remove the
T-vertices?



--
View this message in context: http://forum.openscad.org/Assertion-violation-tp14417p14425.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From serve at perdix.org  Thu Nov 12 18:57:57 2015
From: serve at perdix.org (Mekko)
Date: Thu, 12 Nov 2015 16:57:57 -0700 (MST)
Subject: [OpenSCAD] Question about Debug Modifier (#)
In-Reply-To: <1447298809276-14384.post@n5.nabble.com>
References: <1447298809276-14384.post@n5.nabble.com>
Message-ID: <1447372677411-14426.post@n5.nabble.com>

Awesome! Thanks for the workaround. I have no problem adding render() calls
here and there for debugging.



--
View this message in context: http://forum.openscad.org/Question-about-Debug-Modifier-tp14384p14426.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Thu Nov 12 19:51:00 2015
From: doug at moens.org (doug moen)
Date: Thu, 12 Nov 2015 19:51:00 -0500
Subject: [OpenSCAD] Assertion violation
In-Reply-To: <1447372604347-14425.post@n5.nabble.com>
References: <1447358260282-14417.post@n5.nabble.com>
	<1447372604347-14425.post@n5.nabble.com>
Message-ID: <CAGV6i+M+qBAPXgoJZPWvthtABJifWt5xorzi=VHsR=CT+F69Gw@mail.gmail.com>

CGAL creates a perfectly valid mesh, then some other code screws up the
mesh in the process of exporting to STL. That's why OpenSCAD can refuse to
read an STL that it created. It's a well known bug that is periodically
reported on the forum, and it's even being debated right now on another
thread. There is some controversy about what the underlying problem is.

On 12 November 2015 at 18:56, Mekko <serve at perdix.org> wrote:

> OK, good to know it's a known issue with the CGAL library but I think there
> might be something more going on. For one thing, the .STL file that seems
> to
> be making OpenSCAD unhappy - that is, the file that might have the
> zero-area
> triangle(s) in it - was itself created by OpenSCAD. Would OpenSCAD write a
> .STL file containing collinear vertices?
>
> For another thing, I used MeshLab to remove the T-vertices (or tried to)
> and
> the problem didn't go away. I don't know that much about MeshLab, so I may
> have screwed this up: when I opened each of the .STL files in MeshLab, it
> presented me with a dialog box called "Post-Open Processing" and allowed me
> to check a "Unify Duplicated Vertices" box. I checked the box and hit OK;
> then I used Export Mesh to write out a new .STL file (which doesn't seem to
> have helped).
>
> Was there some other steps I should have taken to make MeshLab remove the
> T-vertices?
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Assertion-violation-tp14417p14425.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151112/ca579004/attachment.html>

From c.t.chin at szu.edu.cn  Thu Nov 12 20:56:07 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Thu, 12 Nov 2015 18:56:07 -0700 (MST)
Subject: [OpenSCAD] ranges to vectors
In-Reply-To: <1447361971612-14421.post@n5.nabble.com>
References: <1397271750799-7651.post@n5.nabble.com>
	<1397723220128-7698.post@n5.nabble.com>
	<1447337381114-14404.post@n5.nabble.com>
	<1447361971612-14421.post@n5.nabble.com>
Message-ID: <1447379767283-14428.post@n5.nabble.com>

Oh... sorry didn't pay attention to the original post date...



--
View this message in context: http://forum.openscad.org/ranges-to-vectors-tp7651p14428.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Thu Nov 12 21:28:13 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Thu, 12 Nov 2015 19:28:13 -0700 (MST)
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <20151112182903.419b20de@www.etchedpixels.co.uk>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<1447348636036-14407.post@n5.nabble.com>
	<20151112182903.419b20de@www.etchedpixels.co.uk>
Message-ID: <1447381693613-14429.post@n5.nabble.com>

Alan Cox wrote
> Quite a few of my designs have parts that won't work at 1% error, which
> is fine because OpenSCAD can do more accuracy when needed. Please don't
> assume just because you can tolerate 1% everyone can. 

I do not and I do not.  

The level of accuracy I grew up with (very spoiled I was) was better than 1
mil 
(25 um).  I'm constantly haggling with my 3D printer service provider to 
squeeze more accuracy out of them.  

But 25 um on parts of typically 5-50cm is only  50ppm, and that's about
the limit of a 20+ yr veteran machinist with a multi-millions dollar shop.  

I challenge the notion that OpenSCAD number to string algorithm ever causes
a real world problem.  

I have my pet peeve about OpenSCAD's numeric accuracy.  I feel strongly it
is
much more deserving of developer's precise time compared the
number-to-string
issue.  Perfect! there's already a thread for it, I will continue there...





--
View this message in context: http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14429.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Thu Nov 12 21:37:13 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Thu, 12 Nov 2015 19:37:13 -0700 (MST)
Subject: [OpenSCAD] Simple addition of numbers introduces error
In-Reply-To: <1447349711276-14408.post@n5.nabble.com>
References: <1447349711276-14408.post@n5.nabble.com>
Message-ID: <1447382233767-14430.post@n5.nabble.com>

I encounter this im a very real world way when replicating an object.  I was
making a 
ring of LED's and was shocked when I can't reliably make an integer number
of LED 
around a circle.  

Digging, I created this demo call nasty.scad :  



The lesson is that you have to be very careful and deliberate setting the 
end value of for() loops.  




--
View this message in context: http://forum.openscad.org/Simple-addition-of-numbers-introduces-error-tp14408p14430.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Thu Nov 12 23:39:03 2015
From: marius at kintel.net (Marius Kintel)
Date: Thu, 12 Nov 2015 23:39:03 -0500
Subject: [OpenSCAD] Assertion violation
In-Reply-To: <1447372604347-14425.post@n5.nabble.com>
References: <1447358260282-14417.post@n5.nabble.com>
	<1447372604347-14425.post@n5.nabble.com>
Message-ID: <E57278F2-EB0C-4E90-A275-EFEFD2FA0985@kintel.net>

> On Nov 12, 2015, at 18:56 PM, Mekko <serve at perdix.org> wrote:
> 
> Would OpenSCAD write a .STL file containing collinear vertices?
> 
Yes we might, due to conversion errors when converging CGAL polyhedrons to floating point. 

> Was there some other steps I should have taken to make MeshLab remove the
> T-vertices?
> 
Filters->Cleaning and Repairing->Remove T-vertices by Edge Flip.

 -Marius



From serve at perdix.org  Fri Nov 13 00:54:54 2015
From: serve at perdix.org (Mekko)
Date: Thu, 12 Nov 2015 22:54:54 -0700 (MST)
Subject: [OpenSCAD] Assertion violation
In-Reply-To: <1447358260282-14417.post@n5.nabble.com>
References: <1447358260282-14417.post@n5.nabble.com>
Message-ID: <1447394094525-14432.post@n5.nabble.com>

Thanks, Marius. I've spent most of today struggling with this issue and
MeshLab has been helpful with diagnosing what's going on. The .STL files I'm
generating from OpenSCAD definitely contain T-vertices or worse. MeshLab was
sometimes able to repair them but also crashed several times. Even when it
repaired the T-vertices, it changed the shape so badly it was unusable. 

All in all, it's been very frustrating. For one of my designs, I was never
able to get OpenSCAD to generate an .STL file that would pass muster with
MeshLab and that OpenSCAD could import and render without an assertion
violation (I've seen at least two different ones so far). Perhaps I'm using
OpenSCAD for a purpose for which it's not really designed: to import objects
from a collection of .STL files, position them so they don't overlap, and
then write out an "aggregating" .STL file. It's so good at everything else I
do, I just assumed it would be good for this too.

If anyone knows a better tool for this kind of work, I'm all ears. 



--
View this message in context: http://forum.openscad.org/Assertion-violation-tp14417p14432.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From hmbright at fastmail.com  Fri Nov 13 02:18:01 2015
From: hmbright at fastmail.com (don bright)
Date: Fri, 13 Nov 2015 01:18:01 -0600
Subject: [OpenSCAD] Access violation on starting OpenSCAD (Win8)
In-Reply-To: <CAK_H_uHOW6FosOT2Qx9wBH8YOmAmaRCT7nFDrK6m38YAGko14Q@mail.gmail.com>
References: <CAK_H_uFEs9ze_BzhLCVPnAs8ScYy_RDo3PfdtCRAtgb6+TNnsw@mail.gmail.com>
	<1445902884809-14219.post@n5.nabble.com>
	<CAK_H_uHbimHGKfj9dg+Y5ks+-tZynq6QF8+kC0aYpvHjVvSSZQ@mail.gmail.com>
	<CAK_H_uFRt4U8F5LOKfr5BWpAnO3dABddi-5dcJO1L_Wp4c0rMg@mail.gmail.com>
	<1446118991.338974.423512729.2107D472@webmail.messagingengine.com>
	<CAK_H_uHYg=pKvwCh6pvpX2ZRCaMeiZefs7AD2LhPtFz4YbBKCw@mail.gmail.com>
	<1446174340.265441.424258265.0AE036FF@webmail.messagingengine.com>
	<CAK_H_uE4dtijy4BY8d8iT4gfratQfFbG1XXdc8Rh2u3tUUPjew@mail.gmail.com>
	<CAK_H_uH9V5Lst2=9XzuiLLM7w7M+T6NWg7n=PYcZ=sD74vXAxg@mail.gmail.com>
	<1447306638526-14392.post@n5.nabble.com>
	<CAK_H_uHOW6FosOT2Qx9wBH8YOmAmaRCT7nFDrK6m38YAGko14Q@mail.gmail.com>
Message-ID: <1447399081.3197149.438629809.6A17C00E@webmail.messagingengine.com>

Thanks to all testers.....

hate to ask another favor but there is one last test... this build is
off the 2015.03 branch

http://files.openscad.org/snapshots/OpenSCAD-2015.11.13-x86-64.zip

http://files.openscad.org/snapshots/OpenSCAD-2015.11.13-x86-32.zip

The theory being tested here is to see if the build machine itself,
including the version of gcc, libraries, linker, assembler, mxe, etc, is
somehow causing the crash. (this build machine for the links above is a
fresh debian linux 8 box with mxe updated a week or two ago).

--
? don bright
? hmbright at fastmail.com
 
 
On Thu, Nov 12, 2015, at 05:36 AM, spinorkit wrote:
> Hi Don,
> Both these static and shared builds run and display fine on my main Windows 8.0 machine where the 2015.03 build still crashes.
>  
> Thanks,
> Kit
>  
>  
> On Thu, Nov 12, 2015 at 6:37 PM, donbright [via OpenSCAD] <[hidden email]> wrote:
>>  
>> Hello
>> 
>>  
>> There are some new test builds uploaded (listed below) using a very recent checkout of the MXE MingW cross build system. 
>> 
>>  
>> It would be extremely helpful if anyone with a Windows machine that crashed on OpenSCAD 2015 would be able to take a few minutes and test both a shared build and a static build, just enough to see if they still crash before bootup, and if not to see whether they will do a simple preview of a cube or whatever. 
>> 
>>  
>> http://files.openscad.org/snapshots/OpenSCAD-2015.11.11-MingW-x86-32-shared.zip
>>  
>> http://files.openscad.org/snapshots/OpenSCAD-2015.11.11-MingW-x86-32-static.zip
>>  
>> http://files.openscad.org/snapshots/OpenSCAD-2015.11.11-MingW-x86-64-shared.zip
>>  
>> http://files.openscad.org/snapshots/OpenSCAD-2015.11.11-MingW-x86-64-static.zip
>>  
>> Basically the theory being tested is whether or not the crash is caused by Static Linking vs Shared Linking... or whether it is just MXE / MingW in general that is causing the crash. 
>> 
>>  
>> Thanks!!!!
>> 
>>  
>>  
>> --
>> 
>> don bright
>> 
>>  
>>  
>> 
>>  
>> If you reply to this email, your message will be added to the discussion below:
>> http://forum.openscad.org/Access-violation-on-starting-OpenSCAD-Win8-tp14201p14392.html
>> To unsubscribe from Access violation on starting OpenSCAD (Win8), click here.
>> NAML[1]
>  
>  
> 
View this message in context: Re: Access violation on starting OpenSCAD (Win8)[2]
> Sent from the OpenSCAD mailing list archive[3] at Nabble.com.
> _________________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
 


Links:

  1. http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml
  2. http://forum.openscad.org/Access-violation-on-starting-OpenSCAD-Win8-tp14201p14402.html
  3. http://forum.openscad.org/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151113/ed92acc0/attachment.html>

From marius at kintel.net  Fri Nov 13 03:01:24 2015
From: marius at kintel.net (Marius Kintel)
Date: Fri, 13 Nov 2015 03:01:24 -0500
Subject: [OpenSCAD] Assertion violation
In-Reply-To: <1447394094525-14432.post@n5.nabble.com>
References: <1447358260282-14417.post@n5.nabble.com>
	<1447394094525-14432.post@n5.nabble.com>
Message-ID: <53F0DE8B-0E07-4D8A-BE4C-88FBB91C1718@kintel.net>

> On Nov 13, 2015, at 00:54 AM, Mekko <serve at perdix.org> wrote:
> Perhaps I'm using OpenSCAD for a purpose for which it's not really designed: to import objects
> from a collection of .STL files, position them so they don't overlap, and
> then write out an "aggregating" .STL file.

This is slightly outside of the intended scope of OpenSCAD.
The problem is that we blindly pass all imported meshes into the CSG engine (CGAL), which is very picky.
If we would just bypass this for known non-overlapping objects, or let the user decide, this wouldn?t be an issues.

This is related to work done on https://github.com/openscad/openscad/issues/350

 -Marius



From c.t.chin at szu.edu.cn  Fri Nov 13 03:33:48 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Fri, 13 Nov 2015 01:33:48 -0700 (MST)
Subject: [OpenSCAD] Assertion violation
In-Reply-To: <1447394094525-14432.post@n5.nabble.com>
References: <1447358260282-14417.post@n5.nabble.com>
	<1447394094525-14432.post@n5.nabble.com>
Message-ID: <1447403628094-14435.post@n5.nabble.com>

Mekko wrote
> Perhaps I'm using
> OpenSCAD for a purpose for which it's not really designed: to import
> objects
> from a collection of .STL files, position them so they don't overlap, and
> then write out an "aggregating" .STL file. It's so good at everything else
> I
> do, I just assumed it would be good for this too.

I'm curious how you intend to achieve this, assuming even if importing went 
perfectly smoothly.  

OpenSCAD lacks a language structure and capability that takes an 2D/3D 
object as input and return a number.  Say:







--
View this message in context: http://forum.openscad.org/Assertion-violation-tp14417p14435.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Fri Nov 13 04:03:52 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Fri, 13 Nov 2015 10:03:52 +0100
Subject: [OpenSCAD] Assertion violation
In-Reply-To: <1447394094525-14432.post@n5.nabble.com>
References: <1447358260282-14417.post@n5.nabble.com>,
	<1447394094525-14432.post@n5.nabble.com>
Message-ID: <trinity-b34cc7f1-a2f7-4dd1-93b6-7a6f2aac9180-1447405432032@3capp-gmx-bs54>

Von:?Mekko <serve at perdix.org>
> sometimes able to repair them but also crashed several times. Even when it
> repaired the T-vertices, it changed the shape so badly it was unusable.
> 
The "Remove T-Vertices by Edge-Flip" can do more than is actually is needed
here. What we need to fix the zero-area triangles is to remove only those
which have essentially infinite ratio.
Giving a very high number, e.g. 1000000 for ratio should prevent the mesh
from being distorted.

See also that FAQ entry for reference:
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/FAQ#Why_is_my_imported_STL_file_only_showing_up_with_F5_but_not_F6.3F

ciao,
  Torsten.


From kit.adams at gmail.com  Fri Nov 13 05:43:50 2015
From: kit.adams at gmail.com (Kit Adams)
Date: Fri, 13 Nov 2015 23:43:50 +1300
Subject: [OpenSCAD] Access violation on starting OpenSCAD (Win8)
In-Reply-To: <1447399081.3197149.438629809.6A17C00E@webmail.messagingengine.com>
References: <CAK_H_uFEs9ze_BzhLCVPnAs8ScYy_RDo3PfdtCRAtgb6+TNnsw@mail.gmail.com>
	<1445902884809-14219.post@n5.nabble.com>
	<CAK_H_uHbimHGKfj9dg+Y5ks+-tZynq6QF8+kC0aYpvHjVvSSZQ@mail.gmail.com>
	<CAK_H_uFRt4U8F5LOKfr5BWpAnO3dABddi-5dcJO1L_Wp4c0rMg@mail.gmail.com>
	<1446118991.338974.423512729.2107D472@webmail.messagingengine.com>
	<CAK_H_uHYg=pKvwCh6pvpX2ZRCaMeiZefs7AD2LhPtFz4YbBKCw@mail.gmail.com>
	<1446174340.265441.424258265.0AE036FF@webmail.messagingengine.com>
	<CAK_H_uE4dtijy4BY8d8iT4gfratQfFbG1XXdc8Rh2u3tUUPjew@mail.gmail.com>
	<CAK_H_uH9V5Lst2=9XzuiLLM7w7M+T6NWg7n=PYcZ=sD74vXAxg@mail.gmail.com>
	<1447306638526-14392.post@n5.nabble.com>
	<CAK_H_uHOW6FosOT2Qx9wBH8YOmAmaRCT7nFDrK6m38YAGko14Q@mail.gmail.com>
	<1447399081.3197149.438629809.6A17C00E@webmail.messagingengine.com>
Message-ID: <CAK_H_uGw4nk+jQrcX4Qo2Jfzc--3fdS=7eUMZwLEjVa6LsPUVw@mail.gmail.com>

Hi Don,
Both these builds also run and display fine for me, unlike the original
2015.03.

Thanks,
Kit


On Fri, Nov 13, 2015 at 8:18 PM, don bright <hmbright at fastmail.com> wrote:

> Thanks to all testers.....
>
> hate to ask another favor but there is one last test... this build is off
> the 2015.03 branch
>
> http://files.openscad.org/snapshots/OpenSCAD-2015.11.13-x86-64.zip
>
> http://files.openscad.org/snapshots/OpenSCAD-2015.11.13-x86-32.zip
>
> The theory being tested here is to see if the build machine itself,
> including the version of gcc, libraries, linker, assembler, mxe, etc, is
> somehow causing the crash. (this build machine for the links above is a
> fresh debian linux 8 box with mxe updated a week or two ago).
>
> --
>   don bright
>   hmbright at fastmail.com
>
>
> On Thu, Nov 12, 2015, at 05:36 AM, spinorkit wrote:
>
> Hi Don,
> Both these static and shared builds run and display fine on my main
> Windows 8.0 machine where the 2015.03 build still crashes.
>
> Thanks,
> Kit
>
>
> On Thu, Nov 12, 2015 at 6:37 PM, donbright [via OpenSCAD] <[hidden email]>
> wrote:
>
>
> Hello
>
> There are some new test builds uploaded (listed below) using a very recent
> checkout of the MXE MingW cross build system.
>
> It would be extremely helpful if anyone with a Windows machine that
> crashed on OpenSCAD 2015 would be able to take a few minutes and test both
> a shared build and a static build, just enough to see if they still crash
> before bootup, and if not to see whether they will do a simple preview of a
> cube or whatever.
>
>
> http://files.openscad.org/snapshots/OpenSCAD-2015.11.11-MingW-x86-32-shared.zip
>
>
> http://files.openscad.org/snapshots/OpenSCAD-2015.11.11-MingW-x86-32-static.zip
>
>
> http://files.openscad.org/snapshots/OpenSCAD-2015.11.11-MingW-x86-64-shared.zip
>
>
> http://files.openscad.org/snapshots/OpenSCAD-2015.11.11-MingW-x86-64-static.zip
>
> Basically the theory being tested is whether or not the crash is caused by
> Static Linking vs Shared Linking... or whether it is just MXE / MingW in
> general that is causing the crash.
>
> Thanks!!!!
>
>
> --
> don bright
>
>
> ------------------------------
>
>
> If you reply to this email, your message will be added to the discussion
> below:
>
> http://forum.openscad.org/Access-violation-on-starting-OpenSCAD-Win8-tp14201p14392.html
> To unsubscribe from Access violation on starting OpenSCAD (Win8), click
> here.
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>
>
>
> ------------------------------
> View this message in context: Re: Access violation on starting OpenSCAD
> (Win8)
> <http://forum.openscad.org/Access-violation-on-starting-OpenSCAD-Win8-tp14201p14402.html>
> Sent from the OpenSCAD mailing list archive <http://forum.openscad.org/>
> at Nabble.com.
> *_______________________________________________*
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151113/d856d094/attachment-0001.html>

From wizards23 at gmail.com  Fri Nov 13 06:47:47 2015
From: wizards23 at gmail.com (Philipp Tiefenbacher)
Date: Fri, 13 Nov 2015 12:47:47 +0100
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <1447348321669-14406.post@n5.nabble.com>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<564473D7.7010509@auriga.ru>
	<1447348321669-14406.post@n5.nabble.com>
Message-ID: <CAHMTcK9=yNd2d-Fne+cLF7MsnX3UskfXEnXBP02=PWstWB=cVA@mail.gmail.com>

Hi?
In all cases given the number is not representable in base 2 (because base
2 has no prime factor 5 like base 10 which you gave your examples in) so
the ...5 becomes a ...4999smthng and that gets rounded down correctly.

This explains the "random" behaviour.

Greetings
Philipp
On Nov 12, 2015 6:13 PM, "runsun" <runsun at gmail.com> wrote:

> Tim V. Shaporev wrote
> > Advanced rounding algorithms may cast 0.5 to either 1 or 0 depending on
> > the preceding bit in the binary representation of the number.
> >
> > See e.g. "Round half to even" https://en.wikipedia.org/wiki/Rounding
> >
> > Just my $0.02
> > Tim
>
> Thx, Tim. But this doesn't explain those examples I raised in the first
> post, where the rounding of 5 is handled differently even the preceding
> number is the same.
>
>
>
>
> -----
>
> $  Runsun Pan, PhD
>
> $ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 ,
> git );
>
>  $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14406.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151113/c0bceaf0/attachment.html>

From tim.shaporev at auriga.ru  Fri Nov 13 07:45:07 2015
From: tim.shaporev at auriga.ru (Tim V. Shaporev)
Date: Fri, 13 Nov 2015 15:45:07 +0300
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
Message-ID: <5645DB53.1090507@auriga.ru>

On 12.11.2015 22:03, Marius Kintel wrote:
> We don?t - file exports are written with the default precision of C++?s stream operator. If you find any cases doing otherwise it would be considered a bug.

???

char buf[32];
sprintf(buf, "%.16f", x);
cout << buf;

Better approach would be to specify output accuracy like
sprintf(buf, "%.*f", n, f);

where n is something like

if      (x >= 1e15) n = 0;
else if (x >= 1e14) n = 1;
else if (x >= 1e13) n = 2;
else if (x >= 1e12) n = 3;
else if (x >= 1e11) n = 4;
else if (x >= 1e10) n = 5;
else if (x >= 1000000000) n = 6;
else if (x >= 100000000) n = 7;
else if (x >= 10000000) n = 8;
else if (x >= 1000000) n = 9;
else if (x >= 100000) n = 10;
else if (x >= 10000) n = 11;
else if (x >= 1000) n = 12;
else if (x >= 100) n = 13;
else if (x >= 10) n = 14;
else if (x >= 1) n = 15;
else n = 16;

or more accurately
if (x >= 1e16)
     sprintf(buf, "%.15g", x);
else {
     register int n = 0;
     if (x < 10000000) {
         if (x < 1000) {
             if (x < 10)
                 n = x < 1 ? 16 : 15;
             else
                 n = x < 100 ? 14 : 13;
         } else {
             if (x < 100000)
                 n = x < 10000 ? 12 : 11;
             else
                 n = x < 1000000 ? 10 : 9;
         }
     } else if (x < 1e15) {
         if (x < 1e11) {
             if (x < 1000000000)
                 n = x < 100000000 ? 8 : 7;
             else
                 n = x < 1e10 ? 6 : 5;
         } else {
             if (x < 1e13)
                 n = x < 1e12 ? 4 : 3;
             else
                 n = x < 1e14 ? 2 : 1;
         }
     }
     sprintf(buf, "%.*f", n, x);
}

Does this make any sense?

Tim


From alan at lxorguk.ukuu.org.uk  Fri Nov 13 08:07:16 2015
From: alan at lxorguk.ukuu.org.uk (Alan Cox)
Date: Fri, 13 Nov 2015 13:07:16 +0000
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <5645DB53.1090507@auriga.ru>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<5645DB53.1090507@auriga.ru>
Message-ID: <20151113130716.01126f39@www.etchedpixels.co.uk>

> Better approach would be to specify output accuracy like
> sprintf(buf, "%.*f", n, f);
> 
> where n is something like

What is wrong  "%.*g" with FLT_DECIMAL_DIG (from float.h). None of the
other mucking around should be needed. 

Alan


From tim.shaporev at auriga.ru  Fri Nov 13 08:16:50 2015
From: tim.shaporev at auriga.ru (Tim V. Shaporev)
Date: Fri, 13 Nov 2015 16:16:50 +0300
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <20151113130716.01126f39@www.etchedpixels.co.uk>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<5645DB53.1090507@auriga.ru>
	<20151113130716.01126f39@www.etchedpixels.co.uk>
Message-ID: <5645E2C2.4080109@auriga.ru>

DBL_DECIMAL_DIG may be?

On 13.11.2015 16:07, Alan Cox wrote:
>> Better approach would be to specify output accuracy like
>> sprintf(buf, "%.*f", n, f);
>>
>> where n is something like
>
> What is wrong  "%.*g" with FLT_DECIMAL_DIG (from float.h). None of the
> other mucking around should be needed.
>
> Alan
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>



From serve at perdix.org  Fri Nov 13 08:17:29 2015
From: serve at perdix.org (Mekko)
Date: Fri, 13 Nov 2015 06:17:29 -0700 (MST)
Subject: [OpenSCAD] Assertion violation
In-Reply-To: <1447403628094-14435.post@n5.nabble.com>
References: <1447358260282-14417.post@n5.nabble.com>
	<1447394094525-14432.post@n5.nabble.com>
	<1447403628094-14435.post@n5.nabble.com>
Message-ID: <1447420649791-14442.post@n5.nabble.com>

@ctchin, I don't think I explained my use case very well. I didn't mean to
suggest I was programming OpenSCAD to find an optimal packing or even a
possible packing. I do all the positioning by hand.

My point was that I don't know of any other tool that lets me reposition a
collection of objects, each in its own .STL file, and then write out a
single comprehensive .STL file. I had considered putting the OpenSCAD code
for all 14 objects into one gigantic source code file but I thought that
wouldn't work. I would have had to resolve all the identifier name conflicts
between the files. Also, I worried that the rendering would take hours or
require too much memory and crash.

I like your idea for making objects manipulable but that's more than I need
for now.



--
View this message in context: http://forum.openscad.org/Assertion-violation-tp14417p14442.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From serve at perdix.org  Fri Nov 13 08:22:34 2015
From: serve at perdix.org (Mekko)
Date: Fri, 13 Nov 2015 06:22:34 -0700 (MST)
Subject: [OpenSCAD] Assertion violation
In-Reply-To: <trinity-b34cc7f1-a2f7-4dd1-93b6-7a6f2aac9180-1447405432032@3capp-gmx-bs54>
References: <1447358260282-14417.post@n5.nabble.com>
	<1447394094525-14432.post@n5.nabble.com>
	<trinity-b34cc7f1-a2f7-4dd1-93b6-7a6f2aac9180-1447405432032@3capp-gmx-bs54>
Message-ID: <1447420954040-14444.post@n5.nabble.com>

Torsten, thanks!

I'm new to MeshLab and didn't understand the meaning of the "Ratio" value it
offers in the dialog box. Changing it from its default value of 40 to
1000000 gave excellent results. Thanks!



--
View this message in context: http://forum.openscad.org/Assertion-violation-tp14417p14444.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Fri Nov 13 09:07:51 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Fri, 13 Nov 2015 15:07:51 +0100
Subject: [OpenSCAD] Assertion violation
In-Reply-To: <1447420649791-14442.post@n5.nabble.com>
References: <1447358260282-14417.post@n5.nabble.com>
	<1447394094525-14432.post@n5.nabble.com>
	<1447403628094-14435.post@n5.nabble.com>,
	<1447420649791-14442.post@n5.nabble.com>
Message-ID: <trinity-6b77ca50-f627-46c2-ac70-aaa26de2b1be-1447423671276@3capp-gmx-bs54>

Von:?Mekko <serve at perdix.org>
> My point was that I don't know of any other tool that lets me reposition a
> collection of objects, each in its own .STL file, and then write out a
> single comprehensive .STL file.
>
Slicers tend to support that very well. I think both cura and slic3r allow
to position a number of objects coming from multiple STL files and export
the whole scene as single STL or multi-volume AMF again.

I guess the only restriction is that both normally enforce positioning at
Z = 0. At least slic3r can work around that when going though the multi-tool
option, but that's probably not very user friendly anymore.

In addition, there's simarrange, which is even designed to do optimization.
I never used it myself though.
https://guillaume.segu.in/blog/code/517/simarrange-a-smart-fast-stl-plater-by-kliment/

ciao,
  Torsten.


From robert.heath16 at gmail.com  Fri Nov 13 10:46:50 2015
From: robert.heath16 at gmail.com (billbob123)
Date: Fri, 13 Nov 2015 08:46:50 -0700 (MST)
Subject: [OpenSCAD] Problem with order of multiple translate and rotation
Message-ID: <1447429610922-14447.post@n5.nabble.com>

The code below produces cubes in three different positions. To the best of my
understanding, it shouldn't.  All rotations and translations apply to the
object in it's original position at 0,0,0, so the order of these operations
shouldn't matter. Can anyone please point out what  I missed/misunderstood?

rotate ([0,0,90]) translate([800,0,0]) translate([500,0,0]) 
cube(400,30,100, center=true);

translate([800,0,0]) rotate ([0,0,90]) translate([500,0,0]) 
cube(400,30,100, center=true);

translate([800,0,0]) translate([500,0,0]) rotate ([0,0,90]) 
cube(400,30,100, center=true);



--
View this message in context: http://forum.openscad.org/Problem-with-order-of-multiple-translate-and-rotation-tp14447.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From lboyd at frontiernet.net  Fri Nov 13 11:28:35 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Fri, 13 Nov 2015 09:28:35 -0700 (MST)
Subject: [OpenSCAD] User manual order
In-Reply-To: <CAGV6i+Ok-dxA6Z4d8oxv1zrzCeXGBJ+vVdsaaj+sF-bH4LYpPA@mail.gmail.com>
References: <1446498030103-14271.post@n5.nabble.com>
	<563972BB.8010008@szu.edu.cn>
	<CAMyDR6JyJXarZptjzChZckgK3c8hVEmCtzkohtvQCgGQaPSxfQ@mail.gmail.com>
	<5640503B.9050005@szu.edu.cn>
	<1447128598230-14331.post@n5.nabble.com>
	<CAGV6i+Ok-dxA6Z4d8oxv1zrzCeXGBJ+vVdsaaj+sF-bH4LYpPA@mail.gmail.com>
Message-ID: <1447432115550-14448.post@n5.nabble.com>

The main page contents list has been revised close to what I proposed. The
language reference is now logically separate from the rest of the user
manual. There are links on the main page to where you will find printable
version of the 2 manuals.

The printable versions are now in the same order as the main page. These are
not a second  copy of the contents.  Instead, when you visit the printable
page, the latest versions of the various components are assembled into a
single page.

Besides being printable as a unit, the manual can be viewed online. The
table of contents has active links just like the main page.

Yes, the contents can be improved. I encourage each of you to do something
about it. WikiBooks allows you to edit portions without rewriting the whole
book. Jerry, you should definitely work on the getting started chapter.

Hopefully the revised organization is helpful.

Larry




--
View this message in context: http://forum.openscad.org/User-manual-order-tp14271p14448.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Fri Nov 13 11:41:28 2015
From: doug at moens.org (doug moen)
Date: Fri, 13 Nov 2015 11:41:28 -0500
Subject: [OpenSCAD] User manual order
In-Reply-To: <1447432115550-14448.post@n5.nabble.com>
References: <1446498030103-14271.post@n5.nabble.com>
	<563972BB.8010008@szu.edu.cn>
	<CAMyDR6JyJXarZptjzChZckgK3c8hVEmCtzkohtvQCgGQaPSxfQ@mail.gmail.com>
	<5640503B.9050005@szu.edu.cn>
	<1447128598230-14331.post@n5.nabble.com>
	<CAGV6i+Ok-dxA6Z4d8oxv1zrzCeXGBJ+vVdsaaj+sF-bH4LYpPA@mail.gmail.com>
	<1447432115550-14448.post@n5.nabble.com>
Message-ID: <CAGV6i+O3oGSr-4HzqnHk0T5EM=oaL1nxGi95ptzQE2Q1Qds4Sw@mail.gmail.com>

Thank you.

On Friday, 13 November 2015, L Boyd <lboyd at frontiernet.net> wrote:

> The main page contents list has been revised close to what I proposed. The
> language reference is now logically separate from the rest of the user
> manual. There are links on the main page to where you will find printable
> version of the 2 manuals.
>
> The printable versions are now in the same order as the main page. These
> are
> not a second  copy of the contents.  Instead, when you visit the printable
> page, the latest versions of the various components are assembled into a
> single page.
>
> Besides being printable as a unit, the manual can be viewed online. The
> table of contents has active links just like the main page.
>
> Yes, the contents can be improved. I encourage each of you to do something
> about it. WikiBooks allows you to edit portions without rewriting the whole
> book. Jerry, you should definitely work on the getting started chapter.
>
> Hopefully the revised organization is helpful.
>
> Larry
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/User-manual-order-tp14271p14448.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org <javascript:;>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151113/5a0f818d/attachment-0001.html>

From tim.shaporev at auriga.ru  Fri Nov 13 11:44:04 2015
From: tim.shaporev at auriga.ru (Tim V. Shaporev)
Date: Fri, 13 Nov 2015 19:44:04 +0300
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <20151113130716.01126f39@www.etchedpixels.co.uk>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<5645DB53.1090507@auriga.ru>
	<20151113130716.01126f39@www.etchedpixels.co.uk>
Message-ID: <56461354.7060502@auriga.ru>

After some thinking I remembered why I imagined such piece of code :-)
to truncate trailing zeros (see at the end):

if (x >= 1e16)
     sprintf(buf, "%.15g", x);
else {
     register int n = 0;
     if (x < 10000000) {
         if (x < 1000) {
             if (x < 10)
                 n = x < 1 ? 16 : 15;
             else
                 n = x < 100 ? 14 : 13;
         } else {
             if (x < 100000)
                 n = x < 10000 ? 12 : 11;
             else
                 n = x < 1000000 ? 10 : 9;
         }
     } else if (x < 1e15) {
         if (x < 1e11) {
             if (x < 1000000000)
                 n = x < 100000000 ? 8 : 7;
             else
                 n = x < 1e10 ? 6 : 5;
         } else {
             if (x < 1e13)
                 n = x < 1e12 ? 4 : 3;
             else
                 n = x < 1e14 ? 2 : 1;
         }
     }
     sprintf(buf, "%.*f", n, x);
     if (n > 0) {
         for (i=strlen(buf); n && '0' == buf[n];) --n;
         if (n>0 && '.' == buf[n]) --n;
         buf[n] = '\0';
     }
}

On 13.11.2015 16:07, Alan Cox wrote:
>> Better approach would be to specify output accuracy like
>> sprintf(buf, "%.*f", n, f);
>>
>> where n is something like
>
> What is wrong  "%.*g" with FLT_DECIMAL_DIG (from float.h). None of the
> other mucking around should be needed.
>
> Alan
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>



From andrew at plumb.org  Fri Nov 13 11:46:31 2015
From: andrew at plumb.org (clothbot)
Date: Fri, 13 Nov 2015 09:46:31 -0700 (MST)
Subject: [OpenSCAD] Problem with order of multiple translate and rotation
In-Reply-To: <1447429610922-14447.post@n5.nabble.com>
References: <1447429610922-14447.post@n5.nabble.com>
Message-ID: <1447433191105-14451.post@n5.nabble.com>

billbob123 wrote
> The code below produces cubes in three different positions. To the best of
> my understanding, it shouldn't.  All rotations and translations apply to
> the object in it's original position at 0,0,0, so the order of these
> operations shouldn't matter. Can anyone please point out what  I
> missed/misunderstood?
> 
> rotate ([0,0,90]) translate([800,0,0]) translate([500,0,0]) 
> cube(400,30,100, center=true);
> 
> translate([800,0,0]) rotate ([0,0,90]) translate([500,0,0]) 
> cube(400,30,100, center=true);
> 
> translate([800,0,0]) translate([500,0,0]) rotate ([0,0,90]) 
> cube(400,30,100, center=true);

Take a step back and think of each one of these operations as linear
algebra, matrix multiplications.

R1 * T1 * T2

...is different from...

T1 * R1 * T2

...which is also different from...

T1 * T2 * R1

They are only equivalent in trivial cases, e.g. when one is an identity
matrix and the other two are their inverse.

Andrew.



--
View this message in context: http://forum.openscad.org/Problem-with-order-of-multiple-translate-and-rotation-tp14447p14451.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Fri Nov 13 11:48:42 2015
From: doug at moens.org (doug moen)
Date: Fri, 13 Nov 2015 11:48:42 -0500
Subject: [OpenSCAD] Problem with order of multiple translate and rotation
In-Reply-To: <1447429610922-14447.post@n5.nabble.com>
References: <1447429610922-14447.post@n5.nabble.com>
Message-ID: <CAGV6i+MLWdkWpFBMn5T7R4KRkoANVvZb-pc80W2v6_ZVBKQHBg@mail.gmail.com>

If there was no rotate, then the order of the translates would not matter.

If the effect of rotate was to rotate the cube around its centre,
regardless of its position, then your intuition would be correct. But
that's not what rotate does.

"Rotate()" rotates the entire arena of objects around the origin at
(0,0,0). So the effect of rotate on each object in the arena depends on the
objects position within the arena.

On Friday, 13 November 2015, billbob123 <robert.heath16 at gmail.com> wrote:

> The code below produces cubes in three different positions. To the best of
> my
> understanding, it shouldn't.  All rotations and translations apply to the
> object in it's original position at 0,0,0, so the order of these operations
> shouldn't matter. Can anyone please point out what  I missed/misunderstood?
>
> rotate ([0,0,90]) translate([800,0,0]) translate([500,0,0])
> cube(400,30,100, center=true);
>
> translate([800,0,0]) rotate ([0,0,90]) translate([500,0,0])
> cube(400,30,100, center=true);
>
> translate([800,0,0]) translate([500,0,0]) rotate ([0,0,90])
> cube(400,30,100, center=true);
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Problem-with-order-of-multiple-translate-and-rotation-tp14447.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org <javascript:;>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151113/e1ae3823/attachment.html>

From doug at moens.org  Fri Nov 13 12:04:53 2015
From: doug at moens.org (doug moen)
Date: Fri, 13 Nov 2015 12:04:53 -0500
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <20151113130716.01126f39@www.etchedpixels.co.uk>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<5645DB53.1090507@auriga.ru>
	<20151113130716.01126f39@www.etchedpixels.co.uk>
Message-ID: <CAGV6i+POWXz4ip7P8M5utxw-Bj+6kcE2B4huQCHiro+xa0dg0g@mail.gmail.com>

The best way for OpenSCAD to print floating point numbers is using the
algorithm from the paper "How To Print Floating Point Numbers Accurately".
That's what Python uses. That's what Javascript uses. That's what most
languages use, except...

...it's impossible to do this in C or C++ using only the standard library.
You need to use a separate open source library. The printf %g format is
bullshit, since it throws away most of the information in the number. You
can't do it with printf or std::stream:<<. The C and C++ standards are
rubbish for not supporting this important feature.

More details in my earlier post:
http://lists.openscad.org/pipermail/discuss_lists.openscad.org/2015-August/003078.html

Maybe I'll try implementing this on the weekend.

On 13 November 2015 at 08:07, Alan Cox <alan at lxorguk.ukuu.org.uk> wrote:

> > Better approach would be to specify output accuracy like
> > sprintf(buf, "%.*f", n, f);
> >
> > where n is something like
>
> What is wrong  "%.*g" with FLT_DECIMAL_DIG (from float.h). None of the
> other mucking around should be needed.
>
> Alan
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151113/49a8ebe6/attachment.html>

From doug at moens.org  Fri Nov 13 13:23:47 2015
From: doug at moens.org (doug moen)
Date: Fri, 13 Nov 2015 13:23:47 -0500
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <20151113130716.01126f39@www.etchedpixels.co.uk>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<5645DB53.1090507@auriga.ru>
	<20151113130716.01126f39@www.etchedpixels.co.uk>
Message-ID: <CAGV6i+NP+2aZX8mSPk41KYiG306_GfAtYxKGyeuNzs9F4t3gMw@mail.gmail.com>

Alan Cox asked "What is wrong  "%.*g" with FLT_DECIMAL_DIG (from float.h)."

Okay, I'll explain.

DBL_DECIMAL_DIG is more appropriate, since we use type double (64 bits),
not type float (16 bits), to represent numeric values in OpenSCAD.

First, consider javascript:
$ node
> 94.8
94.8
> 0.12
0.12
> 0.1 + 0.02
0.12000000000000001


Now try printing 94.8 using C and printf() and %.*g with DBL_DECIMAL_DIG.
On MacOS, I get 94.799999999999997

If you use the "How To Print Floating Point Numbers Accurately" algorithm,
which is not available from the C library, then each unique float value has
a unique printed representation, there is no truncation. But the shortest
representation that reconstructs the original float value is always
produced.

On 13 November 2015 at 08:07, Alan Cox <alan at lxorguk.ukuu.org.uk> wrote:

> > Better approach would be to specify output accuracy like
> > sprintf(buf, "%.*f", n, f);
> >
> > where n is something like
>
> What is wrong  "%.*g" with FLT_DECIMAL_DIG (from float.h). None of the
> other mucking around should be needed.
>
> Alan
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151113/035146a1/attachment.html>

From andrew at plumb.org  Fri Nov 13 14:00:48 2015
From: andrew at plumb.org (clothbot)
Date: Fri, 13 Nov 2015 12:00:48 -0700 (MST)
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
Message-ID: <1447441248118-14455.post@n5.nabble.com>

kintel wrote
> The primary reason why OpenSCAD sometimes cannot read back its STL output
> is that CGAL doesn?t support reading triangles without an area. This tends
> to happen when converting from CGAL?s internal representation to double,
> where some insanely small triangles get their coordinates shifted a tiny
> bit due to floating point accuracy limitations.
> One solution, as mentioned earlier, could be to perform a topology-aware
> surface optimization to ensure all triangles have a valid area, but since
> CGAL is the most picky component and most other tools can handle zero-area
> triangles, this hasn?t been a priority.

Hey Marius, dumb question time!

If we were to use Gmpfr (fixed precision floating-point number) up-front
(see http://doc.cgal.org/latest/Number_types/classCGAL_1_1Gmpfr.html)
instead of arbitrary-precision Gmpq (see
http://doc.cgal.org/latest/Number_types/classCGAL_1_1Gmpq.html) as the
kernel number type, would a lot of these issues just resolve themselves?

My trail of thought being, the loss in precision happens up-front in the
operations and the resulting pre-export mesh is already at/near the expected
export precision. No degenerate faces because they've already been computed
out.

One likely change point:
https://github.com/openscad/openscad/blob/master/src/cgal.h#L43

Andrew.




--
View this message in context: http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14455.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Fri Nov 13 14:51:40 2015
From: doug at moens.org (doug moen)
Date: Fri, 13 Nov 2015 14:51:40 -0500
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <1447441248118-14455.post@n5.nabble.com>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<1447441248118-14455.post@n5.nabble.com>
Message-ID: <CAGV6i+N8qsaCJWsxwc+h8nfu8SiQ+6j=UWgs46EM3xLoMh7Sqw@mail.gmail.com>

Using high precision floating point internally for the mesh will not fix
the problem, if we throw away most of the precision when we output the STL
file. When we output ASCII STL, we truncate each value to 6 decimal digits
of precision, and that is the most significant reason that thin triangles
are being converted to zero width triangles: most of the time, this is
happening in the export code.

If we fix the ASCII STL export code to produce super high precision output
(the equivalent of 128 bit floating point precision, or better), then it
won't help in those rare cases where truncation to 64 bit floating point
precision is enough to create a zero width triangle. That's because the
programs that import the STL that we produce are mostly likely using 64 bit
floats for their mesh, and will throw away any extra precision beyond that
point. Any program that imports AMF is *required* by the standard to use at
least 64 bit precision for the mesh, and it's rare for programs to support
better than 64 bit float precision because the software and hardware
support is lacking.

Here's how I think we should fix the problem:
1. Fix the ASCII STL export code to output 64 bits of floating point
precision. That will fix most of the problems, and is an easy fix.
2. Replace CGAL with a new geometry engine that uses 64 bit floats for the
internal mesh representation. This will make OpenSCAD much faster and
consume much less memory. The engine needs to be coded correctly, so that
it compensates for floating point weirdness, and always creates manifold
objects. But I think there are already several open source engines that
mostly fit our requirements. (Lack of minkowski sum is a common problem, so
we may have to code that for the new engine.)

On 13 November 2015 at 14:00, clothbot <andrew at plumb.org> wrote:

> kintel wrote
> > The primary reason why OpenSCAD sometimes cannot read back its STL output
> > is that CGAL doesn?t support reading triangles without an area. This
> tends
> > to happen when converting from CGAL?s internal representation to double,
> > where some insanely small triangles get their coordinates shifted a tiny
> > bit due to floating point accuracy limitations.
> > One solution, as mentioned earlier, could be to perform a topology-aware
> > surface optimization to ensure all triangles have a valid area, but since
> > CGAL is the most picky component and most other tools can handle
> zero-area
> > triangles, this hasn?t been a priority.
>
> Hey Marius, dumb question time!
>
> If we were to use Gmpfr (fixed precision floating-point number) up-front
> (see http://doc.cgal.org/latest/Number_types/classCGAL_1_1Gmpfr.html)
> instead of arbitrary-precision Gmpq (see
> http://doc.cgal.org/latest/Number_types/classCGAL_1_1Gmpq.html) as the
> kernel number type, would a lot of these issues just resolve themselves?
>
> My trail of thought being, the loss in precision happens up-front in the
> operations and the resulting pre-export mesh is already at/near the
> expected
> export precision. No degenerate faces because they've already been computed
> out.
>
> One likely change point:
> https://github.com/openscad/openscad/blob/master/src/cgal.h#L43
>
> Andrew.
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14455.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151113/1bbdf506/attachment.html>

From marius at kintel.net  Fri Nov 13 15:01:00 2015
From: marius at kintel.net (Marius Kintel)
Date: Fri, 13 Nov 2015 15:01:00 -0500
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
	at 7th significant digit
In-Reply-To: <1447441248118-14455.post@n5.nabble.com>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<1447441248118-14455.post@n5.nabble.com>
Message-ID: <8CB56AEF-F449-4625-AF75-C54F3D0C89D0@kintel.net>

> On Nov 13, 2015, at 14:00 PM, clothbot <andrew at plumb.org> wrote:
> 
> If we were to use Gmpfr (fixed precision floating-point number) up-front
> (see http://doc.cgal.org/latest/Number_types/classCGAL_1_1Gmpfr.html)
> instead of arbitrary-precision Gmpq (see
> http://doc.cgal.org/latest/Number_types/classCGAL_1_1Gmpq.html) as the
> kernel number type, would a lot of these issues just resolve themselves?
> 
I don?t think CGAL?s Nef polyhedrons would support that number type:

http://doc.cgal.org/latest/Nef_3/classCGAL_1_1Nef__polyhedron__3.html

 -Marius



From marius at kintel.net  Fri Nov 13 15:03:29 2015
From: marius at kintel.net (Marius Kintel)
Date: Fri, 13 Nov 2015 15:03:29 -0500
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
	at 7th significant digit
In-Reply-To: <CAGV6i+N8qsaCJWsxwc+h8nfu8SiQ+6j=UWgs46EM3xLoMh7Sqw@mail.gmail.com>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<1447441248118-14455.post@n5.nabble.com>
	<CAGV6i+N8qsaCJWsxwc+h8nfu8SiQ+6j=UWgs46EM3xLoMh7Sqw@mail.gmail.com>
Message-ID: <1E7E778D-2026-4A5C-BF7B-5AB5C2343874@kintel.net>

> On Nov 13, 2015, at 14:51 PM, doug moen <doug at moens.org> wrote:
> 
> That's because the programs that import the STL that we produce are mostly likely using 64 bit floats for their mesh, and will throw away any extra precision beyond that point.

Also keep in mind that binary STL dictates 32-bit floats. This might also result in there being 32-bit importers out there for ASCII as well.

> (Lack of minkowski sum is a common problem, so we may have to code that for the new engine.)
> 
Not sure if this helps, but: We currently implement minkowski sums as a union of convex hulls, so the missing piece is convex decomposition.

 -Marius



From oz.at.michael at gmail.com  Fri Nov 13 15:15:46 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 13 Nov 2015 13:15:46 -0700 (MST)
Subject: [OpenSCAD] rounded surface
In-Reply-To: <1447422024953-14445.post@n5.nabble.com>
References: <1447412437615-14438.post@n5.nabble.com>
	<1447422024953-14445.post@n5.nabble.com>
Message-ID: <1447445746432-14459.post@n5.nabble.com>

Welcome to the forum. Your post is still flagged as "This post has NOT been
accepted by the mailing list yet", so nobody gets it unless they look. You
need to subscribe to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.

Also have a look at
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Transformations#minkowski



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/rounded-surface-tp14438p14459.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From gregorybartonfrost at gmail.com  Fri Nov 13 15:50:51 2015
From: gregorybartonfrost at gmail.com (Greg Frost)
Date: Sat, 14 Nov 2015 07:20:51 +1030
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
	at 7th significant digit
In-Reply-To: <1E7E778D-2026-4A5C-BF7B-5AB5C2343874@kintel.net>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<1447441248118-14455.post@n5.nabble.com>
	<CAGV6i+N8qsaCJWsxwc+h8nfu8SiQ+6j=UWgs46EM3xLoMh7Sqw@mail.gmail.com>
	<1E7E778D-2026-4A5C-BF7B-5AB5C2343874@kintel.net>
Message-ID: <08286120-98F6-4071-9FA7-9829F54144CF@gmail.com>

Most use cases of minkowski would be more simply and accurately implemented with a 3d version of the offset function. Minkowski with a sphere is a terrible way to make rounded edged objects.


On 14 Nov 2015, at 6:33 am, Marius Kintel <marius at kintel.net> wrote:

>> On Nov 13, 2015, at 14:51 PM, doug moen <doug at moens.org> wrote:
>> 
>> That's because the programs that import the STL that we produce are mostly likely using 64 bit floats for their mesh, and will throw away any extra precision beyond that point.
> 
> Also keep in mind that binary STL dictates 32-bit floats. This might also result in there being 32-bit importers out there for ASCII as well.
> 
>> (Lack of minkowski sum is a common problem, so we may have to code that for the new engine.)
> Not sure if this helps, but: We currently implement minkowski sums as a union of convex hulls, so the missing piece is convex decomposition.
> 
> -Marius
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


From runsun at gmail.com  Fri Nov 13 16:32:41 2015
From: runsun at gmail.com (runsun)
Date: Fri, 13 Nov 2015 14:32:41 -0700 (MST)
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <CAHMTcK9=yNd2d-Fne+cLF7MsnX3UskfXEnXBP02=PWstWB=cVA@mail.gmail.com>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<564473D7.7010509@auriga.ru>
	<1447348321669-14406.post@n5.nabble.com>
	<CAHMTcK9=yNd2d-Fne+cLF7MsnX3UskfXEnXBP02=PWstWB=cVA@mail.gmail.com>
Message-ID: <1447450361683-14461.post@n5.nabble.com>

Philipp Tiefenbacher wrote
> Hi?
> In all cases given the number is not representable in base 2 (because base
> 2 has no prime factor 5 like base 10 which you gave your examples in) so
> the ...5 becomes a ...4999smthng and that gets rounded down correctly.
> 
> This explains the "random" behaviour.
> 
> Greetings
> Philipp

I see. Converting to binary form:

>   0.1  = 0.00011001100110011001100...
>   0.2  = 0.00110011001100110011001...

Both are not exact. 



-----

$  Runsun Pan, PhD 

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );

 $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif 






--
View this message in context: http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14461.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Fri Nov 13 16:35:45 2015
From: marius at kintel.net (Marius Kintel)
Date: Fri, 13 Nov 2015 16:35:45 -0500
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
	at 7th significant digit
In-Reply-To: <08286120-98F6-4071-9FA7-9829F54144CF@gmail.com>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<1447441248118-14455.post@n5.nabble.com>
	<CAGV6i+N8qsaCJWsxwc+h8nfu8SiQ+6j=UWgs46EM3xLoMh7Sqw@mail.gmail.com>
	<1E7E778D-2026-4A5C-BF7B-5AB5C2343874@kintel.net>
	<08286120-98F6-4071-9FA7-9829F54144CF@gmail.com>
Message-ID: <2BDB4EE5-CE75-4D6E-B87C-5FA6D57D87B0@kintel.net>

> On Nov 13, 2015, at 15:50 PM, Greg Frost <Gregorybartonfrost at gmail.com> wrote:
> 
> Most use cases of minkowski would be more simply and accurately implemented with a 3d version of the offset function. Minkowski with a sphere is a terrible way to make rounded edged objects.
> 
3D offset is on the wishlist. It?s not a trivial operator to implement efficiently though. Pointers are welcome :)

 -Marius



From runsun at gmail.com  Fri Nov 13 17:17:31 2015
From: runsun at gmail.com (runsun)
Date: Fri, 13 Nov 2015 15:17:31 -0700 (MST)
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <CAGV6i+N8qsaCJWsxwc+h8nfu8SiQ+6j=UWgs46EM3xLoMh7Sqw@mail.gmail.com>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<1447441248118-14455.post@n5.nabble.com>
	<CAGV6i+N8qsaCJWsxwc+h8nfu8SiQ+6j=UWgs46EM3xLoMh7Sqw@mail.gmail.com>
Message-ID: <1447453051890-14463.post@n5.nabble.com>

doug.moen wrote
> If we fix the ASCII STL export code to produce super high precision output
> (the equivalent of 128 bit floating point precision, or better), then it
> won't help in those rare cases where truncation to 
*
> 64 bit floating point
> precision
*
>  is enough to create a zero width triangle. That's because the
> programs that import the STL that we produce are mostly likely using 64
> bit
> floats for their mesh, and will throw away any extra precision beyond that
> point. Any program that imports AMF is *required* by the standard to use
> at
> least 64 bit precision for the mesh, and it's rare for programs to support
> better than 64 bit float precision because the software and hardware
> support is lacking.

I did a little test: Let i = 1 + k, then make k smaller by 10 fold
continuously, to see how far down k goes to get ignored. When it did, we
will see 1==i.

I tested 1+0.2 and 1+0.6, so the tests go like:

   1.02 == 1 ?  ==> false
   1.06 == 1 ?  ==> false

   1.002 == 1 ?  ==> false
   1.006 == 1 ?  ==> false

and so on. This goes on until there are 16 0's:

   1.0000000000000002 ==1 ? ==> false   (15 0's)
   1.0000000000000006 ==1 ? ==> false
   1.00000000000000002 ==1 ? ==> true  (16 0's)
   1.00000000000000006 ==1 ? ==> true

What it means to me is:

1) Openscad calculation uses 17 significant digits
2) Beyond that, anything is discarded. Note that there no rounding up. Just
cut away. 

So, questions:

1) is this a fare test of the internal precision ? 

2) What does this tells us about Openscad's internal precision, in terms of
*"??? bit floating-point precision*" ? 



-----

$  Runsun Pan, PhD 

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );

 $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif 






--
View this message in context: http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14463.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Fri Nov 13 17:44:18 2015
From: runsun at gmail.com (runsun)
Date: Fri, 13 Nov 2015 15:44:18 -0700 (MST)
Subject: [OpenSCAD] Simple addition of numbers introduces error
In-Reply-To: <CAEEmnrOodZgrLd3XC6a4cYr83ikH1coMccpjbxS-zJkgZo9xuw@mail.gmail.com>
References: <1447349711276-14408.post@n5.nabble.com>
	<56450272.9020903@bigpond.com>
	<CAEEmnrOodZgrLd3XC6a4cYr83ikH1coMccpjbxS-zJkgZo9xuw@mail.gmail.com>
Message-ID: <1447454658196-14464.post@n5.nabble.com>

Alan Cox wrote
> The usual approach would be
> 
> 	abs(a - b) < ACCEPTABLE_ERROR


nophead wrote
> Perhaps runsun could convert to strings with str to compare them. E.g.
> 
> x = 0.1 + 0.02;
> 
> echo(x == 0.12);
> echo(str(x) == "0.12");
> 
> ECHO: false
> ECHO: true

Thx to Alan and nophead. Both approaches are in fact used in my doctest lib
already. It's just that after months of success, something tickling (or
breaking) my brain cells, let me start suspecting that it is not quite right
yet. 

I now see that Openscad uses 17 significant digits for the internal
operations, and 6 digits for display. I'll have to think about if my lib
needs to change based on this findings. 



-----

$  Runsun Pan, PhD 

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );

 $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif 






--
View this message in context: http://forum.openscad.org/Simple-addition-of-numbers-introduces-error-tp14408p14464.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Fri Nov 13 17:49:50 2015
From: runsun at gmail.com (runsun)
Date: Fri, 13 Nov 2015 15:49:50 -0700 (MST)
Subject: [OpenSCAD] Simple addition of numbers introduces error
In-Reply-To: <1447382233767-14430.post@n5.nabble.com>
References: <1447349711276-14408.post@n5.nabble.com>
	<1447382233767-14430.post@n5.nabble.com>
Message-ID: <1447454990640-14465.post@n5.nabble.com>

@ ctchin,

Thx. Your nasty.scad helps to show that it's better not use a fraction as
the step in a for=[beg:step:end] manner. Good to know.




-----

$  Runsun Pan, PhD 

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );

 $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif 






--
View this message in context: http://forum.openscad.org/Simple-addition-of-numbers-introduces-error-tp14408p14465.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Fri Nov 13 18:03:12 2015
From: doug at moens.org (doug moen)
Date: Fri, 13 Nov 2015 18:03:12 -0500
Subject: [OpenSCAD] Simple addition of numbers introduces error
In-Reply-To: <1447454658196-14464.post@n5.nabble.com>
References: <1447349711276-14408.post@n5.nabble.com>
	<56450272.9020903@bigpond.com>
	<CAEEmnrOodZgrLd3XC6a4cYr83ikH1coMccpjbxS-zJkgZo9xuw@mail.gmail.com>
	<1447454658196-14464.post@n5.nabble.com>
Message-ID: <CAGV6i+PmcrV59HhWsj1P-R37hXhXNyJaRBMgPSb+GphPeZiaQw@mail.gmail.com>

Alan's approach for testing equality within a tolerance is the recommended
approach. It lets you specify a tolerance, and can (in principle) be
compiled into fast code (once we have a proper JIT compiler).

Nophead's approach is not recommended. It will break once we fix the
float->string conversion, as is being discussed elsewhere in the forum. You
can't specify a tolerance, and it will be slower in compiled code.

On 13 November 2015 at 17:44, runsun <runsun at gmail.com> wrote:

> Alan Cox wrote
> > The usual approach would be
> >
> >       abs(a - b) < ACCEPTABLE_ERROR
>
>
> nophead wrote
> > Perhaps runsun could convert to strings with str to compare them. E.g.
> >
> > x = 0.1 + 0.02;
> >
> > echo(x == 0.12);
> > echo(str(x) == "0.12");
> >
> > ECHO: false
> > ECHO: true
>
> Thx to Alan and nophead. Both approaches are in fact used in my doctest lib
> already. It's just that after months of success, something tickling (or
> breaking) my brain cells, let me start suspecting that it is not quite
> right
> yet.
>
> I now see that Openscad uses 17 significant digits for the internal
> operations, and 6 digits for display. I'll have to think about if my lib
> needs to change based on this findings.
>
>
>
> -----
>
> $  Runsun Pan, PhD
>
> $ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 ,
> git );
>
>  $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Simple-addition-of-numbers-introduces-error-tp14408p14464.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151113/55b20760/attachment-0001.html>

From doug at moens.org  Fri Nov 13 18:15:29 2015
From: doug at moens.org (doug moen)
Date: Fri, 13 Nov 2015 18:15:29 -0500
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <1447453051890-14463.post@n5.nabble.com>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<1447441248118-14455.post@n5.nabble.com>
	<CAGV6i+N8qsaCJWsxwc+h8nfu8SiQ+6j=UWgs46EM3xLoMh7Sqw@mail.gmail.com>
	<1447453051890-14463.post@n5.nabble.com>
Message-ID: <CAGV6i+Mb3LbNU0R_arfAf7yU5_uHK6Bf8K27z1rO_9Gvyb7zzA@mail.gmail.com>

Your test is correct, 17 decimal digits of precision is pretty close to
reality. OpenSCAD uses IEEE 754 floating point arithmetic at 64 bit
precision, which means a 53 bit mantissa. Due to a technical trick, this is
really equivalent to 54 binary digits of precision. log10(2^54) is 16.25
decimal digits of precision, which rounds up to 17.

OpenSCAD represents numbers internally as binary, not decimal, so thinking
about the numbers as decimals only takes you so far. Arithmetic results are
rounded, but they are rounded in binary, not rounded in decimal.

On 13 November 2015 at 17:17, runsun <runsun at gmail.com> wrote:

> doug.moen wrote
> > If we fix the ASCII STL export code to produce super high precision
> output
> > (the equivalent of 128 bit floating point precision, or better), then it
> > won't help in those rare cases where truncation to
> *
> > 64 bit floating point
> > precision
> *
> >  is enough to create a zero width triangle. That's because the
> > programs that import the STL that we produce are mostly likely using 64
> > bit
> > floats for their mesh, and will throw away any extra precision beyond
> that
> > point. Any program that imports AMF is *required* by the standard to use
> > at
> > least 64 bit precision for the mesh, and it's rare for programs to
> support
> > better than 64 bit float precision because the software and hardware
> > support is lacking.
>
> I did a little test: Let i = 1 + k, then make k smaller by 10 fold
> continuously, to see how far down k goes to get ignored. When it did, we
> will see 1==i.
>
> I tested 1+0.2 and 1+0.6, so the tests go like:
>
>    1.02 == 1 ?  ==> false
>    1.06 == 1 ?  ==> false
>
>    1.002 == 1 ?  ==> false
>    1.006 == 1 ?  ==> false
>
> and so on. This goes on until there are 16 0's:
>
>    1.0000000000000002 ==1 ? ==> false   (15 0's)
>    1.0000000000000006 ==1 ? ==> false
>    1.00000000000000002 ==1 ? ==> true  (16 0's)
>    1.00000000000000006 ==1 ? ==> true
>
> What it means to me is:
>
> 1) Openscad calculation uses 17 significant digits
> 2) Beyond that, anything is discarded. Note that there no rounding up. Just
> cut away.
>
> So, questions:
>
> 1) is this a fare test of the internal precision ?
>
> 2) What does this tells us about Openscad's internal precision, in terms of
> *"??? bit floating-point precision*" ?
>
>
>
> -----
>
> $  Runsun Pan, PhD
>
> $ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 ,
> git );
>
>  $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14463.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151113/c0273a7d/attachment.html>

From hmbright at fastmail.com  Fri Nov 13 19:35:34 2015
From: hmbright at fastmail.com (don bright)
Date: Fri, 13 Nov 2015 18:35:34 -0600
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <2BDB4EE5-CE75-4D6E-B87C-5FA6D57D87B0@kintel.net>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<1447441248118-14455.post@n5.nabble.com>
	<CAGV6i+N8qsaCJWsxwc+h8nfu8SiQ+6j=UWgs46EM3xLoMh7Sqw@mail.gmail.com>
	<1E7E778D-2026-4A5C-BF7B-5AB5C2343874@kintel.net>
	<08286120-98F6-4071-9FA7-9829F54144CF@gmail.com>
	<2BDB4EE5-CE75-4D6E-B87C-5FA6D57D87B0@kintel.net>
Message-ID: <1447461334.569309.439394281.304323E4@webmail.messagingengine.com>


On Fri, Nov 13, 2015, at 03:35 PM, Marius Kintel wrote:
> > On Nov 13, 2015, at 15:50 PM, Greg Frost <Gregorybartonfrost at gmail.com> wrote:
> > 
> > Most use cases of minkowski would be more simply and accurately implemented with a 3d version of the offset function. Minkowski with a sphere is a terrible way to make rounded edged objects.
> > 
> 3D offset is on the wishlist. It?s not a trivial operator to implement
> efficiently though. Pointers are welcome :)
> 
>  -Marius
> 

Nooooo not more Poin....

*** Segmentation fault. core dumped. 


From marius at kintel.net  Fri Nov 13 23:09:29 2015
From: marius at kintel.net (Marius Kintel)
Date: Fri, 13 Nov 2015 23:09:29 -0500
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
	at 7th significant digit
In-Reply-To: <1447461334.569309.439394281.304323E4@webmail.messagingengine.com>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<1447441248118-14455.post@n5.nabble.com>
	<CAGV6i+N8qsaCJWsxwc+h8nfu8SiQ+6j=UWgs46EM3xLoMh7Sqw@mail.gmail.com>
	<1E7E778D-2026-4A5C-BF7B-5AB5C2343874@kintel.net>
	<08286120-98F6-4071-9FA7-9829F54144CF@gmail.com>
	<2BDB4EE5-CE75-4D6E-B87C-5FA6D57D87B0@kintel.net>
	<1447461334.569309.439394281.304323E4@webmail.messagingengine.com>
Message-ID: <EF317BC4-69A2-474C-944C-2F136C809281@kintel.net>

> On Nov 13, 2015, at 19:35 PM, don bright <hmbright at fastmail.com> wrote:
>>> 
>> 3D offset is on the wishlist. It?s not a trivial operator to implement
>> efficiently though. Pointers are welcome :)
>> 
>> -Marius
>> 
> 
> Nooooo not more Poin....
> 
> *** Segmentation fault. core dumped. 
> 
I should have specified that valid pointers are preferred :)

 -Marius



From serve at perdix.org  Sat Nov 14 00:40:14 2015
From: serve at perdix.org (Mekko)
Date: Fri, 13 Nov 2015 22:40:14 -0700 (MST)
Subject: [OpenSCAD] Assertion violation
In-Reply-To: <trinity-6b77ca50-f627-46c2-ac70-aaa26de2b1be-1447423671276@3capp-gmx-bs54>
References: <1447358260282-14417.post@n5.nabble.com>
	<1447394094525-14432.post@n5.nabble.com>
	<1447403628094-14435.post@n5.nabble.com>
	<1447420649791-14442.post@n5.nabble.com>
	<trinity-6b77ca50-f627-46c2-ac70-aaa26de2b1be-1447423671276@3capp-gmx-bs54>
Message-ID: <1447479614578-14470.post@n5.nabble.com>

Perfect! Glad I asked. I have a 3D printer arriving (I hope) next week so I
need to learn cura or slic3r anyhow.

Thanks!

 



--
View this message in context: http://forum.openscad.org/Assertion-violation-tp14417p14470.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From wizards23 at gmail.com  Sat Nov 14 02:40:08 2015
From: wizards23 at gmail.com (Philipp Tiefenbacher)
Date: Sat, 14 Nov 2015 08:40:08 +0100
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <1447453051890-14463.post@n5.nabble.com>
References: <1447178579842-14350.post@n5.nabble.com>
	<1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<1447441248118-14455.post@n5.nabble.com>
	<CAGV6i+N8qsaCJWsxwc+h8nfu8SiQ+6j=UWgs46EM3xLoMh7Sqw@mail.gmail.com>
	<1447453051890-14463.post@n5.nabble.com>
Message-ID: <CAHMTcK9o6Rsg2qQu4UkWSC8nFH1oGBdZvPrGqPpZFXFdK8yspg@mail.gmail.com>

On Fri, Nov 13, 2015 at 11:17 PM, runsun <runsun at gmail.com> wrote:
> doug.moen wrote
>> If we fix the ASCII STL export code to produce super high precision output
>> (the equivalent of 128 bit floating point precision, or better), then it
>> won't help in those rare cases where truncation to
> *
>> 64 bit floating point
>> precision
> *
>>  is enough to create a zero width triangle. That's because the
>> programs that import the STL that we produce are mostly likely using 64
>> bit
>> floats for their mesh, and will throw away any extra precision beyond that
>> point. Any program that imports AMF is *required* by the standard to use
>> at
>> least 64 bit precision for the mesh, and it's rare for programs to support
>> better than 64 bit float precision because the software and hardware
>> support is lacking.
>
> I did a little test: Let i = 1 + k, then make k smaller by 10 fold
> continuously, to see how far down k goes to get ignored. When it did, we
> will see 1==i.
>
> I tested 1+0.2 and 1+0.6, so the tests go like:
>
>    1.02 == 1 ?  ==> false
>    1.06 == 1 ?  ==> false
>
>    1.002 == 1 ?  ==> false
>    1.006 == 1 ?  ==> false
>
> and so on. This goes on until there are 16 0's:
>
>    1.0000000000000002 ==1 ? ==> false   (15 0's)
>    1.0000000000000006 ==1 ? ==> false
>    1.00000000000000002 ==1 ? ==> true  (16 0's)
>    1.00000000000000006 ==1 ? ==> true
>
> What it means to me is:
>
> 1) Openscad calculation uses 17 significant digits

I think its 53 bits (explanation is further down)

> 2) Beyond that, anything is discarded. Note that there no rounding up. Just
> cut away.
>
> So, questions:
>
> 1) is this a fare test of the internal precision ?

guess so but if you use numerically stable algorithms it will work out
most of the time. If your algorithm at some point wants to know the
ratio of:

(smallNr + hugeNr) / hugeNr

you run into problems. That's what I took away from numerics at university :)

> 2) What does this tells us about Openscad's internal precision, in terms of
> *"??? bit floating-point precision*" ?

this means doubles are used internally at some point :)

https://en.wikipedia.org/wiki/Double-precision_floating-point_format says:

double: 64 bit
Sign bit: 1 bit
Exponent width: 11 bits
Significand precision: 53 bits (52 explicitly stored)

if you normalize a nr (except 0) you get a  binary 1 in the first
digit so they dont have to store it :)

so to get the significant decimal digits: (I used python as a calculator)
log(pow(2, 53), 10) = 15.954589770191001

pow(2, 53) gives us the biggest nr (irregardless of the
representation) that can be represented in the 53 bits and rounding up
the log10 of that we get the nr of digits we need to represent this nr
in decimal.

So your experiments led to the right answer: ~16 decimal digits


(I just saw doug allready anwered this but I still post my answer
because I think he got the nr of significant bits off by one ;)

greetings
Philipp


-- 
:: Philipp Tiefenbacher
:: open source hardware/magic -> http://magicshifter.net
:: open source cellular automata -> http://evocell.net
:: my homebase/hackerspace -> http://metalab.at
:: world domination -> http://kybkreis.at

Any sufficiently advanced technology is indistinguishable from a MagicShifter!
--Arthur C. Clarke about his http://MagicShifter.net


From whburling at outlook.com  Sat Nov 14 10:17:42 2015
From: whburling at outlook.com (whburling)
Date: Sat, 14 Nov 2015 08:17:42 -0700 (MST)
Subject: [OpenSCAD] preview and making surface view sustainable
Message-ID: <1447514262019-14473.post@n5.nabble.com>

Hi Folks,

I used to just hit F5 and automatically see the surfaces of my objects.  

Now,  i can not see anything in F5 (unless, every time I hit F5, I go into
view and click on "show surfaces".  Then I see my object with its
surfaces.). 

If i hit F6, the correct rendition appears without having to select
surfaces.

I would like F5 to always show surfaces unless I specified something
different.  At one time this was the case, but not anymore. I must have
changed the state of some setting.

I know the word "sustain" is wrong...it is some other word but i am 70 and
my mind does not always recall the words I know.

Bil



--
View this message in context: http://forum.openscad.org/preview-and-making-surface-view-sustainable-tp14473.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Sat Nov 14 11:02:07 2015
From: marius at kintel.net (Marius Kintel)
Date: Sat, 14 Nov 2015 11:02:07 -0500
Subject: [OpenSCAD] preview and making surface view sustainable
In-Reply-To: <1447514262019-14473.post@n5.nabble.com>
References: <1447514262019-14473.post@n5.nabble.com>
Message-ID: <A1026356-2903-4674-8F8E-E28519F27C46@kintel.net>

> On Nov 14, 2015, at 10:17 AM, whburling <whburling at outlook.com> wrote:
> 
> Now,  i can not see anything in F5 (unless, every time I hit F5, I go into
> view and click on "show surfaces".  Then I see my object with its
> surfaces.). 
> 
F5 should always switch to surfaces.
Which version of OpenSCAD are you using, on which OS, and how did you install it?

 -Marius



From deurer at rocketmail.com  Sat Nov 14 11:26:31 2015
From: deurer at rocketmail.com (plasticmonk)
Date: Sat, 14 Nov 2015 09:26:31 -0700 (MST)
Subject: [OpenSCAD] make an object hollow with constant wall thickness
In-Reply-To: <1446377779240-14255.post@n5.nabble.com>
References: <1446377779240-14255.post@n5.nabble.com>
Message-ID: <1447518391187-14475.post@n5.nabble.com>

Hi I'm new here and just discovered openscad. I work for a filament producer
and have therefor much to do with 3d printing and CAD, but no idea of
programming in general.

I'm working on a similar Problem: I solved this by creating the same object
again minus the wall thikness:


x=1; // Wall thickness

difference(){
cube([50,50,100], center=true);
cube([50-x,50-x,101], center=true);
}


But this way one has to create the same object twice and keep track of the
walls, were it needs to be substracted and were not. It is easy to get lost
between them both.

I'm hoping to find a solution, were I generate the part twice with a
different x-value and make a difference out of both.

The best I could come up with was like:


x=1; // wall thickness

for (i=[0:1])
difference(){
    x=i;
cube([50-x,50-x,100], center=true);
}


but it doesn't work like this. any suggestions?
thanks in advance








--
View this message in context: http://forum.openscad.org/make-an-object-hollow-with-constant-wall-thickness-tp14255p14475.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From whburling at outlook.com  Sat Nov 14 11:39:17 2015
From: whburling at outlook.com (whburling)
Date: Sat, 14 Nov 2015 09:39:17 -0700 (MST)
Subject: [OpenSCAD] preview and making surface view sustainable
In-Reply-To: <A1026356-2903-4674-8F8E-E28519F27C46@kintel.net>
References: <1447514262019-14473.post@n5.nabble.com>
	<A1026356-2903-4674-8F8E-E28519F27C46@kintel.net>
Message-ID: <1447519157037-14476.post@n5.nabble.com>

Thank you for responding.

I am using openSCAD ve 2015.03-1

I am using Windows 10

I installed it originally from openSCAD download....but since then
downloaded ANOTHER person's modifications (such as auto complete). That
person's instructions were to change the download name to openSCAD.xml 
which replaced the one that was there ( I assume).

However, even with the above changes....F5 rendering with surfaces did work
up to yesterday when I must have changed some flag state in advertently.  

I am absolutely new to openSCAD and feel very clumsy at the moment.   Love
the programming, however.



--
View this message in context: http://forum.openscad.org/preview-and-making-surface-view-sustainable-tp14473p14476.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From whburling at outlook.com  Sat Nov 14 12:45:02 2015
From: whburling at outlook.com (whburling)
Date: Sat, 14 Nov 2015 10:45:02 -0700 (MST)
Subject: [OpenSCAD] Special Variables
Message-ID: <1447523102679-14477.post@n5.nabble.com>

Unless I have made a mistake,  it appears as if a special variable is not a
global variable (meaning that the variable can be seen by any module and
changed by any module so that its value is always the value last defined).

In my example, I defined a special variable($C=2) then called a module (no
parameters passed). I read the special variable within the called
module($C=5). Changed that special variable (originally had the value of 2,
but now defined it as 5), then returned from the called module. Upon return
I looked at the value of the special character. its value, newly defined
within the called module(5), did not persist but retained the value it
originally had(2) before the call to the module.

Interpretation of the results imply that special variables are defined at
compile time and not dynamically.

I thought, that  special variables were dynamically assigned and hence have
the attributes of a global variable defined by me in the first paragraph.

I must have a misunderstanding. please help me understand.

bil



--
View this message in context: http://forum.openscad.org/Special-Variables-tp14477.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Sat Nov 14 13:10:53 2015
From: runsun at gmail.com (runsun)
Date: Sat, 14 Nov 2015 11:10:53 -0700 (MST)
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <CAHMTcK9o6Rsg2qQu4UkWSC8nFH1oGBdZvPrGqPpZFXFdK8yspg@mail.gmail.com>
References: <1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<1447441248118-14455.post@n5.nabble.com>
	<CAGV6i+N8qsaCJWsxwc+h8nfu8SiQ+6j=UWgs46EM3xLoMh7Sqw@mail.gmail.com>
	<1447453051890-14463.post@n5.nabble.com>
	<CAHMTcK9o6Rsg2qQu4UkWSC8nFH1oGBdZvPrGqPpZFXFdK8yspg@mail.gmail.com>
Message-ID: <1447524653362-14478.post@n5.nabble.com>

Many thx to Phillip and doug for the info on precision. Now I have a clearer
picture of what's going on there.

I manage to create a function, *fullnumstr()*, that displays  a number
faithfully in string up to the internal significant digits OpenScad allows.
With this, we can break the 6-digit display limit set by OpenScad. The tests
show promising outcome:

> ECHO: "=================================================================
> fullnumstr ( n )=str ( tested:23/failed:1 )
> | 0> fullnumstr(123456)= "123456"
> | 1> fullnumstr(1234567)= "1234567"
> | 2> fullnumstr(123456789)= "123456789"
> | 3> fullnumstr(123456000)= "123456000"
> | 4> fullnumstr(12345670)= "12345670"
> | 5> fullnumstr(123456789012345)= "123456789012345"
> | 6> fullnumstr(-123456789012345)= "-123456789012345"
> | 7> fullnumstr(12345678901234500)= "123456789012345"
> | 8> fullnumstr(1234.5)= "1234.5"
> | 9> fullnumstr(12345.6)= "12345.6"
> | 10> fullnumstr(12345.67)= "12345.67"
> | 11> fullnumstr(0.12345)= "0.12345"
> | 12> fullnumstr(12)= "12"
> | 13> fullnumstr(1230)= "1230"
> | 14> fullnumstr(200)= "200"
> | 15> fullnumstr(0.12)= "0.12"
> | 16> fullnumstr(0.123)= "0.123"
> | 17> fullnumstr(0.1234)= "0.1234"
> | 18> fullnumstr(0.123456)= "0.123456"
> | 19> fullnumstr(0.0000123456)= "0.0000123456"
> | 20> fullnumstr(0.123456789012345)= "0.123456789012345"
> | 21> fullnumstr(-0.123456789012345)= "-0.123456789012345"
> |?22> fullnumstr(1/3) want: "0.333333333333333" got:
> "0.3333333333333332848269492"

I haven't set the max digit limit yet. As shown, 1/3 is turned to string
down to 15 digits, after that it goes wild. It is observed that even we
enter numbers beyond 15 digits, OpenScad doesn't seem to know how to store
it correctly:

>   fullnumstr(0.123456789012345 ) => "0.123456789012345"
>   fullnumstr(0.1234567890123456)=> "0.123456789012345579976681618063..."
>   fullnumstr(1234567890.12345 ) => "1234567890.12345"
>   fullnumstr(1234567890.123456)=> "1234567890.1234559816657565352286..."





-----

$  Runsun Pan, PhD 

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );

 $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif 






--
View this message in context: http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14478.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Sat Nov 14 13:21:02 2015
From: runsun at gmail.com (runsun)
Date: Sat, 14 Nov 2015 11:21:02 -0700 (MST)
Subject: [OpenSCAD] Special Variables
In-Reply-To: <1447523102679-14477.post@n5.nabble.com>
References: <1447523102679-14477.post@n5.nabble.com>
Message-ID: <1447525262400-14479.post@n5.nabble.com>

can you show some code ?  



-----

$  Runsun Pan, PhD 

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );

 $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif 






--
View this message in context: http://forum.openscad.org/Special-Variables-tp14477p14479.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Sat Nov 14 13:23:20 2015
From: nop.head at gmail.com (nop head)
Date: Sat, 14 Nov 2015 18:23:20 +0000
Subject: [OpenSCAD] Special Variables
In-Reply-To: <1447523102679-14477.post@n5.nabble.com>
References: <1447523102679-14477.post@n5.nabble.com>
Message-ID: <CAEEmnrPnF=9N4+fRzUPtH0AmCBshcr9NX4oUrK_1PShS82L21A@mail.gmail.com>

Special variables have dynamic scope instead of the default lexical scope.
It doesn't make them mutable.
On Nov 14, 2015 5:45 PM, "whburling" <whburling at outlook.com> wrote:

> Unless I have made a mistake,  it appears as if a special variable is not a
> global variable (meaning that the variable can be seen by any module and
> changed by any module so that its value is always the value last defined).
>
> In my example, I defined a special variable($C=2) then called a module (no
> parameters passed). I read the special variable within the called
> module($C=5). Changed that special variable (originally had the value of 2,
> but now defined it as 5), then returned from the called module. Upon return
> I looked at the value of the special character. its value, newly defined
> within the called module(5), did not persist but retained the value it
> originally had(2) before the call to the module.
>
> Interpretation of the results imply that special variables are defined at
> compile time and not dynamically.
>
> I thought, that  special variables were dynamically assigned and hence have
> the attributes of a global variable defined by me in the first paragraph.
>
> I must have a misunderstanding. please help me understand.
>
> bil
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Special-Variables-tp14477.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151114/10b794c5/attachment.html>

From stempeldergeschichte at googlemail.com  Sat Nov 14 15:07:12 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Sat, 14 Nov 2015 21:07:12 +0100
Subject: [OpenSCAD] make an object hollow with constant wall thickness
In-Reply-To: <1447518391187-14475.post@n5.nabble.com>
References: <1446377779240-14255.post@n5.nabble.com>
	<1447518391187-14475.post@n5.nabble.com>
Message-ID: <CAJgOqABrzvht5MmZnPPvdwsPu+LEBJA-3YW9zEfcAPC=ScOTug@mail.gmail.com>

for does an implicit union betweeen its children.
And the syntax for difference() is always A-B1-B2-B3....

a=50;
b=100;

x=1;

// small number
e=0.01;

module tube(a,b,x){
    difference(){
            cube([a,a,b]);
            translate([x,x,-e])cube([a-2*x,a-2*x,b+2*e]);
    }
}

tube(a,b,x);

2015-11-14 17:26 GMT+01:00 plasticmonk <deurer at rocketmail.com>:

> Hi I'm new here and just discovered openscad. I work for a filament
> producer
> and have therefor much to do with 3d printing and CAD, but no idea of
> programming in general.
>
> I'm working on a similar Problem: I solved this by creating the same object
> again minus the wall thikness:
>
>
> x=1; // Wall thickness
>
> difference(){
> cube([50,50,100], center=true);
> cube([50-x,50-x,101], center=true);
> }
>
>
> But this way one has to create the same object twice and keep track of the
> walls, were it needs to be substracted and were not. It is easy to get lost
> between them both.
>
> I'm hoping to find a solution, were I generate the part twice with a
> different x-value and make a difference out of both.
>
> The best I could come up with was like:
>
>
> x=1; // wall thickness
>
> for (i=[0:1])
> difference(){
>     x=i;
> cube([50-x,50-x,100], center=true);
> }
>
>
> but it doesn't work like this. any suggestions?
> thanks in advance
>
>
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/make-an-object-hollow-with-constant-wall-thickness-tp14255p14475.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151114/024cce42/attachment.html>

From stempeldergeschichte at googlemail.com  Sat Nov 14 15:09:50 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Sat, 14 Nov 2015 21:09:50 +0100
Subject: [OpenSCAD] make an object hollow with constant wall thickness
In-Reply-To: <CAJgOqABrzvht5MmZnPPvdwsPu+LEBJA-3YW9zEfcAPC=ScOTug@mail.gmail.com>
References: <1446377779240-14255.post@n5.nabble.com>
	<1447518391187-14475.post@n5.nabble.com>
	<CAJgOqABrzvht5MmZnPPvdwsPu+LEBJA-3YW9zEfcAPC=ScOTug@mail.gmail.com>
Message-ID: <CAJgOqAA9f5BiKQ5bvxP8=wkYgdwDRkeesOgaXngrBmX=PH6MXA@mail.gmail.com>

Another way to go is to to the wlls in 2d and extrude them:

a=50;
b=100;

x=1;

// small number
e=0.01;

module tube(a,b,x){
    linear_extrude(h=b){
        difference(){
                square([a,a]);
                translate([x,x])square([a-2*x,a-2*x]);
        }
    }
}

tube(a,b,x);

2015-11-14 21:07 GMT+01:00 Peter Falke <stempeldergeschichte at googlemail.com>
:

> for does an implicit union betweeen its children.
> And the syntax for difference() is always A-B1-B2-B3....
>
> a=50;
> b=100;
>
> x=1;
>
> // small number
> e=0.01;
>
> module tube(a,b,x){
>     difference(){
>             cube([a,a,b]);
>             translate([x,x,-e])cube([a-2*x,a-2*x,b+2*e]);
>     }
> }
>
> tube(a,b,x);
>
> 2015-11-14 17:26 GMT+01:00 plasticmonk <deurer at rocketmail.com>:
>
>> Hi I'm new here and just discovered openscad. I work for a filament
>> producer
>> and have therefor much to do with 3d printing and CAD, but no idea of
>> programming in general.
>>
>> I'm working on a similar Problem: I solved this by creating the same
>> object
>> again minus the wall thikness:
>>
>>
>> x=1; // Wall thickness
>>
>> difference(){
>> cube([50,50,100], center=true);
>> cube([50-x,50-x,101], center=true);
>> }
>>
>>
>> But this way one has to create the same object twice and keep track of the
>> walls, were it needs to be substracted and were not. It is easy to get
>> lost
>> between them both.
>>
>> I'm hoping to find a solution, were I generate the part twice with a
>> different x-value and make a difference out of both.
>>
>> The best I could come up with was like:
>>
>>
>> x=1; // wall thickness
>>
>> for (i=[0:1])
>> difference(){
>>     x=i;
>> cube([50-x,50-x,100], center=true);
>> }
>>
>>
>> but it doesn't work like this. any suggestions?
>> thanks in advance
>>
>>
>>
>>
>>
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/make-an-object-hollow-with-constant-wall-thickness-tp14255p14475.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151114/dfb8a7c2/attachment-0001.html>

From lboyd at frontiernet.net  Sat Nov 14 15:23:20 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Sat, 14 Nov 2015 13:23:20 -0700 (MST)
Subject: [OpenSCAD] Simple addition of numbers introduces error
In-Reply-To: <1447382233767-14430.post@n5.nabble.com>
References: <1447349711276-14408.post@n5.nabble.com>
	<1447382233767-14430.post@n5.nabble.com>
Message-ID: <1447532600041-14483.post@n5.nabble.com>

// so... should the following makes 25 or 26 balls?
for (i=[0:0.2:5]) {
    translate([0,i*10,0]) sphere(1.5);
}
fails to give the desired 26 balls because 0.2 can not be represented
exactly in floating point. Whole numbers can be, but most decimal fractions
don't translate exactly into binary.

However this does exactly what you want:

for (i=[0:0.2:5.001) translate([0,i*10,0]) sphere(1.5);

or even better:

for (i=[0:2:50) translate([0,i,0]) sphere(1.5);




--
View this message in context: http://forum.openscad.org/Simple-addition-of-numbers-introduces-error-tp14408p14483.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Sat Nov 14 15:41:06 2015
From: doug at moens.org (doug moen)
Date: Sat, 14 Nov 2015 15:41:06 -0500
Subject: [OpenSCAD] Special Variables
In-Reply-To: <1447523102679-14477.post@n5.nabble.com>
References: <1447523102679-14477.post@n5.nabble.com>
Message-ID: <CAGV6i+N89A2RKOBksKaDfFpbqn6HseHNChLuBxsAiP5qrEZ8vA@mail.gmail.com>

The only thing that is "special" about special variables like $fn is that
you can set their value in a module call, like this:
   M($fn=10);
and this will override the "global" value of $fn that the module M would
otherwise use.

On 14 November 2015 at 12:45, whburling <whburling at outlook.com> wrote:

> Unless I have made a mistake,  it appears as if a special variable is not a
> global variable (meaning that the variable can be seen by any module and
> changed by any module so that its value is always the value last defined).
>
> In my example, I defined a special variable($C=2) then called a module (no
> parameters passed). I read the special variable within the called
> module($C=5). Changed that special variable (originally had the value of 2,
> but now defined it as 5), then returned from the called module. Upon return
> I looked at the value of the special character. its value, newly defined
> within the called module(5), did not persist but retained the value it
> originally had(2) before the call to the module.
>
> Interpretation of the results imply that special variables are defined at
> compile time and not dynamically.
>
> I thought, that  special variables were dynamically assigned and hence have
> the attributes of a global variable defined by me in the first paragraph.
>
> I must have a misunderstanding. please help me understand.
>
> bil
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Special-Variables-tp14477.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151114/7635f7ed/attachment.html>

From doug at moens.org  Sat Nov 14 15:53:49 2015
From: doug at moens.org (doug moen)
Date: Sat, 14 Nov 2015 15:53:49 -0500
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <1447524653362-14478.post@n5.nabble.com>
References: <1447180268853-14354.post@n5.nabble.com>
	<1447275851037-14375.post@n5.nabble.com>
	<CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<1447441248118-14455.post@n5.nabble.com>
	<CAGV6i+N8qsaCJWsxwc+h8nfu8SiQ+6j=UWgs46EM3xLoMh7Sqw@mail.gmail.com>
	<1447453051890-14463.post@n5.nabble.com>
	<CAHMTcK9o6Rsg2qQu4UkWSC8nFH1oGBdZvPrGqPpZFXFdK8yspg@mail.gmail.com>
	<1447524653362-14478.post@n5.nabble.com>
Message-ID: <CAGV6i+Nw-wK9FPKDbg4sD8e3qa-er3b2Wjsc6DcQipfru9EQtQ@mail.gmail.com>

Float to string conversion code is notoriously difficult to get correct.
Based on the experience of people who have tackled this in other
programming languages, even after you think it is working, there might be
weird edge conditions that screw up, and the bugs might take years to find.
So we can help you to debug this code, but I won't feel real confident
about the correctness even once it seems to work.

I'd like to fix this in OpenSCAD using David Gay's open source
implementation in C, which has been under continual maintenance for 30
years. I'm pretty confident about that implementation.

On 14 November 2015 at 13:10, runsun <runsun at gmail.com> wrote:

> Many thx to Phillip and doug for the info on precision. Now I have a
> clearer
> picture of what's going on there.
>
> I manage to create a function, *fullnumstr()*, that displays  a number
> faithfully in string up to the internal significant digits OpenScad allows.
> With this, we can break the 6-digit display limit set by OpenScad. The
> tests
> show promising outcome:
>
> > ECHO: "=================================================================
> > fullnumstr ( n )=str ( tested:23/failed:1 )
> > | 0> fullnumstr(123456)= "123456"
> > | 1> fullnumstr(1234567)= "1234567"
> > | 2> fullnumstr(123456789)= "123456789"
> > | 3> fullnumstr(123456000)= "123456000"
> > | 4> fullnumstr(12345670)= "12345670"
> > | 5> fullnumstr(123456789012345)= "123456789012345"
> > | 6> fullnumstr(-123456789012345)= "-123456789012345"
> > | 7> fullnumstr(12345678901234500)= "123456789012345"
> > | 8> fullnumstr(1234.5)= "1234.5"
> > | 9> fullnumstr(12345.6)= "12345.6"
> > | 10> fullnumstr(12345.67)= "12345.67"
> > | 11> fullnumstr(0.12345)= "0.12345"
> > | 12> fullnumstr(12)= "12"
> > | 13> fullnumstr(1230)= "1230"
> > | 14> fullnumstr(200)= "200"
> > | 15> fullnumstr(0.12)= "0.12"
> > | 16> fullnumstr(0.123)= "0.123"
> > | 17> fullnumstr(0.1234)= "0.1234"
> > | 18> fullnumstr(0.123456)= "0.123456"
> > | 19> fullnumstr(0.0000123456)= "0.0000123456"
> > | 20> fullnumstr(0.123456789012345)= "0.123456789012345"
> > | 21> fullnumstr(-0.123456789012345)= "-0.123456789012345"
> > |?22> fullnumstr(1/3) want: "0.333333333333333" got:
> > "0.3333333333333332848269492"
>
> I haven't set the max digit limit yet. As shown, 1/3 is turned to string
> down to 15 digits, after that it goes wild. It is observed that even we
> enter numbers beyond 15 digits, OpenScad doesn't seem to know how to store
> it correctly:
>
> >   fullnumstr(0.123456789012345 ) => "0.123456789012345"
> >   fullnumstr(0.1234567890123456)=> "0.123456789012345579976681618063..."
> >   fullnumstr(1234567890.12345 ) => "1234567890.12345"
> >   fullnumstr(1234567890.123456)=> "1234567890.1234559816657565352286..."
>
>
>
>
>
> -----
>
> $  Runsun Pan, PhD
>
> $ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 ,
> git );
>
>  $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14478.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151114/5ce0abc0/attachment.html>

From openscad_rmk at kandarian.com  Sat Nov 14 16:40:58 2015
From: openscad_rmk at kandarian.com (rickan)
Date: Sat, 14 Nov 2015 14:40:58 -0700 (MST)
Subject: [OpenSCAD] Anybody recognize this? (Seems like someone ought to
 marvel at it besides me).
Message-ID: <1447537258561-14486.post@n5.nabble.com>

Play with m to change the ruggedness.

Wallis.scad <http://forum.openscad.org/file/n14486/Wallis.scad>  

WallisBall25.png <http://forum.openscad.org/file/n14486/WallisBall25.png>  



--
View this message in context: http://forum.openscad.org/Anybody-recognize-this-Seems-like-someone-ought-to-marvel-at-it-besides-me-tp14486.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Sat Nov 14 17:21:12 2015
From: nop.head at gmail.com (nop head)
Date: Sat, 14 Nov 2015 22:21:12 +0000
Subject: [OpenSCAD] Special Variables
In-Reply-To: <CAGV6i+N89A2RKOBksKaDfFpbqn6HseHNChLuBxsAiP5qrEZ8vA@mail.gmail.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<CAGV6i+N89A2RKOBksKaDfFpbqn6HseHNChLuBxsAiP5qrEZ8vA@mail.gmail.com>
Message-ID: <CAEEmnrPg3B9xjGZXS69OHSGEbJq81WjQpv_W_oDcd06t6-oWBw@mail.gmail.com>

No it is more than that. You don't need to pass it as a parameter. It has
dynamic scope so is visible in anything you call from the block you set it
in. Functions, modules and children.
On Nov 14, 2015 8:42 PM, "doug moen" <doug at moens.org> wrote:

> The only thing that is "special" about special variables like $fn is that
> you can set their value in a module call, like this:
>    M($fn=10);
> and this will override the "global" value of $fn that the module M would
> otherwise use.
>
> On 14 November 2015 at 12:45, whburling <whburling at outlook.com> wrote:
>
>> Unless I have made a mistake,  it appears as if a special variable is not
>> a
>> global variable (meaning that the variable can be seen by any module and
>> changed by any module so that its value is always the value last defined).
>>
>> In my example, I defined a special variable($C=2) then called a module (no
>> parameters passed). I read the special variable within the called
>> module($C=5). Changed that special variable (originally had the value of
>> 2,
>> but now defined it as 5), then returned from the called module. Upon
>> return
>> I looked at the value of the special character. its value, newly defined
>> within the called module(5), did not persist but retained the value it
>> originally had(2) before the call to the module.
>>
>> Interpretation of the results imply that special variables are defined at
>> compile time and not dynamically.
>>
>> I thought, that  special variables were dynamically assigned and hence
>> have
>> the attributes of a global variable defined by me in the first paragraph.
>>
>> I must have a misunderstanding. please help me understand.
>>
>> bil
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/Special-Variables-tp14477.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151114/5e4fc58d/attachment-0001.html>

From whburling at outlook.com  Sat Nov 14 18:06:04 2015
From: whburling at outlook.com (whburling)
Date: Sat, 14 Nov 2015 16:06:04 -0700 (MST)
Subject: [OpenSCAD] Special Variables
In-Reply-To: <1447525262400-14479.post@n5.nabble.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
Message-ID: <1447542364679-14488.post@n5.nabble.com>

I would love to show some code....but I am not sure how to attach the code
here.  Do people prefer to "embed" (I am assuming if i point to a file in
Embed, the file contents will appear in this box), or link the file to this
box. not sure what linking will actually do.  tell me what you want and how
and i will gladly respond




--
View this message in context: http://forum.openscad.org/Special-Variables-tp14477p14488.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Sat Nov 14 18:22:17 2015
From: runsun at gmail.com (runsun)
Date: Sat, 14 Nov 2015 16:22:17 -0700 (MST)
Subject: [OpenSCAD] Special Variables
In-Reply-To: <1447542364679-14488.post@n5.nabble.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
	<1447542364679-14488.post@n5.nabble.com>
Message-ID: <1447543337951-14489.post@n5.nabble.com>

copy and paste ?



-----

$  Runsun Pan, PhD 

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );

 $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif 






--
View this message in context: http://forum.openscad.org/Special-Variables-tp14477p14489.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Sat Nov 14 18:29:27 2015
From: doug at moens.org (doug moen)
Date: Sat, 14 Nov 2015 18:29:27 -0500
Subject: [OpenSCAD] Special Variables
In-Reply-To: <CAEEmnrPg3B9xjGZXS69OHSGEbJq81WjQpv_W_oDcd06t6-oWBw@mail.gmail.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<CAGV6i+N89A2RKOBksKaDfFpbqn6HseHNChLuBxsAiP5qrEZ8vA@mail.gmail.com>
	<CAEEmnrPg3B9xjGZXS69OHSGEbJq81WjQpv_W_oDcd06t6-oWBw@mail.gmail.com>
Message-ID: <CAGV6i+PC1SnPacaJOiUik4H7s5ggMcbSfWDV+38xKE24rhWrAQ@mail.gmail.com>

Okay, thanks for clarifying that.

On 14 November 2015 at 17:21, nop head <nop.head at gmail.com> wrote:

> No it is more than that. You don't need to pass it as a parameter. It has
> dynamic scope so is visible in anything you call from the block you set it
> in. Functions, modules and children.
> On Nov 14, 2015 8:42 PM, "doug moen" <doug at moens.org> wrote:
>
>> The only thing that is "special" about special variables like $fn is that
>> you can set their value in a module call, like this:
>>    M($fn=10);
>> and this will override the "global" value of $fn that the module M would
>> otherwise use.
>>
>> On 14 November 2015 at 12:45, whburling <whburling at outlook.com> wrote:
>>
>>> Unless I have made a mistake,  it appears as if a special variable is
>>> not a
>>> global variable (meaning that the variable can be seen by any module and
>>> changed by any module so that its value is always the value last
>>> defined).
>>>
>>> In my example, I defined a special variable($C=2) then called a module
>>> (no
>>> parameters passed). I read the special variable within the called
>>> module($C=5). Changed that special variable (originally had the value of
>>> 2,
>>> but now defined it as 5), then returned from the called module. Upon
>>> return
>>> I looked at the value of the special character. its value, newly defined
>>> within the called module(5), did not persist but retained the value it
>>> originally had(2) before the call to the module.
>>>
>>> Interpretation of the results imply that special variables are defined at
>>> compile time and not dynamically.
>>>
>>> I thought, that  special variables were dynamically assigned and hence
>>> have
>>> the attributes of a global variable defined by me in the first paragraph.
>>>
>>> I must have a misunderstanding. please help me understand.
>>>
>>> bil
>>>
>>>
>>>
>>> --
>>> View this message in context:
>>> http://forum.openscad.org/Special-Variables-tp14477.html
>>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151114/a403472d/attachment.html>

From nop.head at gmail.com  Sat Nov 14 18:31:16 2015
From: nop.head at gmail.com (nop head)
Date: Sat, 14 Nov 2015 23:31:16 +0000
Subject: [OpenSCAD] Special Variables
In-Reply-To: <1447543337951-14489.post@n5.nabble.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
	<1447542364679-14488.post@n5.nabble.com>
	<1447543337951-14489.post@n5.nabble.com>
Message-ID: <CAEEmnrMg7DjZKH6-hWB=stzPFjYba+-sbEAroraZ0KenDXowWA@mail.gmail.com>

To explain the original post. If you set a special variable at the file
scope it will be visible in every thing you call but if you try to assign
to it in a deeper scope you simply get a new one with the same name that
hides the original until it goes out of scope. Just the same as the normal
lexical scope variables in that respect.
On Nov 14, 2015 11:23 PM, "runsun" <runsun at gmail.com> wrote:

> copy and paste ?
>
>
>
> -----
>
> $  Runsun Pan, PhD
>
> $ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 ,
> git );
>
>  $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Special-Variables-tp14477p14489.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151114/ec4ba437/attachment.html>

From runsun at gmail.com  Sat Nov 14 19:55:56 2015
From: runsun at gmail.com (runsun)
Date: Sat, 14 Nov 2015 17:55:56 -0700 (MST)
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <CAGV6i+Nw-wK9FPKDbg4sD8e3qa-er3b2Wjsc6DcQipfru9EQtQ@mail.gmail.com>
References: <CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<1447441248118-14455.post@n5.nabble.com>
	<CAGV6i+N8qsaCJWsxwc+h8nfu8SiQ+6j=UWgs46EM3xLoMh7Sqw@mail.gmail.com>
	<1447453051890-14463.post@n5.nabble.com>
	<CAHMTcK9o6Rsg2qQu4UkWSC8nFH1oGBdZvPrGqPpZFXFdK8yspg@mail.gmail.com>
	<1447524653362-14478.post@n5.nabble.com>
	<CAGV6i+Nw-wK9FPKDbg4sD8e3qa-er3b2Wjsc6DcQipfru9EQtQ@mail.gmail.com>
Message-ID: <1447548956170-14492.post@n5.nabble.com>

doug.moen wrote
> Float to string conversion code is notoriously difficult to get correct.
> Based on the experience of people who have tackled this in other
> programming languages, even after you think it is working, there might be
> weird edge conditions that screw up, and the bugs might take years to
> find.
> So we can help you to debug this code, but I won't feel real confident
> about the correctness even once it seems to work.
> 
> I'd like to fix this in OpenSCAD using David Gay's open source
> implementation in C, which has been under continual maintenance for 30
> years. I'm pretty confident about that implementation.

@Doug, It'd be great if more people can help debugging my code. 

It seems to me that David Gay's approach ( see  here
<http://www.exploringbinary.com/how-strtod-works-and-sometimes-doesnt/>  
and  here
<http://www.exploringbinary.com/incorrect-directed-conversions-in-david-gays-strtod/>  
), which converts a str representation of decimal to binary, is a bit off
topic here, 'cos what we need is convert a number to str, not the other way
around.

The reference you previously mentioned (  Printing Floating-Point Numbers
Quickly and Accurately
<http://www.cs.indiana.edu/~dyb/pubs/FP-Printing-PLDI96.pdf>   ) is more on
the topic IMO. 

But I am too lazy to go through that article, so I just follow my intuition.
After all I'm just trying to make it work in OpenScad, but not to make a
theory out of it. 

I'll present my code in my next post. Let me describe my approach briefly
here:

> 1) log10(n) to find the order of 10
> 
>    (a) n=1234567= 1.234567*e+6; floor(log(n))=6 ==> p=6
>    (b) n=12345.67= 1.234567*e+4; floor(log(n))=4 ==> p=4
>    (c) n=0.01234567== 1.234567*e-2; floor(log(n))=-2 ==> p=-2
> 
>   This gives us an idea of the order of the number. 
> 
> 2) For a number 1.23456*e+p, we want to take the first 5 digits to start
> with. We choose 5, because Openscad only displays 6 significant digits,
> and the 6th significant digit could be result of the rounding up from the
> 7th, for example, 
> 
>     1.234558
>     1.23456
>     
>    will be displays same digits (123456) but they are not the same. Taking
> 5 digits ensures that this pick reserves the exact same 5 digits as the
> original.
> 
>   This is done by:
> 
>    n2= n / p2 where p2 = pow(10, p-4) :
> 
>     (a) p2 = 100; n2 = n/p2 = 12345.67;
>     (b) p2 =     0; n2 = n/p2 = 12345.67;
>     (c) p2 = 1000000; n2 = n/p2 = 12345.67;
> 
>    So we take the part on the left of dot: i = 12345
> 
> 3)  Subtract  this i from n2, we get the fraction part, which is 0.67
> 
> 4) Repeat 1)~3) using n=0.67 to take next 5 digits. 

Usually after recursion twice ( first call gets 5 digits, 1st recursive call
gets next 5, and 2nd recursive call gets the 11~15), we reach the precision
limit of OpenScad (17 digits ) so the 3rd recursion will be unreliable. 

Note that this 0.67, which is on the far right of original value, meaning
that it is relatively less significant, is moved up by an order of 5 during
the process. My intuition tells me that this kind of "rescues" the digits
from the low-significant position to prevent them from wiping out by the str
conversion of OpenScad. 

So this is the main idea behind my approach. There are certainly some
patch-ups and fine-tunes during the process to take care of different
situations. But I think the idea and the code itself is pretty simple for
such a notoriously difficult problem. And currently it works with the very
limited cases I tried. 
  
See my code next post.  




-----

$  Runsun Pan, PhD 

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );

 $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif 






--
View this message in context: http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14492.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Sat Nov 14 19:57:45 2015
From: runsun at gmail.com (runsun)
Date: Sat, 14 Nov 2015 17:57:45 -0700 (MST)
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <1447548956170-14492.post@n5.nabble.com>
References: <1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<1447441248118-14455.post@n5.nabble.com>
	<CAGV6i+N8qsaCJWsxwc+h8nfu8SiQ+6j=UWgs46EM3xLoMh7Sqw@mail.gmail.com>
	<1447453051890-14463.post@n5.nabble.com>
	<CAHMTcK9o6Rsg2qQu4UkWSC8nFH1oGBdZvPrGqPpZFXFdK8yspg@mail.gmail.com>
	<1447524653362-14478.post@n5.nabble.com>
	<CAGV6i+Nw-wK9FPKDbg4sD8e3qa-er3b2Wjsc6DcQipfru9EQtQ@mail.gmail.com>
	<1447548956170-14492.post@n5.nabble.com>
Message-ID: <1447549065245-14493.post@n5.nabble.com>

/* &#xa0;&#xa0;&#xa0;&#xa0;fullnumstr(n) -- Return the full number string
representation of n.&#xa0;&#xa0;&#xa0;&#xa0;Require functions:
repeat,trim,replace,num are defined in scadx
lib&#xa0;&#xa0;&#xa0;&#xa0;Runsun Pan 2015*/function fullnumstr(           
n           , _rtn=""       // return buffer           , _sign=1       //
sign to be added back when exiting           , _init_int=undef  // If init n
is an int           , _init_p=undef // Init power of 10, needed for
inserting                           // . back to the string           ,
_int_end0= 0  // For int that ends with 1 or more 0s                        
, _dep=0        // depth of recursion as a safe guard           , _debug=""          
)=(   let( _sign = _rtn==""?sign(n):_sign      ,_init_int =
_rtn==""?isint(n):_init_int      ,_int_end0 = _rtn==""        // 1234000 =>
_int_end0 = 3                   &amp;&amp; _init_int?   // 1234560 =>
_int_end0 = 1                  ( let( end0_list= [ for( i=[0:20] )                                   
if( n % pow(10,i))i-1]                     ) end0_list?end0_list[0]:0                 
)                                 :_int_end0                           )  
_init_int &amp;&amp; _rtn=="" &amp;&amp; ( n< 1000000 ) &amp;&amp; (
n>-1000000)? str(n)      :let( _n = abs(n) //+_intguard)      ,  p =
floor(log(_n))      , _init_p = _rtn==""?p:_init_p      , n2= _n/pow(10,p-4)
// If n=1234567 or 0.001234567, n2=12345.7                           //
Means we pick 5 digits at a time. OpenScad's                           //
displays only 6 significant digits, and the                           // 6th
one could be a result of rounding-up of                           // the
7th, which will not be the original 6th.                            // So
picking 5 is safer.       , i = floor(num(str(n2))) // We know that i has to
be int. So do                                // a reverse type-casting
num-str-num                                // to get rid of garbage digits,
if exits      , f = n2-i      , isexit = f< 1e-6 || _dep>3       , __rtn= 
str( _rtn                   , isexit ?             // trim away ending 0's                      
trim(str(i), r="0") // when exiting                       : i                   
)       , _rtn = isexit?                  str( _sign==-1?"-":""                                    
, _int_end0?  // Add ending 0s back for int                        str(
__rtn                           , repeat("0", _int_end0))                                                
:_init_p<0? // Add preceeding 0s back for float                        str(
"0."                           , repeat("0", -_init_p-1)                                 
// In cases like 0.~2300034~, the 000 could                               
// be skipped by log() when next step is 3.4~                            ,
__rtn                                              )                      
:_init_p< len(__rtn)-1?                            insert(__rtn, ".",
_init_p+1)                       :__rtn                    )               :
__rtn//      , _debug = str( _debug//                   , "&lt;hr/>"//                  
, "&lt;br/>_dep = ", _dep  //                   , "&lt;br/>_init_p = ",
_init_p//                   , "&lt;br/>_init_int = ", _init_int//                  
, "&lt;br/>_int_end0 = ", _int_end0//                   , "&lt;br/>n = ", n 
//                   , "&lt;br/>p = ", p  //                   , "&lt;br/>n2
= ", n2//                   , "&lt;br/>i = floor(n2) = ", i//                  
, "&lt;br/>f=n2-i = ", f   //                   , "&lt;br/>isexit = ",
isexit  //                   , "&lt;br/>__rtn = ", __rtn  //                  
, "&lt;br/>_rtn = ", _rtn  //                   )      )// let   isexit ?       
// [_debug,_rtn]        _rtn   : fullnumstr( n=f, _rtn =_rtn               
, _init_int = _init_int                , _int_end0 = _int_end0               
, _dep=_dep+1                , _init_p=_init_p                , _sign=_sign               
, _debug = _debug                 )       );




-----

$  Runsun Pan, PhD 

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );

 $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif 






--
View this message in context: http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14493.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151114/bf05ff46/attachment-0001.html>

From whburling at outlook.com  Sat Nov 14 20:51:05 2015
From: whburling at outlook.com (whburling)
Date: Sat, 14 Nov 2015 18:51:05 -0700 (MST)
Subject: [OpenSCAD] Special Variables
In-Reply-To: <1447525262400-14479.post@n5.nabble.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
Message-ID: <1447552265781-14494.post@n5.nabble.com>

module a(b)
{  echo ("enterred module a");
    
    // initial conditions for module
         echo ("b, passed parameter value arriving within module a(), is
defined as = ", b);  
         echo ("special variable value before module a() code executed $C =
", $C);  
  
    // changing passed parameter 
         echo ("just before I change passed parameter");
         $D = b;  // simple change to test concept
         echo (" passed parameter b which shall be changed $D =" ,  $D);
         $D = b + 50;
         echo ("changed passed parameter $D = ", $D);
    
    // changing global value
         $C = 5;
          echo ("special variable value created outside of module a() but
changed within module a() $C = ", $C); 
  };

// TESTING MODULE a()
     //  Defining special variables prior to module a() call
           $C = 2;   //define a special variables prior to call to module
(a)
           echo ( "before call to module a(), special variable,  $C was
defined as", $C);

     //  Defining parameter to be passed to module a
           b = 2; 
           echo ("before call to module a(b), b parameter to be passed was
defined as",b);

    //  Call to module a()
          a(b);     
  
    //  Return from module a() 
           echo ("returned from module a()");
           echo ("upon return from module a() value of passed parameter b =
",b);     //expect b to have original passed value
           echo ("upon return from module a() value of special variable $C
=", $C); // expect special variable defined external to module a() to have
been changed by module a()
           echo ("upon return from module a() value of special variable $D=
", $D);  // expect special variable created within module a() to be seen
external to module a() 

/* INTERPRETATIONS OF EXPERIMENT
     (1) special variable $C, does not act as a global variable. 
          $C, created and defined before call to module a() is redefined in
module a(). The change does not make it out of module a().
     (2)  special variable $D does not act as a global variable.
           $D, created and defined within module a() is not considered
defined outside of module a()
      (3) Thus my interpretation of special value is that special values
allow an external (to a module) constant be seen internal to a module but it
can not be changed within the module and the outside world knows about the
change.  
 */     
       





--
View this message in context: http://forum.openscad.org/Special-Variables-tp14477p14494.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Sat Nov 14 20:51:40 2015
From: doug at moens.org (doug moen)
Date: Sat, 14 Nov 2015 20:51:40 -0500
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <1447548956170-14492.post@n5.nabble.com>
References: <CAGV6i+PuYRYk=bmUp=2v+2-omrs3rADWzVVOcnz8S0UELr=mbQ@mail.gmail.com>
	<1447305364511-14391.post@n5.nabble.com>
	<CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<1447441248118-14455.post@n5.nabble.com>
	<CAGV6i+N8qsaCJWsxwc+h8nfu8SiQ+6j=UWgs46EM3xLoMh7Sqw@mail.gmail.com>
	<1447453051890-14463.post@n5.nabble.com>
	<CAHMTcK9o6Rsg2qQu4UkWSC8nFH1oGBdZvPrGqPpZFXFdK8yspg@mail.gmail.com>
	<1447524653362-14478.post@n5.nabble.com>
	<CAGV6i+Nw-wK9FPKDbg4sD8e3qa-er3b2Wjsc6DcQipfru9EQtQ@mail.gmail.com>
	<1447548956170-14492.post@n5.nabble.com>
Message-ID: <CAGV6i+MHQdAnLfqejOwHrQO=SAMd0YqL8s0ogLC_rvvEq2hNcA@mail.gmail.com>

Obviously I'm not talking about David Gay's strtod() function. I'm talking
about his implementation of "How to print floating point numbers
accurately", which is called dtoa(). Given that I'm an experienced C/C++
programmer, and given that I think that writing a correct num->string
function in OpenSCAD is a research project, I think that the best use of my
limited resources is to integrate David Gay's code into OpenSCAD. It's a
very simple and straightforward project.

On 14 November 2015 at 19:55, runsun <runsun at gmail.com> wrote:

> doug.moen wrote
> > Float to string conversion code is notoriously difficult to get correct.
> > Based on the experience of people who have tackled this in other
> > programming languages, even after you think it is working, there might be
> > weird edge conditions that screw up, and the bugs might take years to
> > find.
> > So we can help you to debug this code, but I won't feel real confident
> > about the correctness even once it seems to work.
> >
> > I'd like to fix this in OpenSCAD using David Gay's open source
> > implementation in C, which has been under continual maintenance for 30
> > years. I'm pretty confident about that implementation.
>
> @Doug, It'd be great if more people can help debugging my code.
>
> It seems to me that David Gay's approach ( see  here
> <http://www.exploringbinary.com/how-strtod-works-and-sometimes-doesnt/>
> and  here
> <
> http://www.exploringbinary.com/incorrect-directed-conversions-in-david-gays-strtod/
> >
> ), which converts a str representation of decimal to binary, is a bit off
> topic here, 'cos what we need is convert a number to str, not the other way
> around.
>
> The reference you previously mentioned (  Printing Floating-Point Numbers
> Quickly and Accurately
> <http://www.cs.indiana.edu/~dyb/pubs/FP-Printing-PLDI96.pdf>   ) is more
> on
> the topic IMO.
>
> But I am too lazy to go through that article, so I just follow my
> intuition.
> After all I'm just trying to make it work in OpenScad, but not to make a
> theory out of it.
>
> I'll present my code in my next post. Let me describe my approach briefly
> here:
>
> > 1) log10(n) to find the order of 10
> >
> >    (a) n=1234567= 1.234567*e+6; floor(log(n))=6 ==> p=6
> >    (b) n=12345.67= 1.234567*e+4; floor(log(n))=4 ==> p=4
> >    (c) n=0.01234567== 1.234567*e-2; floor(log(n))=-2 ==> p=-2
> >
> >   This gives us an idea of the order of the number.
> >
> > 2) For a number 1.23456*e+p, we want to take the first 5 digits to start
> > with. We choose 5, because Openscad only displays 6 significant digits,
> > and the 6th significant digit could be result of the rounding up from the
> > 7th, for example,
> >
> >     1.234558
> >     1.23456
> >
> >    will be displays same digits (123456) but they are not the same.
> Taking
> > 5 digits ensures that this pick reserves the exact same 5 digits as the
> > original.
> >
> >   This is done by:
> >
> >    n2= n / p2 where p2 = pow(10, p-4) :
> >
> >     (a) p2 = 100; n2 = n/p2 = 12345.67;
> >     (b) p2 =     0; n2 = n/p2 = 12345.67;
> >     (c) p2 = 1000000; n2 = n/p2 = 12345.67;
> >
> >    So we take the part on the left of dot: i = 12345
> >
> > 3)  Subtract  this i from n2, we get the fraction part, which is 0.67
> >
> > 4) Repeat 1)~3) using n=0.67 to take next 5 digits.
>
> Usually after recursion twice ( first call gets 5 digits, 1st recursive
> call
> gets next 5, and 2nd recursive call gets the 11~15), we reach the precision
> limit of OpenScad (17 digits ) so the 3rd recursion will be unreliable.
>
> Note that this 0.67, which is on the far right of original value, meaning
> that it is relatively less significant, is moved up by an order of 5 during
> the process. My intuition tells me that this kind of "rescues" the digits
> from the low-significant position to prevent them from wiping out by the
> str
> conversion of OpenScad.
>
> So this is the main idea behind my approach. There are certainly some
> patch-ups and fine-tunes during the process to take care of different
> situations. But I think the idea and the code itself is pretty simple for
> such a notoriously difficult problem. And currently it works with the very
> limited cases I tried.
>
> See my code next post.
>
>
>
>
> -----
>
> $  Runsun Pan, PhD
>
> $ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 ,
> git );
>
>  $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14492.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151114/ca915e90/attachment.html>

From whburling at outlook.com  Sat Nov 14 20:54:02 2015
From: whburling at outlook.com (whburling)
Date: Sat, 14 Nov 2015 18:54:02 -0700 (MST)
Subject: [OpenSCAD] Special Variables
In-Reply-To: <1447543337951-14489.post@n5.nabble.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
	<1447542364679-14488.post@n5.nabble.com>
	<1447543337951-14489.post@n5.nabble.com>
Message-ID: <1447552442487-14496.post@n5.nabble.com>

i copied and pasted code to reveal my experience from which I shared
interpretations within the code.  the code is a "reply" located at your
original request for code.



--
View this message in context: http://forum.openscad.org/Special-Variables-tp14477p14496.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From whburling at outlook.com  Sat Nov 14 21:08:37 2015
From: whburling at outlook.com (whburling)
Date: Sat, 14 Nov 2015 19:08:37 -0700 (MST)
Subject: [OpenSCAD] assemble process question
Message-ID: <1447553317238-14497.post@n5.nabble.com>

my question centers on how one encapsulates yet still manages to assemble a
set of subassemblies into a final assembly.

to add more clarification:
my imagination of good encapsulation is that all data for a given part is
stored within a subassembly. Including its attachment points to whatever
subassembly it attaches to.

Now...if i desire to use code to put all these subassemblies together I need
to get at the attachment points within a subassembly....but i can not figure
out how to do that. 

One might believe that if one creates a hierarchical arrangement of
subassemblies, the subassembly of higher abstraction (the assembly to which
a subassembly will be attached) would know exactly where the attachment
points are...but....I do not know where my subassembly attachment points are
to result in proprer mating.

How do you guys do this with code? 

thank you
Bil





--
View this message in context: http://forum.openscad.org/assemble-process-question-tp14497.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Sat Nov 14 22:38:03 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Sat, 14 Nov 2015 20:38:03 -0700 (MST)
Subject: [OpenSCAD] assemble process question
In-Reply-To: <1447553317238-14497.post@n5.nabble.com>
References: <1447553317238-14497.post@n5.nabble.com>
Message-ID: <1447558683464-14498.post@n5.nabble.com>

An OpenSCAD program doesn't have the concept of multiple objects.  
You could create multiple solids in the rendering space, with different
colors etc, but they are also just (disjointed) parts of the one object.

Another handicap is that there's no object/solid variable so you can't
create a data structure with a solid and some data (such as reference
or attachment point coordinates).

One highly imperfect solution I use is to put each object into a separate
program with the object generated in a module and its data (attachment
points, dimensions, movement range etc) into variables.  And an
"assembly.scad" which include<> each module and move, rotate each 
object into the proper place using the data from each include.  





--
View this message in context: http://forum.openscad.org/assemble-process-question-tp14497p14498.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Sat Nov 14 23:22:07 2015
From: runsun at gmail.com (runsun)
Date: Sat, 14 Nov 2015 21:22:07 -0700 (MST)
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <CAGV6i+MHQdAnLfqejOwHrQO=SAMd0YqL8s0ogLC_rvvEq2hNcA@mail.gmail.com>
References: <CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<1447441248118-14455.post@n5.nabble.com>
	<CAGV6i+N8qsaCJWsxwc+h8nfu8SiQ+6j=UWgs46EM3xLoMh7Sqw@mail.gmail.com>
	<1447453051890-14463.post@n5.nabble.com>
	<CAHMTcK9o6Rsg2qQu4UkWSC8nFH1oGBdZvPrGqPpZFXFdK8yspg@mail.gmail.com>
	<1447524653362-14478.post@n5.nabble.com>
	<CAGV6i+Nw-wK9FPKDbg4sD8e3qa-er3b2Wjsc6DcQipfru9EQtQ@mail.gmail.com>
	<1447548956170-14492.post@n5.nabble.com>
	<CAGV6i+MHQdAnLfqejOwHrQO=SAMd0YqL8s0ogLC_rvvEq2hNcA@mail.gmail.com>
Message-ID: <1447561327311-14499.post@n5.nabble.com>

I thought a help on debugging was offered, that's why I spent so much time
posting my algorithm and my code, which is created entirely for the need of
my doctest lib. Guess I misunderstood. Anyway, thx for the help.

I totally agree that this --- and most of any other useful feature for that
matter --- is better be implemented in the c level. OpenScad's language is
not designed for this purpose anyway. 




-----

$  Runsun Pan, PhD 

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );

 $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif 






--
View this message in context: http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14499.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From wv99999 at gmail.com  Sun Nov 15 02:29:10 2015
From: wv99999 at gmail.com (wolf)
Date: Sun, 15 Nov 2015 00:29:10 -0700 (MST)
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <1447561327311-14499.post@n5.nabble.com>
References: <06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<1447441248118-14455.post@n5.nabble.com>
	<CAGV6i+N8qsaCJWsxwc+h8nfu8SiQ+6j=UWgs46EM3xLoMh7Sqw@mail.gmail.com>
	<1447453051890-14463.post@n5.nabble.com>
	<CAHMTcK9o6Rsg2qQu4UkWSC8nFH1oGBdZvPrGqPpZFXFdK8yspg@mail.gmail.com>
	<1447524653362-14478.post@n5.nabble.com>
	<CAGV6i+Nw-wK9FPKDbg4sD8e3qa-er3b2Wjsc6DcQipfru9EQtQ@mail.gmail.com>
	<1447548956170-14492.post@n5.nabble.com>
	<CAGV6i+MHQdAnLfqejOwHrQO=SAMd0YqL8s0ogLC_rvvEq2hNcA@mail.gmail.com>
	<1447561327311-14499.post@n5.nabble.com>
Message-ID: <1447572550698-14500.post@n5.nabble.com>

I have done some testing of my own, to ascertain what OpenSCAD does when it
generates a .stl file. First test was to create a mesh from cube(5). My
expectation was that this mesh was made up of 6 squares, one for each side
of the cube. Not so. It is made up of 12 triangles, two triangles for each
side. Each triangle can readily be removed from the .stl file, by deleting
just the seven lines that constitute that triangle. Viewing the modified
file in MeshLab shows what has been removed.

If OpenSCAD always creates triangle based meshes, then creating a mesh
without zero area triangles is a minor problem: calculate the area of the
triangle to be written, *after* its vertex vectors have been truncated to
final precision, and if the area is zero, do not write the triangle into the
.stl file.

The second test requires some background: polyhedron() can be used to create
individual faces, which in turn has been assembled (with nophead's help)
into a 3-dimensional primitive, as long as a function can be obtained that
describes the primitive in terms of polar coordinates. surface() does
currently the same for cartesian coordinates, but the list of vertices needs
to be calculated outside OpenSCAD. Once code has been put together to allow
creating the cartesian coordinates of each vertex inside OpenSCAD, creating
3D-offset functionality should be trivial, since all that is required is to
erect the normal onto each face, move the face by the required amount along
the normal, and reconnect each face to its neighbours.

The observations and code referred to above make it clear that any solid
created by OpenSCAD may be regarded as a collection of (connected) faces.
Thus, by choosing the right projection, any face in 3 dimensions can be
represented by a line in 2D space. When I choose here a (pentagonal) prism
and view it along the z-axis, that is just for ease of argument. The
conclusions arrived at will be applicable to any 3D geometry.

First, let's demolish the argument that, for constructing a polyhedron
(without the brackets, this is a geometrical object, not an OpenSCAD
module), faces must be specified. This is not true, as we may see from
figure 1:
<http://forum.openscad.org/file/n14500/Prism_1.prism_1> 
Figure 1

Lines in figure 1 represent faces, as discussed above, and points represent
vertices. In that sense, ABCD represents any four-sided prism, such as
generated by cube(). ABECD, on the other hand, represents a 5-sided
(pentagonal) prism, for which OpenSCAD has no primitive. The simplest way to
specify ABECD is to make the shortest point-to-point connection, i.e. via
point E,  into faces and disregard face B-C (the red line). This is not a
general rule, of course, if point E moves too close to line A-D, point E
would be disregarded, as B-C becomes shorter than B-E or E-C. For many cases
this rule suffices, and where not, why not add more vertices?

Let us now look at what happens when vertex vectors are truncated. What has
been said about the representation of points and faces for figure 1 is also
applicable to figure 2 and, later, figure 3. The yellow dots in figure 2
<http://forum.openscad.org/file/n14500/Prism_2.prism_2> 
Figure 2

represent the values that a point vector can have, after truncation. Any
other points in the figure are represented by floats before truncation.
Those of you who are familiar with the cardinality of infinite sets will
recognise that by fixating floating point numbers to fixed positions in a
cartesian coordinate system, these floats have been translated into
integers, and I presume, it is also equivalent to Alan Cox'  point
dictionary
<http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-td14350.html#a14412> 
.

All points of the square will be moved by truncating their vectors, to the
nearest yellow dot. The result of this "wiggling" is shown in Figure 3. 
<http://forum.openscad.org/file/n14500/Prism_3.prism_3> 
Figure 3

The square is no longer a square. If the original cube(), represented as a
square in Figure 2, had been rotated around an axis other than [0,0,1], none
of the original sides could be quadrangles any more, as truncation has moved
the vertices off the plane they originally shared.

Wolf




--
View this message in context: http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14500.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From wv99999 at gmail.com  Sun Nov 15 02:36:53 2015
From: wv99999 at gmail.com (wolf)
Date: Sun, 15 Nov 2015 00:36:53 -0700 (MST)
Subject: [OpenSCAD] Quicksort
Message-ID: <1447573013225-14501.post@n5.nabble.com>

Executing the following code, straight from the Quicksort entry into the
manual

unsorted = [for (a = rands(0, 10, 6, 3)) ceil(a)];
echo(unsorted); // ECHO: [6, 1, 8, 9, 3, 2]
echo(quicksort(unsorted)); // ECHO: [1, 2, 3, 6, 8, 9]

results in the following message:

WARNING: Ignoring unknown function 'quicksort'. 

Any explanation?

My operating system: Kubuntu 14.4
OpenSCAD version: 2015.03-1 



--
View this message in context: http://forum.openscad.org/Quicksort-tp14501.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Sun Nov 15 02:43:59 2015
From: marius at kintel.net (Marius Kintel)
Date: Sun, 15 Nov 2015 02:43:59 -0500
Subject: [OpenSCAD] Quicksort
In-Reply-To: <1447573013225-14501.post@n5.nabble.com>
References: <1447573013225-14501.post@n5.nabble.com>
Message-ID: <AA179587-822D-4BD1-81F3-BE3E9018DAA9@kintel.net>

> On Nov 15, 2015, at 02:36 AM, wolf <wv99999 at gmail.com> wrote:
> 
> Any explanation?
> 
You forgot to include the quicksort function. quicksort is not built-in

 -Marius



From marius at kintel.net  Sun Nov 15 02:51:28 2015
From: marius at kintel.net (Marius Kintel)
Date: Sun, 15 Nov 2015 02:51:28 -0500
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
	at 7th significant digit
In-Reply-To: <1447572550698-14500.post@n5.nabble.com>
References: <06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<1447441248118-14455.post@n5.nabble.com>
	<CAGV6i+N8qsaCJWsxwc+h8nfu8SiQ+6j=UWgs46EM3xLoMh7Sqw@mail.gmail.com>
	<1447453051890-14463.post@n5.nabble.com>
	<CAHMTcK9o6Rsg2qQu4UkWSC8nFH1oGBdZvPrGqPpZFXFdK8yspg@mail.gmail.com>
	<1447524653362-14478.post@n5.nabble.com>
	<CAGV6i+Nw-wK9FPKDbg4sD8e3qa-er3b2Wjsc6DcQipfru9EQtQ@mail.gmail.com>
	<1447548956170-14492.post@n5.nabble.com>
	<CAGV6i+MHQdAnLfqejOwHrQO=SAMd0YqL8s0ogLC_rvvEq2hNcA@mail.gmail.com>
	<1447561327311-14499.post@n5.nabble.com>
	<1447572550698-14500.post@n5.nabble.com>
Message-ID: <DA37F719-58F1-4431-9F0C-50B85AF3BAC7@kintel.net>

> On Nov 15, 2015, at 02:29 AM, wolf <wv99999 at gmail.com> wrote:
> 
> [?] calculate the area of the
> triangle to be written, *after* its vertex vectors have been truncated to
> final precision, and if the area is zero, do not write the triangle into the
> .stl file.
> 
This isn?t feasible as that would leave a hole in the mesh, making it non-manifold. Try it and see how various software complains about it.

> [?] Once code has been put together to allow
> creating the cartesian coordinates of each vertex inside OpenSCAD, creating
> 3D-offset functionality should be trivial, since all that is required is to
> erect the normal onto each face, move the face by the required amount along
> the normal, and reconnect each face to its neighbours.
> 
This only works for convex objects. Concave objects would cause self-intersections which would have to be resolved. That?s the non-trivial aspects of such a function.

I?m not sure what you?re trying to explain in the rest of your email (it?s getting a bit late here), so I?ll leave that so someone else :)

 -Marius



From nop.head at gmail.com  Sun Nov 15 05:23:03 2015
From: nop.head at gmail.com (nop head)
Date: Sun, 15 Nov 2015 10:23:03 +0000
Subject: [OpenSCAD] assemble process question
In-Reply-To: <1447558683464-14498.post@n5.nabble.com>
References: <1447553317238-14497.post@n5.nabble.com>
	<1447558683464-14498.post@n5.nabble.com>
Message-ID: <CAEEmnrOOoEDxF5jzbTmj7Cv+_1n4-A3sAYxd4VLoco1KRys-yg@mail.gmail.com>

I represent sub assemblies with modules that draw a bunch of objects by
calling other modules that may be smaller sub assemblies, printed parts or
vitamins like screws. Then a top level module draws the complete assembly.
I don't have a concept of connection points. I just give each part a
sensible origin and orientation to make them easy to place. If more
information is need I export it with functions with names prefixed by the
name of the object they relate to.
On Nov 15, 2015 3:38 AM, "ctchin" <c.t.chin at szu.edu.cn> wrote:

> An OpenSCAD program doesn't have the concept of multiple objects.
> You could create multiple solids in the rendering space, with different
> colors etc, but they are also just (disjointed) parts of the one object.
>
> Another handicap is that there's no object/solid variable so you can't
> create a data structure with a solid and some data (such as reference
> or attachment point coordinates).
>
> One highly imperfect solution I use is to put each object into a separate
> program with the object generated in a module and its data (attachment
> points, dimensions, movement range etc) into variables.  And an
> "assembly.scad" which include<> each module and move, rotate each
> object into the proper place using the data from each include.
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/assemble-process-question-tp14497p14498.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151115/120ef244/attachment.html>

From R.E.Wolff at BitWizard.nl  Sun Nov 15 05:28:49 2015
From: R.E.Wolff at BitWizard.nl (rew)
Date: Sun, 15 Nov 2015 03:28:49 -0700 (MST)
Subject: [OpenSCAD] OpenScad 3D performance.
Message-ID: <1447583329754-14505.post@n5.nabble.com>

I upgraded my machine a while ago, and didn't work with openscad for a while.
But now my new machine has lousy 3D performance in OpenScad. Using the new
video card instead of the onboard video has improved the video playback
performance a lot (I was lazy putting it in, and I had output, so why
bother). 

The Video card has 

01:00.0 VGA compatible controller: NVIDIA Corporation GF119 [GeForce GT 610]
(rev a1)

and I'm running ubuntu 15.10.

I was just at a friend, and his computer was always terribly slow compared
to mine. Now it's the other way around. At work the intern (me too actually)
was expecting his old workstation to be a bit laggy for 3D openscad work,
but again: Much better performance than my workstation now

The symptoms are that even reasonably simple models drop the redraw
framerate to below 5-10FPS and a "swing around" to view the other side of
the model does not follow the mouse movement, but buffers a stream of mouse
events resulting in a several seconds of "slideshow watching" /after/
releasing the mouse!

So: What can I do to diagnose this? Or is the GF119 just a terrible graphics
chip? 

I've just googled for some benchmark results, and my GF119 should perform
1.5 times better than my friend's G84GL / Quadro FX 1700.






--
View this message in context: http://forum.openscad.org/OpenScad-3D-performance-tp14505.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Sun Nov 15 06:04:18 2015
From: nop.head at gmail.com (nop head)
Date: Sun, 15 Nov 2015 11:04:18 +0000
Subject: [OpenSCAD] Special Variables
In-Reply-To: <1447552442487-14496.post@n5.nabble.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
	<1447542364679-14488.post@n5.nabble.com>
	<1447543337951-14489.post@n5.nabble.com>
	<1447552442487-14496.post@n5.nabble.com>
Message-ID: <CAEEmnrOhP0Ckj3ijuX21tD3h0MRX9Dsh_Nn37s_8FtbkGuUNwQ@mail.gmail.com>

You need to understand the concepts of lexical scope and dynamic scope. To
get something that is global you need to define it at the top level scope.
I.e. file level, outside of any functions, modules. If you assign to it
again at in the same scope it will use the last value assigned everywhere.
If you assign to it in a deeper scope it will simply define a new constant
that hides the original.

A normal variable defined at file scope is visible everywhere later in that
file, but not in modules and functions in other files, called from that
file. They have lexical scope meaning you can see where they are visible
simply by looking at the static program structure. Each module, function
and block enclosed by braces is a new scope. Inside that scope you can
access names defined in scopes that enclose it.

The only difference with $ prefixed  names is they have dynamic scope
meaning they are visible not only in the lexical scope they are defined in
but also in any modules or functions called from that scope, even if they
are in different files. But again if you define a new one in a deeper scope
it hides the original. It doesn't reassign the original. And constants
defined in a deeper scope disappear when that scope ends. They never leak
from an inner scope to an outer one.
On Nov 15, 2015 1:54 AM, "whburling" <whburling at outlook.com> wrote:

> i copied and pasted code to reveal my experience from which I shared
> interpretations within the code.  the code is a "reply" located at your
> original request for code.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Special-Variables-tp14477p14496.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151115/6ff743ea/attachment.html>

From R.E.Wolff at BitWizard.nl  Sun Nov 15 06:37:13 2015
From: R.E.Wolff at BitWizard.nl (rew)
Date: Sun, 15 Nov 2015 04:37:13 -0700 (MST)
Subject: [OpenSCAD] make an object hollow with constant wall thickness
In-Reply-To: <1446377779240-14255.post@n5.nabble.com>
References: <1446377779240-14255.post@n5.nabble.com>
Message-ID: <1447587433209-14507.post@n5.nabble.com>

Michael, 
The "generate a hollow object" is a difficult problem in general. 

But if you want to print the hull of an object, it may be easier to just set
"infill" to zero on your slicing program. 



--
View this message in context: http://forum.openscad.org/make-an-object-hollow-with-constant-wall-thickness-tp14255p14507.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From openscad_rmk at kandarian.com  Sun Nov 15 08:36:19 2015
From: openscad_rmk at kandarian.com (rickan)
Date: Sun, 15 Nov 2015 06:36:19 -0700 (MST)
Subject: [OpenSCAD] Plans to change variable behavior ?
In-Reply-To: <CAEEmnrPro6eRVRYajQf_HotZ8Q9BRgjp-JtTmNUqsgb5Y+2rZg@mail.gmail.com>
References: <1411038169889-9678.post@n5.nabble.com>
	<010901cfd34f$77f36270$67da2750$@web.de>
	<CAEEmnrP-8MBLOdvJ1-nikTB_cgGjy17HW46fEXozugEbge7odg@mail.gmail.com>
	<013e01cfd36b$7d1fef40$775fcdc0$@web.de>
	<CAEEmnrOS4+mhGgznWejnDBs7RBfoJtX+bM1xnA9KhJ1pOW7NWg@mail.gmail.com>
	<005a01cfd3ec$f9427b20$ebc77160$@web.de>
	<63452311-EAA9-41DC-9D48-6542231A12F5@kintel.net>
	<1411134087043-9719.post@n5.nabble.com>
	<1411135718297-9720.post@n5.nabble.com>
	<CAEEmnrPro6eRVRYajQf_HotZ8Q9BRgjp-JtTmNUqsgb5Y+2rZg@mail.gmail.com>
Message-ID: <1447594579802-14508.post@n5.nabble.com>

I really feel I should add my vote against these silly immutable variables.

<rant>
It really is silly, it makes some very, very useful things that are trivial
to do with regular variables seemingly impossible in openscad, and I can't
imagine it's good for beginning programmers or people who do it
infrequently. It seems obvious what if you want OpenSCAD to be as widely
adopted as possible, you will drop this immutable variable ideology. Find
some other way to advocate the functional programming ideology.

I'm retired from doing programming for a living, and I've never been
impressed with the "problems" that functional programming is supposed to be
a solution for, nor is it apparent to me that it's been widely adopted to
solve those "problems". 

I'm sure these ideas have already been thoroughly hashed in this thread
(which I don't have the patience to read) -- this is just my vote.

P.S. I'm a Perl programmer when given a choice because the Perl ideology is
"There is more than one way to do it" and I can choose the way that's best
for me, for each of projects of widely various character, from what seems to
be a very nearly complete set of tools including some which impose
programming restrictions for those who seem to need them. I've never found
it wanting and can't recall the language interposing itself as part of the
problem the way I can other other languages.

P.P.S. I'm certainly NOT advocating for making the OpenSCAD language as
universal as Perl. I'm not very experienced with it and probably never will
be, but it seems to be more than adequate for solid modelling except for
those silly...
</rant>




--
View this message in context: http://forum.openscad.org/Plans-to-change-variable-behavior-tp9647p14508.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jdawgaz at gmail.com  Sun Nov 15 09:09:49 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Sun, 15 Nov 2015 07:09:49 -0700
Subject: [OpenSCAD] any relationship between font size and actual size for
	placement purposes?
Message-ID: <CAMyDR6J-naDAzkpKwCGckKTUoWP6=uzGjGSm0jDaQMAS7gsg=g@mail.gmail.com>

Is there any relationship between font size, and how much height, and width
(in units)?

So far, I don't see any relationship at all. And it makes parametrically
very hard to center it on an object.

I have an object that the text is translated() to be centered. But when I
change the parameters of length and/or width, I can't seem to find way to
recenter it by some modifier.

If there isn't is there a way to get back the size (in units) of the
rectangle it fits in? I could then use that to translate using recalculated
values.


Jerry

--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151115/0f59e976/attachment.html>

From Torsten.Paul at gmx.de  Sun Nov 15 09:26:35 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 15 Nov 2015 15:26:35 +0100
Subject: [OpenSCAD] any relationship between font size and actual size
 for placement purposes?
In-Reply-To: <CAMyDR6J-naDAzkpKwCGckKTUoWP6=uzGjGSm0jDaQMAS7gsg=g@mail.gmail.com>
References: <CAMyDR6J-naDAzkpKwCGckKTUoWP6=uzGjGSm0jDaQMAS7gsg=g@mail.gmail.com>
Message-ID: <5648961B.4010405@gmx.de>

On 11/15/2015 03:09 PM, Jerry Davis wrote:
> Is there any relationship between font size, and how much height,
> and width (in units)?
> 
Yes, that is defined in the actual font file and can vary quite
a lot for different fonts.
A very detailed description can be found in the documentation of
the freetype2 library that is used for text handling.
http://www.freetype.org/freetype2/docs/tutorial/step2.html

> I have an object that the text is translated() to be centered. But
> when I change the parameters of length and/or width, I can't seem
> to find way to recenter it by some modifier.
>
Where did you search? Have a look at the alignment chapter:
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Text#Alignment

> If there isn't is there a way to get back the size (in units) of
> the rectangle it fits in? I could then use that to translate using
> recalculated values.
> 
Getting the actual coordinates of the generated geometry is currently
not possible. In some cases, it might be possible to use resize()
to fit the text into a specific area.

ciao,
  Torsten.



From Torsten.Paul at gmx.de  Sun Nov 15 09:52:30 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 15 Nov 2015 15:52:30 +0100
Subject: [OpenSCAD] OpenScad 3D performance.
In-Reply-To: <1447583329754-14505.post@n5.nabble.com>
References: <1447583329754-14505.post@n5.nabble.com>
Message-ID: <56489C2E.4090204@gmx.de>

On 11/15/2015 11:28 AM, rew wrote:
> So: What can I do to diagnose this? Or is the GF119 just a
> terrible graphics chip?
> 
No, the graphics chip is probably not to blame. There is an issue
that seems to come from a combination of graphics driver, Qt5
and how OpenSCAD draws the screen.

Currently every mouse event triggers a redraw, due to some changes
in Qt that might be synchronized with the screen refresh causing
the delayed render until everything is processed (well, that's the
guess at least).

We tried to disable the buffer sync in Qt but that does not seem
to work always (or maybe in newer versions?).

You could check if there's an option in the graphics driver to
disable the screen refresh sync. Maybe that helps.

Also: The when compiling from source, the debug version tends to
cause an additional slowdown. Generating the make files with
"qmake CONFIG-=debug" can help with that. For that reason the
nightly snapshots are built with that option too.

ciao,
  Torsten.



From lboyd at frontiernet.net  Sun Nov 15 10:45:22 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Sun, 15 Nov 2015 08:45:22 -0700 (MST)
Subject: [OpenSCAD] Special Variables
In-Reply-To: <CAEEmnrOhP0Ckj3ijuX21tD3h0MRX9Dsh_Nn37s_8FtbkGuUNwQ@mail.gmail.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
	<1447542364679-14488.post@n5.nabble.com>
	<1447543337951-14489.post@n5.nabble.com>
	<1447552442487-14496.post@n5.nabble.com>
	<CAEEmnrOhP0Ckj3ijuX21tD3h0MRX9Dsh_Nn37s_8FtbkGuUNwQ@mail.gmail.com>
Message-ID: <1447602322809-14512.post@n5.nabble.com>

Perhaps this example will help

External file Global Test.scad

    module Test1(){
      cube(4);
        echo(" in Test1  x1 = ",x1);
        echo(" in Test1 $y1 = ",$y1);
    }
    
    module Test2(){
      sphere(3);
        echo(" in Test2  x2 = ",x2);
        echo(" in Test2 $y2 = ",$y2);
    }
    
    x1 = 3;
    $y1 = 5;

Local file

    use<Global Test.scad>;
    
    Test1();
    Test2();
    Test3();
    
    x1 = 10;
    $y1 = 15;
    x2 = 20;
    $y2 = 27;
    x3 = 30;
    $y3 = 33;
    
    module Test3(){
      cylinder(10);
        echo(" in Test3  x3 = ",x3);
        echo(" in Test3 $y3 = ",$y3);
    }

Result

ECHO: " in Test1  x1 = ", 3      // Values from Global Test.scad, no
override
ECHO: " in Test1 $y1 = ", 5           

ECHO: " in Test2  x2 = ", undef
ECHO: " in Test2 $y2 = ", 27     // local value used in external module

ECHO: " in Test3  x3 = ", 30     // local values used in local moduel
ECHO: " in Test3 $y3 = ", 33




--
View this message in context: http://forum.openscad.org/Special-Variables-tp14477p14512.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Sun Nov 15 11:02:02 2015
From: doug at moens.org (doug moen)
Date: Sun, 15 Nov 2015 11:02:02 -0500
Subject: [OpenSCAD] Plans to change variable behavior ?
In-Reply-To: <1447594579802-14508.post@n5.nabble.com>
References: <1411038169889-9678.post@n5.nabble.com>
	<010901cfd34f$77f36270$67da2750$@web.de>
	<CAEEmnrP-8MBLOdvJ1-nikTB_cgGjy17HW46fEXozugEbge7odg@mail.gmail.com>
	<013e01cfd36b$7d1fef40$775fcdc0$@web.de>
	<CAEEmnrOS4+mhGgznWejnDBs7RBfoJtX+bM1xnA9KhJ1pOW7NWg@mail.gmail.com>
	<005a01cfd3ec$f9427b20$ebc77160$@web.de>
	<63452311-EAA9-41DC-9D48-6542231A12F5@kintel.net>
	<1411134087043-9719.post@n5.nabble.com>
	<1411135718297-9720.post@n5.nabble.com>
	<CAEEmnrPro6eRVRYajQf_HotZ8Q9BRgjp-JtTmNUqsgb5Y+2rZg@mail.gmail.com>
	<1447594579802-14508.post@n5.nabble.com>
Message-ID: <CAGV6i+NEdTc5igPrOzo3i90OaJ2Py75z=yA6aB-REV5Ryo-U_g@mail.gmail.com>

I agree that OpenSCAD is frustrating to use for large projects, for people
who are used to using a general purpose programming language.

It looks like this problem is going to be solved over time by making
OpenSCAD more like a functional programming language. In the most recent
edition, we added list comprehensions and 'let' expressions, which came
directly from functional programming. There is general agreement that these
changes made OpenSCAD much more powerful. But we still have a ways to go.

I've written up a proposal/roadmap called "openscad2", which proposes a way
to evolve OpenSCAD into a more powerful geometric description language, by
adding more of the features of functional programming languages, and
without breaking backwards compatibility.
https://github.com/doug-moen/openscad2

You say that you are most comfortable programming in Perl. That means you
have learned enough of the Perl idioms so that you can be productive in
that language. Functional programming languages use a different set of
idioms, and you have to learn those idioms in order to be productive in
those languages. If you put in the effort to learn this new style of
programming, you'll find it is more powerful than the old way of doing
things. And yes, I do see a lot of momentum behind the functional
programming movement, I think it is transforming the industry. New
programming languages are incorporating more and more of the idioms of
functional programming. I see this in Apple's new language Swift, Mozilla's
new language Rust, even Perl 6.


On 15 November 2015 at 08:36, rickan <openscad_rmk at kandarian.com> wrote:

> I really feel I should add my vote against these silly immutable variables.
>
> <rant>
> It really is silly, it makes some very, very useful things that are trivial
> to do with regular variables seemingly impossible in openscad, and I can't
> imagine it's good for beginning programmers or people who do it
> infrequently. It seems obvious what if you want OpenSCAD to be as widely
> adopted as possible, you will drop this immutable variable ideology. Find
> some other way to advocate the functional programming ideology.
>
> I'm retired from doing programming for a living, and I've never been
> impressed with the "problems" that functional programming is supposed to be
> a solution for, nor is it apparent to me that it's been widely adopted to
> solve those "problems".
>
> I'm sure these ideas have already been thoroughly hashed in this thread
> (which I don't have the patience to read) -- this is just my vote.
>
> P.S. I'm a Perl programmer when given a choice because the Perl ideology is
> "There is more than one way to do it" and I can choose the way that's best
> for me, for each of projects of widely various character, from what seems
> to
> be a very nearly complete set of tools including some which impose
> programming restrictions for those who seem to need them. I've never found
> it wanting and can't recall the language interposing itself as part of the
> problem the way I can other other languages.
>
> P.P.S. I'm certainly NOT advocating for making the OpenSCAD language as
> universal as Perl. I'm not very experienced with it and probably never will
> be, but it seems to be more than adequate for solid modelling except for
> those silly...
> </rant>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Plans-to-change-variable-behavior-tp9647p14508.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151115/78136ad6/attachment.html>

From lboyd at frontiernet.net  Sun Nov 15 11:17:00 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Sun, 15 Nov 2015 09:17:00 -0700 (MST)
Subject: [OpenSCAD] Plans to change variable behavior ?
In-Reply-To: <1447594579802-14508.post@n5.nabble.com>
References: <010901cfd34f$77f36270$67da2750$@web.de>
	<CAEEmnrP-8MBLOdvJ1-nikTB_cgGjy17HW46fEXozugEbge7odg@mail.gmail.com>
	<013e01cfd36b$7d1fef40$775fcdc0$@web.de>
	<CAEEmnrOS4+mhGgznWejnDBs7RBfoJtX+bM1xnA9KhJ1pOW7NWg@mail.gmail.com>
	<005a01cfd3ec$f9427b20$ebc77160$@web.de>
	<63452311-EAA9-41DC-9D48-6542231A12F5@kintel.net>
	<1411134087043-9719.post@n5.nabble.com>
	<1411135718297-9720.post@n5.nabble.com>
	<CAEEmnrPro6eRVRYajQf_HotZ8Q9BRgjp-JtTmNUqsgb5Y+2rZg@mail.gmail.com>
	<1447594579802-14508.post@n5.nabble.com>
Message-ID: <1447604220486-14514.post@n5.nabble.com>

This is all about philosophy. The argument "All programming languages I have
used do it differently" is irrelevant. Of the many languages I have used,
all have some features you learn to live with.

OpenSCAD has a very valid reason for doing what it does. 

My vote is to leave it alone.



--
View this message in context: http://forum.openscad.org/Plans-to-change-variable-behavior-tp9647p14514.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Sun Nov 15 11:34:09 2015
From: marius at kintel.net (Marius Kintel)
Date: Sun, 15 Nov 2015 11:34:09 -0500
Subject: [OpenSCAD] Plans to change variable behavior ?
In-Reply-To: <1447594579802-14508.post@n5.nabble.com>
References: <1411038169889-9678.post@n5.nabble.com>
	<010901cfd34f$77f36270$67da2750$@web.de>
	<CAEEmnrP-8MBLOdvJ1-nikTB_cgGjy17HW46fEXozugEbge7odg@mail.gmail.com>
	<013e01cfd36b$7d1fef40$775fcdc0$@web.de>
	<CAEEmnrOS4+mhGgznWejnDBs7RBfoJtX+bM1xnA9KhJ1pOW7NWg@mail.gmail.com>
	<005a01cfd3ec$f9427b20$ebc77160$@web.de>
	<63452311-EAA9-41DC-9D48-6542231A12F5@kintel.net>
	<1411134087043-9719.post@n5.nabble.com>
	<1411135718297-9720.post@n5.nabble.com>
	<CAEEmnrPro6eRVRYajQf_HotZ8Q9BRgjp-JtTmNUqsgb5Y+2rZg@mail.gmail.com>
	<1447594579802-14508.post@n5.nabble.com>
Message-ID: <F2F62A9E-DAB7-4DA9-B44D-207206826CEA@kintel.net>


> On Nov 15, 2015, at 08:36 AM, rickan <openscad_rmk at kandarian.com> wrote:
> 
> I really feel I should add my vote against these silly immutable variables.
> 
General purpose programming can be done in a language-specific framework, similar to how you?d use such frameworks to generate HTML, rather than modifying the HTML spec to support certain dynamic features.

I?m not advocating any particular languages. I?ll just mention the ruby-based CrystalSCAD as an example, because I had the pleasure to chat with the author a few months back: https://github.com/Joaz/CrystalScad

Now, I?m open to support a plugin infrastructure to allow writing such code in the OpenSCAD environment, if that?s something people really want to do. We could even support people writing modules in other languages, as long as modules follow the same rules of not mutating its host environment. I feel that most people familiar with certain programming languages would rather use the extended feature set of that language environment, so I?m not sure how effective this would be.

 -Marius

> <rant>
> It really is silly, it makes some very, very useful things that are trivial
> to do with regular variables seemingly impossible in openscad, and I can't
> imagine it's good for beginning programmers or people who do it
> infrequently. It seems obvious what if you want OpenSCAD to be as widely
> adopted as possible, you will drop this immutable variable ideology. Find
> some other way to advocate the functional programming ideology.
> 
> I'm retired from doing programming for a living, and I've never been
> impressed with the "problems" that functional programming is supposed to be
> a solution for, nor is it apparent to me that it's been widely adopted to
> solve those "problems". 
> 
> I'm sure these ideas have already been thoroughly hashed in this thread
> (which I don't have the patience to read) -- this is just my vote.
> 
> P.S. I'm a Perl programmer when given a choice because the Perl ideology is
> "There is more than one way to do it" and I can choose the way that's best
> for me, for each of projects of widely various character, from what seems to
> be a very nearly complete set of tools including some which impose
> programming restrictions for those who seem to need them. I've never found
> it wanting and can't recall the language interposing itself as part of the
> problem the way I can other other languages.
> 
> P.P.S. I'm certainly NOT advocating for making the OpenSCAD language as
> universal as Perl. I'm not very experienced with it and probably never will
> be, but it seems to be more than adequate for solid modelling except for
> those silly...
> </rant>
> 
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/Plans-to-change-variable-behavior-tp9647p14508.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From R.E.Wolff at BitWizard.nl  Sun Nov 15 13:15:29 2015
From: R.E.Wolff at BitWizard.nl (rew)
Date: Sun, 15 Nov 2015 11:15:29 -0700 (MST)
Subject: [OpenSCAD] OpenScad 3D performance.
In-Reply-To: <56489C2E.4090204@gmx.de>
References: <1447583329754-14505.post@n5.nabble.com> <56489C2E.4090204@gmx.de>
Message-ID: <1447611329624-14516.post@n5.nabble.com>

Update: Compiled from source, With the "DEBUG" disabled as instructed. 

Same slowness/laggyness. Openscad seems to be requiring about 10% of my CPU
during the "laggy updates".... it's not starved for CPU. (the X server does
not show up in "top"). 





--
View this message in context: http://forum.openscad.org/OpenScad-3D-performance-tp14505p14516.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From lboyd at frontiernet.net  Sun Nov 15 13:26:41 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Sun, 15 Nov 2015 11:26:41 -0700 (MST)
Subject: [OpenSCAD] Special Variables
In-Reply-To: <1447602322809-14512.post@n5.nabble.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
	<1447542364679-14488.post@n5.nabble.com>
	<1447543337951-14489.post@n5.nabble.com>
	<1447552442487-14496.post@n5.nabble.com>
	<CAEEmnrOhP0Ckj3ijuX21tD3h0MRX9Dsh_Nn37s_8FtbkGuUNwQ@mail.gmail.com>
	<1447602322809-14512.post@n5.nabble.com>
Message-ID: <1447612001914-14517.post@n5.nabble.com>

if you replace use<Global Test.scad>; with include<Global Test.scad>; the
results are slightly different.

ECHO: " in Test1  x1 = ", 10
ECHO: " in Test1 $y1 = ", 15
ECHO: " in Test2  x2 = ", 20
ECHO: " in Test2 $y2 = ", 27
ECHO: " in Test3  x3 = ", 30
ECHO: " in Test3 $y3 = ", 33

Everyone uses the local values, since the included file contents are now
treated as part of the local file.



--
View this message in context: http://forum.openscad.org/Special-Variables-tp14477p14517.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Sun Nov 15 14:24:24 2015
From: doug at moens.org (doug moen)
Date: Sun, 15 Nov 2015 14:24:24 -0500
Subject: [OpenSCAD] Special Variables
In-Reply-To: <1447612001914-14517.post@n5.nabble.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
	<1447542364679-14488.post@n5.nabble.com>
	<1447543337951-14489.post@n5.nabble.com>
	<1447552442487-14496.post@n5.nabble.com>
	<CAEEmnrOhP0Ckj3ijuX21tD3h0MRX9Dsh_Nn37s_8FtbkGuUNwQ@mail.gmail.com>
	<1447602322809-14512.post@n5.nabble.com>
	<1447612001914-14517.post@n5.nabble.com>
Message-ID: <CAGV6i+Ofm-cf_P2OtW09aTspAeuzNzv8CawaBdFiPBMt8Ry4sg@mail.gmail.com>

The real problem with 'use' is that it doesn't import variable definitions,
only function and module definitions.

On 15 November 2015 at 13:26, L Boyd <lboyd at frontiernet.net> wrote:

> if you replace use<Global Test.scad>; with include<Global Test.scad>; the
> results are slightly different.
>
> ECHO: " in Test1  x1 = ", 10
> ECHO: " in Test1 $y1 = ", 15
> ECHO: " in Test2  x2 = ", 20
> ECHO: " in Test2 $y2 = ", 27
> ECHO: " in Test3  x3 = ", 30
> ECHO: " in Test3 $y3 = ", 33
>
> Everyone uses the local values, since the included file contents are now
> treated as part of the local file.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Special-Variables-tp14477p14517.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151115/3264e5fa/attachment.html>

From R.E.Wolff at BitWizard.nl  Sun Nov 15 15:15:21 2015
From: R.E.Wolff at BitWizard.nl (rew)
Date: Sun, 15 Nov 2015 13:15:21 -0700 (MST)
Subject: [OpenSCAD] OpenScad 3D performance.
In-Reply-To: <1447611329624-14516.post@n5.nabble.com>
References: <1447583329754-14505.post@n5.nabble.com> <56489C2E.4090204@gmx.de>
	<1447611329624-14516.post@n5.nabble.com>
Message-ID: <1447618521531-14519.post@n5.nabble.com>

Update: 
There is "sync-to-vblank" enabled in my nouveau driver. It is said that this
can be disabled by setting 
  Option "GLXVBlank" "Off" 
in xorg.conf, which on modern systems is "any file in 
/usr/share/X11/xorg.conf.d", but I haven't been able to make a difference.
On startup the X server still reports stuff about the syncing being enabled. 
I have installed the old Ubuntu 14.04 Trusty Tahr. Trusty indeed: the
openscad from there is older, but has reasonable performance. Not great, but
reasonable. 

For me I have a workaround at the moment. 

Update2: After installing lots of devel packages (even after apt-get
build-dep openscad), current openscad compiles on ubuntu 14.04, and does not
have the laggyness. 



--
View this message in context: http://forum.openscad.org/OpenScad-3D-performance-tp14505p14519.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sun Nov 15 16:24:02 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 15 Nov 2015 22:24:02 +0100
Subject: [OpenSCAD] OpenScad 3D performance.
In-Reply-To: <1447618521531-14519.post@n5.nabble.com>
References: <1447583329754-14505.post@n5.nabble.com> <56489C2E.4090204@gmx.de>
	<1447611329624-14516.post@n5.nabble.com>
	<1447618521531-14519.post@n5.nabble.com>
Message-ID: <5648F7F2.2070001@gmx.de>

On 11/15/2015 09:15 PM, rew wrote:
> Update2: After installing lots of devel packages (even after apt-get
> build-dep openscad), current openscad compiles on ubuntu 14.04, and
> does not have the laggyness.
>
Is that compiled with Qt4?
(That info is shown in Help->Library Info)

ciao,
  Torsten.



From nop.head at gmail.com  Sun Nov 15 17:38:10 2015
From: nop.head at gmail.com (nop head)
Date: Sun, 15 Nov 2015 22:38:10 +0000
Subject: [OpenSCAD] Special Variables
In-Reply-To: <CAGV6i+Ofm-cf_P2OtW09aTspAeuzNzv8CawaBdFiPBMt8Ry4sg@mail.gmail.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
	<1447542364679-14488.post@n5.nabble.com>
	<1447543337951-14489.post@n5.nabble.com>
	<1447552442487-14496.post@n5.nabble.com>
	<CAEEmnrOhP0Ckj3ijuX21tD3h0MRX9Dsh_Nn37s_8FtbkGuUNwQ@mail.gmail.com>
	<1447602322809-14512.post@n5.nabble.com>
	<1447612001914-14517.post@n5.nabble.com>
	<CAGV6i+Ofm-cf_P2OtW09aTspAeuzNzv8CawaBdFiPBMt8Ry4sg@mail.gmail.com>
Message-ID: <CAEEmnrNLdruXUTUCA1w8wK3s1zX0TZzjc=XDRg+5teZFZ5uWDA@mail.gmail.com>

That is a pro, not a con. Better encapsulation.
On Nov 15, 2015 7:25 PM, "doug moen" <doug at moens.org> wrote:

> The real problem with 'use' is that it doesn't import variable
> definitions, only function and module definitions.
>
> On 15 November 2015 at 13:26, L Boyd <lboyd at frontiernet.net> wrote:
>
>> if you replace use<Global Test.scad>; with include<Global Test.scad>; the
>> results are slightly different.
>>
>> ECHO: " in Test1  x1 = ", 10
>> ECHO: " in Test1 $y1 = ", 15
>> ECHO: " in Test2  x2 = ", 20
>> ECHO: " in Test2 $y2 = ", 27
>> ECHO: " in Test3  x3 = ", 30
>> ECHO: " in Test3 $y3 = ", 33
>>
>> Everyone uses the local values, since the included file contents are now
>> treated as part of the local file.
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/Special-Variables-tp14477p14517.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151115/947247c7/attachment.html>

From andrew at plumb.org  Sun Nov 15 18:18:36 2015
From: andrew at plumb.org (Andrew Plumb)
Date: Sun, 15 Nov 2015 18:18:36 -0500
Subject: [OpenSCAD] Special Variables
In-Reply-To: <CAEEmnrNLdruXUTUCA1w8wK3s1zX0TZzjc=XDRg+5teZFZ5uWDA@mail.gmail.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
	<1447542364679-14488.post@n5.nabble.com>
	<1447543337951-14489.post@n5.nabble.com>
	<1447552442487-14496.post@n5.nabble.com>
	<CAEEmnrOhP0Ckj3ijuX21tD3h0MRX9Dsh_Nn37s_8FtbkGuUNwQ@mail.gmail.com>
	<1447602322809-14512.post@n5.nabble.com>
	<1447612001914-14517.post@n5.nabble.com>
	<CAGV6i+Ofm-cf_P2OtW09aTspAeuzNzv8CawaBdFiPBMt8Ry4sg@mail.gmail.com>
	<CAEEmnrNLdruXUTUCA1w8wK3s1zX0TZzjc=XDRg+5teZFZ5uWDA@mail.gmail.com>
Message-ID: <AAFCCEE4-411D-41B2-8B62-9237AD662AE0@plumb.org>

It's definitely a feature. I'm in the habit of coding my utility and library scad files to "self test" when rendered directly or via include, and "use" them across project and variant boundaries. If they depend on top-level variable values then they need rework to be more portable.

Anything that needs to be treated like a global reference or design value shareable across multiple projects, I code as a 0-argument function.

function pi() =3.141592;

It also allowed you do things like incorporate tolerances, design-for-manufacturing rules (min spacing, wall thickness, etc) as arguments to the function-definitions.

Andrew

Sent from myBrain 

> On Nov 15, 2015, at 17:38, nop head <nop.head at gmail.com> wrote:
> 
> That is a pro, not a con. Better encapsulation.
> 
>> On Nov 15, 2015 7:25 PM, "doug moen" <doug at moens.org> wrote:
>> The real problem with 'use' is that it doesn't import variable definitions, only function and module definitions.
>> 
>>> On 15 November 2015 at 13:26, L Boyd <lboyd at frontiernet.net> wrote:
>>> if you replace use<Global Test.scad>; with include<Global Test.scad>; the
>>> results are slightly different.
>>> 
>>> ECHO: " in Test1  x1 = ", 10
>>> ECHO: " in Test1 $y1 = ", 15
>>> ECHO: " in Test2  x2 = ", 20
>>> ECHO: " in Test2 $y2 = ", 27
>>> ECHO: " in Test3  x3 = ", 30
>>> ECHO: " in Test3 $y3 = ", 33
>>> 
>>> Everyone uses the local values, since the included file contents are now
>>> treated as part of the local file.
>>> 
>>> 
>>> 
>>> --
>>> View this message in context: http://forum.openscad.org/Special-Variables-tp14477p14517.html
>>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>> 
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>> 
>> 
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151115/d5214dd8/attachment-0001.html>

From doug at moens.org  Sun Nov 15 18:51:41 2015
From: doug at moens.org (doug moen)
Date: Sun, 15 Nov 2015 18:51:41 -0500
Subject: [OpenSCAD] Special Variables
In-Reply-To: <CAEEmnrNLdruXUTUCA1w8wK3s1zX0TZzjc=XDRg+5teZFZ5uWDA@mail.gmail.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
	<1447542364679-14488.post@n5.nabble.com>
	<1447543337951-14489.post@n5.nabble.com>
	<1447552442487-14496.post@n5.nabble.com>
	<CAEEmnrOhP0Ckj3ijuX21tD3h0MRX9Dsh_Nn37s_8FtbkGuUNwQ@mail.gmail.com>
	<1447602322809-14512.post@n5.nabble.com>
	<1447612001914-14517.post@n5.nabble.com>
	<CAGV6i+Ofm-cf_P2OtW09aTspAeuzNzv8CawaBdFiPBMt8Ry4sg@mail.gmail.com>
	<CAEEmnrNLdruXUTUCA1w8wK3s1zX0TZzjc=XDRg+5teZFZ5uWDA@mail.gmail.com>
Message-ID: <CAGV6i+N6Vd5345G971jdrn7h4rFpoWahgzMehTfh2+AaR703Vg@mail.gmail.com>

I have difficulty understanding how the current design of 'use' is a "pro",
and I'm skeptical about the claim that it supports "better encapsulation".

If we really want to support better encapsulation in libraries, then we
should provide a way for libraries to control which functions, modules and
variables are exported, and which are private. I'd be happy with something
as simple as a naming convention: names beginning with _ or $ are private.

My current hatred of 'use' comes from my struggles to figure out how to use
the MCAD library. This is the standard library that ships with OpenSCAD.
>From the README for MCAD, which is part of the OpenSCAD distro:

    You can import these files in your scripts with `use
<MCAD/filename.scad>`,
    where 'filename' is one of the files listed below like 'motors' or
'servos'.

This implies that the purpose of 'use' is for importing a library file, but
it's all a big lie.

In order to successfully use an MCAD library file, you must first read the
file, reverse engineer it, and determine whether the author intended it to
be referenced via 'use' or 'include'. Some library files work only with
'use', some work only with 'include'.


   - Some MCAD scripts export mathematical constants as part of their API.
   You must use include. Examples are math.scad and materials.scad.
   - Some MCAD scripts define mathematical constants that are used locally
   within their functions and modules. They won't work with use, you must
   use include. Examples are lego_compatibiity.scad, involute_gears.scad.
   - Some MCAD scripts have top level geometry as example code. They are
   designed to work with use. For example, trochoids.scad contains demo
   code with top level geometry and parameter definitions, including a
   definition of $fn. These parameter definitions are intended to be
   invisible when the script is used.

<https://github.com/doug-moen/openscad2/blob/master/rfc/Library_Scripts.md#referencing-a-model-script>


On 15 November 2015 at 17:38, nop head <nop.head at gmail.com> wrote:

> That is a pro, not a con. Better encapsulation.
> On Nov 15, 2015 7:25 PM, "doug moen" <doug at moens.org> wrote:
>
>> The real problem with 'use' is that it doesn't import variable
>> definitions, only function and module definitions.
>>
>> On 15 November 2015 at 13:26, L Boyd <lboyd at frontiernet.net> wrote:
>>
>>> if you replace use<Global Test.scad>; with include<Global Test.scad>; the
>>> results are slightly different.
>>>
>>> ECHO: " in Test1  x1 = ", 10
>>> ECHO: " in Test1 $y1 = ", 15
>>> ECHO: " in Test2  x2 = ", 20
>>> ECHO: " in Test2 $y2 = ", 27
>>> ECHO: " in Test3  x3 = ", 30
>>> ECHO: " in Test3 $y3 = ", 33
>>>
>>> Everyone uses the local values, since the included file contents are now
>>> treated as part of the local file.
>>>
>>>
>>>
>>> --
>>> View this message in context:
>>> http://forum.openscad.org/Special-Variables-tp14477p14517.html
>>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151115/c6dd738a/attachment.html>

From jdawgaz at gmail.com  Sun Nov 15 21:09:02 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Sun, 15 Nov 2015 19:09:02 -0700
Subject: [OpenSCAD] adding vectors function?
Message-ID: <CAMyDR6LGvHV9twsZSF=Q5vwS48YTC2-FjS7pz4CT2E1FqRJxWg@mail.gmail.com>

I am trying to tackle user-defined functions for the first time:
What I want is an add function that does this:

assumption: both vectors are the same length.

add(first_vector, second_vector):

that returns a vector element by element addition, such that:
v1 = [10,2,0]
v2 = [2,2,3]

returns [12,4,3]

does anyone know how I should go about doing this?

jerry
--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151115/40e84f2d/attachment.html>

From jdawgaz at gmail.com  Sun Nov 15 21:21:11 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Sun, 15 Nov 2015 19:21:11 -0700
Subject: [OpenSCAD] adding vectors function?
In-Reply-To: <CAMyDR6LGvHV9twsZSF=Q5vwS48YTC2-FjS7pz4CT2E1FqRJxWg@mail.gmail.com>
References: <CAMyDR6LGvHV9twsZSF=Q5vwS48YTC2-FjS7pz4CT2E1FqRJxWg@mail.gmail.com>
Message-ID: <CAMyDR6JarRCsLeudQO2H8zJ=3YzEYGFttfN2M7Cq15ZZ04sJBA@mail.gmail.com>

ok, as usual, when I post, I come up with the answer:

using list comprehensions, I think this is the ticket:

function addvec(v, av) = (len(v) == len(av)) ? [ for (i = [ 0 : len(v)-1 ])
v[i] + av[i] ] : [0,0,0];




--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson

On Sun, Nov 15, 2015 at 7:09 PM, Jerry Davis <jdawgaz at gmail.com> wrote:

> I am trying to tackle user-defined functions for the first time:
> What I want is an add function that does this:
>
> assumption: both vectors are the same length.
>
> add(first_vector, second_vector):
>
> that returns a vector element by element addition, such that:
> v1 = [10,2,0]
> v2 = [2,2,3]
>
> returns [12,4,3]
>
> does anyone know how I should go about doing this?
>
> jerry
> --
> Extra Ham Operator: K7AZJ
> Registered Linux User: 275424
> Raspberry Pi and Arduino developer
>
>
> *The most exciting phrase to hear in science - the one that heralds new
> discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov
>
> *I*
> *f you give someone a program, you will frustrate them for a day; if you
> teach them how to program, you will frustrate them for a lifetime. *-
> Anonymous
>
>
> *If writing good code requires very little comments, then writing really
> excellent code requires no comments at all!*- Ken Thompson
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151115/7be3a22c/attachment.html>

From marius at kintel.net  Sun Nov 15 22:09:38 2015
From: marius at kintel.net (Marius Kintel)
Date: Sun, 15 Nov 2015 22:09:38 -0500
Subject: [OpenSCAD] adding vectors function?
In-Reply-To: <CAMyDR6LGvHV9twsZSF=Q5vwS48YTC2-FjS7pz4CT2E1FqRJxWg@mail.gmail.com>
References: <CAMyDR6LGvHV9twsZSF=Q5vwS48YTC2-FjS7pz4CT2E1FqRJxWg@mail.gmail.com>
Message-ID: <640D0552-9673-45C5-907F-6BC77A2D4A1A@kintel.net>

> that returns a vector element by element addition, such that:
> v1 = [10,2,0]
> v2 = [2,2,3]
> 
> returns [12,4,3]
> 
> does anyone know how I should go about doing this?
> 
v1+v2 should work.

 -Marius



From jdawgaz at gmail.com  Sun Nov 15 22:26:13 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Sun, 15 Nov 2015 20:26:13 -0700
Subject: [OpenSCAD] adding vectors function?
In-Reply-To: <640D0552-9673-45C5-907F-6BC77A2D4A1A@kintel.net>
References: <CAMyDR6LGvHV9twsZSF=Q5vwS48YTC2-FjS7pz4CT2E1FqRJxWg@mail.gmail.com>
	<640D0552-9673-45C5-907F-6BC77A2D4A1A@kintel.net>
Message-ID: <CAMyDR6+cXVuA_wpk9+=fHpEv5ymLEoVOY5+Q-DhHCf_1kocGug@mail.gmail.com>

cool. thanks. at least it looks like I have a handle on simple functions,
though.


--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson

On Sun, Nov 15, 2015 at 8:09 PM, Marius Kintel <marius at kintel.net> wrote:

> > that returns a vector element by element addition, such that:
> > v1 = [10,2,0]
> > v2 = [2,2,3]
> >
> > returns [12,4,3]
> >
> > does anyone know how I should go about doing this?
> >
> v1+v2 should work.
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151115/07e3e920/attachment.html>

From c.t.chin at szu.edu.cn  Sun Nov 15 23:35:00 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Sun, 15 Nov 2015 21:35:00 -0700 (MST)
Subject: [OpenSCAD] Plans to change variable behavior ?
In-Reply-To: <F2F62A9E-DAB7-4DA9-B44D-207206826CEA@kintel.net>
References: <CAEEmnrP-8MBLOdvJ1-nikTB_cgGjy17HW46fEXozugEbge7odg@mail.gmail.com>
	<013e01cfd36b$7d1fef40$775fcdc0$@web.de>
	<CAEEmnrOS4+mhGgznWejnDBs7RBfoJtX+bM1xnA9KhJ1pOW7NWg@mail.gmail.com>
	<005a01cfd3ec$f9427b20$ebc77160$@web.de>
	<63452311-EAA9-41DC-9D48-6542231A12F5@kintel.net>
	<1411134087043-9719.post@n5.nabble.com>
	<1411135718297-9720.post@n5.nabble.com>
	<CAEEmnrPro6eRVRYajQf_HotZ8Q9BRgjp-JtTmNUqsgb5Y+2rZg@mail.gmail.com>
	<1447594579802-14508.post@n5.nabble.com>
	<F2F62A9E-DAB7-4DA9-B44D-207206826CEA@kintel.net>
Message-ID: <1447648500600-14528.post@n5.nabble.com>

Here is my attempt at explaining functional programming to myself. 

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/General_%28by_c.t.chin%29#Basic_Concepts

I'm with kintel here.  While I find declarative programming to very
restrictive and 
inconvenient, I can sense that catastrophe awaits if the development team
agrees 
to change to or allow even limited procedural computation.  

My solution to enable iterative computation or logic in OpenSCAD is to use
Matlab
(you could do VC, perl, Python whatever) for the computation and "export"
the 
answer(s) to OpenSCAD by generating OpenSCAD code.  

Matlab may not be a well-known language, but its code is easy enough to
understand,
following generate an OpenSCAD polyhedron module from Matlab:





--
View this message in context: http://forum.openscad.org/Plans-to-change-variable-behavior-tp9647p14528.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Mon Nov 16 00:43:37 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Sun, 15 Nov 2015 22:43:37 -0700 (MST)
Subject: [OpenSCAD] adding vectors function?
In-Reply-To: <CAMyDR6JarRCsLeudQO2H8zJ=3YzEYGFttfN2M7Cq15ZZ04sJBA@mail.gmail.com>
References: <CAMyDR6LGvHV9twsZSF=Q5vwS48YTC2-FjS7pz4CT2E1FqRJxWg@mail.gmail.com>
	<CAMyDR6JarRCsLeudQO2H8zJ=3YzEYGFttfN2M7Cq15ZZ04sJBA@mail.gmail.com>
Message-ID: <1447652617177-14529.post@n5.nabble.com>

Vector sum and difference work directly, your solution is needed for
element-wise 
multiplication and division, except for a minor issue of unequal lengths.
My version is this: 


undef should be returned for invalid inputs, this is the same behavior as 
OpenSCAD for .





--
View this message in context: http://forum.openscad.org/adding-vectors-function-tp14524p14529.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Mon Nov 16 00:45:37 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Sun, 15 Nov 2015 22:45:37 -0700 (MST)
Subject: [OpenSCAD] Quicksort
In-Reply-To: <AA179587-822D-4BD1-81F3-BE3E9018DAA9@kintel.net>
References: <1447573013225-14501.post@n5.nabble.com>
	<AA179587-822D-4BD1-81F3-BE3E9018DAA9@kintel.net>
Message-ID: <1447652737444-14530.post@n5.nabble.com>





--
View this message in context: http://forum.openscad.org/Quicksort-tp14501p14530.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Mon Nov 16 01:12:43 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Sun, 15 Nov 2015 23:12:43 -0700 (MST)
Subject: [OpenSCAD] Quicksort
In-Reply-To: <AA179587-822D-4BD1-81F3-BE3E9018DAA9@kintel.net>
References: <1447573013225-14501.post@n5.nabble.com>
	<AA179587-822D-4BD1-81F3-BE3E9018DAA9@kintel.net>
Message-ID: <1447654363340-14532.post@n5.nabble.com>

kintel wrote
> You forgot to include the quicksort function. quicksort is not built-in

Which is why I removed quicksort() and select() from my version of 
the manual.  

quicksort(), select(), strselect(), multelems(), divelems(), range2vector()
should be put into a stdlib.scad and bundled with MACD

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Libraries#MCAD

And some (if not all) of MCAD should be made "officially supported".  That
way,
quicksort() etc can be put back into the manual in a new chapter called 
"Standard Libraries".  Or better yet, mix the library function and modules 
with the built-in ones in the library and simply label clearly which library 
need to be use<>'ed.  

This is similar to most C books treat fprintf() as part of the language but
it's really a library call.  

And btw, MCAD needs a maintenance / purging.  Some of the code in there 
are seriously out of date.  




--
View this message in context: http://forum.openscad.org/Quicksort-tp14501p14532.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Mon Nov 16 02:22:31 2015
From: marius at kintel.net (Marius Kintel)
Date: Mon, 16 Nov 2015 02:22:31 -0500
Subject: [OpenSCAD] Quicksort
In-Reply-To: <1447654363340-14532.post@n5.nabble.com>
References: <1447573013225-14501.post@n5.nabble.com>
	<AA179587-822D-4BD1-81F3-BE3E9018DAA9@kintel.net>
	<1447654363340-14532.post@n5.nabble.com>
Message-ID: <3A40996A-25A0-4680-B9A7-7CB71F122821@kintel.net>


> And btw, MCAD needs a maintenance / purging.  Some of the code in there 
> are seriously out of date.  

hyperair has been doing some work on updating MCAD, see https://github.com/openscad/MCAD/tree/dev
Creating a cleaner standard library would be nice. It?s significant amounts of work though, and if we want to maintain backwards compatibility it needs some careful design.

 -Marius



From Torsten.Paul at gmx.de  Mon Nov 16 04:55:17 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 16 Nov 2015 10:55:17 +0100
Subject: [OpenSCAD] Quicksort
In-Reply-To: <1447654363340-14532.post@n5.nabble.com>
References: <1447573013225-14501.post@n5.nabble.com>
	<AA179587-822D-4BD1-81F3-BE3E9018DAA9@kintel.net>,
	<1447654363340-14532.post@n5.nabble.com>
Message-ID: <trinity-83d75b25-e0de-4491-a16a-1a620e09ec98-1447667717365@3capp-gmx-bs71>

Von:?ctchin <c.t.chin at szu.edu.cn>
> > You forgot to include the quicksort function. quicksort is not built-in
> >
> Which is why I removed quicksort() and select() from my version of
> the manual.
>
Why's that? The code implementing the quicksort() _is_ the actual
example to show how to use list comprehensions.

> And some (if not all) of MCAD should be made "officially supported".
> That way, quicksort() etc can be put back into the manual in a new
> chapter called "Standard Libraries". Or better yet, mix the library
> function and modules with the built-in ones in the library and simply
> label clearly which library need to be use<>'ed.
>
That would be nice. MCAD is basically just a random collection of
very useful scripts. It was unmaintained for quite some time. Lately
hyperair started the huge task to sort all the stuff and produce a
useful general API. Even with just the existing code, that's going
to need some time.

I'm still meaning to help with documenting the existing stuff, but
so far there's no free time to work on that and the list of topic
in OpenSCAD itself is also quite long.

Just to be clear: This is simply to explain why things are slow
sometimes and why some very useful feature requests may need lots
of time to get realized. There's a huge amount of good ideas coming
in, both in the github issue tracker and here, and that's great.
It's just not possible to implement all that anytime soonish with
the existing development ressources.

It's very cool to see the current work on the manual, so thanks
to everybody working on that. I know how much work it is.

> And btw, MCAD needs a maintenance / purging. Some of the code in there
> are seriously out of date.
>
The purging part is not so easy. Just removing stuff will break
existing models. It might be an option to deprecate some of the
old modules though.

For my designs I've switched to the dev branch of MCAD which has
the new "mcad_*()" interface and the scripts sorted into various
topic folder. I did not use much yet, but it works nice so far.

ciao,
  Torsten.



From nop.head at gmail.com  Mon Nov 16 05:29:16 2015
From: nop.head at gmail.com (nop head)
Date: Mon, 16 Nov 2015 10:29:16 +0000
Subject: [OpenSCAD] Special Variables
In-Reply-To: <CAGV6i+N6Vd5345G971jdrn7h4rFpoWahgzMehTfh2+AaR703Vg@mail.gmail.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
	<1447542364679-14488.post@n5.nabble.com>
	<1447543337951-14489.post@n5.nabble.com>
	<1447552442487-14496.post@n5.nabble.com>
	<CAEEmnrOhP0Ckj3ijuX21tD3h0MRX9Dsh_Nn37s_8FtbkGuUNwQ@mail.gmail.com>
	<1447602322809-14512.post@n5.nabble.com>
	<1447612001914-14517.post@n5.nabble.com>
	<CAGV6i+Ofm-cf_P2OtW09aTspAeuzNzv8CawaBdFiPBMt8Ry4sg@mail.gmail.com>
	<CAEEmnrNLdruXUTUCA1w8wK3s1zX0TZzjc=XDRg+5teZFZ5uWDA@mail.gmail.com>
	<CAGV6i+N6Vd5345G971jdrn7h4rFpoWahgzMehTfh2+AaR703Vg@mail.gmail.com>
Message-ID: <CAEEmnrMAN-=L8_vEyLe=Bw5u9itGXwNGWYEGNH3V-q4Jhrj-9w@mail.gmail.com>

I suspect library modules should be implemented as two files, one that you
include to get constants and one that you use to get functions and modules.

Note that even if you use a module you can still override constants in it
by passing them as extra parameters.
On Nov 15, 2015 11:52 PM, "doug moen" <doug at moens.org> wrote:

> I have difficulty understanding how the current design of 'use' is a
> "pro", and I'm skeptical about the claim that it supports "better
> encapsulation".
>
> If we really want to support better encapsulation in libraries, then we
> should provide a way for libraries to control which functions, modules and
> variables are exported, and which are private. I'd be happy with something
> as simple as a naming convention: names beginning with _ or $ are private.
>
> My current hatred of 'use' comes from my struggles to figure out how to
> use the MCAD library. This is the standard library that ships with
> OpenSCAD. From the README for MCAD, which is part of the OpenSCAD distro:
>
>     You can import these files in your scripts with `use
> <MCAD/filename.scad>`,
>     where 'filename' is one of the files listed below like 'motors' or
> 'servos'.
>
> This implies that the purpose of 'use' is for importing a library file,
> but it's all a big lie.
>
> In order to successfully use an MCAD library file, you must first read the
> file, reverse engineer it, and determine whether the author intended it to
> be referenced via 'use' or 'include'. Some library files work only with
> 'use', some work only with 'include'.
>
>
>    - Some MCAD scripts export mathematical constants as part of their
>    API. You must use include. Examples are math.scad and materials.scad.
>    - Some MCAD scripts define mathematical constants that are used
>    locally within their functions and modules. They won't work with use,
>    you must use include. Examples are lego_compatibiity.scad,
>    involute_gears.scad.
>    - Some MCAD scripts have top level geometry as example code. They are
>    designed to work with use. For example, trochoids.scad contains demo
>    code with top level geometry and parameter definitions, including a
>    definition of $fn. These parameter definitions are intended to be
>    invisible when the script is used.
>
>
> <https://github.com/doug-moen/openscad2/blob/master/rfc/Library_Scripts.md#referencing-a-model-script>
>
>
> On 15 November 2015 at 17:38, nop head <nop.head at gmail.com> wrote:
>
>> That is a pro, not a con. Better encapsulation.
>> On Nov 15, 2015 7:25 PM, "doug moen" <doug at moens.org> wrote:
>>
>>> The real problem with 'use' is that it doesn't import variable
>>> definitions, only function and module definitions.
>>>
>>> On 15 November 2015 at 13:26, L Boyd <lboyd at frontiernet.net> wrote:
>>>
>>>> if you replace use<Global Test.scad>; with include<Global Test.scad>;
>>>> the
>>>> results are slightly different.
>>>>
>>>> ECHO: " in Test1  x1 = ", 10
>>>> ECHO: " in Test1 $y1 = ", 15
>>>> ECHO: " in Test2  x2 = ", 20
>>>> ECHO: " in Test2 $y2 = ", 27
>>>> ECHO: " in Test3  x3 = ", 30
>>>> ECHO: " in Test3 $y3 = ", 33
>>>>
>>>> Everyone uses the local values, since the included file contents are now
>>>> treated as part of the local file.
>>>>
>>>>
>>>>
>>>> --
>>>> View this message in context:
>>>> http://forum.openscad.org/Special-Variables-tp14477p14517.html
>>>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>>
>>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151116/45cfc11c/attachment-0001.html>

From c.t.chin at szu.edu.cn  Mon Nov 16 05:40:18 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Mon, 16 Nov 2015 03:40:18 -0700 (MST)
Subject: [OpenSCAD] Quicksort
In-Reply-To: <trinity-83d75b25-e0de-4491-a16a-1a620e09ec98-1447667717365@3capp-gmx-bs71>
References: <1447573013225-14501.post@n5.nabble.com>
	<AA179587-822D-4BD1-81F3-BE3E9018DAA9@kintel.net>
	<1447654363340-14532.post@n5.nabble.com>
	<trinity-83d75b25-e0de-4491-a16a-1a620e09ec98-1447667717365@3capp-gmx-bs71>
Message-ID: <1447670418861-14536.post@n5.nabble.com>

tp3 wrote
> Why's that? The code implementing the quicksort() _is_ the actual
> example to show how to use list comprehensions.

And a fantastic example at at, and yes the doc text did mention how to 
use the code.  But the way it's given it's own Section 
title "14.3.3 Quicksort" is misleading fine folks like wolf into making the 
mistake he made. As a very experienced programmer myself, I made 
the same mistakes (briefly) with both quicksort() and select().   

Whereas other examples (e.g. "14.3.1 Generate polygon points" and
"14.3.2 Flatten a nested list") are perfectly clear functions x(a), y(a)
and flatten(l) are not built-in functions.  

This can be (should be) fixed easily by simply renaming the section 
heading to something like "Sorting a vector with Quicksort" and 
eliminating the input and output parameters text.  

select() is even worse: in the TOC for 
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language
it is listed side-by-side with concat() and len() under "3.5.1 vector
operators"

Or as I said, just move these excellent examples to a supported library
and elevate them in the doc to equivalent of built-in 
functions/statements. 


tp3 wrote
> That would be nice. MCAD is basically just a random collection of
> very useful scripts. It was unmaintained for quite some time. 

That is perfect fine reason to expunge a lot of it.  I firmly believe if no 
one (in the user community) care enough to do something about it, 
why should the developer maintain it?


tp3 wrote
> I'm still meaning to help with documenting the existing stuff, but
> so far there's no free time to work on that and the list of topic
> in OpenSCAD itself is also quite long.

Being still almost-a-n00b myself, I can tell you are one of the more 
important staff members.  Your precious time should not be spent
on supporting libraries or writing docs or answering n00b questions.  
Leave those easier but time-sinking tasks to lesser folks like myself. 


tp3 wrote
> The purging part is not so easy. Just removing stuff will break
> existing models. 

A really lousy excuse to keep bundling unsupported, undocumented
and unmaintained code/library in the installation package.  

I'm advocating that bundled code should be supported and 
documented or not bundled at all.  If purging some old codes break 
someone's design, that guy (or lady) should step up and volunteer his 
or her time to support that module or function.  

It's not like those old code will be lost.  The MCAD github can be left in 
place, it will simply be unbundled from the installation package and 
removed from the doc.  A new standard library(ies) will be created,
copying the best stuffs from MCAD, and only keeping those that secure
a pledge of support/maintenance from a community member.  

Core developers should not bother with such trifle matters, I volunteer 
myself in this effort.  





--
View this message in context: http://forum.openscad.org/Quicksort-tp14501p14536.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Mon Nov 16 05:42:56 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Mon, 16 Nov 2015 03:42:56 -0700 (MST)
Subject: [OpenSCAD] Quicksort
In-Reply-To: <1447670418861-14536.post@n5.nabble.com>
References: <1447573013225-14501.post@n5.nabble.com>
	<AA179587-822D-4BD1-81F3-BE3E9018DAA9@kintel.net>
	<1447654363340-14532.post@n5.nabble.com>
	<trinity-83d75b25-e0de-4491-a16a-1a620e09ec98-1447667717365@3capp-gmx-bs71>
	<1447670418861-14536.post@n5.nabble.com>
Message-ID: <1447670576030-14537.post@n5.nabble.com>

ctchin wrote
> This can be (should be) fixed easily by simply renaming the section 
> heading to something like "Sorting a vector with Quicksort" and 
> eliminating the input and output parameters text.  

Which I will carry out, btw... I am not doing it yet simply to allow 
time for my argument to get across.  




--
View this message in context: http://forum.openscad.org/Quicksort-tp14501p14537.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From lboyd at frontiernet.net  Mon Nov 16 07:57:58 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Mon, 16 Nov 2015 05:57:58 -0700 (MST)
Subject: [OpenSCAD] Special Variables
In-Reply-To: <CAEEmnrMAN-=L8_vEyLe=Bw5u9itGXwNGWYEGNH3V-q4Jhrj-9w@mail.gmail.com>
References: <1447542364679-14488.post@n5.nabble.com>
	<1447543337951-14489.post@n5.nabble.com>
	<1447552442487-14496.post@n5.nabble.com>
	<CAEEmnrOhP0Ckj3ijuX21tD3h0MRX9Dsh_Nn37s_8FtbkGuUNwQ@mail.gmail.com>
	<1447602322809-14512.post@n5.nabble.com>
	<1447612001914-14517.post@n5.nabble.com>
	<CAGV6i+Ofm-cf_P2OtW09aTspAeuzNzv8CawaBdFiPBMt8Ry4sg@mail.gmail.com>
	<CAEEmnrNLdruXUTUCA1w8wK3s1zX0TZzjc=XDRg+5teZFZ5uWDA@mail.gmail.com>
	<CAGV6i+N6Vd5345G971jdrn7h4rFpoWahgzMehTfh2+AaR703Vg@mail.gmail.com>
	<CAEEmnrMAN-=L8_vEyLe=Bw5u9itGXwNGWYEGNH3V-q4Jhrj-9w@mail.gmail.com>
Message-ID: <1447678678059-14538.post@n5.nabble.com>

nophead wrote
> Note that even if you use a module you can still override constants in it
> by passing them as extra parameters.

Decided to test this using my example posted earlier. 

part of Global Test.scad

module Test1(){
  cube(4);
    echo(" in Test1  x1 = ",x1);
    echo(" in Test1 $y1 = ",$y1);
}
x1 = 3;
$y1 = 5;

Local file

    use<Global Test.scad>;

  Test1(); 
ECHO: " in Test1  x1 = ", 3
ECHO: " in Test1 $y1 = ", 5

  Test1(x1=19);
ECHO: " in Test1  x1 = ", 19
ECHO: " in Test1 $y1 = ", 5

  Test1(x1=192,$y1=157);
ECHO: " in Test1  x1 = ", 192
ECHO: " in Test1 $y1 = ", 157

  Test1();                       // after all of the above
ECHO: " in Test1  x1 = ", 3
ECHO: " in Test1 $y1 = ", 5

I was able to temporarily override the internal values of x1 and $y1 even
thought they did not appear as parameters in the definition of Test1()!




--
View this message in context: http://forum.openscad.org/Special-Variables-tp14477p14538.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From db5765 at outlook.com  Mon Nov 16 10:11:33 2015
From: db5765 at outlook.com (Trygon)
Date: Mon, 16 Nov 2015 08:11:33 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
Message-ID: <1447686693347-14539.post@n5.nabble.com>

OpenSCAD currently supports a whole range of specific linear transformations
such as translate(), rotate() and scale(), in addition to the generic linear
transformation multmatrix().

OpenSCAD does not provide support for non-linear transformations.  I think
support for non-linear transformations would be very useful and this could
be accomplished with a new transformation command:

transform(x_expression, y_expression, z_expression)

reserved names within transform() expressions: x, y & z, these represent the
vertex being processed

The examples below use this syntax.

Equivalent Linear Transformations:

1) pass data through, no change to vertices
transform(x, y, z) { ... }

2) scale([xf,yf,zf]) { ... }   <->   transform(xf*x, yf*y, zf*z) { ... }

3) translate([x1,y1,z1]) { ... }   <->   transform(x+x1, y+y1, z+z1) { ... }

4) multmatrix([[xx, xy, xz, xc], [yx, yy, yz, yc], [zx, zy, zz, zc], [0, 0,
0, 1]) { ... }   <->
    transform(xx*x+xy*y+xz*z+xc, yx*x+yy*y+yz*z+yc, zx*x+zy*y+zz*z+zc) { ...
}

Non-Linear Transformations:

1) exponential x scaling
transform(x*x, y, z) { ... }

2) "conic" expansion in x-y plane, scale factor=1 for z=20
transform(x*z/20 ,y*z/20 ,z) cylinder(h=40, r=10);

3) scale specific co-ordinate ranges
transform(x>0?2*x:x, abs(y)>50?3*y:y, z) { ... }

4) insert "gap" of 40mm centred on y=0
transform(x ,y>0?y+20:y-20, z) cylinder(h=20, r=10);

Comments please!

Cheers,
Trygon




--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Mon Nov 16 10:29:01 2015
From: marius at kintel.net (Marius Kintel)
Date: Mon, 16 Nov 2015 10:29:01 -0500
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447686693347-14539.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
Message-ID: <D10353F6-1ED8-42BA-B68C-60E308A92449@kintel.net>

> On Nov 16, 2015, at 10:11 AM, Trygon <db5765 at outlook.com> wrote:
> 
> OpenSCAD does not provide support for non-linear transformations.  I think
> support for non-linear transformations would be very useful and this could
> be accomplished with a new transformation command:
> 
Would this be conceptually similar to the proposed bend modifier?

https://github.com/openscad/openscad/issues/815

 -Marius



From doug at moens.org  Mon Nov 16 10:36:05 2015
From: doug at moens.org (doug moen)
Date: Mon, 16 Nov 2015 10:36:05 -0500
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447686693347-14539.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
Message-ID: <CAGV6i+P+t+BV9KLsT5bB7m7EyPcP5Qncdx=DKmRnXm7E5PA5GQ@mail.gmail.com>

This is a good example of what OpenSCAD2 is designed to enable.

OpenSCAD2 supports functions as first class values: functions can be passed
as arguments and returned as results. So the 'transform' module would not
need to be implemented as magic syntax. It would just be an ordinary module
that is passed 3 functions as arguments.

The syntax would look something like this:

// "conic" expansion in x-y plane, scale factor=1 for z=20
transform(fx(x)=x*z/20, fy(y)=y*z/20, fz(z)=z) cylinder(h=40, r=10);

The identity function gets used a lot with your scheme, so maybe we
predefine it. This is OpenSCAD2 function definition syntax:

id(x) = x;

Then,
// exponential x scaling
transform(fx(x)=x*x, fy=id, fz=id) { ... }

or just
transform(fx(x)=x*x, id, id) { ... }


On 16 November 2015 at 10:11, Trygon <db5765 at outlook.com> wrote:

> OpenSCAD currently supports a whole range of specific linear
> transformations
> such as translate(), rotate() and scale(), in addition to the generic
> linear
> transformation multmatrix().
>
> OpenSCAD does not provide support for non-linear transformations.  I think
> support for non-linear transformations would be very useful and this could
> be accomplished with a new transformation command:
>
> transform(x_expression, y_expression, z_expression)
>
> reserved names within transform() expressions: x, y & z, these represent
> the
> vertex being processed
>
> The examples below use this syntax.
>
> Equivalent Linear Transformations:
>
> 1) pass data through, no change to vertices
> transform(x, y, z) { ... }
>
> 2) scale([xf,yf,zf]) { ... }   <->   transform(xf*x, yf*y, zf*z) { ... }
>
> 3) translate([x1,y1,z1]) { ... }   <->   transform(x+x1, y+y1, z+z1) { ...
> }
>
> 4) multmatrix([[xx, xy, xz, xc], [yx, yy, yz, yc], [zx, zy, zz, zc], [0, 0,
> 0, 1]) { ... }   <->
>     transform(xx*x+xy*y+xz*z+xc, yx*x+yy*y+yz*z+yc, zx*x+zy*y+zz*z+zc) {
> ...
> }
>
> Non-Linear Transformations:
>
> 1) exponential x scaling
> transform(x*x, y, z) { ... }
>
> 2) "conic" expansion in x-y plane, scale factor=1 for z=20
> transform(x*z/20 ,y*z/20 ,z) cylinder(h=40, r=10);
>
> 3) scale specific co-ordinate ranges
> transform(x>0?2*x:x, abs(y)>50?3*y:y, z) { ... }
>
> 4) insert "gap" of 40mm centred on y=0
> transform(x ,y>0?y+20:y-20, z) cylinder(h=20, r=10);
>
> Comments please!
>
> Cheers,
> Trygon
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Non-Linear-Transformations-tp14539.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151116/7bb3e88c/attachment.html>

From Martin.Herdieckerhoff at mnet-mail.de  Mon Nov 16 10:36:53 2015
From: Martin.Herdieckerhoff at mnet-mail.de (Martin Herdieckerhoff)
Date: Mon, 16 Nov 2015 16:36:53 +0100
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447686693347-14539.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
Message-ID: <5649F815.6030208@mnet-mail.de>

I like the idea of providing non-linear transformations.
However, the suggested approach seems to break the current treatment of 
parameters.
The suggested syntax looks as if conventional parameters were passed,
but actually the arguments need to be treated in a very different way, 
that is as functions.
Others will know better if that syntax fits into the language.
But I am afraid that it does not.
What about enhancing the language by functions as arguments to provide 
the suggested functionality?
Am 16.11.2015 um 16:11 schrieb Trygon:
> OpenSCAD currently supports a whole range of specific linear transformations
> such as translate(), rotate() and scale(), in addition to the generic linear
> transformation multmatrix().
>
> OpenSCAD does not provide support for non-linear transformations.  I think
> support for non-linear transformations would be very useful and this could
> be accomplished with a new transformation command:
>
> transform(x_expression, y_expression, z_expression)
>
> reserved names within transform() expressions: x, y & z, these represent the
> vertex being processed
>
> The examples below use this syntax.
>
> Equivalent Linear Transformations:
>
> 1) pass data through, no change to vertices
> transform(x, y, z) { ... }
>
> 2) scale([xf,yf,zf]) { ... }   <->   transform(xf*x, yf*y, zf*z) { ... }
>
> 3) translate([x1,y1,z1]) { ... }   <->   transform(x+x1, y+y1, z+z1) { ... }
>
> 4) multmatrix([[xx, xy, xz, xc], [yx, yy, yz, yc], [zx, zy, zz, zc], [0, 0,
> 0, 1]) { ... }   <->
>      transform(xx*x+xy*y+xz*z+xc, yx*x+yy*y+yz*z+yc, zx*x+zy*y+zz*z+zc) { ...
> }
>
> Non-Linear Transformations:
>
> 1) exponential x scaling
> transform(x*x, y, z) { ... }
>
> 2) "conic" expansion in x-y plane, scale factor=1 for z=20
> transform(x*z/20 ,y*z/20 ,z) cylinder(h=40, r=10);
>
> 3) scale specific co-ordinate ranges
> transform(x>0?2*x:x, abs(y)>50?3*y:y, z) { ... }
>
> 4) insert "gap" of 40mm centred on y=0
> transform(x ,y>0?y+20:y-20, z) cylinder(h=20, r=10);
>
> Comments please!
>
> Cheers,
> Trygon
>
>
>
>
> --
> View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
**
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151116/906bbb1f/attachment-0001.html>

From whburling at outlook.com  Mon Nov 16 11:47:10 2015
From: whburling at outlook.com (whburling)
Date: Mon, 16 Nov 2015 09:47:10 -0700 (MST)
Subject: [OpenSCAD] assemble process question
In-Reply-To: <1447558683464-14498.post@n5.nabble.com>
References: <1447553317238-14497.post@n5.nabble.com>
	<1447558683464-14498.post@n5.nabble.com>
Message-ID: <BAY407-EAS37526C1BCA7CCCC093DAC83AA1E0@phx.gbl>

First and foremost..thank you for responding.  I am grateful. 
 
I am trying to understand you.  I am slow..please be patient.  Allow me to
say what you said in my own words ..and if I am not understanding you,
please correct me. My goal is to understand you not be "right" or anything.
 
Here is what I hear you say:
.        You encapsulate each object, just as I suggested, in separate
blah.scad files.
.         You "include" all those files into an "assembly" file. "Including"
places all the code AND the variables you defined in the included file
within the assembly file. 
.        Thus the "assembly" file somehow (I am not clear on how) has access
to the attachment information within each included file and so the assembly
file code can rotate, translate or do whatever is necessary to line each
object to one another. 
 
So..I am guessing that the attachment data within each included file is
defined as a special variable so that it can always be seen (though never
changed.which is perfectly acceptable for my specific situation) by the
assembly file.
 
Have I understood you?  
 
bil
 
From: ctchin [via OpenSCAD] [mailto:ml-node+s1091067n14498h54 at n5.nabble.com]

Sent: Saturday, November 14, 2015 10:38 PM
To: whburling <whburling at outlook.com>
Subject: Re: assemble process question
 
An OpenSCAD program doesn't have the concept of multiple objects.   
You could create multiple solids in the rendering space, with different 
colors etc, but they are also just (disjointed) parts of the one object. 

Another handicap is that there's no object/solid variable so you can't 
create a data structure with a solid and some data (such as reference 
or attachment point coordinates). 

One highly imperfect solution I use is to put each object into a separate 
program with the object generated in a module and its data (attachment 
points, dimensions, movement range etc) into variables.  And an 
"assembly.scad" which include<> each module and move, rotate each 
object into the proper place using the data from each include.   



  _____  

If you reply to this email, your message will be added to the discussion
below:
http://forum.openscad.org/assemble-process-question-tp14497p14498.html 
To unsubscribe from assemble process question, click here
<http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_cod
e&node=14497&code=d2hidXJsaW5nQG91dGxvb2suY29tfDE0NDk3fDU4Njc0MDk4NA==> .
 
<http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=in
stant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-
nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamesp
ace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21na
bble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml> NAML 




--
View this message in context: http://forum.openscad.org/assemble-process-question-tp14497p14543.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151116/4888824c/attachment-0001.html>

From whburling at outlook.com  Mon Nov 16 11:59:29 2015
From: whburling at outlook.com (whburling)
Date: Mon, 16 Nov 2015 09:59:29 -0700 (MST)
Subject: [OpenSCAD] Special Variables
In-Reply-To: <CAEEmnrMg7DjZKH6-hWB=stzPFjYba+-sbEAroraZ0KenDXowWA@mail.gmail.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
	<1447542364679-14488.post@n5.nabble.com>
	<1447543337951-14489.post@n5.nabble.com>
	<CAEEmnrMg7DjZKH6-hWB=stzPFjYba+-sbEAroraZ0KenDXowWA@mail.gmail.com>
Message-ID: <BAY407-EAS297562CD248D4E1DF5581E1AA1E0@phx.gbl>

 
Thank you for replying. Very much appreciated.
 
 
 
So if I understand you
. Special variables do not have global scope.
 
If they did then when I created a special variable within a module, it would
not go out of scope when the module was left.
 
What I thought I heard you say was that if I created a special variable it
could be seen by all modules regardless of scope but that it could not be
changed. I thought I heard an implication that just being see by all made it
global.
 
To allow a special variable to be changed locally and not be visible outside
of the module where it is changed seems to be illogical (maybe I am not
logical), because it is supposed to be seen by all.
 
So, unfortunately, I am still grappling with what a special variable is 
 
bil
From: nophead [via OpenSCAD]
[mailto:ml-node+s1091067n14491h37 at n5.nabble.com] 
Sent: Saturday, November 14, 2015 6:32 PM
To: whburling <whburling at outlook.com>
Subject: Re: Special Variables
 
To explain the original post. If you set a special variable at the file
scope it will be visible in every thing you call but if you try to assign to
it in a deeper scope you simply get a new one with the same name that hides
the original until it goes out of scope. Just the same as the normal lexical
scope variables in that respect. 
On Nov 14, 2015 11:23 PM, "runsun" <[hidden email]> wrote:
copy and paste ?



-----

$?  Runsun Pan, PhD

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git
);

? $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif






--
View this message in context:
http://forum.openscad.org/Special-Variables-tp14477p14489.html
Sent from the OpenSCAD mailing list archive at Nabble.com.

_______________________________________________
OpenSCAD mailing list
[hidden email]
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

_______________________________________________ 
OpenSCAD mailing list 
[hidden email] 
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


  _____  

If you reply to this email, your message will be added to the discussion
below:
http://forum.openscad.org/Special-Variables-tp14477p14491.html 
To unsubscribe from Special Variables, click here
<http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_cod
e&node=14477&code=d2hidXJsaW5nQG91dGxvb2suY29tfDE0NDc3fDU4Njc0MDk4NA==> .
 
<http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=in
stant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-
nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamesp
ace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21na
bble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml> NAML 




--
View this message in context: http://forum.openscad.org/Special-Variables-tp14477p14544.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151116/a46429b8/attachment-0001.html>

From Torsten.Paul at gmx.de  Mon Nov 16 12:15:27 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 16 Nov 2015 18:15:27 +0100
Subject: [OpenSCAD] Quicksort
In-Reply-To: <1447670418861-14536.post@n5.nabble.com>
References: <1447573013225-14501.post@n5.nabble.com>
	<AA179587-822D-4BD1-81F3-BE3E9018DAA9@kintel.net>
	<1447654363340-14532.post@n5.nabble.com>
	<trinity-83d75b25-e0de-4491-a16a-1a620e09ec98-1447667717365@3capp-gmx-bs71>,
	<1447670418861-14536.post@n5.nabble.com>
Message-ID: <trinity-f316326f-3944-4909-9193-aec5d235ca7b-1447694127777@3capp-gmx-bs71>

Ahh, beware the long text... no idea how that happened :-)...

Von:?ctchin <c.t.chin at szu.edu.cn>
> And a fantastic example at at, and yes the doc text did mention how to
> use the code. But the way it's given it's own Section
> title "14.3.3 Quicksort" is misleading fine folks like wolf into making the
> mistake he made. As a very experienced programmer myself, I made
> the same mistakes (briefly) with both quicksort() and select().
>
Right, changing the chapter title is a good idea (I'm not
claiming the list comprehension docs are anywhere near perfect,
I basically collected some of the cool examples from the forum
and created that overview page).

> This can be (should be) fixed easily by simply renaming the section
> heading to something like "Sorting a vector with Quicksort" and
> eliminating the input and output parameters text.
>
I'm not so sure about the second part. Why remove that? The example
is supposed to be pasted into the editor and should give some result
and allow toying with it.
Without the actual calls, it will do nothing when just copy&pasted
which might be confusing. At least that happens to me sometimes when
trying some code send by other people.
(Or am I misunderstanding the changes you suggest?)

> Or as I said, just move these excellent examples to a supported
> library and elevate them in the doc to equivalent of built-in
> functions/statements.
>
There's still a need for explaining how the list comprehension
works. That the example happens to be a generally useful function
which would be nice to have in some kind of standard library does
not make the example unnecessary. We maybe can just have both?

> I'm advocating that bundled code should be supported and
> documented or not bundled at all. If purging some old codes break
> someone's design, that guy (or lady) should step up and volunteer his
> or her time to support that module or function.
>
Oh, I'd agree to that. I do suspect MCAD was maintained at the
time it was included. Also I'm not against removing stuff, but
there should be a fair amount of time where things are deprecated
and give a warning.
Additionally there's a number of cases where warnings will not
show up, e.g. in the Thingiverse Customizer which does allow
MCAD usage.

> It's not like those old code will be lost. The MCAD github can be left in
> place, it will simply be unbundled from the installation package and
> removed from the doc. A new standard library(ies) will be created,
> copying the best stuffs from MCAD, and only keeping those that secure
> a pledge of support/maintenance from a community member.
>
Yes, that would be another option. That would probably also
help defining what's needed to better support libraries in
OpenSCAD. Right now it's a big issue when using multiple
libraries as there's no means to separate those except using
some naming conventions. That a big topic in itself though.

> Core developers should not bother with such trifle matters, I
> volunteer myself in this effort.
>
If you can spare some time, that's awesome, I did not read though all
the wiki changes yet, but what I saw so far looks very helpful. I do
value that all people involved care for things like documentation,
making installations work and so on. I think that's one of the major
reasons why OpenSCAD has a sizable community even with all it's
current limitations.

ciao,
  Torsten.


From whburling at outlook.com  Mon Nov 16 12:21:01 2015
From: whburling at outlook.com (whburling)
Date: Mon, 16 Nov 2015 10:21:01 -0700 (MST)
Subject: [OpenSCAD] assemble process question
In-Reply-To: <CAEEmnrOOoEDxF5jzbTmj7Cv+_1n4-A3sAYxd4VLoco1KRys-yg@mail.gmail.com>
References: <1447553317238-14497.post@n5.nabble.com>
	<1447558683464-14498.post@n5.nabble.com>
	<CAEEmnrOOoEDxF5jzbTmj7Cv+_1n4-A3sAYxd4VLoco1KRys-yg@mail.gmail.com>
Message-ID: <BAY407-EAS4244E44C1658901772B2EEBAA1E0@phx.gbl>

Thank you for replying
.much appreciated.
 
Here are bits that I pulled from your response:
?        A top level module draws the complete assy
?        I don?t have a concept of connection points.
?        You give each part a sensible origin and orientation to make it
easy to place
?        If you need more information, you move it out of a module via a
function (which can return data).
 
If I misunderstood you, then please correct me.  
 
If my understanding is correct, then I have the following two questions:
?        Regarding your comment: ?I give each object a sensible origin and
orientation?.  
 
I am confused. I can?t figure out how to move the origin where I want it to
be.  If I could move the origin within each module, then  I could move it to
the effective center of the attachment point .
Thus the module that assembles all the other modules knows that when each is
called it at least knows the attachment point will always be at the current
origin. It will not have orientation information, however, as the module
being attached has no clue about any other module and hence desired
orientation is unknown.
 
               Its orientation is another matter.
               You suggested a function.  If I understood you, then somehow
I can tell a function which module to enter to get the data a module needs
to attach another module to it. 
 
I do not know how to tell a function how to enter another module


 
bil
From: nophead [via OpenSCAD]
[mailto:ml-node+s1091067n14504h40 at n5.nabble.com] 
Sent: Sunday, November 15, 2015 5:24 AM
To: whburling <whburling at outlook.com>
Subject: Re: assemble process question
 
I represent sub assemblies with modules that draw a bunch of objects by
calling other modules that may be smaller sub assemblies, printed parts or
vitamins like screws. Then a top level module draws the complete assembly. I
don't have a concept of connection points. I just give each part a sensible
origin and orientation to make them easy to place. If more information is
need I export it with functions with names prefixed by the name of the
object they relate to.
On Nov 15, 2015 3:38 AM, "ctchin" <[hidden email]> wrote:
An OpenSCAD program doesn't have the concept of multiple objects.
You could create multiple solids in the rendering space, with different
colors etc, but they are also just (disjointed) parts of the one object.

Another handicap is that there's no object/solid variable so you can't
create a data structure with a solid and some data (such as reference
or attachment point coordinates).

One highly imperfect solution I use is to put each object into a separate
program with the object generated in a module and its data (attachment
points, dimensions, movement range etc) into variables.?  And an
"assembly.scad" which include<> each module and move, rotate each
object into the proper place using the data from each include.





--
View this message in context:
http://forum.openscad.org/assemble-process-question-tp14497p14498.html
Sent from the OpenSCAD mailing list archive at Nabble.com.

_______________________________________________
OpenSCAD mailing list
[hidden email]
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

_______________________________________________ 
OpenSCAD mailing list 
[hidden email] 
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


  _____  

If you reply to this email, your message will be added to the discussion
below:
http://forum.openscad.org/assemble-process-question-tp14497p14504.html 
To unsubscribe from assemble process question, click here
<http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_cod
e&node=14497&code=d2hidXJsaW5nQG91dGxvb2suY29tfDE0NDk3fDU4Njc0MDk4NA==> .
 
<http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=in
stant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-
nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamesp
ace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21na
bble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml> NAML 




--
View this message in context: http://forum.openscad.org/assemble-process-question-tp14497p14546.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151116/275cf51f/attachment-0001.html>

From whburling at outlook.com  Mon Nov 16 12:31:36 2015
From: whburling at outlook.com (whburling)
Date: Mon, 16 Nov 2015 10:31:36 -0700 (MST)
Subject: [OpenSCAD] Special Variables
In-Reply-To: <CAEEmnrOhP0Ckj3ijuX21tD3h0MRX9Dsh_Nn37s_8FtbkGuUNwQ@mail.gmail.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
	<1447542364679-14488.post@n5.nabble.com>
	<1447543337951-14489.post@n5.nabble.com>
	<1447552442487-14496.post@n5.nabble.com>
	<CAEEmnrOhP0Ckj3ijuX21tD3h0MRX9Dsh_Nn37s_8FtbkGuUNwQ@mail.gmail.com>
Message-ID: <1447695096291-14547.post@n5.nabble.com>

just discsovered your reply.  Let me digest it.  play with simple examples.
You were careful wtih your wording...and so i suspect i will be able to
recreate your views and thus appreciate what you are saying.
please be patient with me.



--
View this message in context: http://forum.openscad.org/Special-Variables-tp14477p14547.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Mon Nov 16 12:35:41 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Mon, 16 Nov 2015 10:35:41 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447686693347-14539.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
Message-ID: <1447695341735-14548.post@n5.nabble.com>

Trygon wrote
> 1) exponential x scaling
> transform(x*x, y, z) { ... }
> 
> 2) "conic" expansion in x-y plane, scale factor=1 for z=20
> transform(x*z/20 ,y*z/20 ,z) cylinder(h=40, r=10);
> 
> 3) scale specific co-ordinate ranges
> transform(x>0?2*x:x, abs(y)>50?3*y:y, z) { ... }
> 
> 4) insert "gap" of 40mm centred on y=0
> transform(x ,y>0?y+20:y-20, z) cylinder(h=20, r=10);

1) exponential: it should better be called power law or polynomial.  
It's a relatively unique requirement...

2) conic: I believe it's actually linear and doable with a 
simple multmatrix()

3) scale specific co-ordinate ranges and 4? insert gap
both are easily doable with a smartly written module 
using difference() and/or projection()

So only the x = x*x exponential (sic) is new, I'm not 
very convinced it justifies inventing a whole new syntax 
for it.  




--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14548.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Mon Nov 16 12:42:49 2015
From: rudolf at parkinbot.com (Parkinbot)
Date: Mon, 16 Nov 2015 10:42:49 -0700 (MST)
Subject: [OpenSCAD] feature request: obj2vec();
 bug report: freeze on standby recovery (Windows)
Message-ID: <1447695769058-14549.post@n5.nabble.com>

My feature request: 

A function /obj2vec()/ to get a vector representation of an object.
Desirable for 2D objects (at least), 3D objects, included objects.

Don't know whether this feature offends the programming paradigm of OpenCAD,
but it would so useful to somehow get in touch with the mesh points of an
object. I'm aware that only rendering will produce a mesh, but isn't
/render()/ meant for this?

My bug report:

My OpenSCAD (ver. 2015.03-1) most of the time freezes after a standby
recovery (Windows 8.1, Windows 7). So it happens quite often, that I send my
machine to sleep without having saved my current designs and everything is
lost on wake up. I'm not sure, maybe this happens only or more often after a
rendering has been done. With multiple sessions not necessarily all of them
freeze. 





--
View this message in context: http://forum.openscad.org/feature-request-obj2vec-bug-report-freeze-on-standby-recovery-Windows-tp14549.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Mon Nov 16 13:02:26 2015
From: doug at moens.org (doug moen)
Date: Mon, 16 Nov 2015 13:02:26 -0500
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447695341735-14548.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<1447695341735-14548.post@n5.nabble.com>
Message-ID: <CAGV6i+Mo4=yXXD1F+B5ifpK6ih_B5UixrqcfbrdG-hQXs5jMQg@mail.gmail.com>

Another way to represent the transformation is as a single function that
maps a point [x,y,z] to another point.

If you think of this function as mapping every point in a 3D shape, then
this is extremely powerful, as you can model any conceivable spatial
transformation: twisting, bending, etc.

In practice, there are difficulties, as pointed out by
https://github.com/openscad/openscad/issues/815

The problem is that, with many of the more interesting transformations,
it's not enough to simply transform each vertex. You may need to subdivide
the mesh to create smaller faces, and then transform each vertex in the
subdivided mesh. An example would be applying a twist or bend
transformation to a cube, with just the 8 vertices.

On 16 November 2015 at 12:35, ctchin <c.t.chin at szu.edu.cn> wrote:

> Trygon wrote
> > 1) exponential x scaling
> > transform(x*x, y, z) { ... }
> >
> > 2) "conic" expansion in x-y plane, scale factor=1 for z=20
> > transform(x*z/20 ,y*z/20 ,z) cylinder(h=40, r=10);
> >
> > 3) scale specific co-ordinate ranges
> > transform(x>0?2*x:x, abs(y)>50?3*y:y, z) { ... }
> >
> > 4) insert "gap" of 40mm centred on y=0
> > transform(x ,y>0?y+20:y-20, z) cylinder(h=20, r=10);
>
> 1) exponential: it should better be called power law or polynomial.
> It's a relatively unique requirement...
>
> 2) conic: I believe it's actually linear and doable with a
> simple multmatrix()
>
> 3) scale specific co-ordinate ranges and 4? insert gap
> both are easily doable with a smartly written module
> using difference() and/or projection()
>
> So only the x = x*x exponential (sic) is new, I'm not
> very convinced it justifies inventing a whole new syntax
> for it.
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Non-Linear-Transformations-tp14539p14548.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151116/58dc444d/attachment.html>

From db5765 at outlook.com  Mon Nov 16 13:09:33 2015
From: db5765 at outlook.com (Trygon)
Date: Mon, 16 Nov 2015 11:09:33 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <D10353F6-1ED8-42BA-B68C-60E308A92449@kintel.net>
References: <1447686693347-14539.post@n5.nabble.com>
	<D10353F6-1ED8-42BA-B68C-60E308A92449@kintel.net>
Message-ID: <1447697373291-14551.post@n5.nabble.com>

Yes this could be used to bend objects, I think this would work:

transform(y*sin(x), y*cos(x), z)

As noted in the proposed bend modifier discussion, unless the object has
sufficient vertices it will just deform (unpleasantly), e.g. a simple cube
with 8 vertices would not work well. However this is a different issue.

If the use of x, y & z as reserved names makes the "syntax looks as if
conventional parameters were passed", perhaps x(), y() & z() could be used
instead as reserved functions, such that "the arguments need to
be...functions"?

The above example would become:

transform( y()*sin(x()), y()*cos(x()), z() )

-Trygon




--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14551.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Mon Nov 16 13:13:42 2015
From: doug at moens.org (doug moen)
Date: Mon, 16 Nov 2015 13:13:42 -0500
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <CAGV6i+Mo4=yXXD1F+B5ifpK6ih_B5UixrqcfbrdG-hQXs5jMQg@mail.gmail.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<1447695341735-14548.post@n5.nabble.com>
	<CAGV6i+Mo4=yXXD1F+B5ifpK6ih_B5UixrqcfbrdG-hQXs5jMQg@mail.gmail.com>
Message-ID: <CAGV6i+Pw4hca_q0F3Rf6T36CkSt7KkOve+A7+f9oNWFVWPhA3w@mail.gmail.com>

Following up on the "subdivision problem".

I really like the proposal from Trygon last month of using a $fe variable
to specify the "maximal acceptable error" in a polygonal approximation of a
solid.

Having come to OpenSCAD primarily from a design engineering background I am
used to specifying tolerances for specific features, e.g. 20mm +/- 0.1mm.
Wanting to use this principle for arc approximation I have adopted the
approach set out below which I hope might be useful to others.

The maximum error for a facet occurs at it centre, when it is furthest from
the true circular arc that it approximates. I use variable $fe in my
OpenSCAD scripts to specify the maximum acceptable value of this error (the
distance from the centre of the facet to the true circular arc, measured
normal to the facet).  I then use the following function to calculate a
value for $fa based on the arc radius and $fe:

So now I'm wondering if we can create an algorithm for optimally
subdividing a polygon, using the minimum number of subdivisions necessary
to keep the error below $fe, when applying one of Trygon's generalized
spatial tranformations. I think it makes sense. We transform all of the
vertexes in a face, then we perform a trial subdivision of that face,
transform the added vertexes, and measure if the added vertexes were
necessary.

On 16 November 2015 at 13:02, doug moen <doug at moens.org> wrote:

> Another way to represent the transformation is as a single function that
> maps a point [x,y,z] to another point.
>
> If you think of this function as mapping every point in a 3D shape, then
> this is extremely powerful, as you can model any conceivable spatial
> transformation: twisting, bending, etc.
>
> In practice, there are difficulties, as pointed out by
> https://github.com/openscad/openscad/issues/815
>
> The problem is that, with many of the more interesting transformations,
> it's not enough to simply transform each vertex. You may need to subdivide
> the mesh to create smaller faces, and then transform each vertex in the
> subdivided mesh. An example would be applying a twist or bend
> transformation to a cube, with just the 8 vertices.
>
> On 16 November 2015 at 12:35, ctchin <c.t.chin at szu.edu.cn> wrote:
>
>> Trygon wrote
>> > 1) exponential x scaling
>> > transform(x*x, y, z) { ... }
>> >
>> > 2) "conic" expansion in x-y plane, scale factor=1 for z=20
>> > transform(x*z/20 ,y*z/20 ,z) cylinder(h=40, r=10);
>> >
>> > 3) scale specific co-ordinate ranges
>> > transform(x>0?2*x:x, abs(y)>50?3*y:y, z) { ... }
>> >
>> > 4) insert "gap" of 40mm centred on y=0
>> > transform(x ,y>0?y+20:y-20, z) cylinder(h=20, r=10);
>>
>> 1) exponential: it should better be called power law or polynomial.
>> It's a relatively unique requirement...
>>
>> 2) conic: I believe it's actually linear and doable with a
>> simple multmatrix()
>>
>> 3) scale specific co-ordinate ranges and 4? insert gap
>> both are easily doable with a smartly written module
>> using difference() and/or projection()
>>
>> So only the x = x*x exponential (sic) is new, I'm not
>> very convinced it justifies inventing a whole new syntax
>> for it.
>>
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/Non-Linear-Transformations-tp14539p14548.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151116/270b941b/attachment.html>

From c.t.chin at szu.edu.cn  Mon Nov 16 13:35:35 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Mon, 16 Nov 2015 11:35:35 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <CAGV6i+Pw4hca_q0F3Rf6T36CkSt7KkOve+A7+f9oNWFVWPhA3w@mail.gmail.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<1447695341735-14548.post@n5.nabble.com>
	<CAGV6i+Mo4=yXXD1F+B5ifpK6ih_B5UixrqcfbrdG-hQXs5jMQg@mail.gmail.com>
	<CAGV6i+Pw4hca_q0F3Rf6T36CkSt7KkOve+A7+f9oNWFVWPhA3w@mail.gmail.com>
Message-ID: <1447698935535-14553.post@n5.nabble.com>

The more I read the more I understand the request, the more 
I'm convinced there's a lot loony ideas being thrown around.  

The syntax x(), whether it's built-in or not, is a function call 
with no input parameters (adopting the default values if possible).   

For non-linear or more precisely non-affine transformation to 
work the way you imagine it, will require re-meshing the children
with some level of smartly selected resolution.  Which spells... 
no universally acceptable algorithm exists.  

If it doesn't work sensibly on a cube() primitive, it's highly 
questionable it ought to be added to OpenSCAD.  




--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14553.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From db5765 at outlook.com  Mon Nov 16 13:36:58 2015
From: db5765 at outlook.com (Trygon)
Date: Mon, 16 Nov 2015 11:36:58 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447697373291-14551.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<D10353F6-1ED8-42BA-B68C-60E308A92449@kintel.net>
	<1447697373291-14551.post@n5.nabble.com>
Message-ID: <1447699018195-14554.post@n5.nabble.com>

// non-linear transformation: 2D bend demo

x1=-40;
x2=40;
y1=30;
y2=40;
step=10;

p1=concat([for(i=[x1:step:x2]) [i,y1]],[for(i=[x2:-step:x1]) [i,y2]]);
polygon(p1);

// translate([0,-20,0]) transform(y*sin(x),y*cos(x)) polygon(p1);
p2=[for(i=p1) [i[1]*sin(i[0]),i[1]*cos(i[0])]];
translate ([0,-20,0]) polygon(p2);




--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14554.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Mon Nov 16 13:44:53 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Mon, 16 Nov 2015 11:44:53 -0700 (MST)
Subject: [OpenSCAD] feature request: obj2vec();
 bug report: freeze on standby recovery (Windows)
In-Reply-To: <1447695769058-14549.post@n5.nabble.com>
References: <1447695769058-14549.post@n5.nabble.com>
Message-ID: <1447699493700-14555.post@n5.nabble.com>

Parkinbot wrote
> A function 
/
> obj2vec()
/
>  to get a vector representation of an object. Desirable for 2D objects (at
> least), 3D objects, included objects.
> 
> Don't know whether this feature offends the programming paradigm of
> OpenCAD

It does, deeply.  Right now there are many ways to create a solid 
from some quantities (e.g. cube([10,20,5]);) or to get values from 
values (functions and operators) and even get a solid from a combination
of solids and values (transformation).

But there's no way to obtain any value with a solid as input.   

And it's a good question if that should be changed.  

Personally I am not too keen to get in touch with the mesh points within 
OpenSCAD.  If I need to, I could just export the STL to another program 
that's good at playing with mesh points. 

But I can think of lots of nice-to-have calculation from a solid:
min_x, max_x, width
min_y, max_y, depth
min_z, max_z, height
surface_area
volumn
etc



--
View this message in context: http://forum.openscad.org/feature-request-obj2vec-bug-report-freeze-on-standby-recovery-Windows-tp14549p14555.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From openscad_rmk at kandarian.com  Mon Nov 16 13:47:44 2015
From: openscad_rmk at kandarian.com (rickan)
Date: Mon, 16 Nov 2015 11:47:44 -0700 (MST)
Subject: [OpenSCAD] Plans to change variable behavior ?
In-Reply-To: <1447604220486-14514.post@n5.nabble.com>
References: <CAEEmnrP-8MBLOdvJ1-nikTB_cgGjy17HW46fEXozugEbge7odg@mail.gmail.com>
	<013e01cfd36b$7d1fef40$775fcdc0$@web.de>
	<CAEEmnrOS4+mhGgznWejnDBs7RBfoJtX+bM1xnA9KhJ1pOW7NWg@mail.gmail.com>
	<005a01cfd3ec$f9427b20$ebc77160$@web.de>
	<63452311-EAA9-41DC-9D48-6542231A12F5@kintel.net>
	<1411134087043-9719.post@n5.nabble.com>
	<1411135718297-9720.post@n5.nabble.com>
	<CAEEmnrPro6eRVRYajQf_HotZ8Q9BRgjp-JtTmNUqsgb5Y+2rZg@mail.gmail.com>
	<1447594579802-14508.post@n5.nabble.com>
	<1447604220486-14514.post@n5.nabble.com>
Message-ID: <1447699664757-14556.post@n5.nabble.com>

In the instance which aroused my desire to vote against immutable variables,
the location of my primitive call, cube(), in the inner of 3 nested for ops,
is ideal for calculating various properties of the cube for that specific
call and for counting the numbers of cubes with the same properties, etc.

The reasons, in addition to immutable variables, I can't to that is that
modules do not return anything and modules cannot be called within
functions.

I can do it by writing other functions to be called on the list equivalent
of the three nested for ops with the same conditionals resulting in horrible
code proliferation with it's attendant pitfalls. Or I can just write it in
Perl which spews huge volumes of module calls generated in the 3 nested for
loops in which case features of the OpenSCAD language such as immutable
variables are irrelevant.

I read parts of your OpenSCAD 2 proposal with interest. Most relevant is
that the only distinction between functions and modules is what they return,
i.e. functions return anything at all and modules return geometrical
objects. (Please correct any error in my understanding.)

I would like to suggest that modules return objects which contain the
geometrical object in addition to a user definable, user settable, set of
key => value pairs, i.e. user definable meta-data the module produces. It
might make sense that some of the keys would be standard e.g. the key for
the geometrical object itself, the parameters passed to the call including
children objects, the coordinate transform matrix of the call, the color,
etc.; but whether or not that is done, the user should be able to augment
the set.

If this were done, then aggregation of the meta-data could be accomplished
by calling functions on lists of these module produced objects.

What I'm calling meta-data here is, I think, a very important part of solid
modeling.

Here's my specific case:  Wallis.scad
<http://forum.openscad.org/file/n14556/Wallis.scad>   inserted here for
convenience:





--
View this message in context: http://forum.openscad.org/Plans-to-change-variable-behavior-tp9647p14556.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Mon Nov 16 13:50:49 2015
From: doug at moens.org (doug moen)
Date: Mon, 16 Nov 2015 13:50:49 -0500
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447698935535-14553.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<1447695341735-14548.post@n5.nabble.com>
	<CAGV6i+Mo4=yXXD1F+B5ifpK6ih_B5UixrqcfbrdG-hQXs5jMQg@mail.gmail.com>
	<CAGV6i+Pw4hca_q0F3Rf6T36CkSt7KkOve+A7+f9oNWFVWPhA3w@mail.gmail.com>
	<1447698935535-14553.post@n5.nabble.com>
Message-ID: <CAGV6i+NVEdkoq0K4vF-SiWrwApodZH5PK8YfSfO3ETHkTKPuyQ@mail.gmail.com>

ctchin said:
> For non-linear or more precisely non-affine transformation to
> work the way you imagine it, will require re-meshing the children
> with some level of smartly selected resolution.  Which spells...
> no universally acceptable algorithm exists.

I just described (in a vague way) a smart re-meshing algorithm in a
previous post. I'd like to hear why my algorithm might not be acceptable.

Here it is again, in more detail. Let's assume the polyhedron mesh is made
of triangles. For each triangle, we transform the vertexes. Then, we
perform a trial subdivision of the triangle into 4 smaller triangles, by
bisecting each of the original edges. This adds 3 new vertexes. We
transform each vertex, and compute the height of the vertex above the
parent triangle, in the direction of the parent triangle's normal vector. A
height of 0 means the new vertex lies in the plane of the parent triangle.
If all of the 3 new vertexes have a height of < $fe, then we discard the
new vertexes. Otherwise, we keep the new vertexes, and iterate, subdividing
the newly created triangles.

Doug.

On 16 November 2015 at 13:35, ctchin <c.t.chin at szu.edu.cn> wrote:

> The more I read the more I understand the request, the more
> I'm convinced there's a lot loony ideas being thrown around.
>
> The syntax x(), whether it's built-in or not, is a function call
> with no input parameters (adopting the default values if possible).
>
> For non-linear or more precisely non-affine transformation to
> work the way you imagine it, will require re-meshing the children
> with some level of smartly selected resolution.  Which spells...
> no universally acceptable algorithm exists.
>
> If it doesn't work sensibly on a cube() primitive, it's highly
> questionable it ought to be added to OpenSCAD.
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Non-Linear-Transformations-tp14539p14553.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151116/62db5793/attachment.html>

From openscad_rmk at kandarian.com  Mon Nov 16 13:53:29 2015
From: openscad_rmk at kandarian.com (rickan)
Date: Mon, 16 Nov 2015 11:53:29 -0700 (MST)
Subject: [OpenSCAD] Plans to change variable behavior ?
In-Reply-To: <1447699664757-14556.post@n5.nabble.com>
References: <013e01cfd36b$7d1fef40$775fcdc0$@web.de>
	<CAEEmnrOS4+mhGgznWejnDBs7RBfoJtX+bM1xnA9KhJ1pOW7NWg@mail.gmail.com>
	<005a01cfd3ec$f9427b20$ebc77160$@web.de>
	<63452311-EAA9-41DC-9D48-6542231A12F5@kintel.net>
	<1411134087043-9719.post@n5.nabble.com>
	<1411135718297-9720.post@n5.nabble.com>
	<CAEEmnrPro6eRVRYajQf_HotZ8Q9BRgjp-JtTmNUqsgb5Y+2rZg@mail.gmail.com>
	<1447594579802-14508.post@n5.nabble.com>
	<1447604220486-14514.post@n5.nabble.com>
	<1447699664757-14556.post@n5.nabble.com>
Message-ID: <1447700009559-14558.post@n5.nabble.com>

Hmmm, Seems I hit the wrong reply button. I meant to reply to Doug Moen.



--
View this message in context: http://forum.openscad.org/Plans-to-change-variable-behavior-tp9647p14558.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Mon Nov 16 13:55:35 2015
From: doug at moens.org (doug moen)
Date: Mon, 16 Nov 2015 13:55:35 -0500
Subject: [OpenSCAD] Plans to change variable behavior ?
In-Reply-To: <1447700009559-14558.post@n5.nabble.com>
References: <013e01cfd36b$7d1fef40$775fcdc0$@web.de>
	<CAEEmnrOS4+mhGgznWejnDBs7RBfoJtX+bM1xnA9KhJ1pOW7NWg@mail.gmail.com>
	<005a01cfd3ec$f9427b20$ebc77160$@web.de>
	<63452311-EAA9-41DC-9D48-6542231A12F5@kintel.net>
	<1411134087043-9719.post@n5.nabble.com>
	<1411135718297-9720.post@n5.nabble.com>
	<CAEEmnrPro6eRVRYajQf_HotZ8Q9BRgjp-JtTmNUqsgb5Y+2rZg@mail.gmail.com>
	<1447594579802-14508.post@n5.nabble.com>
	<1447604220486-14514.post@n5.nabble.com>
	<1447699664757-14556.post@n5.nabble.com>
	<1447700009559-14558.post@n5.nabble.com>
Message-ID: <CAGV6i+Ouqe0gt0DvpPHA9o80XCy+ic1dd1ZSVodQRPaYypZBJA@mail.gmail.com>

It's okay, I got the message. And I'll try to respond.

On 16 November 2015 at 13:53, rickan <openscad_rmk at kandarian.com> wrote:

> Hmmm, Seems I hit the wrong reply button. I meant to reply to Doug Moen.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Plans-to-change-variable-behavior-tp9647p14558.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151116/9a46e034/attachment.html>

From ant.stewart at yahoo.com  Mon Nov 16 13:57:28 2015
From: ant.stewart at yahoo.com (ufomorace)
Date: Mon, 16 Nov 2015 11:57:28 -0700 (MST)
Subject: [OpenSCAD] openscad + stl almost unusable?
In-Reply-To: <1447502944521-14472.post@n5.nabble.com>
References: <1447502944521-14472.post@n5.nabble.com>
Message-ID: <1447700248321-14560.post@n5.nabble.com>

What do you mean?

That the exported stl cannot reimport into openscad again?

Openscad only uses CGAL to make the STL, so if result is not compatible with
input mesh of CGAL, it's an error in the CGAL which is coded by geometry
professors. 

I haven't had any stl that aren't fixed in netfabb, did you press the red +
button? Don't know if the netfabb fixed CGAL result can be fed back into
CGAL, you can also try meshmixer for boolean ops if you want to add smaller
numbers of objects. 

Openscads biggest strength is making printable STL using 1000ds of combined
building blocks in super complex arrangements, perhaps the STL export
re-import is just a weakness of CGAL engine.




--
View this message in context: http://forum.openscad.org/openscad-stl-almost-unusable-tp14472p14560.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From deurer at rocketmail.com  Mon Nov 16 13:59:41 2015
From: deurer at rocketmail.com (plasticmonk)
Date: Mon, 16 Nov 2015 11:59:41 -0700 (MST)
Subject: [OpenSCAD] make an object hollow with constant wall thickness
In-Reply-To: <1447587433209-14507.post@n5.nabble.com>
References: <1446377779240-14255.post@n5.nabble.com>
	<1447587433209-14507.post@n5.nabble.com>
Message-ID: <1447700381720-14561.post@n5.nabble.com>

zero infill is not an option. the object is going to be parametric. I'll have
a look at the other optiions tomorrrow. thanks for the replys so far.



--
View this message in context: http://forum.openscad.org/make-an-object-hollow-with-constant-wall-thickness-tp14255p14561.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From deurer at rocketmail.com  Mon Nov 16 14:04:11 2015
From: deurer at rocketmail.com (plasticmonk)
Date: Mon, 16 Nov 2015 12:04:11 -0700 (MST)
Subject: [OpenSCAD] make an object hollow with constant wall thickness
In-Reply-To: <1447700381720-14561.post@n5.nabble.com>
References: <1446377779240-14255.post@n5.nabble.com>
	<1447587433209-14507.post@n5.nabble.com>
	<1447700381720-14561.post@n5.nabble.com>
Message-ID: <1447700651271-14562.post@n5.nabble.com>

@peter
what for is the //small number "e"?



--
View this message in context: http://forum.openscad.org/make-an-object-hollow-with-constant-wall-thickness-tp14255p14562.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Mon Nov 16 14:15:42 2015
From: doug at moens.org (doug moen)
Date: Mon, 16 Nov 2015 14:15:42 -0500
Subject: [OpenSCAD] Plans to change variable behavior ?
In-Reply-To: <1447699664757-14556.post@n5.nabble.com>
References: <CAEEmnrP-8MBLOdvJ1-nikTB_cgGjy17HW46fEXozugEbge7odg@mail.gmail.com>
	<013e01cfd36b$7d1fef40$775fcdc0$@web.de>
	<CAEEmnrOS4+mhGgznWejnDBs7RBfoJtX+bM1xnA9KhJ1pOW7NWg@mail.gmail.com>
	<005a01cfd3ec$f9427b20$ebc77160$@web.de>
	<63452311-EAA9-41DC-9D48-6542231A12F5@kintel.net>
	<1411134087043-9719.post@n5.nabble.com>
	<1411135718297-9720.post@n5.nabble.com>
	<CAEEmnrPro6eRVRYajQf_HotZ8Q9BRgjp-JtTmNUqsgb5Y+2rZg@mail.gmail.com>
	<1447594579802-14508.post@n5.nabble.com>
	<1447604220486-14514.post@n5.nabble.com>
	<1447699664757-14556.post@n5.nabble.com>
Message-ID: <CAGV6i+Mm3VJ5VnP0xAbiBpaOYdWTADOmOGcjg+nAiOna-t8rSQ@mail.gmail.com>

rickan said:
> I read parts of your OpenSCAD 2 proposal with interest. Most relevant is
> that the only distinction between functions and modules is what they
return,
> i.e. functions return anything at all and modules return geometrical
> objects. (Please correct any error in my understanding.)

That is correct. The distinction between modules and functions disappears,
and the 'module' keyword is deprecated (only needed for backward
compatibility).
Modules are replaced by functions that return geometric objects.

rickan, again:
> I would like to suggest that modules return objects which contain the
> geometrical object in addition to a user definable, user settable, set of
> key => value pairs, i.e. user definable meta-data the module produces. It
> might make sense that some of the keys would be standard e.g. the key for
> the geometrical object itself, the parameters passed to the call including
> children objects, the coordinate transform matrix of the call, the color,
> etc.; but whether or not that is done, the user should be able to augment
> the set.

That is pretty much how the OpenSCAD2 design already works.
I have not made any attempt to define "standard keys", and in the present
design,
primitive shapes like the ones returned by cube() and sphere() don't have
any keys.
All keys within a geometric object are user defined.
But otherwise, it works as you have described.

Here is the section that describes "geometric objects":
https://github.com/doug-moen/openscad2/blob/master/rfc/Objects.md

The design makes a distinction between "shapes" (which are primitive)
and "objects" (which are user defined). Shapes and objects are the
two kinds of geometric values, both represent a 2D or 3D figure.


On 16 November 2015 at 13:47, rickan <openscad_rmk at kandarian.com> wrote:

> In the instance which aroused my desire to vote against immutable
> variables,
> the location of my primitive call, cube(), in the inner of 3 nested for
> ops,
> is ideal for calculating various properties of the cube for that specific
> call and for counting the numbers of cubes with the same properties, etc.
>
> The reasons, in addition to immutable variables, I can't to that is that
> modules do not return anything and modules cannot be called within
> functions.
>
> I can do it by writing other functions to be called on the list equivalent
> of the three nested for ops with the same conditionals resulting in
> horrible
> code proliferation with it's attendant pitfalls. Or I can just write it in
> Perl which spews huge volumes of module calls generated in the 3 nested for
> loops in which case features of the OpenSCAD language such as immutable
> variables are irrelevant.
>
> I read parts of your OpenSCAD 2 proposal with interest. Most relevant is
> that the only distinction between functions and modules is what they
> return,
> i.e. functions return anything at all and modules return geometrical
> objects. (Please correct any error in my understanding.)
>
> I would like to suggest that modules return objects which contain the
> geometrical object in addition to a user definable, user settable, set of
> key => value pairs, i.e. user definable meta-data the module produces. It
> might make sense that some of the keys would be standard e.g. the key for
> the geometrical object itself, the parameters passed to the call including
> children objects, the coordinate transform matrix of the call, the color,
> etc.; but whether or not that is done, the user should be able to augment
> the set.
>
> If this were done, then aggregation of the meta-data could be accomplished
> by calling functions on lists of these module produced objects.
>
> What I'm calling meta-data here is, I think, a very important part of solid
> modeling.
>
> Here's my specific case:  Wallis.scad
> <http://forum.openscad.org/file/n14556/Wallis.scad>   inserted here for
> convenience:
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Plans-to-change-variable-behavior-tp9647p14556.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151116/f3dfe5bf/attachment-0001.html>

From deurer at rocketmail.com  Mon Nov 16 14:23:02 2015
From: deurer at rocketmail.com (plasticmonk)
Date: Mon, 16 Nov 2015 12:23:02 -0700 (MST)
Subject: [OpenSCAD] make an object hollow with constant wall thickness
In-Reply-To: <1447700651271-14562.post@n5.nabble.com>
References: <1446377779240-14255.post@n5.nabble.com>
	<1447587433209-14507.post@n5.nabble.com>
	<1447700381720-14561.post@n5.nabble.com>
	<1447700651271-14562.post@n5.nabble.com>
Message-ID: <1447701782413-14564.post@n5.nabble.com>

@peter, i understand the small number now but in general its not the solution
im looking for. let me refrase the qusetion:

difference(){

cube([50-x,50-x,100]);
    x=2;
    translate([x/2,x/2,0])
cube([50-x,50-x,100]);
}

if I could make it work that the 2nd cube gets another x value then the 1st,
i could reuse the same code for the inner and the outer object. Because we
are talking about a very complex object, this would help me a lot. 



--
View this message in context: http://forum.openscad.org/make-an-object-hollow-with-constant-wall-thickness-tp14255p14564.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Mon Nov 16 14:27:02 2015
From: rudolf at parkinbot.com (Parkinbot)
Date: Mon, 16 Nov 2015 12:27:02 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447698935535-14553.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<1447695341735-14548.post@n5.nabble.com>
	<CAGV6i+Mo4=yXXD1F+B5ifpK6ih_B5UixrqcfbrdG-hQXs5jMQg@mail.gmail.com>
	<CAGV6i+Pw4hca_q0F3Rf6T36CkSt7KkOve+A7+f9oNWFVWPhA3w@mail.gmail.com>
	<1447698935535-14553.post@n5.nabble.com>
Message-ID: <1447702022902-14565.post@n5.nabble.com>

You are perfectly right! 

Anyway only ismorphic nonlinear transformations would make sense. Most of
them are not isomorphic in a general sense - but might be in a subset, as
the given examples. 

A more general approach for this feature would be to get hands on the mesh
points, as requested in my topic "feature request: obj2vec(); bug report:
freeze on standby recovery (Windows)". Then, everyone is free to use his own
mappings even non-isomorphic ones and also responsible if the resulting
polyhedron will be malformed. 

> If it doesn't work sensibly on a cube() primitive, it's highly
> questionable it ought to be added to OpenSCAD.   



--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14565.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Mon Nov 16 14:39:52 2015
From: doug at moens.org (doug moen)
Date: Mon, 16 Nov 2015 14:39:52 -0500
Subject: [OpenSCAD] feature request: obj2vec();
 bug report: freeze on standby recovery (Windows)
In-Reply-To: <1447699493700-14555.post@n5.nabble.com>
References: <1447695769058-14549.post@n5.nabble.com>
	<1447699493700-14555.post@n5.nabble.com>
Message-ID: <CAGV6i+PD16cxMHcCC3+pSeMS=fJ2QyxNC+Oow8+AO3HFt41Odg@mail.gmail.com>

I've talked to Marius about this in the past. His concern is that this
could have a negative impact on the useability of OpenSCAD, by making F5
preview just as slow as F6 render. The problem is that operations to query
the mesh require us to render the shape into a mesh, and this would have to
be done even in preview mode.

So Marius's answer at the time was, let's replace our CGAL based renderer
with something much faster before we consider this change.

On 16 November 2015 at 13:44, ctchin <c.t.chin at szu.edu.cn> wrote:

> Parkinbot wrote
> > A function
> /
> > obj2vec()
> /
> >  to get a vector representation of an object. Desirable for 2D objects
> (at
> > least), 3D objects, included objects.
> >
> > Don't know whether this feature offends the programming paradigm of
> > OpenCAD
>
> It does, deeply.  Right now there are many ways to create a solid
> from some quantities (e.g. cube([10,20,5]);) or to get values from
> values (functions and operators) and even get a solid from a combination
> of solids and values (transformation).
>
> But there's no way to obtain any value with a solid as input.
>
> And it's a good question if that should be changed.
>
> Personally I am not too keen to get in touch with the mesh points within
> OpenSCAD.  If I need to, I could just export the STL to another program
> that's good at playing with mesh points.
>
> But I can think of lots of nice-to-have calculation from a solid:
> min_x, max_x, width
> min_y, max_y, depth
> min_z, max_z, height
> surface_area
> volumn
> etc
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/feature-request-obj2vec-bug-report-freeze-on-standby-recovery-Windows-tp14549p14555.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151116/04d9aa4b/attachment.html>

From openscad_rmk at kandarian.com  Mon Nov 16 14:53:11 2015
From: openscad_rmk at kandarian.com (rickan)
Date: Mon, 16 Nov 2015 12:53:11 -0700 (MST)
Subject: [OpenSCAD] Plans to change variable behavior ?
In-Reply-To: <CAGV6i+Mm3VJ5VnP0xAbiBpaOYdWTADOmOGcjg+nAiOna-t8rSQ@mail.gmail.com>
References: <CAEEmnrOS4+mhGgznWejnDBs7RBfoJtX+bM1xnA9KhJ1pOW7NWg@mail.gmail.com>
	<005a01cfd3ec$f9427b20$ebc77160$@web.de>
	<63452311-EAA9-41DC-9D48-6542231A12F5@kintel.net>
	<1411134087043-9719.post@n5.nabble.com>
	<1411135718297-9720.post@n5.nabble.com>
	<CAEEmnrPro6eRVRYajQf_HotZ8Q9BRgjp-JtTmNUqsgb5Y+2rZg@mail.gmail.com>
	<1447594579802-14508.post@n5.nabble.com>
	<1447604220486-14514.post@n5.nabble.com>
	<1447699664757-14556.post@n5.nabble.com>
	<CAGV6i+Mm3VJ5VnP0xAbiBpaOYdWTADOmOGcjg+nAiOna-t8rSQ@mail.gmail.com>
Message-ID: <1447703591094-14567.post@n5.nabble.com>

Doug Moen said:
> rickan, again:
> > I would like to suggest that modules return objects which contain the
> > geometrical object in addition to a user definable, user settable, set
> of
> > key => value pairs, i.e. user definable meta-data the module produces.
> It
> > might make sense that some of the keys would be standard e.g. the key
> for
> > the geometrical object itself, the parameters passed to the call
> including
> > children objects, the coordinate transform matrix of the call, the
> color,
> > etc.; but whether or not that is done, the user should be able to
> augment
> > the set.
> 
> That is pretty much how the OpenSCAD2 design already works.
> I have not made any attempt to define "standard keys", and in the present
> design,
> primitive shapes like the ones returned by cube() and sphere() don't have
> any keys.
> All keys within a geometric object are user defined.
> But otherwise, it works as you have described.
> 
> Here is the section that describes "geometric objects":
> https://github.com/doug-moen/openscad2/blob/master/rfc/Objects.md

It doesn't look that way to me because I only see how parameters are input
to the object, not how the object creates values (meta-data) and stores
them for later use as a result of the module call or object instantiation,
e.g, volume or moment of inertia calculated from the input parameters.

In my code example where the cube() is called inside if{!hollow... if
I were to take that if block and put it in a module or object with all
the required input parameters, I could, in that module, calculate and
store the volume of the cube, it's moment of inertia, and I could store
the color for access and analysis in some other part of my program.




--
View this message in context: http://forum.openscad.org/Plans-to-change-variable-behavior-tp9647p14567.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Mon Nov 16 14:58:31 2015
From: doug at moens.org (doug moen)
Date: Mon, 16 Nov 2015 14:58:31 -0500
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447702022902-14565.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<1447695341735-14548.post@n5.nabble.com>
	<CAGV6i+Mo4=yXXD1F+B5ifpK6ih_B5UixrqcfbrdG-hQXs5jMQg@mail.gmail.com>
	<CAGV6i+Pw4hca_q0F3Rf6T36CkSt7KkOve+A7+f9oNWFVWPhA3w@mail.gmail.com>
	<1447698935535-14553.post@n5.nabble.com>
	<1447702022902-14565.post@n5.nabble.com>
Message-ID: <CAGV6i+P34vsgp5viktWYa=qLUc5hAgOG4MQSoL3pTuz3kVLMHw@mail.gmail.com>

Parkinbot, could you explain your comment "Anyway only ismorphic nonlinear
transformations would make sense."  What will go wrong if a non-isomorphic
transformation is specified?

Isomorphic means that the structure of the geometric object is preserved,
in the sense that there is a reverse transformation that takes the
transformed object back to the original.

I can imagine evil transformations that result in a non-manifold object, or
which cause my smart-remeshing algorithm to go into an infinite loop. I
think we'd want error checking to detect these situations and report an
error.

I'm not sure how to prove that all non-isomorphic transformations are evil.
My math is not as strong as some of the other people on this list. But you
seem to know this as a fact, so how do you know?

On 16 November 2015 at 14:27, Parkinbot <rudolf at parkinbot.com> wrote:

> You are perfectly right!
>
> Anyway only ismorphic nonlinear transformations would make sense. Most of
> them are not isomorphic in a general sense - but might be in a subset, as
> the given examples.
>
> A more general approach for this feature would be to get hands on the mesh
> points, as requested in my topic "feature request: obj2vec(); bug report:
> freeze on standby recovery (Windows)". Then, everyone is free to use his
> own
> mappings even non-isomorphic ones and also responsible if the resulting
> polyhedron will be malformed.
>
> > If it doesn't work sensibly on a cube() primitive, it's highly
> > questionable it ought to be added to OpenSCAD.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Non-Linear-Transformations-tp14539p14565.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151116/d1abd46b/attachment.html>

From rudolf at parkinbot.com  Mon Nov 16 15:04:27 2015
From: rudolf at parkinbot.com (Parkinbot)
Date: Mon, 16 Nov 2015 13:04:27 -0700 (MST)
Subject: [OpenSCAD] feature request: obj2vec();
 bug report: freeze on standby recovery (Windows)
In-Reply-To: <CAGV6i+PD16cxMHcCC3+pSeMS=fJ2QyxNC+Oow8+AO3HFt41Odg@mail.gmail.com>
References: <1447695769058-14549.post@n5.nabble.com>
	<1447699493700-14555.post@n5.nabble.com>
	<CAGV6i+PD16cxMHcCC3+pSeMS=fJ2QyxNC+Oow8+AO3HFt41Odg@mail.gmail.com>
Message-ID: <1447704267839-14569.post@n5.nabble.com>

For sure this theme has been discussed many times before. And I'm fully aware
of the rendering problem. But, as I already suggested, an explicit or (why
not implicit) render() would be the penalty, and as the mesh would be cached
anyway for any following call I guess, one could easily life with it. With
included STLs getting the mesh points wouldn't be much overhead. This might
be a way to safely start implementing this feature. 


doug.moen wrote
> The problem is that operations to query
> the mesh require us to render the shape into a mesh, and this would have
> to
> be done even in preview mode.





--
View this message in context: http://forum.openscad.org/feature-request-obj2vec-bug-report-freeze-on-standby-recovery-Windows-tp14549p14569.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From db5765 at outlook.com  Mon Nov 16 15:18:57 2015
From: db5765 at outlook.com (Trygon)
Date: Mon, 16 Nov 2015 13:18:57 -0700 (MST)
Subject: [OpenSCAD] feature request: obj2vec();
 bug report: freeze on standby recovery (Windows)
In-Reply-To: <1447704267839-14569.post@n5.nabble.com>
References: <1447695769058-14549.post@n5.nabble.com>
	<1447699493700-14555.post@n5.nabble.com>
	<CAGV6i+PD16cxMHcCC3+pSeMS=fJ2QyxNC+Oow8+AO3HFt41Odg@mail.gmail.com>
	<1447704267839-14569.post@n5.nabble.com>
Message-ID: <1447705137758-14570.post@n5.nabble.com>

I agree with Parkinbot that access to the vertex and face data from included
stl files would be useful and should not present any performance issues:

object1=import("object1.stl");
polyhedron(points=object1[0], faces=object1[1]);

?

-Trygon



--
View this message in context: http://forum.openscad.org/feature-request-obj2vec-bug-report-freeze-on-standby-recovery-Windows-tp14549p14570.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Mon Nov 16 15:19:27 2015
From: nop.head at gmail.com (nop head)
Date: Mon, 16 Nov 2015 20:19:27 +0000
Subject: [OpenSCAD] Special Variables
In-Reply-To: <1447695096291-14547.post@n5.nabble.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
	<1447542364679-14488.post@n5.nabble.com>
	<1447543337951-14489.post@n5.nabble.com>
	<1447552442487-14496.post@n5.nabble.com>
	<CAEEmnrOhP0Ckj3ijuX21tD3h0MRX9Dsh_Nn37s_8FtbkGuUNwQ@mail.gmail.com>
	<1447695096291-14547.post@n5.nabble.com>
Message-ID: <CAEEmnrPUXEuhE_mn4D2OFU_Xi8qqiYETEtOUNvR0yssKUkCixw@mail.gmail.com>

The only thing special about them is they have dynamic scope. If you place
them at the file level they do have a global effect. For example setting
$fn at the top of file affects all cylinders, except those that specify it
themselves or those in modules that set it locally. If you have it set to
1000 to get really smooth cylinders but you want some hexagonal prisms you
wouldn't expect setting it locally to six to make all your cylinders
hexagonal.

So special variables have the intended behavior appropriate to settings
like fn. Also if you created you own variable and called a library module
that by coincidence used a variable with the same name you wouldn't want
the surprise of it affecting your variable.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151116/121fdbc0/attachment-0001.html>

From andrew at plumb.org  Mon Nov 16 15:33:18 2015
From: andrew at plumb.org (clothbot)
Date: Mon, 16 Nov 2015 13:33:18 -0700 (MST)
Subject: [OpenSCAD] feature request: obj2vec();
 bug report: freeze on standby recovery (Windows)
In-Reply-To: <1447705137758-14570.post@n5.nabble.com>
References: <1447695769058-14549.post@n5.nabble.com>
	<1447699493700-14555.post@n5.nabble.com>
	<CAGV6i+PD16cxMHcCC3+pSeMS=fJ2QyxNC+Oow8+AO3HFt41Odg@mail.gmail.com>
	<1447704267839-14569.post@n5.nabble.com>
	<1447705137758-14570.post@n5.nabble.com>
Message-ID: <1447705998714-14572.post@n5.nabble.com>

Good idea, but don't overload import() (the module/object call) as a
function.  Make the function something explicitly different like 'read()'.

Andrew.


Trygon wrote
> I agree with Parkinbot that access to the vertex and face data from
> included stl files would be useful and should not present any performance
> issues:
> 
> object1=import("object1.stl");
> polyhedron(points=object1[0], faces=object1[1]);
> 
> ?
> 
> -Trygon





--
View this message in context: http://forum.openscad.org/feature-request-obj2vec-bug-report-freeze-on-standby-recovery-Windows-tp14549p14572.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Mon Nov 16 15:34:11 2015
From: doug at moens.org (doug moen)
Date: Mon, 16 Nov 2015 15:34:11 -0500
Subject: [OpenSCAD] Plans to change variable behavior ?
In-Reply-To: <1447703591094-14567.post@n5.nabble.com>
References: <CAEEmnrOS4+mhGgznWejnDBs7RBfoJtX+bM1xnA9KhJ1pOW7NWg@mail.gmail.com>
	<005a01cfd3ec$f9427b20$ebc77160$@web.de>
	<63452311-EAA9-41DC-9D48-6542231A12F5@kintel.net>
	<1411134087043-9719.post@n5.nabble.com>
	<1411135718297-9720.post@n5.nabble.com>
	<CAEEmnrPro6eRVRYajQf_HotZ8Q9BRgjp-JtTmNUqsgb5Y+2rZg@mail.gmail.com>
	<1447594579802-14508.post@n5.nabble.com>
	<1447604220486-14514.post@n5.nabble.com>
	<1447699664757-14556.post@n5.nabble.com>
	<CAGV6i+Mm3VJ5VnP0xAbiBpaOYdWTADOmOGcjg+nAiOna-t8rSQ@mail.gmail.com>
	<1447703591094-14567.post@n5.nabble.com>
Message-ID: <CAGV6i+Pd2SHr7kr3JcA_N9wP4_GHZBQJF5HXkTu_yK6fSigF1g@mail.gmail.com>

Okay, let me explain how it works.

In OpenSCAD2, an object is delimited by {...}. It may contain definitions,
like 'zm = pl-zi;' from your octant module, and it may contain geometry
statements, like 'translate(..) color(..) cube(..)' from your octant
module. Definitions add key-value pairs to the object, while geometry
statements add geometry.

Now lets consider your octant module:

module octant(){
  for(zi = [0:pl]){
    zm = pl-zi;
    z = zm<1 ? 0 : p[zm-1];
    h = a[zm];
    for(yi = [0:zi]){
      ym = zi-yi;
      y = ym<1 ? 0 : p[ym-1];
      l = a[ym];
      for(xi = [0:yi]){
	xm = yi-xi;
	x = xm<1 ? 0 : p[xm-1];
	w = a[xm];
	if(!hollow || abs(xm+ym-zi) < thick){
	  hv1 = (xm+ym)/m*360+(zm%2)*120;
	  hv = hv1 > 360 ? hv1-360 : hv1;
	  translate([x, y, z]){
	    color(hsv2rgb(hv, .3, 1)){
	      cube([w, l, h], center=false);
	    };
	  };
	}
      }
    }
  }
}

There are lots of {...} object literals in this module, so the result will
be a nested tree of objects.

L0: the top level object contains a list of objects generated by 'for
(zi=...)'
L1: the objects in L0 each contain 3 fields named zm, z, h, plus the
objects generated by 'for (yi=...)'
L2: the objects in L1 each contain 3 fields named ym, y, l, plus the
objects generated by 'for (xi=...)'
L3: the objects in L2 each contain 3 fields xm, x, w, plus zero or one
objects generated by the if, depending on whether the if condition is false
or true.
L4: the optional object in L3 contains 2 fields, hv1, hv, plus the shape
'translate(..) color(..) cube(..)'.

So if I write
    oct = octant();
then 'oct' is a object tree, nested 4 levels deep.
    len(oct) is the number of L1 objects in oct
    oct[0] is the first L1 object in oct
    oct[0].zm is the value of the zm field of oct[0], which is a number

Okay?

On 16 November 2015 at 14:53, rickan <openscad_rmk at kandarian.com> wrote:

> Doug Moen said:
> > rickan, again:
> > > I would like to suggest that modules return objects which contain the
> > > geometrical object in addition to a user definable, user settable, set
> > of
> > > key => value pairs, i.e. user definable meta-data the module produces.
> > It
> > > might make sense that some of the keys would be standard e.g. the key
> > for
> > > the geometrical object itself, the parameters passed to the call
> > including
> > > children objects, the coordinate transform matrix of the call, the
> > color,
> > > etc.; but whether or not that is done, the user should be able to
> > augment
> > > the set.
> >
> > That is pretty much how the OpenSCAD2 design already works.
> > I have not made any attempt to define "standard keys", and in the present
> > design,
> > primitive shapes like the ones returned by cube() and sphere() don't have
> > any keys.
> > All keys within a geometric object are user defined.
> > But otherwise, it works as you have described.
> >
> > Here is the section that describes "geometric objects":
> > https://github.com/doug-moen/openscad2/blob/master/rfc/Objects.md
>
> It doesn't look that way to me because I only see how parameters are input
> to the object, not how the object creates values (meta-data) and stores
> them for later use as a result of the module call or object instantiation,
> e.g, volume or moment of inertia calculated from the input parameters.
>
> In my code example where the cube() is called inside if{!hollow... if
> I were to take that if block and put it in a module or object with all
> the required input parameters, I could, in that module, calculate and
> store the volume of the cube, it's moment of inertia, and I could store
> the color for access and analysis in some other part of my program.
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Plans-to-change-variable-behavior-tp9647p14567.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151116/40d1f92d/attachment.html>

From lboyd at frontiernet.net  Mon Nov 16 15:35:19 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Mon, 16 Nov 2015 13:35:19 -0700 (MST)
Subject: [OpenSCAD] Special Variables
In-Reply-To: <1447695096291-14547.post@n5.nabble.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
	<1447542364679-14488.post@n5.nabble.com>
	<1447543337951-14489.post@n5.nabble.com>
	<1447552442487-14496.post@n5.nabble.com>
	<CAEEmnrOhP0Ckj3ijuX21tD3h0MRX9Dsh_Nn37s_8FtbkGuUNwQ@mail.gmail.com>
	<1447695096291-14547.post@n5.nabble.com>
Message-ID: <1447706119832-14574.post@n5.nabble.com>

Getting back to the original question, the poster was expecting special
variables to be an exception to the scope rules of regular variables. See 
Variable scope
<https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/General#Scope_of_variables> 
.

Variables defined in an outer scope are visible within inner scopes. They
can be given new values within the inner scope, but that new value does not
leak out to an outer scope. This is true for both regular and special
variables.

Regular variables are visible inside modules defined in, or included into,
the local file. They are not visible inside modules loaded with run.

Special variables are also visible inside modules loaded with run.




--
View this message in context: http://forum.openscad.org/Special-Variables-tp14477p14574.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Mon Nov 16 15:50:37 2015
From: nop.head at gmail.com (nop head)
Date: Mon, 16 Nov 2015 20:50:37 +0000
Subject: [OpenSCAD] assemble process question
In-Reply-To: <BAY407-EAS4244E44C1658901772B2EEBAA1E0@phx.gbl>
References: <1447553317238-14497.post@n5.nabble.com>
	<1447558683464-14498.post@n5.nabble.com>
	<CAEEmnrOOoEDxF5jzbTmj7Cv+_1n4-A3sAYxd4VLoco1KRys-yg@mail.gmail.com>
	<BAY407-EAS4244E44C1658901772B2EEBAA1E0@phx.gbl>
Message-ID: <CAEEmnrO7-PPgOZ3FHTsD-zrd=G-O6Q_t60YpHxGWRHANWBw0=w@mail.gmail.com>

Consider a stepper motor. I make a module to draw it and I use translate to
make the origin in the middle of the front face (at the base of the shaft)
and I use rotate to orientate it so the shaft points upwards. So if I just
call the module the motor would appear at the world origin.

Then when I use it in an assembly (say a z motor assembly) I know exactly
where to place it relative to the bracket. I might need to dimension the
bracket to be the right size and have the correct hole for the motor boss
and the correct screw holes, so I have functions in the same file as the
motor to return these values.

The origin of the motor assembly is most natural in the middle of the base
of the motor as that rests on the base of the machine, so in the assembly I
would transfer the motor upwards by its length.

So there are no functions describing connection points programmatically,
just conventions where the origin is. That could be expressed by comments
if necessary but in a lot of cases it is obvious where the origin should be
for easiest placement. For example screws have the origin where they meet
the surface of the material so you don't need to no anything about the head
to place them and of course they point down.

For an example look at mendel90 on github as that is a complex assembly
with many sub assemblies. It is a complete machine right down to the level
of nuts an bolts with everything modelled apart from the wiring.
On Nov 16, 2015 5:21 PM, "whburling" <whburling at outlook.com> wrote:

> Thank you for replying?.much appreciated.
>
>
>
> Here are bits that I pulled from your response:
>
> ?        A top level module draws the complete assy
>
> ?        I don?t have a concept of connection points.
>
> ?        You give each part a sensible origin and orientation to make it
> easy to place
>
> ?        If you need more information, you move it out of a module via a
> function (which can return data).
>
>
>
> If I misunderstood you, then please correct me.
>
>
>
> If my understanding is correct, then I have the following two questions:
>
> ?        Regarding your comment: ?I give each object a sensible origin
> and orientation?.
>
>
>
> I am confused. I can?t figure out how to move the origin where I want it
> to be.  If I could move the origin within each module, then  I could move
> it to the effective center of the attachment point .
>
> Thus the module that assembles all the other modules knows that when each
> is called it at least knows the attachment point will always be at the
> current origin. It will not have orientation information, however, as the
> module being attached has no clue about any other module and hence desired
> orientation is unknown.
>
>
>
>                Its orientation is another matter.
>
>                You suggested a function.  If I understood you, then
> somehow I can tell a function which module to enter to get the data a
> module needs to attach another module to it.
>
>
>
> I do not know how to tell a function how to enter another module??
>
>
>
> bil
>
> *From:* nophead [via OpenSCAD] [mailto:[hidden email]
> <http:///user/SendEmail.jtp?type=node&node=14546&i=0>]
> *Sent:* Sunday, November 15, 2015 5:24 AM
> *To:* whburling <[hidden email]
> <http:///user/SendEmail.jtp?type=node&node=14546&i=1>>
> *Subject:* Re: assemble process question
>
>
>
> I represent sub assemblies with modules that draw a bunch of objects by
> calling other modules that may be smaller sub assemblies, printed parts or
> vitamins like screws. Then a top level module draws the complete assembly.
> I don't have a concept of connection points. I just give each part a
> sensible origin and orientation to make them easy to place. If more
> information is need I export it with functions with names prefixed by the
> name of the object they relate to.
>
> On Nov 15, 2015 3:38 AM, "ctchin" <[hidden email]
> <http:///user/SendEmail.jtp?type=node&node=14504&i=0>> wrote:
>
> An OpenSCAD program doesn't have the concept of multiple objects.
> You could create multiple solids in the rendering space, with different
> colors etc, but they are also just (disjointed) parts of the one object.
>
> Another handicap is that there's no object/solid variable so you can't
> create a data structure with a solid and some data (such as reference
> or attachment point coordinates).
>
> One highly imperfect solution I use is to put each object into a separate
> program with the object generated in a module and its data (attachment
> points, dimensions, movement range etc) into variables.?  And an
> "assembly.scad" which include<> each module and move, rotate each
> object into the proper place using the data from each include.
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/assemble-process-question-tp14497p14498.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=14504&i=1>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=14504&i=2>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
> ------------------------------
>
> *If you reply to this email, your message will be added to the discussion
> below:*
>
> http://forum.openscad.org/assemble-process-question-tp14497p14504.html
>
> To unsubscribe from assemble process question, click here.
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>
> ------------------------------
> View this message in context: RE: assemble process question
> <http://forum.openscad.org/assemble-process-question-tp14497p14546.html>
> Sent from the OpenSCAD mailing list archive <http://forum.openscad.org/>
> at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151116/fafb24e5/attachment-0001.html>

From openscad_rmk at kandarian.com  Mon Nov 16 16:00:49 2015
From: openscad_rmk at kandarian.com (rickan)
Date: Mon, 16 Nov 2015 14:00:49 -0700 (MST)
Subject: [OpenSCAD] Plans to change variable behavior ?
In-Reply-To: <CAGV6i+Pd2SHr7kr3JcA_N9wP4_GHZBQJF5HXkTu_yK6fSigF1g@mail.gmail.com>
References: <63452311-EAA9-41DC-9D48-6542231A12F5@kintel.net>
	<1411134087043-9719.post@n5.nabble.com>
	<1411135718297-9720.post@n5.nabble.com>
	<CAEEmnrPro6eRVRYajQf_HotZ8Q9BRgjp-JtTmNUqsgb5Y+2rZg@mail.gmail.com>
	<1447594579802-14508.post@n5.nabble.com>
	<1447604220486-14514.post@n5.nabble.com>
	<1447699664757-14556.post@n5.nabble.com>
	<CAGV6i+Mm3VJ5VnP0xAbiBpaOYdWTADOmOGcjg+nAiOna-t8rSQ@mail.gmail.com>
	<1447703591094-14567.post@n5.nabble.com>
	<CAGV6i+Pd2SHr7kr3JcA_N9wP4_GHZBQJF5HXkTu_yK6fSigF1g@mail.gmail.com>
Message-ID: <1447707649882-14576.post@n5.nabble.com>

Okay! 
That will work very nicely!



--
View this message in context: http://forum.openscad.org/Plans-to-change-variable-behavior-tp9647p14576.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Mon Nov 16 16:03:57 2015
From: runsun at gmail.com (runsun)
Date: Mon, 16 Nov 2015 14:03:57 -0700 (MST)
Subject: [OpenSCAD] feature request: obj2vec();
 bug report: freeze on standby recovery (Windows)
In-Reply-To: <CAGV6i+PD16cxMHcCC3+pSeMS=fJ2QyxNC+Oow8+AO3HFt41Odg@mail.gmail.com>
References: <1447695769058-14549.post@n5.nabble.com>
	<1447699493700-14555.post@n5.nabble.com>
	<CAGV6i+PD16cxMHcCC3+pSeMS=fJ2QyxNC+Oow8+AO3HFt41Odg@mail.gmail.com>
Message-ID: <1447707837326-14577.post@n5.nabble.com>

doug.moen wrote
> I've talked to Marius about this in the past. His concern is that this
> could have a negative impact on the useability of OpenSCAD, by making F5
> preview just as slow as F6 render. The problem is that operations to query
> the mesh require us to render the shape into a mesh, and this would have
> to
> be done even in preview mode.
> 
> So Marius's answer at the time was, let's replace our CGAL based renderer
> with something much faster before we consider this change.

I can attest to the slower F5 'cos I use polyhedron extensively in my lib. 

On the other hand, this might still be done by providing it as an option,
using
it or not is entirely user's choice. IMO, that would provide a positive
impact
but not negative.



-----

$  Runsun Pan, PhD 

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );

 $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif 






--
View this message in context: http://forum.openscad.org/feature-request-obj2vec-bug-report-freeze-on-standby-recovery-Windows-tp14549p14577.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Mon Nov 16 16:18:22 2015
From: rudolf at parkinbot.com (Parkinbot)
Date: Mon, 16 Nov 2015 14:18:22 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <CAGV6i+P34vsgp5viktWYa=qLUc5hAgOG4MQSoL3pTuz3kVLMHw@mail.gmail.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<1447695341735-14548.post@n5.nabble.com>
	<CAGV6i+Mo4=yXXD1F+B5ifpK6ih_B5UixrqcfbrdG-hQXs5jMQg@mail.gmail.com>
	<CAGV6i+Pw4hca_q0F3Rf6T36CkSt7KkOve+A7+f9oNWFVWPhA3w@mail.gmail.com>
	<1447698935535-14553.post@n5.nabble.com>
	<1447702022902-14565.post@n5.nabble.com>
	<CAGV6i+P34vsgp5viktWYa=qLUc5hAgOG4MQSoL3pTuz3kVLMHw@mail.gmail.com>
Message-ID: <1447708702977-14578.post@n5.nabble.com>

Well, a non-isomorphic map in R?->R? will have singularities (points, lines
or planes) in the sense that more than one points will be mapped to the same
point - so no inverse map can be found. As bijectivity is lost, vertices and
triangles simply might get lost. 
Restricting a non-isomorphic map to a region (partial isomorphism), say to
the unit cube, it might be locally isomorphic as long as the region does not
contain any fix points. 
So if we have a (partial) isomorphism all points (of a region) will be
mapped to separate image points and no merging can occur (numerically yes,
which is still another severe problem). Also triangle orientation will be
mapped in the same sense, as a partial flip of orientation of a triangle
would need a singularity for separation.

But you are right. Proving that a map is a (partial) isomorphism will only
be a first step. Even then, non-intersecting triangles might intersect after
being mapped (think of simply mapping one axis to a vortex like the
Archimedian spiral), and demand some careful post processing.  

To sum it up: Non-linear operations have many pitfalls. 

I guess one could allow for some of them in very specific contexts, like
with extrusion operations. For linear_extrusion() instead of linear scaling
and twisting one could think of nonlinear stepping or allow for a vector
expressing an ordered list of values, which will be used as z-heights, while
scaling and twisting will be done in a linear fashion with equidistant
stepping as it is done now. 






--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14578.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From db5765 at outlook.com  Mon Nov 16 16:37:04 2015
From: db5765 at outlook.com (Trygon)
Date: Mon, 16 Nov 2015 14:37:04 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447695341735-14548.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<1447695341735-14548.post@n5.nabble.com>
Message-ID: <1447709824693-14579.post@n5.nabble.com>

@ctchin you said, "conic: I believe it's actually linear and doable with a
simple multmatrix()", with regard to:

transform(x*z/20 ,y*z/20 ,z)

This transformation would be really useful for a model that I am scripting
at present, I couldn't work out how to do it with multmatrix(), please could
you provide the affine transformation matrix to use.

Thanks,
Trygon




--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14579.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Mon Nov 16 16:44:22 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Mon, 16 Nov 2015 14:44:22 -0700 (MST)
Subject: [OpenSCAD] feature request: obj2vec();
 bug report: freeze on standby recovery (Windows)
In-Reply-To: <1447704267839-14569.post@n5.nabble.com>
References: <1447695769058-14549.post@n5.nabble.com>
	<1447699493700-14555.post@n5.nabble.com>
	<CAGV6i+PD16cxMHcCC3+pSeMS=fJ2QyxNC+Oow8+AO3HFt41Odg@mail.gmail.com>
	<1447704267839-14569.post@n5.nabble.com>
Message-ID: <1447710262930-14580.post@n5.nabble.com>

> an explicit or (why not implicit) render() would be the penalty, and as the
mesh would be cached anyway for any following call I guess, one could easily
life with it.

That cache is only good iif all of the variables used are static; if you are
debugging and changing sizes/tolerances etc, the cache is useless. Hence F5
performance will be BAD.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/feature-request-obj2vec-bug-report-freeze-on-standby-recovery-Windows-tp14549p14580.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Mon Nov 16 16:45:26 2015
From: mschafer at wireframe.biz (Neon22)
Date: Mon, 16 Nov 2015 14:45:26 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447709824693-14579.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<1447695341735-14548.post@n5.nabble.com>
	<1447709824693-14579.post@n5.nabble.com>
Message-ID: <1447710326736-14581.post@n5.nabble.com>

@Doug - This remeshing algorithm was designed specifically for this exact
purpose and worked very well at the time. (1992). May be worth a read:
 - http://www.red3d.com/cwr/papers/1992/df.html




--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14581.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Mon Nov 16 16:52:52 2015
From: doug at moens.org (doug moen)
Date: Mon, 16 Nov 2015 16:52:52 -0500
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447709824693-14579.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<1447695341735-14548.post@n5.nabble.com>
	<1447709824693-14579.post@n5.nabble.com>
Message-ID: <CAGV6i+MD+z5Gf9z=zP+vkkUMPX_=94cznRwboQr7vKvmo4a-1g@mail.gmail.com>

Hi Trygon. Wikipedia uses the term "perspective transformation" for what
you call a conic transformation.

I tried using the perspective transformation matrix from wikipedia in
OpenSCAD and it didn't work, I got a run-time error. Don't remember the
details, it was a while ago. At the time, I concluded that we don't support
arbitrary affine transformations.

If someone has working code, I'd like to see it.

On 16 November 2015 at 16:37, Trygon <db5765 at outlook.com> wrote:

> @ctchin you said, "conic: I believe it's actually linear and doable with a
> simple multmatrix()", with regard to:
>
> transform(x*z/20 ,y*z/20 ,z)
>
> This transformation would be really useful for a model that I am scripting
> at present, I couldn't work out how to do it with multmatrix(), please
> could
> you provide the affine transformation matrix to use.
>
> Thanks,
> Trygon
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Non-Linear-Transformations-tp14539p14579.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151116/c6f5993c/attachment.html>

From doug at moens.org  Mon Nov 16 16:56:59 2015
From: doug at moens.org (doug moen)
Date: Mon, 16 Nov 2015 16:56:59 -0500
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447710326736-14581.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<1447695341735-14548.post@n5.nabble.com>
	<1447709824693-14579.post@n5.nabble.com>
	<1447710326736-14581.post@n5.nabble.com>
Message-ID: <CAGV6i+NgDD_oOzN6jnZycu9R0cHiLXyitHc8ZVqFz_6=uUyhYA@mail.gmail.com>

Oh, nice. This algorithm "removes excess detail in crowded regions where
the surface is contracting", which is more sophisticated than what I
specified.

On 16 November 2015 at 16:45, Neon22 <mschafer at wireframe.biz> wrote:

> @Doug - This remeshing algorithm was designed specifically for this exact
> purpose and worked very well at the time. (1992). May be worth a read:
>  - http://www.red3d.com/cwr/papers/1992/df.html
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Non-Linear-Transformations-tp14539p14581.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151116/95a0e31a/attachment.html>

From marius at kintel.net  Mon Nov 16 17:13:56 2015
From: marius at kintel.net (Marius Kintel)
Date: Mon, 16 Nov 2015 17:13:56 -0500
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <CAGV6i+MD+z5Gf9z=zP+vkkUMPX_=94cznRwboQr7vKvmo4a-1g@mail.gmail.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<1447695341735-14548.post@n5.nabble.com>
	<1447709824693-14579.post@n5.nabble.com>
	<CAGV6i+MD+z5Gf9z=zP+vkkUMPX_=94cznRwboQr7vKvmo4a-1g@mail.gmail.com>
Message-ID: <B47682E9-3DA5-46C5-82E7-5E036C29CA87@kintel.net>

> On Nov 16, 2015, at 16:52 PM, doug moen <doug at moens.org> wrote:
> 
> I tried using the perspective transformation matrix from wikipedia in OpenSCAD and it didn't work, I got a run-time error. Don't remember the details, it was a while ago. At the time, I concluded that we don't support arbitrary affine transformations.
> 
The perspective transformation is not affine. We currently don?t support non-affine transformations because CGAL doesn?t.

 -Marius



From db5765 at outlook.com  Mon Nov 16 17:34:57 2015
From: db5765 at outlook.com (Trygon)
Date: Mon, 16 Nov 2015 15:34:57 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447697373291-14551.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<D10353F6-1ED8-42BA-B68C-60E308A92449@kintel.net>
	<1447697373291-14551.post@n5.nabble.com>
Message-ID: <1447713297913-14585.post@n5.nabble.com>

1) Given that a transform function could be defined in OpenSCAD as:

function transform(v)=let(x=v[0], y=v[1], z=v[2]) [x*z/20, y*z/20, z];

which maps a single vertex to a new position (as per doug.moen: vector in,
vector out), perhaps a better syntax would be:

transform()=[x*z/20, y*z/20, z] { ... }

2) I have been using non affine transformations in my code for a while and
the world has not ended. Yes they do have to be used with care, but are
useful. The main issue is that they can only be used at present when all the
geometry data has been computed directly so that the vertex data is visible.

-Trygon



--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14585.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Mon Nov 16 17:37:35 2015
From: runsun at gmail.com (runsun)
Date: Mon, 16 Nov 2015 15:37:35 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <CAGV6i+MD+z5Gf9z=zP+vkkUMPX_=94cznRwboQr7vKvmo4a-1g@mail.gmail.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<1447695341735-14548.post@n5.nabble.com>
	<1447709824693-14579.post@n5.nabble.com>
	<CAGV6i+MD+z5Gf9z=zP+vkkUMPX_=94cznRwboQr7vKvmo4a-1g@mail.gmail.com>
Message-ID: <1447713455726-14586.post@n5.nabble.com>

doug.moen wrote
> Hi Trygon. Wikipedia uses the term "perspective transformation" for what
> you call a conic transformation.
> 
> I tried using the perspective transformation matrix from wikipedia in
> OpenSCAD and it didn't work, I got a run-time error. Don't remember the
> details, it was a while ago. At the time, I concluded that we don't
> support
> arbitrary affine transformations.
> 
> If someone has working code, I'd like to see it.

What needed is a line-plane intersection function. As shown in the following
fig ( source
<http://www.geom.uiuc.edu/docs/reference/CRC-formulas/node16.html>  ):

<http://forum.openscad.org/file/n14586/img47.gif>  

Let p = a point on P, q= a point on Q. A projective transformation focusing
on point O can be obtained by calculating the intersection of line pO with
plane Q. This is achievable. 






-----

$  Runsun Pan, PhD 

$ libs: doctest , faces ( git ), offline doc ( git ),runscad.py( 1 , 2 , git );

 $ tips: hash( 1 , 2 ), sweep , var , lerp , animGif 






--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14586.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Mon Nov 16 18:58:31 2015
From: mschafer at wireframe.biz (Neon22)
Date: Mon, 16 Nov 2015 16:58:31 -0700 (MST)
Subject: [OpenSCAD] feature request: obj2vec();
 bug report: freeze on standby recovery (Windows)
In-Reply-To: <1447710262930-14580.post@n5.nabble.com>
References: <1447695769058-14549.post@n5.nabble.com>
	<1447699493700-14555.post@n5.nabble.com>
	<CAGV6i+PD16cxMHcCC3+pSeMS=fJ2QyxNC+Oow8+AO3HFt41Odg@mail.gmail.com>
	<1447704267839-14569.post@n5.nabble.com>
	<1447710262930-14580.post@n5.nabble.com>
Message-ID: <1447718311499-14587.post@n5.nabble.com>

IMHO this could easily be mitigated by use of the Render() call.
I.e. if no render call then no context setup for querying.

This way there is no F5 penalty for queries to the mesh if user doesn't
render (),
AND calling render explicitly creates a mesh to be examined.
(Possibly suggetsing an assignment like mesh = render() creates a variable
to be examined)




--
View this message in context: http://forum.openscad.org/feature-request-obj2vec-bug-report-freeze-on-standby-recovery-Windows-tp14549p14587.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Mon Nov 16 19:16:09 2015
From: mschafer at wireframe.biz (Neon22)
Date: Mon, 16 Nov 2015 17:16:09 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447713297913-14585.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<D10353F6-1ED8-42BA-B68C-60E308A92449@kintel.net>
	<1447697373291-14551.post@n5.nabble.com>
	<1447713297913-14585.post@n5.nabble.com>
Message-ID: <1447719369241-14588.post@n5.nabble.com>

I applaud the approach of use mathematical equations to define the curve.
However IMHO we also want to easily support the user making the curve
manually. (current list-comprehensions and paths, lofts not quite easy
enough to use IMHO)

E.g.
A 2D polygon (profile) extruded along its (face) normal by D. Then rotated
around its center by Rz degrees.
Loop this N times to get an extruded "twist" of the profile.
E.g.
Same as above but also rotating Rx each increment around the X axis (on edge
of profile shape).
Changing the above into a twisted arch.
E.g 
Same as above but starting profile is a square and ending profile is a
pentagon.
Changing the above into a more complex mesh.

So critical aspects are:
- Derived normal per iteration, so we tell which direction vector to move
along.
- Looping construct around the outside for N steps. (for)
- Local transformation, so rotating around edge of profile has new
location(globally) but same location(locally) when in middle of the
sequence.
- Ideally a way to interpolate an intermediate shape between two shapes with
different numbers of vertices. 
Either by:
 - sampling the edges intitially and making more intermediate points, then
moving each vertex in linear interp(say) at each step.
 - AND/OR by auto-triangulation when increasing number of vertices.

These are the aspects I would like to see in OpenSCAD, to make it easy to
make many more complex useful objects in an incremental, rather than math
function, way.



--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14588.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rl.ward at bigpond.com  Mon Nov 16 20:21:20 2015
From: rl.ward at bigpond.com (Rob Ward)
Date: Tue, 17 Nov 2015 12:21:20 +1100
Subject: [OpenSCAD] assemble process question
In-Reply-To: <CAEEmnrO7-PPgOZ3FHTsD-zrd=G-O6Q_t60YpHxGWRHANWBw0=w@mail.gmail.com>
References: <1447553317238-14497.post@n5.nabble.com>
	<1447558683464-14498.post@n5.nabble.com>
	<CAEEmnrOOoEDxF5jzbTmj7Cv+_1n4-A3sAYxd4VLoco1KRys-yg@mail.gmail.com>
	<BAY407-EAS4244E44C1658901772B2EEBAA1E0@phx.gbl>
	<CAEEmnrO7-PPgOZ3FHTsD-zrd=G-O6Q_t60YpHxGWRHANWBw0=w@mail.gmail.com>
Message-ID: <564A8110.30801@bigpond.com>


On 17/11/15 07:50, nop head wrote:
>
> Consider a stepper motor. I make a module to draw it and I use 
> translate to make the origin in the middle of the front face (at the 
> base of the shaft) and I use rotate to orientate it so the shaft 
> points upwards. So if I just call the module the motor would appear at 
> the world origin.
>
> Then when I use it in an assembly (say a z motor assembly) I know 
> exactly where to place it relative to the bracket. I might need to 
> dimension the bracket to be the right size and have the correct hole 
> for the motor boss and the correct screw holes, so I have functions in 
> the same file as the motor to return these values.
>
> The origin of the motor assembly is most natural in the middle of the 
> base of the motor as that rests on the base of the machine, so in the 
> assembly I would transfer the motor upwards by its length.
>

That was my 'Eureka' moment designing a stepper motor application, and 
realising that I needed to get the core part of its function (the motor 
spindle) aligned into the simplest build position (centered on an axis) 
with the other parts (geared body and mounting brackets) around it..... 
and then move the whole lot into position after that. I also designed 
the mounting holes and pulleys along the same process, to be later 
positioned exactly as the motor was and know that the "difference" 
mounting holes were going to work!!

eg.... (as a Newbie I hope this not too trivial, or badly written, but 
making my design visually tangible, and conveniently modularised was a 
huge help to me progressing...)

$fn=20;
motor();
//motormount();

module motor(){ //Stepper motor "28BY-J-48"
   color("Goldenrod"){
   translate([0,0,5]) cylinder(10,2.5,2.5,true);//spindle
   translate([0,0,0.5]) cylinder(1,4.5,4.5,true);//spindle base
   translate([0,7.5,0]){
      translate([0,0,-10]) cylinder(20,14,14,true); //body of motor
        difference(){
          translate([0,0,-0.5]) cube([42,7,1],true); //bracket
          translate([17,0,-1]) cylinder(5,d=4.5,true);//mount hole
          translate([-17,0,-1]) cylinder(5,d=4.5,true);//mount hole
        }
     }
   translate([0,0,10]) pulley();
   }
}

module motormount(){
   translate([0,0,3]) cylinder(7,4.5,4.5,true);//spindle base
   translate([17.5,7.5,-1]) cylinder(7,d=2,true);//mount hole
   translate([-17.5,7.5,-1]) cylinder(7,d=2,true);//mount hole
   translate([0,0,-1]) cylinder(15,d=16,true);//gear cutaway
}

module pulley(){
   difference(){
     union(){
       translate([0,0,-5]) cylinder(8,7,7,true);//main outside
       translate([0,0,1]) cylinder(4.1,7,7,true);//main outside
       //ring for O-ring, eg out of the 'click' hose fittings???
       translate([0,0,5 ]){
         cylinder(4,7,3.5,true);
         cylinder(4,3.5,7,true);
         }
       }
     translate([0,0,2]) cylinder(22,2.6,2.6,true);//inner shaft hole
     translate([0,0,-9]) cylinder(2,5,5,true);//Motor base shaft hole
     translate([0,0,-3.5]) rotate([270,0,0]) 
cylinder(10,d=2.5,true);//hole for bolt, taps to a 6BA Bolt
   }
   translate([0,-2.5,0.4]) cube([7,1.5,13.0],true);//flat inside
}


Rob


> So there are no functions describing connection points 
> programmatically, just conventions where the origin is. That could be 
> expressed by comments if necessary but in a lot of cases it is obvious 
> where the origin should be for easiest placement. For example screws 
> have the origin where they meet the surface of the material so you 
> don't need to no anything about the head to place them and of course 
> they point down.
>
> For an example look at mendel90 on github as that is a complex 
> assembly with many sub assemblies. It is a complete machine right down 
> to the level of nuts an bolts with everything modelled apart from the 
> wiring.
>
> On Nov 16, 2015 5:21 PM, "whburling" <whburling at outlook.com 
> <mailto:whburling at outlook.com>> wrote:
>
>     Thank you for replying?.much appreciated.
>
>     Here are bits that I pulled from your response:
>
>     ?A top level module draws the complete assy
>
>     ?I don?t have a concept of connection points.
>
>     ?You give each part a sensible origin and orientation to make it
>     easy to place
>
>     ?If you need more information, you move it out of a module via a
>     function (which can return data).
>
>     If I misunderstood you, then please correct me.
>
>     If my understanding is correct, then I have the following two
>     questions:
>
>     ?Regarding your comment: ?I give each object a sensible origin and
>     orientation?.
>
>     I am confused. I can?t figure out how to move the origin where I
>     want it to be.If I could move the origin within each module, thenI
>     could move it to the effective center of the attachment point .
>
>     Thus the module that assembles all the other modules knows that
>     when each is called it at least knows the attachment point will
>     always be at the current origin. It will not have orientation
>     information, however, as the module being attached has no clue
>     about any other module and hence desired orientation is unknown.
>
>     Its orientation is another matter.
>
>     You suggested a function.If I understood you, then somehow I can
>     tell a function which module to enter to get the data a module
>     needs to attach another module to it.
>
>     I do not know how to tell a function how to enter another module??
>
>     bil
>
>     *From:*nophead [via OpenSCAD] [mailto:[hidden email]
>     <http:///user/SendEmail.jtp?type=node&node=14546&i=0>]
>     *Sent:* Sunday, November 15, 2015 5:24 AM
>     *To:* whburling <[hidden email]
>     <http:///user/SendEmail.jtp?type=node&node=14546&i=1>>
>     *Subject:* Re: assemble process question
>
>     I represent sub assemblies with modules that draw a bunch of
>     objects by calling other modules that may be smaller sub
>     assemblies, printed parts or vitamins like screws. Then a top
>     level module draws the complete assembly. I don't have a concept
>     of connection points. I just give each part a sensible origin and
>     orientation to make them easy to place. If more information is
>     need I export it with functions with names prefixed by the name of
>     the object they relate to.
>
>     On Nov 15, 2015 3:38 AM, "ctchin" <[hidden email]
>     <http:///user/SendEmail.jtp?type=node&node=14504&i=0>> wrote:
>
>         An OpenSCAD program doesn't have the concept of multiple objects.
>         You could create multiple solids in the rendering space, with
>         different
>         colors etc, but they are also just (disjointed) parts of the
>         one object.
>
>         Another handicap is that there's no object/solid variable so
>         you can't
>         create a data structure with a solid and some data (such as
>         reference
>         or attachment point coordinates).
>
>         One highly imperfect solution I use is to put each object into
>         a separate
>         program with the object generated in a module and its data
>         (attachment
>         points, dimensions, movement range etc) into variables.?  And an
>         "assembly.scad" which include<> each module and move, rotate each
>         object into the proper place using the data from each include.
>
>
>
>
>
>         --
>         View this message in context:
>         http://forum.openscad.org/assemble-process-question-tp14497p14498.html
>         Sent from the OpenSCAD mailing list archive at Nabble.com.
>
>         _______________________________________________
>         OpenSCAD mailing list
>         [hidden email]
>         <http:///user/SendEmail.jtp?type=node&node=14504&i=1>
>         http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>     _______________________________________________
>     OpenSCAD mailing list
>     [hidden email] <http:///user/SendEmail.jtp?type=node&node=14504&i=2>
>     http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>     ------------------------------------------------------------------------
>
>     *If you reply to this email, your message will be added to the
>     discussion below:*
>
>     http://forum.openscad.org/assemble-process-question-tp14497p14504.html
>
>
>     To unsubscribe from assemble process question, click here.
>     NAML
>     <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>
>
>
>     ------------------------------------------------------------------------
>     View this message in context: RE: assemble process question
>     <http://forum.openscad.org/assemble-process-question-tp14497p14546.html>
>     Sent from the OpenSCAD mailing list archive
>     <http://forum.openscad.org/> at Nabble.com.
>
>     _______________________________________________
>     OpenSCAD mailing list
>     Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
>     http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151117/f717144f/attachment-0001.html>

From c.t.chin at szu.edu.cn  Mon Nov 16 22:09:11 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Mon, 16 Nov 2015 20:09:11 -0700 (MST)
Subject: [OpenSCAD] assemble process question
In-Reply-To: <BAY407-EAS37526C1BCA7CCCC093DAC83AA1E0@phx.gbl>
References: <1447553317238-14497.post@n5.nabble.com>
	<1447558683464-14498.post@n5.nabble.com>
	<BAY407-EAS37526C1BCA7CCCC093DAC83AA1E0@phx.gbl>
Message-ID: <1447729751821-14590.post@n5.nabble.com>

whburling, your understanding is almost perfect.  

So in blah.scad:



A more involved version, allowing for parametrization:




And nophead's advice is perfectly good.  I always follow a similar practice
in my design, e.g.

http://www.thingiverse.com/thing:1060061

The blad.scad approach is only needed when a project or group of projects
need to share and re-use parts.



--
View this message in context: http://forum.openscad.org/assemble-process-question-tp14497p14590.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Tue Nov 17 00:44:53 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Mon, 16 Nov 2015 22:44:53 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447713297913-14585.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<D10353F6-1ED8-42BA-B68C-60E308A92449@kintel.net>
	<1447697373291-14551.post@n5.nabble.com>
	<1447713297913-14585.post@n5.nabble.com>
Message-ID: <1447739093823-14591.post@n5.nabble.com>

kintel spoted my mistake, x*z is non-affine so, sorry I was wrong on that
point.  I was thinking (I forgot the proper term until doug gave it) about
perspective transformation which can be represented by a 4x4 matrix but not
supported in OpenSCAD. 


But he also gave an important clue why a lot of this is loony ideas:


kintel wrote
> don?t support non-affine transformations because CGAL doesn?t. 

So yes, now that I've been better educated I remember at one point needing
perspective transformation desperately and cursing OpenSCAD for not doing it
for me.  But after some attempts, I switch track to trying to solve my
problem by some ways other than transformation.  Of course there's no
general solution to substituting a general perspective transformation with
legal OpenSCAD commands, but I found a way to do exactly what I wanted to
design at the time, printed it, published it and be done with it. 

I see OpenSCAD as a toy, a fantastic toy (hope no one takes offense).  But
it's not a proper programming language.  If my design involves some complex
math or algorithm, I would rather do the math in a language I normally use
for math and engineering problems.  I have written a ton of codes in Matlab,
C, VC, Java, perl, python, Basic, Fortran and even a few scripting languages
on Unix.  Even if OpenSCAD+ or OpenSCAD2 adopt function pointers (I use them
extensively in Matlab and C), typedef, object/solid handle/pointers, mutable
variables, etc etc.  Things that make OpenSCAD not nearly as convenient as
conventional procedural languages.  It's actually re-assuring OpenSCAD is
handicapped.  It motivates me to keep using the languages I'm familiar with
for math and engineering.  And only use OpenSCAD for 3D (printing) output.  

If another still remember PostScript, I remember learning a tiny of of its
syntax and some commands. I remember being told PostScript can do
"anything".  And I remember tell myself, don't get sucked in, just fix the
thesis (so that the printer can accept it) and graduate and get out of
school.  

In my work, I am making a prototype which involves over a hundred hexagons
arranged in a way based on the geodesic dome.  Now I don't know if it's
possible to realize this hexagonal geodesic in OpenSCAD.  Even if it's
possible I know for sure I can do it faster and more powerful in Matlab, so
I use Matlab to calculate the hexagons, have Matlab generate a module
hexs.scad which contain 100+ hexagonal cylinders.  And then a prototype.scad
that use<hexs.scad> and add the structural support, base, drill holes for
mounting screws and even imprint a logo on the base.  

For my own selfish purpose, I'd rather spend time hacking together a
solution with all the available tools (of which OpenSCAD is but one)
((another being KraGle)) than prodding or telling someone smarter than me
how to do their things my way.  

When I choose a tool, I look not only at its (advertised) features and
functions, I more often make a judgement on the user community + development
team.  OpenJSCAD and various other similar programmatic CAD may have more
powerful features, but OpenSCAD is the only one enjoying a wide(ish) user
base and actively maintained and supported.  And I fear that some of the
radical changes being requested will destroy it.  Not due to technical
merits but human/societal factors.  



--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14591.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Tue Nov 17 03:13:13 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Tue, 17 Nov 2015 01:13:13 -0700 (MST)
Subject: [OpenSCAD] Quicksort
In-Reply-To: <trinity-f316326f-3944-4909-9193-aec5d235ca7b-1447694127777@3capp-gmx-bs71>
References: <1447573013225-14501.post@n5.nabble.com>
	<AA179587-822D-4BD1-81F3-BE3E9018DAA9@kintel.net>
	<1447654363340-14532.post@n5.nabble.com>
	<trinity-83d75b25-e0de-4491-a16a-1a620e09ec98-1447667717365@3capp-gmx-bs71>
	<1447670418861-14536.post@n5.nabble.com>
	<trinity-f316326f-3944-4909-9193-aec5d235ca7b-1447694127777@3capp-gmx-bs71>
Message-ID: <1447747993007-14592.post@n5.nabble.com>

tp3 wrote
> (Or am I misunderstanding the changes you suggest?)

Rather than explain it, I just did it.  If anyone find it unsatisfactory,
undo or refine it.  

https://en.wikibooks.org/w/index.php?title=OpenSCAD_User_Manual/List_Comprehensions&stable=0#Generating_vertices_for_a_polygon

Note I tweaked a couple of the examples.  For further discussion, I think we
have abused this Quicksort thread enough... I'm continuing in my docs
thread.  



--
View this message in context: http://forum.openscad.org/Quicksort-tp14501p14592.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From db5765 at outlook.com  Tue Nov 17 04:23:37 2015
From: db5765 at outlook.com (Trygon)
Date: Tue, 17 Nov 2015 02:23:37 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447708702977-14578.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<1447695341735-14548.post@n5.nabble.com>
	<CAGV6i+Mo4=yXXD1F+B5ifpK6ih_B5UixrqcfbrdG-hQXs5jMQg@mail.gmail.com>
	<CAGV6i+Pw4hca_q0F3Rf6T36CkSt7KkOve+A7+f9oNWFVWPhA3w@mail.gmail.com>
	<1447698935535-14553.post@n5.nabble.com>
	<1447702022902-14565.post@n5.nabble.com>
	<CAGV6i+P34vsgp5viktWYa=qLUc5hAgOG4MQSoL3pTuz3kVLMHw@mail.gmail.com>
	<1447708702977-14578.post@n5.nabble.com>
Message-ID: <1447752217264-14593.post@n5.nabble.com>

The dark art of non affine transformations ;-) :

// Joukowsky airfoil
// circle -> airfoil, using a non affine transformation
// Trygon Nov2015

n=40; // number of facets
s=20; // scale factor
l=250; // wing length
ro=s/40; // offset radius (used to thicken material around trailing edge
cusp)

x=-0.15;
y=0.15;
r=norm([1,0]-[x,y]);

/*
linear_extrude(height=200) offset(r=ro) scale([s,s,s])
    transform()=[x*(x*x+y*y+1)/(x*x+y*y),y*(x*x+y*y-1)/(x*x+y*y)]
    translate([x,y,0]) circle(r,$fn=n);
*/

// manually build vertex set for circle
p1=[for(i=[0:n-1]) let(a=i*360/n) [r*sin(a)+x,r*cos(a)+y]];

// transform vertex set
p2=[for(i=p1) [s*i[0]*(i[0]*i[0]+i[1]*i[1]+1)/(i[0]*i[0]+i[1]*i[1]),
               s*i[1]*(i[0]*i[0]+i[1]*i[1]-1)/(i[0]*i[0]+i[1]*i[1])]];
    
linear_extrude(height=l) offset(r=ro) polygon(p2);




--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14593.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From alan at lxorguk.ukuu.org.uk  Tue Nov 17 05:05:14 2015
From: alan at lxorguk.ukuu.org.uk (Alan Cox)
Date: Tue, 17 Nov 2015 10:05:14 +0000
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447739093823-14591.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<D10353F6-1ED8-42BA-B68C-60E308A92449@kintel.net>
	<1447697373291-14551.post@n5.nabble.com>
	<1447713297913-14585.post@n5.nabble.com>
	<1447739093823-14591.post@n5.nabble.com>
Message-ID: <20151117100514.6b315e27@www.etchedpixels.co.uk>

> For my own selfish purpose, I'd rather spend time hacking together a
> solution with all the available tools (of which OpenSCAD is but one)
> ((another being KraGle)) than prodding or telling someone smarter than me
> how to do their things my way.  
> 

Likewise I mostly use other tools to output OpenSCAD object
representations. Having OpenSCAD to do the grunt work is brilliant and if
- ok when - I need to debug the results of my programs it the UI and the
integration are great. Some stuff I use ImplicitCAD for because OpenSCAD
really can't handle the object, but my choice is definitely OpenSCAD.

I could in theory do it all in OpenSCAD but it would be ugly and probably
I would need to add the ability to bend a 3D object to a path for some of
the stuff I generate.

I'd also rather keep the stranger things I need to do from messing up
OpenSCAD for novices, and losing its friendly, easy to get nature for
beginners - especially non programmers. Lots of people need a beginner 3D
design tool, not many people need tools for generating model railway
carriage shells to match etched brass sides 8)

Alan


From rl.ward at bigpond.com  Tue Nov 17 06:34:25 2015
From: rl.ward at bigpond.com (Rob Ward)
Date: Tue, 17 Nov 2015 22:34:25 +1100
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447752217264-14593.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<1447695341735-14548.post@n5.nabble.com>
	<CAGV6i+Mo4=yXXD1F+B5ifpK6ih_B5UixrqcfbrdG-hQXs5jMQg@mail.gmail.com>
	<CAGV6i+Pw4hca_q0F3Rf6T36CkSt7KkOve+A7+f9oNWFVWPhA3w@mail.gmail.com>
	<1447698935535-14553.post@n5.nabble.com>
	<1447702022902-14565.post@n5.nabble.com>
	<CAGV6i+P34vsgp5viktWYa=qLUc5hAgOG4MQSoL3pTuz3kVLMHw@mail.gmail.com>
	<1447708702977-14578.post@n5.nabble.com>
	<1447752217264-14593.post@n5.nabble.com>
Message-ID: <564B10C1.3020808@bigpond.com>

That is very cool!!!

On 17/11/15 20:23, Trygon wrote:
> The dark art of non affine transformations ;-) :
>
> // Joukowsky airfoil
> // circle -> airfoil, using a non affine transformation
> // Trygon Nov2015
>
> n=40; // number of facets
> s=20; // scale factor
> l=250; // wing length
> ro=s/40; // offset radius (used to thicken material around trailing edge
> cusp)
>
> x=-0.15;
> y=0.15;
> r=norm([1,0]-[x,y]);
>
> /*
> linear_extrude(height=200) offset(r=ro) scale([s,s,s])
>      transform()=[x*(x*x+y*y+1)/(x*x+y*y),y*(x*x+y*y-1)/(x*x+y*y)]
>      translate([x,y,0]) circle(r,$fn=n);
> */
>
> // manually build vertex set for circle
> p1=[for(i=[0:n-1]) let(a=i*360/n) [r*sin(a)+x,r*cos(a)+y]];
>
> // transform vertex set
> p2=[for(i=p1) [s*i[0]*(i[0]*i[0]+i[1]*i[1]+1)/(i[0]*i[0]+i[1]*i[1]),
>                 s*i[1]*(i[0]*i[0]+i[1]*i[1]-1)/(i[0]*i[0]+i[1]*i[1])]];
>      
> linear_extrude(height=l) offset(r=ro) polygon(p2);
>
>
>
>
> --
> View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14593.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>



From db5765 at outlook.com  Tue Nov 17 06:37:01 2015
From: db5765 at outlook.com (Trygon)
Date: Tue, 17 Nov 2015 04:37:01 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <20151117100514.6b315e27@www.etchedpixels.co.uk>
References: <1447686693347-14539.post@n5.nabble.com>
	<D10353F6-1ED8-42BA-B68C-60E308A92449@kintel.net>
	<1447697373291-14551.post@n5.nabble.com>
	<1447713297913-14585.post@n5.nabble.com>
	<1447739093823-14591.post@n5.nabble.com>
	<20151117100514.6b315e27@www.etchedpixels.co.uk>
Message-ID: <1447760221541-14596.post@n5.nabble.com>

Just because a command exists, doesn't mean you have to use it.

If the command transform() existed in OpenSCAD, I wouldn't include it in an
example intended for a beginner, nor would I include multmatrix() which also
has immense geometry mangling capability!

If OpenSCAD was to be made "safe" for beginners, I think the polygon() &
polyhedron() commands would need to be removed for starters, since they
expose vertex data... where would this end?

Books on C programming don't start with pointer arithmetic. In fact
Kernighan & Ritchie state, "Pointers ... [are] a marvelous way to create
impossible-to-understand programs ... however, pointers can also be used to
achieve clarity and simplicity."  I think this sums up the potential of an
OpenSCAD transform() command: powerful, but dangerous if used without care.

-Trygon




--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14596.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Tue Nov 17 07:30:11 2015
From: rudolf at parkinbot.com (Parkinbot)
Date: Tue, 17 Nov 2015 05:30:11 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <20151117100514.6b315e27@www.etchedpixels.co.uk>
References: <1447686693347-14539.post@n5.nabble.com>
	<D10353F6-1ED8-42BA-B68C-60E308A92449@kintel.net>
	<1447697373291-14551.post@n5.nabble.com>
	<1447713297913-14585.post@n5.nabble.com>
	<1447739093823-14591.post@n5.nabble.com>
	<20151117100514.6b315e27@www.etchedpixels.co.uk>
Message-ID: <1447763411906-14597.post@n5.nabble.com>

Having followed this thread now for a while, I can see that obviously many of
us are trying to merge stuff implemented in several languages with OpenSCAD
and vice versa. One might call it loony stuff, but isn't a programming
language meant for being able to do loony stuff, without being loony itself? 

The usual affine (and also some non affine) stuff can also be done with
other CAD programs by people, who love to drag around things with their
mouse. So there is an urgent need for more flexibility in a programming
language. And to be honest, the way functions and loops are expressed in
OpenSCAD is even more loony than in most programming languages that have
crossed my way in 35 years of programming. Prolog seems to be closest to it,
but this code is somehow better readable. I know that declarative
programming has its pros and cons, so please don't understand this as severe
criticism. It has been done great job so far, and a steadily growing
community is a good proof for this. 

But as we are talking here about new features, their impact to the language
and how to use and implement them, it gets more and more clear to me that
OpenSCAD either needs more expressive power in terms of function and include
flexibility or minimum an API-function allowing to access library stuff
implemented in other languages. This service could be started on the basis
of a function prototype allowing for input and output of vectors only (maybe
also for strings) and lead to a steadily growing OpenSCAD automation model
with client and server functionality.
For now people like Kintel and me output .scad files from Matlab or other
high level languages to at least import vectors or other programmatic stuff,
that cannot be expressed in OpenSCAD with reasonable effort. 
I'm currently doing a hard job implementing multidimensional cubic spline
functionality in OpenSCAD, which you get in Matlab with three lines, using
cscvn() or with five lines using 2D cubic splines. My aim is to escape
affinity and to be able to sweep around parametrized 2D-airfoil data in 3D
space and get smooth transitions between different parameter sets, without
having to code it the very hard way, as I have done it in 
http://www.thingiverse.com/thing:900137
<http://www.thingiverse.com/thing:900137>   

This is what I get out of a 7 by 4 vector using spline interpolation to
sweep around circles: 

<http://forum.openscad.org/file/n14597/loony.png> 

Loony stuff, especially when you think about using it n-dimensional for
other shapes like airfoils, gears and so on. But isn't it, what programmers
want to do and why programmers are programmers and not users? 




--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14597.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jon at jonbondy.com  Tue Nov 17 07:46:42 2015
From: jon at jonbondy.com (jon)
Date: Tue, 17 Nov 2015 07:46:42 -0500
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447763411906-14597.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<D10353F6-1ED8-42BA-B68C-60E308A92449@kintel.net>
	<1447697373291-14551.post@n5.nabble.com>
	<1447713297913-14585.post@n5.nabble.com>
	<1447739093823-14591.post@n5.nabble.com>
	<20151117100514.6b315e27@www.etchedpixels.co.uk>
	<1447763411906-14597.post@n5.nabble.com>
Message-ID: <564B21B2.8040104@jonbondy.com>

I love the "organic" sense of the PNG you provided.  While others in 
this group have come up with organic shapes with apparent ease, this is 
one area where I struggle.  I look forward to learning more about the 
tools you are using and creating.

Thank you!

Jon

On 11/17/2015 7:30 AM, Parkinbot wrote:
> Having followed this thread now for a while, I can see that obviously many of
> us are trying to merge stuff implemented in several languages with OpenSCAD
> and vice versa. One might call it loony stuff, but isn't a programming
> language meant for being able to do loony stuff, without being loony itself?
>
> The usual affine (and also some non affine) stuff can also be done with
> other CAD programs by people, who love to drag around things with their
> mouse. So there is an urgent need for more flexibility in a programming
> language. And to be honest, the way functions and loops are expressed in
> OpenSCAD is even more loony than in most programming languages that have
> crossed my way in 35 years of programming. Prolog seems to be closest to it,
> but this code is somehow better readable. I know that declarative
> programming has its pros and cons, so please don't understand this as severe
> criticism. It has been done great job so far, and a steadily growing
> community is a good proof for this.
>
> But as we are talking here about new features, their impact to the language
> and how to use and implement them, it gets more and more clear to me that
> OpenSCAD either needs more expressive power in terms of function and include
> flexibility or minimum an API-function allowing to access library stuff
> implemented in other languages. This service could be started on the basis
> of a function prototype allowing for input and output of vectors only (maybe
> also for strings) and lead to a steadily growing OpenSCAD automation model
> with client and server functionality.
> For now people like Kintel and me output .scad files from Matlab or other
> high level languages to at least import vectors or other programmatic stuff,
> that cannot be expressed in OpenSCAD with reasonable effort.
> I'm currently doing a hard job implementing multidimensional cubic spline
> functionality in OpenSCAD, which you get in Matlab with three lines, using
> cscvn() or with five lines using 2D cubic splines. My aim is to escape
> affinity and to be able to sweep around parametrized 2D-airfoil data in 3D
> space and get smooth transitions between different parameter sets, without
> having to code it the very hard way, as I have done it in
> http://www.thingiverse.com/thing:900137
> <http://www.thingiverse.com/thing:900137>
>
> This is what I get out of a 7 by 4 vector using spline interpolation to
> sweep around circles:
>
> <http://forum.openscad.org/file/n14597/loony.png>
>
> Loony stuff, especially when you think about using it n-dimensional for
> other shapes like airfoils, gears and so on. But isn't it, what programmers
> want to do and why programmers are programmers and not users?
>
>
>
>
> --
> View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14597.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
> -----
> No virus found in this message.
> Checked by AVG - www.avg.com
> Version: 2016.0.7227 / Virus Database: 4457/11015 - Release Date: 11/17/15
>
>



From andrew at plumb.org  Tue Nov 17 09:01:12 2015
From: andrew at plumb.org (clothbot)
Date: Tue, 17 Nov 2015 07:01:12 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447760221541-14596.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<D10353F6-1ED8-42BA-B68C-60E308A92449@kintel.net>
	<1447697373291-14551.post@n5.nabble.com>
	<1447713297913-14585.post@n5.nabble.com>
	<1447739093823-14591.post@n5.nabble.com>
	<20151117100514.6b315e27@www.etchedpixels.co.uk>
	<1447760221541-14596.post@n5.nabble.com>
Message-ID: <1447768872557-14599.post@n5.nabble.com>

Trygon wrote
> Just because a command exists, doesn't mean you have to use it.
> 
> If the command transform() existed in OpenSCAD, I wouldn't include it in
> an example intended for a beginner, nor would I include multmatrix() which
> also has immense geometry mangling capability!

I disagree, but with the qualification that translate(), rotate(), scale(),
mirror() and multmatrix() should be introduced in the context of forward
kinematics (see https://en.wikipedia.org/wiki/Forward_kinematics).

Side note:  We *really* need a matrix inverse() function for completeness. 
The eigen3 library which OpenSCAD makes use of has matrix inverse functions
(see
http://eigen.tuxfamily.org/dox/classEigen_1_1MatrixBase.html#aa2834da4c855fa35fed8c4030f79f9da),
along with other useful things like plane-to-plane intersection (see
http://eigen.tuxfamily.org/dox/classEigen_1_1Hyperplane.html#ad10ca15c93ee4d825f92a2c4563ed678).

The scale(), rotate(), mirror() and translate() operators can be thought of
as "convenience wrappers" for the general-purpose multmatrix() operator.  I
find multi-axis rotate() operations are easier to get a handle on if you
understand the order in which successive matrix multiplications are
happening -
https://github.com/openscad/openscad/blob/master/src/transform.cc#L119 - but
more often than not I'll break them up into explicit, single-axis rotate()
operations to keep track of where things are going.

Andrew.




--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14599.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From whburling at outlook.com  Tue Nov 17 15:29:07 2015
From: whburling at outlook.com (whburling)
Date: Tue, 17 Nov 2015 13:29:07 -0700 (MST)
Subject: [OpenSCAD] Special Variables
In-Reply-To: <CAEEmnrOhP0Ckj3ijuX21tD3h0MRX9Dsh_Nn37s_8FtbkGuUNwQ@mail.gmail.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
	<1447542364679-14488.post@n5.nabble.com>
	<1447543337951-14489.post@n5.nabble.com>
	<1447552442487-14496.post@n5.nabble.com>
	<CAEEmnrOhP0Ckj3ijuX21tD3h0MRX9Dsh_Nn37s_8FtbkGuUNwQ@mail.gmail.com>
Message-ID: <1447792147400-14601.post@n5.nabble.com>

ok.....after reading your comments and trying out code offered in this thread
and in writing my own code I came to conclude the following. If i have
incorrect understanding, please correct.

(1)  there are no variables in openSCAD
(2)  there are only constants.
(3)  constants have two scopes
       (a) if standard constant, the constant value is local to a given
module or function
       (b) if special constants, the value is observable by all called
modules and functions, regardless of  whether they were defined in the same
file as called or in some external file that was "included" or referenced
through "use"
(4)  the constants are defined at compile time.  there is no "dynamic"
aspect in that they can be redefined at run time.
(5) there is no way to extract data local to modules as they have no return
value and openSCAD does not have global values
(6) I am uncertain if functions can be written exactly as modules with the
ability to return a value unrelated to any passed parameter or any special
variable.  I am finding out that I do not understand how to "return" an
arbitrary value.




--
View this message in context: http://forum.openscad.org/Special-Variables-tp14477p14601.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From stempeldergeschichte at googlemail.com  Tue Nov 17 15:35:24 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Tue, 17 Nov 2015 21:35:24 +0100
Subject: [OpenSCAD] make an object hollow with constant wall thickness
In-Reply-To: <1447701782413-14564.post@n5.nabble.com>
References: <1446377779240-14255.post@n5.nabble.com>
	<1447587433209-14507.post@n5.nabble.com>
	<1447700381720-14561.post@n5.nabble.com>
	<1447700651271-14562.post@n5.nabble.com>
	<1447701782413-14564.post@n5.nabble.com>
Message-ID: <CAJgOqAA2nrpFfdWgq5XKmVg-hZWtMC_43C6ZOXWoz16kjBe30w@mail.gmail.com>

Please note that in your program x is defined as 2 in all the code.
Openscad makes one pass through the code to process all the variabes.
Then it writes all the geometry in a CSG-tree.
For your code example this is:

group() {
    difference() {
        cube(size = [48, 48, 100], center = false);
        multmatrix([[1, 0, 0, 1], [0, 1, 0, 1], [0, 0, 1, 0], [0, 0, 0,
1]]) {
            cube(size = [48, 48, 100], center = false);
        }
    }
}

Then it sends this CSG-tree to the , CGAL <http://cgal.org>

2015-11-16 20:23 GMT+01:00 plasticmonk <deurer at rocketmail.com>:

> @peter, i understand the small number now but in general its not the
> solution
> im looking for. let me refrase the qusetion:
>
> difference(){
>
> cube([50-x,50-x,100]);
>     x=2;
>     translate([x/2,x/2,0])
> cube([50-x,50-x,100]);
> }
>
> if I could make it work that the 2nd cube gets another x value then the
> 1st,
> i could reuse the same code for the inner and the outer object. Because we
> are talking about a very complex object, this would help me a lot.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/make-an-object-hollow-with-constant-wall-thickness-tp14255p14564.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151117/486289e7/attachment.html>

From stempeldergeschichte at googlemail.com  Tue Nov 17 15:42:48 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Tue, 17 Nov 2015 21:42:48 +0100
Subject: [OpenSCAD] make an object hollow with constant wall thickness
In-Reply-To: <CAJgOqAA2nrpFfdWgq5XKmVg-hZWtMC_43C6ZOXWoz16kjBe30w@mail.gmail.com>
References: <1446377779240-14255.post@n5.nabble.com>
	<1447587433209-14507.post@n5.nabble.com>
	<1447700381720-14561.post@n5.nabble.com>
	<1447700651271-14562.post@n5.nabble.com>
	<1447701782413-14564.post@n5.nabble.com>
	<CAJgOqAA2nrpFfdWgq5XKmVg-hZWtMC_43C6ZOXWoz16kjBe30w@mail.gmail.com>
Message-ID: <CAJgOqAB6ASMzjSN_ho-3CRQ=nGCqVEgBnCfLFtqk9KpUZjfbyQ@mail.gmail.com>

Please note that in your program x is defined as 2 in all the code.
Openscad makes one pass through the code to process all the variabes.
Then it resolves all the variables and calculations and  writes all the
geometry in a CSG-tree.
For your code example this is:
(

group() {
    difference() {
        cube(size = [48, 48, 100], center = false);
        multmatrix([[1, 0, 0, 1], [0, 1, 0, 1], [0, 0, 1, 0], [0, 0, 0,
1]]) {
            cube(size = [48, 48, 100], center = false);
        }
    }
}

Then it sends this CSG-tree to the , CGAL <http://cgal.org>
engine to render. This last step is what takes so long.

So optimising the calculations in your code is almost always not effective.
The time to calculate the 3d-mesh takes way longer.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151117/b71bf2db/attachment.html>

From stempeldergeschichte at googlemail.com  Tue Nov 17 15:45:52 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Tue, 17 Nov 2015 21:45:52 +0100
Subject: [OpenSCAD] How to chage the language?
Message-ID: <CAJgOqABeb6u2XNPM-k42jrVOMQkdLDRvfcr_r=kwWmz2AphH7g@mail.gmail.com>

I installed OpenSCAD recently on a new computer and now everything is in
German.
Does anybody know how I can revert back to English?

Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151117/3cdd08b1/attachment.html>

From Torsten.Paul at gmx.de  Tue Nov 17 15:56:26 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Tue, 17 Nov 2015 21:56:26 +0100
Subject: [OpenSCAD] How to chage the language?
In-Reply-To: <CAJgOqABeb6u2XNPM-k42jrVOMQkdLDRvfcr_r=kwWmz2AphH7g@mail.gmail.com>
References: <CAJgOqABeb6u2XNPM-k42jrVOMQkdLDRvfcr_r=kwWmz2AphH7g@mail.gmail.com>
Message-ID: <564B947A.1050309@gmx.de>

On 11/17/2015 09:45 PM, Peter Falke wrote:
> I installed OpenSCAD recently on a new computer and now everything
> is in German.
> Does anybody know how I can revert back to English?
> 
Localization can be disabled in Preferences / Advanced.

ciao,
  Torsten.



From nop.head at gmail.com  Tue Nov 17 16:46:24 2015
From: nop.head at gmail.com (nop head)
Date: Tue, 17 Nov 2015 21:46:24 +0000
Subject: [OpenSCAD] Special Variables
In-Reply-To: <1447792147400-14601.post@n5.nabble.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
	<1447542364679-14488.post@n5.nabble.com>
	<1447543337951-14489.post@n5.nabble.com>
	<1447552442487-14496.post@n5.nabble.com>
	<CAEEmnrOhP0Ckj3ijuX21tD3h0MRX9Dsh_Nn37s_8FtbkGuUNwQ@mail.gmail.com>
	<1447792147400-14601.post@n5.nabble.com>
Message-ID: <CAEEmnrM8aZOEuU1vod0G_KT4zYYskPRutZ69U5SFQ-z5fC6gPA@mail.gmail.com>

All pretty much true except the is no run time in OpenSCAD. The source code
is compiled into geometry, not executable code that runs.

Functions are simply reusable expressions that yield a value. It can be as
arbitrary as you want or it can depend on passed parameters or any named
constants that are in scope.

function fred() = 42;

The are not like modules with return values at all.
On Nov 17, 2015 8:30 PM, "whburling" <whburling at outlook.com> wrote:

> ok.....after reading your comments and trying out code offered in this
> thread
> and in writing my own code I came to conclude the following. If i have
> incorrect understanding, please correct.
>
> (1)  there are no variables in openSCAD
> (2)  there are only constants.
> (3)  constants have two scopes
>        (a) if standard constant, the constant value is local to a given
> module or function
>        (b) if special constants, the value is observable by all called
> modules and functions, regardless of  whether they were defined in the same
> file as called or in some external file that was "included" or referenced
> through "use"
> (4)  the constants are defined at compile time.  there is no "dynamic"
> aspect in that they can be redefined at run time.
> (5) there is no way to extract data local to modules as they have no return
> value and openSCAD does not have global values
> (6) I am uncertain if functions can be written exactly as modules with the
> ability to return a value unrelated to any passed parameter or any special
> variable.  I am finding out that I do not understand how to "return" an
> arbitrary value.
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Special-Variables-tp14477p14601.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151117/2edf6249/attachment.html>

From hmbright at fastmail.com  Tue Nov 17 21:30:30 2015
From: hmbright at fastmail.com (donbright)
Date: Tue, 17 Nov 2015 19:30:30 -0700 (MST)
Subject: [OpenSCAD] openscad + stl almost unusable?
In-Reply-To: <1447780387122-14600.post@n5.nabble.com>
References: <1447502944521-14472.post@n5.nabble.com>
	<1447700248321-14560.post@n5.nabble.com>
	<1447780387122-14600.post@n5.nabble.com>
Message-ID: <1447813830831-14607.post@n5.nabble.com>

If you would be willing to post some example .scad to
http://github.com/openscad/openscad/issues it would likely be most helpful
and appreciated. The simpler the example that exhibits the flaw, the more
helpful. 



--
View this message in context: http://forum.openscad.org/openscad-stl-almost-unusable-tp14472p14607.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Tue Nov 17 21:31:01 2015
From: doug at moens.org (doug moen)
Date: Tue, 17 Nov 2015 21:31:01 -0500
Subject: [OpenSCAD] Special Variables
In-Reply-To: <1447792147400-14601.post@n5.nabble.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
	<1447542364679-14488.post@n5.nabble.com>
	<1447543337951-14489.post@n5.nabble.com>
	<1447552442487-14496.post@n5.nabble.com>
	<CAEEmnrOhP0Ckj3ijuX21tD3h0MRX9Dsh_Nn37s_8FtbkGuUNwQ@mail.gmail.com>
	<1447792147400-14601.post@n5.nabble.com>
Message-ID: <CAGV6i+NM+r4sRck6cdx8ex3pSzk51vJsTwDtJnhT=YDBP4Z1qw@mail.gmail.com>

Everything you say is correct (although different people use different
terminology for the same things). As for point #6, the answer is no,
functions don't do that. The value returned by a function is a mathematical
function of its arguments (hence the name*), but functions can also depend
on special variables, as you say.

(*) It might be fair to say that OpenSCAD is executable mathematics for
describing geometry, rather than a conventional programming language.
Mathematics has things called 'variables' which resemble the things we call
variables in OpenSCAD. You prefer to use the term 'constant', and I
understand why.

On 17 November 2015 at 15:29, whburling <whburling at outlook.com> wrote:

> ok.....after reading your comments and trying out code offered in this
> thread
> and in writing my own code I came to conclude the following. If i have
> incorrect understanding, please correct.
>
> (1)  there are no variables in openSCAD
> (2)  there are only constants.
> (3)  constants have two scopes
>        (a) if standard constant, the constant value is local to a given
> module or function
>        (b) if special constants, the value is observable by all called
> modules and functions, regardless of  whether they were defined in the same
> file as called or in some external file that was "included" or referenced
> through "use"
> (4)  the constants are defined at compile time.  there is no "dynamic"
> aspect in that they can be redefined at run time.
> (5) there is no way to extract data local to modules as they have no return
> value and openSCAD does not have global values
> (6) I am uncertain if functions can be written exactly as modules with the
> ability to return a value unrelated to any passed parameter or any special
> variable.  I am finding out that I do not understand how to "return" an
> arbitrary value.
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Special-Variables-tp14477p14601.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151117/2cc0db3b/attachment-0001.html>

From marius at kintel.net  Tue Nov 17 22:54:48 2015
From: marius at kintel.net (kintel)
Date: Tue, 17 Nov 2015 20:54:48 -0700 (MST)
Subject: [OpenSCAD] openscad + stl almost unusable?
In-Reply-To: <1447502944521-14472.post@n5.nabble.com>
References: <1447502944521-14472.post@n5.nabble.com>
Message-ID: <1447818888153-14609.post@n5.nabble.com>

This sounds very much like an instance of this issue, from the FAQ:

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/FAQ#Why_is_my_imported_STL_file_only_showing_up_with_F5_but_not_F6.3F

 -Marius



--
View this message in context: http://forum.openscad.org/openscad-stl-almost-unusable-tp14472p14609.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Tue Nov 17 22:58:45 2015
From: marius at kintel.net (Marius Kintel)
Date: Tue, 17 Nov 2015 22:58:45 -0500
Subject: [OpenSCAD] How to chage the language?
In-Reply-To: <564B947A.1050309@gmx.de>
References: <CAJgOqABeb6u2XNPM-k42jrVOMQkdLDRvfcr_r=kwWmz2AphH7g@mail.gmail.com>
	<564B947A.1050309@gmx.de>
Message-ID: <B6D0ADFD-F79C-42D9-83C0-2F82B69A71F0@kintel.net>

> On Nov 17, 2015, at 15:56 PM, Torsten Paul <Torsten.Paul at gmx.de> wrote:
>> 
> Localization can be disabled in Preferences / Advanced.
> 
Also, we should pick up your preferred localization from the OS. If that doesn?t work, I think it would be considered a bug.

 -Marius



From c.t.chin at szu.edu.cn  Tue Nov 17 23:28:42 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Tue, 17 Nov 2015 21:28:42 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447763411906-14597.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<D10353F6-1ED8-42BA-B68C-60E308A92449@kintel.net>
	<1447697373291-14551.post@n5.nabble.com>
	<1447713297913-14585.post@n5.nabble.com>
	<1447739093823-14591.post@n5.nabble.com>
	<20151117100514.6b315e27@www.etchedpixels.co.uk>
	<1447763411906-14597.post@n5.nabble.com>
Message-ID: <1447820922861-14611.post@n5.nabble.com>

Parkinbot wrote
> Having followed this thread now for a while, I can see that obviously many
> of us are trying to merge stuff implemented in several languages with
> OpenSCAD and vice versa. One might call it loony stuff, but isn't a
> programming language meant for being able to do loony stuff, without being
> loony itself? 
> ...
> Loony stuff, especially when you think about using it n-dimensional for
> other shapes like airfoils, gears and so on. But isn't it, what
> programmers want to do and why programmers are programmers and not users?

Well not un-deliberately, my wording loony was a bit vague.  I love the NACA
you created and Joukowski (that's how my fluid mech book spells it) airfoil
Trygon created.  My point about loony isn't about amazing and beautiful
things that the users created (or better: may create) but too often some
users have some vague idea and expect OTHER people to do the hard work for
them.  

In general conformal mapping is a powerful branch of math that make some
very useful shapes.  

Especially you and Trygon's code showed the existing OpenSCAD commands are
powerful enough if only more people put some hard work into it.  I'd invite
you to put some of your code into a library that I'm advocating.  

Now yes... you have been convincing there are room to expand some sort of
distortion, transformation or something in OpenSCAD (like I hinted at, I've
been frustrated with it myself).  But I'm not sure you have been convincing
enough that the core team should take on this task as priority, soon.  

OpenSCAD is open source, there's an open invitation on the main website to
add new features.  This "debate" would be a lot more substantial if someone
create a new transformation and make a pitch that it should be included into
the main branch.  

After seeing some substantive response to the "loony" challenge... I was
thinking how to enable some of the "loony" ideas to progress without
unwanted side-effects.  The answer seems obvious, create a plug-in
interface.  

Surely it has been requested and discussed before... browsing the issues on
github... am I seeing it right?  It's not been posted as a new feature
request? Wonder if I should open a new thread on it...




--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14611.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Tue Nov 17 23:36:19 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Tue, 17 Nov 2015 21:36:19 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447763411906-14597.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<D10353F6-1ED8-42BA-B68C-60E308A92449@kintel.net>
	<1447697373291-14551.post@n5.nabble.com>
	<1447713297913-14585.post@n5.nabble.com>
	<1447739093823-14591.post@n5.nabble.com>
	<20151117100514.6b315e27@www.etchedpixels.co.uk>
	<1447763411906-14597.post@n5.nabble.com>
Message-ID: <1447821379812-14612.post@n5.nabble.com>

Parkinbot wrote
> a hard job implementing multidimensional cubic spline functionality in
> OpenSCAD, which you get in Matlab with three lines, using cscvn() or with
> five lines using 2D cubic splines.  

Totally beside the point: two months ago I challenged my grad student to
create a parametric model of a branching blood vessel on the 3D printer. 
There's no progress so I pretty much forgot about it.  

But your response to my "loony" charge gave me some crucial hints, I think I
can figure out the break-thru and the student can do the rest.  Hopefully I
will hold a model in my hands by Monday.

Thanks!




--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14612.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Wed Nov 18 01:43:18 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Tue, 17 Nov 2015 23:43:18 -0700 (MST)
Subject: [OpenSCAD] Improving the doc
In-Reply-To: <CAGV6i+OAk7VxK3OyLOqs-RD1XwDLZWdH4As5qStGdnPrUcat1A@mail.gmail.com>
References: <1447132878960-14333.post@n5.nabble.com>
	<1447302102462-14388.post@n5.nabble.com>
	<CAGV6i+OAk7VxK3OyLOqs-RD1XwDLZWdH4As5qStGdnPrUcat1A@mail.gmail.com>
Message-ID: <1447828998302-14613.post@n5.nabble.com>

Thanks for the positive feedback(s).  I am pushing on with the assumption
that someone knowledgeable is keeping at least half an eye open.  

Getting bolder, I have actually change an example code:

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language#rotate

The old code was updated to exploit the (not even that recently) added
functions norm() and atan2().





--
View this message in context: http://forum.openscad.org/Improving-the-doc-tp14333p14613.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From stempeldergeschichte at googlemail.com  Wed Nov 18 02:13:49 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Wed, 18 Nov 2015 08:13:49 +0100
Subject: [OpenSCAD] How to chage the language?
In-Reply-To: <B6D0ADFD-F79C-42D9-83C0-2F82B69A71F0@kintel.net>
References: <CAJgOqABeb6u2XNPM-k42jrVOMQkdLDRvfcr_r=kwWmz2AphH7g@mail.gmail.com>
	<564B947A.1050309@gmx.de>
	<B6D0ADFD-F79C-42D9-83C0-2F82B69A71F0@kintel.net>
Message-ID: <CAJgOqAA-gDeRkNPB36tGtzGuz5HVMBjG5UsfEfi7BPXMsdUEtw@mail.gmail.com>

Thanks, Torsten, I found it and changes it back.

Marius, it did pick up the localization from the OS (win 7). It just wasn't
what I like for Openscad.

2015-11-18 4:58 GMT+01:00 Marius Kintel <marius at kintel.net>:

> > On Nov 17, 2015, at 15:56 PM, Torsten Paul <Torsten.Paul at gmx.de> wrote:
> >>
> > Localization can be disabled in Preferences / Advanced.
> >
> Also, we should pick up your preferred localization from the OS. If that
> doesn?t work, I think it would be considered a bug.
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151118/5db554ec/attachment.html>

From db5765 at outlook.com  Wed Nov 18 03:58:42 2015
From: db5765 at outlook.com (Trygon)
Date: Wed, 18 Nov 2015 01:58:42 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447820922861-14611.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<D10353F6-1ED8-42BA-B68C-60E308A92449@kintel.net>
	<1447697373291-14551.post@n5.nabble.com>
	<1447713297913-14585.post@n5.nabble.com>
	<1447739093823-14591.post@n5.nabble.com>
	<20151117100514.6b315e27@www.etchedpixels.co.uk>
	<1447763411906-14597.post@n5.nabble.com>
	<1447820922861-14611.post@n5.nabble.com>
Message-ID: <1447837122876-14615.post@n5.nabble.com>

The dark art of non affine transformations part II - Art (?) :

// this does not actually work, there is no transform() command at present!
transform()=let(sf1=1+sin(12*atan2(y,x))/8, sf2=2+cos(z*1.1+70))
    [x*sf1*sf2, y*sf1*sf2, z] cylinder(h=300, r=50, center=true, $fn=240);

-Trygon

<http://forum.openscad.org/file/n14615/TransformArt.png> 



--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14615.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From db5765 at outlook.com  Wed Nov 18 04:28:19 2015
From: db5765 at outlook.com (Trygon)
Date: Wed, 18 Nov 2015 02:28:19 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447837122876-14615.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<D10353F6-1ED8-42BA-B68C-60E308A92449@kintel.net>
	<1447697373291-14551.post@n5.nabble.com>
	<1447713297913-14585.post@n5.nabble.com>
	<1447739093823-14591.post@n5.nabble.com>
	<20151117100514.6b315e27@www.etchedpixels.co.uk>
	<1447763411906-14597.post@n5.nabble.com>
	<1447820922861-14611.post@n5.nabble.com>
	<1447837122876-14615.post@n5.nabble.com>
Message-ID: <1447838899034-14616.post@n5.nabble.com>

The same non affine transformation applied to a different solid:

// this does not actually work, there is no transform() command at present!
transform()=let(sf1=1+sin(12*atan2(y,x))/8, sf2=2+cos(z*1.1+70))
    [x*sf1*sf2, y*sf1*sf2, z] cube(size=[100, 100, 300], center=true);

<http://forum.openscad.org/file/n14616/TransformArt2.png> 



--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14616.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From R.E.Wolff at BitWizard.nl  Wed Nov 18 04:42:47 2015
From: R.E.Wolff at BitWizard.nl (rew)
Date: Wed, 18 Nov 2015 02:42:47 -0700 (MST)
Subject: [OpenSCAD] OpenScad 3D performance.
In-Reply-To: <5648F7F2.2070001@gmx.de>
References: <1447583329754-14505.post@n5.nabble.com> <56489C2E.4090204@gmx.de>
	<1447611329624-14516.post@n5.nabble.com>
	<1447618521531-14519.post@n5.nabble.com> <5648F7F2.2070001@gmx.de>
Message-ID: <1447839767889-14617.post@n5.nabble.com>

Hi Torsten, 

Yes, that's with QT 4.8.6. 

Other hint.... After "rendering" the performance of the QT5 compiled version
is great. 

Remember me saying that the trusty version was acceptable, well this is much
much better! I now have a simple model that shows the "seconds of delays"
behavior in preview mode, acceptable performance in the old version, and
great performance after being "rendered". 





--
View this message in context: http://forum.openscad.org/OpenScad-3D-performance-tp14505p14617.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Wed Nov 18 07:17:25 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Wed, 18 Nov 2015 05:17:25 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447838899034-14616.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<D10353F6-1ED8-42BA-B68C-60E308A92449@kintel.net>
	<1447697373291-14551.post@n5.nabble.com>
	<1447713297913-14585.post@n5.nabble.com>
	<1447739093823-14591.post@n5.nabble.com>
	<20151117100514.6b315e27@www.etchedpixels.co.uk>
	<1447763411906-14597.post@n5.nabble.com>
	<1447820922861-14611.post@n5.nabble.com>
	<1447837122876-14615.post@n5.nabble.com>
	<1447838899034-14616.post@n5.nabble.com>
Message-ID: <1447849045665-14618.post@n5.nabble.com>

You could also do  some nice things without non-affine transformation.  

Thanks to the warm discussion, I spent my day (not quite 7 hours of coding)
making the blood vessel I wanted 2 months ago.  Sometimes all it take is
some determination.  

~80 lines of code (with comments) gave me what I needed, without even
resorting to Matlab. 

Pushing 200 lines of code if I kept all the debugging/evolving codes in
place.  Note that the pipe diameter changes along the pipe length, the wall
thickness is very nearly uniform.  

Plus now I have a new library for making cylinders and pipes along an
arbitrary (but not too crazy) curve. 

<http://forum.openscad.org/file/n14618/bifurcation.jpg> 
<http://forum.openscad.org/file/n14618/bifurcation-cutaway.jpg> 




--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14618.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Wed Nov 18 09:13:33 2015
From: doug at moens.org (doug moen)
Date: Wed, 18 Nov 2015 09:13:33 -0500
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447838899034-14616.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<D10353F6-1ED8-42BA-B68C-60E308A92449@kintel.net>
	<1447697373291-14551.post@n5.nabble.com>
	<1447713297913-14585.post@n5.nabble.com>
	<1447739093823-14591.post@n5.nabble.com>
	<20151117100514.6b315e27@www.etchedpixels.co.uk>
	<1447763411906-14597.post@n5.nabble.com>
	<1447820922861-14611.post@n5.nabble.com>
	<1447837122876-14615.post@n5.nabble.com>
	<1447838899034-14616.post@n5.nabble.com>
Message-ID: <CAGV6i+OLeGXxyNnvpMz_4iHQNc+m=X5SnoO2f3SRCBKdNqab7A@mail.gmail.com>

The proposed tranform() module is awesome, no doubt.

If this gets implemented before OpenSCAD2, then I would like the syntax to
be forward compatible with OpenSCAD2. Like this:

transform(
    f(x,y,z)=
        let (sf1=1+sin(12*atan2(y,x))/8, sf2=2+cos(z*1.1+70))
        [x*sf1*sf2, y*sf1*sf2, z] )
    cube(size=[100, 100, 300], center=true);

On 18 November 2015 at 04:28, Trygon <db5765 at outlook.com> wrote:

> The same non affine transformation applied to a different solid:
>
> // this does not actually work, there is no transform() command at present!
> transform()=let(sf1=1+sin(12*atan2(y,x))/8, sf2=2+cos(z*1.1+70))
>     [x*sf1*sf2, y*sf1*sf2, z] cube(size=[100, 100, 300], center=true);
>
> <http://forum.openscad.org/file/n14616/TransformArt2.png>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Non-Linear-Transformations-tp14539p14616.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151118/48c6aa09/attachment-0001.html>

From runsun at gmail.com  Wed Nov 18 09:47:52 2015
From: runsun at gmail.com (runsun)
Date: Wed, 18 Nov 2015 07:47:52 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447849045665-14618.post@n5.nabble.com>
References: <D10353F6-1ED8-42BA-B68C-60E308A92449@kintel.net>
	<1447697373291-14551.post@n5.nabble.com>
	<1447713297913-14585.post@n5.nabble.com>
	<1447739093823-14591.post@n5.nabble.com>
	<20151117100514.6b315e27@www.etchedpixels.co.uk>
	<1447763411906-14597.post@n5.nabble.com>
	<1447820922861-14611.post@n5.nabble.com>
	<1447837122876-14615.post@n5.nabble.com>
	<1447838899034-14616.post@n5.nabble.com>
	<1447849045665-14618.post@n5.nabble.com>
Message-ID: <1447858072392-14620.post@n5.nabble.com>

ctchin wrote
> ~80 lines of code (with comments) gave me what I needed, without even
> resorting to Matlab. 
> 
> Pushing 200 lines of code if I kept all the debugging/evolving codes in
> place.  Note that the pipe diameter changes along the pipe length, the
> wall thickness is very nearly uniform.  
> 
> Plus now I have a new library for making cylinders and pipes along an
> arbitrary (but not too crazy) curve. 

Can you share how you join the two tubes? partial code would be even better. 




-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git );


 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision 








--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14620.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Wed Nov 18 11:02:41 2015
From: marius at kintel.net (Marius Kintel)
Date: Wed, 18 Nov 2015 11:02:41 -0500
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447837122876-14615.post@n5.nabble.com>
References: <1447686693347-14539.post@n5.nabble.com>
	<D10353F6-1ED8-42BA-B68C-60E308A92449@kintel.net>
	<1447697373291-14551.post@n5.nabble.com>
	<1447713297913-14585.post@n5.nabble.com>
	<1447739093823-14591.post@n5.nabble.com>
	<20151117100514.6b315e27@www.etchedpixels.co.uk>
	<1447763411906-14597.post@n5.nabble.com>
	<1447820922861-14611.post@n5.nabble.com>
	<1447837122876-14615.post@n5.nabble.com>
Message-ID: <AE80B768-10D2-4844-9F01-D7D38BD4ED25@kintel.net>

Trygon,

We?ve been compiling some demos of what can be done in user space by manually managing vertices:
https://github.com/openscad/list-comprehension-demos

This is more of a playground to explore what sort of functionality should be built into OpenSCAD.

For these demos, we currently only use 2D object as basis, see https://github.com/openscad/scad-utils/blob/master/shapes.scad

It would be cool to add some of your experiments to this repository, for purpose of creating a join exploratory playground until we land on a good interface for this kind of functionality.

Cheers,

 -Marius



From lboyd at frontiernet.net  Wed Nov 18 11:40:45 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Wed, 18 Nov 2015 09:40:45 -0700 (MST)
Subject: [OpenSCAD] Special Variables
In-Reply-To: <CAGV6i+NM+r4sRck6cdx8ex3pSzk51vJsTwDtJnhT=YDBP4Z1qw@mail.gmail.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
	<1447542364679-14488.post@n5.nabble.com>
	<1447543337951-14489.post@n5.nabble.com>
	<1447552442487-14496.post@n5.nabble.com>
	<CAEEmnrOhP0Ckj3ijuX21tD3h0MRX9Dsh_Nn37s_8FtbkGuUNwQ@mail.gmail.com>
	<1447792147400-14601.post@n5.nabble.com>
	<CAGV6i+NM+r4sRck6cdx8ex3pSzk51vJsTwDtJnhT=YDBP4Z1qw@mail.gmail.com>
Message-ID: <1447864845539-14622.post@n5.nabble.com>

The following is based on testing using OpenSCAD version 2015.03-1.

Inside functions and modules, special variables behave differently than
normal variables.

User-Defined Functions and Modules are defined at the outer most scope of
the script.
They see and use the values of regular variables in effect at this outer
scope. New values assigned within inner scopes, from which they are called,
are *not seen* by the functions and modules.

When external files are loaded with include they are treated as if they were
internal, using the same values of regular variables as if locally defined.

When run is used to load only the functions and modules from an external
file, they use the values of regular variables from their external file,
rather than the local values.

Variables inside a single instance of a function or module can be overridden
by passing as parameters in the call.

 For example
   var = 5;
   module showvar() echo(var);
   showvar();	        // ECHO: 5
   showvar(var = 10);	// ECHO: 10

 showvar(var = 10); is equivalent to:
   module showvar(){ var = 10; echo(var); }
   showvar();

With special variables, the functions and modules *DO* see new values
assigned within the inner scope from which they were called. This includes
functions and modules loaded with run as well as those included and locally
defined.




--
View this message in context: http://forum.openscad.org/Special-Variables-tp14477p14622.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Wed Nov 18 11:46:52 2015
From: nop.head at gmail.com (nop head)
Date: Wed, 18 Nov 2015 16:46:52 +0000
Subject: [OpenSCAD] Special Variables
In-Reply-To: <1447864845539-14622.post@n5.nabble.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
	<1447542364679-14488.post@n5.nabble.com>
	<1447543337951-14489.post@n5.nabble.com>
	<1447552442487-14496.post@n5.nabble.com>
	<CAEEmnrOhP0Ckj3ijuX21tD3h0MRX9Dsh_Nn37s_8FtbkGuUNwQ@mail.gmail.com>
	<1447792147400-14601.post@n5.nabble.com>
	<CAGV6i+NM+r4sRck6cdx8ex3pSzk51vJsTwDtJnhT=YDBP4Z1qw@mail.gmail.com>
	<1447864845539-14622.post@n5.nabble.com>
Message-ID: <CAEEmnrMpFxM-AxrLa97iYCXDWHOPsdp5V0=78vxuLvuwuv-=yQ@mail.gmail.com>

Note that functions and modules don't have to defined at file scope. You
can define them in modules as well.
On Nov 18, 2015 4:41 PM, "L Boyd" <lboyd at frontiernet.net> wrote:

> The following is based on testing using OpenSCAD version 2015.03-1.
>
> Inside functions and modules, special variables behave differently than
> normal variables.
>
> User-Defined Functions and Modules are defined at the outer most scope of
> the script.
> They see and use the values of regular variables in effect at this outer
> scope. New values assigned within inner scopes, from which they are called,
> are *not seen* by the functions and modules.
>
> When external files are loaded with include they are treated as if they
> were
> internal, using the same values of regular variables as if locally defined.
>
> When run is used to load only the functions and modules from an external
> file, they use the values of regular variables from their external file,
> rather than the local values.
>
> Variables inside a single instance of a function or module can be
> overridden
> by passing as parameters in the call.
>
>  For example
>    var = 5;
>    module showvar() echo(var);
>    showvar();           // ECHO: 5
>    showvar(var = 10);   // ECHO: 10
>
>  showvar(var = 10); is equivalent to:
>    module showvar(){ var = 10; echo(var); }
>    showvar();
>
> With special variables, the functions and modules *DO* see new values
> assigned within the inner scope from which they were called. This includes
> functions and modules loaded with run as well as those included and locally
> defined.
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Special-Variables-tp14477p14622.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151118/7f92786f/attachment.html>

From lboyd at frontiernet.net  Wed Nov 18 12:14:17 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Wed, 18 Nov 2015 10:14:17 -0700 (MST)
Subject: [OpenSCAD] function return values
Message-ID: <1447866857304-14624.post@n5.nabble.com>

>From the thread "Special variables"

whburling wrote
>  I am uncertain if functions can be written exactly as modules with the
> ability to return a value unrelated to any passed parameter or any special
> variable.  I am finding out that I do not understand how to "return" an
> arbitrary value.

 
User defined functions can return just about anything

var=" regular variable ";
$v =" special variable ";

function junk(input=13) = ["this is a test function which returns
",var,$v,[input],[1,2,3,4],[2:6]];
echo(junk());
ECHO: ["this is a test function which returns ", " regular variable ", "
special variable ", [13], [1, 2, 3, 4], [2 : 1 : 6]]

For more see  OpenSCAD_User_Manual/User-Defined_Functions_and_Modules
<https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/User-Defined_Functions_and_Modules>  
which was recently updated.



--
View this message in context: http://forum.openscad.org/function-return-values-tp14624.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Wed Nov 18 13:47:05 2015
From: runsun at gmail.com (runsun)
Date: Wed, 18 Nov 2015 11:47:05 -0700 (MST)
Subject: [OpenSCAD] Inconsistent conversion of floating number to string
 at 7th significant digit
In-Reply-To: <1447549065245-14493.post@n5.nabble.com>
References: <CAGV6i+PVhnV7UzA44TL=_iLN8kNu7rUrc3b2ng-ptC3i2S0aNQ@mail.gmail.com>
	<06102FC9-4DF7-42DB-9875-6DCFA98DB8F5@kintel.net>
	<1447441248118-14455.post@n5.nabble.com>
	<CAGV6i+N8qsaCJWsxwc+h8nfu8SiQ+6j=UWgs46EM3xLoMh7Sqw@mail.gmail.com>
	<1447453051890-14463.post@n5.nabble.com>
	<CAHMTcK9o6Rsg2qQu4UkWSC8nFH1oGBdZvPrGqPpZFXFdK8yspg@mail.gmail.com>
	<1447524653362-14478.post@n5.nabble.com>
	<CAGV6i+Nw-wK9FPKDbg4sD8e3qa-er3b2Wjsc6DcQipfru9EQtQ@mail.gmail.com>
	<1447548956170-14492.post@n5.nabble.com>
	<1447549065245-14493.post@n5.nabble.com>
Message-ID: <1447872425594-14625.post@n5.nabble.com>

After some fine-tuning on the *fullnumstr()*, it seems to work nicely under
more extensive tests. So at least for now, my lib has a working approach to
show numbers a little more faithfully than built-in str() does:

| fullnumstr ( n [d,dmax] )=str ( tested:60 )
| 
| Integer:
| 
| 0> fullnumstr(0)= "0"
| 1> fullnumstr(5)= "5"
| 2> fullnumstr(12)= "12"
| 3> fullnumstr(200)= "200"
| 4> fullnumstr(1230)= "1230"
| 5> fullnumstr(123456)= "123456"
| 6> fullnumstr(1234567)= "1234567"
| 7> fullnumstr(123456789)= "123456789"
| 8> fullnumstr(123456000)= "123456000"
| 9> fullnumstr(12345670)= "12345670"
| 10> fullnumstr(123456789012345)= "123456789012345"
| 11> fullnumstr(-123456789012345)= "-123456789012345"
| 12> fullnumstr(12345678901234500)= "12345678901234500"
| 
| Float:
| 
| 13> fullnumstr(1234.5)= "1234.5"
| 14> fullnumstr(12345.6)= "12345.6"
| 15> fullnumstr(12345.67)= "12345.67"
| 16> fullnumstr(0.12345)= "0.12345"
| 17> fullnumstr(0.12)= "0.12"
| 18> fullnumstr(0.123)= "0.123"
| 19> fullnumstr(0.1234)= "0.1234"
| 20> fullnumstr(0.123456)= "0.123456"
| 21> fullnumstr(0.0000123456)= "0.0000123456"
| 22> fullnumstr( 0.123456789012345)= "0.123456789012345"
| 23> fullnumstr(-0.123456789012345)= "-0.123456789012345"
| 24> fullnumstr(1/3)= "0.333333333333333"
| 25> fullnumstr(2/3)= "0.666666666666667"
| 26> fullnumstr(2/3,d=5)= "0.66667"
| 
| Use d and dmax to set digits of fraction: 
| // Note the difference between d and dmax.
| 
| 27> fullnumstr(5,d=2)= "5.00"
| 28> fullnumstr(-5,d=2)= "-5.00"
| 29> fullnumstr(5,dmax=2)= "5"
| 30> fullnumstr(38,d=0)= "38"
| 31> fullnumstr(38,d=2)= "38.00"
| 32> fullnumstr(80,d=0)= "80"
| 33> fullnumstr(3.80)= "3.8"
| 34> fullnumstr(38.2,dmax=3)= "38.2"
| 35> fullnumstr(38.2,d=3, dmax=2)= "38.20"
| 36> fullnumstr(38.2,d=3, dmax=4)= "38.200"
| 37> fullnumstr(38.2,d=5, dmax=4)= "38.2000"
| 38> fullnumstr(3.839, d=0)= "4"
| 39> fullnumstr(3.839, d=1)= "3.8"
| 40> fullnumstr(3.839, d=2)= "3.84"
| 41> fullnumstr(3.839, d=3)= "3.839"
| 42> fullnumstr(3.839, d=4)= "3.8390"
| 43> fullnumstr(3.839, d=1, dmax=2)= "3.8"
| 44> fullnumstr(3.839, d=2, dmax=2)= "3.84"
| 45> fullnumstr(3.839, d=3, dmax=2)= "3.84"
| 46> fullnumstr(3.839, d=4, dmax=2)= "3.84"
| 47> fullnumstr(43.839, d=4, dmax=2)= "43.84"
| 48> fullnumstr(-3.839, d=1)= "-3.8"
| 49> fullnumstr(-3.839, d=2)= "-3.84"
| 50> fullnumstr(-3.839, d=4)= "-3.8390"
| 
| 51> fullnumstr(0.123456789012345,d=6)= "0.123457"
| 52> fullnumstr(0.123456789012345,d=7)= "0.1234568"
| 53> fullnumstr(0.123456789012345,d=8)= "0.12345679"
| 54> fullnumstr(0.123456789012345,d=9)= "0.123456789"
| 55> fullnumstr(800.1,d=0)= "800"
| 56> fullnumstr(800.01,d=0)= "800"
| 57> fullnumstr(800.01,d=1)= "800.0"
| 58> fullnumstr(800000000000.01,d=1)= "800000000000.0"
| 59> fullnumstr(79.516556302228700,d=0)= "80"



-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git );


 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision 








--
View this message in context: http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350p14625.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Wed Nov 18 14:03:01 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Wed, 18 Nov 2015 12:03:01 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447858072392-14620.post@n5.nabble.com>
References: <1447697373291-14551.post@n5.nabble.com>
	<1447713297913-14585.post@n5.nabble.com>
	<1447739093823-14591.post@n5.nabble.com>
	<20151117100514.6b315e27@www.etchedpixels.co.uk>
	<1447763411906-14597.post@n5.nabble.com>
	<1447820922861-14611.post@n5.nabble.com>
	<1447837122876-14615.post@n5.nabble.com>
	<1447838899034-14616.post@n5.nabble.com>
	<1447849045665-14618.post@n5.nabble.com>
	<1447858072392-14620.post@n5.nabble.com>
Message-ID: <1447873381153-14626.post@n5.nabble.com>

Heheh, I guess you have asked for the crucial trick.  The question is how to
join two cylinders at an angle with a satisfactory "elbow".  Once you
figured that, the rest is just putting the Lego pieces together to make
cylinders and pipes along any paths.  Branching also becomes obvious.

The following code is robust, except for one factor: h=2*d0, the factor 2 is
arbitrary and will fail if angle is too small.  It's easy enough to fix, but
I've decided to finish working on my branching vessels rather than fix a
problem that only happens with unnatural-looking kinks.  

The color("red") is obviously unnecessary, it's just to show the important
"elbow".  





--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14626.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Wed Nov 18 15:55:22 2015
From: rudolf at parkinbot.com (Parkinbot)
Date: Wed, 18 Nov 2015 13:55:22 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447873381153-14626.post@n5.nabble.com>
References: <1447713297913-14585.post@n5.nabble.com>
	<1447739093823-14591.post@n5.nabble.com>
	<20151117100514.6b315e27@www.etchedpixels.co.uk>
	<1447763411906-14597.post@n5.nabble.com>
	<1447820922861-14611.post@n5.nabble.com>
	<1447837122876-14615.post@n5.nabble.com>
	<1447838899034-14616.post@n5.nabble.com>
	<1447849045665-14618.post@n5.nabble.com>
	<1447858072392-14620.post@n5.nabble.com>
	<1447873381153-14626.post@n5.nabble.com>
Message-ID: <1447880122386-14627.post@n5.nabble.com>

If I was a pipe I'd prefer to be modelled like this (works for any angle ): 





--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14627.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From lboyd at frontiernet.net  Wed Nov 18 16:00:12 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Wed, 18 Nov 2015 14:00:12 -0700 (MST)
Subject: [OpenSCAD] Special Variables
In-Reply-To: <CAEEmnrMpFxM-AxrLa97iYCXDWHOPsdp5V0=78vxuLvuwuv-=yQ@mail.gmail.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
	<1447542364679-14488.post@n5.nabble.com>
	<1447543337951-14489.post@n5.nabble.com>
	<1447552442487-14496.post@n5.nabble.com>
	<CAEEmnrOhP0Ckj3ijuX21tD3h0MRX9Dsh_Nn37s_8FtbkGuUNwQ@mail.gmail.com>
	<1447792147400-14601.post@n5.nabble.com>
	<CAGV6i+NM+r4sRck6cdx8ex3pSzk51vJsTwDtJnhT=YDBP4Z1qw@mail.gmail.com>
	<1447864845539-14622.post@n5.nabble.com>
	<CAEEmnrMpFxM-AxrLa97iYCXDWHOPsdp5V0=78vxuLvuwuv-=yQ@mail.gmail.com>
Message-ID: <1447880412377-14628.post@n5.nabble.com>

nophead wrote
> Note that functions and modules don't have to defined at file scope. You
> can define them in modules as well.

Learn something new every day!

Have not tried yet, but I assume this means the universe for these functions
and modules are the scope within which they were defined. This would mean:
1. Regular variables have the value in effect at this scope, which may be
different than the value at file scope.
2. Functions and modules thus defined are undefined outside of this
universe.
3. The value of a special variable is still dependent on the call hierarchy,
not where the function or module was defined.

Not sure how to use this knowledge, but  it means some rewording where I
said "outer most scope".

Do you have some ideas where they might be useful?



L Boyd wrote
>> The following is based on testing using OpenSCAD version 2015.03-1.
>>
>> Inside functions and modules, special variables behave differently than
>> normal variables.
>>
>> User-Defined Functions and Modules are defined at the outer most scope of
>> the script.
>> They see and use the values of regular variables in effect at this outer
>> scope. New values assigned within inner scopes, from which they are
>> called,
>> are *not seen* by the functions and modules.
>>
>> When external files are loaded with include they are treated as if they
>> were
>> internal, using the same values of regular variables as if locally
>> defined.
>>
>> When run is used to load only the functions and modules from an external
>> file, they use the values of regular variables from their external file,
>> rather than the local values.
>>
>> Variables inside a single instance of a function or module can be
>> overridden
>> by passing as parameters in the call.
>>
>>  For example
>>    var = 5;
>>    module showvar() echo(var);
>>    showvar();           // ECHO: 5
>>    showvar(var = 10);   // ECHO: 10
>>
>>  showvar(var = 10); is equivalent to:
>>    module showvar(){ var = 10; echo(var); }
>>    showvar();
>>
>> With special variables, the functions and modules *DO* see new values
>> assigned within the inner scope from which they were called. This
>> includes
>> functions and modules loaded with run as well as those included and
>> locally
>> defined.





-----
Larry
--
View this message in context: http://forum.openscad.org/Special-Variables-tp14477p14628.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From lboyd at frontiernet.net  Wed Nov 18 16:38:46 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Wed, 18 Nov 2015 14:38:46 -0700 (MST)
Subject: [OpenSCAD] Improving the doc
In-Reply-To: <1447828998302-14613.post@n5.nabble.com>
References: <1447132878960-14333.post@n5.nabble.com>
	<1447302102462-14388.post@n5.nabble.com>
	<CAGV6i+OAk7VxK3OyLOqs-RD1XwDLZWdH4As5qStGdnPrUcat1A@mail.gmail.com>
	<1447828998302-14613.post@n5.nabble.com>
Message-ID: <1447882726709-14629.post@n5.nabble.com>

Keep it up!

The 3 places with manual order I was talking about are:

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual#Overview
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Print_version 

I completely reworked all of them to agree and made a virtual separation
into two books.



-----
Larry
--
View this message in context: http://forum.openscad.org/Improving-the-doc-tp14333p14629.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Wed Nov 18 16:43:19 2015
From: nop.head at gmail.com (nop head)
Date: Wed, 18 Nov 2015 21:43:19 +0000
Subject: [OpenSCAD] Special Variables
In-Reply-To: <1447880412377-14628.post@n5.nabble.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
	<1447542364679-14488.post@n5.nabble.com>
	<1447543337951-14489.post@n5.nabble.com>
	<1447552442487-14496.post@n5.nabble.com>
	<CAEEmnrOhP0Ckj3ijuX21tD3h0MRX9Dsh_Nn37s_8FtbkGuUNwQ@mail.gmail.com>
	<1447792147400-14601.post@n5.nabble.com>
	<CAGV6i+NM+r4sRck6cdx8ex3pSzk51vJsTwDtJnhT=YDBP4Z1qw@mail.gmail.com>
	<1447864845539-14622.post@n5.nabble.com>
	<CAEEmnrMpFxM-AxrLa97iYCXDWHOPsdp5V0=78vxuLvuwuv-=yQ@mail.gmail.com>
	<1447880412377-14628.post@n5.nabble.com>
Message-ID: <CAEEmnrOP-vguzuz1L__H5OxBmtDKd-e-w6nYr3u9Y6q71EuaOg@mail.gmail.com>

I think all three are true but I don't have access to a computer at the
moment to verify that.

If you have use for a function or module that is only needed inside another
module it is better to define it there so it doesn't pollute the global
namespace. If 1 is true as I suspect then that would also be a reason for
nesting.
On Nov 18, 2015 9:01 PM, "L Boyd" <lboyd at frontiernet.net> wrote:

> nophead wrote
> > Note that functions and modules don't have to defined at file scope. You
> > can define them in modules as well.
>
> Learn something new every day!
>
> Have not tried yet, but I assume this means the universe for these
> functions
> and modules are the scope within which they were defined. This would mean:
> 1. Regular variables have the value in effect at this scope, which may be
> different than the value at file scope.
> 2. Functions and modules thus defined are undefined outside of this
> universe.
> 3. The value of a special variable is still dependent on the call
> hierarchy,
> not where the function or module was defined.
>
> Not sure how to use this knowledge, but  it means some rewording where I
> said "outer most scope".
>
> Do you have some ideas where they might be useful?
>
>
>
> L Boyd wrote
> >> The following is based on testing using OpenSCAD version 2015.03-1.
> >>
> >> Inside functions and modules, special variables behave differently than
> >> normal variables.
> >>
> >> User-Defined Functions and Modules are defined at the outer most scope
> of
> >> the script.
> >> They see and use the values of regular variables in effect at this outer
> >> scope. New values assigned within inner scopes, from which they are
> >> called,
> >> are *not seen* by the functions and modules.
> >>
> >> When external files are loaded with include they are treated as if they
> >> were
> >> internal, using the same values of regular variables as if locally
> >> defined.
> >>
> >> When run is used to load only the functions and modules from an external
> >> file, they use the values of regular variables from their external file,
> >> rather than the local values.
> >>
> >> Variables inside a single instance of a function or module can be
> >> overridden
> >> by passing as parameters in the call.
> >>
> >>  For example
> >>    var = 5;
> >>    module showvar() echo(var);
> >>    showvar();           // ECHO: 5
> >>    showvar(var = 10);   // ECHO: 10
> >>
> >>  showvar(var = 10); is equivalent to:
> >>    module showvar(){ var = 10; echo(var); }
> >>    showvar();
> >>
> >> With special variables, the functions and modules *DO* see new values
> >> assigned within the inner scope from which they were called. This
> >> includes
> >> functions and modules loaded with run as well as those included and
> >> locally
> >> defined.
>
>
>
>
>
> -----
> Larry
> --
> View this message in context:
> http://forum.openscad.org/Special-Variables-tp14477p14628.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151118/0b00901d/attachment.html>

From barry.peet at gmail.com  Wed Nov 18 17:00:01 2015
From: barry.peet at gmail.com (Barry Peet)
Date: Wed, 18 Nov 2015 23:00:01 +0100
Subject: [OpenSCAD] OpenScad 3D performance.
In-Reply-To: <1447839767889-14617.post@n5.nabble.com>
References: <1447583329754-14505.post@n5.nabble.com> <56489C2E.4090204@gmx.de>
	<1447611329624-14516.post@n5.nabble.com>
	<1447618521531-14519.post@n5.nabble.com> <5648F7F2.2070001@gmx.de>
	<1447839767889-14617.post@n5.nabble.com>
Message-ID: <7DD0E3AE-DA26-4BE8-9252-973C4688CB50@gmail.com>

LS,

could you please remove me from the mailinglist?

regards Barry

> On 18 nov. 2015, at 10:42, rew <R.E.Wolff at BitWizard.nl> wrote:
> 
> Hi Torsten, 
> 
> Yes, that's with QT 4.8.6. 
> 
> Other hint.... After "rendering" the performance of the QT5 compiled version
> is great. 
> 
> Remember me saying that the trusty version was acceptable, well this is much
> much better! I now have a simple model that shows the "seconds of delays"
> behavior in preview mode, acceptable performance in the old version, and
> great performance after being "rendered". 
> 
> 
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/OpenScad-3D-performance-tp14505p14617.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From lboyd at frontiernet.net  Wed Nov 18 17:05:30 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Wed, 18 Nov 2015 15:05:30 -0700 (MST)
Subject: [OpenSCAD] Improving the doc
In-Reply-To: <1447882726709-14629.post@n5.nabble.com>
References: <1447132878960-14333.post@n5.nabble.com>
	<1447302102462-14388.post@n5.nabble.com>
	<CAGV6i+OAk7VxK3OyLOqs-RD1XwDLZWdH4As5qStGdnPrUcat1A@mail.gmail.com>
	<1447828998302-14613.post@n5.nabble.com>
	<1447882726709-14629.post@n5.nabble.com>
Message-ID: <1447884330884-14632.post@n5.nabble.com>

Going back over your posts, I would like to read your proposed general
section but your link does not get me there.



-----
Larry
--
View this message in context: http://forum.openscad.org/Improving-the-doc-tp14333p14632.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Wed Nov 18 17:11:49 2015
From: runsun at gmail.com (runsun)
Date: Wed, 18 Nov 2015 15:11:49 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447873381153-14626.post@n5.nabble.com>
References: <1447713297913-14585.post@n5.nabble.com>
	<1447739093823-14591.post@n5.nabble.com>
	<20151117100514.6b315e27@www.etchedpixels.co.uk>
	<1447763411906-14597.post@n5.nabble.com>
	<1447820922861-14611.post@n5.nabble.com>
	<1447837122876-14615.post@n5.nabble.com>
	<1447838899034-14616.post@n5.nabble.com>
	<1447849045665-14618.post@n5.nabble.com>
	<1447858072392-14620.post@n5.nabble.com>
	<1447873381153-14626.post@n5.nabble.com>
Message-ID: <1447884709886-14633.post@n5.nabble.com>

Thx, ctchin. That's neat. 

Since I spent most of design in polyhedron, what I am most interested in is
how two polyhedrons join/branch.  





-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git );


 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision 








--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14633.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Wed Nov 18 17:21:57 2015
From: runsun at gmail.com (runsun)
Date: Wed, 18 Nov 2015 15:21:57 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447884709886-14633.post@n5.nabble.com>
References: <1447739093823-14591.post@n5.nabble.com>
	<20151117100514.6b315e27@www.etchedpixels.co.uk>
	<1447763411906-14597.post@n5.nabble.com>
	<1447820922861-14611.post@n5.nabble.com>
	<1447837122876-14615.post@n5.nabble.com>
	<1447838899034-14616.post@n5.nabble.com>
	<1447849045665-14618.post@n5.nabble.com>
	<1447858072392-14620.post@n5.nabble.com>
	<1447873381153-14626.post@n5.nabble.com>
	<1447884709886-14633.post@n5.nabble.com>
Message-ID: <1447885317376-14634.post@n5.nabble.com>

btw, ctchin, posts in this thread,  Bent rod
<http://forum.openscad.org/Bent-rod-tp14003p14004.html>  , might give some
ideas. Among them, my version:

<http://forum.openscad.org/file/n14004/20150925_bent_pipe.png> 



-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git );


 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision 








--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14634.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Wed Nov 18 21:12:16 2015
From: mschafer at wireframe.biz (Neon22)
Date: Wed, 18 Nov 2015 19:12:16 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447873381153-14626.post@n5.nabble.com>
References: <1447713297913-14585.post@n5.nabble.com>
	<1447739093823-14591.post@n5.nabble.com>
	<20151117100514.6b315e27@www.etchedpixels.co.uk>
	<1447763411906-14597.post@n5.nabble.com>
	<1447820922861-14611.post@n5.nabble.com>
	<1447837122876-14615.post@n5.nabble.com>
	<1447838899034-14616.post@n5.nabble.com>
	<1447849045665-14618.post@n5.nabble.com>
	<1447858072392-14620.post@n5.nabble.com>
	<1447873381153-14626.post@n5.nabble.com>
Message-ID: <1447899136813-14635.post@n5.nabble.com>

ctchin wrote
>  Branching also becomes obvious.


Parkinbot wrote
> If I was a pipe I'd prefer to be modelled like this (works for any angle 

> ): 

I was playing with these two approaches and tried to make a generalized tree
branching with fillets between. 

Its working well for direct code but I wanted to use a list and a for loop.
Alas the for loop does an implied union() and so the children() is not
working.
My brain has frozen on how to get around it.
E.g. I have this: (images in forum)

use <fillet.scad> 
// from clothbot
// - https://github.com/clothbot/ClothBotCreations/tree/master/utilities

d0 = 10;
h1 = 30;
h2 = 20;
angle = -66;

// Parkinbot approach (filleted)
translate([30,20,0])
fillet(r=2,steps=2) {
	rotate([angle,0,0]) 
		cylinder(h1, d=d0);
		cylinder(h2, d=d0);
	// join
	color("red")
		sphere(d0/2); 
}



// ctchin approach (filleted)
translate([30,-20,0])
fillet(r=2,steps=4) {
	rotate([angle,0,0]) cylinder(h1, d=d0);
	cylinder(h2, d=d0);
	// join
	color("red")
	intersection() {
		rotate([angle,0,0]) 
		translate([0,0,-2*d0]) 
			cylinder(d=d0,h=2*d0);
		translate([0,0,-2*d0]) 
			cylinder(d=d0,h=2*d0);
    }
}

//-----------------------------
// Each branch is a cylinder with [diameter, startpt, anglexyz, length]
//    - startpt, anglexyz are triplets
// generalize later to use shape profile instead of circle (cylinder)
// (one day alllow random variation in deformation along length of the
branch object)
branches = [
			[10, [0,0,0], [0,0,0], 40],
			[10, [0,0,0], [45,0,0], 40],
			[5,  [0,0,30], [66,-22,0], 33],
			[5,  [0,0,25], [66,-22,250], 33],
			];



module make_tree(branches=branches, blend=4, method="round") {
	// add round/sharp in here
	// how to get around implied union of for() ?
	fillet(r=2,steps=4) {
		for (b=branches) {
			dia = b[0];
			start = b[1];
			angle = b[2];
			dist = b[3];
			translate(start)
			rotate(angle)
				cylinder(h=dist, d=dia);
		}
	}
}


make_tree();

To get a result like this:
<http://forum.openscad.org/file/n14635/branches_5.png> 

How do I pass all the results of the for loop to fillet() as children ?



--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14635.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Wed Nov 18 21:17:33 2015
From: rudolf at parkinbot.com (Parkinbot)
Date: Wed, 18 Nov 2015 19:17:33 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447885317376-14634.post@n5.nabble.com>
References: <20151117100514.6b315e27@www.etchedpixels.co.uk>
	<1447763411906-14597.post@n5.nabble.com>
	<1447820922861-14611.post@n5.nabble.com>
	<1447837122876-14615.post@n5.nabble.com>
	<1447838899034-14616.post@n5.nabble.com>
	<1447849045665-14618.post@n5.nabble.com>
	<1447858072392-14620.post@n5.nabble.com>
	<1447873381153-14626.post@n5.nabble.com>
	<1447884709886-14633.post@n5.nabble.com>
	<1447885317376-14634.post@n5.nabble.com>
Message-ID: <1447899453115-14636.post@n5.nabble.com>

Usually, an (implicit) union joins overlapping or matching (there is always a
numerical error!) objects. This happens also with polyhedrons. If you
calculate your own polyhedrons (your example doesn't look so) just provide
some very small overlapping. 
BUT, when I try to implement your example along the "broadway", say, like
this:


I'm getting this:
<http://forum.openscad.org/file/n14636/weird.png> 

I remember that the convexity parameter of linear_extrude() never worked
properly with me, so in the end to get more out of it I implemented a
fullblown library to bypass it on the basis of hull(). Just have a look at:
http://www.thingiverse.com/thing:648813


runsun wrote
> btw, ctchin, posts in this thread, 
> Bent rod <http://forum.openscad.org/Bent-rod-tp14003p14004.html>  
> , might give some ideas. Among them, my version:
<http://forum.openscad.org/file/n14004/20150925_bent_pipe.png> 




--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14636.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Wed Nov 18 22:01:09 2015
From: rudolf at parkinbot.com (Parkinbot)
Date: Wed, 18 Nov 2015 20:01:09 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447899136813-14635.post@n5.nabble.com>
References: <1447739093823-14591.post@n5.nabble.com>
	<20151117100514.6b315e27@www.etchedpixels.co.uk>
	<1447763411906-14597.post@n5.nabble.com>
	<1447820922861-14611.post@n5.nabble.com>
	<1447837122876-14615.post@n5.nabble.com>
	<1447838899034-14616.post@n5.nabble.com>
	<1447849045665-14618.post@n5.nabble.com>
	<1447858072392-14620.post@n5.nabble.com>
	<1447873381153-14626.post@n5.nabble.com>
	<1447899136813-14635.post@n5.nabble.com>
Message-ID: <1447902069689-14637.post@n5.nabble.com>

@Neon: If something is against you, better try to befriend it. 
OK, I know, this is more a work around than the solution you are seeking,
but I'm afraid you won't get rid of the implicit union. 

<http://forum.openscad.org/file/n14637/tree.png> 





--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14637.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Thu Nov 19 00:10:05 2015
From: mschafer at wireframe.biz (Neon22)
Date: Wed, 18 Nov 2015 22:10:05 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447902069689-14637.post@n5.nabble.com>
References: <20151117100514.6b315e27@www.etchedpixels.co.uk>
	<1447763411906-14597.post@n5.nabble.com>
	<1447820922861-14611.post@n5.nabble.com>
	<1447837122876-14615.post@n5.nabble.com>
	<1447838899034-14616.post@n5.nabble.com>
	<1447849045665-14618.post@n5.nabble.com>
	<1447858072392-14620.post@n5.nabble.com>
	<1447873381153-14626.post@n5.nabble.com>
	<1447899136813-14635.post@n5.nabble.com>
	<1447902069689-14637.post@n5.nabble.com>
Message-ID: <1447909805682-14638.post@n5.nabble.com>

ok that's pretty nice.
I guess the disadvantage is the exponential work done as each fillet is
applied to the growing object and one new part.
Maybe in OpenSCAD2 .
Thanks...



--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14638.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Thu Nov 19 01:20:07 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Wed, 18 Nov 2015 23:20:07 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447880122386-14627.post@n5.nabble.com>
References: <1447739093823-14591.post@n5.nabble.com>
	<20151117100514.6b315e27@www.etchedpixels.co.uk>
	<1447763411906-14597.post@n5.nabble.com>
	<1447820922861-14611.post@n5.nabble.com>
	<1447837122876-14615.post@n5.nabble.com>
	<1447838899034-14616.post@n5.nabble.com>
	<1447849045665-14618.post@n5.nabble.com>
	<1447858072392-14620.post@n5.nabble.com>
	<1447873381153-14626.post@n5.nabble.com>
	<1447880122386-14627.post@n5.nabble.com>
Message-ID: <1447914007315-14639.post@n5.nabble.com>

Parkinbot wrote

* SMACK FOREHEAD *

Doh of course you are right!  My brain was stuck from a previous design for
which the sphere wouldn't work, but for cylinders of course a spherical
elbow is easier and prettier.  

THANKS!

(anyway the model with the ugly angular joints already went and come back
from the printer)

<http://forum.openscad.org/file/n14639/bifurcation-printed.jpg> 



--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14639.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Thu Nov 19 06:16:01 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Thu, 19 Nov 2015 04:16:01 -0700 (MST)
Subject: [OpenSCAD] Improving the doc
In-Reply-To: <1447884330884-14632.post@n5.nabble.com>
References: <1447132878960-14333.post@n5.nabble.com>
	<1447302102462-14388.post@n5.nabble.com>
	<CAGV6i+OAk7VxK3OyLOqs-RD1XwDLZWdH4As5qStGdnPrUcat1A@mail.gmail.com>
	<1447828998302-14613.post@n5.nabble.com>
	<1447882726709-14629.post@n5.nabble.com>
	<1447884330884-14632.post@n5.nabble.com>
Message-ID: <1447931761771-14640.post@n5.nabble.com>

The link I put in my post is still good.  But the forum parsed it incorrectly
so when you simple click on the link the URL is missing the last closing
bracket.  Here this one should work:

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/General_%28by_c.t.chin%29

You are all also invited to scrutinize my draft substitute for the main part
of the doc: 

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language/Fast_Guide%28c.t.chin%29

(hmm this time wonder how will the forum treat the URL, just verify you
browser is using a sensible URL with a closing bracket) 

The "Fast Guide" is very incomplete, as I work on it on and off, it's
turning into a complete reference.  So it will have to be renamed for sure. 
A fast guide will still be forthcoming, but perhaps it makes more sense to
rework the complete reference before starting a proper fast guide.  

So the (currently) misnamed complete reference is supposed to (1) cover the
language comprehensively, (2) _TIGHT_ in terms of jargon, e.g. in the old
doc, operator sometimes means "+" and "==", and other times means "rotate()"
and "union()", no more, every jargon should have only one clear meaning and
consistent usage, (3) eliminate un-necessary or un-helpful categorization
and anything "special" or "other", if it's in the language it's in the doc,
there's no 2d _subsystem_, there's no _Other language features_.  text() is
a 2D primitive, import() is a 3D primitive; union() and rotate_extrude() and
rotate() and project() are all transformations, not in 3 or 4 different
chapters.  

Basically the old doc tries to teach a topic at a time, but there's not
enough holistic planning and then some smaller topics are left behind and
they get shoved into a "Other features" or a single primitive text() gets
its own chapter.  Let's first create a comprehensive reference, organized
not by topics, but by linguistic logic.  Then someone could create a
topic-by-topic fast guide/deep tutorial by just collecting links from the
ref.  Add some hand-holding explanation as needed.  



--
View this message in context: http://forum.openscad.org/Improving-the-doc-tp14333p14640.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From ant.stewart at yahoo.com  Thu Nov 19 06:42:49 2015
From: ant.stewart at yahoo.com (ufomorace)
Date: Thu, 19 Nov 2015 04:42:49 -0700 (MST)
Subject: [OpenSCAD] how to use intersection inside a loop?
In-Reply-To: <1444287056969-14089.post@n5.nabble.com>
References: <1444047731291-14070.post@n5.nabble.com>
	<trinity-90d7b931-60cf-4c6d-b143-8e6e95486312-1444050478859@3capp-gmx-bs35>
	<1444070559570-14076.post@n5.nabble.com>
	<CAGV6i+NbFpsM=wiEeTm9WGC5DxyP1-A5DZvVkHe7r0iC4q2VBg@mail.gmail.com>
	<1444287056969-14089.post@n5.nabble.com>
Message-ID: <1447933369193-14641.post@n5.nabble.com>

Here is code to compare intersection between every object in a group, same as
intersection_for except it's comparing intersection between any two objects.
There is an optional distance factor, If you have for example 50 spheres
disntanced by 1 grouped into a large sphere of diameter 10, you would set
the comparison to exclude intersection if the distance is smaller than 2.

here:





--
View this message in context: http://forum.openscad.org/how-to-use-intersection-inside-a-loop-tp14070p14641.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From vo.publique at gmail.com  Thu Nov 19 07:35:37 2015
From: vo.publique at gmail.com (vicnet)
Date: Thu, 19 Nov 2015 05:35:37 -0700 (MST)
Subject: [OpenSCAD] Loop precision (==floating point precision ?)
Message-ID: <1447936537847-14642.post@n5.nabble.com>

Hello,

This:

outputs 0.95 at last line and not 1.

(now I use a integer from 0 to 100 and divide after)

Is it normal ?

a+
Vicnet



--
View this message in context: http://forum.openscad.org/Loop-precision-floating-point-precision-tp14642.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From roys at iro.umontreal.ca  Thu Nov 19 08:00:06 2015
From: roys at iro.umontreal.ca (blobule)
Date: Thu, 19 Nov 2015 06:00:06 -0700 (MST)
Subject: [OpenSCAD] Loop precision (==floating point precision ?)
In-Reply-To: <1447936537847-14642.post@n5.nabble.com>
References: <1447936537847-14642.post@n5.nabble.com>
Message-ID: <1447938006204-14643.post@n5.nabble.com>

Yes this is normal.

In your loop:

    for (t=[0.0:0.05:1.0]) echo(t);

The variable t is compared *exactly* with 1.0, and exact comparison is not
reliable for floating point values.
Basically, you should never use float inside a FOR loop, unless you add a
small value to make sure it stops where you want.

My suggestions for a reliable version of your loop is:

    for (t=[0.0:0.05:1.0001]) echo(t);
or better, use integers:
    for(i=[0:20]) { t=i*0.05;echo(t); }

In the first example, the extra .0001 reminds you that you are taking into
account the fact that floating numbers are approximate.
The second example is the best way, in my opinion, to loop trough a
sequence. Use an integer to count the steps, and derive all float values
from that integer.

If you want to make sure that your loop will always stop at 1.0 for any step
(s), then do this:
    s=0.05; // step size
    for (t=[0.0:s:1.0+s/2]) echo(t);

You are essentially adding 1/2 of one step to the end value, to make sure
you get that value.

I hope this helps!




--
View this message in context: http://forum.openscad.org/Loop-precision-floating-point-precision-tp14642p14643.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Thu Nov 19 08:03:57 2015
From: rudolf at parkinbot.com (Parkinbot)
Date: Thu, 19 Nov 2015 06:03:57 -0700 (MST)
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447909805682-14638.post@n5.nabble.com>
References: <1447763411906-14597.post@n5.nabble.com>
	<1447820922861-14611.post@n5.nabble.com>
	<1447837122876-14615.post@n5.nabble.com>
	<1447838899034-14616.post@n5.nabble.com>
	<1447849045665-14618.post@n5.nabble.com>
	<1447858072392-14620.post@n5.nabble.com>
	<1447873381153-14626.post@n5.nabble.com>
	<1447899136813-14635.post@n5.nabble.com>
	<1447902069689-14637.post@n5.nabble.com>
	<1447909805682-14638.post@n5.nabble.com>
Message-ID: <1447938237844-14644.post@n5.nabble.com>

You are right. A better solution would be the following approach. I didn't
present it, as I forgot how to express a partial array (Was it ever possible
in OpenSCAD to express a partial array like branches[2:4] ) Overcoming this
obstacle with the tail function, this is your proper and fast solution
ver2.0:

(By the way: a nice approach .)




Neon22 wrote
> I guess the disadvantage is the exponential work done as each fillet is
> applied to the growing object and one new part.





--
View this message in context: http://forum.openscad.org/Non-Linear-Transformations-tp14539p14644.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From lboyd at frontiernet.net  Thu Nov 19 08:22:30 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Thu, 19 Nov 2015 06:22:30 -0700 (MST)
Subject: [OpenSCAD] Improving the doc
In-Reply-To: <1447931761771-14640.post@n5.nabble.com>
References: <1447132878960-14333.post@n5.nabble.com>
	<1447302102462-14388.post@n5.nabble.com>
	<CAGV6i+OAk7VxK3OyLOqs-RD1XwDLZWdH4As5qStGdnPrUcat1A@mail.gmail.com>
	<1447828998302-14613.post@n5.nabble.com>
	<1447882726709-14629.post@n5.nabble.com>
	<1447884330884-14632.post@n5.nabble.com>
	<1447931761771-14640.post@n5.nabble.com>
Message-ID: <1447939350024-14645.post@n5.nabble.com>

Just to pass along what I learned about the physical organization. WikiBooks
expects each chapter to be all of one or more files.

When one visits the printable version pages they load everything so that it
looks like one page to the printer.

[[https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language]]
[[https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Print_version]]

When viewed online from the main page, or the cheat sheet, only the file
containing the part you selected is loaded.

This affects how parts should be ordered within each file. If one file
contains parts for more than one chapter, the print version could end up
with more than one copy of this file, one in each chapter.

 When viewed online this is less important since you are taken to the place
you selected regardless of where it is physically. However, if there is a
closely related part, you must go back to the selection page, unless they
are both in the same file.

Keep up the good work



-----
Larry
--
View this message in context: http://forum.openscad.org/Improving-the-doc-tp14333p14645.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From lboyd at frontiernet.net  Thu Nov 19 08:35:44 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Thu, 19 Nov 2015 06:35:44 -0700 (MST)
Subject: [OpenSCAD] Improving the doc
In-Reply-To: <1447939350024-14645.post@n5.nabble.com>
References: <1447132878960-14333.post@n5.nabble.com>
	<1447302102462-14388.post@n5.nabble.com>
	<CAGV6i+OAk7VxK3OyLOqs-RD1XwDLZWdH4As5qStGdnPrUcat1A@mail.gmail.com>
	<1447828998302-14613.post@n5.nabble.com>
	<1447882726709-14629.post@n5.nabble.com>
	<1447884330884-14632.post@n5.nabble.com>
	<1447931761771-14640.post@n5.nabble.com>
	<1447939350024-14645.post@n5.nabble.com>
Message-ID: <1447940144218-14646.post@n5.nabble.com>

Just looked at your introduction. Without looking closely at all the details,
my impression is that it gives a much improved view of what the language is
and is not. 



-----
Larry
--
View this message in context: http://forum.openscad.org/Improving-the-doc-tp14333p14646.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From lboyd at frontiernet.net  Thu Nov 19 08:48:12 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Thu, 19 Nov 2015 06:48:12 -0700 (MST)
Subject: [OpenSCAD] Improving the doc
In-Reply-To: <1447940144218-14646.post@n5.nabble.com>
References: <1447132878960-14333.post@n5.nabble.com>
	<1447302102462-14388.post@n5.nabble.com>
	<CAGV6i+OAk7VxK3OyLOqs-RD1XwDLZWdH4As5qStGdnPrUcat1A@mail.gmail.com>
	<1447828998302-14613.post@n5.nabble.com>
	<1447882726709-14629.post@n5.nabble.com>
	<1447884330884-14632.post@n5.nabble.com>
	<1447931761771-14640.post@n5.nabble.com>
	<1447939350024-14645.post@n5.nabble.com>
	<1447940144218-14646.post@n5.nabble.com>
Message-ID: <1447940892775-14647.post@n5.nabble.com>

I have seen OpenSCAD called a descriptive language. Perhaps this more quickly
gives one the viewpoint you wish to convey.



-----
Larry
--
View this message in context: http://forum.openscad.org/Improving-the-doc-tp14333p14647.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Thu Nov 19 11:29:39 2015
From: doug at moens.org (doug moen)
Date: Thu, 19 Nov 2015 11:29:39 -0500
Subject: [OpenSCAD] Loop precision (==floating point precision ?)
In-Reply-To: <1447938006204-14643.post@n5.nabble.com>
References: <1447936537847-14642.post@n5.nabble.com>
	<1447938006204-14643.post@n5.nabble.com>
Message-ID: <CAGV6i+Nqg_o7+giSFsYQ6_oOeqrUksvchvGkhPh3sWfzH-sO2A@mail.gmail.com>

I do not recommend using a trick like
   for (t=[0.0:0.05:1.0001])
to make a loop terminate.

0.05 can only be represented approximately as a binary floating point
number.
The error accumulates in each step of the loop.
This ever increasing error could affect the accuracy of your model,
depending on how the loop value is used.

It is better to iterate over integers, and use division to construct a
fraction
in each iteration of the loop.

On 19 November 2015 at 08:00, blobule <roys at iro.umontreal.ca> wrote:

> Yes this is normal.
>
> In your loop:
>
>     for (t=[0.0:0.05:1.0]) echo(t);
>
> The variable t is compared *exactly* with 1.0, and exact comparison is not
> reliable for floating point values.
> Basically, you should never use float inside a FOR loop, unless you add a
> small value to make sure it stops where you want.
>
> My suggestions for a reliable version of your loop is:
>
>     for (t=[0.0:0.05:1.0001]) echo(t);
> or better, use integers:
>     for(i=[0:20]) { t=i*0.05;echo(t); }
>
> In the first example, the extra .0001 reminds you that you are taking into
> account the fact that floating numbers are approximate.
> The second example is the best way, in my opinion, to loop trough a
> sequence. Use an integer to count the steps, and derive all float values
> from that integer.
>
> If you want to make sure that your loop will always stop at 1.0 for any
> step
> (s), then do this:
>     s=0.05; // step size
>     for (t=[0.0:s:1.0+s/2]) echo(t);
>
> You are essentially adding 1/2 of one step to the end value, to make sure
> you get that value.
>
> I hope this helps!
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Loop-precision-floating-point-precision-tp14642p14643.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151119/ebf432c6/attachment.html>

From vo.publique at gmail.com  Thu Nov 19 11:41:13 2015
From: vo.publique at gmail.com (vicnet)
Date: Thu, 19 Nov 2015 09:41:13 -0700 (MST)
Subject: [OpenSCAD] Loop precision (==floating point precision ?)
In-Reply-To: <CAGV6i+Nqg_o7+giSFsYQ6_oOeqrUksvchvGkhPh3sWfzH-sO2A@mail.gmail.com>
References: <1447936537847-14642.post@n5.nabble.com>
	<1447938006204-14643.post@n5.nabble.com>
	<CAGV6i+Nqg_o7+giSFsYQ6_oOeqrUksvchvGkhPh3sWfzH-sO2A@mail.gmail.com>
Message-ID: <1447951273105-14649.post@n5.nabble.com>

Thanks all.
I change iterator to integer and add a 'let' function to calculate the
parameter by dividing.
a+
Vicnet



--
View this message in context: http://forum.openscad.org/Loop-precision-floating-point-precision-tp14642p14649.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Thu Nov 19 12:46:02 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Thu, 19 Nov 2015 10:46:02 -0700 (MST)
Subject: [OpenSCAD] Loop precision (==floating point precision ?)
In-Reply-To: <1447951273105-14649.post@n5.nabble.com>
References: <1447936537847-14642.post@n5.nabble.com>
	<1447938006204-14643.post@n5.nabble.com>
	<CAGV6i+Nqg_o7+giSFsYQ6_oOeqrUksvchvGkhPh3sWfzH-sO2A@mail.gmail.com>
	<1447951273105-14649.post@n5.nabble.com>
Message-ID: <1447955162837-14650.post@n5.nabble.com>

With the most recent update, let() is no longer necessary in for() or other
flow control structure.  You only need let() in list comprehension. (and
function definition?)

I still feel something is off... I get that IEEE double has finite
resolution, but failing to terminate a for loop correctly with a precision
of 1/25 that's OUCH.




--
View this message in context: http://forum.openscad.org/Loop-precision-floating-point-precision-tp14642p14650.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From h.zeller at acm.org  Thu Nov 19 13:08:58 2015
From: h.zeller at acm.org (Henner Zeller)
Date: Thu, 19 Nov 2015 10:08:58 -0800
Subject: [OpenSCAD] Loop precision (==floating point precision ?)
In-Reply-To: <1447955162837-14650.post@n5.nabble.com>
References: <1447936537847-14642.post@n5.nabble.com>
	<1447938006204-14643.post@n5.nabble.com>
	<CAGV6i+Nqg_o7+giSFsYQ6_oOeqrUksvchvGkhPh3sWfzH-sO2A@mail.gmail.com>
	<1447951273105-14649.post@n5.nabble.com>
	<1447955162837-14650.post@n5.nabble.com>
Message-ID: <CAEQqtJzybwn2TsfckM7oVRDousBrh9-QXFb2N1HodhwuHixHYg@mail.gmail.com>

On 19 November 2015 at 09:46, ctchin <c.t.chin at szu.edu.cn> wrote:
> With the most recent update, let() is no longer necessary in for() or other
> flow control structure.  You only need let() in list comprehension. (and
> function definition?)
>
> I still feel something is off... I get that IEEE double has finite
> resolution, but failing to terminate a for loop correctly with a precision
> of 1/25 that's OUCH.

read the loop: the run variable is compared with 1.0. if it only
arrives the tiniest fraction above the cutoff point, then 1 is never
reached.
(so 1.000000001 for instance). So it is not 1/25 but about 1/(2^52) =
1/4503599627370496 being off which makes the loop not terminate at
1.0.

>
>
>
>
> --
> View this message in context: http://forum.openscad.org/Loop-precision-floating-point-precision-tp14642p14650.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


From doug at moens.org  Thu Nov 19 13:14:32 2015
From: doug at moens.org (doug moen)
Date: Thu, 19 Nov 2015 13:14:32 -0500
Subject: [OpenSCAD] Loop precision (==floating point precision ?)
In-Reply-To: <1447955162837-14650.post@n5.nabble.com>
References: <1447936537847-14642.post@n5.nabble.com>
	<1447938006204-14643.post@n5.nabble.com>
	<CAGV6i+Nqg_o7+giSFsYQ6_oOeqrUksvchvGkhPh3sWfzH-sO2A@mail.gmail.com>
	<1447951273105-14649.post@n5.nabble.com>
	<1447955162837-14650.post@n5.nabble.com>
Message-ID: <CAGV6i+NhbRRFDicenSf_sLqq94VAK2Kk5rPbvFvBhQ89JfCmmA@mail.gmail.com>

ctchin:

0.05 cannot be represented exactly in binary floating point, regardless of
the precision. We happen to use 64 bit floats, but it doesn't matter how
many bits you have, it still can't be represented. We could use 1024 bit
floats, and the loop would still not terminate at 1. It's not a bug in
OpenSCAD, it is just how floating point works.

If we used decimal floating point, then 0.05 would have an exact
representation, but there's no hardware support for decimal floating point
on the platforms we support, so OpenSCAD would be a lot slower. Decimal
floating point also does not eliminate most of the weirdness associated
with floating point, it only addresses the problem of floating point
literals like 0.05 not having an exact representation.

The article "What Every Computer Scientist Should Know About Floating
Point" contains way more information than most OpenSCAD programmers would
probably care to know, but it's a classic reference and is good for anybody
who really wants to know the details about why float arithmetic is so
unintuitive, and how to write programs to compensate for the weirdness.
https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html

The 'let' operator only works in expressions and in list comprehensions,
and is the only way to introduce local variable bindings in those contexts,
so your comment about 'let is no longer necessary' seems to be inaccurate.
Maybe you are thinking about the deprecation of the 'assign' operator.

On 19 November 2015 at 12:46, ctchin <c.t.chin at szu.edu.cn> wrote:

> With the most recent update, let() is no longer necessary in for() or other
> flow control structure.  You only need let() in list comprehension. (and
> function definition?)
>
> I still feel something is off... I get that IEEE double has finite
> resolution, but failing to terminate a for loop correctly with a precision
> of 1/25 that's OUCH.
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Loop-precision-floating-point-precision-tp14642p14650.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151119/17baf5ce/attachment.html>

From marius at kintel.net  Thu Nov 19 13:25:29 2015
From: marius at kintel.net (Marius Kintel)
Date: Thu, 19 Nov 2015 13:25:29 -0500
Subject: [OpenSCAD] Loop precision (==floating point precision ?)
In-Reply-To: <1447955162837-14650.post@n5.nabble.com>
References: <1447936537847-14642.post@n5.nabble.com>
	<1447938006204-14643.post@n5.nabble.com>
	<CAGV6i+Nqg_o7+giSFsYQ6_oOeqrUksvchvGkhPh3sWfzH-sO2A@mail.gmail.com>
	<1447951273105-14649.post@n5.nabble.com>
	<1447955162837-14650.post@n5.nabble.com>
Message-ID: <F7D1954E-70C9-4B4E-A74E-EF2C827E78B5@kintel.net>

> On Nov 19, 2015, at 12:46 PM, ctchin <c.t.chin at szu.edu.cn> wrote:
> 
>  still feel something is off... I get that IEEE double has finite
> resolution, but failing to terminate a for loop correctly with a precision
> of 1/25 that's OUCH.
> 
Did I misunderstand something? I was under the impression that the loop indeed terminates, it?s just sometimes missing the last step since we use equality comparison.

In retrospect, we should perhaps have excluded the max range item from the range, but that?s a tough one to revert now due to the amount of existing designs using this.

 -Marius



From whosawhatsis at gmail.com  Thu Nov 19 13:59:34 2015
From: whosawhatsis at gmail.com (whosawhatsis)
Date: Thu, 19 Nov 2015 10:59:34 -0800
Subject: [OpenSCAD] Loop precision =?utf-8?Q?(=3D=3Dfloating_?=point
 precision ?)
In-Reply-To: <F7D1954E-70C9-4B4E-A74E-EF2C827E78B5@kintel.net>
References: <1447936537847-14642.post@n5.nabble.com>
	<1447938006204-14643.post@n5.nabble.com>
	<CAGV6i+Nqg_o7+giSFsYQ6_oOeqrUksvchvGkhPh3sWfzH-sO2A@mail.gmail.com>
	<1447951273105-14649.post@n5.nabble.com>
	<1447955162837-14650.post@n5.nabble.com>
	<F7D1954E-70C9-4B4E-A74E-EF2C827E78B5@kintel.net>
Message-ID: <8E60FB7594C745BA83F475D8A98EE180@gmail.com>

I've wished for an exclusive end value for a long time. Perhaps there could be some prefix to mark the value as exclusive? Something like "for(i = [0:2:!5])" maybe, though '!' probably isn't the best character to use.  

You could also have an extra term, more like regex syntax, though you'd probably still want to use a special character to avoid collisions with variable names. Maybe just an extra trailing colon, like "for(i = [0:2:5:])"?  


On Thursday, November 19, 2015 at 10:25, Marius Kintel wrote:

> > On Nov 19, 2015, at 12:46 PM, ctchin <c.t.chin at szu.edu.cn (mailto:c.t.chin at szu.edu.cn)> wrote:
> >  
> > still feel something is off... I get that IEEE double has finite
> > resolution, but failing to terminate a for loop correctly with a precision
> > of 1/25 that's OUCH.
> >  
>  
> Did I misunderstand something? I was under the impression that the loop indeed terminates, it?s just sometimes missing the last step since we use equality comparison.
>  
> In retrospect, we should perhaps have excluded the max range item from the range, but that?s a tough one to revert now due to the amount of existing designs using this.
>  
> -Marius
>  
>  
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org (mailto:Discuss at lists.openscad.org)
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>  
>  


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151119/705927a6/attachment.html>

From runsun at gmail.com  Thu Nov 19 15:43:11 2015
From: runsun at gmail.com (runsun)
Date: Thu, 19 Nov 2015 13:43:11 -0700 (MST)
Subject: [OpenSCAD] Loop precision (==floating point precision ?)
In-Reply-To: <1447951273105-14649.post@n5.nabble.com>
References: <1447936537847-14642.post@n5.nabble.com>
	<1447938006204-14643.post@n5.nabble.com>
	<CAGV6i+Nqg_o7+giSFsYQ6_oOeqrUksvchvGkhPh3sWfzH-sO2A@mail.gmail.com>
	<1447951273105-14649.post@n5.nabble.com>
Message-ID: <1447965791921-14655.post@n5.nabble.com>

vicnet wrote
> Thanks all.
> I change iterator to integer and add a 'let' function to calculate the
> parameter by dividing.
> a+
> Vicnet

Check out this recent thread for why iterating over a floating point
increment is not reliable:

Simple addition of numbers introduces error
<http://forum.openscad.org/Simple-addition-of-numbers-introduces-error-td14408.html>  




-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git );


 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision 








--
View this message in context: http://forum.openscad.org/Loop-precision-floating-point-precision-tp14642p14655.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Nov 19 15:57:47 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 19 Nov 2015 13:57:47 -0700 (MST)
Subject: [OpenSCAD] Special Variables
In-Reply-To: <1447864845539-14622.post@n5.nabble.com>
References: <1447523102679-14477.post@n5.nabble.com>
	<1447525262400-14479.post@n5.nabble.com>
	<1447542364679-14488.post@n5.nabble.com>
	<1447543337951-14489.post@n5.nabble.com>
	<1447552442487-14496.post@n5.nabble.com>
	<CAEEmnrOhP0Ckj3ijuX21tD3h0MRX9Dsh_Nn37s_8FtbkGuUNwQ@mail.gmail.com>
	<1447792147400-14601.post@n5.nabble.com>
	<CAGV6i+NM+r4sRck6cdx8ex3pSzk51vJsTwDtJnhT=YDBP4Z1qw@mail.gmail.com>
	<1447864845539-14622.post@n5.nabble.com>
Message-ID: <1447966667517-14656.post@n5.nabble.com>

L Boyd wrote
>  For example
>    var = 5;
>    module showvar() echo(var);
>    showvar();	        // ECHO: 5
>    showvar(var = 10);	// ECHO: 10
> 
>  showvar(var = 10); is equivalent to:
>    module showvar(){ var = 10; echo(var); }
>    showvar();

Also note the case of default values.

> module showvar(var=10) { ... } is nuanced as
> 
> module showvar() {
>   var = ( ( var == undef ) ? 10 : var );
>   echo(var);
> }





-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Special-Variables-tp14477p14656.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Thu Nov 19 17:18:14 2015
From: mschafer at wireframe.biz (Mark Schafer)
Date: Fri, 20 Nov 2015 11:18:14 +1300
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447938237844-14644.post@n5.nabble.com>
References: <1447763411906-14597.post@n5.nabble.com>
	<1447820922861-14611.post@n5.nabble.com>
	<1447837122876-14615.post@n5.nabble.com>
	<1447838899034-14616.post@n5.nabble.com>
	<1447849045665-14618.post@n5.nabble.com>
	<1447858072392-14620.post@n5.nabble.com>
	<1447873381153-14626.post@n5.nabble.com>
	<1447899136813-14635.post@n5.nabble.com>
	<1447902069689-14637.post@n5.nabble.com>
	<1447909805682-14638.post@n5.nabble.com>
	<1447938237844-14644.post@n5.nabble.com>
Message-ID: <564E4AA6.9020907@wireframe.biz>

Yes I used this pattern
for (i=[1:len(branches)]) {
         b = branches[i];


On 11/20/2015 2:03 AM, Parkinbot wrote:
> You are right. A better solution would be the following approach. I didn't
> present it, as I forgot how to express a partial array (Was it ever possible
> in OpenSCAD to express a partial array like branches[2:4] ) Overcoming this
> obstacle with the tail function, this is your proper and fast solution
> ver2.0:
>
> (By the way: a nice approach .)
>
>


From doug at moens.org  Thu Nov 19 18:04:37 2015
From: doug at moens.org (doug moen)
Date: Thu, 19 Nov 2015 18:04:37 -0500
Subject: [OpenSCAD] Non-Linear Transformations
In-Reply-To: <1447938237844-14644.post@n5.nabble.com>
References: <1447763411906-14597.post@n5.nabble.com>
	<1447820922861-14611.post@n5.nabble.com>
	<1447837122876-14615.post@n5.nabble.com>
	<1447838899034-14616.post@n5.nabble.com>
	<1447849045665-14618.post@n5.nabble.com>
	<1447858072392-14620.post@n5.nabble.com>
	<1447873381153-14626.post@n5.nabble.com>
	<1447899136813-14635.post@n5.nabble.com>
	<1447902069689-14637.post@n5.nabble.com>
	<1447909805682-14638.post@n5.nabble.com>
	<1447938237844-14644.post@n5.nabble.com>
Message-ID: <CAGV6i+OR6t8ZpNQgHuz8zaW4nPhjbqztaCTAPsZxBuj7jdecfA@mail.gmail.com>

parkinbot: Was it ever possible in OpenSCAD to express a partial array like
branches[2:4]?

Currently you must write
   [for(i=[2:4])branches[i]]

Many people have asked for a more direct 'slice' operator, but we don't
have one yet. Multiple syntaxes have been proposed.

On 19 November 2015 at 08:03, Parkinbot <rudolf at parkinbot.com> wrote:

> You are right. A better solution would be the following approach. I didn't
> present it, as I forgot how to express a partial array (Was it ever
> possible
> in OpenSCAD to express a partial array like branches[2:4] ) Overcoming this
> obstacle with the tail function, this is your proper and fast solution
> ver2.0:
>
> (By the way: a nice approach .)
>
>
>
>
> Neon22 wrote
> > I guess the disadvantage is the exponential work done as each fillet is
> > applied to the growing object and one new part.
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Non-Linear-Transformations-tp14539p14644.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151119/742dc2d5/attachment.html>

From lboyd at frontiernet.net  Thu Nov 19 19:15:16 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Thu, 19 Nov 2015 17:15:16 -0700 (MST)
Subject: [OpenSCAD] Loop precision (==floating point precision ?)
In-Reply-To: <1447965791921-14655.post@n5.nabble.com>
References: <1447936537847-14642.post@n5.nabble.com>
	<1447938006204-14643.post@n5.nabble.com>
	<CAGV6i+Nqg_o7+giSFsYQ6_oOeqrUksvchvGkhPh3sWfzH-sO2A@mail.gmail.com>
	<1447951273105-14649.post@n5.nabble.com>
	<1447965791921-14655.post@n5.nabble.com>
Message-ID: <1447978516026-14659.post@n5.nabble.com>

For loops terminate when the next value would be greater than the max. Adding
a little bit to the max allows for flaying point representation errors.
If you don't like that, use a vector with the values you want rather than a
range.



-----
Larry
--
View this message in context: http://forum.openscad.org/Loop-precision-floating-point-precision-tp14642p14659.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From lboyd at frontiernet.net  Thu Nov 19 19:17:05 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Thu, 19 Nov 2015 17:17:05 -0700 (MST)
Subject: [OpenSCAD] Loop precision (==floating point precision ?)
In-Reply-To: <1447978516026-14659.post@n5.nabble.com>
References: <1447936537847-14642.post@n5.nabble.com>
	<1447938006204-14643.post@n5.nabble.com>
	<CAGV6i+Nqg_o7+giSFsYQ6_oOeqrUksvchvGkhPh3sWfzH-sO2A@mail.gmail.com>
	<1447951273105-14649.post@n5.nabble.com>
	<1447965791921-14655.post@n5.nabble.com>
	<1447978516026-14659.post@n5.nabble.com>
Message-ID: <1447978625693-14660.post@n5.nabble.com>

I meant floating point representation errors.



-----
Larry
--
View this message in context: http://forum.openscad.org/Loop-precision-floating-point-precision-tp14642p14660.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Fri Nov 20 01:35:03 2015
From: marius at kintel.net (Marius Kintel)
Date: Fri, 20 Nov 2015 01:35:03 -0500
Subject: [OpenSCAD] Improving the doc
In-Reply-To: <1447940892775-14647.post@n5.nabble.com>
References: <1447132878960-14333.post@n5.nabble.com>
	<1447302102462-14388.post@n5.nabble.com>
	<CAGV6i+OAk7VxK3OyLOqs-RD1XwDLZWdH4As5qStGdnPrUcat1A@mail.gmail.com>
	<1447828998302-14613.post@n5.nabble.com>
	<1447882726709-14629.post@n5.nabble.com>
	<1447884330884-14632.post@n5.nabble.com>
	<1447931761771-14640.post@n5.nabble.com>
	<1447939350024-14645.post@n5.nabble.com>
	<1447940144218-14646.post@n5.nabble.com>
	<1447940892775-14647.post@n5.nabble.com>
Message-ID: <9FE53AD7-E953-4891-A8B1-0B6D4486A978@kintel.net>

Hey,

Thanks to all for contributing to the docs.

One question: I see that someone accidentally deleted most of this page: https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Transformations

Not sure who, and somehow Wikibooks doesn?t let me undo it, as it thinks it?s ?suspicious?.
Could someone with better wikibooks permissions take a look?

Cheers, 

 -Marius



From Torsten.Paul at gmx.de  Fri Nov 20 02:28:30 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Fri, 20 Nov 2015 08:28:30 +0100
Subject: [OpenSCAD] Improving the doc
In-Reply-To: <9FE53AD7-E953-4891-A8B1-0B6D4486A978@kintel.net>
References: <1447132878960-14333.post@n5.nabble.com>
	<1447302102462-14388.post@n5.nabble.com>
	<CAGV6i+OAk7VxK3OyLOqs-RD1XwDLZWdH4As5qStGdnPrUcat1A@mail.gmail.com>
	<1447828998302-14613.post@n5.nabble.com>
	<1447882726709-14629.post@n5.nabble.com>
	<1447884330884-14632.post@n5.nabble.com>
	<1447931761771-14640.post@n5.nabble.com>
	<1447939350024-14645.post@n5.nabble.com>
	<1447940144218-14646.post@n5.nabble.com>
	<1447940892775-14647.post@n5.nabble.com>
	<9FE53AD7-E953-4891-A8B1-0B6D4486A978@kintel.net>
Message-ID: <564ECB9E.9010602@gmx.de>

On 11/20/2015 07:35 AM, Marius Kintel wrote:
> One question: I see that someone accidentally deleted most of this
> page: https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Transformations
> 
Ok, I could not "undo" the change - got the same error. But rejecting
it via review worked :-).

I did accept the change in the "Rotation rule help" section as this
looked fine to me...

ciao,
  Torsten.



From c.t.chin at szu.edu.cn  Fri Nov 20 03:37:38 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Fri, 20 Nov 2015 01:37:38 -0700 (MST)
Subject: [OpenSCAD] feature request: plug-ins
Message-ID: <1448008658153-14663.post@n5.nabble.com>

Expanding on an idea I propose in non-linear transformation, and some private
discussion with Parkinbot.  I think I hit on the best idea to address
"everyone's need" (caveat emptor).

A few people requested breaking the shackle of declarative language, others
want arbitrary manipulation of mesh points.  Personally I don't mind more
powerful features on OpenSCAD but worry about negative impact on the dev
team and/or community.  

I seem to have heard that kintel also speak Matlabese, so I think this
plug-in idea may be able to secure critical buy-in.  The idea is this: 

Rather than ask the dev team to change OpenSCAD in some radical way(s), just
open a way for end-users to write their own functions and module in C++ and
compile them to object code (DLL on Windows) and OpenSCAD would be able call
these routine seamlessly.  To explain this? I quote wiki for MEX file:

    When compiled, MEX files are dynamically loaded and allow external
functions to be invoked from within MATLAB or Octave as if they were
built-in functions. To support the development of MEX files, both MATLAB and
Octave offer external interface functions that facilitate the transfer of
data between MEX files and the workspace. 

So let's say user (u) wish to write his madtransform() module, to make it
possible, dev team (d) has to provide some C function calls which lets u get
the data.  So when madtransform.dll is ready and finish, u can access his
module from inside OpenSCAD by simply:



I.e. madtransform() is syntactically the same as any user-defined modules. 
Any number of parameters can be passed as any legal OpenSCAD quantities, and
any 2D/3D objects can be passed as children.  So NO need for de novo syntax
and data types.  

Back in the C realm, u will access these parameters and children by some C
function calls provided by d.  And the computation result (non-Affine
transform to u's hearts content) has to be a 2D/3D object, which is returned
to OpenSCAD via specific C function calls provided by d.  Output to OpenSCAD
console should also be available with the C-version of echo().  

The same should also be provided for OpenSCAD functions written in C++, that
is, instead of generating an 2D/3D object, some computation algorithm
written by u can be returned to OpenSCAD as long as it's legal OpenSCAD
quantities (values). 

This proposal preserve the "sanctity" of OpenSCAD, letting users to
experiment with any loony idea he may have, without burdening the dev team
with feature requests and potential tsunami of bug reports.  And if some
users come out with a gem, he could share it and maybe partition for
bundling it in the installation package.  Further he could choose to share
only the object code or share the source code as well.  




--
View this message in context: http://forum.openscad.org/feature-request-plug-ins-tp14663.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Fri Nov 20 03:53:57 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Fri, 20 Nov 2015 01:53:57 -0700 (MST)
Subject: [OpenSCAD] Improving the doc
In-Reply-To: <9FE53AD7-E953-4891-A8B1-0B6D4486A978@kintel.net>
References: <1447302102462-14388.post@n5.nabble.com>
	<CAGV6i+OAk7VxK3OyLOqs-RD1XwDLZWdH4As5qStGdnPrUcat1A@mail.gmail.com>
	<1447828998302-14613.post@n5.nabble.com>
	<1447882726709-14629.post@n5.nabble.com>
	<1447884330884-14632.post@n5.nabble.com>
	<1447931761771-14640.post@n5.nabble.com>
	<1447939350024-14645.post@n5.nabble.com>
	<1447940144218-14646.post@n5.nabble.com>
	<1447940892775-14647.post@n5.nabble.com>
	<9FE53AD7-E953-4891-A8B1-0B6D4486A978@kintel.net>
Message-ID: <1448009637077-14664.post@n5.nabble.com>

Yikes!  It might have been me.  VERY SORRY!

It doesn't help that I can't even tell if it's me.  I found out that
sometimes I was logged out while editing the doc, leaving only some IP
address as the author.  

Could the owner of the book limit  editing rights to only those who are
logged in as a registered person on Wikibooks?  At least that way it's
easier to trace mistakes.  

I do get distracted a lot during the day, so sometimes I leave a wiki page
in the edit/open state could be some unfortunate combination of events
caused the wiping of Transformations.  Luckily wiki is undo-able.  

Thanks and SORRY!




--
View this message in context: http://forum.openscad.org/Improving-the-doc-tp14333p14664.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Fri Nov 20 05:29:52 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Fri, 20 Nov 2015 11:29:52 +0100
Subject: [OpenSCAD] Improving the doc
In-Reply-To: <1448009637077-14664.post@n5.nabble.com>
References: <1447302102462-14388.post@n5.nabble.com>
	<CAGV6i+OAk7VxK3OyLOqs-RD1XwDLZWdH4As5qStGdnPrUcat1A@mail.gmail.com>
	<1447828998302-14613.post@n5.nabble.com>
	<1447882726709-14629.post@n5.nabble.com>
	<1447884330884-14632.post@n5.nabble.com>
	<1447931761771-14640.post@n5.nabble.com>
	<1447939350024-14645.post@n5.nabble.com>
	<1447940144218-14646.post@n5.nabble.com>
	<1447940892775-14647.post@n5.nabble.com>
	<9FE53AD7-E953-4891-A8B1-0B6D4486A978@kintel.net>,
	<1448009637077-14664.post@n5.nabble.com>
Message-ID: <trinity-da9c730e-8d6a-4270-b0a7-608f11ad311f-1448015392162@3capp-gmx-bs24>

> I do get distracted a lot during the day, so sometimes I leave a wiki page
> in the edit/open state could be some unfortunate combination of events
> caused the wiping of Transformations. Luckily wiki is undo-able.
>
Don't worry, things happen :-).
There's the review process anyway and even if something slipped through
there, it would be still possible to fix later using the history.

The help with the documentation is very much appreciated.

ciao,
  Torsten.




From c.t.chin at szu.edu.cn  Fri Nov 20 05:54:18 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Fri, 20 Nov 2015 03:54:18 -0700 (MST)
Subject: [OpenSCAD] Improving the doc
In-Reply-To: <1448009637077-14664.post@n5.nabble.com>
References: <CAGV6i+OAk7VxK3OyLOqs-RD1XwDLZWdH4As5qStGdnPrUcat1A@mail.gmail.com>
	<1447828998302-14613.post@n5.nabble.com>
	<1447882726709-14629.post@n5.nabble.com>
	<1447884330884-14632.post@n5.nabble.com>
	<1447931761771-14640.post@n5.nabble.com>
	<1447939350024-14645.post@n5.nabble.com>
	<1447940144218-14646.post@n5.nabble.com>
	<1447940892775-14647.post@n5.nabble.com>
	<9FE53AD7-E953-4891-A8B1-0B6D4486A978@kintel.net>
	<1448009637077-14664.post@n5.nabble.com>
Message-ID: <1448016858188-14666.post@n5.nabble.com>

Many thanks to wolf for some thorough checking of my draft versions.  Not
just for spotting my mistakes and deficiencies, but receiving attention and
comments from kintel, tp3 and wolf, especially, is very encouraging.  

I've pretty much implemented every one of his suggestions, plus a little
more.  But on recursion:
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language/Fast_Guide%28c.t.chin%29#Recursive_function_calls


wolf wrote
> I am missing here an example for tail recursion: see johnmdanskin in 
> http://forum.openscad.org/function-defined-by-recursion-How-not-to-td4299.html#a14086
> for an example
> 
> A short discussion when to use the one or other form of recursion would
> not be amiss here (built-in cut-off limits!).

Here I have only copied verbatim the part from the old doc , 
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language#Recursive_functions
adding or subtracting nothing.  My intention was only to illustrate that
relevant sub-topics would be included in the complete ref (currently
misnamed Fast Guide).  

I agree the write-up needs improvement and wolf's comment is spot-on.  But
until I read thread mentioned by wolf, I wasn't even aware of tail recursion
(well not quite true... if I think really hard, I might recall from CS101 a
quarter century ago).  

So... I'd like to wiggle out of this job: would some kind soul go and fix up
the writing on recursive function calls?  If you be bold, just go ahead and
re-write the original version.  If you be shy, do feel free to experiment
with my Fast Guide, which is unofficial and work-in-progress.  (both links
are found above)





--
View this message in context: http://forum.openscad.org/Improving-the-doc-tp14333p14666.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Fri Nov 20 07:50:09 2015
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 20 Nov 2015 05:50:09 -0700 (MST)
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <1448008658153-14663.post@n5.nabble.com>
References: <1448008658153-14663.post@n5.nabble.com>
Message-ID: <1448023809779-14667.post@n5.nabble.com>

Thanks ctchin. 

this a nice approach to keep the language sober affine on the object level
and allow for non affine extensions on everybodies own risk. I love the idea
to also interface console output, which allows for debugging and proper
error messages. Good point!

I propose that this plug-in architecture should also include support for
external function calls: 



or in a better version even expand name resolving (and shadowing) to
plug-ins as you have proposed it: 







--
View this message in context: http://forum.openscad.org/feature-request-plug-ins-tp14663p14667.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jdawgaz at gmail.com  Fri Nov 20 09:16:44 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Fri, 20 Nov 2015 07:16:44 -0700
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <1448023809779-14667.post@n5.nabble.com>
References: <1448008658153-14663.post@n5.nabble.com>
	<1448023809779-14667.post@n5.nabble.com>
Message-ID: <CAMyDR6JXscRtNsTC28TQBZ-7z5fHhwcUdN3OsW9Sa753X3P6Eg@mail.gmail.com>

and for those of us who do not program in C.
what about the first plugin being a C plugin that accepts a python, or
ruby, script?




--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson

On Fri, Nov 20, 2015 at 5:50 AM, Parkinbot <rudolf at parkinbot.com> wrote:

> Thanks ctchin.
>
> this a nice approach to keep the language sober affine on the object level
> and allow for non affine extensions on everybodies own risk. I love the
> idea
> to also interface console output, which allows for debugging and proper
> error messages. Good point!
>
> I propose that this plug-in architecture should also include support for
> external function calls:
>
>
>
> or in a better version even expand name resolving (and shadowing) to
> plug-ins as you have proposed it:
>
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/feature-request-plug-ins-tp14663p14667.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151120/47105e1d/attachment.html>

From rudolf at parkinbot.com  Fri Nov 20 09:29:23 2015
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 20 Nov 2015 07:29:23 -0700 (MST)
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <CAMyDR6JXscRtNsTC28TQBZ-7z5fHhwcUdN3OsW9Sa753X3P6Eg@mail.gmail.com>
References: <1448008658153-14663.post@n5.nabble.com>
	<1448023809779-14667.post@n5.nabble.com>
	<CAMyDR6JXscRtNsTC28TQBZ-7z5fHhwcUdN3OsW9Sa753X3P6Eg@mail.gmail.com>
Message-ID: <1448029763401-14669.post@n5.nabble.com>

@jdawgaz

You are perfectly right! Once the system opens a door like this ajar, all
languages may be connected by specific connectors. 



--
View this message in context: http://forum.openscad.org/feature-request-plug-ins-tp14663p14669.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Fri Nov 20 09:41:57 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Fri, 20 Nov 2015 15:41:57 +0100
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <CAMyDR6JXscRtNsTC28TQBZ-7z5fHhwcUdN3OsW9Sa753X3P6Eg@mail.gmail.com>
References: <1448008658153-14663.post@n5.nabble.com>
	<1448023809779-14667.post@n5.nabble.com>,
	<CAMyDR6JXscRtNsTC28TQBZ-7z5fHhwcUdN3OsW9Sa753X3P6Eg@mail.gmail.com>
Message-ID: <trinity-6be07905-584d-49d2-b801-486afcc5343f-1448030517099@3capp-gmx-bs24>

Von:?"Jerry Davis" <jdawgaz at gmail.com>
> and for those of us who do not program in C.
> what about the first plugin being a C plugin that accepts a python,
> or ruby, script?
>
For that specific use case, I don't see much need for a plugin.
Pretty much any language is covered by some project that uses
OpenSCAD as backend.

Python -> See SolidPython

  https://github.com/SolidCode/SolidPython

Ruby -> See CrystalScad

  https://github.com/Joaz/CrystalScad

Clojure -> See scad-clj

  https://github.com/farrellm/scad-clj

  Talk about creating Keyboards using this:
  https://www.youtube.com/watch?v=uk3A41U0iO4

  (not sure the picking on some of the OpenSCAD pains was needed
  to get the message across, still an interesting talk)

JavaScript -> ...

  /me is skipping the JavaScript projects as there are just too many to mention ;-).


ciao,
  Torsten.



From jdawgaz at gmail.com  Fri Nov 20 10:19:16 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Fri, 20 Nov 2015 08:19:16 -0700
Subject: [OpenSCAD] FYI: rotation, and teaching others about it
Message-ID: <CAMyDR6+3=JnOxiZT+36TQt64MHw58oN0NLywNGFyLntZXn6TFQ@mail.gmail.com>

I have been teaching openscad to a mix of people (my amateur radio
buddies), and some have had a little experience in programming (like
basic), others have had fairly extensive programming experience, and others
have absolutely none.

I started talking about rotation, and got them thoroughly confused. It is
not an easy concept, even when you are a programmer.

So, I came up with the following script which I hope will help alleviate
the visualization of what rotate does.

Just wanted to share this.

Jerry

============== script ==============

$fn = 300;

module textcube(t, c) {
  // t = text, c = color
  color(c) cube(2, center=true);
  translate([-0.5,-0.5,0.75]) text(t, size=1);
}

// make a part, that has n,s,e,w, up, down obvious orientations.
module part() {
  cylinder(h=5,r=3, center=true);
  translate([3,0,0]) rotate([90,0,0]) rotate([0,90,0]) textcube("N",
"Blue");
  translate([0,0,3]) rotate([0,0,0]) rotate([0,0,0]) textcube("U",
"Magenta");
  translate([-3,0,0]) rotate([-90,0,0]) rotate([0,-90,0]) textcube("S",
"MediumSpringGreen");
  translate([0,-3,0]) rotate([0,0,0]) rotate([90,0,0]) textcube("E",
"PeachPuff");
  translate([0,3,0]) rotate([0,180,0]) rotate([-90,0,0]) textcube("W",
"Olive");
  translate([0,0,-3]) rotate([180,0,0]) rotate([0,0,0]) textcube("D",
"LightSteelBlue");
}

// alternately change the values for the rotate transformation
// to see what happens to our part. I suggest values of 90, and -90
// for the various values.
// for instance, see what rotate([0,0,0]) does (which doesn't rotate at
all, obviously)
// then change it to 90 in the x direction (rotate([90,0,0]).
// what happens to our part then?
// change it back to 0, then back to 90 several times until you can
visualize what is happening
// then try 90 in the y direction, etc.
// later try doing in the 90 degrees in both the x and y directions?
// what happens?

rotate([0,0,0]) part();


=========== end of script ============

--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151120/e94a13c5/attachment.html>

From jdawgaz at gmail.com  Fri Nov 20 10:22:58 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Fri, 20 Nov 2015 08:22:58 -0700
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <trinity-6be07905-584d-49d2-b801-486afcc5343f-1448030517099@3capp-gmx-bs24>
References: <1448008658153-14663.post@n5.nabble.com>
	<1448023809779-14667.post@n5.nabble.com>
	<CAMyDR6JXscRtNsTC28TQBZ-7z5fHhwcUdN3OsW9Sa753X3P6Eg@mail.gmail.com>
	<trinity-6be07905-584d-49d2-b801-486afcc5343f-1448030517099@3capp-gmx-bs24>
Message-ID: <CAMyDR6LaMuVwgP1cCSMRDy1kmZhuFichqHUeCkqHnfHDEFVNFQ@mail.gmail.com>

Torsten:

yes, I have knowledge of solidpython, and am learning crystalscad.
But those aren't plugins, they are a module, and a gem that you can render
to "openscad" code, and paste into the editor later.
That is not the same thing as a plugin.

Jerry


--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson

On Fri, Nov 20, 2015 at 7:41 AM, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> Von: "Jerry Davis" <jdawgaz at gmail.com>
> > and for those of us who do not program in C.
> > what about the first plugin being a C plugin that accepts a python,
> > or ruby, script?
> >
> For that specific use case, I don't see much need for a plugin.
> Pretty much any language is covered by some project that uses
> OpenSCAD as backend.
>
> Python -> See SolidPython
>
>   https://github.com/SolidCode/SolidPython
>
> Ruby -> See CrystalScad
>
>   https://github.com/Joaz/CrystalScad
>
> Clojure -> See scad-clj
>
>   https://github.com/farrellm/scad-clj
>
>   Talk about creating Keyboards using this:
>   https://www.youtube.com/watch?v=uk3A41U0iO4
>
>   (not sure the picking on some of the OpenSCAD pains was needed
>   to get the message across, still an interesting talk)
>
> JavaScript -> ...
>
>   /me is skipping the JavaScript projects as there are just too many to
> mention ;-).
>
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151120/c98a18fe/attachment-0001.html>

From doug at moens.org  Fri Nov 20 10:36:38 2015
From: doug at moens.org (doug moen)
Date: Fri, 20 Nov 2015 10:36:38 -0500
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <1448008658153-14663.post@n5.nabble.com>
References: <1448008658153-14663.post@n5.nabble.com>
Message-ID: <CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>

You talk about "reducing the burden on the dev team", and then you talk
about the extensive list of capabilities that this new plugin API will
have. Hmm.

There are lots of proposals on the horizon that involve rewriting the
internals of OpenSCAD, for example:
* OpenSCAD2 (me)
* speeding up the language interpreter using LLVM (me)
* replacing the renderer with a new geometry engine (marius)
* rewriting the previewer (marius)

Any of the above projects, which involve a significant rewrite of
internals, would break existing plugins, since the plugin API would have to
change. The plugin API is going to expose a lot of internals, you see.

If the dev team is allowed to break the plugin API on each new release,
then I agree that this proposal doesn't increase their burden. :-)

Doug.

On 20 November 2015 at 03:37, ctchin <c.t.chin at szu.edu.cn> wrote:

> Expanding on an idea I propose in non-linear transformation, and some
> private
> discussion with Parkinbot.  I think I hit on the best idea to address
> "everyone's need" (caveat emptor).
>
> A few people requested breaking the shackle of declarative language, others
> want arbitrary manipulation of mesh points.  Personally I don't mind more
> powerful features on OpenSCAD but worry about negative impact on the dev
> team and/or community.
>
> I seem to have heard that kintel also speak Matlabese, so I think this
> plug-in idea may be able to secure critical buy-in.  The idea is this:
>
> Rather than ask the dev team to change OpenSCAD in some radical way(s),
> just
> open a way for end-users to write their own functions and module in C++ and
> compile them to object code (DLL on Windows) and OpenSCAD would be able
> call
> these routine seamlessly.  To explain this? I quote wiki for MEX file:
>
>     When compiled, MEX files are dynamically loaded and allow external
> functions to be invoked from within MATLAB or Octave as if they were
> built-in functions. To support the development of MEX files, both MATLAB
> and
> Octave offer external interface functions that facilitate the transfer of
> data between MEX files and the workspace.
>
> So let's say user (u) wish to write his madtransform() module, to make it
> possible, dev team (d) has to provide some C function calls which lets u
> get
> the data.  So when madtransform.dll is ready and finish, u can access his
> module from inside OpenSCAD by simply:
>
>
>
> I.e. madtransform() is syntactically the same as any user-defined modules.
> Any number of parameters can be passed as any legal OpenSCAD quantities,
> and
> any 2D/3D objects can be passed as children.  So NO need for de novo syntax
> and data types.
>
> Back in the C realm, u will access these parameters and children by some C
> function calls provided by d.  And the computation result (non-Affine
> transform to u's hearts content) has to be a 2D/3D object, which is
> returned
> to OpenSCAD via specific C function calls provided by d.  Output to
> OpenSCAD
> console should also be available with the C-version of echo().
>
> The same should also be provided for OpenSCAD functions written in C++,
> that
> is, instead of generating an 2D/3D object, some computation algorithm
> written by u can be returned to OpenSCAD as long as it's legal OpenSCAD
> quantities (values).
>
> This proposal preserve the "sanctity" of OpenSCAD, letting users to
> experiment with any loony idea he may have, without burdening the dev team
> with feature requests and potential tsunami of bug reports.  And if some
> users come out with a gem, he could share it and maybe partition for
> bundling it in the installation package.  Further he could choose to share
> only the object code or share the source code as well.
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/feature-request-plug-ins-tp14663.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151120/15e05e84/attachment.html>

From marius at kintel.net  Fri Nov 20 11:34:54 2015
From: marius at kintel.net (Marius Kintel)
Date: Fri, 20 Nov 2015 11:34:54 -0500
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
Message-ID: <629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>

I?ve been listening to requests for a plugin API many times :)
As Doug points out, this would significantly increase the amount of API we expose, which will definitely increase the dev and maintenance burden. Just look at the pain it is to maintain backwards compatibility with early design mistakes in the OpenSCAD language itself..

Now, _if_ we were to support plugins, here are some ideas:
* DO NOT support native plugins. This will introduce huge requirements for authors to provide binaries for all supported platform, or splintering the user community by selectively making their plugin available only on certain platforms.
* Limit the API to perform operations with a very limited exposed API (e.g. implement user-defined functions/modules where the only API is how to call and how to return values and shapes).
* Allow plugins to generate OpenSCAD code from a UI dialog (i.e. using the built-in QtScript to create dialogs) -> i.e. separate the plugin from the language run-time.
* Use a plugin language which doesn?t require any OS-level infrastructure installed; i.e. make the plugin language fully embedded.

Another request I get relatively often is for OpenSCAD to efficiently be used with a different front-end language, allowing people to use one of the wrappers/generators directly in the OpenSCAD GUI, alternatively, plug the OpenSCAD viewer into their corresponding  IDE or editor. Automatic Reload covers most use-cases for this though.

 -Marius



From Torsten.Paul at gmx.de  Fri Nov 20 13:11:50 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Fri, 20 Nov 2015 19:11:50 +0100
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <CAMyDR6LaMuVwgP1cCSMRDy1kmZhuFichqHUeCkqHnfHDEFVNFQ@mail.gmail.com>
References: <1448008658153-14663.post@n5.nabble.com>
	<1448023809779-14667.post@n5.nabble.com>
	<CAMyDR6JXscRtNsTC28TQBZ-7z5fHhwcUdN3OsW9Sa753X3P6Eg@mail.gmail.com>
	<trinity-6be07905-584d-49d2-b801-486afcc5343f-1448030517099@3capp-gmx-bs24>
	<CAMyDR6LaMuVwgP1cCSMRDy1kmZhuFichqHUeCkqHnfHDEFVNFQ@mail.gmail.com>
Message-ID: <564F6266.9050007@gmx.de>

On 11/20/2015 04:22 PM, Jerry Davis wrote:
> yes, I have knowledge of solidpython, and am learning crystalscad.
> But those aren't plugins, they are a module, and a gem that you
> can render to "openscad" code, and paste into the editor later.
> That is not the same thing as a plugin.
> 
With OpenSCAD just running as "viewer" (with automatic reload enabled),
you can pretty much use the other language without even seeing the
actual scad code. Just have a look at the video I linked starting at
21m:40s. This shows the Clojure example using Emacs as editor +
OpenSCAD as viewer.

Yes, it's not a plug-in but you have 2 separate windows for editor
and the viewer and write the language of your choice in that editor.

There's not much to gain from a plug-in when just wanting to use
a different language.

Plug-ins could cover other use cases, like prototyping new features
and implementing very special things. But that's a much much bigger
can of worms. Marius already listed some ideas how to make it
manageable.

Also we already have a very simple framework to mark features as
experimental which disables those automatically for release builds. So
if someone wants to experiment with some C++ coding, that's quite easy
already without a plug-in API. This part is lacking documentation though.
Adding a new feature, e.g. to generate a very specific mesh is probably
easily done in an hour or so.
What makes things complicated is always the usage of external libraries
on various platforms and the definition of how the user visible API
(= the language extension -> names, parameters, ...) should look like.

ciao,
  Torsten.


From runsun at gmail.com  Fri Nov 20 13:49:34 2015
From: runsun at gmail.com (runsun)
Date: Fri, 20 Nov 2015 11:49:34 -0700 (MST)
Subject: [OpenSCAD] Simple addition of numbers introduces error
In-Reply-To: <1447454658196-14464.post@n5.nabble.com>
References: <1447349711276-14408.post@n5.nabble.com>
	<56450272.9020903@bigpond.com>
	<CAEEmnrOodZgrLd3XC6a4cYr83ikH1coMccpjbxS-zJkgZo9xuw@mail.gmail.com>
	<1447454658196-14464.post@n5.nabble.com>
Message-ID: <1448045374254-14676.post@n5.nabble.com>

runsun wrote
> 
> Alan Cox wrote
>> The usual approach would be
>> 	abs(a - b) < ACCEPTABLE_ERROR
> 
> nophead wrote
>> Perhaps runsun could convert to strings with str to compare them. E.g.
>> 
>> x = 0.1 + 0.02;
>> 
>> echo(x == 0.12);
>> echo(str(x) == "0.12");
>> 
>> ECHO: false
>> ECHO: true
> Thx to Alan and nophead. Both approaches are in fact used in my doctest
> lib already. It's just that after months of success, something tickling
> (or breaking) my brain cells, let me start suspecting that it is not quite
> right yet. 
> 
> I now see that Openscad uses 17 significant digits for the internal
> operations, and 6 digits for display. I'll have to think about if my lib
> needs to change based on this findings.

Found a 3rd way to solve this. This potentially eliminates the error caused
by binary rounding:


> echo( 0.1+0.02 == 0.12 );  // false 
> f = pow(10,10);
> echo( (0.1*f+0.02*f)/f == 0.12 ); // true

I.e., multiply it by a big number to kind of raise it up some order, do the
addition/subtraction, then bring it back down to the original order. 





-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git );


 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision 








--
View this message in context: http://forum.openscad.org/Simple-addition-of-numbers-introduces-error-tp14408p14676.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From hypher at gmail.com  Fri Nov 20 15:08:22 2015
From: hypher at gmail.com (Yona Appletree)
Date: Fri, 20 Nov 2015 12:08:22 -0800
Subject: [OpenSCAD] FYI: rotation, and teaching others about it
In-Reply-To: <CAMyDR6+3=JnOxiZT+36TQt64MHw58oN0NLywNGFyLntZXn6TFQ@mail.gmail.com>
References: <CAMyDR6+3=JnOxiZT+36TQt64MHw58oN0NLywNGFyLntZXn6TFQ@mail.gmail.com>
Message-ID: <564F7DB6.4080101@gmail.com>

Jerry,

I think this is really useful for beginners, but one thing concerns me, 
which is the use of cardinal directions to represent the axes which 
already have names. Additionally, the axes already have colors in 
OpenSCAD as well (X=Red, Y=Green, Z=Blue). By changing both the names 
and colors of the axes, I think it actually may make it more confusing 
when trying to relate what's going on with the very-helpful axes 
visualizer in the preview pane, as well as with the rotation vector. 
Which number rotates around the NS axis, for instance?

Here is a version which names the directions using +X, -X, etc, and uses 
the already-defined colors, with a brighter color for positive and 
darker color for negative. I think this has a similar useful effect, but 
uses visual "terms" already established in OpenScad (and many other 3d 
programs).

As an aside, the text() module takes the very handle halign and valign 
parameters, which are an easier way of centering text than using manual 
offsets.

============== script ==============

$fn = 300;

module textcube(t, c) {
   // t = text, c = color
   color(c) cube(2, center=true);
   translate([0,-0,0.75]) text(t, size=1, halign="center", valign="center");
}

// make a part, that has n,s,e,w, up, down obvious orientations.
module part() {
   cylinder(h=5,r=3, center=true);

   translate([3,0,0]) rotate([90,0,0]) rotate([0,90,0]) textcube("+X", 
[1,0,0]);
   translate([-3,0,0]) rotate([-90,0,0]) rotate([0,-90,0]) 
textcube("-X", [.5,0,0]);

   translate([0,3,0]) rotate([0,180,0]) rotate([-90,0,0]) textcube("+Y", 
[0,1,0]);
   translate([0,-3,0]) rotate([0,0,0]) rotate([90,0,0]) textcube("-Y", 
[0,.5,0]);

   translate([0,0,3]) rotate([0,0,0]) rotate([0,0,0]) textcube("+Z", 
[0,0,1]);
   translate([0,0,-3]) rotate([180,0,0]) rotate([0,0,0]) textcube("-Z", 
[0,0,.5]);
}

// alternately change the values for the rotate transformation
// to see what happens to our part. I suggest values of 90, and -90
// for the various values.
// for instance, see what rotate([0,0,0]) does (which doesn't rotate at 
all, obviously)
// then change it to 90 in the x direction (rotate([90,0,0]).
// what happens to our part then?
// change it back to 0, then back to 90 several times until you can 
visualize what is happening
// then try 90 in the y direction, etc.
// later try doing in the 90 degrees in both the x and y directions?
// what happens?

rotate([0,0,0]) part();

=========== end of script ============


Best,

~ Yona
> Jerry Davis <mailto:jdawgaz at gmail.com>
> November 20, 2015 at 07:19
> I have been teaching openscad to a mix of people (my amateur radio 
> buddies), and some have had a little experience in programming (like 
> basic), others have had fairly extensive programming experience, and 
> others have absolutely none.
>
> I started talking about rotation, and got them thoroughly confused. It 
> is not an easy concept, even when you are a programmer.
>
> So, I came up with the following script which I hope will help 
> alleviate the visualization of what rotate does.
>
> Just wanted to share this.
>
> Jerry
>
> ============== script ==============
>
> $fn = 300;
>
> module textcube(t, c) {
>   // t = text, c = color
>   color(c) cube(2, center=true);
>   translate([-0.5,-0.5,0.75]) text(t, size=1);
> }
>
> // make a part, that has n,s,e,w, up, down obvious orientations.
> module part() {
>   cylinder(h=5,r=3, center=true);
>   translate([3,0,0]) rotate([90,0,0]) rotate([0,90,0]) textcube("N", 
> "Blue");
>   translate([0,0,3]) rotate([0,0,0]) rotate([0,0,0]) textcube("U", 
> "Magenta");
>   translate([-3,0,0]) rotate([-90,0,0]) rotate([0,-90,0]) 
> textcube("S", "MediumSpringGreen");
>   translate([0,-3,0]) rotate([0,0,0]) rotate([90,0,0]) textcube("E", 
> "PeachPuff");
>   translate([0,3,0]) rotate([0,180,0]) rotate([-90,0,0]) textcube("W", 
> "Olive");
>   translate([0,0,-3]) rotate([180,0,0]) rotate([0,0,0]) textcube("D", 
> "LightSteelBlue");
> }
>
> // alternately change the values for the rotate transformation
> // to see what happens to our part. I suggest values of 90, and -90
> // for the various values.
> // for instance, see what rotate([0,0,0]) does (which doesn't rotate 
> at all, obviously)
> // then change it to 90 in the x direction (rotate([90,0,0]).
> // what happens to our part then?
> // change it back to 0, then back to 90 several times until you can 
> visualize what is happening
> // then try 90 in the y direction, etc.
> // later try doing in the 90 degrees in both the x and y directions?
> // what happens?
>
> rotate([0,0,0]) part();
>
>
> =========== end of script ============
>
> --
> Extra Ham Operator: K7AZJ
> Registered Linux User: 275424
> Raspberry Pi and Arduino developer
>
> /The most exciting phrase to hear in science - the one that heralds 
> new discoveries - is not "Eureka!" but "That's funny...".
> /- Isaac. Asimov
>
> /I//f you give someone a program, you will frustrate them for a day; 
> if you teach them how to program, you will frustrate them for a lifetime.
> /- Anonymous
>
> /If writing good code requires very little comments, then writing 
> really excellent code requires no comments at all!
> /- Ken Thompson
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151120/0c5c4d90/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: compose-unknown-contact.jpg
Type: image/jpeg
Size: 770 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151120/0c5c4d90/attachment.jpg>

From jdawgaz at gmail.com  Fri Nov 20 15:19:58 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Fri, 20 Nov 2015 13:19:58 -0700
Subject: [OpenSCAD] FYI: rotation, and teaching others about it
In-Reply-To: <564F7DB6.4080101@gmail.com>
References: <CAMyDR6+3=JnOxiZT+36TQt64MHw58oN0NLywNGFyLntZXn6TFQ@mail.gmail.com>
	<564F7DB6.4080101@gmail.com>
Message-ID: <CAMyDR6+V34NiBtvTa4hOmn7U+=+3itjusX3ap8kK81d7Se+r5Q@mail.gmail.com>

thanks, let me put it in and see what I get.
Forgot about the halign, and valign. Should've thought of that.



--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson

On Fri, Nov 20, 2015 at 1:08 PM, Yona Appletree <hypher at gmail.com> wrote:

> Jerry,
>
> I think this is really useful for beginners, but one thing concerns me,
> which is the use of cardinal directions to represent the axes which already
> have names. Additionally, the axes already have colors in OpenSCAD as well
> (X=Red, Y=Green, Z=Blue). By changing both the names and colors of the
> axes, I think it actually may make it more confusing when trying to
> relate what's going on with the very-helpful axes visualizer in the preview
> pane, as well as with the rotation vector. Which number rotates around the
> NS axis, for instance?
>
> Here is a version which names the directions using +X, -X, etc, and uses
> the already-defined colors, with a brighter color for positive and darker
> color for negative. I think this has a similar useful effect, but uses
> visual "terms" already established in OpenScad (and many other 3d programs).
>
> As an aside, the text() module takes the very handle halign and valign
> parameters, which are an easier way of centering text than using manual
> offsets.
>
> ============== script ==============
>
> $fn = 300;
>
> module textcube(t, c) {
>   // t = text, c = color
>   color(c) cube(2, center=true);
>   translate([0,-0,0.75]) text(t, size=1, halign="center", valign="center");
> }
>
> // make a part, that has n,s,e,w, up, down obvious orientations.
> module part() {
>   cylinder(h=5,r=3, center=true);
>
>   translate([3,0,0]) rotate([90,0,0]) rotate([0,90,0]) textcube("+X",
> [1,0,0]);
>   translate([-3,0,0]) rotate([-90,0,0]) rotate([0,-90,0]) textcube("-X",
> [.5,0,0]);
>
>   translate([0,3,0]) rotate([0,180,0]) rotate([-90,0,0]) textcube("+Y",
> [0,1,0]);
>   translate([0,-3,0]) rotate([0,0,0]) rotate([90,0,0]) textcube("-Y",
> [0,.5,0]);
>
>   translate([0,0,3]) rotate([0,0,0]) rotate([0,0,0]) textcube("+Z",
> [0,0,1]);
>   translate([0,0,-3]) rotate([180,0,0]) rotate([0,0,0]) textcube("-Z",
> [0,0,.5]);
> }
>
> // alternately change the values for the rotate transformation
> // to see what happens to our part. I suggest values of 90, and -90
> // for the various values.
> // for instance, see what rotate([0,0,0]) does (which doesn't rotate at
> all, obviously)
> // then change it to 90 in the x direction (rotate([90,0,0]).
> // what happens to our part then?
> // change it back to 0, then back to 90 several times until you can
> visualize what is happening
> // then try 90 in the y direction, etc.
> // later try doing in the 90 degrees in both the x and y directions?
> // what happens?
>
> rotate([0,0,0]) part();
>
> =========== end of script ============
>
>
> Best,
>
> ~ Yona
>
> Jerry Davis <jdawgaz at gmail.com>
> November 20, 2015 at 07:19
> I have been teaching openscad to a mix of people (my amateur radio
> buddies), and some have had a little experience in programming (like
> basic), others have had fairly extensive programming experience, and others
> have absolutely none.
>
> I started talking about rotation, and got them thoroughly confused. It is
> not an easy concept, even when you are a programmer.
>
> So, I came up with the following script which I hope will help alleviate
> the visualization of what rotate does.
>
> Just wanted to share this.
>
> Jerry
>
> ============== script ==============
>
> $fn = 300;
>
> module textcube(t, c) {
>   // t = text, c = color
>   color(c) cube(2, center=true);
>   translate([-0.5,-0.5,0.75]) text(t, size=1);
> }
>
> // make a part, that has n,s,e,w, up, down obvious orientations.
> module part() {
>   cylinder(h=5,r=3, center=true);
>   translate([3,0,0]) rotate([90,0,0]) rotate([0,90,0]) textcube("N",
> "Blue");
>   translate([0,0,3]) rotate([0,0,0]) rotate([0,0,0]) textcube("U",
> "Magenta");
>   translate([-3,0,0]) rotate([-90,0,0]) rotate([0,-90,0]) textcube("S",
> "MediumSpringGreen");
>   translate([0,-3,0]) rotate([0,0,0]) rotate([90,0,0]) textcube("E",
> "PeachPuff");
>   translate([0,3,0]) rotate([0,180,0]) rotate([-90,0,0]) textcube("W",
> "Olive");
>   translate([0,0,-3]) rotate([180,0,0]) rotate([0,0,0]) textcube("D",
> "LightSteelBlue");
> }
>
> // alternately change the values for the rotate transformation
> // to see what happens to our part. I suggest values of 90, and -90
> // for the various values.
> // for instance, see what rotate([0,0,0]) does (which doesn't rotate at
> all, obviously)
> // then change it to 90 in the x direction (rotate([90,0,0]).
> // what happens to our part then?
> // change it back to 0, then back to 90 several times until you can
> visualize what is happening
> // then try 90 in the y direction, etc.
> // later try doing in the 90 degrees in both the x and y directions?
> // what happens?
>
> rotate([0,0,0]) part();
>
>
> =========== end of script ============
>
> --
> Extra Ham Operator: K7AZJ
> Registered Linux User: 275424
> Raspberry Pi and Arduino developer
>
>
> *The most exciting phrase to hear in science - the one that heralds new
> discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov
>
> *I*
> *f you give someone a program, you will frustrate them for a day; if you
> teach them how to program, you will frustrate them for a lifetime. *-
> Anonymous
>
>
> *If writing good code requires very little comments, then writing really
> excellent code requires no comments at all!*- Ken Thompson
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151120/7f071647/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: compose-unknown-contact.jpg
Type: image/jpeg
Size: 770 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151120/7f071647/attachment-0001.jpg>

From jdawgaz at gmail.com  Fri Nov 20 15:26:36 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Fri, 20 Nov 2015 13:26:36 -0700
Subject: [OpenSCAD] FYI: rotation, and teaching others about it
In-Reply-To: <CAMyDR6+V34NiBtvTa4hOmn7U+=+3itjusX3ap8kK81d7Se+r5Q@mail.gmail.com>
References: <CAMyDR6+3=JnOxiZT+36TQt64MHw58oN0NLywNGFyLntZXn6TFQ@mail.gmail.com>
	<564F7DB6.4080101@gmail.com>
	<CAMyDR6+V34NiBtvTa4hOmn7U+=+3itjusX3ap8kK81d7Se+r5Q@mail.gmail.com>
Message-ID: <CAMyDR6+gvLObQZYwcusCHpEwg1KCQpt+TweJKAS-xr8YT5sKNQ@mail.gmail.com>

looks really good.
except: the -X line came out X-
so I changed it to:
translate([-3,0,0]) rotate([90,0,0]) rotate([0,-90,0]) textcube("-X",
[.5,0,0]);


--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson

On Fri, Nov 20, 2015 at 1:19 PM, Jerry Davis <jdawgaz at gmail.com> wrote:

> thanks, let me put it in and see what I get.
> Forgot about the halign, and valign. Should've thought of that.
>
>
>
> --
> Extra Ham Operator: K7AZJ
> Registered Linux User: 275424
> Raspberry Pi and Arduino developer
>
>
> *The most exciting phrase to hear in science - the one that heralds new
> discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov
>
> *I*
> *f you give someone a program, you will frustrate them for a day; if you
> teach them how to program, you will frustrate them for a lifetime. *-
> Anonymous
>
>
> *If writing good code requires very little comments, then writing really
> excellent code requires no comments at all!*- Ken Thompson
>
> On Fri, Nov 20, 2015 at 1:08 PM, Yona Appletree <hypher at gmail.com> wrote:
>
>> Jerry,
>>
>> I think this is really useful for beginners, but one thing concerns me,
>> which is the use of cardinal directions to represent the axes which already
>> have names. Additionally, the axes already have colors in OpenSCAD as well
>> (X=Red, Y=Green, Z=Blue). By changing both the names and colors of the
>> axes, I think it actually may make it more confusing when trying to
>> relate what's going on with the very-helpful axes visualizer in the preview
>> pane, as well as with the rotation vector. Which number rotates around the
>> NS axis, for instance?
>>
>> Here is a version which names the directions using +X, -X, etc, and uses
>> the already-defined colors, with a brighter color for positive and darker
>> color for negative. I think this has a similar useful effect, but uses
>> visual "terms" already established in OpenScad (and many other 3d programs).
>>
>> As an aside, the text() module takes the very handle halign and valign
>> parameters, which are an easier way of centering text than using manual
>> offsets.
>>
>> ============== script ==============
>>
>> $fn = 300;
>>
>> module textcube(t, c) {
>>   // t = text, c = color
>>   color(c) cube(2, center=true);
>>   translate([0,-0,0.75]) text(t, size=1, halign="center",
>> valign="center");
>> }
>>
>> // make a part, that has n,s,e,w, up, down obvious orientations.
>> module part() {
>>   cylinder(h=5,r=3, center=true);
>>
>>   translate([3,0,0]) rotate([90,0,0]) rotate([0,90,0]) textcube("+X",
>> [1,0,0]);
>>   translate([-3,0,0]) rotate([-90,0,0]) rotate([0,-90,0]) textcube("-X",
>> [.5,0,0]);
>>
>>   translate([0,3,0]) rotate([0,180,0]) rotate([-90,0,0]) textcube("+Y",
>> [0,1,0]);
>>   translate([0,-3,0]) rotate([0,0,0]) rotate([90,0,0]) textcube("-Y",
>> [0,.5,0]);
>>
>>   translate([0,0,3]) rotate([0,0,0]) rotate([0,0,0]) textcube("+Z",
>> [0,0,1]);
>>   translate([0,0,-3]) rotate([180,0,0]) rotate([0,0,0]) textcube("-Z",
>> [0,0,.5]);
>> }
>>
>> // alternately change the values for the rotate transformation
>> // to see what happens to our part. I suggest values of 90, and -90
>> // for the various values.
>> // for instance, see what rotate([0,0,0]) does (which doesn't rotate at
>> all, obviously)
>> // then change it to 90 in the x direction (rotate([90,0,0]).
>> // what happens to our part then?
>> // change it back to 0, then back to 90 several times until you can
>> visualize what is happening
>> // then try 90 in the y direction, etc.
>> // later try doing in the 90 degrees in both the x and y directions?
>> // what happens?
>>
>> rotate([0,0,0]) part();
>>
>> =========== end of script ============
>>
>>
>> Best,
>>
>> ~ Yona
>>
>> Jerry Davis <jdawgaz at gmail.com>
>> November 20, 2015 at 07:19
>> I have been teaching openscad to a mix of people (my amateur radio
>> buddies), and some have had a little experience in programming (like
>> basic), others have had fairly extensive programming experience, and others
>> have absolutely none.
>>
>> I started talking about rotation, and got them thoroughly confused. It is
>> not an easy concept, even when you are a programmer.
>>
>> So, I came up with the following script which I hope will help alleviate
>> the visualization of what rotate does.
>>
>> Just wanted to share this.
>>
>> Jerry
>>
>> ============== script ==============
>>
>> $fn = 300;
>>
>> module textcube(t, c) {
>>   // t = text, c = color
>>   color(c) cube(2, center=true);
>>   translate([-0.5,-0.5,0.75]) text(t, size=1);
>> }
>>
>> // make a part, that has n,s,e,w, up, down obvious orientations.
>> module part() {
>>   cylinder(h=5,r=3, center=true);
>>   translate([3,0,0]) rotate([90,0,0]) rotate([0,90,0]) textcube("N",
>> "Blue");
>>   translate([0,0,3]) rotate([0,0,0]) rotate([0,0,0]) textcube("U",
>> "Magenta");
>>   translate([-3,0,0]) rotate([-90,0,0]) rotate([0,-90,0]) textcube("S",
>> "MediumSpringGreen");
>>   translate([0,-3,0]) rotate([0,0,0]) rotate([90,0,0]) textcube("E",
>> "PeachPuff");
>>   translate([0,3,0]) rotate([0,180,0]) rotate([-90,0,0]) textcube("W",
>> "Olive");
>>   translate([0,0,-3]) rotate([180,0,0]) rotate([0,0,0]) textcube("D",
>> "LightSteelBlue");
>> }
>>
>> // alternately change the values for the rotate transformation
>> // to see what happens to our part. I suggest values of 90, and -90
>> // for the various values.
>> // for instance, see what rotate([0,0,0]) does (which doesn't rotate at
>> all, obviously)
>> // then change it to 90 in the x direction (rotate([90,0,0]).
>> // what happens to our part then?
>> // change it back to 0, then back to 90 several times until you can
>> visualize what is happening
>> // then try 90 in the y direction, etc.
>> // later try doing in the 90 degrees in both the x and y directions?
>> // what happens?
>>
>> rotate([0,0,0]) part();
>>
>>
>> =========== end of script ============
>>
>> --
>> Extra Ham Operator: K7AZJ
>> Registered Linux User: 275424
>> Raspberry Pi and Arduino developer
>>
>>
>> *The most exciting phrase to hear in science - the one that heralds new
>> discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov
>>
>> *I*
>> *f you give someone a program, you will frustrate them for a day; if you
>> teach them how to program, you will frustrate them for a lifetime. *-
>> Anonymous
>>
>>
>> *If writing good code requires very little comments, then writing really
>> excellent code requires no comments at all!*- Ken Thompson
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151120/b78ef066/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: compose-unknown-contact.jpg
Type: image/jpeg
Size: 770 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151120/b78ef066/attachment.jpg>

From oz.at.michael at gmail.com  Fri Nov 20 16:04:41 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 20 Nov 2015 14:04:41 -0700 (MST)
Subject: [OpenSCAD] difference block and syntax error
Message-ID: <1448053481512-14680.post@n5.nabble.com>

This post from Randy was auto-discarded for some reason.

(slightly edited)
--------------------------------------------------------------------------------------------------------------------------
/*
Hi All,
I'm trying to create my first project from scratch and having been staring
at a syntax error for a while now.
I can generate two cubes just fine but as soon as I try to carve one out of
the other with a difference statement it won't compile. What obvious thing
am I missing?
Thanks in advance:
Randy in Seattle
WORKS:
 */
// simple lantern frame for paper inserts
// for LED candles only

//bottom_thickness=1;  // added by MichaelAtOz

//lantern_frame();
module lantern_frame() {
	// size of the inserts
	pane_height = 130;
	pane_width = 85;
	pane_thickness = 1;
	// depth of the pane slot in the frame
	pane_slot_depth = 3;
	// depth of the pane inset from the outside of the frame
	pane_inset = 2;
	// dimensions of the frame
	frame_thickness = 5;
	top_frame_width = 10;
	bottom_frame_width = 10;
	side_frame_width = 10;
	box_width = pane_width + 2 * (side_frame_width - pane_slot_depth);
	box_height = pane_height + bottom_frame_width + top_frame_width - 2 *
pane_slot_depth;
	cube([box_width, box_width, box_height], center = true);
	inside_width = box_width - 2 * frame_thickness;
	inside_height = box_height - bottom_thickness;
	cube([box_width, box_width, box_height], center = true);
}
//DOESN "T WORK: (syntax error on the line right after the difference call)
// simple lantern frame for paper inserts
// for LED candles only

lantern_frame2();
module lantern_frame2() {
	// size of the inserts
	pane_height = 130;
	pane_width = 85;
	pane_thickness = 1;
	// depth of the pane slot in the frame
	pane_slot_depth = 3;
	// depth of the pane inset from the outside of the frame
	pane_inset = 2;
	// dimensions of the frame
	frame_thickness = 5;
	top_frame_width = 10;
	bottom_frame_width = 10;
	side_frame_width = 10;
	difference() {
		box_width = pane_width + 2 * (side_frame_width - pane_slot_depth);
		box_height = pane_height + bottom_frame_width + top_frame_width - 2 *
pane_slot_depth;
		cube([box_width, box_width, box_height], center = true);
		inside_width = box_width - 2 * frame_thickness;
		inside_height = box_height - bottom_thickness;
		cube([box_width, box_width, box_height], center = true);
	}
}

----------------------------------------------------------------------------------------------------------------

Randy,

I did not get a syntax error. There was the unknown variable message
(bottom_thickness) which I added above (currently commented out).

What it gives me is a null cube, because you are difference()ing the exact
same cube from itself.

If you still have an error please include a cut/paste from the console.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/difference-block-and-syntax-error-tp14680.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Fri Nov 20 16:09:24 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 20 Nov 2015 14:09:24 -0700 (MST)
Subject: [OpenSCAD] difference block and syntax error
In-Reply-To: <1448053481512-14680.post@n5.nabble.com>
References: <1448053481512-14680.post@n5.nabble.com>
Message-ID: <1448053764862-14681.post@n5.nabble.com>

Randy,

I suspect you are using an old version of OpenSCAD?

Where you are not allowed to put assignments inside things like
difference().

I'd suggest going to the latest release. 
Otherwise move all the assignments out to the top level of the module.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/difference-block-and-syntax-error-tp14680p14681.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Fri Nov 20 16:27:47 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 20 Nov 2015 14:27:47 -0700 (MST)
Subject: [OpenSCAD] How to call multiple functions in two different
 .scad files and output STL?
In-Reply-To: <1447320570840-14396.post@n5.nabble.com>
References: <1447320570840-14396.post@n5.nabble.com>
Message-ID: <1448054867179-14682.post@n5.nabble.com>

Welcome to the forum. Your post is still flagged as "This post has NOT been
accepted by the mailing list yet", so nobody gets it unless they look. You
need to subscribe to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.


Unfortunately AFAIK you can't easily do what you want; OpenSCAD does not
have namespaces so at the global level the functions need to have unique
names.

You can use include<> and use<> inside a module, use three modules to
include/use? It would depend on your model as to whether such would be
workable.

If both the functions in the one file are the same name, then that won't
work.

Handrolic manipulation?

p.s. In case you haven't seen it: 
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Using_OpenSCAD_in_a_command_line_environment
<https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Using_OpenSCAD_in_a_command_line_environment>  

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Include_Statement
<https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Include_Statement>  

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Libraries
<https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Libraries>  





-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/How-to-call-multiple-functions-in-two-different-scad-files-and-output-STL-tp14396p14682.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Fri Nov 20 16:33:13 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 20 Nov 2015 14:33:13 -0700 (MST)
Subject: [OpenSCAD] create brik/solid with 2 2d figures as basics
In-Reply-To: <1447145450343-14336.post@n5.nabble.com>
References: <1447145450343-14336.post@n5.nabble.com>
Message-ID: <1448055193674-14683.post@n5.nabble.com>

Welcome to the forum. Your post is still flagged as "This post has NOT been
accepted by the mailing list yet", so nobody gets it unless they look. You
need to subscribe to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.

Sorry, I couldn't understand what you are after re brik/solid and
specifically 'basics'; could you try to explain a bit more. 

(the list is very cosmopolitan, there could be someone with your native
language here, could be worth a try if that is an issue)



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/create-brik-solid-with-2-2d-figures-as-basics-tp14336p14683.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From matt.minuti at gmail.com  Fri Nov 20 16:39:12 2015
From: matt.minuti at gmail.com (minuti)
Date: Fri, 20 Nov 2015 14:39:12 -0700 (MST)
Subject: [OpenSCAD] FYI: rotation, and teaching others about it
In-Reply-To: <CAMyDR6+3=JnOxiZT+36TQt64MHw58oN0NLywNGFyLntZXn6TFQ@mail.gmail.com>
References: <CAMyDR6+3=JnOxiZT+36TQt64MHw58oN0NLywNGFyLntZXn6TFQ@mail.gmail.com>
Message-ID: <1448055552132-14684.post@n5.nabble.com>

Another nice trick for explaining rotation: the right-hand rule!

Curious about which way "rotation about the X axis" will make it go? Point
your right thumb along the X axis, towards the +X direction, with your hand
loosely open. Now look at which way your fingers are curling, they're
pointing in the direction of the rotation. Ta-dah!

For rotation about multiple axes, it's the rotation about X, then about Y,
then about Z.

And applying the right-hand rule to this might just make some of your radio
buddies happy :)



--
View this message in context: http://forum.openscad.org/FYI-rotation-and-teaching-others-about-it-tp14671p14684.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jdawgaz at gmail.com  Sat Nov 21 00:11:58 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Fri, 20 Nov 2015 22:11:58 -0700
Subject: [OpenSCAD] difference not extending to box
Message-ID: <CAMyDR6+rJihc3Ac3L+581gYjr7cx+vpNpCNBdS+dzLqAea_CEw@mail.gmail.com>

I probably don't know what the proper search is for this in google.

But we all know that coding a module to do something like screw mounts,
does not extend to say a cube coded outside it.

But I can't find a "simple" way to make this happen.

Anyone got something simple to show here?

Thanks,
Jerry

--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151120/fcc94d20/attachment.html>

From Torsten.Paul at gmx.de  Sat Nov 21 07:40:34 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sat, 21 Nov 2015 13:40:34 +0100
Subject: [OpenSCAD] difference not extending to box
In-Reply-To: <CAMyDR6+rJihc3Ac3L+581gYjr7cx+vpNpCNBdS+dzLqAea_CEw@mail.gmail.com>
References: <CAMyDR6+rJihc3Ac3L+581gYjr7cx+vpNpCNBdS+dzLqAea_CEw@mail.gmail.com>
Message-ID: <56506642.4010402@gmx.de>

On 11/21/2015 06:11 AM, Jerry Davis wrote:
> But we all know that coding a module to do something like screw mounts,
> does not extend to say a cube coded outside it.
> 
Is that what you are searching for:

How can "negative" shapes extend outside of their module?
http://www.tridimake.com/2014/11/how-to-use-openscad-4-children-and.html

If yes, Jeremie has some nice solutions. Unfortunately there is no
easy way to do that yet.

ciao,
  Torsten.



From jdawgaz at gmail.com  Sat Nov 21 08:17:50 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Sat, 21 Nov 2015 06:17:50 -0700
Subject: [OpenSCAD] difference not extending to box
In-Reply-To: <56506642.4010402@gmx.de>
References: <CAMyDR6+rJihc3Ac3L+581gYjr7cx+vpNpCNBdS+dzLqAea_CEw@mail.gmail.com>
	<56506642.4010402@gmx.de>
Message-ID: <CAMyDR6+aBRm8EkRKd942C9Nv9AU3iP0fZNVB2Y95RZr__47hzg@mail.gmail.com>

thanks. I wish there was a simpler solution. oh well.


--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson

On Sat, Nov 21, 2015 at 5:40 AM, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 11/21/2015 06:11 AM, Jerry Davis wrote:
> > But we all know that coding a module to do something like screw mounts,
> > does not extend to say a cube coded outside it.
> >
> Is that what you are searching for:
>
> How can "negative" shapes extend outside of their module?
> http://www.tridimake.com/2014/11/how-to-use-openscad-4-children-and.html
>
> If yes, Jeremie has some nice solutions. Unfortunately there is no
> easy way to do that yet.
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151121/02ac6c37/attachment.html>

From nop.head at gmail.com  Sat Nov 21 11:17:40 2015
From: nop.head at gmail.com (nop head)
Date: Sat, 21 Nov 2015 16:17:40 +0000
Subject: [OpenSCAD] difference not extending to box
In-Reply-To: <CAMyDR6+aBRm8EkRKd942C9Nv9AU3iP0fZNVB2Y95RZr__47hzg@mail.gmail.com>
References: <CAMyDR6+rJihc3Ac3L+581gYjr7cx+vpNpCNBdS+dzLqAea_CEw@mail.gmail.com>
	<56506642.4010402@gmx.de>
	<CAMyDR6+aBRm8EkRKd942C9Nv9AU3iP0fZNVB2Y95RZr__47hzg@mail.gmail.com>
Message-ID: <CAEEmnrMT+uA5KrLZJd_LOkrkmqgZMzpYM8h9LnEG2f9sxC=9NA@mail.gmail.com>

I think it is a bit simpler. I just make a module that positions its
children on the screw positions. I use it to position the bosses, drill the
holes in them after they have been unioned with the base, possibly drill
mating holes and position the fasteners. I don't pass a flag to modules and
have them do two completely different things.
thanks. I wish there was a simpler solution. oh well.


--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson

On Sat, Nov 21, 2015 at 5:40 AM, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 11/21/2015 06:11 AM, Jerry Davis wrote:
> > But we all know that coding a module to do something like screw mounts,
> > does not extend to say a cube coded outside it.
> >
> Is that what you are searching for:
>
> How can "negative" shapes extend outside of their module?
> http://www.tridimake.com/2014/11/how-to-use-openscad-4-children-and.html
>
> If yes, Jeremie has some nice solutions. Unfortunately there is no
> easy way to do that yet.
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>


_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151121/12161bd3/attachment-0001.html>

From andrew at plumb.org  Sat Nov 21 13:36:55 2015
From: andrew at plumb.org (Andrew Plumb)
Date: Sat, 21 Nov 2015 13:36:55 -0500
Subject: [OpenSCAD] Any success building library dependencies on Mac OS X
	10.11 via scripts/macosx-build-dependencies.sh?
Message-ID: <2AC98921-3895-4348-A86D-99F3370FF9A0@plumb.org>

Hi Everyone,

Has anyone been building the dependencies on Mac OS X 10.11 with Xcode Version 7.1 (7B91b) successfully via the scripts/macosx-build-dependencies.sh script?

My attempts get hung up at the qt5 (5.5.1) stage, unable to find/resolve ?-lqtpcre?:

ld: library not found for -lqtpcre
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make[3]: *** [../../lib/QtCore.framework/QtCore] Error 1
make[2]: *** [sub-corelib-install_subtargets] Error 2
make[1]: *** [sub-src-install_subtargets] Error 2
make: *** [module-qtbase-install_subtargets] Error 2

I didn?t have any trouble installing qt5 directly from qt.io, and Mac Ports ?sudo port install qt5? worked too, so it feels more like a problem with scripts/macosx-build-dependencies.sh than elsewhere.

Some other tweaks I had to make to get to this point:

    # curl -O http://www.mpfr.org/mpfr-$version/mpfr-$version.tar.bz2
    curl -O https://ftp.gnu.org/gnu/mpfr/mpfr-$version.tar.bz2

    # curl -LO http://downloads.sourceforge.net/project/boost/boost/$version/boost_$bversion.tar.bz2
    curl -LO http://ufpr.dl.sourceforge.net/project/boost/boost/$version/boost_$bversion.tar.bz2

Thanks!

Andrew.

--

"The future is already here.  It's just not very evenly distributed" -- William Gibson

Me: http://clothbot.com/wiki/ <http://clothbot.com/wiki/>



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151121/4232bd07/attachment.html>

From Torsten.Paul at gmx.de  Sat Nov 21 13:39:55 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sat, 21 Nov 2015 19:39:55 +0100
Subject: [OpenSCAD] Any success building library dependencies on Mac OS
 X 10.11 via scripts/macosx-build-dependencies.sh?
In-Reply-To: <2AC98921-3895-4348-A86D-99F3370FF9A0@plumb.org>
References: <2AC98921-3895-4348-A86D-99F3370FF9A0@plumb.org>
Message-ID: <5650BA7B.5000901@gmx.de>

On 11/21/2015 07:36 PM, Andrew Plumb wrote:
> My attempts get hung up at the qt5 (5.5.1) stage, unable to find/resolve ?-lqtpcre?:
> 
Have a look at https://github.com/openscad/openscad/issues/1490

ciao,
  Torsten.



From marius at kintel.net  Sat Nov 21 13:45:56 2015
From: marius at kintel.net (Marius Kintel)
Date: Sat, 21 Nov 2015 13:45:56 -0500
Subject: [OpenSCAD] Any success building library dependencies on Mac OS
	X 10.11 via scripts/macosx-build-dependencies.sh?
In-Reply-To: <2AC98921-3895-4348-A86D-99F3370FF9A0@plumb.org>
References: <2AC98921-3895-4348-A86D-99F3370FF9A0@plumb.org>
Message-ID: <E5AB0DFE-D778-4EAE-889F-30141D62E827@kintel.net>

> 
> I didn?t have any trouble installing qt5 directly from qt.io, and Mac Ports ?sudo port install qt5? worked too, so it feels more like a problem with scripts/macosx-build-dependencies.sh than elsewhere.
> 
If you can see any differences that would trigger this issue, please let me know. Could it be that this is a bug in the Qt build system which triggers only when using some variation of which external components to user?

> Some other tweaks I had to make to get to this point:
> 
>     # curl -O http://www.mpfr.org/mpfr-$version/mpfr-$version.tar.bz2
>     curl -O https://ftp.gnu.org/gnu/mpfr/mpfr-$version.tar.bz2
> 
>     # curl -LO http://downloads.sourceforge.net/project/boost/boost/$version/boost_$bversion.tar.bz2
>     curl -LO http://ufpr.dl.sourceforge.net/project/boost/boost/$version/boost_$bversion.tar.bz2
> 
Hm, that?s odd. What failed with the original locations? I?ve been using this for years..

 -Marius



From andrew at plumb.org  Sat Nov 21 14:15:05 2015
From: andrew at plumb.org (Andrew Plumb)
Date: Sat, 21 Nov 2015 14:15:05 -0500
Subject: [OpenSCAD] Any success building library dependencies on Mac OS
	X 10.11 via scripts/macosx-build-dependencies.sh?
In-Reply-To: <E5AB0DFE-D778-4EAE-889F-30141D62E827@kintel.net>
References: <2AC98921-3895-4348-A86D-99F3370FF9A0@plumb.org>
	<E5AB0DFE-D778-4EAE-889F-30141D62E827@kintel.net>
Message-ID: <9D3AC8B8-72B6-450F-8919-C0105573DB19@plumb.org>


> On Nov 21, 2015, at 1:45 PM, Marius Kintel <marius at kintel.net> wrote:
> 
>> 
>> I didn?t have any trouble installing qt5 directly from qt.io, and Mac Ports ?sudo port install qt5? worked too, so it feels more like a problem with scripts/macosx-build-dependencies.sh than elsewhere.
>> 
> If you can see any differences that would trigger this issue, please let me know. Could it be that this is a bug in the Qt build system which triggers only when using some variation of which external components to user?
> 
>> Some other tweaks I had to make to get to this point:
>> 
>>    # curl -O http://www.mpfr.org/mpfr-$version/mpfr-$version.tar.bz2
>>    curl -O https://ftp.gnu.org/gnu/mpfr/mpfr-$version.tar.bz2
>> 
>>    # curl -LO http://downloads.sourceforge.net/project/boost/boost/$version/boost_$bversion.tar.bz2
>>    curl -LO http://ufpr.dl.sourceforge.net/project/boost/boost/$version/boost_$bversion.tar.bz2
>> 
> Hm, that?s odd. What failed with the original locations? I?ve been using this for years..
> 
> -Marius

For those two, there was a period last week when neither were reachable/resolving so I found alternates.

I?m going to keep them in place for myself while I poke at the qt5 issue with a Big Stick.

Andrew.


--

"The future is already here.  It's just not very evenly distributed" -- William Gibson

Me: http://clothbot.com/wiki/ <http://clothbot.com/wiki/>



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151121/fabdf82f/attachment.html>

From andrew at plumb.org  Sat Nov 21 14:16:23 2015
From: andrew at plumb.org (Andrew Plumb)
Date: Sat, 21 Nov 2015 14:16:23 -0500
Subject: [OpenSCAD] Any success building library dependencies on Mac OS
	X 10.11 via scripts/macosx-build-dependencies.sh?
In-Reply-To: <5650BA7B.5000901@gmx.de>
References: <2AC98921-3895-4348-A86D-99F3370FF9A0@plumb.org>
	<5650BA7B.5000901@gmx.de>
Message-ID: <D5D2367C-D051-45BD-9A2D-02362F2A41F6@plumb.org>

Thanks for pointing me at that.  It didn?t exist when I took a first stab at things but didn?t have time to dig into it at the time.  It?s not just me!

A.

> On Nov 21, 2015, at 1:39 PM, Torsten Paul <Torsten.Paul at gmx.de> wrote:
> 
> On 11/21/2015 07:36 PM, Andrew Plumb wrote:
>> My attempts get hung up at the qt5 (5.5.1) stage, unable to find/resolve ?-lqtpcre?:
>> 
> Have a look at https://github.com/openscad/openscad/issues/1490
> 
> ciao,
>  Torsten.
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

--

"The future is already here.  It's just not very evenly distributed" -- William Gibson

Me: http://clothbot.com/wiki/ <http://clothbot.com/wiki/>



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151121/ba0faad9/attachment.html>

From andrew at plumb.org  Sat Nov 21 22:03:09 2015
From: andrew at plumb.org (Andrew Plumb)
Date: Sat, 21 Nov 2015 22:03:09 -0500
Subject: [OpenSCAD] Any success building library dependencies on Mac OS
	X 10.11 via scripts/macosx-build-dependencies.sh?
In-Reply-To: <9D3AC8B8-72B6-450F-8919-C0105573DB19@plumb.org>
References: <2AC98921-3895-4348-A86D-99F3370FF9A0@plumb.org>
	<E5AB0DFE-D778-4EAE-889F-30141D62E827@kintel.net>
	<9D3AC8B8-72B6-450F-8919-C0105573DB19@plumb.org>
Message-ID: <C06E47CB-7C73-46FD-8BB9-D6EC9E228508@plumb.org>

Big Stick poking mission a success!  All that was needed was an extra configure ?-skip qtwebchannel? to clean up some unnecessary, broken dependencies.

https://github.com/openscad/openscad/pull/1501 <https://github.com/openscad/openscad/pull/1501>

Marius has already merged it in, so should be good to go!

Andrew.


> On Nov 21, 2015, at 2:15 PM, Andrew Plumb <andrew at plumb.org> wrote:
> 
>> 
>> On Nov 21, 2015, at 1:45 PM, Marius Kintel <marius at kintel.net <mailto:marius at kintel.net>> wrote:
>> 
>>> 
>>> I didn?t have any trouble installing qt5 directly from qt.io <http://qt.io/>, and Mac Ports ?sudo port install qt5? worked too, so it feels more like a problem with scripts/macosx-build-dependencies.sh than elsewhere.
>>> 
>> If you can see any differences that would trigger this issue, please let me know. Could it be that this is a bug in the Qt build system which triggers only when using some variation of which external components to user?
>> 
>>> Some other tweaks I had to make to get to this point:
>>> 
>>>    # curl -O http://www.mpfr.org/mpfr-$version/mpfr-$version.tar.bz2 <http://www.mpfr.org/mpfr-$version/mpfr-$version.tar.bz2>
>>>    curl -O https://ftp.gnu.org/gnu/mpfr/mpfr-$version.tar.bz2 <https://ftp.gnu.org/gnu/mpfr/mpfr-$version.tar.bz2>
>>> 
>>>    # curl -LO http://downloads.sourceforge.net/project/boost/boost/$version/boost_$bversion.tar.bz2 <http://downloads.sourceforge.net/project/boost/boost/$version/boost_$bversion.tar.bz2>
>>>    curl -LO http://ufpr.dl.sourceforge.net/project/boost/boost/$version/boost_$bversion.tar.bz2 <http://ufpr.dl.sourceforge.net/project/boost/boost/$version/boost_$bversion.tar.bz2>
>>> 
>> Hm, that?s odd. What failed with the original locations? I?ve been using this for years..
>> 
>> -Marius
> 
> For those two, there was a period last week when neither were reachable/resolving so I found alternates.
> 
> I?m going to keep them in place for myself while I poke at the qt5 issue with a Big Stick.
> 
> Andrew.
> 
> 
> --
> 
> "The future is already here.  It's just not very evenly distributed" -- William Gibson
> 
> Me: http://clothbot.com/wiki/ <http://clothbot.com/wiki/>
> 
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org <http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org>
--

"The future is already here.  It's just not very evenly distributed" -- William Gibson

Me: http://clothbot.com/wiki/ <http://clothbot.com/wiki/>



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151121/116f4a07/attachment-0001.html>

From jdawgaz at gmail.com  Sun Nov 22 00:11:14 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Sat, 21 Nov 2015 22:11:14 -0700
Subject: [OpenSCAD] difference not extending to box
In-Reply-To: <CAEEmnrMT+uA5KrLZJd_LOkrkmqgZMzpYM8h9LnEG2f9sxC=9NA@mail.gmail.com>
References: <CAMyDR6+rJihc3Ac3L+581gYjr7cx+vpNpCNBdS+dzLqAea_CEw@mail.gmail.com>
	<56506642.4010402@gmx.de>
	<CAMyDR6+aBRm8EkRKd942C9Nv9AU3iP0fZNVB2Y95RZr__47hzg@mail.gmail.com>
	<CAEEmnrMT+uA5KrLZJd_LOkrkmqgZMzpYM8h9LnEG2f9sxC=9NA@mail.gmail.com>
Message-ID: <CAMyDR6LJQ4J9Tq2-8f0PfpRhAGHExUfPGJGv7xZ+q4H5j0Nc4w@mail.gmail.com>

ok. could you provide that simpler example? thanks.


--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson

On Sat, Nov 21, 2015 at 9:17 AM, nop head <nop.head at gmail.com> wrote:

> I think it is a bit simpler. I just make a module that positions its
> children on the screw positions. I use it to position the bosses, drill the
> holes in them after they have been unioned with the base, possibly drill
> mating holes and position the fasteners. I don't pass a flag to modules and
> have them do two completely different things.
> thanks. I wish there was a simpler solution. oh well.
>
>
> --
> Extra Ham Operator: K7AZJ
> Registered Linux User: 275424
> Raspberry Pi and Arduino developer
>
>
> *The most exciting phrase to hear in science - the one that heralds new
> discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov
>
> *I*
> *f you give someone a program, you will frustrate them for a day; if you
> teach them how to program, you will frustrate them for a lifetime. *-
> Anonymous
>
>
> *If writing good code requires very little comments, then writing really
> excellent code requires no comments at all!*- Ken Thompson
>
> On Sat, Nov 21, 2015 at 5:40 AM, Torsten Paul <Torsten.Paul at gmx.de> wrote:
>
>> On 11/21/2015 06:11 AM, Jerry Davis wrote:
>> > But we all know that coding a module to do something like screw mounts,
>> > does not extend to say a cube coded outside it.
>> >
>> Is that what you are searching for:
>>
>> How can "negative" shapes extend outside of their module?
>> http://www.tridimake.com/2014/11/how-to-use-openscad-4-children-and.html
>>
>> If yes, Jeremie has some nice solutions. Unfortunately there is no
>> easy way to do that yet.
>>
>> ciao,
>>   Torsten.
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151121/b8e45c97/attachment.html>

From nop.head at gmail.com  Sun Nov 22 05:08:53 2015
From: nop.head at gmail.com (nop head)
Date: Sun, 22 Nov 2015 10:08:53 +0000
Subject: [OpenSCAD] difference not extending to box
In-Reply-To: <CAMyDR6LJQ4J9Tq2-8f0PfpRhAGHExUfPGJGv7xZ+q4H5j0Nc4w@mail.gmail.com>
References: <CAMyDR6+rJihc3Ac3L+581gYjr7cx+vpNpCNBdS+dzLqAea_CEw@mail.gmail.com>
	<56506642.4010402@gmx.de>
	<CAMyDR6+aBRm8EkRKd942C9Nv9AU3iP0fZNVB2Y95RZr__47hzg@mail.gmail.com>
	<CAEEmnrMT+uA5KrLZJd_LOkrkmqgZMzpYM8h9LnEG2f9sxC=9NA@mail.gmail.com>
	<CAMyDR6LJQ4J9Tq2-8f0PfpRhAGHExUfPGJGv7xZ+q4H5j0Nc4w@mail.gmail.com>
Message-ID: <CAEEmnrOm3O=N68Ex5rpwQ0CdsuiNMM-7SihhayemS8usi6Y-zA@mail.gmail.com>

See pi_holes() in this file
https://github.com/nophead/Mendel90/blob/master/scad/raspberry_pi.scad
On Nov 22, 2015 5:12 AM, "Jerry Davis" <jdawgaz at gmail.com> wrote:

> ok. could you provide that simpler example? thanks.
>
>
> --
> Extra Ham Operator: K7AZJ
> Registered Linux User: 275424
> Raspberry Pi and Arduino developer
>
>
> *The most exciting phrase to hear in science - the one that heralds new
> discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov
>
> *I*
> *f you give someone a program, you will frustrate them for a day; if you
> teach them how to program, you will frustrate them for a lifetime. *-
> Anonymous
>
>
> *If writing good code requires very little comments, then writing really
> excellent code requires no comments at all!*- Ken Thompson
>
> On Sat, Nov 21, 2015 at 9:17 AM, nop head <nop.head at gmail.com> wrote:
>
>> I think it is a bit simpler. I just make a module that positions its
>> children on the screw positions. I use it to position the bosses, drill the
>> holes in them after they have been unioned with the base, possibly drill
>> mating holes and position the fasteners. I don't pass a flag to modules and
>> have them do two completely different things.
>> thanks. I wish there was a simpler solution. oh well.
>>
>>
>> --
>> Extra Ham Operator: K7AZJ
>> Registered Linux User: 275424
>> Raspberry Pi and Arduino developer
>>
>>
>> *The most exciting phrase to hear in science - the one that heralds new
>> discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov
>>
>> *I*
>> *f you give someone a program, you will frustrate them for a day; if you
>> teach them how to program, you will frustrate them for a lifetime. *-
>> Anonymous
>>
>>
>> *If writing good code requires very little comments, then writing really
>> excellent code requires no comments at all!*- Ken Thompson
>>
>> On Sat, Nov 21, 2015 at 5:40 AM, Torsten Paul <Torsten.Paul at gmx.de>
>> wrote:
>>
>>> On 11/21/2015 06:11 AM, Jerry Davis wrote:
>>> > But we all know that coding a module to do something like screw mounts,
>>> > does not extend to say a cube coded outside it.
>>> >
>>> Is that what you are searching for:
>>>
>>> How can "negative" shapes extend outside of their module?
>>> http://www.tridimake.com/2014/11/how-to-use-openscad-4-children-and.html
>>>
>>> If yes, Jeremie has some nice solutions. Unfortunately there is no
>>> easy way to do that yet.
>>>
>>> ciao,
>>>   Torsten.
>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151122/2bd5c9ba/attachment.html>

From jdawgaz at gmail.com  Sun Nov 22 11:28:18 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Sun, 22 Nov 2015 09:28:18 -0700
Subject: [OpenSCAD] difference not extending to box
In-Reply-To: <CAEEmnrOm3O=N68Ex5rpwQ0CdsuiNMM-7SihhayemS8usi6Y-zA@mail.gmail.com>
References: <CAMyDR6+rJihc3Ac3L+581gYjr7cx+vpNpCNBdS+dzLqAea_CEw@mail.gmail.com>
	<56506642.4010402@gmx.de>
	<CAMyDR6+aBRm8EkRKd942C9Nv9AU3iP0fZNVB2Y95RZr__47hzg@mail.gmail.com>
	<CAEEmnrMT+uA5KrLZJd_LOkrkmqgZMzpYM8h9LnEG2f9sxC=9NA@mail.gmail.com>
	<CAMyDR6LJQ4J9Tq2-8f0PfpRhAGHExUfPGJGv7xZ+q4H5j0Nc4w@mail.gmail.com>
	<CAEEmnrOm3O=N68Ex5rpwQ0CdsuiNMM-7SihhayemS8usi6Y-zA@mail.gmail.com>
Message-ID: <CAMyDR6J20fzLVTZRg_gud-aEcuY=+BgHdQFUp+5Erv+zxiPWfA@mail.gmail.com>

thanks, I will be a scrutinizing!


--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson

On Sun, Nov 22, 2015 at 3:08 AM, nop head <nop.head at gmail.com> wrote:

> See pi_holes() in this file
> https://github.com/nophead/Mendel90/blob/master/scad/raspberry_pi.scad
> On Nov 22, 2015 5:12 AM, "Jerry Davis" <jdawgaz at gmail.com> wrote:
>
>> ok. could you provide that simpler example? thanks.
>>
>>
>> --
>> Extra Ham Operator: K7AZJ
>> Registered Linux User: 275424
>> Raspberry Pi and Arduino developer
>>
>>
>> *The most exciting phrase to hear in science - the one that heralds new
>> discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov
>>
>> *I*
>> *f you give someone a program, you will frustrate them for a day; if you
>> teach them how to program, you will frustrate them for a lifetime. *-
>> Anonymous
>>
>>
>> *If writing good code requires very little comments, then writing really
>> excellent code requires no comments at all!*- Ken Thompson
>>
>> On Sat, Nov 21, 2015 at 9:17 AM, nop head <nop.head at gmail.com> wrote:
>>
>>> I think it is a bit simpler. I just make a module that positions its
>>> children on the screw positions. I use it to position the bosses, drill the
>>> holes in them after they have been unioned with the base, possibly drill
>>> mating holes and position the fasteners. I don't pass a flag to modules and
>>> have them do two completely different things.
>>> thanks. I wish there was a simpler solution. oh well.
>>>
>>>
>>> --
>>> Extra Ham Operator: K7AZJ
>>> Registered Linux User: 275424
>>> Raspberry Pi and Arduino developer
>>>
>>>
>>> *The most exciting phrase to hear in science - the one that heralds new
>>> discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov
>>>
>>> *I*
>>> *f you give someone a program, you will frustrate them for a day; if you
>>> teach them how to program, you will frustrate them for a lifetime. *-
>>> Anonymous
>>>
>>>
>>> *If writing good code requires very little comments, then writing really
>>> excellent code requires no comments at all!*- Ken Thompson
>>>
>>> On Sat, Nov 21, 2015 at 5:40 AM, Torsten Paul <Torsten.Paul at gmx.de>
>>> wrote:
>>>
>>>> On 11/21/2015 06:11 AM, Jerry Davis wrote:
>>>> > But we all know that coding a module to do something like screw
>>>> mounts,
>>>> > does not extend to say a cube coded outside it.
>>>> >
>>>> Is that what you are searching for:
>>>>
>>>> How can "negative" shapes extend outside of their module?
>>>> http://www.tridimake.com/2014/11/how-to-use-openscad-4-children-and.html
>>>>
>>>> If yes, Jeremie has some nice solutions. Unfortunately there is no
>>>> easy way to do that yet.
>>>>
>>>> ciao,
>>>>   Torsten.
>>>>
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151122/f88c0b44/attachment-0001.html>

From rudolf at parkinbot.com  Sun Nov 22 12:17:29 2015
From: rudolf at parkinbot.com (Parkinbot)
Date: Sun, 22 Nov 2015 10:17:29 -0700 (MST)
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
Message-ID: <1448212649065-14700.post@n5.nabble.com>

@doug: such an interface is not meant to be redefined for each release, and I
doubt it will have to at all, if it is well specified.

@Marius
*user defined functions* have a very limited foot print. As the OpenSCAD
syntax for functions is rather restrictive, and porting useful code to
OpenSCAD can be quite painful, the language could gain a lot from it.

*object representation* might be interfaced at a polyhedron basis. If the
polyhedron object allowed for a combined parameter like [points , faces],
e.g.

 it even could be constructed by a user defined function as well.

*object operators* this is a more complex theme, as it requires to expose a
lot of information about internal representations. But I guess one could
easily expose a restricted interface for unary transform operators operating
over sets of xyz-points as already suggested in the "nonlinear
transformations" thread.

- Rudolf 





kintel wrote
> Now, _if_ we were to support plugins, here are some ideas:
> * DO NOT support native plugins. This will introduce huge requirements for
> authors to provide binaries for all supported platform, or splintering the
> user community by selectively making their plugin available only on
> certain platforms.
> * Limit the API to perform operations with a very limited exposed API
> (e.g. implement user-defined functions/modules where the only API is how
> to call and how to return values and shapes).
> * Allow plugins to generate OpenSCAD code from a UI dialog (i.e. using the
> built-in QtScript to create dialogs) -> i.e. separate the plugin from the
> language run-time.
> * Use a plugin language which doesn?t require any OS-level infrastructure
> installed; i.e. make the plugin language fully embedded.
> 
> Another request I get relatively often is for OpenSCAD to efficiently be
> used with a different front-end language, allowing people to use one of
> the wrappers/generators directly in the OpenSCAD GUI, alternatively, plug
> the OpenSCAD viewer into their corresponding  IDE or editor. Automatic
> Reload covers most use-cases for this though.
> 
>  -Marius
> 
> 
> _______________________________________________
> OpenSCAD mailing list

> Discuss at .openscad

> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org





--
View this message in context: http://forum.openscad.org/feature-request-plug-ins-tp14663p14700.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Sun Nov 22 14:51:55 2015
From: doug at moens.org (doug moen)
Date: Sun, 22 Nov 2015 14:51:55 -0500
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <1448212649065-14700.post@n5.nabble.com>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
	<1448212649065-14700.post@n5.nabble.com>
Message-ID: <CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>

Marius makes a good point that "native" plugins (using a C/C++ API) would
fragment the community, as most authors would not have the resources to
produce mac, windows and linux versions of their plugins.

My personal preference is to extend the OpenSCAD language so that it is
expressive enough to program advanced geometric shapes and operations, like
the generalized non-affine transform discussed earlier.

I have a roadmap for this, and it does include a more powerful language for
writing user defined functions, and direct access to the mesh.



On 22 November 2015 at 12:17, Parkinbot <rudolf at parkinbot.com> wrote:

> @doug: such an interface is not meant to be redefined for each release,
> and I
> doubt it will have to at all, if it is well specified.
>
> @Marius
> *user defined functions* have a very limited foot print. As the OpenSCAD
> syntax for functions is rather restrictive, and porting useful code to
> OpenSCAD can be quite painful, the language could gain a lot from it.
>
> *object representation* might be interfaced at a polyhedron basis. If the
> polyhedron object allowed for a combined parameter like [points , faces],
> e.g.
>
>  it even could be constructed by a user defined function as well.
>
> *object operators* this is a more complex theme, as it requires to expose a
> lot of information about internal representations. But I guess one could
> easily expose a restricted interface for unary transform operators
> operating
> over sets of xyz-points as already suggested in the "nonlinear
> transformations" thread.
>
> - Rudolf
>
>
>
>
>
> kintel wrote
> > Now, _if_ we were to support plugins, here are some ideas:
> > * DO NOT support native plugins. This will introduce huge requirements
> for
> > authors to provide binaries for all supported platform, or splintering
> the
> > user community by selectively making their plugin available only on
> > certain platforms.
> > * Limit the API to perform operations with a very limited exposed API
> > (e.g. implement user-defined functions/modules where the only API is how
> > to call and how to return values and shapes).
> > * Allow plugins to generate OpenSCAD code from a UI dialog (i.e. using
> the
> > built-in QtScript to create dialogs) -> i.e. separate the plugin from the
> > language run-time.
> > * Use a plugin language which doesn?t require any OS-level infrastructure
> > installed; i.e. make the plugin language fully embedded.
> >
> > Another request I get relatively often is for OpenSCAD to efficiently be
> > used with a different front-end language, allowing people to use one of
> > the wrappers/generators directly in the OpenSCAD GUI, alternatively, plug
> > the OpenSCAD viewer into their corresponding  IDE or editor. Automatic
> > Reload covers most use-cases for this though.
> >
> >  -Marius
> >
> >
> > _______________________________________________
> > OpenSCAD mailing list
>
> > Discuss at .openscad
>
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/feature-request-plug-ins-tp14663p14700.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151122/e1d7e89b/attachment.html>

From nop.head at gmail.com  Sun Nov 22 15:19:16 2015
From: nop.head at gmail.com (nop head)
Date: Sun, 22 Nov 2015 20:19:16 +0000
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
	<1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
Message-ID: <CAEEmnrNt37X09PZDEuDvHmy_TTvd0RoTHHioUGeHzxG0aKWXEg@mail.gmail.com>

There is already direct access to the mesh with polyhedron. I.e. you
specify the mesh, not query it, as with everything in OpenSCAD. You use
maths to describe geometry, not the other way around.

Adding the ability to mix in other languages will be very fragmenting
because in order to use other people's code you will need to install and be
fluent in random computer languages. As it stands you only need to install
OpenSCAD and be fluent in that very simple language and maths to be able to
create any geometry.
On Nov 22, 2015 7:52 PM, "doug moen" <doug at moens.org> wrote:

> Marius makes a good point that "native" plugins (using a C/C++ API) would
> fragment the community, as most authors would not have the resources to
> produce mac, windows and linux versions of their plugins.
>
> My personal preference is to extend the OpenSCAD language so that it is
> expressive enough to program advanced geometric shapes and operations, like
> the generalized non-affine transform discussed earlier.
>
> I have a roadmap for this, and it does include a more powerful language
> for writing user defined functions, and direct access to the mesh.
>
>
>
> On 22 November 2015 at 12:17, Parkinbot <rudolf at parkinbot.com> wrote:
>
>> @doug: such an interface is not meant to be redefined for each release,
>> and I
>> doubt it will have to at all, if it is well specified.
>>
>> @Marius
>> *user defined functions* have a very limited foot print. As the OpenSCAD
>> syntax for functions is rather restrictive, and porting useful code to
>> OpenSCAD can be quite painful, the language could gain a lot from it.
>>
>> *object representation* might be interfaced at a polyhedron basis. If the
>> polyhedron object allowed for a combined parameter like [points , faces],
>> e.g.
>>
>>  it even could be constructed by a user defined function as well.
>>
>> *object operators* this is a more complex theme, as it requires to expose
>> a
>> lot of information about internal representations. But I guess one could
>> easily expose a restricted interface for unary transform operators
>> operating
>> over sets of xyz-points as already suggested in the "nonlinear
>> transformations" thread.
>>
>> - Rudolf
>>
>>
>>
>>
>>
>> kintel wrote
>> > Now, _if_ we were to support plugins, here are some ideas:
>> > * DO NOT support native plugins. This will introduce huge requirements
>> for
>> > authors to provide binaries for all supported platform, or splintering
>> the
>> > user community by selectively making their plugin available only on
>> > certain platforms.
>> > * Limit the API to perform operations with a very limited exposed API
>> > (e.g. implement user-defined functions/modules where the only API is how
>> > to call and how to return values and shapes).
>> > * Allow plugins to generate OpenSCAD code from a UI dialog (i.e. using
>> the
>> > built-in QtScript to create dialogs) -> i.e. separate the plugin from
>> the
>> > language run-time.
>> > * Use a plugin language which doesn?t require any OS-level
>> infrastructure
>> > installed; i.e. make the plugin language fully embedded.
>> >
>> > Another request I get relatively often is for OpenSCAD to efficiently be
>> > used with a different front-end language, allowing people to use one of
>> > the wrappers/generators directly in the OpenSCAD GUI, alternatively,
>> plug
>> > the OpenSCAD viewer into their corresponding  IDE or editor. Automatic
>> > Reload covers most use-cases for this though.
>> >
>> >  -Marius
>> >
>> >
>> > _______________________________________________
>> > OpenSCAD mailing list
>>
>> > Discuss at .openscad
>>
>> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/feature-request-plug-ins-tp14663p14700.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151122/58417eb1/attachment.html>

From marius at kintel.net  Sun Nov 22 16:03:34 2015
From: marius at kintel.net (Marius Kintel)
Date: Sun, 22 Nov 2015 16:03:34 -0500
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <CAEEmnrNt37X09PZDEuDvHmy_TTvd0RoTHHioUGeHzxG0aKWXEg@mail.gmail.com>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
	<1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
	<CAEEmnrNt37X09PZDEuDvHmy_TTvd0RoTHHioUGeHzxG0aKWXEg@mail.gmail.com>
Message-ID: <D075ED8E-0FB2-40DF-BC3E-7E1000FFF67C@kintel.net>

> On Nov 22, 2015, at 15:19 PM, nop head <nop.head at gmail.com> wrote:

> Adding the ability to mix in other languages will be very fragmenting [?]

Allowing mix-ins like that is indeed scary. My ?plug-in? I was mostly thinking about ways of extending OpenSCAD by installing components exposing some API to the OpenSCAD language, keeping those two universes separated.

 -Marius



From alan at lxorguk.ukuu.org.uk  Sun Nov 22 16:19:32 2015
From: alan at lxorguk.ukuu.org.uk (Alan Cox)
Date: Sun, 22 Nov 2015 21:19:32 +0000
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
	<1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
Message-ID: <20151122211932.04126b2d@www.etchedpixels.co.uk>

On Sun, 22 Nov 2015 14:51:55 -0500
doug moen <doug at moens.org> wrote:

> Marius makes a good point that "native" plugins (using a C/C++ API) would
> fragment the community, as most authors would not have the resources to
> produce mac, windows and linux versions of their plugins.

Blender exports a python API. It allows a very low level access to the
data structures and meshes but being python is portable if you are
sensible.

Python is obviously rather slower than C but given the costs in OpenSCAD
are all elsewhere it's hardly going to matter for performance.

At that point though there is also pyscad which does things the other way
up and which is probably the right approach as it doesn't break the
functional nature of OpenSCAD or the parallising opportunities.

Alan


From rudolf at parkinbot.com  Sun Nov 22 17:04:10 2015
From: rudolf at parkinbot.com (Parkinbot)
Date: Sun, 22 Nov 2015 15:04:10 -0700 (MST)
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
	<1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
Message-ID: <1448229850203-14705.post@n5.nabble.com>

doug.moen wrote
> I have a roadmap for this, and it does include a more powerful language
> for
> writing user defined functions, and direct access to the mesh.

Can you elaborate on that? 



kintel wrote
> * Limit the API to perform operations with a very limited exposed API
>  (e.g. implement user-defined functions/modules where the only API is how
>  to call and how to return values and shapes).

this would be more or less what I meant and already a large step towards
interop. 


tp3 wrote
> Plug-ins could cover other use cases, like prototyping new features
> and implementing very special things.

You name it. 
I'm afraid that branching out own experimental versions of OpenSCAD just to
test a new feature, is a bit too involving - especially if there is a lack
of documentation. A plug-in interface is much more charming. 


nophead wrote
> As it stands you only need to install OpenSCAD and be fluent in that very
> simple language and maths to be able to create any geometry.

If it was like this, I wouldn't discuss. 


Rudolf



--
View this message in context: http://forum.openscad.org/feature-request-plug-ins-tp14663p14705.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sun Nov 22 17:27:04 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 22 Nov 2015 23:27:04 +0100
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <1448229850203-14705.post@n5.nabble.com>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
	<1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
	<1448229850203-14705.post@n5.nabble.com>
Message-ID: <56524138.9040109@gmx.de>

On 11/22/2015 11:04 PM, Parkinbot wrote:
> tp3 wrote
>> Plug-ins could cover other use cases, like prototyping new features
>> and implementing very special things.
> 
> You name it. 
> I'm afraid that branching out own experimental versions of OpenSCAD just to
> test a new feature, is a bit too involving - especially if there is a lack
> of documentation. A plug-in interface is much more charming. 
> 
Well, a plug-in documentation will also not write itself. And first
the plug-in API has to be designed and written too :-).

Hmm, still, maybe the "How to extend OpenSCAD" documentation could
use an external python call as example...

ciao,
  Torsten.



From anonimos79violin at gmail.com  Sun Nov 22 18:15:15 2015
From: anonimos79violin at gmail.com (Jimmis98)
Date: Sun, 22 Nov 2015 16:15:15 -0700 (MST)
Subject: [OpenSCAD] Centre of Mass
Message-ID: <1448234115875-14707.post@n5.nabble.com>

Hello.
I am creating a model of a car. I am going to actually build it from balsa
wood and ABS plastic. I would like the centre of mass of the model to be in
the middle of the distance between the front and rear wheels. I have reached
a point where the rear wheels is in position and I can move the location of
the front wheels parametrically. Is there a way to find the centre of mass
of the model, assuming it is made of a material of fixed density along its
volume (or maybe two materials, seeing that I will eventually work with two
as it is), and then have the front wheel relocate itself accordingly every
time I make a change and the centre of mass changes?
Additionally, is there a way to find the mass of an object?
Sorry if I am asking things that have no point of being asked in this forum
or have already been asked.



--
View this message in context: http://forum.openscad.org/Centre-of-Mass-tp14707.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Sun Nov 22 19:00:04 2015
From: doug at moens.org (doug moen)
Date: Sun, 22 Nov 2015 19:00:04 -0500
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <20151122211932.04126b2d@www.etchedpixels.co.uk>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
	<1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
	<20151122211932.04126b2d@www.etchedpixels.co.uk>
Message-ID: <CAGV6i+MhPJP27QSA1QwFXj_z+CrGP--L8KQEr4rtaEqfA8U9Jg@mail.gmail.com>

"Python is obviously rather slower than C but given the costs in OpenSCAD
are all elsewhere it's hardly going to matter for performance."

Let's think about the performance issues more carefully.

Consider that, in the current architecture, this plugin API would need to
be invoked both during script evaluation, and also during CGAL rendering,
and I guess also preview. The generalized non-affine transformation
operator would have to be invoked during rendering, because only then is
the mesh available.

If we use Python, then we are invoking Python code in the middle of CGAL
rendering. We have to convert CGAL numeric objects (which are dynamically
allocated rational numbers) into Python numeric objects, run the plugin
code, then convert the Python numbers back into CGAL numbers. This isn't
cheap, as I suspect that operations on CGAL numbers are the bulk of the
cost of rendering.

We haven't implemented any of our ideas yet for speeding up rendering by
using multiple cores, or by using the GPU, although that has been discussed
a lot. If part of the rendering code is written in Python, this becomes
much more difficult.

On 22 November 2015 at 16:19, Alan Cox <alan at lxorguk.ukuu.org.uk> wrote:

> On Sun, 22 Nov 2015 14:51:55 -0500
> doug moen <doug at moens.org> wrote:
>
> > Marius makes a good point that "native" plugins (using a C/C++ API) would
> > fragment the community, as most authors would not have the resources to
> > produce mac, windows and linux versions of their plugins.
>
> Blender exports a python API. It allows a very low level access to the
> data structures and meshes but being python is portable if you are
> sensible.
>
> Python is obviously rather slower than C but given the costs in OpenSCAD
> are all elsewhere it's hardly going to matter for performance.
>
> At that point though there is also pyscad which does things the other way
> up and which is probably the right approach as it doesn't break the
> functional nature of OpenSCAD or the parallising opportunities.
>
> Alan
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151122/4ef2c798/attachment.html>

From doug at moens.org  Mon Nov 23 00:28:30 2015
From: doug at moens.org (doug moen)
Date: Mon, 23 Nov 2015 00:28:30 -0500
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <1448229850203-14705.post@n5.nabble.com>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
	<1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
	<1448229850203-14705.post@n5.nabble.com>
Message-ID: <CAGV6i+PyPRUC3-uZhRtpBGi0M9boyew9zxEqDD0vryNYAQQ+Fg@mail.gmail.com>

At Parkinbot's request, here are some thoughts about the road ahead for
OpenSCAD:

   1. Make the core language more expressive and powerful. My current
   proposal for this is OpenSCAD2 <https://github.com/doug-moen/openscad2>.
   2. Make rendering much faster, so that it is as fast as preview. There
   are lots of things we can do, for example:
      - Replace CGAL with a faster and more memory efficient geometry
      engine that uses 64 bit floating point numbers, instead of
variable-length
      rationals.
      - Exploit multi-core parallelism.
      - Exploit the FPU, eg by using OpenCL or the new Vulkan API.
   3. Make the graphics primitives more powerful, by permitting the mesh to
   be queried. Script evaluation and rendering are now interleaved. Trygon's
   transform() operator can now be written in OpenSCAD.
   4. At this point, the performance choke points have changed, and we are
   now motivated to speed up the core language. A good approach is to use LLVM
   as our back end, which lets us compile OpenSCAD into optimized machine
   code. If Vulkan is now available on all platforms, then we can also use
   LLVM to generate optimized GPU code.

I think that OpenSCAD can be evolved into a much more powerful language for
3D solid modelling, without ruining the characteristics that our users find
valuable, such as simple, declarative semantics and convenient syntax.
OpenSCAD can be extended to become a better "plugin" language for writing
advanced solid modelling libraries than Python or some other general
purpose language.

In the long run, there are clear advantages to having a single language
that supports both simple and advanced solid modelling. You don't need to
jump the chasm from OpenSCAD to Python to start using more advanced
techniques in your models.

On 22 November 2015 at 17:04, Parkinbot <rudolf at parkinbot.com> wrote:

> doug.moen wrote
> > I have a roadmap for this, and it does include a more powerful language
> > for
> > writing user defined functions, and direct access to the mesh.
>
> Can you elaborate on that?
>
>
>
> kintel wrote
> > * Limit the API to perform operations with a very limited exposed API
> >  (e.g. implement user-defined functions/modules where the only API is how
> >  to call and how to return values and shapes).
>
> this would be more or less what I meant and already a large step towards
> interop.
>
>
> tp3 wrote
> > Plug-ins could cover other use cases, like prototyping new features
> > and implementing very special things.
>
> You name it.
> I'm afraid that branching out own experimental versions of OpenSCAD just to
> test a new feature, is a bit too involving - especially if there is a lack
> of documentation. A plug-in interface is much more charming.
>
>
> nophead wrote
> > As it stands you only need to install OpenSCAD and be fluent in that very
> > simple language and maths to be able to create any geometry.
>
> If it was like this, I wouldn't discuss.
>
>
> Rudolf
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/feature-request-plug-ins-tp14663p14705.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151123/52d9c02e/attachment-0001.html>

From alan at lxorguk.ukuu.org.uk  Mon Nov 23 04:01:44 2015
From: alan at lxorguk.ukuu.org.uk (Alan Cox)
Date: Mon, 23 Nov 2015 09:01:44 +0000
Subject: [OpenSCAD] Centre of Mass
In-Reply-To: <1448234115875-14707.post@n5.nabble.com>
References: <1448234115875-14707.post@n5.nabble.com>
Message-ID: <20151123090144.35549088@www.etchedpixels.co.uk>

On Sun, 22 Nov 2015 16:15:15 -0700 (MST)
Jimmis98 <anonimos79violin at gmail.com> wrote:

> Hello.
> I am creating a model of a car. I am going to actually build it from balsa
> wood and ABS plastic. I would like the centre of mass of the model to be in
> the middle of the distance between the front and rear wheels. I have reached
> a point where the rear wheels is in position and I can move the location of
> the front wheels parametrically. Is there a way to find the centre of mass
> of the model, assuming it is made of a material of fixed density along its
> volume (or maybe two materials, seeing that I will eventually work with two
> as it is), and then have the front wheel relocate itself accordingly every
> time I make a change and the centre of mass changes?
> Additionally, is there a way to find the mass of an object?
> Sorry if I am asking things that have no point of being asked in this forum
> or have already been asked.

OpenSCAD can't do it, but for a uniform material Meshlab can. See

http://gazebosim.org/tutorials?tut=inertia&cat=build_robot



From ari.diacou at gmail.com  Mon Nov 23 08:00:56 2015
From: ari.diacou at gmail.com (Ari Diacou)
Date: Mon, 23 Nov 2015 08:00:56 -0500
Subject: [OpenSCAD] Centre of Mass
In-Reply-To: <1448234115875-14707.post@n5.nabble.com>
References: <1448234115875-14707.post@n5.nabble.com>
Message-ID: <CA+HE+0+TEbDPc0h7wO-dPGih2MGcv28dF26fAWSL1fNMvhaL5Q@mail.gmail.com>

As far as I know, there is no short way to find the COM of a model.

Of course, if the model is of uniform density, then the center of mass is
just related to the center of volume. You could find the volume of each
item in your assembly, and then scalar multiply that by the translation
vectors, add them all together, and divide by the total mass to get the COM.

In general, OpenSCAD does not have functions which ask questions about the
model that has been made.

Good luck.



On Sun, Nov 22, 2015 at 6:15 PM, Jimmis98 <anonimos79violin at gmail.com>
wrote:

> Hello.
> I am creating a model of a car. I am going to actually build it from balsa
> wood and ABS plastic. I would like the centre of mass of the model to be in
> the middle of the distance between the front and rear wheels. I have
> reached
> a point where the rear wheels is in position and I can move the location of
> the front wheels parametrically. Is there a way to find the centre of mass
> of the model, assuming it is made of a material of fixed density along its
> volume (or maybe two materials, seeing that I will eventually work with two
> as it is), and then have the front wheel relocate itself accordingly every
> time I make a change and the centre of mass changes?
> Additionally, is there a way to find the mass of an object?
> Sorry if I am asking things that have no point of being asked in this forum
> or have already been asked.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Centre-of-Mass-tp14707.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151123/3c080ffe/attachment.html>

From sebastian.heyn at yahoo.de  Mon Nov 23 09:20:56 2015
From: sebastian.heyn at yahoo.de (Sebastian Heyn)
Date: Mon, 23 Nov 2015 07:20:56 -0700 (MST)
Subject: [OpenSCAD] Square to round transformation
Message-ID: <1448288456535-14712.post@n5.nabble.com>

Hi guys,

I am new to openscad and 3d printing. My first project will be a fan mount -
to mount a 120mm fan on a 110mm outside diameter pipe. 

I have the fan mount set up but i wonder how I can design something that
will reduce the square 120mm to 110mm round. 

Any ideas?



--
View this message in context: http://forum.openscad.org/Square-to-round-transformation-tp14712.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Mon Nov 23 09:53:08 2015
From: nop.head at gmail.com (nop head)
Date: Mon, 23 Nov 2015 14:53:08 +0000
Subject: [OpenSCAD] Square to round transformation
In-Reply-To: <1448288456535-14712.post@n5.nabble.com>
References: <1448288456535-14712.post@n5.nabble.com>
Message-ID: <CAEEmnrPPaLXOQXR3Wnzn8MG1ciU7h8sAN5JnJQnp3G=gvOAVfg@mail.gmail.com>

Taking the convex hull of a square and a cylinder will give you the basic
shape. Then subtract a smaller version to hollow it out.
On Nov 23, 2015 2:21 PM, "Sebastian Heyn" <sebastian.heyn at yahoo.de> wrote:

> Hi guys,
>
> I am new to openscad and 3d printing. My first project will be a fan mount
> -
> to mount a 120mm fan on a 110mm outside diameter pipe.
>
> I have the fan mount set up but i wonder how I can design something that
> will reduce the square 120mm to 110mm round.
>
> Any ideas?
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Square-to-round-transformation-tp14712.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151123/04719198/attachment.html>

From andrew at plumb.org  Mon Nov 23 09:57:36 2015
From: andrew at plumb.org (clothbot)
Date: Mon, 23 Nov 2015 07:57:36 -0700 (MST)
Subject: [OpenSCAD] Centre of Mass
In-Reply-To: <CA+HE+0+TEbDPc0h7wO-dPGih2MGcv28dF26fAWSL1fNMvhaL5Q@mail.gmail.com>
References: <1448234115875-14707.post@n5.nabble.com>
	<CA+HE+0+TEbDPc0h7wO-dPGih2MGcv28dF26fAWSL1fNMvhaL5Q@mail.gmail.com>
Message-ID: <1448290656079-14714.post@n5.nabble.com>

Total volume and center-of-mass could be calculated at export time, right
around here:

https://github.com/openscad/openscad/blob/master/src/export.cc#L142-L187

Nice little overview of the math involved for volume here:

http://n-e-r-v-o-u-s.com/blog/?p=4415

...and for center of mass, aka "Centroid of a 3D shell described by 3 vertex
facets":

http://paulbourke.net/geometry/polygonmesh/

...or...

http://wwwf.imperial.ac.uk/~rn/centroid.pdf

It's a bit more involved, but same underlying principles.

Andrew.



--
View this message in context: http://forum.openscad.org/Centre-of-Mass-tp14707p14714.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From ari.diacou at gmail.com  Mon Nov 23 10:52:28 2015
From: ari.diacou at gmail.com (Ari Diacou)
Date: Mon, 23 Nov 2015 10:52:28 -0500
Subject: [OpenSCAD] Centre of Mass
In-Reply-To: <1448290656079-14714.post@n5.nabble.com>
References: <1448234115875-14707.post@n5.nabble.com>
	<CA+HE+0+TEbDPc0h7wO-dPGih2MGcv28dF26fAWSL1fNMvhaL5Q@mail.gmail.com>
	<1448290656079-14714.post@n5.nabble.com>
Message-ID: <CA+HE+0JzvRN3eBRCVOMUQ3KcO3YywhQEnzofwYM1q4QDRtFPNw@mail.gmail.com>

I would love to have some functions that calculate information about the
model:
facets,
edges,
estimated hard disk space for a given export e.g. storage_space(type="stl")
volume,
surface area,
principal rotation axes, (output as a matrix?)
center of mass,
surface area that intersects a given plane,
a way to get a point plane or line segment on the surface of a 2D or 3D
shape (im thinking some way that we could at least find the farthest or
nearest point to the center of mass),
contour length of a slice intersecting a given plane,
estimated filament volume as a function of shell thickness and fill
percentage (although we could do that ourselves with the above functions)

It would also be nice if each of these functions could work on a tree of
code e.g.

module widget(){...}
f=facets(widget());
echo(f);

and if no code were passed to facets() then it would calculate it based on
the whole model.

I would, of course, also like: them to be implemented in the next release,
with good documentation, in the exact method i described, and a pony.
kthxbai.


On Mon, Nov 23, 2015 at 9:57 AM, clothbot <andrew at plumb.org> wrote:

> Total volume and center-of-mass could be calculated at export time, right
> around here:
>
> https://github.com/openscad/openscad/blob/master/src/export.cc#L142-L187
>
> Nice little overview of the math involved for volume here:
>
> http://n-e-r-v-o-u-s.com/blog/?p=4415
>
> ...and for center of mass, aka "Centroid of a 3D shell described by 3
> vertex
> facets":
>
> http://paulbourke.net/geometry/polygonmesh/
>
> ...or...
>
> http://wwwf.imperial.ac.uk/~rn/centroid.pdf
>
> It's a bit more involved, but same underlying principles.
>
> Andrew.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Centre-of-Mass-tp14707p14714.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151123/29422931/attachment.html>

From Torsten.Paul at gmx.de  Mon Nov 23 11:14:25 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 23 Nov 2015 17:14:25 +0100
Subject: [OpenSCAD] Centre of Mass
In-Reply-To: <CA+HE+0JzvRN3eBRCVOMUQ3KcO3YywhQEnzofwYM1q4QDRtFPNw@mail.gmail.com>
References: <1448234115875-14707.post@n5.nabble.com>
	<CA+HE+0+TEbDPc0h7wO-dPGih2MGcv28dF26fAWSL1fNMvhaL5Q@mail.gmail.com>
	<1448290656079-14714.post@n5.nabble.com>
	<CA+HE+0JzvRN3eBRCVOMUQ3KcO3YywhQEnzofwYM1q4QDRtFPNw@mail.gmail.com>
Message-ID: <56533B61.6020609@gmx.de>

On 11/23/2015 04:52 PM, Ari Diacou wrote:
> I would love to have some functions that calculate information about
> the model:
>
Hmm, most of that information (when applied to the final rendered model)
could be generated by some post processing. This could be a nice candidate
for a very simple plug-in interface as discussed in a different thread.

I think there's an issue on github asking for something in that
direction. With a more general approach, it could cover lots of things
(e.g. call a slicer, upload to some webservice like octoprint, calculate
information).

All that would mean it's strictly a GUI feature, the language itself
does not need to know anything about this.

> I would, of course, also like: them to be implemented in the next
> release, with good documentation, in the exact method i described,
> and a pony. kthxbai.
>
No unicorn? Where's the challenge then? ;-)

ciao,
  Torsten.



From anonimos79violin at gmail.com  Mon Nov 23 11:31:59 2015
From: anonimos79violin at gmail.com (Jimmis98)
Date: Mon, 23 Nov 2015 09:31:59 -0700 (MST)
Subject: [OpenSCAD] Centre of Mass
In-Reply-To: <1448234115875-14707.post@n5.nabble.com>
References: <1448234115875-14707.post@n5.nabble.com>
Message-ID: <1448296319603-14717.post@n5.nabble.com>

So, basically, it is not yet supported by OpenSCAD itself and I will have
better luck either changing software or using an additional external tool.
Amirite?




--
View this message in context: http://forum.openscad.org/Centre-of-Mass-tp14707p14717.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From alan at lxorguk.ukuu.org.uk  Mon Nov 23 11:39:00 2015
From: alan at lxorguk.ukuu.org.uk (Alan Cox)
Date: Mon, 23 Nov 2015 16:39:00 +0000
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <CAGV6i+MhPJP27QSA1QwFXj_z+CrGP--L8KQEr4rtaEqfA8U9Jg@mail.gmail.com>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
	<1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
	<20151122211932.04126b2d@www.etchedpixels.co.uk>
	<CAGV6i+MhPJP27QSA1QwFXj_z+CrGP--L8KQEr4rtaEqfA8U9Jg@mail.gmail.com>
Message-ID: <20151123163900.23348645@www.etchedpixels.co.uk>

> Let's think about the performance issues more carefully.
> 
> Consider that, in the current architecture, this plugin API would need to
> be invoked both during script evaluation, and also during CGAL rendering,
> and I guess also preview. The generalized non-affine transformation
> operator would have to be invoked during rendering, because only then is
> the mesh available.

Now go measure how much of the CPU wall clock time is spent in the depths
of intersections unions and friends.

If you implement a complex operator in python it'll suck yes. Ditto with
Blender btw. But if you need a fundmanetal mathematical operation the
chances are it should be in the core anyway.

The Blender examples are interesting in that to put it bluntly Blender
shows it works for real world problems.

> If we use Python, then we are invoking Python code in the middle of CGAL
> rendering. We have to convert CGAL numeric objects (which are dynamically
> allocated rational numbers) into Python numeric objects, run the plugin
> code, then convert the Python numbers back into CGAL numbers. This isn't
> cheap, as I suspect that operations on CGAL numbers are the bulk of the
> cost of rendering.

And if you want OpenSCAD to every run at useful speed for larger objects
you'll have to either remove CGAL or replace the numbers implementation
you select with a fixed point integer one which also fixes that.

> We haven't implemented any of our ideas yet for speeding up rendering by
> using multiple cores, or by using the GPU, although that has been discussed
> a lot. If part of the rendering code is written in Python, this becomes
> much more difficult.

Yes, but not half as difficult as debugging crashes caused by scribbles
from non parallel safe C++ code. The number of people who can write good
parallel C++ code is rather smaller than you'd want, not helped by the
fact that computer science as often taught if anything damages rather
than enhances those skills.

Alan


From ari.diacou at gmail.com  Mon Nov 23 11:40:28 2015
From: ari.diacou at gmail.com (Ari Diacou)
Date: Mon, 23 Nov 2015 11:40:28 -0500
Subject: [OpenSCAD] Centre of Mass
In-Reply-To: <56533B61.6020609@gmx.de>
References: <1448234115875-14707.post@n5.nabble.com>
	<CA+HE+0+TEbDPc0h7wO-dPGih2MGcv28dF26fAWSL1fNMvhaL5Q@mail.gmail.com>
	<1448290656079-14714.post@n5.nabble.com>
	<CA+HE+0JzvRN3eBRCVOMUQ3KcO3YywhQEnzofwYM1q4QDRtFPNw@mail.gmail.com>
	<56533B61.6020609@gmx.de>
Message-ID: <CA+HE+0Jm=oYZn5Xq=A8AbFVYR3LV1_rwfoD-w-gvAyUEqd7P=Q@mail.gmail.com>

I was hoping for them inside the language.

Most of these things I wanted when I was designing this thing:
http://www.thingiverse.com/thing:487090/#files

It was a climbing hold for a rock wall. The basic code was:

module rock(){
    hull(){
        for(i=1:n){
             translate(random_3_array[i])
                  sphere(r=random_size[i]);
            }
        }
    }

module hold(){
    difference(){
        rock();
        translate([0,0,-about half the size of rock()])
             cube(slightly larger than the size of rock()) //cuts off
bottom half of rock
        bore(); //so I can drill a bolt into it
        }
    }

But because this was before list manipulations, I had no idea how big my
random blob was going to be, or how far down I should drill the bore.

These are the kinds of operations that would be far easier if I had access
to them in the language, rather than as a plugin.

Or am I misunderstanding, and plugins could could be accessed in-language
somehow?

On Mon, Nov 23, 2015 at 11:14 AM, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 11/23/2015 04:52 PM, Ari Diacou wrote:
> > I would love to have some functions that calculate information about
> > the model:
> >
> Hmm, most of that information (when applied to the final rendered model)
> could be generated by some post processing. This could be a nice candidate
> for a very simple plug-in interface as discussed in a different thread.
>
> I think there's an issue on github asking for something in that
> direction. With a more general approach, it could cover lots of things
> (e.g. call a slicer, upload to some webservice like octoprint, calculate
> information).
>
> All that would mean it's strictly a GUI feature, the language itself
> does not need to know anything about this.
>
> > I would, of course, also like: them to be implemented in the next
> > release, with good documentation, in the exact method i described,
> > and a pony. kthxbai.
> >
> No unicorn? Where's the challenge then? ;-)
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151123/0be0bc98/attachment.html>

From alan at lxorguk.ukuu.org.uk  Mon Nov 23 11:43:55 2015
From: alan at lxorguk.ukuu.org.uk (Alan Cox)
Date: Mon, 23 Nov 2015 16:43:55 +0000
Subject: [OpenSCAD] Centre of Mass
In-Reply-To: <1448296319603-14717.post@n5.nabble.com>
References: <1448234115875-14707.post@n5.nabble.com>
	<1448296319603-14717.post@n5.nabble.com>
Message-ID: <20151123164355.5e55cf79@www.etchedpixels.co.uk>

On Mon, 23 Nov 2015 09:31:59 -0700 (MST)
Jimmis98 <anonimos79violin at gmail.com> wrote:

> So, basically, it is not yet supported by OpenSCAD itself and I will have
> better luck either changing software or using an additional external tool.
> Amirite?

Yeah - just export the model as STL and load it into the relevant tool
like meshlab. There are lots of things OpenSCAD doesn't do - and in most
cases that is a good thing.

Alan


From rudolf at parkinbot.com  Mon Nov 23 11:56:05 2015
From: rudolf at parkinbot.com (Parkinbot)
Date: Mon, 23 Nov 2015 09:56:05 -0700 (MST)
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <CAGV6i+PyPRUC3-uZhRtpBGi0M9boyew9zxEqDD0vryNYAQQ+Fg@mail.gmail.com>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
	<1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
	<1448229850203-14705.post@n5.nabble.com>
	<CAGV6i+PyPRUC3-uZhRtpBGi0M9boyew9zxEqDD0vryNYAQQ+Fg@mail.gmail.com>
Message-ID: <1448297765160-14721.post@n5.nabble.com>

@doug 

Thanks for the link. I had a closer look at the roadmap and can see, that a
lot will be changed ? obviously to the better. And I am looking forward to
the results with pleasure.

As it concerns functions, I must admit that I'm not a fan of functional
programming at all, even I?ve done lots of it in my life. Its nested
structure is merely academic, and thus very confusing for novices, who might
have done some BASIC, Pascal, Java, C/C++ or even just some scripting
before. As most algorithms and library implementations are given in
iterative/procedural form, it requires a lot of (in my eyes: needless)
translation work, when it comes to port given code, and after all, with no
debugging available (or did I miss this?). 

Well, a paradigm is surely a matter of taste and tradition and I've
understood your "Non-goal" paragraph quite well. Thus I would never go so
far to request a paradigm change, which by the way might easily be done by
allowing local variables and sequences of statements, with the last one, or
why not a "return", denoting the result, instead of just one aggregated,
overly nested, and sometimes even recursive statement denoting the result in
a non-readable fashion. 

For my part, I guess, it is this functional purism that puts even more
weight to the request of an API for user defined functions.

Rudolf  





--
View this message in context: http://forum.openscad.org/feature-request-plug-ins-tp14663p14721.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Mon Nov 23 12:37:24 2015
From: doug at moens.org (doug moen)
Date: Mon, 23 Nov 2015 12:37:24 -0500
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <20151123163900.23348645@www.etchedpixels.co.uk>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
	<1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
	<20151122211932.04126b2d@www.etchedpixels.co.uk>
	<CAGV6i+MhPJP27QSA1QwFXj_z+CrGP--L8KQEr4rtaEqfA8U9Jg@mail.gmail.com>
	<20151123163900.23348645@www.etchedpixels.co.uk>
Message-ID: <CAGV6i+Nr7r-Sjg6KtDOaEKk317fFRDNujoB=fWyA-b33fCz_8A@mail.gmail.com>

Alan said: "Yes, but not half as difficult as debugging crashes caused by
scribbles from non parallel safe C++ code. The number of people who can
write good parallel C++ code is rather smaller than you'd want, not helped
by the fact that computer science as often taught if anything damages rather
than enhances those skills."

I agree. I worked on a project about 20 years ago where we were writing
highly parallel C code, and failing badly. We were using the shared memory
+ locks style of programming; the code was almost impossible to understand
and debug. This (pthreads) model of programming is broken, and should be
avoided. My most recent large C++ project used synchronous message passing,
and this worked out much better.

I've recently been learning Rust. This language is interesting because it's
a low level, high performance language like C and C++, but it provides a
compile time guarantee of no memory bugs (no dangling pointers, writing
past the end of an array, etc), and this guarantee extends to parallel
code: no memory corruption caused by race conditions and competing threads.
I'm not saying we can or should use Rust, only that it is worth checking
out.

Python has some problems: you can't run your code in multiple cores
simultaneously. Python supports threads, but the interpreter contains a
global lock that prevents more than one thread from running at a time, so
you can only use a single core.

On 23 November 2015 at 11:39, Alan Cox <alan at lxorguk.ukuu.org.uk> wrote:

> > Let's think about the performance issues more carefully.
> >
> > Consider that, in the current architecture, this plugin API would need to
> > be invoked both during script evaluation, and also during CGAL rendering,
> > and I guess also preview. The generalized non-affine transformation
> > operator would have to be invoked during rendering, because only then is
> > the mesh available.
>
> Now go measure how much of the CPU wall clock time is spent in the depths
> of intersections unions and friends.
>
> If you implement a complex operator in python it'll suck yes. Ditto with
> Blender btw. But if you need a fundmanetal mathematical operation the
> chances are it should be in the core anyway.
>
> The Blender examples are interesting in that to put it bluntly Blender
> shows it works for real world problems.
>
> > If we use Python, then we are invoking Python code in the middle of CGAL
> > rendering. We have to convert CGAL numeric objects (which are dynamically
> > allocated rational numbers) into Python numeric objects, run the plugin
> > code, then convert the Python numbers back into CGAL numbers. This isn't
> > cheap, as I suspect that operations on CGAL numbers are the bulk of the
> > cost of rendering.
>
> And if you want OpenSCAD to every run at useful speed for larger objects
> you'll have to either remove CGAL or replace the numbers implementation
> you select with a fixed point integer one which also fixes that.
>
> > We haven't implemented any of our ideas yet for speeding up rendering by
> > using multiple cores, or by using the GPU, although that has been
> discussed
> > a lot. If part of the rendering code is written in Python, this becomes
> > much more difficult.
>
> Yes, but not half as difficult as debugging crashes caused by scribbles
> from non parallel safe C++ code. The number of people who can write good
> parallel C++ code is rather smaller than you'd want, not helped by the
> fact that computer science as often taught if anything damages rather
> than enhances those skills.
>
> Alan
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151123/cb82536a/attachment.html>

From doug at moens.org  Mon Nov 23 12:58:02 2015
From: doug at moens.org (doug moen)
Date: Mon, 23 Nov 2015 12:58:02 -0500
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <20151123163900.23348645@www.etchedpixels.co.uk>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
	<1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
	<20151122211932.04126b2d@www.etchedpixels.co.uk>
	<CAGV6i+MhPJP27QSA1QwFXj_z+CrGP--L8KQEr4rtaEqfA8U9Jg@mail.gmail.com>
	<20151123163900.23348645@www.etchedpixels.co.uk>
Message-ID: <CAGV6i+NJs9vRpku3zuvYjnNBwaJfeM83pLOMDO9mExUhaetk5A@mail.gmail.com>

Alan said: "And if you want OpenSCAD to every run at useful speed for
larger objects you'll have to either remove CGAL or replace the numbers
implementation you select with a fixed point integer one which also fixes
that."

I agree that we need to stop using CGAL with rational numbers in order to
fix our performance problems.

I've read your posts about the benefits of fixed point numbers. I don't
agree with your conclusion, though. I think we are better off using 64
point floating point numbers everywhere, in both the scripting language and
in the geometry engine. This eliminates the problem of repeatedly
converting between float and fixed point at various stages in geometry
processing. The conversion is potentially lossy in both directions, but
most of the time, we'll be throwing away accuracy in float->fixed
conversions. For example, a mesh that is manifold when represented in 64
bit floats can become non-manifold when converted to 64 bit fixed point.

On 23 November 2015 at 11:39, Alan Cox <alan at lxorguk.ukuu.org.uk> wrote:

> > Let's think about the performance issues more carefully.
> >
> > Consider that, in the current architecture, this plugin API would need to
> > be invoked both during script evaluation, and also during CGAL rendering,
> > and I guess also preview. The generalized non-affine transformation
> > operator would have to be invoked during rendering, because only then is
> > the mesh available.
>
> Now go measure how much of the CPU wall clock time is spent in the depths
> of intersections unions and friends.
>
> If you implement a complex operator in python it'll suck yes. Ditto with
> Blender btw. But if you need a fundmanetal mathematical operation the
> chances are it should be in the core anyway.
>
> The Blender examples are interesting in that to put it bluntly Blender
> shows it works for real world problems.
>
> > If we use Python, then we are invoking Python code in the middle of CGAL
> > rendering. We have to convert CGAL numeric objects (which are dynamically
> > allocated rational numbers) into Python numeric objects, run the plugin
> > code, then convert the Python numbers back into CGAL numbers. This isn't
> > cheap, as I suspect that operations on CGAL numbers are the bulk of the
> > cost of rendering.
>
> And if you want OpenSCAD to every run at useful speed for larger objects
> you'll have to either remove CGAL or replace the numbers implementation
> you select with a fixed point integer one which also fixes that.
>
> > We haven't implemented any of our ideas yet for speeding up rendering by
> > using multiple cores, or by using the GPU, although that has been
> discussed
> > a lot. If part of the rendering code is written in Python, this becomes
> > much more difficult.
>
> Yes, but not half as difficult as debugging crashes caused by scribbles
> from non parallel safe C++ code. The number of people who can write good
> parallel C++ code is rather smaller than you'd want, not helped by the
> fact that computer science as often taught if anything damages rather
> than enhances those skills.
>
> Alan
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151123/931665f5/attachment.html>

From doug at moens.org  Mon Nov 23 13:00:35 2015
From: doug at moens.org (doug moen)
Date: Mon, 23 Nov 2015 13:00:35 -0500
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <20151123163900.23348645@www.etchedpixels.co.uk>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
	<1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
	<20151122211932.04126b2d@www.etchedpixels.co.uk>
	<CAGV6i+MhPJP27QSA1QwFXj_z+CrGP--L8KQEr4rtaEqfA8U9Jg@mail.gmail.com>
	<20151123163900.23348645@www.etchedpixels.co.uk>
Message-ID: <CAGV6i+Mu6+gzVYRM2=vtzZx4sGM301Ai5O7Sxtnnt-hH3UtjoA@mail.gmail.com>

Alan said: "Now go measure how much of the CPU wall clock time is spent in
the depths of intersections unions and friends."

I'd like to learn how to do that.

I'm strongly in favour of getting rid of "implicit union"; I've posted in
detail about this in the past.

On 23 November 2015 at 11:39, Alan Cox <alan at lxorguk.ukuu.org.uk> wrote:

> > Let's think about the performance issues more carefully.
> >
> > Consider that, in the current architecture, this plugin API would need to
> > be invoked both during script evaluation, and also during CGAL rendering,
> > and I guess also preview. The generalized non-affine transformation
> > operator would have to be invoked during rendering, because only then is
> > the mesh available.
>
> Now go measure how much of the CPU wall clock time is spent in the depths
> of intersections unions and friends.
>
> If you implement a complex operator in python it'll suck yes. Ditto with
> Blender btw. But if you need a fundmanetal mathematical operation the
> chances are it should be in the core anyway.
>
> The Blender examples are interesting in that to put it bluntly Blender
> shows it works for real world problems.
>
> > If we use Python, then we are invoking Python code in the middle of CGAL
> > rendering. We have to convert CGAL numeric objects (which are dynamically
> > allocated rational numbers) into Python numeric objects, run the plugin
> > code, then convert the Python numbers back into CGAL numbers. This isn't
> > cheap, as I suspect that operations on CGAL numbers are the bulk of the
> > cost of rendering.
>
> And if you want OpenSCAD to every run at useful speed for larger objects
> you'll have to either remove CGAL or replace the numbers implementation
> you select with a fixed point integer one which also fixes that.
>
> > We haven't implemented any of our ideas yet for speeding up rendering by
> > using multiple cores, or by using the GPU, although that has been
> discussed
> > a lot. If part of the rendering code is written in Python, this becomes
> > much more difficult.
>
> Yes, but not half as difficult as debugging crashes caused by scribbles
> from non parallel safe C++ code. The number of people who can write good
> parallel C++ code is rather smaller than you'd want, not helped by the
> fact that computer science as often taught if anything damages rather
> than enhances those skills.
>
> Alan
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151123/4a9d6f61/attachment-0001.html>

From alan at lxorguk.ukuu.org.uk  Mon Nov 23 13:26:30 2015
From: alan at lxorguk.ukuu.org.uk (Alan Cox)
Date: Mon, 23 Nov 2015 18:26:30 +0000
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <CAGV6i+Mu6+gzVYRM2=vtzZx4sGM301Ai5O7Sxtnnt-hH3UtjoA@mail.gmail.com>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
	<1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
	<20151122211932.04126b2d@www.etchedpixels.co.uk>
	<CAGV6i+MhPJP27QSA1QwFXj_z+CrGP--L8KQEr4rtaEqfA8U9Jg@mail.gmail.com>
	<20151123163900.23348645@www.etchedpixels.co.uk>
	<CAGV6i+Mu6+gzVYRM2=vtzZx4sGM301Ai5O7Sxtnnt-hH3UtjoA@mail.gmail.com>
Message-ID: <20151123182630.2466ae45@www.etchedpixels.co.uk>

On Mon, 23 Nov 2015 13:00:35 -0500
doug moen <doug at moens.org> wrote:

> Alan said: "Now go measure how much of the CPU wall clock time is spent in
> the depths of intersections unions and friends."
> 
> I'd like to learn how to do that.

Linux: gprof

There are equivalent Windows tools but I'm not familiar with things like
windows Xperf to really comment on them.

There are some more sophisticated techniques we use for things like the
Linux kernel but they aren't really needed for basic analysis.

> I'm strongly in favour of getting rid of "implicit union"; I've posted in
> detail about this in the past.

ImplicitCad does that and from a usability perspective it's not that
annoying - but does make it incompatible. You can also do a lot of
deferring and boundary box optimisations to speed up common "hard" unions
like trays full of objects for printing.

Alan


From ed.nisley at pobox.com  Mon Nov 23 13:26:31 2015
From: ed.nisley at pobox.com (Ed Nisley)
Date: Mon, 23 Nov 2015 13:26:31 -0500
Subject: [OpenSCAD] Centre of Mass
In-Reply-To: <CA+HE+0Jm=oYZn5Xq=A8AbFVYR3LV1_rwfoD-w-gvAyUEqd7P=Q@mail.gmail.com>
References: <1448234115875-14707.post@n5.nabble.com>
	<CA+HE+0+TEbDPc0h7wO-dPGih2MGcv28dF26fAWSL1fNMvhaL5Q@mail.gmail.com>
	<1448290656079-14714.post@n5.nabble.com>
	<CA+HE+0JzvRN3eBRCVOMUQ3KcO3YywhQEnzofwYM1q4QDRtFPNw@mail.gmail.com>
	<56533B61.6020609@gmx.de>
	<CA+HE+0Jm=oYZn5Xq=A8AbFVYR3LV1_rwfoD-w-gvAyUEqd7P=Q@mail.gmail.com>
Message-ID: <56535A57.8000908@pobox.com>

On 11/23/2015 11:40 AM, Ari Diacou wrote:
> I had no idea how big my random blob was going to be, or how far down I
> should drill the bore.

You can create constants (a.k.a "variables") from the random values, 
then use their values (perhaps in vectors) to build / translate rocks & 
holes & slicing planes:

RockOD = rands(20,50,1)[0];
HoleOD = rands(3,5,1)[0];
HoleSides = rands(3,8,1)[0];

echo(str("Rock dia: ",RockOD));
echo(str("Hole dia: ",HoleOD));

difference() {
     sphere(d=RockOD);
#   cylinder(d=HoleOD,h=2*RockOD,$fn=HoleSides,center=true);
     translate([0,0,-RockOD/2])
         cube([2*RockOD,2*RockOD,RockOD],center=true);
}


Granted that you can't reach into the model to get mesh features, but 
you can certainly use the /dimensions/ of the overall structure, because 
you know them already!

-- 
Ed
softsolder.com


From alan at lxorguk.ukuu.org.uk  Mon Nov 23 13:29:08 2015
From: alan at lxorguk.ukuu.org.uk (Alan Cox)
Date: Mon, 23 Nov 2015 18:29:08 +0000
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <CAGV6i+NJs9vRpku3zuvYjnNBwaJfeM83pLOMDO9mExUhaetk5A@mail.gmail.com>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
	<1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
	<20151122211932.04126b2d@www.etchedpixels.co.uk>
	<CAGV6i+MhPJP27QSA1QwFXj_z+CrGP--L8KQEr4rtaEqfA8U9Jg@mail.gmail.com>
	<20151123163900.23348645@www.etchedpixels.co.uk>
	<CAGV6i+NJs9vRpku3zuvYjnNBwaJfeM83pLOMDO9mExUhaetk5A@mail.gmail.com>
Message-ID: <20151123182908.01d49aa8@www.etchedpixels.co.uk>

On Mon, 23 Nov 2015 12:58:02 -0500
doug moen <doug at moens.org> wrote:

> Alan said: "And if you want OpenSCAD to every run at useful speed for
> larger objects you'll have to either remove CGAL or replace the numbers
> implementation you select with a fixed point integer one which also fixes
> that."
> 
> I agree that we need to stop using CGAL with rational numbers in order to
> fix our performance problems.
> 
> I've read your posts about the benefits of fixed point numbers. I don't
> agree with your conclusion, though. I think we are better off using 64
> point floating point numbers everywhere, in both the scripting language and
> in the geometry engine. This eliminates the problem of repeatedly
> converting between float and fixed point at various stages in geometry
> processing. The conversion is potentially lossy in both directions, but
> most of the time, we'll be throwing away accuracy in float->fixed
> conversions. For example, a mesh that is manifold when represented in 64
> bit floats can become non-manifold when converted to 64 bit fixed point.

And vice versa, plus float has the nasty property that the accuracy of
your model changes according to distance from the axes.

You don't do conversions. You never want to do conversions because
conversions muck stuff up. You do the lot in fixed point, or you do the
lot in float. Fixed point is a bit faster (way faster on a lot of Android
tablet devices). That's really a detail except on ARM - if OpenSCAD ran
in 64bit float I'd not even bother arguing about whether fixed point was
better 8)

Alan


From hypher at gmail.com  Mon Nov 23 14:40:05 2015
From: hypher at gmail.com (Yona Appletree)
Date: Mon, 23 Nov 2015 11:40:05 -0800
Subject: [OpenSCAD] Square to round transformation
In-Reply-To: <CAEEmnrPPaLXOQXR3Wnzn8MG1ciU7h8sAN5JnJQnp3G=gvOAVfg@mail.gmail.com>
References: <1448288456535-14712.post@n5.nabble.com>
	<CAEEmnrPPaLXOQXR3Wnzn8MG1ciU7h8sAN5JnJQnp3G=gvOAVfg@mail.gmail.com>
Message-ID: <56536B95.6050006@gmail.com>

Since getting started can be hard, here's a basic implementation of what 
it sounds like you want. Note that I didn't use your dimensions; you'll 
need to do plenty more work to make a usable part, but it should get you 
started. Good luck with your part.

circleRadius = 50;
circleHeight = 5;
squareSize = [100, 100, 5];
height = 80;
cutout = 0;

wallThickness = 10;

difference() {
     // Larger version of the part from which we will cut the hollow 
section, thus creating the walls
     adapter(
         circleRadius = circleRadius + wallThickness,
         circleHeight = circleHeight,
         squareSize = squareSize + [wallThickness*2, wallThickness*2, 0],
         height = height,
         cutout = 0
     );

     // Smaller cutout, to create the walls
     adapter(
         circleRadius = circleRadius,
         circleHeight = circleHeight,
         squareSize = squareSize,
         height = height,
         cutout = 1
     );
}


// A generic version of the part that we can reuse multiple times, both 
to create walls and if you wanted a different
// sized version in the same SCAD file.
module adapter(
     circleRadius,
     circleHeight,
     squareSize,
     height,
     cutout
) {
     // This creates the primary part -- the hull of a cylinder and a cube
     hull() {
         translate([0,0,squareSize.z/2]) cube(squareSize, center=true);
         translate([0,0,height-circleHeight]) cylinder(r=circleRadius, 
h=circleHeight, center=true);
     }

     // This extends the cylinder out the top, if that's desired
     translate([0,0,height]) cylinder(r=circleRadius, 
h=circleHeight+cutout, center=true);

     // This extends the square portion below the part if we are a cutout
     if (cutout > 0) {
         translate([0,0,-cutout]) cube([squareSize.x, squareSize.y, 
cutout+squareSize.z], center=true);
     }
}

> nop head <mailto:nop.head at gmail.com>
> November 23, 2015 at 06:53
>
> Taking the convex hull of a square and a cylinder will give you the 
> basic shape. Then subtract a smaller version to hollow it out.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> Sebastian Heyn <mailto:sebastian.heyn at yahoo.de>
> November 23, 2015 at 06:20
> Hi guys,
>
> I am new to openscad and 3d printing. My first project will be a fan 
> mount -
> to mount a 120mm fan on a 110mm outside diameter pipe.
>
> I have the fan mount set up but i wonder how I can design something that
> will reduce the square 120mm to 110mm round.
>
> Any ideas?
>
>
>
> --
> View this message in context: 
> http://forum.openscad.org/Square-to-round-transformation-tp14712.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151123/b2860cfd/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: postbox-contact.jpg
Type: image/jpeg
Size: 1266 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151123/b2860cfd/attachment.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: compose-unknown-contact.jpg
Type: image/jpeg
Size: 770 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151123/b2860cfd/attachment-0001.jpg>

From mschafer at wireframe.biz  Mon Nov 23 14:52:51 2015
From: mschafer at wireframe.biz (Neon22)
Date: Mon, 23 Nov 2015 12:52:51 -0700 (MST)
Subject: [OpenSCAD] Square to round transformation
In-Reply-To: <1448288456535-14712.post@n5.nabble.com>
References: <1448288456535-14712.post@n5.nabble.com>
Message-ID: <1448308371444-14729.post@n5.nabble.com>

or work on improving this one
http://www.thingiverse.com/thing:1015874



--
View this message in context: http://forum.openscad.org/Square-to-round-transformation-tp14712p14729.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrew at plumb.org  Mon Nov 23 19:51:44 2015
From: andrew at plumb.org (Andrew Plumb)
Date: Mon, 23 Nov 2015 19:51:44 -0500
Subject: [OpenSCAD] Centre of Mass
In-Reply-To: <1448290656079-14714.post@n5.nabble.com>
References: <1448234115875-14707.post@n5.nabble.com>
	<CA+HE+0+TEbDPc0h7wO-dPGih2MGcv28dF26fAWSL1fNMvhaL5Q@mail.gmail.com>
	<1448290656079-14714.post@n5.nabble.com>
Message-ID: <EAF6CBE2-FE12-4799-BA3C-FFF7A1F38E98@plumb.org>

On second thoughts, a better place to calculate and report the 3D volume(s) and centroid(s) or 2D area(s), centroids and perimeter length(s) would be here:

https://github.com/openscad/openscad/blob/master/src/mainwin.cc#L1917-L1944 <https://github.com/openscad/openscad/blob/master/src/mainwin.cc#L1917-L1944>

?where the Render (F6) summary report is generated.

Andrew.

> On Nov 23, 2015, at 9:57 AM, clothbot <andrew at plumb.org> wrote:
> 
> Total volume and center-of-mass could be calculated at export time, right
> around here:
> 
> https://github.com/openscad/openscad/blob/master/src/export.cc#L142-L187
> 
> Nice little overview of the math involved for volume here:
> 
> http://n-e-r-v-o-u-s.com/blog/?p=4415
> 
> ...and for center of mass, aka "Centroid of a 3D shell described by 3 vertex
> facets":
> 
> http://paulbourke.net/geometry/polygonmesh/
> 
> ...or...
> 
> http://wwwf.imperial.ac.uk/~rn/centroid.pdf
> 
> It's a bit more involved, but same underlying principles.
> 
> Andrew.
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/Centre-of-Mass-tp14707p14714.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

--

"The future is already here.  It's just not very evenly distributed" -- William Gibson

Me: http://clothbot.com/wiki/ <http://clothbot.com/wiki/>



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151123/e7599db5/attachment-0001.html>

From lboyd at frontiernet.net  Mon Nov 23 23:34:28 2015
From: lboyd at frontiernet.net (L Boyd)
Date: Mon, 23 Nov 2015 21:34:28 -0700 (MST)
Subject: [OpenSCAD] Rotate relative, or make spokes
In-Reply-To: <1448334329516-14731.post@n5.nabble.com>
References: <1448334329516-14731.post@n5.nabble.com>
Message-ID: <1448339668640-14732.post@n5.nabble.com>

 For( I = [ 0:360/NoArms: 359 ] )  { rotate ( [ 0,0,I])   Etc 



-----
Larry
--
View this message in context: http://forum.openscad.org/Rotate-relative-or-make-spokes-tp14731p14732.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From hyperair at debian.org  Mon Nov 23 23:51:17 2015
From: hyperair at debian.org (Chow Loong Jin)
Date: Tue, 24 Nov 2015 12:51:17 +0800
Subject: [OpenSCAD] Rotate relative, or make spokes
In-Reply-To: <1448339668640-14732.post@n5.nabble.com>
References: <1448334329516-14731.post@n5.nabble.com>
	<1448339668640-14732.post@n5.nabble.com>
Message-ID: <20151124045115.GA17556@gmail.com>

On Mon, Nov 23, 2015 at 09:34:28PM -0700, L Boyd wrote:
>  For( I = [ 0:360/NoArms: 359 ] )  { rotate ( [ 0,0,I])   Etc

https://github.com/openscad/MCAD/blob/dev/array/along_curve.scad#L13

Warning: API not stable yet.

-- 
Kind regards,
Loong Jin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: Digital signature
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151124/a158a06e/attachment.asc>

From nop.head at gmail.com  Tue Nov 24 05:04:10 2015
From: nop.head at gmail.com (nop head)
Date: Tue, 24 Nov 2015 10:04:10 +0000
Subject: [OpenSCAD] Centre of Mass
In-Reply-To: <EAF6CBE2-FE12-4799-BA3C-FFF7A1F38E98@plumb.org>
References: <1448234115875-14707.post@n5.nabble.com>
	<CA+HE+0+TEbDPc0h7wO-dPGih2MGcv28dF26fAWSL1fNMvhaL5Q@mail.gmail.com>
	<1448290656079-14714.post@n5.nabble.com>
	<EAF6CBE2-FE12-4799-BA3C-FFF7A1F38E98@plumb.org>
Message-ID: <CAEEmnrNPhOUazCePPVxzg+QMsHxgKaRc=nKbhhe+sOw7ZSaaCw@mail.gmail.com>

Even if it was reported it doesn't solve the original problem of adjusting
the model to have the com in a specified place unless you use trial and
error. Even if the com was available numerically in OpenSCAD it doesn't
solve the original problem. You need to write an equation for the com
dependent on the variable of the geometry you wish to change and then solve
it to create the geometry.
On Nov 24, 2015 12:52 AM, "Andrew Plumb" <andrew at plumb.org> wrote:

> On second thoughts, a better place to calculate and report the 3D
> volume(s) and centroid(s) or 2D area(s), centroids and perimeter length(s)
> would be here:
>
> https://github.com/openscad/openscad/blob/master/src/mainwin.cc#L1917-L1944
>
> ?where the Render (F6) summary report is generated.
>
> Andrew.
>
> On Nov 23, 2015, at 9:57 AM, clothbot <andrew at plumb.org> wrote:
>
> Total volume and center-of-mass could be calculated at export time, right
> around here:
>
> https://github.com/openscad/openscad/blob/master/src/export.cc#L142-L187
>
> Nice little overview of the math involved for volume here:
>
> http://n-e-r-v-o-u-s.com/blog/?p=4415
>
> ...and for center of mass, aka "Centroid of a 3D shell described by 3
> vertex
> facets":
>
> http://paulbourke.net/geometry/polygonmesh/
>
> ...or...
>
> http://wwwf.imperial.ac.uk/~rn/centroid.pdf
>
> It's a bit more involved, but same underlying principles.
>
> Andrew.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Centre-of-Mass-tp14707p14714.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> --
>
> "The future is already here.  It's just not very evenly distributed" --
> William Gibson
>
> Me: http://clothbot.com/wiki/
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151124/72823514/attachment.html>

From wv99999 at gmail.com  Tue Nov 24 05:22:45 2015
From: wv99999 at gmail.com (wolf)
Date: Tue, 24 Nov 2015 03:22:45 -0700 (MST)
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <20151123182908.01d49aa8@www.etchedpixels.co.uk>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
	<1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
	<20151122211932.04126b2d@www.etchedpixels.co.uk>
	<CAGV6i+MhPJP27QSA1QwFXj_z+CrGP--L8KQEr4rtaEqfA8U9Jg@mail.gmail.com>
	<20151123163900.23348645@www.etchedpixels.co.uk>
	<CAGV6i+NJs9vRpku3zuvYjnNBwaJfeM83pLOMDO9mExUhaetk5A@mail.gmail.com>
	<20151123182908.01d49aa8@www.etchedpixels.co.uk>
Message-ID: <1448360565690-14735.post@n5.nabble.com>

The argument whether to use integer or floating point arithmetic can be
decided quite simply. If you care to look up  equinumerosity
<http://en.wikipedia.org/wiki/Equinumerosity>   in the wikipedia, you'll see
that a 64 bit integer has a one-on-one correspondence (a bijection) with a
64 bit floating point number, i.e an any combination of bits may be
interpreted either as an integer or a float. Floats give a greater range, at
the cost of reduced accuracy.

10E-7mm (about the radius of an atom) is the smallest size an OpenSCAD model
can meaningfully be given, below that, the rules of physics change
(uncertainty principle, etc), and modelling that in OpenSCAD is just plain
silly. If we take that as the bottom, then a signed integer can tops
represent a distance of 922337km, or twice the distance earth-moon, with an
accuracy of 10E-7mm. 
A 64 bit float uses only 53 bits for its mantissa, 10 bits less than the
integer, and thus its accuracy is only 1/1024 that of an integer
representation. It can represent tops 900km with an accuracy of 10E-7mm. Is
900km enough? Possibly. 922337km for integer arithmetic is certainly enough,
and no more range is needed.

Computing speed? have a look  here
<http://nicolas.limare.net/pro/notes/2014/12/12_arit_speed/>   and  here
<http://nicolas.limare.net/pro/notes/2014/12/16_math_speed/>  .

Z-fighting? Do we want that? In the light of what what recently discussed 
here
<http://forum.openscad.org/Simple-addition-of-numbers-introduces-error-td14408.html> 
, z-fighting is bound to be a floating point issue.  MKoch
<http://forum.openscad.org/make-an-object-hollow-with-constant-wall-thickness-td14255.html>  
provided some interesting code producing shapes that look quite different
when previewed and rendered:
<http://forum.openscad.org/file/n14735/MKoch-1.mkoch-1> 
<http://forum.openscad.org/file/n14735/MKoch-2.mkoch-2> 
<http://forum.openscad.org/file/n14735/MKoch-3.mkoch-3> 
<http://forum.openscad.org/file/n14735/MKoch-4.mkoch-4> 

I have no problem deciding what I prefer: 64 bit integer arithmetic.
Accuracy is better, range is fully sufficient, computing speed is equal or
superior, and the likelyhood of imaging problems that need to be overcome by
user-space tricks associated with floating point numbers - forget about
floats asap, please.
Wolf




--
View this message in context: http://forum.openscad.org/feature-request-plug-ins-tp14663p14735.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jon at jonbondy.com  Tue Nov 24 05:59:40 2015
From: jon at jonbondy.com (jon)
Date: Tue, 24 Nov 2015 05:59:40 -0500
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <1448360565690-14735.post@n5.nabble.com>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
	<1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
	<20151122211932.04126b2d@www.etchedpixels.co.uk>
	<CAGV6i+MhPJP27QSA1QwFXj_z+CrGP--L8KQEr4rtaEqfA8U9Jg@mail.gmail.com>
	<20151123163900.23348645@www.etchedpixels.co.uk>
	<CAGV6i+NJs9vRpku3zuvYjnNBwaJfeM83pLOMDO9mExUhaetk5A@mail.gmail.com>
	<20151123182908.01d49aa8@www.etchedpixels.co.uk>
	<1448360565690-14735.post@n5.nabble.com>
Message-ID: <5654431C.8030206@jonbondy.com>

You make the decision seem so simple!

On 11/24/2015 5:22 AM, wolf wrote:
> The argument whether to use integer or floating point arithmetic can be
> decided quite simply. If you care to look up  equinumerosity
> <http://en.wikipedia.org/wiki/Equinumerosity>   in the wikipedia, you'll see
> that a 64 bit integer has a one-on-one correspondence (a bijection) with a
> 64 bit floating point number, i.e an any combination of bits may be
> interpreted either as an integer or a float. Floats give a greater range, at
> the cost of reduced accuracy.
>
> 10E-7mm (about the radius of an atom) is the smallest size an OpenSCAD model
> can meaningfully be given, below that, the rules of physics change
> (uncertainty principle, etc), and modelling that in OpenSCAD is just plain
> silly. If we take that as the bottom, then a signed integer can tops
> represent a distance of 922337km, or twice the distance earth-moon, with an
> accuracy of 10E-7mm.
> A 64 bit float uses only 53 bits for its mantissa, 10 bits less than the
> integer, and thus its accuracy is only 1/1024 that of an integer
> representation. It can represent tops 900km with an accuracy of 10E-7mm. Is
> 900km enough? Possibly. 922337km for integer arithmetic is certainly enough,
> and no more range is needed.
>
> Computing speed? have a look  here
> <http://nicolas.limare.net/pro/notes/2014/12/12_arit_speed/>   and  here
> <http://nicolas.limare.net/pro/notes/2014/12/16_math_speed/>  .
>
> Z-fighting? Do we want that? In the light of what what recently discussed
> here
> <http://forum.openscad.org/Simple-addition-of-numbers-introduces-error-td14408.html>
> , z-fighting is bound to be a floating point issue.  MKoch
> <http://forum.openscad.org/make-an-object-hollow-with-constant-wall-thickness-td14255.html>
> provided some interesting code producing shapes that look quite different
> when previewed and rendered:
> <http://forum.openscad.org/file/n14735/MKoch-1.mkoch-1>
> <http://forum.openscad.org/file/n14735/MKoch-2.mkoch-2>
> <http://forum.openscad.org/file/n14735/MKoch-3.mkoch-3>
> <http://forum.openscad.org/file/n14735/MKoch-4.mkoch-4>
>
> I have no problem deciding what I prefer: 64 bit integer arithmetic.
> Accuracy is better, range is fully sufficient, computing speed is equal or
> superior, and the likelyhood of imaging problems that need to be overcome by
> user-space tricks associated with floating point numbers - forget about
> floats asap, please.
> Wolf
>



From nop.head at gmail.com  Tue Nov 24 06:48:43 2015
From: nop.head at gmail.com (nop head)
Date: Tue, 24 Nov 2015 11:48:43 +0000
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <5654431C.8030206@jonbondy.com>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
	<1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
	<20151122211932.04126b2d@www.etchedpixels.co.uk>
	<CAGV6i+MhPJP27QSA1QwFXj_z+CrGP--L8KQEr4rtaEqfA8U9Jg@mail.gmail.com>
	<20151123163900.23348645@www.etchedpixels.co.uk>
	<CAGV6i+NJs9vRpku3zuvYjnNBwaJfeM83pLOMDO9mExUhaetk5A@mail.gmail.com>
	<20151123182908.01d49aa8@www.etchedpixels.co.uk>
	<1448360565690-14735.post@n5.nabble.com>
	<5654431C.8030206@jonbondy.com>
Message-ID: <CAEEmnrNKopgcDUnpMJ6sL4k-n7kKve-kMt8ws==+iEOtfc=P+w@mail.gmail.com>

I think you are very naive regarding integers. When you start representing
fractions with them you are using fixed point notation, not integer. That
will have similar issues as floating point when you start adding fractions.
On Nov 24, 2015 11:00 AM, "jon" <jon at jonbondy.com> wrote:

> You make the decision seem so simple!
>
> On 11/24/2015 5:22 AM, wolf wrote:
>
>> The argument whether to use integer or floating point arithmetic can be
>> decided quite simply. If you care to look up  equinumerosity
>> <http://en.wikipedia.org/wiki/Equinumerosity>   in the wikipedia, you'll
>> see
>> that a 64 bit integer has a one-on-one correspondence (a bijection) with a
>> 64 bit floating point number, i.e an any combination of bits may be
>> interpreted either as an integer or a float. Floats give a greater range,
>> at
>> the cost of reduced accuracy.
>>
>> 10E-7mm (about the radius of an atom) is the smallest size an OpenSCAD
>> model
>> can meaningfully be given, below that, the rules of physics change
>> (uncertainty principle, etc), and modelling that in OpenSCAD is just plain
>> silly. If we take that as the bottom, then a signed integer can tops
>> represent a distance of 922337km, or twice the distance earth-moon, with
>> an
>> accuracy of 10E-7mm.
>> A 64 bit float uses only 53 bits for its mantissa, 10 bits less than the
>> integer, and thus its accuracy is only 1/1024 that of an integer
>> representation. It can represent tops 900km with an accuracy of 10E-7mm.
>> Is
>> 900km enough? Possibly. 922337km for integer arithmetic is certainly
>> enough,
>> and no more range is needed.
>>
>> Computing speed? have a look  here
>> <http://nicolas.limare.net/pro/notes/2014/12/12_arit_speed/>   and  here
>> <http://nicolas.limare.net/pro/notes/2014/12/16_math_speed/>  .
>>
>> Z-fighting? Do we want that? In the light of what what recently discussed
>> here
>> <
>> http://forum.openscad.org/Simple-addition-of-numbers-introduces-error-td14408.html
>> >
>> , z-fighting is bound to be a floating point issue.  MKoch
>> <
>> http://forum.openscad.org/make-an-object-hollow-with-constant-wall-thickness-td14255.html
>> >
>> provided some interesting code producing shapes that look quite different
>> when previewed and rendered:
>> <http://forum.openscad.org/file/n14735/MKoch-1.mkoch-1>
>> <http://forum.openscad.org/file/n14735/MKoch-2.mkoch-2>
>> <http://forum.openscad.org/file/n14735/MKoch-3.mkoch-3>
>> <http://forum.openscad.org/file/n14735/MKoch-4.mkoch-4>
>>
>> I have no problem deciding what I prefer: 64 bit integer arithmetic.
>> Accuracy is better, range is fully sufficient, computing speed is equal or
>> superior, and the likelyhood of imaging problems that need to be overcome
>> by
>> user-space tricks associated with floating point numbers - forget about
>> floats asap, please.
>> Wolf
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151124/005f0a95/attachment-0001.html>

From ari.diacou at gmail.com  Tue Nov 24 07:20:15 2015
From: ari.diacou at gmail.com (Ari Diacou)
Date: Tue, 24 Nov 2015 07:20:15 -0500
Subject: [OpenSCAD] Centre of Mass
In-Reply-To: <CAEEmnrNPhOUazCePPVxzg+QMsHxgKaRc=nKbhhe+sOw7ZSaaCw@mail.gmail.com>
References: <1448234115875-14707.post@n5.nabble.com>
	<CA+HE+0+TEbDPc0h7wO-dPGih2MGcv28dF26fAWSL1fNMvhaL5Q@mail.gmail.com>
	<1448290656079-14714.post@n5.nabble.com>
	<EAF6CBE2-FE12-4799-BA3C-FFF7A1F38E98@plumb.org>
	<CAEEmnrNPhOUazCePPVxzg+QMsHxgKaRc=nKbhhe+sOw7ZSaaCw@mail.gmail.com>
Message-ID: <CA+HE+0+ZTBQRSuEJ+muJKh_cO2SxMgj0+rJfwPtid95fkFfz2A@mail.gmail.com>

Okay, fine, that is a good reason why all of my proposed variables should
not be referenceable in the language. Or at least be made so that they
can't be accessed by geometry. It would still be nice to perform
calculations on them for echo() purposes.

On Tue, Nov 24, 2015 at 5:04 AM, nop head <nop.head at gmail.com> wrote:

> Even if it was reported it doesn't solve the original problem of adjusting
> the model to have the com in a specified place unless you use trial and
> error. Even if the com was available numerically in OpenSCAD it doesn't
> solve the original problem. You need to write an equation for the com
> dependent on the variable of the geometry you wish to change and then solve
> it to create the geometry.
> On Nov 24, 2015 12:52 AM, "Andrew Plumb" <andrew at plumb.org> wrote:
>
>> On second thoughts, a better place to calculate and report the 3D
>> volume(s) and centroid(s) or 2D area(s), centroids and perimeter length(s)
>> would be here:
>>
>>
>> https://github.com/openscad/openscad/blob/master/src/mainwin.cc#L1917-L1944
>>
>> ?where the Render (F6) summary report is generated.
>>
>> Andrew.
>>
>> On Nov 23, 2015, at 9:57 AM, clothbot <andrew at plumb.org> wrote:
>>
>> Total volume and center-of-mass could be calculated at export time, right
>> around here:
>>
>> https://github.com/openscad/openscad/blob/master/src/export.cc#L142-L187
>>
>> Nice little overview of the math involved for volume here:
>>
>> http://n-e-r-v-o-u-s.com/blog/?p=4415
>>
>> ...and for center of mass, aka "Centroid of a 3D shell described by 3
>> vertex
>> facets":
>>
>> http://paulbourke.net/geometry/polygonmesh/
>>
>> ...or...
>>
>> http://wwwf.imperial.ac.uk/~rn/centroid.pdf
>>
>> It's a bit more involved, but same underlying principles.
>>
>> Andrew.
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/Centre-of-Mass-tp14707p14714.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>> --
>>
>> "The future is already here.  It's just not very evenly distributed" --
>> William Gibson
>>
>> Me: http://clothbot.com/wiki/
>>
>>
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151124/0cd27f93/attachment.html>

From alan at lxorguk.ukuu.org.uk  Tue Nov 24 07:25:34 2015
From: alan at lxorguk.ukuu.org.uk (Alan Cox)
Date: Tue, 24 Nov 2015 12:25:34 +0000
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <CAEEmnrNKopgcDUnpMJ6sL4k-n7kKve-kMt8ws==+iEOtfc=P+w@mail.gmail.com>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
	<1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
	<20151122211932.04126b2d@www.etchedpixels.co.uk>
	<CAGV6i+MhPJP27QSA1QwFXj_z+CrGP--L8KQEr4rtaEqfA8U9Jg@mail.gmail.com>
	<20151123163900.23348645@www.etchedpixels.co.uk>
	<CAGV6i+NJs9vRpku3zuvYjnNBwaJfeM83pLOMDO9mExUhaetk5A@mail.gmail.com>
	<20151123182908.01d49aa8@www.etchedpixels.co.uk>
	<1448360565690-14735.post@n5.nabble.com>
	<5654431C.8030206@jonbondy.com>
	<CAEEmnrNKopgcDUnpMJ6sL4k-n7kKve-kMt8ws==+iEOtfc=P+w@mail.gmail.com>
Message-ID: <20151124122534.349fbb89@www.etchedpixels.co.uk>

On Tue, 24 Nov 2015 11:48:43 +0000
nop head <nop.head at gmail.com> wrote:

> I think you are very naive regarding integers. When you start representing
> fractions with them you are using fixed point notation, not integer. That
> will have similar issues as floating point when you start adding fractions.

There is no difference between "integer" and "fixed point". The "point"
is part of your units not part of the value.

Agreed you still have the same underlying issues of approximation. The
big value of integer is speed, and parallelism.

Alan


From c.t.chin at szu.edu.cn  Tue Nov 24 07:36:47 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Tue, 24 Nov 2015 05:36:47 -0700 (MST)
Subject: [OpenSCAD] general extrusion (imperfect)
Message-ID: <1448368607908-14740.post@n5.nabble.com>

I've written an incomplete and imperfect generalized extrusion (arbitrary
curve) routine.  

Being rather thick-skulled, I tried writing without checking and learning
from the sweep code in github.  So I'm not sure how mine compares to state
of the art.  Github is responding extremely slowly for me now and I'm too
exhausted...  So I just toss out some result now, maybe I'm making a fool of
myself... anyway...

Anyway the calling convention is:

extrude(path, orient) shape();

Where both path and orient are a vector of vectors in the format
[[x0,y0,z0],  [x1,y1,z1], [x2,y2,z2], ...]

The each element of path is a point in the arbitrary curve.  Each element of
orient is a vector indicating the direction that shape()'s "north" should be
pointing.  This module will extrude the 2D shape() along this path keeping
shape()'s "north" (as close as possible) to orient's direction.   

Shape() should be a polygon on the X-Y plane.  "North" is defined by the
positive Y-axis.  Any 2D primitives, or combination/transformation of 2D
primitives can be used as shape().  

The module is incomplete because I still haven't made the joints between
segments, BTW number of segments shall be (len(path)-1).  

The module is imperfect because there's a singularity (?) at the N- and
S-pole.  I.e. if the path vector swing pass the +Z or -Z axial directions,
the orientation of the shape() is liable to become discontinuous.  

I only have energy to make a couple test cases now: Moebius I-Beam (4- or
24-segments versions)  The 4-segment version is ugly be it illustrates
clearly the unsatisfactory joints but also shows each segment is twisted to
connect the changing orient vectors.  

When I get home I will take a look at github for the "unofficial official
version" and its test cases.   I also welcome anyone to post some (torture?)
test cases for me to try, see below for format.  For the time being, I don't
want to share the source of this work-in-progress.  

<http://forum.openscad.org/file/n14740/Moebius-Ibeam-4.png> 
<http://forum.openscad.org/file/n14740/Moebius-Ibeam-24.png> 






--
View this message in context: http://forum.openscad.org/general-extrusion-imperfect-tp14740.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From ticonzero2010 at gmail.com  Tue Nov 24 07:47:43 2015
From: ticonzero2010 at gmail.com (ticonzero2010)
Date: Tue, 24 Nov 2015 05:47:43 -0700 (MST)
Subject: [OpenSCAD] vertices and paths of a polygon created via offset()
Message-ID: <1448369263299-14741.post@n5.nabble.com>

Hi all!

I would like to draw a bunch of thin walled tubes with polygonal cross
section, I know I can do this by offsetting the inner polygon and I can
obtain the walls by difference and extrusion.

But then I need to replicate the difference shape which results in huge
memory and CPU cost. I can do the same thing by drawing the cross section as
a polygon with a hole but I need the vertices and the sides of the outer
polygon generated by offset(). 

does anyone know if it is possible to get the vertices and the paths
genrated by the offset() function ?

thanks!
Andrea





--
View this message in context: http://forum.openscad.org/vertices-and-paths-of-a-polygon-created-via-offset-tp14741.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Tom.Nally at shell.com  Tue Nov 24 08:21:47 2015
From: Tom.Nally at shell.com (Tom.Nally at shell.com)
Date: Tue, 24 Nov 2015 13:21:47 +0000
Subject: [OpenSCAD] Centre of Mass
In-Reply-To: <CAEEmnrNPhOUazCePPVxzg+QMsHxgKaRc=nKbhhe+sOw7ZSaaCw@mail.gmail.com>
References: <1448234115875-14707.post@n5.nabble.com>
	<CA+HE+0+TEbDPc0h7wO-dPGih2MGcv28dF26fAWSL1fNMvhaL5Q@mail.gmail.com>
	<1448290656079-14714.post@n5.nabble.com>
	<EAF6CBE2-FE12-4799-BA3C-FFF7A1F38E98@plumb.org>
	<CAEEmnrNPhOUazCePPVxzg+QMsHxgKaRc=nKbhhe+sOw7ZSaaCw@mail.gmail.com>
Message-ID: <EC84EA3DD995254CA96424BD732C2BB96B863390@lkw-s-53405.americas.shell.com>

This is wordy and ends with a relatively small payoff, but what the heck...

In the offshore oil patch, the center of mass (we call it "center of gravity" or "cg") is of continual interest.  We calculate it when we lift skids(1) and large modules because the cg will always position itself directly below the hook.  So, if we want the skid to be plumb and level during the lift, we might have to vary the lengths of slings in order to vertically align the hook with the cg as closely as possible.

But even more important, we work hard on determining the cg for entire floating production systems, such as tension leg platforms.  These things weigh thousands of tons.  Knowing where the cg is allows the operator to flow water into the ballast tanks in correct amounts so that the platform can remain level.  The entire engineering task is referred to as "weight control".  We usually assign weight control to one or two guys, and they will update the data weekly or monthly during the design phase.  (For a very large system, design might take 3 to 5 years.)

But I only provide that lengthy introduction to tell you the tool we typically use to calculate center of gravity: Microsoft Excel.  Each engineer working on a subsystem will have to determine the weight and cg for his system, and he will very likely use Excel.  Then he will provide his information to the weight control guys who will use it to populate a large Excel database.  The weight control guys plot the change in weight and cg over the course of a project, which helps the managers imagine what the weight might be when the project is done.

Even for a small OpenScad-designed assembly with fewer than a dozen components, I would probably use Excel to determine the location of the cg.

******************
(1) A "skid" is a collection of production equipment and piping mounted on a steel frame.  The frame is usually made from wide-flanged beams, and contains "padeyes" or "lifting eyes" to which shackles and slings can be attached.  When a skid is lifted to a platform, the crane cannot always place the skid in it's final position.  Often, it has to be set down on the "lay down deck" first.  From there, it is "skidded" into place using "tuggers".  A tugger is just the offshore term for a winch.



From: Discuss [mailto:discuss-bounces at lists.openscad.org] On Behalf Of nop head
Sent: Tuesday, November 24, 2015 4:04 AM
To: OpenSCAD general discussion
Subject: Re: [OpenSCAD] Centre of Mass


Even if it was reported it doesn't solve the original problem of adjusting the model to have the com in a specified place unless you use trial and error. Even if the com was available numerically in OpenSCAD it doesn't solve the original problem. You need to write an equation for the com dependent on the variable of the geometry you wish to change and then solve it to create the geometry.
On Nov 24, 2015 12:52 AM, "Andrew Plumb" <andrew at plumb.org<mailto:andrew at plumb.org>> wrote:
On second thoughts, a better place to calculate and report the 3D volume(s) and centroid(s) or 2D area(s), centroids and perimeter length(s) would be here:

https://github.com/openscad/openscad/blob/master/src/mainwin.cc#L1917-L1944

?where the Render (F6) summary report is generated.

Andrew.

On Nov 23, 2015, at 9:57 AM, clothbot <andrew at plumb.org<mailto:andrew at plumb.org>> wrote:

Total volume and center-of-mass could be calculated at export time, right
around here:

https://github.com/openscad/openscad/blob/master/src/export.cc#L142-L187

Nice little overview of the math involved for volume here:

http://n-e-r-v-o-u-s.com/blog/?p=4415

...and for center of mass, aka "Centroid of a 3D shell described by 3 vertex
facets":

http://paulbourke.net/geometry/polygonmesh/

...or...

http://wwwf.imperial.ac.uk/~rn/centroid.pdf

It's a bit more involved, but same underlying principles.

Andrew.



--
View this message in context: http://forum.openscad.org/Centre-of-Mass-tp14707p14714.html
Sent from the OpenSCAD mailing list archive at Nabble.com.

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org<mailto:Discuss at lists.openscad.org>
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

--

"The future is already here.  It's just not very evenly distributed" -- William Gibson

Me: http://clothbot.com/wiki/




_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org<mailto:Discuss at lists.openscad.org>
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151124/8bb18a14/attachment-0001.html>

From andrew at plumb.org  Tue Nov 24 10:15:37 2015
From: andrew at plumb.org (clothbot)
Date: Tue, 24 Nov 2015 08:15:37 -0700 (MST)
Subject: [OpenSCAD] Centre of Mass
In-Reply-To: <CAEEmnrNPhOUazCePPVxzg+QMsHxgKaRc=nKbhhe+sOw7ZSaaCw@mail.gmail.com>
References: <1448234115875-14707.post@n5.nabble.com>
	<CA+HE+0+TEbDPc0h7wO-dPGih2MGcv28dF26fAWSL1fNMvhaL5Q@mail.gmail.com>
	<1448290656079-14714.post@n5.nabble.com>
	<EAF6CBE2-FE12-4799-BA3C-FFF7A1F38E98@plumb.org>
	<CAEEmnrNPhOUazCePPVxzg+QMsHxgKaRc=nKbhhe+sOw7ZSaaCw@mail.gmail.com>
Message-ID: <1448378137358-14743.post@n5.nabble.com>

Not directly, but what if there were special $volume, $area, $centroid
variables, similar to the $vpr, $vpt and $vpd in scope:

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language#.24vpr.2C_.24vpt_and_.24vpd

A Render (F6) would populate them with non-zero values/vectors as
appropriate, to be used in the next iteration.

pla_density=1.25; // units: g/cm^3

mm3_per_cm3=pow(10,3); // STL unit is treated as mm in many 3DP flows

function
mass(volume,density=pla_density,dscale=1/mm3_per_cm3)=volume*density*dscale;

new_mass=mass($volume*$t);

translate(-$centroid*$t)
some_object(target_mass=1.0,previous_mass=new_mass);

...then things get really weird-fun when you animate.

Andrew.


nophead wrote
> Even if it was reported it doesn't solve the original problem of adjusting
> the model to have the com in a specified place unless you use trial and
> error. Even if the com was available numerically in OpenSCAD it doesn't
> solve the original problem. You need to write an equation for the com
> dependent on the variable of the geometry you wish to change and then
> solve
> it to create the geometry.
> On Nov 24, 2015 12:52 AM, "Andrew Plumb" &lt;

> andrew@

> &gt; wrote:
> 
>> On second thoughts, a better place to calculate and report the 3D
>> volume(s) and centroid(s) or 2D area(s), centroids and perimeter
>> length(s)
>> would be here:
>>
>> https://github.com/openscad/openscad/blob/master/src/mainwin.cc#L1917-L1944
>>
>> ?where the Render (F6) summary report is generated.
>>
>> Andrew.





--
View this message in context: http://forum.openscad.org/Centre-of-Mass-tp14707p14743.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Tue Nov 24 12:41:16 2015
From: doug at moens.org (doug moen)
Date: Tue, 24 Nov 2015 12:41:16 -0500
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <1448360565690-14735.post@n5.nabble.com>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
	<1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
	<20151122211932.04126b2d@www.etchedpixels.co.uk>
	<CAGV6i+MhPJP27QSA1QwFXj_z+CrGP--L8KQEr4rtaEqfA8U9Jg@mail.gmail.com>
	<20151123163900.23348645@www.etchedpixels.co.uk>
	<CAGV6i+NJs9vRpku3zuvYjnNBwaJfeM83pLOMDO9mExUhaetk5A@mail.gmail.com>
	<20151123182908.01d49aa8@www.etchedpixels.co.uk>
	<1448360565690-14735.post@n5.nabble.com>
Message-ID: <CAGV6i+MU1mwodiVk=aqB4sKYY1ieSYSV6uXqHVZQSRje3DOoQg@mail.gmail.com>

Hi Wolf.

A point of terminology: you use the word "integer", when I think you are
actually referring to the fixed point format that Alan has proposed: 64 bit
fixed point with 32 bits before and after the binary point. I'll call this
"fixed point", since if we actually switched to using integers, then we
wouldn't be able to describe distances smaller than 1 mm.

64 bit floating point is better than the proposed 64 bit fixed point
because it is so much more accurate, for the kinds of computations we do in
OpenSCAD.

First, let's consider vertex positions in the model. Let's suppose that no
part of the model is more than 256mm (25.6cm, ~10in) away from the origin,
which will be true in the large majority of cases. If we are using fixed
point numbers, then we'll be using at most 8 bits before the binary point.
The high order 24 bits will be zero. So vertex coordinates have at most 40
bits of precision, compared to 53 bits of precision with floating point.
With fixed point, the smaller the number, the less precision, while
floating point numbers have a constant precision of 53 bits.

The precision of vertex coordinates in the final computed mesh is not the
most important issue.
What's important is the accuracy of computations.

Many of the numbers in OpenSCAD computations are not vertex coordinates.
Consider trigonometry and rotation. To rotate an object, you need to
compute the sine and cosine of the angle, which will be in the range
[1,-1]. With fixed point numbers, sines and cosines have 33 bits of
precision, compared to 53 bits of precision with floating point.

The big advantage of floating point is when we perform multi-stage and
iterative computations in OpenSCAD, with many intermediate results. At each
stage, some accuracy is lost, and the errors accumulate at each stage. To
minimize the impact of these errors on the model, you want to have as much
precision as possible.

If you have a detailed understanding of how computer arithmetic works, then
you can design your programs to minimize these errors. Frankly, this is an
advanced topic, taught in 3rd year computer science at my university. Most
professional computer programmers know little about this subject. Most
OpenSCAD users know little about this subject. Floating point is better
than fixed point for OpenSCAD because the vastly greater precision of
floating point numbers makes numeric computation more accurate, and makes
OpenSCAD more beginner friendly.

Doug Moen.

On 24 November 2015 at 05:22, wolf <wv99999 at gmail.com> wrote:

> The argument whether to use integer or floating point arithmetic can be
> decided quite simply. If you care to look up  equinumerosity
> <http://en.wikipedia.org/wiki/Equinumerosity>   in the wikipedia, you'll
> see
> that a 64 bit integer has a one-on-one correspondence (a bijection) with a
> 64 bit floating point number, i.e an any combination of bits may be
> interpreted either as an integer or a float. Floats give a greater range,
> at
> the cost of reduced accuracy.
>
> 10E-7mm (about the radius of an atom) is the smallest size an OpenSCAD
> model
> can meaningfully be given, below that, the rules of physics change
> (uncertainty principle, etc), and modelling that in OpenSCAD is just plain
> silly. If we take that as the bottom, then a signed integer can tops
> represent a distance of 922337km, or twice the distance earth-moon, with an
> accuracy of 10E-7mm.
> A 64 bit float uses only 53 bits for its mantissa, 10 bits less than the
> integer, and thus its accuracy is only 1/1024 that of an integer
> representation. It can represent tops 900km with an accuracy of 10E-7mm. Is
> 900km enough? Possibly. 922337km for integer arithmetic is certainly
> enough,
> and no more range is needed.
>
> Computing speed? have a look  here
> <http://nicolas.limare.net/pro/notes/2014/12/12_arit_speed/>   and  here
> <http://nicolas.limare.net/pro/notes/2014/12/16_math_speed/>  .
>
> Z-fighting? Do we want that? In the light of what what recently discussed
> here
> <
> http://forum.openscad.org/Simple-addition-of-numbers-introduces-error-td14408.html
> >
> , z-fighting is bound to be a floating point issue.  MKoch
> <
> http://forum.openscad.org/make-an-object-hollow-with-constant-wall-thickness-td14255.html
> >
> provided some interesting code producing shapes that look quite different
> when previewed and rendered:
> <http://forum.openscad.org/file/n14735/MKoch-1.mkoch-1>
> <http://forum.openscad.org/file/n14735/MKoch-2.mkoch-2>
> <http://forum.openscad.org/file/n14735/MKoch-3.mkoch-3>
> <http://forum.openscad.org/file/n14735/MKoch-4.mkoch-4>
>
> I have no problem deciding what I prefer: 64 bit integer arithmetic.
> Accuracy is better, range is fully sufficient, computing speed is equal or
> superior, and the likelyhood of imaging problems that need to be overcome
> by
> user-space tricks associated with floating point numbers - forget about
> floats asap, please.
> Wolf
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/feature-request-plug-ins-tp14663p14735.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151124/ec07792c/attachment.html>

From Torsten.Paul at gmx.de  Tue Nov 24 13:43:00 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Tue, 24 Nov 2015 19:43:00 +0100
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <1448360565690-14735.post@n5.nabble.com>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
	<1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
	<20151122211932.04126b2d@www.etchedpixels.co.uk>
	<CAGV6i+MhPJP27QSA1QwFXj_z+CrGP--L8KQEr4rtaEqfA8U9Jg@mail.gmail.com>
	<20151123163900.23348645@www.etchedpixels.co.uk>
	<CAGV6i+NJs9vRpku3zuvYjnNBwaJfeM83pLOMDO9mExUhaetk5A@mail.gmail.com>
	<20151123182908.01d49aa8@www.etchedpixels.co.uk>
	<1448360565690-14735.post@n5.nabble.com>
Message-ID: <5654AFB4.4070601@gmx.de>

On 11/24/2015 11:22 AM, wolf wrote:
> Z-fighting? Do we want that? In the light of what what recently discussed 
> here
> <http://forum.openscad.org/Simple-addition-of-numbers-introduces-error-td14408.html> 
> , z-fighting is bound to be a floating point issue.  MKoch
> <http://forum.openscad.org/make-an-object-hollow-with-constant-wall-thickness-td14255.html>  
> provided some interesting code producing shapes that look quite different
> when previewed and rendered:
> <http://forum.openscad.org/file/n14735/MKoch-1.mkoch-1> 
> 
This is not just Z-fighting, adding a convexity parameter (value 3 seems
to work for me) to the minkowski() fixes the white see-through parts in
the preview display.

Only the bottom plane actually has the Z-fighting issue.

ciao,
  Torsten.



From louijp at yahoo.com  Tue Nov 24 21:47:50 2015
From: louijp at yahoo.com (Jean-Paul Louis)
Date: Tue, 24 Nov 2015 21:47:50 -0500
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <CAGV6i+MU1mwodiVk=aqB4sKYY1ieSYSV6uXqHVZQSRje3DOoQg@mail.gmail.com>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
	<1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
	<20151122211932.04126b2d@www.etchedpixels.co.uk>
	<CAGV6i+MhPJP27QSA1QwFXj_z+CrGP--L8KQEr4rtaEqfA8U9Jg@mail.gmail.com>
	<20151123163900.23348645@www.etchedpixels.co.uk>
	<CAGV6i+NJs9vRpku3zuvYjnNBwaJfeM83pLOMDO9mExUhaetk5A@mail.gmail.com>
	<20151123182908.01d49aa8@www.etchedpixels.co.uk>
	<1448360565690-14735.post@n5.nabble.com>
	<CAGV6i+MU1mwodiVk=aqB4sKYY1ieSYSV6uXqHVZQSRje3DOoQg@mail.gmail.com>
Message-ID: <6507013E-F662-43AB-8B97-D21AE46ED8FE@yahoo.com>

Why not using the nanometer as internal unit, and always use 64bit integers.
That would be easy to handle. If my memory is not abusing me, KiCAD use the nanometer as internal unit.

My $0.02,
Jean-Paul
AC9GH


> On Nov 24, 2015, at 12:41 PM, doug moen <doug at moens.org> wrote:
> 
> Hi Wolf.
> 
> A point of terminology: you use the word "integer", when I think you are actually referring to the fixed point format that Alan has proposed: 64 bit fixed point with 32 bits before and after the binary point. I'll call this "fixed point", since if we actually switched to using integers, then we wouldn't be able to describe distances smaller than 1 mm.
> 
> 64 bit floating point is better than the proposed 64 bit fixed point because it is so much more accurate, for the kinds of computations we do in OpenSCAD.
> 
> First, let's consider vertex positions in the model. Let's suppose that no part of the model is more than 256mm (25.6cm, ~10in) away from the origin, which will be true in the large majority of cases. If we are using fixed point numbers, then we'll be using at most 8 bits before the binary point. The high order 24 bits will be zero. So vertex coordinates have at most 40 bits of precision, compared to 53 bits of precision with floating point. With fixed point, the smaller the number, the less precision, while floating point numbers have a constant precision of 53 bits.
> 
> The precision of vertex coordinates in the final computed mesh is not the most important issue.
> What's important is the accuracy of computations.
> 
> Many of the numbers in OpenSCAD computations are not vertex coordinates. Consider trigonometry and rotation. To rotate an object, you need to compute the sine and cosine of the angle, which will be in the range [1,-1]. With fixed point numbers, sines and cosines have 33 bits of precision, compared to 53 bits of precision with floating point.
> 
> The big advantage of floating point is when we perform multi-stage and iterative computations in OpenSCAD, with many intermediate results. At each stage, some accuracy is lost, and the errors accumulate at each stage. To minimize the impact of these errors on the model, you want to have as much precision as possible.
> 
> If you have a detailed understanding of how computer arithmetic works, then you can design your programs to minimize these errors. Frankly, this is an advanced topic, taught in 3rd year computer science at my university. Most professional computer programmers know little about this subject. Most OpenSCAD users know little about this subject. Floating point is better than fixed point for OpenSCAD because the vastly greater precision of floating point numbers makes numeric computation more accurate, and makes OpenSCAD more beginner friendly.
> 
> Doug Moen.
> 
> On 24 November 2015 at 05:22, wolf <wv99999 at gmail.com> wrote:
> The argument whether to use integer or floating point arithmetic can be
> decided quite simply. If you care to look up  equinumerosity
> <http://en.wikipedia.org/wiki/Equinumerosity>   in the wikipedia, you'll see
> that a 64 bit integer has a one-on-one correspondence (a bijection) with a
> 64 bit floating point number, i.e an any combination of bits may be
> interpreted either as an integer or a float. Floats give a greater range, at
> the cost of reduced accuracy.
> 
> 10E-7mm (about the radius of an atom) is the smallest size an OpenSCAD model
> can meaningfully be given, below that, the rules of physics change
> (uncertainty principle, etc), and modelling that in OpenSCAD is just plain
> silly. If we take that as the bottom, then a signed integer can tops
> represent a distance of 922337km, or twice the distance earth-moon, with an
> accuracy of 10E-7mm.
> A 64 bit float uses only 53 bits for its mantissa, 10 bits less than the
> integer, and thus its accuracy is only 1/1024 that of an integer
> representation. It can represent tops 900km with an accuracy of 10E-7mm. Is
> 900km enough? Possibly. 922337km for integer arithmetic is certainly enough,
> and no more range is needed.
> 
> Computing speed? have a look  here
> <http://nicolas.limare.net/pro/notes/2014/12/12_arit_speed/>   and  here
> <http://nicolas.limare.net/pro/notes/2014/12/16_math_speed/>  .
> 
> Z-fighting? Do we want that? In the light of what what recently discussed
> here
> <http://forum.openscad.org/Simple-addition-of-numbers-introduces-error-td14408.html>
> , z-fighting is bound to be a floating point issue.  MKoch
> <http://forum.openscad.org/make-an-object-hollow-with-constant-wall-thickness-td14255.html>
> provided some interesting code producing shapes that look quite different
> when previewed and rendered:
> <http://forum.openscad.org/file/n14735/MKoch-1.mkoch-1>
> <http://forum.openscad.org/file/n14735/MKoch-2.mkoch-2>
> <http://forum.openscad.org/file/n14735/MKoch-3.mkoch-3>
> <http://forum.openscad.org/file/n14735/MKoch-4.mkoch-4>
> 
> I have no problem deciding what I prefer: 64 bit integer arithmetic.
> Accuracy is better, range is fully sufficient, computing speed is equal or
> superior, and the likelyhood of imaging problems that need to be overcome by
> user-space tricks associated with floating point numbers - forget about
> floats asap, please.
> Wolf
> 
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/feature-request-plug-ins-tp14663p14735.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> 
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From wv99999 at gmail.com  Wed Nov 25 05:44:44 2015
From: wv99999 at gmail.com (wolf)
Date: Wed, 25 Nov 2015 03:44:44 -0700 (MST)
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <6507013E-F662-43AB-8B97-D21AE46ED8FE@yahoo.com>
References: <1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
	<20151122211932.04126b2d@www.etchedpixels.co.uk>
	<CAGV6i+MhPJP27QSA1QwFXj_z+CrGP--L8KQEr4rtaEqfA8U9Jg@mail.gmail.com>
	<20151123163900.23348645@www.etchedpixels.co.uk>
	<CAGV6i+NJs9vRpku3zuvYjnNBwaJfeM83pLOMDO9mExUhaetk5A@mail.gmail.com>
	<20151123182908.01d49aa8@www.etchedpixels.co.uk>
	<1448360565690-14735.post@n5.nabble.com>
	<CAGV6i+MU1mwodiVk=aqB4sKYY1ieSYSV6uXqHVZQSRje3DOoQg@mail.gmail.com>
	<6507013E-F662-43AB-8B97-D21AE46ED8FE@yahoo.com>
Message-ID: <1448448284017-14748.post@n5.nabble.com>

Thank you, Torsten, for the reference to convexity. Whoever is looking after
the manual, may I request that the parameters applicable to minkowski() be
added to the manual?

For the remainder of the comments received, I'll focus on what Doug Moen has
written, not because I want to pick on him, but because his comment contains
enough information on his educational background that I can compare it
against my own - and fill in what appears to be a gap in his mathematics
education. This gap is quite deep, what Doug references as an advanced topic
in computer science - how computer arithmetics works - I learned when I was
about 12 or 14 years old, and the most advanced computer available to me
could not even do divisions! It would take another 20 or 25 years before IBM
created the first PC. What I say in the following is based on my High School
maths - five hours of classes a week, and six hour long tests, but
definitely not university level math. Thus, Doug would have been taught my
stuff only if he had attended university for a total of at least five or six
years - and he sounds as if he finished after three. 

The first concept we were trained in thoroughly is to understand mapping: if
a==b then it does not matter whether I refer to a or b, they are just
different names for the same thing. Among mathematicians, this is called a
bijection or a one-on-one correspondence. 

The second concept we had to understand is that a measurement (a distance,
an area, a weight, etc) is always the product of a value multiplied with a
unit. A computer does not understand units, programs only manipulate values
(commonly, but somewhat inaccurately, called numbers). Units need to be
added to any computer output by a human, to connect those values/numbers to
the real world and give them meaning. Humans do combining values and units
all the time, unconciously. To become conscious about them requires quite
some intellectual effort, and many people never get this far.

The third concept we learned is that items may be collected in sets, and
that a number may be assigned bijectivly to these items. The topic, set
theory, has become the foundation of much, if not all mathematics. Read the
CGAL documentation, and you cannot escape set theory. The only property of
sets that I need here is that many sets have the property that they are
countable, meaning that a natural number (a number generated from
n=1+1+1+...) can be assigned bijectively to them. Integers have this
property, as do ratios and even roots. Because they are countable, they are
at heart not different from each other, and I am justified in calling them
all integers (see mapping above). That holds true also for all numbers
representable on a computer, be they integers, floats or strings, because of
their finite length. But real numbers are not countable, and thus need to be
treated differently. 

Real numbers need to be represented by infinite Taylor series, and when
these series are forced into what a computer can handle, errors, called
rounding errors, are inevitable. Sines and cosines, indispensible for
rotations, belong into this category. But because any real number can be
represented by a suitable infinite series, this has an effect on accuracy
only if an improper library is chosen.

It is getting rather late now, and I do not have the time to discuss number
formats and representations. From my short excursion into number theory it
is clear that deep inside any computer only integers are at work, and that
any other formats, including floats, are there for the user's convenience. I
do not believe in Alan Cox' speed advantage for integer arithmetic - my
impression is that this claim arises from counting clock cycles,
disregarding time lost e.g. when long queues collapse - but . . .

For me the true decision is made by the presence or absence of imaging
artifacts - z-fighting is bound to have its origin in the use of floats, and
from all I have read in this forum, manifold issues also appear to be due to
the use of floats.
For an "internal unit" I prefer 1E-7mm, the atomic scale, to match the most
detailed printer that has ever been built. Then I don't need any "decimal
point", as I am not limited by the choice of "millimeter". Fixed point
numbers are just floating point numbers in disguise, and do not have any
additional utility. 

The real challenge is to raise Doug Moen's mathematical competence, so that
his prejudice against integer arithmetic can be overcome, and his
programming competence may shine.

Wolf



--
View this message in context: http://forum.openscad.org/feature-request-plug-ins-tp14663p14748.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From alan at lxorguk.ukuu.org.uk  Wed Nov 25 09:47:43 2015
From: alan at lxorguk.ukuu.org.uk (Alan Cox)
Date: Wed, 25 Nov 2015 14:47:43 +0000
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <CAGV6i+MU1mwodiVk=aqB4sKYY1ieSYSV6uXqHVZQSRje3DOoQg@mail.gmail.com>
References: <1448008658153-14663.post@n5.nabble.com>
	<CAGV6i+OP=oBnwKrdQQr5F8imG4XDbmf4zh2WgXGAy13NnvLaGQ@mail.gmail.com>
	<629CA82F-BA4B-4F77-8E6E-20AB8B63BB64@kintel.net>
	<1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
	<20151122211932.04126b2d@www.etchedpixels.co.uk>
	<CAGV6i+MhPJP27QSA1QwFXj_z+CrGP--L8KQEr4rtaEqfA8U9Jg@mail.gmail.com>
	<20151123163900.23348645@www.etchedpixels.co.uk>
	<CAGV6i+NJs9vRpku3zuvYjnNBwaJfeM83pLOMDO9mExUhaetk5A@mail.gmail.com>
	<20151123182908.01d49aa8@www.etchedpixels.co.uk>
	<1448360565690-14735.post@n5.nabble.com>
	<CAGV6i+MU1mwodiVk=aqB4sKYY1ieSYSV6uXqHVZQSRje3DOoQg@mail.gmail.com>
Message-ID: <20151125144743.39bf5c84@www.etchedpixels.co.uk>

On Tue, 24 Nov 2015 12:41:16 -0500
doug moen <doug at moens.org> wrote:

> Hi Wolf.
> 
> A point of terminology: you use the word "integer", when I think you are
> actually referring to the fixed point format that Alan has proposed: 64 bit
> fixed point with 32 bits before and after the binary point. I'll call this
> "fixed point", since if we actually switched to using integers, then we
> wouldn't be able to describe distances smaller than 1 mm.

They are the same thing, where you put the decimal point is a matter of
the units. You obviously want to pick a divide that reflects the normal
use of the program. Decimal points are part of the unit not part of the
number.

> 64 bit floating point is better than the proposed 64 bit fixed point
> because it is so much more accurate, for the kinds of computations we do in
> OpenSCAD.

How is representing partial atom close to the origin useful 8)

> Consider trigonometry and rotation. To rotate an object, you need to
> compute the sine and cosine of the angle, which will be in the range
> [1,-1]. With fixed point numbers, sines and cosines have 33 bits of
> precision, compared to 53 bits of precision with floating point.

It depends how you divide up the bits. 32:32 may well not be the ideal
choice - working on notional nanometres as has been suggested is probably
a better split. Nanometres should suit everyone except crazed physicists
and microprocessor designers.

> If you have a detailed understanding of how computer arithmetic works, then
> you can design your programs to minimize these errors. Frankly, this is an

You don't need to minimise the errors, you need a mathematical model
which produces valid objects rapidly and within the tolerance of
printing. It's the difference between engineering and mathematicians.
OpenSCAD lives in the real world.

Mathematicians minimise errors, engineers verify that the cumulative
error won't change anything they care about.

> advanced topic, taught in 3rd year computer science at my university. Most
> professional computer programmers know little about this subject. Most
> OpenSCAD users know little about this subject. Floating point is better
> than fixed point for OpenSCAD because the vastly greater precision of
> floating point numbers makes numeric computation more accurate, and makes
> OpenSCAD more beginner friendly.

Disagree entirely. Again OpenSCAD is a 3D printing tool not a
mathematical modeller. Let me explain the end user view of OpenSCAD

- Type in stuff
- Press render
- Export to STL
- Print

Nobody cares what format is used internally provided when you give it
real world problems it gives you valid objects back within the tolerances
of the printer and in acceptable time.

And if you *really* want mathematical purity and perfection then turn the
objects into a set of implicit functions and do your final render by
solving them. Your internal representation will then be perfectly accurate
and your "conversion" algorithm just has to decide on the accuracy it
desires. That lets you do all sorts of funky stuff such as getting more
accurate the longer you leave it, or most accurate render we can do
within n seconds.

Alan


From R.E.Wolff at BitWizard.nl  Wed Nov 25 10:06:43 2015
From: R.E.Wolff at BitWizard.nl (Rogier Wolff)
Date: Wed, 25 Nov 2015 16:06:43 +0100
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <20151125144743.39bf5c84@www.etchedpixels.co.uk>
References: <1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
	<20151122211932.04126b2d@www.etchedpixels.co.uk>
	<CAGV6i+MhPJP27QSA1QwFXj_z+CrGP--L8KQEr4rtaEqfA8U9Jg@mail.gmail.com>
	<20151123163900.23348645@www.etchedpixels.co.uk>
	<CAGV6i+NJs9vRpku3zuvYjnNBwaJfeM83pLOMDO9mExUhaetk5A@mail.gmail.com>
	<20151123182908.01d49aa8@www.etchedpixels.co.uk>
	<1448360565690-14735.post@n5.nabble.com>
	<CAGV6i+MU1mwodiVk=aqB4sKYY1ieSYSV6uXqHVZQSRje3DOoQg@mail.gmail.com>
	<20151125144743.39bf5c84@www.etchedpixels.co.uk>
Message-ID: <20151125150643.GT4631@BitWizard.nl>

On Wed, Nov 25, 2015 at 02:47:43PM +0000, Alan Cox wrote:
> > Consider trigonometry and rotation. To rotate an object, you need to
> > compute the sine and cosine of the angle, which will be in the range
> > [1,-1]. With fixed point numbers, sines and cosines have 33 bits of
> > precision, compared to 53 bits of precision with floating point.
> 
> It depends how you divide up the bits. 32:32 may well not be the ideal
> choice - working on notional nanometres as has been suggested is probably
> a better split. Nanometres should suit everyone except crazed physicists
> and microprocessor designers.

If you switch to using integers/fixedpoint for coordinates, do you
have to do the same for the transformation matrices where the
rotations with cosines and sines end up?

If you switch to using 64 bit integers/fixedpoint for coordinates,
using a 32:32 fixed point format for the matrices would require
extracting something like the middle 64 bits from a 128 bit 64x64bit
muliplication result, right? Wouldn't an FPU be more efficient at
doing this?

	Roger. 

-- 
** R.E.Wolff at BitWizard.nl ** http://www.BitWizard.nl/ ** +31-15-2600998 **
**    Delftechpark 26 2628 XH  Delft, The Netherlands. KVK: 27239233    **
*-- BitWizard writes Linux device drivers for any device you may have! --*
The plan was simple, like my brother-in-law Phil. But unlike
Phil, this plan just might work.


From alan at lxorguk.ukuu.org.uk  Wed Nov 25 10:20:08 2015
From: alan at lxorguk.ukuu.org.uk (Alan Cox)
Date: Wed, 25 Nov 2015 15:20:08 +0000
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <20151125150643.GT4631@BitWizard.nl>
References: <1448212649065-14700.post@n5.nabble.com>
	<CAGV6i+Ojk2Wmu=nJTgM=gTfdXQJwzSLTU+mP-hcPCcAO8vhvmg@mail.gmail.com>
	<20151122211932.04126b2d@www.etchedpixels.co.uk>
	<CAGV6i+MhPJP27QSA1QwFXj_z+CrGP--L8KQEr4rtaEqfA8U9Jg@mail.gmail.com>
	<20151123163900.23348645@www.etchedpixels.co.uk>
	<CAGV6i+NJs9vRpku3zuvYjnNBwaJfeM83pLOMDO9mExUhaetk5A@mail.gmail.com>
	<20151123182908.01d49aa8@www.etchedpixels.co.uk>
	<1448360565690-14735.post@n5.nabble.com>
	<CAGV6i+MU1mwodiVk=aqB4sKYY1ieSYSV6uXqHVZQSRje3DOoQg@mail.gmail.com>
	<20151125144743.39bf5c84@www.etchedpixels.co.uk>
	<20151125150643.GT4631@BitWizard.nl>
Message-ID: <20151125152008.19e973be@www.etchedpixels.co.uk>

> If you switch to using integers/fixedpoint for coordinates, do you
> have to do the same for the transformation matrices where the
> rotations with cosines and sines end up?

Yes. You do need enough bits for accuracy there too - which I think is
the key point Doug was making. On the other hand we don't need to be
accurate enough to hit a hit a dinner plate on the moon.

> If you switch to using 64 bit integers/fixedpoint for coordinates,
> using a 32:32 fixed point format for the matrices would require
> extracting something like the middle 64 bits from a 128 bit 64x64bit
> muliplication result, right? Wouldn't an FPU be more efficient at
> doing this

On some Intel (but then you'd write all your operations in SSE3 not FPU)
and if all you cared about was Intel you'd be doing packed multiplies
on 64bit floats.

On ARM tablets and the like the FPU is generally very much weaker.

I'm not too fussed either approach - and my work hat is Intel so with my
work hat on I positively encourage FPU 8)

Alan


From rudolf at parkinbot.com  Wed Nov 25 10:30:52 2015
From: rudolf at parkinbot.com (Parkinbot)
Date: Wed, 25 Nov 2015 08:30:52 -0700 (MST)
Subject: [OpenSCAD] general extrusion (imperfect)
In-Reply-To: <1448368607908-14740.post@n5.nabble.com>
References: <1448368607908-14740.post@n5.nabble.com>
Message-ID: <1448465452390-14752.post@n5.nabble.com>

If you don't want to calculate all your extruding path (and parameter)
information you will love multivariate splines. As I just finished my
library, which I (painfully) ported from Matlab to OpenSCAD, I can show you
some first results: 


<http://forum.openscad.org/file/n14752/spline_demo.png> 
By the way, you said: "But I've found porting from Matlab to OpenSCAD to be
quite un-painful." Have you ever tried to port some matrix related stuff?
Even expressing a simple algorithm with a functional language it just a big
mass, NO FUN AT ALL. Not to mention that the result can't be read anymore.



- Rudolf



--
View this message in context: http://forum.openscad.org/general-extrusion-imperfect-tp14740p14752.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From bioinformatics at gringene.org  Wed Nov 25 14:13:01 2015
From: bioinformatics at gringene.org (David Eccles (gringer))
Date: Thu, 26 Nov 2015 08:13:01 +1300
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <mailman.9.1448470805.27916.discuss_lists.openscad.org@lists.openscad.org>
References: <mailman.9.1448470805.27916.discuss_lists.openscad.org@lists.openscad.org>
Message-ID: <5656083D.7020105@gringene.org>

Doug moen <doug at moens.org> wrote:
> advanced topic, taught in 3rd year computer science at my
> university. Most professional computer programmers know little about
> this subject. Most OpenSCAD users know little about this subject.
> Floating point is better than fixed point for OpenSCAD because the
> vastly greater precision of floating point numbers makes numeric
> computation more accurate, and makes OpenSCAD more beginner
> friendly.

Alan Cox <alan at lxorguk.ukuu.org.uk> wrote:
> Disagree entirely. Again OpenSCAD is a 3D printing tool not a 
> mathematical modeller. Let me explain the end user view of OpenSCAD
> 
> Nobody cares what format is used internally provided when you give
> it real world problems it gives you valid objects back within the
> tolerances of the printer and in acceptable time.
> 
> .... I'm not too fussed either approach - and my work hat is Intel
> so with my work hat on I positively encourage FPU 8)

I am amused by this discussion -- a 3rd year *computer science*
lecturer debating with Alan Cox on the appropriateness of fixed point
calculations.

I'm pleased to see that OpenSCAD is a useful enough program that you
would like to try improving it.

 - D


From oz.at.michael at gmail.com  Wed Nov 25 14:26:11 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Wed, 25 Nov 2015 12:26:11 -0700 (MST)
Subject: [OpenSCAD] Rotate Spoke try 2
In-Reply-To: <1448424860960-14747.post@n5.nabble.com>
References: <1448424860960-14747.post@n5.nabble.com>
Message-ID: <1448479571189-14754.post@n5.nabble.com>

Hi again Nathan,

Your post is still flagged as "This post has NOT been accepted by the
mailing list yet", so nobody gets it unless they look. You need to subscribe
to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email. 

This is separate from the forum, the two work hand in hand, currently you
only have one hand.

I'll have a look at you Q now.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Rotate-Spoke-try-2-tp14747p14754.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Wed Nov 25 14:45:53 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Wed, 25 Nov 2015 12:45:53 -0700 (MST)
Subject: [OpenSCAD] Rotate Spoke try 2
In-Reply-To: <1448424860960-14747.post@n5.nabble.com>
References: <1448424860960-14747.post@n5.nabble.com>
Message-ID: <1448480753100-14755.post@n5.nabble.com>

So at this stage do you just want a triangle, like in the picture below,
which gets rotated NoArm times, or did you want to make one object where the
edges are composed of multiples of the red/orange lines?

<http://forum.openscad.org/file/n14755/spokes_Thrown-together.jpg> 



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Rotate-Spoke-try-2-tp14747p14755.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From bioinformatics at gringene.org  Wed Nov 25 19:43:04 2015
From: bioinformatics at gringene.org (David Eccles (gringer))
Date: Thu, 26 Nov 2015 13:43:04 +1300
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <5656083D.7020105@gringene.org>
References: <mailman.9.1448470805.27916.discuss_lists.openscad.org@lists.openscad.org>
	<5656083D.7020105@gringene.org>
Message-ID: <56565598.7080208@gringene.org>

On 26/11/15 08:13, David Eccles (gringer) wrote:
> a 3rd year *computer science* lecturer debating with Alan Cox on the
> appropriateness of fixed point calculations.

Sorry, I got my wires crossed with that statement. Presumably a student
rather than a lecturer.

 - David


From alan at lxorguk.ukuu.org.uk  Thu Nov 26 06:04:53 2015
From: alan at lxorguk.ukuu.org.uk (Alan Cox)
Date: Thu, 26 Nov 2015 11:04:53 +0000
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <56565598.7080208@gringene.org>
References: <mailman.9.1448470805.27916.discuss_lists.openscad.org@lists.openscad.org>
	<5656083D.7020105@gringene.org> <56565598.7080208@gringene.org>
Message-ID: <20151126110453.6084f0b6@www.etchedpixels.co.uk>

On Thu, 26 Nov 2015 13:43:04 +1300
"David Eccles (gringer)" <bioinformatics at gringene.org> wrote:

> On 26/11/15 08:13, David Eccles (gringer) wrote:
> > a 3rd year *computer science* lecturer debating with Alan Cox on the
> > appropriateness of fixed point calculations.
> 
> Sorry, I got my wires crossed with that statement. Presumably a student
> rather than a lecturer.

And long may it continue because age doesn't make you right, experience
doesn't always make you right and someone who is a student today is
learning stuff we never did because the world has moved on.

Alan


From vo.publique at gmail.com  Thu Nov 26 07:46:49 2015
From: vo.publique at gmail.com (vicnet)
Date: Thu, 26 Nov 2015 05:46:49 -0700 (MST)
Subject: [OpenSCAD] general extrusion (imperfect)
In-Reply-To: <1448465452390-14752.post@n5.nabble.com>
References: <1448368607908-14740.post@n5.nabble.com>
	<1448465452390-14752.post@n5.nabble.com>
Message-ID: <1448542009170-14758.post@n5.nabble.com>

Hello,

It's funny because I work also for fun on bezier curve in Openscad.
It put my code in my vcad library (on github).
<http://forum.openscad.org/file/n14758/bezier.png> 

With same A:



Vicnet



--
View this message in context: http://forum.openscad.org/general-extrusion-imperfect-tp14740p14758.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Thu Nov 26 08:03:04 2015
From: rudolf at parkinbot.com (Parkinbot)
Date: Thu, 26 Nov 2015 06:03:04 -0700 (MST)
Subject: [OpenSCAD] Rotate Spoke try 2
In-Reply-To: <1448424860960-14747.post@n5.nabble.com>
References: <1448424860960-14747.post@n5.nabble.com>
Message-ID: <1448542984820-14759.post@n5.nabble.com>

in 2D you might be looking for this, e.g. a 7-gon:


in 3D you get some results with 


which are mostly not satisfying. If you want do something like a
dodecahedron, you'd calculate each corner point and face and define a
polyhedron, for which you can use the "new" vector stuff. I give an example
for a 2D hexagon:


But there are also other, more combinatoric methods for defining bodies.
E.g. a dodecahedron: 




--
View this message in context: http://forum.openscad.org/Rotate-Spoke-try-2-tp14747p14759.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Thu Nov 26 08:21:39 2015
From: nop.head at gmail.com (nop head)
Date: Thu, 26 Nov 2015 13:21:39 +0000
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <20151126110453.6084f0b6@www.etchedpixels.co.uk>
References: <mailman.9.1448470805.27916.discuss_lists.openscad.org@lists.openscad.org>
	<5656083D.7020105@gringene.org> <56565598.7080208@gringene.org>
	<20151126110453.6084f0b6@www.etchedpixels.co.uk>
Message-ID: <CAEEmnrN=GygB7m1YNBonwNg0jLE2BNsTyZHC5sr6frdF8w-tpg@mail.gmail.com>

The way I see it, yes you could use integers for the model coordinates if
you pick a very small unit, but I don't see how that is an advantage. If
you want to stack three equal cubes to make 100mm you can't do it because
100/3 is not an integer. As soon as you start doing trigonometry you can't
use integers, you need at least fixed point but that is just a poor man's
floating point. If you have hardware floating point why use fixed point?
Yes you can represent it with integers and an implicit scale but it doesn't
have any better properties than floating point regarding accuracy and
representing fractions.

The basic problem is trigonometry has fractions, irrationals and
transcendental numbers and none of these can be exactly represented with
integers, fixed point or floating point. CGAL uses rationals to allow exact
fractions but is very slow. Not sure why because a lot of numbers are
irrational as soon as you do rotations. But it seems to do a good job of
keeping things manifold.

Floating point doesn't cause non-manifold problems per se but any
truncation or rounding needs to be be topologically aware to avoid
collapsing vertexes. Using integers for the model doesn't help as you can
still have very close vertices that collapse under scaling or rotation.

Z fighting is just due to limited precision maths. Two coincident surfaces
have exactly the same depth, so theoretically which one you see should only
depend on the order they are drawn. But in practice when you rotate the
surfaces and then calculate the Z value of every pixel in a triangle and
quantise it to the Z buffer resolution the values are not always exactly
the same. Nothing to do with the model using floating point as it may all
be done in integer maths in the GPU at that point. The problem is the two
coplanar triangles have different vertices, so when you calculated the
depth at an arbitrary point you get slightly different results numerical
when you start from different vertices.

Unless computers start computing symbolically instead of numerically,
processing geometry is always going to cause problems like these. Using
integers is no solution.

On 26 November 2015 at 11:04, Alan Cox <alan at lxorguk.ukuu.org.uk> wrote:

> On Thu, 26 Nov 2015 13:43:04 +1300
> "David Eccles (gringer)" <bioinformatics at gringene.org> wrote:
>
> > On 26/11/15 08:13, David Eccles (gringer) wrote:
> > > a 3rd year *computer science* lecturer debating with Alan Cox on the
> > > appropriateness of fixed point calculations.
> >
> > Sorry, I got my wires crossed with that statement. Presumably a student
> > rather than a lecturer.
>
> And long may it continue because age doesn't make you right, experience
> doesn't always make you right and someone who is a student today is
> learning stuff we never did because the world has moved on.
>
> Alan
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151126/ce62cb1a/attachment.html>

From alan at lxorguk.ukuu.org.uk  Thu Nov 26 08:31:03 2015
From: alan at lxorguk.ukuu.org.uk (Alan Cox)
Date: Thu, 26 Nov 2015 13:31:03 +0000
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <CAEEmnrN=GygB7m1YNBonwNg0jLE2BNsTyZHC5sr6frdF8w-tpg@mail.gmail.com>
References: <mailman.9.1448470805.27916.discuss_lists.openscad.org@lists.openscad.org>
	<5656083D.7020105@gringene.org> <56565598.7080208@gringene.org>
	<20151126110453.6084f0b6@www.etchedpixels.co.uk>
	<CAEEmnrN=GygB7m1YNBonwNg0jLE2BNsTyZHC5sr6frdF8w-tpg@mail.gmail.com>
Message-ID: <20151126133103.1127e446@www.etchedpixels.co.uk>

> collapsing vertexes. Using integers for the model doesn't help as you can
> still have very close vertices that collapse under scaling or rotation.

If you view your integers (or floats or whatever) as points then yes, but
they are not - they are little cubes. Thats such a huge shift from what
CGAL does that I don't see any way it could be changed to work
symbolically and then use marching cubes or similar.


Alan


From tim.thawkins at gmail.com  Thu Nov 26 08:34:18 2015
From: tim.thawkins at gmail.com (Tim Hawkins)
Date: Thu, 26 Nov 2015 13:34:18 +0000
Subject: [OpenSCAD] feature request: plug-ins
In-Reply-To: <20151126133103.1127e446@www.etchedpixels.co.uk>
References: <mailman.9.1448470805.27916.discuss_lists.openscad.org@lists.openscad.org>
	<5656083D.7020105@gringene.org> <56565598.7080208@gringene.org>
	<20151126110453.6084f0b6@www.etchedpixels.co.uk>
	<CAEEmnrN=GygB7m1YNBonwNg0jLE2BNsTyZHC5sr6frdF8w-tpg@mail.gmail.com>
	<20151126133103.1127e446@www.etchedpixels.co.uk>
Message-ID: <CAEbsasSezA5=-3z8r+AJoQ89orKspat+-CMjXDh_Mz7wGw-K2w@mail.gmail.com>

Sounds like high-res voxels.

On Thu, Nov 26, 2015, 21:32 Alan Cox <alan at lxorguk.ukuu.org.uk> wrote:

> > collapsing vertexes. Using integers for the model doesn't help as you can
> > still have very close vertices that collapse under scaling or rotation.
>
> If you view your integers (or floats or whatever) as points then yes, but
> they are not - they are little cubes. Thats such a huge shift from what
> CGAL does that I don't see any way it could be changed to work
> symbolically and then use marching cubes or similar.
>
>
> Alan
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151126/9834461b/attachment-0001.html>

From rudolf at parkinbot.com  Thu Nov 26 11:16:29 2015
From: rudolf at parkinbot.com (Parkinbot)
Date: Thu, 26 Nov 2015 09:16:29 -0700 (MST)
Subject: [OpenSCAD] general extrusion (imperfect)
In-Reply-To: <1448542009170-14758.post@n5.nabble.com>
References: <1448368607908-14740.post@n5.nabble.com>
	<1448465452390-14752.post@n5.nabble.com>
	<1448542009170-14758.post@n5.nabble.com>
Message-ID: <1448554589391-14763.post@n5.nabble.com>

Oh, that is lovely. Looks almost the same! 

I suppose Bezier stuff is even more sophisticated than splines. I never dove
into it, but I guess the framework to do n-dim interpolation with it should
be quite similar and the only difference will be how the core equation
system is set up. 

Without having looked into your code yet (reading functional code is
definitely not, how I want to spend my afternoon), I?d like to ask you for
some general information about your approach: 

1. I?m using (natural) cubic splines. Do use cubic Beziers (i.e. two control
points)?

2. My approach is n-dim over one-dim ? i.e. I calculate a line integral as
common auxiliary x-dimension and apply an ordinary cubic spline sequence
spline2D(x, y_i, N) to any given dimension (y_i) in A. I guess you follow
the same way?

3. How do you automatically choose your control points? I guess there is
some freedom ?  

4. Beyond the different basic approaches, also the common line integral
plays an important role, as I?ve found out comparing results calculated on
the basis of the Euclidian norm and Eugene Lee's centripetal scheme. How do
you calculate yours? 

I?m planning to publish my library as part of some thingiverse project, as I
have done before with other libraries. But first let me play around with it
a bit and do some more testing to see how it reacts to pathological
datasets. I?m a fan of fail-safe code. Also, I might extend my code to
additionally cover circular curves and special boundary conditions. But if
you are interested, I?d send you my current implementation via PM. 

Hmm, we might combine our libraries and offer the functions through a
"common interface", like: 




--
View this message in context: http://forum.openscad.org/general-extrusion-imperfect-tp14740p14763.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Thu Nov 26 12:19:04 2015
From: doug at moens.org (doug moen)
Date: Thu, 26 Nov 2015 12:19:04 -0500
Subject: [OpenSCAD] general extrusion (imperfect)
In-Reply-To: <1448465452390-14752.post@n5.nabble.com>
References: <1448368607908-14740.post@n5.nabble.com>
	<1448465452390-14752.post@n5.nabble.com>
Message-ID: <CAGV6i+P7sz2MzyNas2BA2RPkyWBnQNp07=ubapFvhmtw=dqGhQ@mail.gmail.com>

Parkinbot said 'By the way, you said: "But I've found porting from Matlab
to OpenSCAD to be quite un-painful." Have you ever tried to port some
matrix related stuff? Even expressing a simple algorithm with a functional
language it just a big mass, NO FUN AT ALL. Not to mention that the result
can't be read anymore.'

OpenSCAD isn't a functional language. The minimum requirement for that is
to support functions as first class values, that can be passed as arguments
to functions, and returned as results (hence the name "functional"). This
is the basis of the rich set of control structures found in functional
languages, but missing in OpenSCAD (except that we now have list
comprehensions). True functional languages also have either lazy
evaluation, or at minimum support infinite lists.

If your starting point is Matlab, these features (first class functions and
infinite lists) might not mean much to you. Matlab has only limited support
for function values, not enough to support the functional style of
programming. And Matlab's generators are not as powerful as infinite lists.
But I can assure you that if you are porting a large, idiomatic functional
program to OpenSCAD (or to Matlab), then it is going to be very painful,
and the translated code will probably be much larger.

OpenSCAD is a declarative language, but it isn't powerful enough to qualify
as functional. OpenSCAD is very weak compared to anything that people
normally call a programming language, which is why we often claim that it
isn't a programming language.

I don't know your specific issues with porting Matlab code, but it is quite
possible that your problems are specific to OpenSCAD, and do not generalize
to functional programming languages.

And yeah, we could do better in the future. My OpenSCAD2 proposal is a baby
step into the world of functional programming. But there is a tricky
balancing act involved: making OpenSCAD more powerful without making it too
complex and ruining the properties that make it popular for non-programmers.

PS, I know nothing of splines and beziers; it's something I'd like to learn
now that I see what you and others are doing with it in OpenSCAD.

On 25 November 2015 at 10:30, Parkinbot <rudolf at parkinbot.com> wrote:

> If you don't want to calculate all your extruding path (and parameter)
> information you will love multivariate splines. As I just finished my
> library, which I (painfully) ported from Matlab to OpenSCAD, I can show you
> some first results:
>
>
> <http://forum.openscad.org/file/n14752/spline_demo.png>
> By the way, you said: "But I've found porting from Matlab to OpenSCAD to be
> quite un-painful." Have you ever tried to port some matrix related stuff?
> Even expressing a simple algorithm with a functional language it just a big
> mass, NO FUN AT ALL. Not to mention that the result can't be read anymore.
>
>
>
> - Rudolf
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/general-extrusion-imperfect-tp14740p14752.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151126/9fdf896c/attachment.html>

From vo.publique at gmail.com  Thu Nov 26 12:49:37 2015
From: vo.publique at gmail.com (vicnet)
Date: Thu, 26 Nov 2015 10:49:37 -0700 (MST)
Subject: [OpenSCAD] general extrusion (imperfect)
In-Reply-To: <1448554589391-14763.post@n5.nabble.com>
References: <1448368607908-14740.post@n5.nabble.com>
	<1448465452390-14752.post@n5.nabble.com>
	<1448542009170-14758.post@n5.nabble.com>
	<1448554589391-14763.post@n5.nabble.com>
Message-ID: <1448560177817-14765.post@n5.nabble.com>

Parkinbot wrote
> 1. I?m using (natural) cubic splines. Do use cubic Beziers (i.e. two
> control points)?

Yes, 2 controls points, automatically generated (with points before and
after one point).


Parkinbot wrote
> 2. My approach is n-dim over one-dim ? i.e. I calculate a line integral as
> common auxiliary x-dimension and apply an ordinary cubic spline sequence
> spline2D(x, y_i, N) to any given dimension (y_i) in A. I guess you follow
> the same way?

I not sure to understand integral...
I use this: https://en.wikipedia.org/wiki/B%C3%A9zier_curve and quadratic
bezier curve function to calculate intermediate positions between 2 points
and the 2 associated control points.


Parkinbot wrote
> 3. How do you automatically choose your control points? I guess there is
> some freedom ?  

For each point, take vector from point before to after and apply a weight to
get control point before and after.


Parkinbot wrote
> 4. Beyond the different basic approaches, also the common line integral
> plays an important role, as I?ve found out comparing results calculated on
> the basis of the Euclidian norm and Eugene Lee's centripetal scheme. How
> do you calculate yours? 

Oops, I don't understand at all 
For norm I use euclidien norm, so the same function in OpenSCAD.


Parkinbot wrote
> I?m planning to publish my library as part of some thingiverse project, as
> I have done before with other libraries. But first let me play around with
> it a bit and do some more testing to see how it reacts to pathological
> datasets. I?m a fan of fail-safe code. Also, I might extend my code to
> additionally cover circular curves and special boundary conditions. But if
> you are interested, I?d send you my current implementation via PM. 
> Hmm, we might combine our libraries and offer the functions through a
> "common interface", like: 

Why not !

a+
Vicnet



--
View this message in context: http://forum.openscad.org/general-extrusion-imperfect-tp14740p14765.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From bioinformatics at gringene.org  Thu Nov 26 14:03:54 2015
From: bioinformatics at gringene.org (David Eccles (gringer))
Date: Fri, 27 Nov 2015 08:03:54 +1300
Subject: [OpenSCAD] general extrusion (imperfect)
In-Reply-To: <mailman.2131.1448544909.25448.discuss_lists.openscad.org@lists.openscad.org>
References: <mailman.2131.1448544909.25448.discuss_lists.openscad.org@lists.openscad.org>
Message-ID: <5657579A.9040200@gringene.org>

I've also written an 'extrude along path' script. It's a Perl script to
generate an OpenSCAD polyhedron definition that extrudes a polygon
along a specified path. The path and polygon can be specified as
explicit points, or as a function on the parameter t (t = 0 .. 2*pi).

http://www.thingiverse.com/thing:186660

Now that I'm aware how powerful OpenSCAD code can be (see for example
[http://www.thingiverse.com/thing:942566]), I realise it can be
converted to pure OpenSCAD code, but need to put in some more time to
do the porting.

Unfortunately, I can't work out how to get rid of ugly twists in the
extrusion.


From rudolf at parkinbot.com  Thu Nov 26 14:21:21 2015
From: rudolf at parkinbot.com (Parkinbot)
Date: Thu, 26 Nov 2015 12:21:21 -0700 (MST)
Subject: [OpenSCAD] general extrusion (imperfect)
In-Reply-To: <CAGV6i+P7sz2MzyNas2BA2RPkyWBnQNp07=ubapFvhmtw=dqGhQ@mail.gmail.com>
References: <1448368607908-14740.post@n5.nabble.com>
	<1448465452390-14752.post@n5.nabble.com>
	<CAGV6i+P7sz2MzyNas2BA2RPkyWBnQNp07=ubapFvhmtw=dqGhQ@mail.gmail.com>
Message-ID: <1448565681295-14767.post@n5.nabble.com>

doug.moen wrote
> OpenSCAD isn't a functional language. The minimum requirement for that is
> to support functions as first class values, that can be passed as
> arguments to functions, and returned as results (hence the name
> "functional"). This is the basis of the rich set of control structures
> found in functional languages, but missing in OpenSCAD (except that we now
> have list comprehensions). True functional languages also have either lazy
> evaluation, or at minimum support infinite lists.

Ok, I don't want to get into a paradigm and purism discussion. My concern is
very practical and aims at the expressive power I can use to write useful
and readable code for designing stuff, I want to design. So let's call it a
small subset of a functional language. In your roadmap I can see that you
want to brush it up to go further into this direction. 
Are you sure, novice programmers will be happy or even able to follow you
there? We talk about playing around with vectors, matrices and Euclidian
spaces and functions. And about algorithms dealing with those entities. No
one wants to juggle around with infinite lists or write a parser or a
compiler. 
As the subset for now is still very small, I think OpenSCAD?s functions
could be also brushed up to go more into the procedural direction, like
QBASIC or basic C, which also can live without functional arguments and
pointers. Thus allowing for things like statement sequences, local variables
and random write access to vectors and matrices, as I already proposed in
http://forum.openscad.org/feature-request-plug-ins-tp14663p14721.html

doug.moen wrote
> Matlab has only limited support for function values, not enough to support
> the functional style of programming. And Matlab's generators are not as
> powerful as infinite lists. 

My starting point by far is not restricted to Matlab, which is by the way
the most expressive language I have ever programmed with. So forget about
this.

doug.moen wrote
> But I can assure you that if you are porting a large, idiomatic functional
> program to OpenSCAD (or to Matlab), then it is going to be very painful,
> and the translated code will probably be much larger. 

I also doubt that, beside the fact that functional programs are unreadable,
trying to be elegant at the first place. But this is also not the point. 

doug.moen wrote
> OpenSCAD is very weak compared to anything that people normally call a
> programming language, which is why we often claim that it isn't a
> programming language. 

So why not opening it up with a plugin-API, instead of dreaming about an
expressive power far beyond Matlab and which 99% of the users will curse at. 

doug.moen wrote
> I don't know your specific issues with porting Matlab code, but it is
> quite possible that your problems are specific to OpenSCAD, and do not
> generalize to functional programming languages. 

I?ve given a code example, doing some very usual matrix related steps. Have
a try ? 

doug.moen wrote
> PS, I know nothing of splines and beziers; it's something I'd like to
> learn now that I see what you and others are doing with it in OpenSCAD.

I?m sure this concept can also be useful for you, e.g. to read newer
DXF-formats into OpenSCAD or refine meshing.

- Rudolf 




--
View this message in context: http://forum.openscad.org/general-extrusion-imperfect-tp14740p14767.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Thu Nov 26 14:39:54 2015
From: rudolf at parkinbot.com (Parkinbot)
Date: Thu, 26 Nov 2015 12:39:54 -0700 (MST)
Subject: [OpenSCAD] general extrusion (imperfect)
In-Reply-To: <5657579A.9040200@gringene.org>
References: <1448368607908-14740.post@n5.nabble.com>
	<5657579A.9040200@gringene.org>
Message-ID: <1448566794124-14768.post@n5.nabble.com>

David Eccles (gringer) wrote
> I've also written an 'extrude along path' script. It's a Perl script to
> generate an OpenSCAD polyhedron definition that extrudes a polygon along a
> specified path.

Welcome to the club. Wouldn't it be nicer, to be able to just call out? 


David Eccles (gringer) wrote
> I realise it can be converted to pure OpenSCAD code, but need to put in
> some more time to do the porting.

Coming from Perl, you might be lucky. But I doubt. My port took twice the
time of developing the whole code at first hand.


David Eccles (gringer) wrote
> Unfortunately, I can't work out how to get rid of ugly twists in the
> extrusion.

Refine your mesh, if you calc all in Perl. If you use linear_extrude() there
is a slices parameter to do this. Or you use some interpolation technique
like nSplines() or vduplicate_bezier4()

- Rudolf



--
View this message in context: http://forum.openscad.org/general-extrusion-imperfect-tp14740p14768.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrew at plumb.org  Thu Nov 26 15:38:38 2015
From: andrew at plumb.org (clothbot)
Date: Thu, 26 Nov 2015 13:38:38 -0700 (MST)
Subject: [OpenSCAD] libigl: anyone poked at it for CGAL (partial)
	replacement?
Message-ID: <1448570318134-14769.post@n5.nabble.com>

Hey Everyone,

Has anyone looked into using libigl as a (partial) CGAL replacement for 3D
boolean op's and mesh manipulations?

http://libigl.github.io/libigl/

https://github.com/libigl/libigl

http://www.alecjacobson.com/weblog/?tag=libigl

Looks to be quite powerful!

Andrew.





--
View this message in context: http://forum.openscad.org/libigl-anyone-poked-at-it-for-CGAL-partial-replacement-tp14769.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Thu Nov 26 15:51:13 2015
From: doug at moens.org (doug moen)
Date: Thu, 26 Nov 2015 15:51:13 -0500
Subject: [OpenSCAD] libigl: anyone poked at it for CGAL (partial)
	replacement?
In-Reply-To: <1448570318134-14769.post@n5.nabble.com>
References: <1448570318134-14769.post@n5.nabble.com>
Message-ID: <CAGV6i+N3fq_TpacBKwdO3yDjUc0sS8TnkFfQT2c63_efh8OoAw@mail.gmail.com>

This appears to use CGAL and Cork to implement boolean operations.
https://github.com/gilbo/cork

They mention that Cork is available as an alternative: it is faster, but
not always robust.

On 26 November 2015 at 15:38, clothbot <andrew at plumb.org> wrote:

> Hey Everyone,
>
> Has anyone looked into using libigl as a (partial) CGAL replacement for 3D
> boolean op's and mesh manipulations?
>
> http://libigl.github.io/libigl/
>
> https://github.com/libigl/libigl
>
> http://www.alecjacobson.com/weblog/?tag=libigl
>
> Looks to be quite powerful!
>
> Andrew.
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/libigl-anyone-poked-at-it-for-CGAL-partial-replacement-tp14769.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151126/72a95883/attachment-0001.html>

From nathan at lx1.co.nz  Thu Nov 26 15:53:20 2015
From: nathan at lx1.co.nz (vIQleS)
Date: Thu, 26 Nov 2015 13:53:20 -0700 (MST)
Subject: [OpenSCAD] Rotate Spoke try 2
In-Reply-To: <1448542984820-14759.post@n5.nabble.com>
References: <1448424860960-14747.post@n5.nabble.com>
	<1448542984820-14759.post@n5.nabble.com>
Message-ID: <1448571200657-14771.post@n5.nabble.com>

Parkinbot wrote
> in 2D you might be looking for this, e.g. a 7-gon:

> 
> in 3D you get some results with 

> 

Yeah I actually managed to get what I wanted with cylinder & $fa

But it doesn't do <5. 

I'll have a look at the rest of that and see if i can figure anything out.
Will it work with cylinder?



--
View this message in context: http://forum.openscad.org/Rotate-Spoke-try-2-tp14747p14771.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Thu Nov 26 15:57:13 2015
From: doug at moens.org (doug moen)
Date: Thu, 26 Nov 2015 15:57:13 -0500
Subject: [OpenSCAD] libigl: anyone poked at it for CGAL (partial)
	replacement?
In-Reply-To: <CAGV6i+N3fq_TpacBKwdO3yDjUc0sS8TnkFfQT2c63_efh8OoAw@mail.gmail.com>
References: <1448570318134-14769.post@n5.nabble.com>
	<CAGV6i+N3fq_TpacBKwdO3yDjUc0sS8TnkFfQT2c63_efh8OoAw@mail.gmail.com>
Message-ID: <CAGV6i+OXsGTJqLwx8PxWQjSvwx4h6yaZ06pPKiX6BPo0Ja0Fsg@mail.gmail.com>

Cork is an unfinished project (still in the research phase) with 1
contributor; development stopped 3 years ago.

When libigl uses CGAL, it uses infinite precision rationals, just like
OpenSCAD.

On 26 November 2015 at 15:51, doug moen <doug at moens.org> wrote:

> This appears to use CGAL and Cork to implement boolean operations.
> https://github.com/gilbo/cork
>
> They mention that Cork is available as an alternative: it is faster, but
> not always robust.
>
> On 26 November 2015 at 15:38, clothbot <andrew at plumb.org> wrote:
>
>> Hey Everyone,
>>
>> Has anyone looked into using libigl as a (partial) CGAL replacement for 3D
>> boolean op's and mesh manipulations?
>>
>> http://libigl.github.io/libigl/
>>
>> https://github.com/libigl/libigl
>>
>> http://www.alecjacobson.com/weblog/?tag=libigl
>>
>> Looks to be quite powerful!
>>
>> Andrew.
>>
>>
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/libigl-anyone-poked-at-it-for-CGAL-partial-replacement-tp14769.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151126/cc39bdbe/attachment.html>

From mschafer at wireframe.biz  Thu Nov 26 16:26:28 2015
From: mschafer at wireframe.biz (Neon22)
Date: Thu, 26 Nov 2015 14:26:28 -0700 (MST)
Subject: [OpenSCAD] vertices and paths of a polygon created via offset()
In-Reply-To: <1448369263299-14741.post@n5.nabble.com>
References: <1448369263299-14741.post@n5.nabble.com>
Message-ID: <1448573188423-14773.post@n5.nabble.com>

alas its not currently possible to get the vertices from any operation.

- Try to do your difference inside a loop might make it faster.
- preparing the outlines in a program like Inkscape (in mm) and then
exporting using a script like:
  -  http://www.thingiverse.com/thing:1065500
might get you a simpler series of steps.



--
View this message in context: http://forum.openscad.org/vertices-and-paths-of-a-polygon-created-via-offset-tp14741p14773.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Thu Nov 26 16:38:03 2015
From: mschafer at wireframe.biz (Neon22)
Date: Thu, 26 Nov 2015 14:38:03 -0700 (MST)
Subject: [OpenSCAD] general extrusion (imperfect)
In-Reply-To: <1448566794124-14768.post@n5.nabble.com>
References: <1448368607908-14740.post@n5.nabble.com>
	<5657579A.9040200@gringene.org>
	<1448566794124-14768.post@n5.nabble.com>
Message-ID: <1448573883571-14774.post@n5.nabble.com>

Given the choice I personally would prefer a Bspline based approach over a
Bezier.
- due to the control points affecting the curve locally.

Extrude along path has to make local transformations at each step to avoid
the flipping problem created by gimbal locking (Euler interp and fixed
rotation order). Else its quaternions and off we go...

So making each extrude be a local coordinate offset from previous one is
ideal solution.
Also means we can make adjustments each extrusion - like scale, shape
change,...




--
View this message in context: http://forum.openscad.org/general-extrusion-imperfect-tp14740p14774.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrew at plumb.org  Thu Nov 26 17:43:45 2015
From: andrew at plumb.org (Andrew Plumb)
Date: Thu, 26 Nov 2015 17:43:45 -0500
Subject: [OpenSCAD] libigl: anyone poked at it for CGAL (partial)
	replacement?
In-Reply-To: <CAGV6i+N3fq_TpacBKwdO3yDjUc0sS8TnkFfQT2c63_efh8OoAw@mail.gmail.com>
References: <1448570318134-14769.post@n5.nabble.com>
	<CAGV6i+N3fq_TpacBKwdO3yDjUc0sS8TnkFfQT2c63_efh8OoAw@mail.gmail.com>
Message-ID: <3ACC64E9-3A84-47DA-A5FB-637D5944B6FB@plumb.org>

Ah, so it does:

https://github.com/libigl/libigl/blob/master/tutorial/609_Boolean/main.cpp <https://github.com/libigl/libigl/blob/master/tutorial/609_Boolean/main.cpp>

https://github.com/libigl/libigl/blob/master/include/igl/copyleft/boolean/mesh_boolean.cpp <https://github.com/libigl/libigl/blob/master/include/igl/copyleft/boolean/mesh_boolean.cpp>

On the plus side, looks like the meshes going into the operations and coming out are Eigen data constructs, so it may be easier to parallelize the operations and faster non-CSG mesh transforms (translate, rotate, etc.).

Something to play with?

Andrew.

> On Nov 26, 2015, at 3:51 PM, doug moen <doug at moens.org> wrote:
> 
> This appears to use CGAL and Cork to implement boolean operations.
> https://github.com/gilbo/cork <https://github.com/gilbo/cork>
> 
> They mention that Cork is available as an alternative: it is faster, but not always robust.
> 
> On 26 November 2015 at 15:38, clothbot <andrew at plumb.org <mailto:andrew at plumb.org>> wrote:
> Hey Everyone,
> 
> Has anyone looked into using libigl as a (partial) CGAL replacement for 3D
> boolean op's and mesh manipulations?
> 
> http://libigl.github.io/libigl/ <http://libigl.github.io/libigl/>
> 
> https://github.com/libigl/libigl <https://github.com/libigl/libigl>
> 
> http://www.alecjacobson.com/weblog/?tag=libigl <http://www.alecjacobson.com/weblog/?tag=libigl>
> 
> Looks to be quite powerful!
> 
> Andrew.
> 
> 
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/libigl-anyone-poked-at-it-for-CGAL-partial-replacement-tp14769.html <http://forum.openscad.org/libigl-anyone-poked-at-it-for-CGAL-partial-replacement-tp14769.html>
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org <http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org>
> 
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

--

"The future is already here.  It's just not very evenly distributed" -- William Gibson

Me: http://clothbot.com/wiki/ <http://clothbot.com/wiki/>



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151126/7791194e/attachment.html>

From rudolf at parkinbot.com  Thu Nov 26 17:56:43 2015
From: rudolf at parkinbot.com (Parkinbot)
Date: Thu, 26 Nov 2015 15:56:43 -0700 (MST)
Subject: [OpenSCAD] Rotate Spoke try 2
In-Reply-To: <1448571200657-14771.post@n5.nabble.com>
References: <1448424860960-14747.post@n5.nabble.com>
	<1448542984820-14759.post@n5.nabble.com>
	<1448571200657-14771.post@n5.nabble.com>
Message-ID: <1448578603764-14776.post@n5.nabble.com>

vIQleS wrote
> I'll have a look at the rest of that and see if i can figure anything out.
> Will it work with cylinder?

What a question. Why don't you just type it in and see what happens. (Of
course it will.)




--
View this message in context: http://forum.openscad.org/Rotate-Spoke-try-2-tp14747p14776.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Thu Nov 26 18:25:08 2015
From: rudolf at parkinbot.com (Parkinbot)
Date: Thu, 26 Nov 2015 16:25:08 -0700 (MST)
Subject: [OpenSCAD] general extrusion (imperfect)
In-Reply-To: <1448560177817-14765.post@n5.nabble.com>
References: <1448368607908-14740.post@n5.nabble.com>
	<1448465452390-14752.post@n5.nabble.com>
	<1448542009170-14758.post@n5.nabble.com>
	<1448554589391-14763.post@n5.nabble.com>
	<1448560177817-14765.post@n5.nabble.com>
Message-ID: <1448580308468-14777.post@n5.nabble.com>

vicnet wrote
> I not sure to understand integral...

A line integral is a measure for the length of a line (in our case the
polygon defined by the base points). You can use the natural Euclidian norm,
called 2-norm, (you say later, you do this), but there are also other
choices with calculation schemes.


vicnet wrote
> 
> Parkinbot wrote
>> 3. How do you automatically choose your control points? I guess there is
>> some freedom ?  
> For each point, take vector from point before to after and apply a weight
> to get control point before and after.

I understand. How do calc the weight? Or is it always the same weight, say
1.1, which may be parametrized?


vicnet wrote
> 
> Parkinbot wrote
>> Hmm, we might combine our libraries and offer the functions through a
>> "common interface", like: 

> 
> Why not !

I'll put a note here with a link to the thing, as soon as I've published it! 

@Neon22 
You said you'd prefer B-splines over beziers. They are a good choice to
flatten a polygon, but don't contain the polygon points. Will you implement
them? Then we might reserve you some space in the lib 

 Rudolf



--
View this message in context: http://forum.openscad.org/general-extrusion-imperfect-tp14740p14777.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Thu Nov 26 18:39:48 2015
From: doug at moens.org (doug moen)
Date: Thu, 26 Nov 2015 18:39:48 -0500
Subject: [OpenSCAD] libigl: anyone poked at it for CGAL (partial)
	replacement?
In-Reply-To: <3ACC64E9-3A84-47DA-A5FB-637D5944B6FB@plumb.org>
References: <1448570318134-14769.post@n5.nabble.com>
	<CAGV6i+N3fq_TpacBKwdO3yDjUc0sS8TnkFfQT2c63_efh8OoAw@mail.gmail.com>
	<3ACC64E9-3A84-47DA-A5FB-637D5944B6FB@plumb.org>
Message-ID: <CAGV6i+O2+xYwrJcq-sip3z1nsL8Z8b28c7UqxUQBb1s+-iKFVA@mail.gmail.com>

Yes, but the "Eigen data constructs" (I don't understand this yet) use
floating point representation, and the conversion from CGAL to native
representation can result in an invalid mesh. This is mentioned in the
tutorial. Therefore, I don't see how we can use this: it's not robust.

What I think we want is a robust CSG geometry engine that works with
floating point meshes. This is extremely difficult to program correctly,
because you have to repair damage to the mesh caused by transformations,
deal with floating point instability, and so on, and there are a lot of
tricky edge cases. I'd be looking for a well-exercised engine with about 20
years worth of development and maintenance, and definitely not a
single-person project with only a year or two of work done.

On 26 November 2015 at 17:43, Andrew Plumb <andrew at plumb.org> wrote:

> Ah, so it does:
>
> https://github.com/libigl/libigl/blob/master/tutorial/609_Boolean/main.cpp
>
>
> https://github.com/libigl/libigl/blob/master/include/igl/copyleft/boolean/mesh_boolean.cpp
>
> On the plus side, looks like the meshes going into the operations and
> coming out are Eigen data constructs, so it may be easier to parallelize
> the operations and faster non-CSG mesh transforms (translate, rotate, etc.).
>
> Something to play with?
>
> Andrew.
>
> On Nov 26, 2015, at 3:51 PM, doug moen <doug at moens.org> wrote:
>
> This appears to use CGAL and Cork to implement boolean operations.
> https://github.com/gilbo/cork
>
> They mention that Cork is available as an alternative: it is faster, but
> not always robust.
>
> On 26 November 2015 at 15:38, clothbot <andrew at plumb.org> wrote:
>
>> Hey Everyone,
>>
>> Has anyone looked into using libigl as a (partial) CGAL replacement for 3D
>> boolean op's and mesh manipulations?
>>
>> http://libigl.github.io/libigl/
>>
>> https://github.com/libigl/libigl
>>
>> http://www.alecjacobson.com/weblog/?tag=libigl
>>
>> Looks to be quite powerful!
>>
>> Andrew.
>>
>>
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/libigl-anyone-poked-at-it-for-CGAL-partial-replacement-tp14769.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com
>> <http://nabble.com>.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> --
>
> "The future is already here.  It's just not very evenly distributed" --
> William Gibson
>
> Me: http://clothbot.com/wiki/
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151126/e910cd21/attachment-0001.html>

From oz.at.michael at gmail.com  Thu Nov 26 21:51:38 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 26 Nov 2015 19:51:38 -0700 (MST)
Subject: [OpenSCAD] Rotate Spoke try 2
In-Reply-To: <1448578603764-14776.post@n5.nabble.com>
References: <1448424860960-14747.post@n5.nabble.com>
	<1448542984820-14759.post@n5.nabble.com>
	<1448571200657-14771.post@n5.nabble.com>
	<1448578603764-14776.post@n5.nabble.com>
Message-ID: <1448592698845-14779.post@n5.nabble.com>

Parkinbot wrote
> in 2D you might be looking for this, e.g. a 7-gon:
> 
> circle(100, $fn=7);   <== *

* note that unfortunately using More/Raw-text gets dropped when it goes thru
the mailing list. Prob don't want to use that.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Rotate-Spoke-try-2-tp14747p14779.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From tim.thawkins at gmail.com  Thu Nov 26 22:16:51 2015
From: tim.thawkins at gmail.com (Tim Hawkins)
Date: Fri, 27 Nov 2015 03:16:51 +0000
Subject: [OpenSCAD] libigl: anyone poked at it for CGAL (partial)
	replacement?
In-Reply-To: <CAGV6i+O2+xYwrJcq-sip3z1nsL8Z8b28c7UqxUQBb1s+-iKFVA@mail.gmail.com>
References: <1448570318134-14769.post@n5.nabble.com>
	<CAGV6i+N3fq_TpacBKwdO3yDjUc0sS8TnkFfQT2c63_efh8OoAw@mail.gmail.com>
	<3ACC64E9-3A84-47DA-A5FB-637D5944B6FB@plumb.org>
	<CAGV6i+O2+xYwrJcq-sip3z1nsL8Z8b28c7UqxUQBb1s+-iKFVA@mail.gmail.com>
Message-ID: <CAEbsasRGGoK7N89Q9RXGWjCTeSGPBv=gTXombfAYx_HPbyNcBA@mail.gmail.com>

http://www.openvdb.org

This may not be what you are looking for but its worth considering.

It is a voxel based csg tree system with mesh import and export. You create
shapes as voxel grids and then it can perform csg operations on them, it
uses a sparse storage mechanism so its effectivly only storing the surface
voxels amd thier relationships.

On Fri, Nov 27, 2015, 07:40 doug moen <doug at moens.org> wrote:

> Yes, but the "Eigen data constructs" (I don't understand this yet) use
> floating point representation, and the conversion from CGAL to native
> representation can result in an invalid mesh. This is mentioned in the
> tutorial. Therefore, I don't see how we can use this: it's not robust.
>
> What I think we want is a robust CSG geometry engine that works with
> floating point meshes. This is extremely difficult to program correctly,
> because you have to repair damage to the mesh caused by transformations,
> deal with floating point instability, and so on, and there are a lot of
> tricky edge cases. I'd be looking for a well-exercised engine with about 20
> years worth of development and maintenance, and definitely not a
> single-person project with only a year or two of work done.
>
> On 26 November 2015 at 17:43, Andrew Plumb <andrew at plumb.org> wrote:
>
>> Ah, so it does:
>>
>> https://github.com/libigl/libigl/blob/master/tutorial/609_Boolean/main.cpp
>>
>>
>> https://github.com/libigl/libigl/blob/master/include/igl/copyleft/boolean/mesh_boolean.cpp
>>
>> On the plus side, looks like the meshes going into the operations and
>> coming out are Eigen data constructs, so it may be easier to parallelize
>> the operations and faster non-CSG mesh transforms (translate, rotate, etc.).
>>
>> Something to play with?
>>
>> Andrew.
>>
>> On Nov 26, 2015, at 3:51 PM, doug moen <doug at moens.org> wrote:
>>
>> This appears to use CGAL and Cork to implement boolean operations.
>> https://github.com/gilbo/cork
>>
>> They mention that Cork is available as an alternative: it is faster, but
>> not always robust.
>>
>> On 26 November 2015 at 15:38, clothbot <andrew at plumb.org> wrote:
>>
>>> Hey Everyone,
>>>
>>> Has anyone looked into using libigl as a (partial) CGAL replacement for
>>> 3D
>>> boolean op's and mesh manipulations?
>>>
>>> http://libigl.github.io/libigl/
>>>
>>> https://github.com/libigl/libigl
>>>
>>> http://www.alecjacobson.com/weblog/?tag=libigl
>>>
>>> Looks to be quite powerful!
>>>
>>> Andrew.
>>>
>>>
>>>
>>>
>>>
>>> --
>>> View this message in context:
>>> http://forum.openscad.org/libigl-anyone-poked-at-it-for-CGAL-partial-replacement-tp14769.html
>>> Sent from the OpenSCAD mailing list archive at Nabble.com
>>> <http://nabble.com>.
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>> --
>>
>> "The future is already here.  It's just not very evenly distributed" --
>> William Gibson
>>
>> Me: http://clothbot.com/wiki/
>>
>>
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151127/c457465d/attachment.html>

From nathan at lx1.co.nz  Thu Nov 26 23:02:38 2015
From: nathan at lx1.co.nz (vIQleS)
Date: Thu, 26 Nov 2015 21:02:38 -0700 (MST)
Subject: [OpenSCAD] Rotate Spoke try 2
In-Reply-To: <1448592698845-14779.post@n5.nabble.com>
References: <1448424860960-14747.post@n5.nabble.com>
	<1448542984820-14759.post@n5.nabble.com>
	<1448571200657-14771.post@n5.nabble.com>
	<1448578603764-14776.post@n5.nabble.com>
	<1448592698845-14779.post@n5.nabble.com>
Message-ID: <1448596958595-14781.post@n5.nabble.com>

OK - I figured the polygon thing out thanks to the clues. I've now learned
linear_extrude. Yay!

Now the last (hopefully) thing is the fudge factor.

I want to automatically rotate the 3D n-agon so that the corners line up
with the arms. The code below is right.

I haven't been able to figure out a ratio that works for every possible
n-agon. Is there?

--=code=--

NoArm=7; //how many 'spokes'
ArmWide=3; //width of each spoke
ArmHigh=3; //height of each spoke
ArmLong=80; //length of each spoke - from centre

fudge=5.56; //to align the indent. between 1 and 6. adjust until 'v' shows
up on each arm

Deep=1; //depth of indent
InsetRad=45; //radius of indent

Circ=0; //size of circle in middle. zero for no circle, Advised if hole or
slot

Hole=0; //size of hole in middle. zero for no hole. 

SlotWide=0; //slot instead of hole. zero either to not slot. no slot if
circ>0
SlotDeep=2;

DGrees=360/NoArm; 

//polygon cylinder stuff
p = [for (k=[0:NoArm-1]) let (angle=360/NoArm*k)
       [cos(angle), sin(angle)]
    ]; 


difference()
{
    union()
    {
        for (i=[0:NoArm-1])
        {
//arm
            rotate([0,0,DGrees*i]) 
                translate([-ArmWide/2,0,0]) 
                    cube([ArmWide,ArmLong,ArmHigh]);
        }
//circle in middle
    if(Circ>0)
        cylinder(ArmHigh-Deep,Circ,Circ);
    }

//indent
    rotate([0,0,NoArm*fudge])  //THIS BIT
        translate([0,0,ArmHigh-Deep]) 
            linear_extrude(height = Deep+1+ArmHigh, center = false,
convexity = 10, twist = 0)
                polygon(points = p*InsetRad); 

    if(Hole>0) //hole in middle
    {
        translate([0,0,-ArmHigh])
            cylinder(ArmHigh*2,Hole,Hole);
    }
    else if(SlotWide>0&&SlotDeep>0) //slot 
    {
        cube([SlotWide,SlotDeep,ArmHigh*2],center=true);
    }
    
}




--
View this message in context: http://forum.openscad.org/Rotate-Spoke-try-2-tp14747p14781.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrew at plumb.org  Thu Nov 26 23:05:47 2015
From: andrew at plumb.org (Andrew Plumb)
Date: Thu, 26 Nov 2015 23:05:47 -0500
Subject: [OpenSCAD] libigl: anyone poked at it for CGAL (partial)
	replacement?
In-Reply-To: <CAEbsasRGGoK7N89Q9RXGWjCTeSGPBv=gTXombfAYx_HPbyNcBA@mail.gmail.com>
References: <1448570318134-14769.post@n5.nabble.com>
	<CAGV6i+N3fq_TpacBKwdO3yDjUc0sS8TnkFfQT2c63_efh8OoAw@mail.gmail.com>
	<3ACC64E9-3A84-47DA-A5FB-637D5944B6FB@plumb.org>
	<CAGV6i+O2+xYwrJcq-sip3z1nsL8Z8b28c7UqxUQBb1s+-iKFVA@mail.gmail.com>
	<CAEbsasRGGoK7N89Q9RXGWjCTeSGPBv=gTXombfAYx_HPbyNcBA@mail.gmail.com>
Message-ID: <98ED8729-6672-4075-B581-9E4158B84784@plumb.org>

Ooooh! Very interesting!

http://www.openvdb.org/download/ <http://www.openvdb.org/download/>

https://github.com/dreamworksanimation/openvdb <https://github.com/dreamworksanimation/openvdb>

Even has python hooks:  https://github.com/dreamworksanimation/openvdb/tree/master/openvdb/python <https://github.com/dreamworksanimation/openvdb/tree/master/openvdb/python>

Definitely going to be exploring that for a bit!

Andrew.


> On Nov 26, 2015, at 10:16 PM, Tim Hawkins <tim.thawkins at gmail.com> wrote:
> 
> http://www.openvdb.org <http://www.openvdb.org/>
> This may not be what you are looking for but its worth considering.
> 
> It is a voxel based csg tree system with mesh import and export. You create shapes as voxel grids and then it can perform csg operations on them, it uses a sparse storage mechanism so its effectivly only storing the surface voxels amd thier relationships. 
> 
> On Fri, Nov 27, 2015, 07:40 doug moen <doug at moens.org <mailto:doug at moens.org>> wrote:
> Yes, but the "Eigen data constructs" (I don't understand this yet) use floating point representation, and the conversion from CGAL to native representation can result in an invalid mesh. This is mentioned in the tutorial. Therefore, I don't see how we can use this: it's not robust.
> 
> What I think we want is a robust CSG geometry engine that works with floating point meshes. This is extremely difficult to program correctly, because you have to repair damage to the mesh caused by transformations, deal with floating point instability, and so on, and there are a lot of tricky edge cases. I'd be looking for a well-exercised engine with about 20 years worth of development and maintenance, and definitely not a single-person project with only a year or two of work done.
> 
> On 26 November 2015 at 17:43, Andrew Plumb <andrew at plumb.org <mailto:andrew at plumb.org>> wrote:
> Ah, so it does:
> 
> https://github.com/libigl/libigl/blob/master/tutorial/609_Boolean/main.cpp <https://github.com/libigl/libigl/blob/master/tutorial/609_Boolean/main.cpp>
> 
> https://github.com/libigl/libigl/blob/master/include/igl/copyleft/boolean/mesh_boolean.cpp <https://github.com/libigl/libigl/blob/master/include/igl/copyleft/boolean/mesh_boolean.cpp>
> 
> On the plus side, looks like the meshes going into the operations and coming out are Eigen data constructs, so it may be easier to parallelize the operations and faster non-CSG mesh transforms (translate, rotate, etc.).
> 
> Something to play with?
> 
> Andrew.
> 
>> On Nov 26, 2015, at 3:51 PM, doug moen <doug at moens.org <mailto:doug at moens.org>> wrote:
>> 
>> This appears to use CGAL and Cork to implement boolean operations.
>> https://github.com/gilbo/cork <https://github.com/gilbo/cork>
>> 
>> They mention that Cork is available as an alternative: it is faster, but not always robust.
>> 
>> On 26 November 2015 at 15:38, clothbot <andrew at plumb.org <mailto:andrew at plumb.org>> wrote:
>> Hey Everyone,
>> 
>> Has anyone looked into using libigl as a (partial) CGAL replacement for 3D
>> boolean op's and mesh manipulations?
>> 
>> http://libigl.github.io/libigl/ <http://libigl.github.io/libigl/>
>> 
>> https://github.com/libigl/libigl <https://github.com/libigl/libigl>
>> 
>> http://www.alecjacobson.com/weblog/?tag=libigl <http://www.alecjacobson.com/weblog/?tag=libigl>
>> 
>> Looks to be quite powerful!
>> 
>> Andrew.
>> 
>> 
>> 
>> 
>> 
>> --
>> View this message in context: http://forum.openscad.org/libigl-anyone-poked-at-it-for-CGAL-partial-replacement-tp14769.html <http://forum.openscad.org/libigl-anyone-poked-at-it-for-CGAL-partial-replacement-tp14769.html>
>> Sent from the OpenSCAD mailing list archive at Nabble.com <http://nabble.com/>.
>> 
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org <http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org>
>> 
>> 
>> 
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org <http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org>
> 
> --
> 
> "The future is already here.  It's just not very evenly distributed" -- William Gibson
> 
> Me: http://clothbot.com/wiki/ <http://clothbot.com/wiki/>
> 
> 
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org <http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org>
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org <http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

--

"The future is already here.  It's just not very evenly distributed" -- William Gibson

Me: http://clothbot.com/wiki/ <http://clothbot.com/wiki/>



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151126/f8d7f0ef/attachment-0001.html>

From doug at moens.org  Thu Nov 26 23:28:38 2015
From: doug at moens.org (doug moen)
Date: Thu, 26 Nov 2015 23:28:38 -0500
Subject: [OpenSCAD] libigl: anyone poked at it for CGAL (partial)
	replacement?
In-Reply-To: <CAEbsasRGGoK7N89Q9RXGWjCTeSGPBv=gTXombfAYx_HPbyNcBA@mail.gmail.com>
References: <1448570318134-14769.post@n5.nabble.com>
	<CAGV6i+N3fq_TpacBKwdO3yDjUc0sS8TnkFfQT2c63_efh8OoAw@mail.gmail.com>
	<3ACC64E9-3A84-47DA-A5FB-637D5944B6FB@plumb.org>
	<CAGV6i+O2+xYwrJcq-sip3z1nsL8Z8b28c7UqxUQBb1s+-iKFVA@mail.gmail.com>
	<CAEbsasRGGoK7N89Q9RXGWjCTeSGPBv=gTXombfAYx_HPbyNcBA@mail.gmail.com>
Message-ID: <CAGV6i+PRCz7nYYScWY8OB=pep2DfXjMoRM_evYC-hM8fX4KPMQ@mail.gmail.com>

It looks interesting.

It does have CSG operations. While reading about voxel based systems, I
found a claim that CSG is slow on voxel systems, compared to mesh systems,
and I found a forum post complaining about the speed of CSG operations in
OpenVDB. So this might not solve our speed problems with CGAL.

I didn't find any operations for convex hull or minkowski sum. It's not
obvious how you implement these without converting to a mesh first, which I
bet is slow.

It is described as a visual effects library, and the home page demos
effects like clouds, fog, dust clouds, particle based fluid simulations. If
this is the focus, then I'm not sure it will be efficient for our use
cases. We could try it and do some performance measurements.

I wonder what kind of 3D modelling operations are enabled by a voxel
engine, stuff that's difficult with our current mesh engine?

On 26 November 2015 at 22:16, Tim Hawkins <tim.thawkins at gmail.com> wrote:

> http://www.openvdb.org
>
> This may not be what you are looking for but its worth considering.
>
> It is a voxel based csg tree system with mesh import and export. You
> create shapes as voxel grids and then it can perform csg operations on
> them, it uses a sparse storage mechanism so its effectivly only storing the
> surface voxels amd thier relationships.
>
> On Fri, Nov 27, 2015, 07:40 doug moen <doug at moens.org> wrote:
>
>> Yes, but the "Eigen data constructs" (I don't understand this yet) use
>> floating point representation, and the conversion from CGAL to native
>> representation can result in an invalid mesh. This is mentioned in the
>> tutorial. Therefore, I don't see how we can use this: it's not robust.
>>
>> What I think we want is a robust CSG geometry engine that works with
>> floating point meshes. This is extremely difficult to program correctly,
>> because you have to repair damage to the mesh caused by transformations,
>> deal with floating point instability, and so on, and there are a lot of
>> tricky edge cases. I'd be looking for a well-exercised engine with about 20
>> years worth of development and maintenance, and definitely not a
>> single-person project with only a year or two of work done.
>>
>> On 26 November 2015 at 17:43, Andrew Plumb <andrew at plumb.org> wrote:
>>
>>> Ah, so it does:
>>>
>>>
>>> https://github.com/libigl/libigl/blob/master/tutorial/609_Boolean/main.cpp
>>>
>>>
>>> https://github.com/libigl/libigl/blob/master/include/igl/copyleft/boolean/mesh_boolean.cpp
>>>
>>> On the plus side, looks like the meshes going into the operations and
>>> coming out are Eigen data constructs, so it may be easier to parallelize
>>> the operations and faster non-CSG mesh transforms (translate, rotate, etc.).
>>>
>>> Something to play with?
>>>
>>> Andrew.
>>>
>>> On Nov 26, 2015, at 3:51 PM, doug moen <doug at moens.org> wrote:
>>>
>>> This appears to use CGAL and Cork to implement boolean operations.
>>> https://github.com/gilbo/cork
>>>
>>> They mention that Cork is available as an alternative: it is faster, but
>>> not always robust.
>>>
>>> On 26 November 2015 at 15:38, clothbot <andrew at plumb.org> wrote:
>>>
>>>> Hey Everyone,
>>>>
>>>> Has anyone looked into using libigl as a (partial) CGAL replacement for
>>>> 3D
>>>> boolean op's and mesh manipulations?
>>>>
>>>> http://libigl.github.io/libigl/
>>>>
>>>> https://github.com/libigl/libigl
>>>>
>>>> http://www.alecjacobson.com/weblog/?tag=libigl
>>>>
>>>> Looks to be quite powerful!
>>>>
>>>> Andrew.
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> --
>>>> View this message in context:
>>>> http://forum.openscad.org/libigl-anyone-poked-at-it-for-CGAL-partial-replacement-tp14769.html
>>>> Sent from the OpenSCAD mailing list archive at Nabble.com
>>>> <http://nabble.com>.
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>>
>>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>> --
>>>
>>> "The future is already here.  It's just not very evenly distributed" --
>>> William Gibson
>>>
>>> Me: http://clothbot.com/wiki/
>>>
>>>
>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151126/f8b89983/attachment.html>

From tim.thawkins at gmail.com  Thu Nov 26 23:40:46 2015
From: tim.thawkins at gmail.com (Tim Hawkins)
Date: Fri, 27 Nov 2015 04:40:46 +0000
Subject: [OpenSCAD] libigl: anyone poked at it for CGAL (partial)
	replacement?
In-Reply-To: <CAGV6i+PRCz7nYYScWY8OB=pep2DfXjMoRM_evYC-hM8fX4KPMQ@mail.gmail.com>
References: <1448570318134-14769.post@n5.nabble.com>
	<CAGV6i+N3fq_TpacBKwdO3yDjUc0sS8TnkFfQT2c63_efh8OoAw@mail.gmail.com>
	<3ACC64E9-3A84-47DA-A5FB-637D5944B6FB@plumb.org>
	<CAGV6i+O2+xYwrJcq-sip3z1nsL8Z8b28c7UqxUQBb1s+-iKFVA@mail.gmail.com>
	<CAEbsasRGGoK7N89Q9RXGWjCTeSGPBv=gTXombfAYx_HPbyNcBA@mail.gmail.com>
	<CAGV6i+PRCz7nYYScWY8OB=pep2DfXjMoRM_evYC-hM8fX4KPMQ@mail.gmail.com>
Message-ID: <CAEbsasQ4DxeDJe1nq_5nNSsk5wVb56WCJDQerHf6g6bu+0dZPg@mail.gmail.com>

It does claim to be multithreaded, which i can belive as voxel operations
are easy to partition, i dont claim to have any expertice in this, my
graphics abilities are limited to 2d, i used to write postscript
rasterisation engines, which render down to a trapezoid list which is easy
to slice and hand out to different threads for operations like colour
correction and halftoning.

Given it does work on a different set of principles there will be
operations that are missing or sub optimimal, like wise there will be
aspects that are faster and open up new capabilities, its just a case of
determining what the tradeoffs are.

On Fri, Nov 27, 2015, 12:29 doug moen <doug at moens.org> wrote:

> It looks interesting.
>
> It does have CSG operations. While reading about voxel based systems, I
> found a claim that CSG is slow on voxel systems, compared to mesh systems,
> and I found a forum post complaining about the speed of CSG operations in
> OpenVDB. So this might not solve our speed problems with CGAL.
>
> I didn't find any operations for convex hull or minkowski sum. It's not
> obvious how you implement these without converting to a mesh first, which I
> bet is slow.
>
> It is described as a visual effects library, and the home page demos
> effects like clouds, fog, dust clouds, particle based fluid simulations. If
> this is the focus, then I'm not sure it will be efficient for our use
> cases. We could try it and do some performance measurements.
>
> I wonder what kind of 3D modelling operations are enabled by a voxel
> engine, stuff that's difficult with our current mesh engine?
>
> On 26 November 2015 at 22:16, Tim Hawkins <tim.thawkins at gmail.com> wrote:
>
>> http://www.openvdb.org
>>
>> This may not be what you are looking for but its worth considering.
>>
>> It is a voxel based csg tree system with mesh import and export. You
>> create shapes as voxel grids and then it can perform csg operations on
>> them, it uses a sparse storage mechanism so its effectivly only storing the
>> surface voxels amd thier relationships.
>>
>> On Fri, Nov 27, 2015, 07:40 doug moen <doug at moens.org> wrote:
>>
>>> Yes, but the "Eigen data constructs" (I don't understand this yet) use
>>> floating point representation, and the conversion from CGAL to native
>>> representation can result in an invalid mesh. This is mentioned in the
>>> tutorial. Therefore, I don't see how we can use this: it's not robust.
>>>
>>> What I think we want is a robust CSG geometry engine that works with
>>> floating point meshes. This is extremely difficult to program correctly,
>>> because you have to repair damage to the mesh caused by transformations,
>>> deal with floating point instability, and so on, and there are a lot of
>>> tricky edge cases. I'd be looking for a well-exercised engine with about 20
>>> years worth of development and maintenance, and definitely not a
>>> single-person project with only a year or two of work done.
>>>
>>> On 26 November 2015 at 17:43, Andrew Plumb <andrew at plumb.org> wrote:
>>>
>>>> Ah, so it does:
>>>>
>>>>
>>>> https://github.com/libigl/libigl/blob/master/tutorial/609_Boolean/main.cpp
>>>>
>>>>
>>>> https://github.com/libigl/libigl/blob/master/include/igl/copyleft/boolean/mesh_boolean.cpp
>>>>
>>>> On the plus side, looks like the meshes going into the operations and
>>>> coming out are Eigen data constructs, so it may be easier to parallelize
>>>> the operations and faster non-CSG mesh transforms (translate, rotate, etc.).
>>>>
>>>> Something to play with?
>>>>
>>>> Andrew.
>>>>
>>>> On Nov 26, 2015, at 3:51 PM, doug moen <doug at moens.org> wrote:
>>>>
>>>> This appears to use CGAL and Cork to implement boolean operations.
>>>> https://github.com/gilbo/cork
>>>>
>>>> They mention that Cork is available as an alternative: it is faster,
>>>> but not always robust.
>>>>
>>>> On 26 November 2015 at 15:38, clothbot <andrew at plumb.org> wrote:
>>>>
>>>>> Hey Everyone,
>>>>>
>>>>> Has anyone looked into using libigl as a (partial) CGAL replacement
>>>>> for 3D
>>>>> boolean op's and mesh manipulations?
>>>>>
>>>>> http://libigl.github.io/libigl/
>>>>>
>>>>> https://github.com/libigl/libigl
>>>>>
>>>>> http://www.alecjacobson.com/weblog/?tag=libigl
>>>>>
>>>>> Looks to be quite powerful!
>>>>>
>>>>> Andrew.
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> --
>>>>> View this message in context:
>>>>> http://forum.openscad.org/libigl-anyone-poked-at-it-for-CGAL-partial-replacement-tp14769.html
>>>>> Sent from the OpenSCAD mailing list archive at Nabble.com
>>>>> <http://nabble.com>.
>>>>>
>>>>> _______________________________________________
>>>>> OpenSCAD mailing list
>>>>> Discuss at lists.openscad.org
>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>
>>>>>
>>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>>
>>>> --
>>>>
>>>> "The future is already here.  It's just not very evenly distributed" --
>>>> William Gibson
>>>>
>>>> Me: http://clothbot.com/wiki/
>>>>
>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151127/1237c41b/attachment-0001.html>

From tim.thawkins at gmail.com  Thu Nov 26 23:42:08 2015
From: tim.thawkins at gmail.com (Tim Hawkins)
Date: Fri, 27 Nov 2015 04:42:08 +0000
Subject: [OpenSCAD] libigl: anyone poked at it for CGAL (partial)
	replacement?
In-Reply-To: <CAGV6i+PRCz7nYYScWY8OB=pep2DfXjMoRM_evYC-hM8fX4KPMQ@mail.gmail.com>
References: <1448570318134-14769.post@n5.nabble.com>
	<CAGV6i+N3fq_TpacBKwdO3yDjUc0sS8TnkFfQT2c63_efh8OoAw@mail.gmail.com>
	<3ACC64E9-3A84-47DA-A5FB-637D5944B6FB@plumb.org>
	<CAGV6i+O2+xYwrJcq-sip3z1nsL8Z8b28c7UqxUQBb1s+-iKFVA@mail.gmail.com>
	<CAEbsasRGGoK7N89Q9RXGWjCTeSGPBv=gTXombfAYx_HPbyNcBA@mail.gmail.com>
	<CAGV6i+PRCz7nYYScWY8OB=pep2DfXjMoRM_evYC-hM8fX4KPMQ@mail.gmail.com>
Message-ID: <CAEbsasSs46dM6RCojC+YSFk2a5-1SeVucgzMezZjcuUxGFdBSA@mail.gmail.com>

Also you need to decide if the license is acceptable, it uses the Mozia
Public License, which is a mashup of the BSD License and the GPL V2
License.

On Fri, Nov 27, 2015, 12:29 doug moen <doug at moens.org> wrote:

> It looks interesting.
>
> It does have CSG operations. While reading about voxel based systems, I
> found a claim that CSG is slow on voxel systems, compared to mesh systems,
> and I found a forum post complaining about the speed of CSG operations in
> OpenVDB. So this might not solve our speed problems with CGAL.
>
> I didn't find any operations for convex hull or minkowski sum. It's not
> obvious how you implement these without converting to a mesh first, which I
> bet is slow.
>
> It is described as a visual effects library, and the home page demos
> effects like clouds, fog, dust clouds, particle based fluid simulations. If
> this is the focus, then I'm not sure it will be efficient for our use
> cases. We could try it and do some performance measurements.
>
> I wonder what kind of 3D modelling operations are enabled by a voxel
> engine, stuff that's difficult with our current mesh engine?
>
> On 26 November 2015 at 22:16, Tim Hawkins <tim.thawkins at gmail.com> wrote:
>
>> http://www.openvdb.org
>>
>> This may not be what you are looking for but its worth considering.
>>
>> It is a voxel based csg tree system with mesh import and export. You
>> create shapes as voxel grids and then it can perform csg operations on
>> them, it uses a sparse storage mechanism so its effectivly only storing the
>> surface voxels amd thier relationships.
>>
>> On Fri, Nov 27, 2015, 07:40 doug moen <doug at moens.org> wrote:
>>
>>> Yes, but the "Eigen data constructs" (I don't understand this yet) use
>>> floating point representation, and the conversion from CGAL to native
>>> representation can result in an invalid mesh. This is mentioned in the
>>> tutorial. Therefore, I don't see how we can use this: it's not robust.
>>>
>>> What I think we want is a robust CSG geometry engine that works with
>>> floating point meshes. This is extremely difficult to program correctly,
>>> because you have to repair damage to the mesh caused by transformations,
>>> deal with floating point instability, and so on, and there are a lot of
>>> tricky edge cases. I'd be looking for a well-exercised engine with about 20
>>> years worth of development and maintenance, and definitely not a
>>> single-person project with only a year or two of work done.
>>>
>>> On 26 November 2015 at 17:43, Andrew Plumb <andrew at plumb.org> wrote:
>>>
>>>> Ah, so it does:
>>>>
>>>>
>>>> https://github.com/libigl/libigl/blob/master/tutorial/609_Boolean/main.cpp
>>>>
>>>>
>>>> https://github.com/libigl/libigl/blob/master/include/igl/copyleft/boolean/mesh_boolean.cpp
>>>>
>>>> On the plus side, looks like the meshes going into the operations and
>>>> coming out are Eigen data constructs, so it may be easier to parallelize
>>>> the operations and faster non-CSG mesh transforms (translate, rotate, etc.).
>>>>
>>>> Something to play with?
>>>>
>>>> Andrew.
>>>>
>>>> On Nov 26, 2015, at 3:51 PM, doug moen <doug at moens.org> wrote:
>>>>
>>>> This appears to use CGAL and Cork to implement boolean operations.
>>>> https://github.com/gilbo/cork
>>>>
>>>> They mention that Cork is available as an alternative: it is faster,
>>>> but not always robust.
>>>>
>>>> On 26 November 2015 at 15:38, clothbot <andrew at plumb.org> wrote:
>>>>
>>>>> Hey Everyone,
>>>>>
>>>>> Has anyone looked into using libigl as a (partial) CGAL replacement
>>>>> for 3D
>>>>> boolean op's and mesh manipulations?
>>>>>
>>>>> http://libigl.github.io/libigl/
>>>>>
>>>>> https://github.com/libigl/libigl
>>>>>
>>>>> http://www.alecjacobson.com/weblog/?tag=libigl
>>>>>
>>>>> Looks to be quite powerful!
>>>>>
>>>>> Andrew.
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> --
>>>>> View this message in context:
>>>>> http://forum.openscad.org/libigl-anyone-poked-at-it-for-CGAL-partial-replacement-tp14769.html
>>>>> Sent from the OpenSCAD mailing list archive at Nabble.com
>>>>> <http://nabble.com>.
>>>>>
>>>>> _______________________________________________
>>>>> OpenSCAD mailing list
>>>>> Discuss at lists.openscad.org
>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>
>>>>>
>>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>>
>>>> --
>>>>
>>>> "The future is already here.  It's just not very evenly distributed" --
>>>> William Gibson
>>>>
>>>> Me: http://clothbot.com/wiki/
>>>>
>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151127/8b69c621/attachment.html>

From vo.publique at gmail.com  Fri Nov 27 01:47:28 2015
From: vo.publique at gmail.com (vicnet)
Date: Thu, 26 Nov 2015 23:47:28 -0700 (MST)
Subject: [OpenSCAD] general extrusion (imperfect)
In-Reply-To: <1448580308468-14777.post@n5.nabble.com>
References: <1448368607908-14740.post@n5.nabble.com>
	<1448465452390-14752.post@n5.nabble.com>
	<1448542009170-14758.post@n5.nabble.com>
	<1448554589391-14763.post@n5.nabble.com>
	<1448560177817-14765.post@n5.nabble.com>
	<1448580308468-14777.post@n5.nabble.com>
Message-ID: <1448606848624-14786.post@n5.nabble.com>

Parkinbot wrote
> I understand. How do calc the weight? Or is it always the same weight, say
> 1.1, which may be parametrized?

It is a parameter.

a+
Vicnet
https://github.com/vicnet/vcad



--
View this message in context: http://forum.openscad.org/general-extrusion-imperfect-tp14740p14786.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Fri Nov 27 04:26:06 2015
From: mschafer at wireframe.biz (Neon22)
Date: Fri, 27 Nov 2015 02:26:06 -0700 (MST)
Subject: [OpenSCAD] general extrusion (imperfect)
In-Reply-To: <1448606848624-14786.post@n5.nabble.com>
References: <1448368607908-14740.post@n5.nabble.com>
	<1448465452390-14752.post@n5.nabble.com>
	<1448542009170-14758.post@n5.nabble.com>
	<1448554589391-14763.post@n5.nabble.com>
	<1448560177817-14765.post@n5.nabble.com>
	<1448580308468-14777.post@n5.nabble.com>
	<1448606848624-14786.post@n5.nabble.com>
Message-ID: <1448616366689-14787.post@n5.nabble.com>

Rudolf,
No sorry but it's beyond me. I can make stuff, I know a couple of things,
but I'm not a mathematician.

Kochanek splines would get my vote as they are well behaved and the curves
go through the knots.
I've used them a lot several years ago(87).
So if implemented using basis function (array) then could have a number of
spline types by changing just the basis array.
- https://en.wikipedia.org/wiki/Kochanek%E2%80%93Bartels_spline
Basis array pseudcode:
- http://cubic.org/docs/hermite.htm

Cheers...



--
View this message in context: http://forum.openscad.org/general-extrusion-imperfect-tp14740p14787.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Fri Nov 27 06:29:29 2015
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 27 Nov 2015 04:29:29 -0700 (MST)
Subject: [OpenSCAD] Rotate Spoke try 2
In-Reply-To: <1448592698845-14779.post@n5.nabble.com>
References: <1448424860960-14747.post@n5.nabble.com>
	<1448542984820-14759.post@n5.nabble.com>
	<1448571200657-14771.post@n5.nabble.com>
	<1448578603764-14776.post@n5.nabble.com>
	<1448592698845-14779.post@n5.nabble.com>
Message-ID: <1448623769967-14788.post@n5.nabble.com>

MichaelAtOz wrote
> 
> Parkinbot wrote
>> in 2D you might be looking for this, e.g. a 7-gon:
>> 
>> circle(100, $fn=7);   <== *
> * note that unfortunately using More/Raw-text gets dropped when it goes
> thru the mailing list. Prob don't want to use that.

In this case I could have done it, because the code is a short liner. But
generally it is not a good idea, as you get line breaks (copy & paste will
not work) and also loose code alignment. So I prefer to follow the link at
the bottom of the mail. 

By the way, I guess the prob is not new, so why has it not been addressed
(or even solved) til now?

- Rudolf



--
View this message in context: http://forum.openscad.org/Rotate-Spoke-try-2-tp14747p14788.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Fri Nov 27 06:44:40 2015
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 27 Nov 2015 04:44:40 -0700 (MST)
Subject: [OpenSCAD] Rotate Spoke try 2
In-Reply-To: <1448596958595-14781.post@n5.nabble.com>
References: <1448424860960-14747.post@n5.nabble.com>
	<1448542984820-14759.post@n5.nabble.com>
	<1448571200657-14771.post@n5.nabble.com>
	<1448578603764-14776.post@n5.nabble.com>
	<1448592698845-14779.post@n5.nabble.com>
	<1448596958595-14781.post@n5.nabble.com>
Message-ID: <1448624680146-14789.post@n5.nabble.com>

vIQleS wrote
> Now the last (hopefully) thing is the fudge factor.
> 
> I want to automatically rotate the 3D n-agon so that the corners line up
> with the arms. The code below is right.
> 
> I haven't been able to figure out a ratio that works for every possible
> n-agon. Is there?

forget about the factor. It's not a factor. It's an angle offset of 90?
between the two objects. So the affected code lines are:



Hint: difference() (and intersection()) sometimes obscures, what's really
happening. My trick is to temporarily comment is out to see, what's going
on. 



--
View this message in context: http://forum.openscad.org/Rotate-Spoke-try-2-tp14747p14789.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Fri Nov 27 08:01:41 2015
From: doug at moens.org (doug moen)
Date: Fri, 27 Nov 2015 08:01:41 -0500
Subject: [OpenSCAD] libigl: anyone poked at it for CGAL (partial)
	replacement?
In-Reply-To: <CAEbsasSs46dM6RCojC+YSFk2a5-1SeVucgzMezZjcuUxGFdBSA@mail.gmail.com>
References: <1448570318134-14769.post@n5.nabble.com>
	<CAGV6i+N3fq_TpacBKwdO3yDjUc0sS8TnkFfQT2c63_efh8OoAw@mail.gmail.com>
	<3ACC64E9-3A84-47DA-A5FB-637D5944B6FB@plumb.org>
	<CAGV6i+O2+xYwrJcq-sip3z1nsL8Z8b28c7UqxUQBb1s+-iKFVA@mail.gmail.com>
	<CAEbsasRGGoK7N89Q9RXGWjCTeSGPBv=gTXombfAYx_HPbyNcBA@mail.gmail.com>
	<CAGV6i+PRCz7nYYScWY8OB=pep2DfXjMoRM_evYC-hM8fX4KPMQ@mail.gmail.com>
	<CAEbsasSs46dM6RCojC+YSFk2a5-1SeVucgzMezZjcuUxGFdBSA@mail.gmail.com>
Message-ID: <CAGV6i+PC_BP0dG9MUhfOow_6VVK3q7TGuJgGYZf7bTUe3_9Ucg@mail.gmail.com>

The license is GPL compatible, I checked that on gnu.org.

On Thursday, 26 November 2015, Tim Hawkins <tim.thawkins at gmail.com> wrote:

> Also you need to decide if the license is acceptable, it uses the Mozia
> Public License, which is a mashup of the BSD License and the GPL V2
> License.
>
> On Fri, Nov 27, 2015, 12:29 doug moen <doug at moens.org
> <javascript:_e(%7B%7D,'cvml','doug at moens.org');>> wrote:
>
>> It looks interesting.
>>
>> It does have CSG operations. While reading about voxel based systems, I
>> found a claim that CSG is slow on voxel systems, compared to mesh systems,
>> and I found a forum post complaining about the speed of CSG operations in
>> OpenVDB. So this might not solve our speed problems with CGAL.
>>
>> I didn't find any operations for convex hull or minkowski sum. It's not
>> obvious how you implement these without converting to a mesh first, which I
>> bet is slow.
>>
>> It is described as a visual effects library, and the home page demos
>> effects like clouds, fog, dust clouds, particle based fluid simulations. If
>> this is the focus, then I'm not sure it will be efficient for our use
>> cases. We could try it and do some performance measurements.
>>
>> I wonder what kind of 3D modelling operations are enabled by a voxel
>> engine, stuff that's difficult with our current mesh engine?
>>
>> On 26 November 2015 at 22:16, Tim Hawkins <tim.thawkins at gmail.com
>> <javascript:_e(%7B%7D,'cvml','tim.thawkins at gmail.com');>> wrote:
>>
>>> http://www.openvdb.org
>>>
>>> This may not be what you are looking for but its worth considering.
>>>
>>> It is a voxel based csg tree system with mesh import and export. You
>>> create shapes as voxel grids and then it can perform csg operations on
>>> them, it uses a sparse storage mechanism so its effectivly only storing the
>>> surface voxels amd thier relationships.
>>>
>>> On Fri, Nov 27, 2015, 07:40 doug moen <doug at moens.org
>>> <javascript:_e(%7B%7D,'cvml','doug at moens.org');>> wrote:
>>>
>>>> Yes, but the "Eigen data constructs" (I don't understand this yet) use
>>>> floating point representation, and the conversion from CGAL to native
>>>> representation can result in an invalid mesh. This is mentioned in the
>>>> tutorial. Therefore, I don't see how we can use this: it's not robust.
>>>>
>>>> What I think we want is a robust CSG geometry engine that works with
>>>> floating point meshes. This is extremely difficult to program correctly,
>>>> because you have to repair damage to the mesh caused by transformations,
>>>> deal with floating point instability, and so on, and there are a lot of
>>>> tricky edge cases. I'd be looking for a well-exercised engine with about 20
>>>> years worth of development and maintenance, and definitely not a
>>>> single-person project with only a year or two of work done.
>>>>
>>>> On 26 November 2015 at 17:43, Andrew Plumb <andrew at plumb.org
>>>> <javascript:_e(%7B%7D,'cvml','andrew at plumb.org');>> wrote:
>>>>
>>>>> Ah, so it does:
>>>>>
>>>>>
>>>>> https://github.com/libigl/libigl/blob/master/tutorial/609_Boolean/main.cpp
>>>>>
>>>>>
>>>>> https://github.com/libigl/libigl/blob/master/include/igl/copyleft/boolean/mesh_boolean.cpp
>>>>>
>>>>> On the plus side, looks like the meshes going into the operations and
>>>>> coming out are Eigen data constructs, so it may be easier to parallelize
>>>>> the operations and faster non-CSG mesh transforms (translate, rotate, etc.).
>>>>>
>>>>> Something to play with?
>>>>>
>>>>> Andrew.
>>>>>
>>>>> On Nov 26, 2015, at 3:51 PM, doug moen <doug at moens.org
>>>>> <javascript:_e(%7B%7D,'cvml','doug at moens.org');>> wrote:
>>>>>
>>>>> This appears to use CGAL and Cork to implement boolean operations.
>>>>> https://github.com/gilbo/cork
>>>>>
>>>>> They mention that Cork is available as an alternative: it is faster,
>>>>> but not always robust.
>>>>>
>>>>> On 26 November 2015 at 15:38, clothbot <andrew at plumb.org
>>>>> <javascript:_e(%7B%7D,'cvml','andrew at plumb.org');>> wrote:
>>>>>
>>>>>> Hey Everyone,
>>>>>>
>>>>>> Has anyone looked into using libigl as a (partial) CGAL replacement
>>>>>> for 3D
>>>>>> boolean op's and mesh manipulations?
>>>>>>
>>>>>> http://libigl.github.io/libigl/
>>>>>>
>>>>>> https://github.com/libigl/libigl
>>>>>>
>>>>>> http://www.alecjacobson.com/weblog/?tag=libigl
>>>>>>
>>>>>> Looks to be quite powerful!
>>>>>>
>>>>>> Andrew.
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> --
>>>>>> View this message in context:
>>>>>> http://forum.openscad.org/libigl-anyone-poked-at-it-for-CGAL-partial-replacement-tp14769.html
>>>>>> Sent from the OpenSCAD mailing list archive at Nabble.com
>>>>>> <http://nabble.com>.
>>>>>>
>>>>>> _______________________________________________
>>>>>> OpenSCAD mailing list
>>>>>> Discuss at lists.openscad.org
>>>>>> <javascript:_e(%7B%7D,'cvml','Discuss at lists.openscad.org');>
>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>
>>>>>>
>>>>>>
>>>>> _______________________________________________
>>>>> OpenSCAD mailing list
>>>>> Discuss at lists.openscad.org
>>>>> <javascript:_e(%7B%7D,'cvml','Discuss at lists.openscad.org');>
>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>
>>>>>
>>>>> --
>>>>>
>>>>> "The future is already here.  It's just not very evenly distributed"
>>>>> -- William Gibson
>>>>>
>>>>> Me: http://clothbot.com/wiki/
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> OpenSCAD mailing list
>>>>> Discuss at lists.openscad.org
>>>>> <javascript:_e(%7B%7D,'cvml','Discuss at lists.openscad.org');>
>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>
>>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> <javascript:_e(%7B%7D,'cvml','Discuss at lists.openscad.org');>
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> <javascript:_e(%7B%7D,'cvml','Discuss at lists.openscad.org');>
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> <javascript:_e(%7B%7D,'cvml','Discuss at lists.openscad.org');>
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151127/726a8383/attachment-0001.html>

From ticonzero2010 at gmail.com  Fri Nov 27 08:07:09 2015
From: ticonzero2010 at gmail.com (ticonzero2010)
Date: Fri, 27 Nov 2015 06:07:09 -0700 (MST)
Subject: [OpenSCAD] vertices and paths of a polygon created via offset()
In-Reply-To: <1448573188423-14773.post@n5.nabble.com>
References: <1448369263299-14741.post@n5.nabble.com>
	<1448573188423-14773.post@n5.nabble.com>
Message-ID: <1448629629822-14791.post@n5.nabble.com>

many thanks for you message!

I ended up writing a matlab script to generate all the nodes then used
polygon to get the plate with the holes correctly.





--
View this message in context: http://forum.openscad.org/vertices-and-paths-of-a-polygon-created-via-offset-tp14741p14791.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Fri Nov 27 08:18:48 2015
From: mschafer at wireframe.biz (Neon22)
Date: Fri, 27 Nov 2015 06:18:48 -0700 (MST)
Subject: [OpenSCAD] Rotate Spoke try 2
In-Reply-To: <1448596958595-14781.post@n5.nabble.com>
References: <1448424860960-14747.post@n5.nabble.com>
	<1448542984820-14759.post@n5.nabble.com>
	<1448571200657-14771.post@n5.nabble.com>
	<1448578603764-14776.post@n5.nabble.com>
	<1448592698845-14779.post@n5.nabble.com>
	<1448596958595-14781.post@n5.nabble.com>
Message-ID: <1448630328909-14792.post@n5.nabble.com>

Nathan ?
Anyway if you add a # at front of the line you can see the shape. E.g. here:

linear_extrude(height = Deep+1+ArmHigh, center = false, convexity = 10,
twist = 0)
   #polygon(points = p*InsetRad);

This trick will visually show you exactly what's not working right.

I empirically determined the values for noArm=3..9 and then had a stab at
the calc. Seems to work.
My mod below.

NoArm   = 7;  //how many 'spokes'
ArmWide = 3;  //width of each spoke
ArmHigh = 3;  //height of each spoke
ArmLong = 80; //length of each spoke - from centre

Deep = 1;      //depth of indent
InsetRad = 45; //radius of indent

Circ = 0;     //size of circle in middle. zero for no circle, Advised if
hole or slot
Hole = 0;     //size of hole in middle. zero for no hole.
SlotWide = 0; //slot instead of hole. zero either to not slot. no slot if
circ>0
SlotDeep = 2; //

DGrees = 360/NoArm;


//polygon cylinder stuff
p = [for (k=[0:NoArm-1])
		let (angle=360/NoArm*k)
			[cos(angle), sin(angle)]
	];


difference()  {
	union()  {
		for (i=[0:NoArm-1])  {
			//arm
			rotate([0,0,DGrees*i])
			translate([-ArmWide/2,0,0])
				cube([ArmWide,ArmLong,ArmHigh]);
		}
		//circle in middle
		if (Circ>0)
			cylinder(ArmHigh-Deep,Circ,Circ);
		}
	//indent
	//echo(NoArm=NoArm, 360/NoArm, [for (x=[3:9]) [for(i=[0:x]) 90-360/x*i]]);
	rotate([0,0,90-360/NoArm])  //empirical 3=-30,90, 4=0, 5=18, 6=30,-30,
7=-13,38.5, 8=0, 9=10
	translate([0,0,ArmHigh-Deep])
	linear_extrude(height = Deep+1+ArmHigh, center = false, convexity = 10,
twist = 0)
		// #polygon(points = p*InsetRad);
		#circle(InsetRad, $fn=NoArm);
	//hole in middle
	if(Hole>0)  { 
		translate([0,0,-ArmHigh])
			cylinder(ArmHigh*2,Hole,Hole);
	} else {
		if(SlotWide>0 && SlotDeep>0)   {//slot
			#cube([SlotWide,SlotDeep,ArmHigh*2],center=true);
		}
	}
}



--
View this message in context: http://forum.openscad.org/Rotate-Spoke-try-2-tp14747p14792.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrew at plumb.org  Fri Nov 27 08:31:42 2015
From: andrew at plumb.org (clothbot)
Date: Fri, 27 Nov 2015 06:31:42 -0700 (MST)
Subject: [OpenSCAD] libigl: anyone poked at it for CGAL (partial)
	replacement?
In-Reply-To: <CAGV6i+PRCz7nYYScWY8OB=pep2DfXjMoRM_evYC-hM8fX4KPMQ@mail.gmail.com>
References: <1448570318134-14769.post@n5.nabble.com>
	<CAGV6i+N3fq_TpacBKwdO3yDjUc0sS8TnkFfQT2c63_efh8OoAw@mail.gmail.com>
	<3ACC64E9-3A84-47DA-A5FB-637D5944B6FB@plumb.org>
	<CAGV6i+O2+xYwrJcq-sip3z1nsL8Z8b28c7UqxUQBb1s+-iKFVA@mail.gmail.com>
	<CAEbsasRGGoK7N89Q9RXGWjCTeSGPBv=gTXombfAYx_HPbyNcBA@mail.gmail.com>
	<CAGV6i+PRCz7nYYScWY8OB=pep2DfXjMoRM_evYC-hM8fX4KPMQ@mail.gmail.com>
Message-ID: <1448631102963-14793.post@n5.nabble.com>

Thinking out-loud more than anything else, I'm curious of what OpenVDB might
bring to the table in the way of multi-material (discrete and mixed),
variable-density and/or texture and colour support.  The stuff that the AMF
file format hints at supporting but toolset support doesn't quite exist for
yet.

As it relates to OpenSCAD, I suspect it may be a case of us still needing
CGAL, but compartmentalizing/threading its use.  Taking a
voxel-mesh-cgal-mesh-voxel path may be cleaner w.r.t. not breaking on the
final mesh-STL export stage because it's voxel-STL.

Gotta pick our battles. :-)


doug.moen wrote
> It looks interesting.
> 
> It does have CSG operations. While reading about voxel based systems, I
> found a claim that CSG is slow on voxel systems, compared to mesh systems,
> and I found a forum post complaining about the speed of CSG operations in
> OpenVDB. So this might not solve our speed problems with CGAL.
> 
> I didn't find any operations for convex hull or minkowski sum. It's not
> obvious how you implement these without converting to a mesh first, which
> I
> bet is slow.
> 
> It is described as a visual effects library, and the home page demos
> effects like clouds, fog, dust clouds, particle based fluid simulations.
> If
> this is the focus, then I'm not sure it will be efficient for our use
> cases. We could try it and do some performance measurements.
> 
> I wonder what kind of 3D modelling operations are enabled by a voxel
> engine, stuff that's difficult with our current mesh engine?





--
View this message in context: http://forum.openscad.org/libigl-anyone-poked-at-it-for-CGAL-partial-replacement-tp14769p14793.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Fri Nov 27 08:42:58 2015
From: doug at moens.org (doug moen)
Date: Fri, 27 Nov 2015 08:42:58 -0500
Subject: [OpenSCAD] libigl: anyone poked at it for CGAL (partial)
	replacement?
In-Reply-To: <CAEbsasQ4DxeDJe1nq_5nNSsk5wVb56WCJDQerHf6g6bu+0dZPg@mail.gmail.com>
References: <1448570318134-14769.post@n5.nabble.com>
	<CAGV6i+N3fq_TpacBKwdO3yDjUc0sS8TnkFfQT2c63_efh8OoAw@mail.gmail.com>
	<3ACC64E9-3A84-47DA-A5FB-637D5944B6FB@plumb.org>
	<CAGV6i+O2+xYwrJcq-sip3z1nsL8Z8b28c7UqxUQBb1s+-iKFVA@mail.gmail.com>
	<CAEbsasRGGoK7N89Q9RXGWjCTeSGPBv=gTXombfAYx_HPbyNcBA@mail.gmail.com>
	<CAGV6i+PRCz7nYYScWY8OB=pep2DfXjMoRM_evYC-hM8fX4KPMQ@mail.gmail.com>
	<CAEbsasQ4DxeDJe1nq_5nNSsk5wVb56WCJDQerHf6g6bu+0dZPg@mail.gmail.com>
Message-ID: <CAGV6i+MF95fHYN4Kye=Oh5JUQUoG0db+zmszauZR1_skkegm_w@mail.gmail.com>

If you want to read about a voxel based solid modelling language written in
JavaScript, check out ShapeJS.

http://shapejs.shapeways.com/getting-started

It is built on top of very powerful primitive operations.

You can specify an arbitrary 3d shape by a function that maps each
coordinate in the voxel grid to a signed distance. The CSG operations are
available for composing objects. You can specify an arbitrary non affine
transformation using a function, as proposed by Trygon.

But I bet they don't support convex hull. You need to identify the vertexes
in order to compute this, and that's not easily done with a voxel
representation.

It seems to me that we would need to design a hybrid system supporting a
mixture of mesh and voxel representations if we wanted to extend openscad
with voxel support, while retaining full backward compatibility.


On Thursday, 26 November 2015, Tim Hawkins <tim.thawkins at gmail.com> wrote:

> It does claim to be multithreaded, which i can belive as voxel operations
> are easy to partition, i dont claim to have any expertice in this, my
> graphics abilities are limited to 2d, i used to write postscript
> rasterisation engines, which render down to a trapezoid list which is easy
> to slice and hand out to different threads for operations like colour
> correction and halftoning.
>
> Given it does work on a different set of principles there will be
> operations that are missing or sub optimimal, like wise there will be
> aspects that are faster and open up new capabilities, its just a case of
> determining what the tradeoffs are.
>
> On Fri, Nov 27, 2015, 12:29 doug moen <doug at moens.org
> <javascript:_e(%7B%7D,'cvml','doug at moens.org');>> wrote:
>
>> It looks interesting.
>>
>> It does have CSG operations. While reading about voxel based systems, I
>> found a claim that CSG is slow on voxel systems, compared to mesh systems,
>> and I found a forum post complaining about the speed of CSG operations in
>> OpenVDB. So this might not solve our speed problems with CGAL.
>>
>> I didn't find any operations for convex hull or minkowski sum. It's not
>> obvious how you implement these without converting to a mesh first, which I
>> bet is slow.
>>
>> It is described as a visual effects library, and the home page demos
>> effects like clouds, fog, dust clouds, particle based fluid simulations. If
>> this is the focus, then I'm not sure it will be efficient for our use
>> cases. We could try it and do some performance measurements.
>>
>> I wonder what kind of 3D modelling operations are enabled by a voxel
>> engine, stuff that's difficult with our current mesh engine?
>>
>> On 26 November 2015 at 22:16, Tim Hawkins <tim.thawkins at gmail.com
>> <javascript:_e(%7B%7D,'cvml','tim.thawkins at gmail.com');>> wrote:
>>
>>> http://www.openvdb.org
>>>
>>> This may not be what you are looking for but its worth considering.
>>>
>>> It is a voxel based csg tree system with mesh import and export. You
>>> create shapes as voxel grids and then it can perform csg operations on
>>> them, it uses a sparse storage mechanism so its effectivly only storing the
>>> surface voxels amd thier relationships.
>>>
>>> On Fri, Nov 27, 2015, 07:40 doug moen <doug at moens.org
>>> <javascript:_e(%7B%7D,'cvml','doug at moens.org');>> wrote:
>>>
>>>> Yes, but the "Eigen data constructs" (I don't understand this yet) use
>>>> floating point representation, and the conversion from CGAL to native
>>>> representation can result in an invalid mesh. This is mentioned in the
>>>> tutorial. Therefore, I don't see how we can use this: it's not robust.
>>>>
>>>> What I think we want is a robust CSG geometry engine that works with
>>>> floating point meshes. This is extremely difficult to program correctly,
>>>> because you have to repair damage to the mesh caused by transformations,
>>>> deal with floating point instability, and so on, and there are a lot of
>>>> tricky edge cases. I'd be looking for a well-exercised engine with about 20
>>>> years worth of development and maintenance, and definitely not a
>>>> single-person project with only a year or two of work done.
>>>>
>>>> On 26 November 2015 at 17:43, Andrew Plumb <andrew at plumb.org
>>>> <javascript:_e(%7B%7D,'cvml','andrew at plumb.org');>> wrote:
>>>>
>>>>> Ah, so it does:
>>>>>
>>>>>
>>>>> https://github.com/libigl/libigl/blob/master/tutorial/609_Boolean/main.cpp
>>>>>
>>>>>
>>>>> https://github.com/libigl/libigl/blob/master/include/igl/copyleft/boolean/mesh_boolean.cpp
>>>>>
>>>>> On the plus side, looks like the meshes going into the operations and
>>>>> coming out are Eigen data constructs, so it may be easier to parallelize
>>>>> the operations and faster non-CSG mesh transforms (translate, rotate, etc.).
>>>>>
>>>>> Something to play with?
>>>>>
>>>>> Andrew.
>>>>>
>>>>> On Nov 26, 2015, at 3:51 PM, doug moen <doug at moens.org
>>>>> <javascript:_e(%7B%7D,'cvml','doug at moens.org');>> wrote:
>>>>>
>>>>> This appears to use CGAL and Cork to implement boolean operations.
>>>>> https://github.com/gilbo/cork
>>>>>
>>>>> They mention that Cork is available as an alternative: it is faster,
>>>>> but not always robust.
>>>>>
>>>>> On 26 November 2015 at 15:38, clothbot <andrew at plumb.org
>>>>> <javascript:_e(%7B%7D,'cvml','andrew at plumb.org');>> wrote:
>>>>>
>>>>>> Hey Everyone,
>>>>>>
>>>>>> Has anyone looked into using libigl as a (partial) CGAL replacement
>>>>>> for 3D
>>>>>> boolean op's and mesh manipulations?
>>>>>>
>>>>>> http://libigl.github.io/libigl/
>>>>>>
>>>>>> https://github.com/libigl/libigl
>>>>>>
>>>>>> http://www.alecjacobson.com/weblog/?tag=libigl
>>>>>>
>>>>>> Looks to be quite powerful!
>>>>>>
>>>>>> Andrew.
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> --
>>>>>> View this message in context:
>>>>>> http://forum.openscad.org/libigl-anyone-poked-at-it-for-CGAL-partial-replacement-tp14769.html
>>>>>> Sent from the OpenSCAD mailing list archive at Nabble.com
>>>>>> <http://nabble.com>.
>>>>>>
>>>>>> _______________________________________________
>>>>>> OpenSCAD mailing list
>>>>>> Discuss at lists.openscad.org
>>>>>> <javascript:_e(%7B%7D,'cvml','Discuss at lists.openscad.org');>
>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>
>>>>>>
>>>>>>
>>>>> _______________________________________________
>>>>> OpenSCAD mailing list
>>>>> Discuss at lists.openscad.org
>>>>> <javascript:_e(%7B%7D,'cvml','Discuss at lists.openscad.org');>
>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>
>>>>>
>>>>> --
>>>>>
>>>>> "The future is already here.  It's just not very evenly distributed"
>>>>> -- William Gibson
>>>>>
>>>>> Me: http://clothbot.com/wiki/
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> OpenSCAD mailing list
>>>>> Discuss at lists.openscad.org
>>>>> <javascript:_e(%7B%7D,'cvml','Discuss at lists.openscad.org');>
>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>
>>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> <javascript:_e(%7B%7D,'cvml','Discuss at lists.openscad.org');>
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> <javascript:_e(%7B%7D,'cvml','Discuss at lists.openscad.org');>
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> <javascript:_e(%7B%7D,'cvml','Discuss at lists.openscad.org');>
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151127/1f202b39/attachment-0001.html>

From doug at moens.org  Fri Nov 27 09:49:47 2015
From: doug at moens.org (doug moen)
Date: Fri, 27 Nov 2015 09:49:47 -0500
Subject: [OpenSCAD] libigl: anyone poked at it for CGAL (partial)
	replacement?
In-Reply-To: <CAGV6i+MF95fHYN4Kye=Oh5JUQUoG0db+zmszauZR1_skkegm_w@mail.gmail.com>
References: <1448570318134-14769.post@n5.nabble.com>
	<CAGV6i+N3fq_TpacBKwdO3yDjUc0sS8TnkFfQT2c63_efh8OoAw@mail.gmail.com>
	<3ACC64E9-3A84-47DA-A5FB-637D5944B6FB@plumb.org>
	<CAGV6i+O2+xYwrJcq-sip3z1nsL8Z8b28c7UqxUQBb1s+-iKFVA@mail.gmail.com>
	<CAEbsasRGGoK7N89Q9RXGWjCTeSGPBv=gTXombfAYx_HPbyNcBA@mail.gmail.com>
	<CAGV6i+PRCz7nYYScWY8OB=pep2DfXjMoRM_evYC-hM8fX4KPMQ@mail.gmail.com>
	<CAEbsasQ4DxeDJe1nq_5nNSsk5wVb56WCJDQerHf6g6bu+0dZPg@mail.gmail.com>
	<CAGV6i+MF95fHYN4Kye=Oh5JUQUoG0db+zmszauZR1_skkegm_w@mail.gmail.com>
Message-ID: <CAGV6i+PG3NAYeR4J1q8eaK3Ra3gtw9zCOXFDdeHOLABLZOMOhg@mail.gmail.com>

Openvdb and ShapeJS specify primitive geometric objects using a "signed
distance function", which maps an (x,y,z) coordinate to an integer, which
is negative inside the object, positive outside, and zero at the surface.

This is the same as the " implicit function" representation used by
ImplicitCAD.

https://christopherolah.wordpress.com/2011/11/06/manipulation-of-implicit-functions-with-an-eye-on-cad/

On Friday, 27 November 2015, doug moen <doug at moens.org> wrote:

> If you want to read about a voxel based solid modelling language written
> in JavaScript, check out ShapeJS.
>
> http://shapejs.shapeways.com/getting-started
>
> It is built on top of very powerful primitive operations.
>
> You can specify an arbitrary 3d shape by a function that maps each
> coordinate in the voxel grid to a signed distance. The CSG operations are
> available for composing objects. You can specify an arbitrary non affine
> transformation using a function, as proposed by Trygon.
>
> But I bet they don't support convex hull. You need to identify the
> vertexes in order to compute this, and that's not easily done with a voxel
> representation.
>
> It seems to me that we would need to design a hybrid system supporting a
> mixture of mesh and voxel representations if we wanted to extend openscad
> with voxel support, while retaining full backward compatibility.
>
>
> On Thursday, 26 November 2015, Tim Hawkins <tim.thawkins at gmail.com
> <javascript:_e(%7B%7D,'cvml','tim.thawkins at gmail.com');>> wrote:
>
>> It does claim to be multithreaded, which i can belive as voxel operations
>> are easy to partition, i dont claim to have any expertice in this, my
>> graphics abilities are limited to 2d, i used to write postscript
>> rasterisation engines, which render down to a trapezoid list which is easy
>> to slice and hand out to different threads for operations like colour
>> correction and halftoning.
>>
>> Given it does work on a different set of principles there will be
>> operations that are missing or sub optimimal, like wise there will be
>> aspects that are faster and open up new capabilities, its just a case of
>> determining what the tradeoffs are.
>>
>> On Fri, Nov 27, 2015, 12:29 doug moen <doug at moens.org> wrote:
>>
>>> It looks interesting.
>>>
>>> It does have CSG operations. While reading about voxel based systems, I
>>> found a claim that CSG is slow on voxel systems, compared to mesh systems,
>>> and I found a forum post complaining about the speed of CSG operations in
>>> OpenVDB. So this might not solve our speed problems with CGAL.
>>>
>>> I didn't find any operations for convex hull or minkowski sum. It's not
>>> obvious how you implement these without converting to a mesh first, which I
>>> bet is slow.
>>>
>>> It is described as a visual effects library, and the home page demos
>>> effects like clouds, fog, dust clouds, particle based fluid simulations. If
>>> this is the focus, then I'm not sure it will be efficient for our use
>>> cases. We could try it and do some performance measurements.
>>>
>>> I wonder what kind of 3D modelling operations are enabled by a voxel
>>> engine, stuff that's difficult with our current mesh engine?
>>>
>>> On 26 November 2015 at 22:16, Tim Hawkins <tim.thawkins at gmail.com>
>>> wrote:
>>>
>>>> http://www.openvdb.org
>>>>
>>>> This may not be what you are looking for but its worth considering.
>>>>
>>>> It is a voxel based csg tree system with mesh import and export. You
>>>> create shapes as voxel grids and then it can perform csg operations on
>>>> them, it uses a sparse storage mechanism so its effectivly only storing the
>>>> surface voxels amd thier relationships.
>>>>
>>>> On Fri, Nov 27, 2015, 07:40 doug moen <doug at moens.org> wrote:
>>>>
>>>>> Yes, but the "Eigen data constructs" (I don't understand this yet) use
>>>>> floating point representation, and the conversion from CGAL to native
>>>>> representation can result in an invalid mesh. This is mentioned in the
>>>>> tutorial. Therefore, I don't see how we can use this: it's not robust.
>>>>>
>>>>> What I think we want is a robust CSG geometry engine that works with
>>>>> floating point meshes. This is extremely difficult to program correctly,
>>>>> because you have to repair damage to the mesh caused by transformations,
>>>>> deal with floating point instability, and so on, and there are a lot of
>>>>> tricky edge cases. I'd be looking for a well-exercised engine with about 20
>>>>> years worth of development and maintenance, and definitely not a
>>>>> single-person project with only a year or two of work done.
>>>>>
>>>>> On 26 November 2015 at 17:43, Andrew Plumb <andrew at plumb.org> wrote:
>>>>>
>>>>>> Ah, so it does:
>>>>>>
>>>>>>
>>>>>> https://github.com/libigl/libigl/blob/master/tutorial/609_Boolean/main.cpp
>>>>>>
>>>>>>
>>>>>> https://github.com/libigl/libigl/blob/master/include/igl/copyleft/boolean/mesh_boolean.cpp
>>>>>>
>>>>>> On the plus side, looks like the meshes going into the operations and
>>>>>> coming out are Eigen data constructs, so it may be easier to parallelize
>>>>>> the operations and faster non-CSG mesh transforms (translate, rotate, etc.).
>>>>>>
>>>>>> Something to play with?
>>>>>>
>>>>>> Andrew.
>>>>>>
>>>>>> On Nov 26, 2015, at 3:51 PM, doug moen <doug at moens.org> wrote:
>>>>>>
>>>>>> This appears to use CGAL and Cork to implement boolean operations.
>>>>>> https://github.com/gilbo/cork
>>>>>>
>>>>>> They mention that Cork is available as an alternative: it is faster,
>>>>>> but not always robust.
>>>>>>
>>>>>> On 26 November 2015 at 15:38, clothbot <andrew at plumb.org> wrote:
>>>>>>
>>>>>>> Hey Everyone,
>>>>>>>
>>>>>>> Has anyone looked into using libigl as a (partial) CGAL replacement
>>>>>>> for 3D
>>>>>>> boolean op's and mesh manipulations?
>>>>>>>
>>>>>>> http://libigl.github.io/libigl/
>>>>>>>
>>>>>>> https://github.com/libigl/libigl
>>>>>>>
>>>>>>> http://www.alecjacobson.com/weblog/?tag=libigl
>>>>>>>
>>>>>>> Looks to be quite powerful!
>>>>>>>
>>>>>>> Andrew.
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> --
>>>>>>> View this message in context:
>>>>>>> http://forum.openscad.org/libigl-anyone-poked-at-it-for-CGAL-partial-replacement-tp14769.html
>>>>>>> Sent from the OpenSCAD mailing list archive at Nabble.com
>>>>>>> <http://nabble.com>.
>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> OpenSCAD mailing list
>>>>>>> Discuss at lists.openscad.org
>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>> _______________________________________________
>>>>>> OpenSCAD mailing list
>>>>>> Discuss at lists.openscad.org
>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>
>>>>>>
>>>>>> --
>>>>>>
>>>>>> "The future is already here.  It's just not very evenly distributed"
>>>>>> -- William Gibson
>>>>>>
>>>>>> Me: http://clothbot.com/wiki/
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> _______________________________________________
>>>>>> OpenSCAD mailing list
>>>>>> Discuss at lists.openscad.org
>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>
>>>>>>
>>>>> _______________________________________________
>>>>> OpenSCAD mailing list
>>>>> Discuss at lists.openscad.org
>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151127/fbfda75d/attachment.html>

From doug at moens.org  Fri Nov 27 10:29:24 2015
From: doug at moens.org (doug moen)
Date: Fri, 27 Nov 2015 10:29:24 -0500
Subject: [OpenSCAD] libigl: anyone poked at it for CGAL (partial)
	replacement?
In-Reply-To: <CAGV6i+PG3NAYeR4J1q8eaK3Ra3gtw9zCOXFDdeHOLABLZOMOhg@mail.gmail.com>
References: <1448570318134-14769.post@n5.nabble.com>
	<CAGV6i+N3fq_TpacBKwdO3yDjUc0sS8TnkFfQT2c63_efh8OoAw@mail.gmail.com>
	<3ACC64E9-3A84-47DA-A5FB-637D5944B6FB@plumb.org>
	<CAGV6i+O2+xYwrJcq-sip3z1nsL8Z8b28c7UqxUQBb1s+-iKFVA@mail.gmail.com>
	<CAEbsasRGGoK7N89Q9RXGWjCTeSGPBv=gTXombfAYx_HPbyNcBA@mail.gmail.com>
	<CAGV6i+PRCz7nYYScWY8OB=pep2DfXjMoRM_evYC-hM8fX4KPMQ@mail.gmail.com>
	<CAEbsasQ4DxeDJe1nq_5nNSsk5wVb56WCJDQerHf6g6bu+0dZPg@mail.gmail.com>
	<CAGV6i+MF95fHYN4Kye=Oh5JUQUoG0db+zmszauZR1_skkegm_w@mail.gmail.com>
	<CAGV6i+PG3NAYeR4J1q8eaK3Ra3gtw9zCOXFDdeHOLABLZOMOhg@mail.gmail.com>
Message-ID: <CAGV6i+P7Zd468iULwsZazVa2dDdne7rTt63zHyuYJeC5yMv0HA@mail.gmail.com>

The implicit function representation for geometric objects is awesome.
First, it is an exact, analytic representation for things like spheres. The
object eventually has to be converted to an approximation, for export, but
this is delayed as long as possible. Meanwhile, transformations and CSG
operations on analytic objects return exact results, not approximations.

If you have analytic objects, then Trygon transformations are trivial. They
are just function composition. You compose the transformation function with
the implicit function, to produce another implicit function. So much
easier, faster and precise than applying a Trygon transformation to a mesh.

CSG operations are also trivial, as described by Chris Olah's essay
(previous post). Union is the 'min' function, intersection is the 'max'
function.

Maybe what the voxel libraries give us is an infrastructure that wraps
around implicit functions, so we can convert them to and from meshes, and
preview them.

On 27 November 2015 at 09:49, doug moen <doug at moens.org> wrote:

> Openvdb and ShapeJS specify primitive geometric objects using a "signed
> distance function", which maps an (x,y,z) coordinate to an integer, which
> is negative inside the object, positive outside, and zero at the surface.
>
> This is the same as the " implicit function" representation used by
> ImplicitCAD.
>
>
> https://christopherolah.wordpress.com/2011/11/06/manipulation-of-implicit-functions-with-an-eye-on-cad/
>
>
> On Friday, 27 November 2015, doug moen <doug at moens.org> wrote:
>
>> If you want to read about a voxel based solid modelling language written
>> in JavaScript, check out ShapeJS.
>>
>> http://shapejs.shapeways.com/getting-started
>>
>> It is built on top of very powerful primitive operations.
>>
>> You can specify an arbitrary 3d shape by a function that maps each
>> coordinate in the voxel grid to a signed distance. The CSG operations are
>> available for composing objects. You can specify an arbitrary non affine
>> transformation using a function, as proposed by Trygon.
>>
>> But I bet they don't support convex hull. You need to identify the
>> vertexes in order to compute this, and that's not easily done with a voxel
>> representation.
>>
>> It seems to me that we would need to design a hybrid system supporting a
>> mixture of mesh and voxel representations if we wanted to extend openscad
>> with voxel support, while retaining full backward compatibility.
>>
>>
>> On Thursday, 26 November 2015, Tim Hawkins <tim.thawkins at gmail.com>
>> wrote:
>>
>>> It does claim to be multithreaded, which i can belive as voxel
>>> operations are easy to partition, i dont claim to have any expertice in
>>> this, my graphics abilities are limited to 2d, i used to write postscript
>>> rasterisation engines, which render down to a trapezoid list which is easy
>>> to slice and hand out to different threads for operations like colour
>>> correction and halftoning.
>>>
>>> Given it does work on a different set of principles there will be
>>> operations that are missing or sub optimimal, like wise there will be
>>> aspects that are faster and open up new capabilities, its just a case of
>>> determining what the tradeoffs are.
>>>
>>> On Fri, Nov 27, 2015, 12:29 doug moen <doug at moens.org> wrote:
>>>
>>>> It looks interesting.
>>>>
>>>> It does have CSG operations. While reading about voxel based systems, I
>>>> found a claim that CSG is slow on voxel systems, compared to mesh systems,
>>>> and I found a forum post complaining about the speed of CSG operations in
>>>> OpenVDB. So this might not solve our speed problems with CGAL.
>>>>
>>>> I didn't find any operations for convex hull or minkowski sum. It's not
>>>> obvious how you implement these without converting to a mesh first, which I
>>>> bet is slow.
>>>>
>>>> It is described as a visual effects library, and the home page demos
>>>> effects like clouds, fog, dust clouds, particle based fluid simulations. If
>>>> this is the focus, then I'm not sure it will be efficient for our use
>>>> cases. We could try it and do some performance measurements.
>>>>
>>>> I wonder what kind of 3D modelling operations are enabled by a voxel
>>>> engine, stuff that's difficult with our current mesh engine?
>>>>
>>>> On 26 November 2015 at 22:16, Tim Hawkins <tim.thawkins at gmail.com>
>>>> wrote:
>>>>
>>>>> http://www.openvdb.org
>>>>>
>>>>> This may not be what you are looking for but its worth considering.
>>>>>
>>>>> It is a voxel based csg tree system with mesh import and export. You
>>>>> create shapes as voxel grids and then it can perform csg operations on
>>>>> them, it uses a sparse storage mechanism so its effectivly only storing the
>>>>> surface voxels amd thier relationships.
>>>>>
>>>>> On Fri, Nov 27, 2015, 07:40 doug moen <doug at moens.org> wrote:
>>>>>
>>>>>> Yes, but the "Eigen data constructs" (I don't understand this yet)
>>>>>> use floating point representation, and the conversion from CGAL to native
>>>>>> representation can result in an invalid mesh. This is mentioned in the
>>>>>> tutorial. Therefore, I don't see how we can use this: it's not robust.
>>>>>>
>>>>>> What I think we want is a robust CSG geometry engine that works with
>>>>>> floating point meshes. This is extremely difficult to program correctly,
>>>>>> because you have to repair damage to the mesh caused by transformations,
>>>>>> deal with floating point instability, and so on, and there are a lot of
>>>>>> tricky edge cases. I'd be looking for a well-exercised engine with about 20
>>>>>> years worth of development and maintenance, and definitely not a
>>>>>> single-person project with only a year or two of work done.
>>>>>>
>>>>>> On 26 November 2015 at 17:43, Andrew Plumb <andrew at plumb.org> wrote:
>>>>>>
>>>>>>> Ah, so it does:
>>>>>>>
>>>>>>>
>>>>>>> https://github.com/libigl/libigl/blob/master/tutorial/609_Boolean/main.cpp
>>>>>>>
>>>>>>>
>>>>>>> https://github.com/libigl/libigl/blob/master/include/igl/copyleft/boolean/mesh_boolean.cpp
>>>>>>>
>>>>>>> On the plus side, looks like the meshes going into the operations
>>>>>>> and coming out are Eigen data constructs, so it may be easier to
>>>>>>> parallelize the operations and faster non-CSG mesh transforms (translate,
>>>>>>> rotate, etc.).
>>>>>>>
>>>>>>> Something to play with?
>>>>>>>
>>>>>>> Andrew.
>>>>>>>
>>>>>>> On Nov 26, 2015, at 3:51 PM, doug moen <doug at moens.org> wrote:
>>>>>>>
>>>>>>> This appears to use CGAL and Cork to implement boolean operations.
>>>>>>> https://github.com/gilbo/cork
>>>>>>>
>>>>>>> They mention that Cork is available as an alternative: it is faster,
>>>>>>> but not always robust.
>>>>>>>
>>>>>>> On 26 November 2015 at 15:38, clothbot <andrew at plumb.org> wrote:
>>>>>>>
>>>>>>>> Hey Everyone,
>>>>>>>>
>>>>>>>> Has anyone looked into using libigl as a (partial) CGAL replacement
>>>>>>>> for 3D
>>>>>>>> boolean op's and mesh manipulations?
>>>>>>>>
>>>>>>>> http://libigl.github.io/libigl/
>>>>>>>>
>>>>>>>> https://github.com/libigl/libigl
>>>>>>>>
>>>>>>>> http://www.alecjacobson.com/weblog/?tag=libigl
>>>>>>>>
>>>>>>>> Looks to be quite powerful!
>>>>>>>>
>>>>>>>> Andrew.
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>> --
>>>>>>>> View this message in context:
>>>>>>>> http://forum.openscad.org/libigl-anyone-poked-at-it-for-CGAL-partial-replacement-tp14769.html
>>>>>>>> Sent from the OpenSCAD mailing list archive at Nabble.com
>>>>>>>> <http://nabble.com>.
>>>>>>>>
>>>>>>>> _______________________________________________
>>>>>>>> OpenSCAD mailing list
>>>>>>>> Discuss at lists.openscad.org
>>>>>>>>
>>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> OpenSCAD mailing list
>>>>>>> Discuss at lists.openscad.org
>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>
>>>>>>>
>>>>>>> --
>>>>>>>
>>>>>>> "The future is already here.  It's just not very evenly distributed"
>>>>>>> -- William Gibson
>>>>>>>
>>>>>>> Me: http://clothbot.com/wiki/
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> OpenSCAD mailing list
>>>>>>> Discuss at lists.openscad.org
>>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>>
>>>>>>>
>>>>>> _______________________________________________
>>>>>> OpenSCAD mailing list
>>>>>> Discuss at lists.openscad.org
>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> OpenSCAD mailing list
>>>>> Discuss at lists.openscad.org
>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>
>>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151127/c0d6dc69/attachment-0001.html>

From marius at kintel.net  Fri Nov 27 11:31:26 2015
From: marius at kintel.net (Marius Kintel)
Date: Fri, 27 Nov 2015 11:31:26 -0500
Subject: [OpenSCAD] libigl: anyone poked at it for CGAL (partial)
	replacement?
In-Reply-To: <CAGV6i+P7Zd468iULwsZazVa2dDdne7rTt63zHyuYJeC5yMv0HA@mail.gmail.com>
References: <1448570318134-14769.post@n5.nabble.com>
	<CAGV6i+N3fq_TpacBKwdO3yDjUc0sS8TnkFfQT2c63_efh8OoAw@mail.gmail.com>
	<3ACC64E9-3A84-47DA-A5FB-637D5944B6FB@plumb.org>
	<CAGV6i+O2+xYwrJcq-sip3z1nsL8Z8b28c7UqxUQBb1s+-iKFVA@mail.gmail.com>
	<CAEbsasRGGoK7N89Q9RXGWjCTeSGPBv=gTXombfAYx_HPbyNcBA@mail.gmail.com>
	<CAGV6i+PRCz7nYYScWY8OB=pep2DfXjMoRM_evYC-hM8fX4KPMQ@mail.gmail.com>
	<CAEbsasQ4DxeDJe1nq_5nNSsk5wVb56WCJDQerHf6g6bu+0dZPg@mail.gmail.com>
	<CAGV6i+MF95fHYN4Kye=Oh5JUQUoG0db+zmszauZR1_skkegm_w@mail.gmail.com>
	<CAGV6i+PG3NAYeR4J1q8eaK3Ra3gtw9zCOXFDdeHOLABLZOMOhg@mail.gmail.com>
	<CAGV6i+P7Zd468iULwsZazVa2dDdne7rTt63zHyuYJeC5yMv0HA@mail.gmail.com>
Message-ID: <FFF30940-E28A-4344-ACD6-4D53DE9F4422@kintel.net>


> On Nov 27, 2015, at 10:29 AM, doug moen <doug at moens.org> wrote:
> 
> The implicit function representation for geometric objects is awesome.

F-Rep is a good short form: https://en.wikipedia.org/wiki/Function_representation
I?d love to have a way of supporting F-Rep in OpenSCAD, as I often see designs where F-Rep would be a significantly cleaner representation.

There are a number of projects are exploring F-Reps for solid modeling. Too many to mention really, but in the Open Source domain of 3D printing-related projects: ShapeJS, ImplicitCAD, Antimony.

Tessellation quality is a challenge, but Shapeways makes a good argument for staying with voxels in some cases: http://abfab3d.com/2015/02/27/voxels-versus-triangles/

As Doug mentions, a hybrid approach seems tempting. I find that extremely scary, but it?s worth exploring.

 -Marius



From doug at moens.org  Fri Nov 27 12:36:25 2015
From: doug at moens.org (doug moen)
Date: Fri, 27 Nov 2015 12:36:25 -0500
Subject: [OpenSCAD] libigl: anyone poked at it for CGAL (partial)
	replacement?
In-Reply-To: <FFF30940-E28A-4344-ACD6-4D53DE9F4422@kintel.net>
References: <1448570318134-14769.post@n5.nabble.com>
	<CAGV6i+N3fq_TpacBKwdO3yDjUc0sS8TnkFfQT2c63_efh8OoAw@mail.gmail.com>
	<3ACC64E9-3A84-47DA-A5FB-637D5944B6FB@plumb.org>
	<CAGV6i+O2+xYwrJcq-sip3z1nsL8Z8b28c7UqxUQBb1s+-iKFVA@mail.gmail.com>
	<CAEbsasRGGoK7N89Q9RXGWjCTeSGPBv=gTXombfAYx_HPbyNcBA@mail.gmail.com>
	<CAGV6i+PRCz7nYYScWY8OB=pep2DfXjMoRM_evYC-hM8fX4KPMQ@mail.gmail.com>
	<CAEbsasQ4DxeDJe1nq_5nNSsk5wVb56WCJDQerHf6g6bu+0dZPg@mail.gmail.com>
	<CAGV6i+MF95fHYN4Kye=Oh5JUQUoG0db+zmszauZR1_skkegm_w@mail.gmail.com>
	<CAGV6i+PG3NAYeR4J1q8eaK3Ra3gtw9zCOXFDdeHOLABLZOMOhg@mail.gmail.com>
	<CAGV6i+P7Zd468iULwsZazVa2dDdne7rTt63zHyuYJeC5yMv0HA@mail.gmail.com>
	<FFF30940-E28A-4344-ACD6-4D53DE9F4422@kintel.net>
Message-ID: <CAGV6i+M34uWiOGWJROyoLv0SL1sUoZN4HO0CGL_LahWAOe2xCg@mail.gmail.com>

IceSL has been mentioned on the list before. Their solid modelling language
supports most of what's in OpenSCAD (and they accept OpenSCAD syntax
directly, as an option). But it also supports F-Rep (what they call
"implicits").

It's a hybrid system that supports both functional and mesh objects. Some
operations, like convex_hull, only work on meshes, not on "implicits".

Preview is so fast that they update the preview pane on each keystroke.
Preview is implemented using FPU programming, and they have a list of
supported graphics hardware.

It's closed source, unfortunately. It's one of the products of a research
group at Inria, and it's a fascinating window into what can be accomplished
by a small group of people, and what's technically possible.

My takeaway is that a hybrid system is feasible, and preview for a hybrid
system can be made very fast*. STL export of functional objects remains a
problem: it's going to be expensive. But it's feasible, and there are
plenty of open source projects that implement code for this.

*If we want fast preview, then there is still the engineering tradeoff
between expressive power and fast preview. Some graphical operations can't
be previewed quickly, it would seem. We've encountered this problem in
OpenSCAD, where the prohibition on querying the mesh exists to keep preview
fast. IceSL has fast preview, but you can't apply convex_hull to a
functional object. PLASM finesses this problem by supporting progressive
preview, where you render a crude approximation and preview that, then
progressively improve the preview quality over time.

On 27 November 2015 at 11:31, Marius Kintel <marius at kintel.net> wrote:

>
> > On Nov 27, 2015, at 10:29 AM, doug moen <doug at moens.org> wrote:
> >
> > The implicit function representation for geometric objects is awesome.
>
> F-Rep is a good short form:
> https://en.wikipedia.org/wiki/Function_representation
> I?d love to have a way of supporting F-Rep in OpenSCAD, as I often see
> designs where F-Rep would be a significantly cleaner representation.
>
> There are a number of projects are exploring F-Reps for solid modeling.
> Too many to mention really, but in the Open Source domain of 3D
> printing-related projects: ShapeJS, ImplicitCAD, Antimony.
>
> Tessellation quality is a challenge, but Shapeways makes a good argument
> for staying with voxels in some cases:
> http://abfab3d.com/2015/02/27/voxels-versus-triangles/
>
> As Doug mentions, a hybrid approach seems tempting. I find that extremely
> scary, but it?s worth exploring.
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151127/8a2cae5e/attachment.html>

From doug at moens.org  Fri Nov 27 13:08:22 2015
From: doug at moens.org (doug moen)
Date: Fri, 27 Nov 2015 13:08:22 -0500
Subject: [OpenSCAD] libigl: anyone poked at it for CGAL (partial)
	replacement?
In-Reply-To: <1448631102963-14793.post@n5.nabble.com>
References: <1448570318134-14769.post@n5.nabble.com>
	<CAGV6i+N3fq_TpacBKwdO3yDjUc0sS8TnkFfQT2c63_efh8OoAw@mail.gmail.com>
	<3ACC64E9-3A84-47DA-A5FB-637D5944B6FB@plumb.org>
	<CAGV6i+O2+xYwrJcq-sip3z1nsL8Z8b28c7UqxUQBb1s+-iKFVA@mail.gmail.com>
	<CAEbsasRGGoK7N89Q9RXGWjCTeSGPBv=gTXombfAYx_HPbyNcBA@mail.gmail.com>
	<CAGV6i+PRCz7nYYScWY8OB=pep2DfXjMoRM_evYC-hM8fX4KPMQ@mail.gmail.com>
	<1448631102963-14793.post@n5.nabble.com>
Message-ID: <CAGV6i+M4Ee96=K1N6WSOF+QA9M-Xjs-_skXUkmr-tVzCzuAyQA@mail.gmail.com>

clothbot said: "I'm curious of what OpenVDB might bring to the table in the
way of multi-material (discrete and mixed), variable-density and/or texture
and colour support.  The stuff that the AMF file format hints at supporting
but toolset support doesn't quite exist for yet."

If you want to apply a texture to a surface (as AMF supports), then you
need to implement that using a mesh representation, not a voxel/functional
representation (in my opinion). The mesh represents surfaces explicitly,
whereas the surface is expensive to recover from a voxel or functional
representation.

All of that other stuff should be quite feasible using a voxel/functional
system. ShapeWays talks about how much better their voxel system is for
supporting this. They have an SVX voxel file format, and the ShapeJS
language for generating SVX files.

quote: "One promise of 3D printing is that complexity is free. Sadly with
STL files we?ve had the disconnect that more complexity equals more
triangles equals larger files. Above a certain limit you just can?t use
triangles to specify the details you want in a 3D printed model. Whether
that information be material allocation, density, RGB color both internal
and external or a custom id that could be used for another variable, not
yet available in the 3D printers on the market."

On 27 November 2015 at 08:31, clothbot <andrew at plumb.org> wrote:

> Thinking out-loud more than anything else, I'm curious of what OpenVDB
> might
> bring to the table in the way of multi-material (discrete and mixed),
> variable-density and/or texture and colour support.  The stuff that the AMF
> file format hints at supporting but toolset support doesn't quite exist for
> yet.
>
> As it relates to OpenSCAD, I suspect it may be a case of us still needing
> CGAL, but compartmentalizing/threading its use.  Taking a
> voxel-mesh-cgal-mesh-voxel path may be cleaner w.r.t. not breaking on the
> final mesh-STL export stage because it's voxel-STL.
>
> Gotta pick our battles. :-)
>
>
> doug.moen wrote
> > It looks interesting.
> >
> > It does have CSG operations. While reading about voxel based systems, I
> > found a claim that CSG is slow on voxel systems, compared to mesh
> systems,
> > and I found a forum post complaining about the speed of CSG operations in
> > OpenVDB. So this might not solve our speed problems with CGAL.
> >
> > I didn't find any operations for convex hull or minkowski sum. It's not
> > obvious how you implement these without converting to a mesh first, which
> > I
> > bet is slow.
> >
> > It is described as a visual effects library, and the home page demos
> > effects like clouds, fog, dust clouds, particle based fluid simulations.
> > If
> > this is the focus, then I'm not sure it will be efficient for our use
> > cases. We could try it and do some performance measurements.
> >
> > I wonder what kind of 3D modelling operations are enabled by a voxel
> > engine, stuff that's difficult with our current mesh engine?
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/libigl-anyone-poked-at-it-for-CGAL-partial-replacement-tp14769p14793.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151127/9dc9da13/attachment.html>

From spindoc at roundtray.yeara.net  Fri Nov 27 13:31:04 2015
From: spindoc at roundtray.yeara.net (Spindoctor)
Date: Fri, 27 Nov 2015 11:31:04 -0700 (MST)
Subject: [OpenSCAD] OpenScad 2014.03 - Segmentation Fault
Message-ID: <1448649064464-14800.post@n5.nabble.com>

Hi!

I developed this model (https://github.com/speendo/tapeholder) in several
months ago in some older version of OpenSCAD.

Now I made a test print and wanted to make some corrections. My Debian
Stretch x64 system(s) updated OpenSCAD to version 2015.03. The new user
interface looks beatiful, but - while already a bit slow in previous
versions - the model is really not usable anymore in the new version of
OpenSCAD.

I read that the laggy model viewer is some kind of Qt 5 problem that comes
with complex models (well, I didn't find my model *that* complex, but my
computers have a different opinion, obviously) in version 2015.03 and cannot
be solved. Therefore I tried to downgrade to version 2014.03 by downloading
the binaries from http://www.openscad.org/downloads.html.

That worked on my netbook - the model is still laggy but it's possible to
work with it. On my desktop computer which has 2 monitors I didn't succeed.
When I try to run OpenSCAD from the console I get a "Speicherzugriffsfehler"
which translate from German as "Segmentation Fault" (at least I think so).

What can I do now? I would like to edit my model in a not too old version of
OpenSCAD. Version 2015.03 seems to be unusable and version 2014.03 does not
even start :-(

Can you help me to make one version work?

Thank you in advance!

Marcel



--
View this message in context: http://forum.openscad.org/OpenScad-2014-03-Segmentation-Fault-tp14800.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jdawgaz at gmail.com  Fri Nov 27 14:09:42 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Fri, 27 Nov 2015 12:09:42 -0700
Subject: [OpenSCAD] OpenScad 2014.03 - Segmentation Fault
In-Reply-To: <1448649064464-14800.post@n5.nabble.com>
References: <1448649064464-14800.post@n5.nabble.com>
Message-ID: <CAMyDR6JJ_UpQAG9ZiH9y1XnE6mY-sHg=1dGzy6Dr1eq_4AT1xw@mail.gmail.com>

I just downloaded and opened in it in openscad, with no problems at all

I am on osx, with openscad version 2015.11.15 (git a7ee1f2)





--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson

On Fri, Nov 27, 2015 at 11:31 AM, Spindoctor <spindoc at roundtray.yeara.net>
wrote:

> Hi!
>
> I developed this model (https://github.com/speendo/tapeholder) in several
> months ago in some older version of OpenSCAD.
>
> Now I made a test print and wanted to make some corrections. My Debian
> Stretch x64 system(s) updated OpenSCAD to version 2015.03. The new user
> interface looks beatiful, but - while already a bit slow in previous
> versions - the model is really not usable anymore in the new version of
> OpenSCAD.
>
> I read that the laggy model viewer is some kind of Qt 5 problem that comes
> with complex models (well, I didn't find my model *that* complex, but my
> computers have a different opinion, obviously) in version 2015.03 and
> cannot
> be solved. Therefore I tried to downgrade to version 2014.03 by downloading
> the binaries from http://www.openscad.org/downloads.html.
>
> That worked on my netbook - the model is still laggy but it's possible to
> work with it. On my desktop computer which has 2 monitors I didn't succeed.
> When I try to run OpenSCAD from the console I get a
> "Speicherzugriffsfehler"
> which translate from German as "Segmentation Fault" (at least I think so).
>
> What can I do now? I would like to edit my model in a not too old version
> of
> OpenSCAD. Version 2015.03 seems to be unusable and version 2014.03 does not
> even start :-(
>
> Can you help me to make one version work?
>
> Thank you in advance!
>
> Marcel
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/OpenScad-2014-03-Segmentation-Fault-tp14800.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151127/006b8569/attachment-0001.html>

From Torsten.Paul at gmx.de  Fri Nov 27 15:25:33 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Fri, 27 Nov 2015 21:25:33 +0100
Subject: [OpenSCAD] OpenScad 2014.03 - Segmentation Fault
In-Reply-To: <1448649064464-14800.post@n5.nabble.com>
References: <1448649064464-14800.post@n5.nabble.com>
Message-ID: <5658BC3D.4010908@gmx.de>

Maybe try the snapshot builds that are still built against Qt4.

The package is called openscad-nightly so it can be installed in parallel
to the normal repository version.

The Debian8 version works on Debian/testing too (that's how I use it).
Unfortunately OBS will not support Stretch until it's officially released.

See http://www.openscad.org/downloads.html#snapshots

ciao,
  Torsten.


From Torsten.Paul at gmx.de  Fri Nov 27 16:24:43 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Fri, 27 Nov 2015 22:24:43 +0100
Subject: [OpenSCAD] libigl: anyone poked at it for CGAL (partial)
 replacement?
In-Reply-To: <CAGV6i+M34uWiOGWJROyoLv0SL1sUoZN4HO0CGL_LahWAOe2xCg@mail.gmail.com>
References: <1448570318134-14769.post@n5.nabble.com>
	<CAGV6i+N3fq_TpacBKwdO3yDjUc0sS8TnkFfQT2c63_efh8OoAw@mail.gmail.com>
	<3ACC64E9-3A84-47DA-A5FB-637D5944B6FB@plumb.org>
	<CAGV6i+O2+xYwrJcq-sip3z1nsL8Z8b28c7UqxUQBb1s+-iKFVA@mail.gmail.com>
	<CAEbsasRGGoK7N89Q9RXGWjCTeSGPBv=gTXombfAYx_HPbyNcBA@mail.gmail.com>
	<CAGV6i+PRCz7nYYScWY8OB=pep2DfXjMoRM_evYC-hM8fX4KPMQ@mail.gmail.com>
	<CAEbsasQ4DxeDJe1nq_5nNSsk5wVb56WCJDQerHf6g6bu+0dZPg@mail.gmail.com>
	<CAGV6i+MF95fHYN4Kye=Oh5JUQUoG0db+zmszauZR1_skkegm_w@mail.gmail.com>
	<CAGV6i+PG3NAYeR4J1q8eaK3Ra3gtw9zCOXFDdeHOLABLZOMOhg@mail.gmail.com>
	<CAGV6i+P7Zd468iULwsZazVa2dDdne7rTt63zHyuYJeC5yMv0HA@mail.gmail.com>
	<FFF30940-E28A-4344-ACD6-4D53DE9F4422@kintel.net>
	<CAGV6i+M34uWiOGWJROyoLv0SL1sUoZN4HO0CGL_LahWAOe2xCg@mail.gmail.com>
Message-ID: <5658CA1B.4060405@gmx.de>

On 11/27/2015 06:36 PM, doug moen wrote:
> It's closed source, unfortunately. It's one of the products of a
> research group at Inria, and it's a fascinating window into what can be
> accomplished by a small group of people, and what's technically possible.
> 
Yeah, it's quite interesting stuff.

Although we are only allowed to look through the closed windows and
watch what they can do with more the a million of ?. It makes me a
bit sad the EU funds research that is not open.

ciao,
  Torsten.



From marius at kintel.net  Fri Nov 27 21:50:39 2015
From: marius at kintel.net (Marius Kintel)
Date: Fri, 27 Nov 2015 21:50:39 -0500
Subject: [OpenSCAD] OpenScad 2014.03 - Segmentation Fault
In-Reply-To: <5658BC3D.4010908@gmx.de>
References: <1448649064464-14800.post@n5.nabble.com> <5658BC3D.4010908@gmx.de>
Message-ID: <AF62A225-50E1-4D74-B8F6-7242F5996934@kintel.net>

The laggy UI behaviour appears to be a problem when using some version of the X11 port of Qt5.
Do we know what the cause of this problem is? Can it be solved by upgrading Qt or are we doing something fishy in the UI code of OpenSCAD itself?
As this question pops up with increasing frequency, it sounds like a good candidate for the FAQ: https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/FAQ

 -Marius



From spindoc at roundtray.yeara.net  Sat Nov 28 13:55:11 2015
From: spindoc at roundtray.yeara.net (Spindoctor)
Date: Sat, 28 Nov 2015 11:55:11 -0700 (MST)
Subject: [OpenSCAD] OpenScad 2014.03 - Segmentation Fault
In-Reply-To: <5658BC3D.4010908@gmx.de>
References: <1448649064464-14800.post@n5.nabble.com> <5658BC3D.4010908@gmx.de>
Message-ID: <1448736911988-14805.post@n5.nabble.com>

Thank you for your answers!

So I tried to install OpenSCAD 2015.11 on Debian Stretch x64 from the
development snapshots. I didn't succeed because of a missing dependency:

$ sudo aptitude install openscad-nightly
The following NEW packages will be installed:
  libboost-filesystem1.55.0{a} libboost-program-options1.55.0{a}
libboost-regex1.55.0{a} 
  libboost-system1.55.0{a} libboost-thread1.55.0{a} libglew1.10{a}
openscad-nightly{b} 
0 packages upgraded, 7 newly installed, 0 to remove and 45 not upgraded.
Need to get 4363 kB of archives. After unpacking 14.8 MB will be used.
The following packages have unmet dependencies:
 openscad-nightly : Depends: libcgal10 which is a virtual package.
                    Depends: libqscintilla2-11 which is a virtual package.
The following actions will resolve these dependencies:

     Keep the following packages at their current version:
1)     openscad-nightly [Not Installed]                   



Accept this solution? [Y/n/q/?] n

*** No more solutions available ***

Is there a possibility to solve that issue or do I have any other choices?



--
View this message in context: http://forum.openscad.org/OpenScad-2014-03-Segmentation-Fault-tp14800p14805.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sat Nov 28 14:27:31 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sat, 28 Nov 2015 20:27:31 +0100
Subject: [OpenSCAD] OpenScad 2014.03 - Segmentation Fault
In-Reply-To: <1448736911988-14805.post@n5.nabble.com>
References: <1448649064464-14800.post@n5.nabble.com> <5658BC3D.4010908@gmx.de>
	<1448736911988-14805.post@n5.nabble.com>
Message-ID: <565A0023.8040202@gmx.de>

On 11/28/2015 07:55 PM, Spindoctor wrote:
> So I tried to install OpenSCAD 2015.11 on Debian Stretch x64 from the
> development snapshots. I didn't succeed because of a missing dependency:
> 
Hmm, looks like it still works for me as it did install those dependencies
before and they are still there.

Unfortunately it seems Ubuntu decided to package opencsg with a different
package name in 15.10, so that does not work either :-(.

That should still leave 2 options:

* install those missing dependencies from stable
* build from source following the instructions on github

ciao,
  Torsten.



From clusbytaylor at gmail.com  Sat Nov 28 15:46:06 2015
From: clusbytaylor at gmail.com (ChrisLT)
Date: Sat, 28 Nov 2015 13:46:06 -0700 (MST)
Subject: [OpenSCAD] rotate_extrude issue
In-Reply-To: <1395927820846-7491.post@n5.nabble.com>
References: <1395406039010-7442.post@n5.nabble.com>
	<1395886535982-7482.post@n5.nabble.com>
	<1395927820846-7491.post@n5.nabble.com>
Message-ID: <1448743566336-14807.post@n5.nabble.com>

It may be reasonable to extrude by rotation about the Z axis, but it is not
at all obvious.
Rotation about the Y axis would be more obvious and just as useful.
I think the documentation should explicitly state that the 2D object must be
in the XY plane
and gets rotated by 90 degrees into the XZ plane before being extruded.
Thus, positive Y values
become positive Z values in the extrusion.
As I have only just started using OpenSCAD, I thought I'd ask in the forum
before offering to edit
the documentation.



--
View this message in context: http://forum.openscad.org/rotate-extrude-issue-tp7442p14807.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jdawgaz at gmail.com  Sat Nov 28 17:17:47 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Sat, 28 Nov 2015 15:17:47 -0700
Subject: [OpenSCAD] OpenScad 2014.03 - Segmentation Fault
In-Reply-To: <565A0023.8040202@gmx.de>
References: <1448649064464-14800.post@n5.nabble.com> <5658BC3D.4010908@gmx.de>
	<1448736911988-14805.post@n5.nabble.com> <565A0023.8040202@gmx.de>
Message-ID: <CAMyDR6JEfEYpXycjsjA6eGR4je+CA=MrYEDCyb0Q2evcHhMfXA@mail.gmail.com>

are there packages named qscintilla and cgal that need to be installed?


--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson

On Sat, Nov 28, 2015 at 12:27 PM, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 11/28/2015 07:55 PM, Spindoctor wrote:
> > So I tried to install OpenSCAD 2015.11 on Debian Stretch x64 from the
> > development snapshots. I didn't succeed because of a missing dependency:
> >
> Hmm, looks like it still works for me as it did install those dependencies
> before and they are still there.
>
> Unfortunately it seems Ubuntu decided to package opencsg with a different
> package name in 15.10, so that does not work either :-(.
>
> That should still leave 2 options:
>
> * install those missing dependencies from stable
> * build from source following the instructions on github
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151128/a1c204e9/attachment.html>

From nop.head at gmail.com  Sat Nov 28 18:38:43 2015
From: nop.head at gmail.com (nop head)
Date: Sat, 28 Nov 2015 23:38:43 +0000
Subject: [OpenSCAD] rotate_extrude issue
In-Reply-To: <1448743566336-14807.post@n5.nabble.com>
References: <1395406039010-7442.post@n5.nabble.com>
	<1395886535982-7482.post@n5.nabble.com>
	<1395927820846-7491.post@n5.nabble.com>
	<1448743566336-14807.post@n5.nabble.com>
Message-ID: <CAEEmnrPFYheh1jkxAW4ThagTjRgxCGsQVPmrccN_JrUgvu65jw@mail.gmail.com>

>I think the documentation should explicitly state that the 2D object must
bein the XY plane

All 2D objects are in the XY, how could they be otherwise, there is no Z
in  2D?


On 28 November 2015 at 20:46, ChrisLT <clusbytaylor at gmail.com> wrote:

> It may be reasonable to extrude by rotation about the Z axis, but it is not
> at all obvious.
> Rotation about the Y axis would be more obvious and just as useful.
> I think the documentation should explicitly state that the 2D object must
> be
> in the XY plane
> and gets rotated by 90 degrees into the XZ plane before being extruded.
> Thus, positive Y values
> become positive Z values in the extrusion.
> As I have only just started using OpenSCAD, I thought I'd ask in the forum
> before offering to edit
> the documentation.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/rotate-extrude-issue-tp7442p14807.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151128/12c753ec/attachment.html>

From spindoc at roundtray.yeara.net  Sun Nov 29 05:09:09 2015
From: spindoc at roundtray.yeara.net (Spindoctor)
Date: Sun, 29 Nov 2015 03:09:09 -0700 (MST)
Subject: [OpenSCAD] OpenScad 2014.03 - Segmentation Fault
In-Reply-To: <CAMyDR6JEfEYpXycjsjA6eGR4je+CA=MrYEDCyb0Q2evcHhMfXA@mail.gmail.com>
References: <1448649064464-14800.post@n5.nabble.com> <5658BC3D.4010908@gmx.de>
	<1448736911988-14805.post@n5.nabble.com> <565A0023.8040202@gmx.de>
	<CAMyDR6JEfEYpXycjsjA6eGR4je+CA=MrYEDCyb0Q2evcHhMfXA@mail.gmail.com>
Message-ID: <1448791749572-14810.post@n5.nabble.com>

Yes!

cgal:
libcgal11v5 (https://packages.debian.org/stretch/libcgal11v5)
or others (https://packages.debian.org/search?suite=stretch&keywords=cgal)

qscintilla:
libqscintilla2-12v5
(https://packages.debian.org/stretch/libqscintilla2-12v5)
or others
(https://packages.debian.org/search?suite=stretchkeywords=qscintilla)

Can I use those packages?



--
View this message in context: http://forum.openscad.org/OpenScad-2014-03-Segmentation-Fault-tp14800p14810.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From spindoc at roundtray.yeara.net  Sun Nov 29 06:03:00 2015
From: spindoc at roundtray.yeara.net (Spindoctor)
Date: Sun, 29 Nov 2015 04:03:00 -0700 (MST)
Subject: [OpenSCAD] OpenScad 2014.03 - Segmentation Fault
In-Reply-To: <1448791749572-14810.post@n5.nabble.com>
References: <1448649064464-14800.post@n5.nabble.com> <5658BC3D.4010908@gmx.de>
	<1448736911988-14805.post@n5.nabble.com> <565A0023.8040202@gmx.de>
	<CAMyDR6JEfEYpXycjsjA6eGR4je+CA=MrYEDCyb0Q2evcHhMfXA@mail.gmail.com>
	<1448791749572-14810.post@n5.nabble.com>
Message-ID: <1448794980249-14811.post@n5.nabble.com>

... i just tried to replace the dependencies with the newer versions in the
debian package but that didn't do the trick ;-)

$ openscad-nightly 
openscad-nightly: error while loading shared libraries: libCGAL.so.10:
cannot open shared object file: No such file or directory



--
View this message in context: http://forum.openscad.org/OpenScad-2014-03-Segmentation-Fault-tp14800p14811.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From clusbytaylor at gmail.com  Sun Nov 29 06:28:13 2015
From: clusbytaylor at gmail.com (ChrisLT)
Date: Sun, 29 Nov 2015 04:28:13 -0700 (MST)
Subject: [OpenSCAD] rotate_extrude issue
In-Reply-To: <CAEEmnrPFYheh1jkxAW4ThagTjRgxCGsQVPmrccN_JrUgvu65jw@mail.gmail.com>
References: <1395406039010-7442.post@n5.nabble.com>
	<1395886535982-7482.post@n5.nabble.com>
	<1395927820846-7491.post@n5.nabble.com>
	<1448743566336-14807.post@n5.nabble.com>
	<CAEEmnrPFYheh1jkxAW4ThagTjRgxCGsQVPmrccN_JrUgvu65jw@mail.gmail.com>
Message-ID: <1448796493694-14812.post@n5.nabble.com>

Yes, all 2D objects are created in the XY plane, but can be rotated into any
other plane. If I have an object in the XY plane I would expect to rotate it
about the Y axis, which is clearly its axis of symmetry, not for it to be
flipped first (or, equivalently, last) about the X axis into the XZ plane.
I am merely saying that I found this counter-intuitive, and feel that it
should be explicitly documented. The documentation on rotating a polygon
does go some way towards saying this, if you read it carefully, but it
should, in my view, be more clearly stated earlier.
If you are very familiar with OpenSCAD you may not realise that this looks
strange to a newcomer, but I assure you it does.



--
View this message in context: http://forum.openscad.org/rotate-extrude-issue-tp7442p14812.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Sun Nov 29 07:01:19 2015
From: nop.head at gmail.com (nop head)
Date: Sun, 29 Nov 2015 12:01:19 +0000
Subject: [OpenSCAD] rotate_extrude issue
In-Reply-To: <1448796493694-14812.post@n5.nabble.com>
References: <1395406039010-7442.post@n5.nabble.com>
	<1395886535982-7482.post@n5.nabble.com>
	<1395927820846-7491.post@n5.nabble.com>
	<1448743566336-14807.post@n5.nabble.com>
	<CAEEmnrPFYheh1jkxAW4ThagTjRgxCGsQVPmrccN_JrUgvu65jw@mail.gmail.com>
	<1448796493694-14812.post@n5.nabble.com>
Message-ID: <CAEEmnrN4b1zRJhckAaGU6h4nP6c=SXnTGY6A7VSRz9L0CZzp+g@mail.gmail.com>

I am not arguing against clearer documentation but trying to explain why it
is as it is. Once you rotate extrude an object it has one special axis (the
axis of rotation). In 3D Z is the special axis so it makes sense to me to
orientate it upwards, making it the same as a cylinder.

Although it may seem you can rotate 2D objects around any axis it doesn't
make any sense because they remain 2D objects, with no Z dimension. The
only way to make them 3D objects is to extrude them. However I am surprised
by this: -

rotate([45, 0, 0])
    circle(100);

Shows a tilted circle with F5 and a flat ellipse with F6. Both seem to be
bugs to me. X, Y rotations should be ignored when applied to a 2D object.
It seems that OpenCSG shows the rotated 2D object in 3D space but CGAL does
an implicit projection to 2D.

linear_extrude(height = 100)
   rotate([45, 0, 0])
      circle(100);

Makes a cylinder with an elliptical cross section in both F5 and F6, so
again an implicit projection before the extrude.

On 29 November 2015 at 11:28, ChrisLT <clusbytaylor at gmail.com> wrote:

> Yes, all 2D objects are created in the XY plane, but can be rotated into
> any
> other plane. If I have an object in the XY plane I would expect to rotate
> it
> about the Y axis, which is clearly its axis of symmetry, not for it to be
> flipped first (or, equivalently, last) about the X axis into the XZ plane.
> I am merely saying that I found this counter-intuitive, and feel that it
> should be explicitly documented. The documentation on rotating a polygon
> does go some way towards saying this, if you read it carefully, but it
> should, in my view, be more clearly stated earlier.
> If you are very familiar with OpenSCAD you may not realise that this looks
> strange to a newcomer, but I assure you it does.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/rotate-extrude-issue-tp7442p14812.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151129/ced98a34/attachment-0001.html>

From Torsten.Paul at gmx.de  Sun Nov 29 09:41:46 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 29 Nov 2015 15:41:46 +0100
Subject: [OpenSCAD] OpenScad 2014.03 - Segmentation Fault
In-Reply-To: <1448794980249-14811.post@n5.nabble.com>
References: <1448649064464-14800.post@n5.nabble.com> <5658BC3D.4010908@gmx.de>
	<1448736911988-14805.post@n5.nabble.com> <565A0023.8040202@gmx.de>
	<CAMyDR6JEfEYpXycjsjA6eGR4je+CA=MrYEDCyb0Q2evcHhMfXA@mail.gmail.com>
	<1448791749572-14810.post@n5.nabble.com>
	<1448794980249-14811.post@n5.nabble.com>
Message-ID: <565B0EAA.9060905@gmx.de>

On 11/29/2015 12:03 PM, Spindoctor wrote:
> ... i just tried to replace the dependencies with the newer versions in the
> debian package but that didn't do the trick ;-)
> 
How did you do that?

What I meant is basically what's described there (but with different
values):
http://serverfault.com/questions/22414/how-can-i-run-debian-stable-but-install-some-packages-from-testing

I'm running with

  testing = 750
  stable = 400
  unstable = 50

which gives testing the priority but allows to resolve packages from
stable too.

In addition that gives the possibility to specifically override the
selection for some packages, e.g. I tried compiling against an older
version of libglew-dev which is at version 1.13 in testing by:

sudo apt install libglew-dev/stable

which downgrades to 1.10 from stable. This can be reverted by simply
running the install without the "/stable" again to select the
version from testing.

ciao,
  Torsten.



From jdawgaz at gmail.com  Sun Nov 29 10:02:55 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Sun, 29 Nov 2015 08:02:55 -0700
Subject: [OpenSCAD] OpenScad 2014.03 - Segmentation Fault
In-Reply-To: <1448794980249-14811.post@n5.nabble.com>
References: <1448649064464-14800.post@n5.nabble.com> <5658BC3D.4010908@gmx.de>
	<1448736911988-14805.post@n5.nabble.com> <565A0023.8040202@gmx.de>
	<CAMyDR6JEfEYpXycjsjA6eGR4je+CA=MrYEDCyb0Q2evcHhMfXA@mail.gmail.com>
	<1448791749572-14810.post@n5.nabble.com>
	<1448794980249-14811.post@n5.nabble.com>
Message-ID: <CAMyDR6L+sMmWUJUBg+fGCcky2aW=i--68s9xJyNQXTS73qTjRA@mail.gmail.com>

On Sun, Nov 29, 2015 at 4:03 AM, Spindoctor <spindoc at roundtray.yeara.net>
wrote:

> cannot open shared object file


Don't know if this will help:

sudo ldconfig

--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151129/aa4d2eeb/attachment.html>

From spindoc at roundtray.yeara.net  Sun Nov 29 11:48:21 2015
From: spindoc at roundtray.yeara.net (Spindoctor)
Date: Sun, 29 Nov 2015 09:48:21 -0700 (MST)
Subject: [OpenSCAD] OpenScad 2014.03 - Segmentation Fault
In-Reply-To: <CAMyDR6L+sMmWUJUBg+fGCcky2aW=i--68s9xJyNQXTS73qTjRA@mail.gmail.com>
References: <1448649064464-14800.post@n5.nabble.com> <5658BC3D.4010908@gmx.de>
	<1448736911988-14805.post@n5.nabble.com> <565A0023.8040202@gmx.de>
	<CAMyDR6JEfEYpXycjsjA6eGR4je+CA=MrYEDCyb0Q2evcHhMfXA@mail.gmail.com>
	<1448791749572-14810.post@n5.nabble.com>
	<1448794980249-14811.post@n5.nabble.com>
	<CAMyDR6L+sMmWUJUBg+fGCcky2aW=i--68s9xJyNQXTS73qTjRA@mail.gmail.com>
Message-ID: <1448815701345-14816.post@n5.nabble.com>

Hi again!

@tp3:
I just changed the file DEBIAN/control in the current development package to
the present versions of the libraries. But as I said, this just resulted in
an error message, once openscad was installed.

@jdawgaz:
Thanks for the hint, but that didn't change the error message as well.

In the mean time I compiled OpenSCAD 2015.11.29 from github myself. I
managed to compile and start it.

However, also in this version the tapeholder model is way too laggy to work
with it - especially when I drag the model around to rotate it (this usually
leads to a "timeout" of several minutes). So either the bug is still present
in the current version of OpenSCAD or there is some different issue...

Is this maybe an issue with the display drivers I have installed? I just use
the graphics chip on my intel-processor so it's not high end, but I think it
should be enough...





--
View this message in context: http://forum.openscad.org/OpenScad-2014-03-Segmentation-Fault-tp14800p14816.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sun Nov 29 11:58:48 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 29 Nov 2015 17:58:48 +0100
Subject: [OpenSCAD] OpenScad 2014.03 - Segmentation Fault
In-Reply-To: <1448815701345-14816.post@n5.nabble.com>
References: <1448649064464-14800.post@n5.nabble.com> <5658BC3D.4010908@gmx.de>
	<1448736911988-14805.post@n5.nabble.com> <565A0023.8040202@gmx.de>
	<CAMyDR6JEfEYpXycjsjA6eGR4je+CA=MrYEDCyb0Q2evcHhMfXA@mail.gmail.com>
	<1448791749572-14810.post@n5.nabble.com>
	<1448794980249-14811.post@n5.nabble.com>
	<CAMyDR6L+sMmWUJUBg+fGCcky2aW=i--68s9xJyNQXTS73qTjRA@mail.gmail.com>
	<1448815701345-14816.post@n5.nabble.com>
Message-ID: <565B2EC8.9000507@gmx.de>

On 11/29/2015 05:48 PM, Spindoctor wrote:
> In the mean time I compiled OpenSCAD 2015.11.29 from github myself. I
> managed to compile and start it.
> 
Could you try rebuilding with:

qmake CONFIG-=debug
make clean
make

ciao,
  Torsten.


From spindoc at roundtray.yeara.net  Sun Nov 29 12:17:09 2015
From: spindoc at roundtray.yeara.net (Spindoctor)
Date: Sun, 29 Nov 2015 10:17:09 -0700 (MST)
Subject: [OpenSCAD] OpenScad 2014.03 - Segmentation Fault
In-Reply-To: <565B2EC8.9000507@gmx.de>
References: <1448649064464-14800.post@n5.nabble.com> <5658BC3D.4010908@gmx.de>
	<1448736911988-14805.post@n5.nabble.com> <565A0023.8040202@gmx.de>
	<CAMyDR6JEfEYpXycjsjA6eGR4je+CA=MrYEDCyb0Q2evcHhMfXA@mail.gmail.com>
	<1448791749572-14810.post@n5.nabble.com>
	<1448794980249-14811.post@n5.nabble.com>
	<CAMyDR6L+sMmWUJUBg+fGCcky2aW=i--68s9xJyNQXTS73qTjRA@mail.gmail.com>
	<1448815701345-14816.post@n5.nabble.com> <565B2EC8.9000507@gmx.de>
Message-ID: <1448817429782-14818.post@n5.nabble.com>

Hallo Torsten!

Thanks again for your reply!

I just tried to compile with

qmake CONFIG-=debug

Is there a way to confirm that this effected the actual program?

When I open the tapeholder model, there is no change - still as laggy as
before :(

Best,

Marcel



--
View this message in context: http://forum.openscad.org/OpenScad-2014-03-Segmentation-Fault-tp14800p14818.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sun Nov 29 12:36:00 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 29 Nov 2015 18:36:00 +0100
Subject: [OpenSCAD] OpenScad 2014.03 - Segmentation Fault
In-Reply-To: <1448817429782-14818.post@n5.nabble.com>
References: <1448649064464-14800.post@n5.nabble.com> <5658BC3D.4010908@gmx.de>
	<1448736911988-14805.post@n5.nabble.com> <565A0023.8040202@gmx.de>
	<CAMyDR6JEfEYpXycjsjA6eGR4je+CA=MrYEDCyb0Q2evcHhMfXA@mail.gmail.com>
	<1448791749572-14810.post@n5.nabble.com>
	<1448794980249-14811.post@n5.nabble.com>
	<CAMyDR6L+sMmWUJUBg+fGCcky2aW=i--68s9xJyNQXTS73qTjRA@mail.gmail.com>
	<1448815701345-14816.post@n5.nabble.com> <565B2EC8.9000507@gmx.de>
	<1448817429782-14818.post@n5.nabble.com>
Message-ID: <565B3780.9020905@gmx.de>

On 11/29/2015 06:17 PM, Spindoctor wrote:
> I just tried to compile with
> 
> qmake CONFIG-=debug
> 
> Is there a way to confirm that this effected the actual program?
> 
I don't know if that's somewhere visible in the application. The
compile command lines should show "-O2" instead of "-g".

On my system the difference is very much noticeable, e.g. with
the "Basics->CSG" scripts from the examples.

So maybe we are looking at different issues? :/

This is the full example, I'm running (the experimental parameter
should not really matter, I'll try to rule it out later, just
to be safe)

QT_SELECT=5 qmake CONFIG+=experimental CONFIG+=debug
./openscad examples/Basics/CSG.scad

=> lagging with mouse movement

QT_SELECT=5 qmake CONFIG+=experimental CONFIG-=debug
./openscad examples/Basics/CSG.scad

=> no lag anymore

It's still possible to build against Qt4 after installing at
least libqt4-dev using QT_SELECT=4.

ciao,
  Torsten.



From spindoc at roundtray.yeara.net  Sun Nov 29 12:44:29 2015
From: spindoc at roundtray.yeara.net (Spindoctor)
Date: Sun, 29 Nov 2015 10:44:29 -0700 (MST)
Subject: [OpenSCAD] OpenScad 2014.03 - Segmentation Fault
In-Reply-To: <565B3780.9020905@gmx.de>
References: <1448736911988-14805.post@n5.nabble.com> <565A0023.8040202@gmx.de>
	<CAMyDR6JEfEYpXycjsjA6eGR4je+CA=MrYEDCyb0Q2evcHhMfXA@mail.gmail.com>
	<1448791749572-14810.post@n5.nabble.com>
	<1448794980249-14811.post@n5.nabble.com>
	<CAMyDR6L+sMmWUJUBg+fGCcky2aW=i--68s9xJyNQXTS73qTjRA@mail.gmail.com>
	<1448815701345-14816.post@n5.nabble.com> <565B2EC8.9000507@gmx.de>
	<1448817429782-14818.post@n5.nabble.com> <565B3780.9020905@gmx.de>
Message-ID: <1448819069641-14820.post@n5.nabble.com>

Ok!

I will try that once I'm back home (or tomorrow in case it gets late...)

Thank you!

Marcel



--
View this message in context: http://forum.openscad.org/OpenScad-2014-03-Segmentation-Fault-tp14800p14820.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sun Nov 29 17:22:02 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sun, 29 Nov 2015 15:22:02 -0700 (MST)
Subject: [OpenSCAD] Use of Raw for Code markup - Re: Rotate Spoke try 2
In-Reply-To: <1448623769967-14788.post@n5.nabble.com>
References: <1448424860960-14747.post@n5.nabble.com>
	<1448542984820-14759.post@n5.nabble.com>
	<1448571200657-14771.post@n5.nabble.com>
	<1448578603764-14776.post@n5.nabble.com>
	<1448592698845-14779.post@n5.nabble.com>
	<1448623769967-14788.post@n5.nabble.com>
Message-ID: <1448835722121-14821.post@n5.nabble.com>

Sorry for side-tracking...

MichaelAtOz wrote
> * note that unfortunately using More/Raw-text gets dropped when it goes
> thru the mailing list. Prob don't want to use that.


Parkinbot wrote
> In this case I could have done it, because the code is a short liner. But
> generally it is not a good idea, as you get line breaks (copy & paste will
> not work) and also loose code alignment. So I prefer to follow the link at
> the bottom of the mail. 
> 
> By the way, I guess the prob is not new, so why has it not been addressed
> (or even solved) til now?

I've been looking thru Nabble to try to figure out what's going on.
I've now got to the code minus one step (which is a binary I have not, yet,
had access to the source)
I'm thinking that it is a security setting, as theoretically, you could put
malicious html which then gets placed in an email.

If the 'message is in HTML Format' is ticked, Raw works, but the plaintext
you type is then 'formatted' so you loose spacing etc.

I'm hoping to get some combo of the HTML format, but with it preserving
basic layout, but it is slow learning Nabble. Or alternatively an equivalent
of Raw, but say 'Code' which addresses it somehow.

> "So I prefer to follow the link at the bottom of the mail"

As long as you realise that a majority of people here seem to rely on the
mailing list and will not see Raw. In case you don't see your own emailed
posts, this is what your post looked like:

-----------------------------------------------
in 2D you might be looking for this, e.g. a 7-gon:


in 3D you get some results with 


which are mostly not satisfying. If you want do something like a
dodecahedron, you'd calculate each corner point and face and define a
polyhedron, for which you can use the "new" vector stuff. I give an example
for a 2D hexagon:


But there are also other, more combinatoric methods for defining bodies.
E.g. a dodecahedron: 

------------------------------------------------

I suggest marking code as, 

/itallics, /

or inside 

> quotes, using the %lt quote %gt markup. But don't use the 'Quote' button -
> it will replace your text with the prev. post.

It may depend on mailman setting tho. Unfortunately I don't have a test
mailman to play with. So the below is part of the test. 
Y'all let me know of you don't get the two identical code bits in your mail,
(italics and then quoted), and I can check mailman settings.

/fudge=0; // this factor is dispensible 
//polygon cylinder stuff
p = [for (k=[0:NoArm-1]) let (angle=360/NoArm*k + 90)
          [cos(angle), sin(angle)]
      ]; /


> fudge=0; // this factor is dispensible 
> //polygon cylinder stuff
> p = [for (k=[0:NoArm-1]) let (angle=360/NoArm*k + 90)
>           [cos(angle), sin(angle)]
>       ]; 





-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Rotate-Spoke-try-2-tp14747p14821.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sun Nov 29 17:34:02 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sun, 29 Nov 2015 15:34:02 -0700 (MST)
Subject: [OpenSCAD] Use of Raw for Code markup - Re: Rotate Spoke try 2
In-Reply-To: <1448835722121-14821.post@n5.nabble.com>
References: <1448424860960-14747.post@n5.nabble.com>
	<1448542984820-14759.post@n5.nabble.com>
	<1448571200657-14771.post@n5.nabble.com>
	<1448578603764-14776.post@n5.nabble.com>
	<1448592698845-14779.post@n5.nabble.com>
	<1448623769967-14788.post@n5.nabble.com>
	<1448835722121-14821.post@n5.nabble.com>
Message-ID: <1448836442523-14822.post@n5.nabble.com>

OK, for my mailman settings, itallics was a flop, but the quote method
worked.

Changed my settings. Was MIME, now Plaintext. Retesting... (itallics, quote)

/fudge=0; // this factor is dispensible
//polygon cylinder stuff
p = [for (k=[0:NoArm-1]) let (angle=360/NoArm*k + 90)
          [cos(angle), sin(angle)]
      ];/



> fudge=0; // this factor is dispensible
> //polygon cylinder stuff
> p = [for (k=[0:NoArm-1]) let (angle=360/NoArm*k + 90)
>           [cos(angle), sin(angle)]
>       ];





-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Rotate-Spoke-try-2-tp14747p14822.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From spindoc at roundtray.yeara.net  Sun Nov 29 17:43:11 2015
From: spindoc at roundtray.yeara.net (Spindoctor)
Date: Sun, 29 Nov 2015 15:43:11 -0700 (MST)
Subject: [OpenSCAD] OpenScad 2014.03 - Segmentation Fault
In-Reply-To: <565B3780.9020905@gmx.de>
References: <1448736911988-14805.post@n5.nabble.com> <565A0023.8040202@gmx.de>
	<CAMyDR6JEfEYpXycjsjA6eGR4je+CA=MrYEDCyb0Q2evcHhMfXA@mail.gmail.com>
	<1448791749572-14810.post@n5.nabble.com>
	<1448794980249-14811.post@n5.nabble.com>
	<CAMyDR6L+sMmWUJUBg+fGCcky2aW=i--68s9xJyNQXTS73qTjRA@mail.gmail.com>
	<1448815701345-14816.post@n5.nabble.com> <565B2EC8.9000507@gmx.de>
	<1448817429782-14818.post@n5.nabble.com> <565B3780.9020905@gmx.de>
Message-ID: <1448836991033-14823.post@n5.nabble.com>

Hi!

I tried another compilation and tried exactly your code. Here's the result:
http://nopaste.inside-irc.net/paste/P3rATweGLyt/.

Then I tried to open the CSG example. It runs quite lag-free (I didn't try
it with debug enabled, sorry). My model
(https://github.com/speendo/tapeholder) however is still much too slow to
work with it...

Maybe it's really something about my model?

Or it's another problem about the 2015-versions?



--
View this message in context: http://forum.openscad.org/OpenScad-2014-03-Segmentation-Fault-tp14800p14823.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sun Nov 29 17:45:34 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sun, 29 Nov 2015 15:45:34 -0700 (MST)
Subject: [OpenSCAD] Use of Raw for Code markup - Re: Rotate Spoke try 2
In-Reply-To: <1448836442523-14822.post@n5.nabble.com>
References: <1448424860960-14747.post@n5.nabble.com>
	<1448542984820-14759.post@n5.nabble.com>
	<1448571200657-14771.post@n5.nabble.com>
	<1448578603764-14776.post@n5.nabble.com>
	<1448592698845-14779.post@n5.nabble.com>
	<1448623769967-14788.post@n5.nabble.com>
	<1448835722121-14821.post@n5.nabble.com>
	<1448836442523-14822.post@n5.nabble.com>
Message-ID: <1448837134271-14824.post@n5.nabble.com>

Same result.

So, for now, if you want to flag code, the best way seems to be to use the
quote & /quote inside <  &  >.

I'll see about getting a button to do this.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Rotate-Spoke-try-2-tp14747p14824.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From spindoc at roundtray.yeara.net  Sun Nov 29 17:50:31 2015
From: spindoc at roundtray.yeara.net (Spindoctor)
Date: Sun, 29 Nov 2015 15:50:31 -0700 (MST)
Subject: [OpenSCAD] OpenScad 2014.03 - Segmentation Fault
In-Reply-To: <1448836991033-14823.post@n5.nabble.com>
References: <565A0023.8040202@gmx.de>
	<CAMyDR6JEfEYpXycjsjA6eGR4je+CA=MrYEDCyb0Q2evcHhMfXA@mail.gmail.com>
	<1448791749572-14810.post@n5.nabble.com>
	<1448794980249-14811.post@n5.nabble.com>
	<CAMyDR6L+sMmWUJUBg+fGCcky2aW=i--68s9xJyNQXTS73qTjRA@mail.gmail.com>
	<1448815701345-14816.post@n5.nabble.com> <565B2EC8.9000507@gmx.de>
	<1448817429782-14818.post@n5.nabble.com> <565B3780.9020905@gmx.de>
	<1448836991033-14823.post@n5.nabble.com>
Message-ID: <1448837431371-14825.post@n5.nabble.com>

... I also just tried to compile with QT4 but didn't succeed because some
problem with scintilla:

# QT_SELECT=4 qmake CONFIG+=experimental CONFIG-=debug
WARNING: /home/openscad/scintilla.pri:31: Unable to find file for inclusion
qscintilla2
Project MESSAGE: Using local copy of qscintilla2.prf instead.
root at medienschwammerl-marcel:/home/openscad# make clean

[...]

# make
/usr/lib/x86_64-linux-gnu/qt4/bin/uic src/MainWindow.ui -o
objects/ui_MainWindow.h -tr _
/usr/lib/x86_64-linux-gnu/qt4/bin/uic src/Preferences.ui -o
objects/ui_Preferences.h -tr _
/usr/lib/x86_64-linux-gnu/qt4/bin/uic src/OpenCSGWarningDialog.ui -o
objects/ui_OpenCSGWarningDialog.h -tr _
/usr/lib/x86_64-linux-gnu/qt4/bin/uic src/AboutDialog.ui -o
objects/ui_AboutDialog.h -tr _
/usr/lib/x86_64-linux-gnu/qt4/bin/uic src/FontListDialog.ui -o
objects/ui_FontListDialog.h -tr _
/usr/lib/x86_64-linux-gnu/qt4/bin/uic src/ProgressWidget.ui -o
objects/ui_ProgressWidget.h -tr _
/usr/lib/x86_64-linux-gnu/qt4/bin/uic src/launchingscreen.ui -o
objects/ui_launchingscreen.h -tr _
/usr/lib/x86_64-linux-gnu/qt4/bin/uic src/LibraryInfoDialog.ui -o
objects/ui_LibraryInfoDialog.h -tr _
g++ -c -m64 -pipe -fno-strict-aliasing -frounding-math -DEIGEN_DONT_ALIGN
-I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
-I/usr/include/harfbuzz -I/usr/include/freetype2 -I/usr/include/freetype2
-O2 -D_REENTRANT -Wall -W -Wno-unused-local-typedefs -DQT_WEBKIT
-DOPENSCAD_VERSION=2015.11.29 -DOPENSCAD_SHORTVERSION=2015.11.29
-DOPENSCAD_YEAR=2015.0 -DOPENSCAD_MONTH=11.0 -DOPENSCAD_DAY=29.0
-DENABLE_EXPERIMENTAL -DENABLE_CGAL -DENABLE_OPENCSG -DUSE_SCINTILLA_EDITOR
-DQT_NO_DEBUG -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
-I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/eigen3
-I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui
-I/usr/include/qt4/QtOpenGL -I/usr/include/qt4 -Isrc -I/usr/include/qt4
-Isrc/libtess2/Include -I/usr/X11R6/include -Iobjects -o
objects/scintillaeditor.o src/scintillaeditor.cpp
In file included from src/scintillaeditor.cpp:6:0:
src/scintillaeditor.h:8:32: fatal error: Qsci/qsciscintilla.h: No such file
or directory
compilation terminated.
Makefile:824: recipe for target 'objects/scintillaeditor.o' failed
make: *** [objects/scintillaeditor.o] Error 1



--
View this message in context: http://forum.openscad.org/OpenScad-2014-03-Segmentation-Fault-tp14800p14825.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sun Nov 29 19:05:13 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 30 Nov 2015 01:05:13 +0100
Subject: [OpenSCAD] OpenScad 2014.03 - Segmentation Fault
In-Reply-To: <1448837431371-14825.post@n5.nabble.com>
References: <565A0023.8040202@gmx.de>
	<CAMyDR6JEfEYpXycjsjA6eGR4je+CA=MrYEDCyb0Q2evcHhMfXA@mail.gmail.com>
	<1448791749572-14810.post@n5.nabble.com>
	<1448794980249-14811.post@n5.nabble.com>
	<CAMyDR6L+sMmWUJUBg+fGCcky2aW=i--68s9xJyNQXTS73qTjRA@mail.gmail.com>
	<1448815701345-14816.post@n5.nabble.com> <565B2EC8.9000507@gmx.de>
	<1448817429782-14818.post@n5.nabble.com> <565B3780.9020905@gmx.de>
	<1448836991033-14823.post@n5.nabble.com>
	<1448837431371-14825.post@n5.nabble.com>
Message-ID: <565B92B9.7090302@gmx.de>

On 11/29/2015 11:50 PM, Spindoctor wrote:
> ... I also just tried to compile with QT4 but didn't succeed because some
> problem with scintilla:
> 
> # QT_SELECT=4 qmake CONFIG+=experimental CONFIG-=debug
> WARNING: /home/openscad/scintilla.pri:31: Unable to find file for inclusion
> qscintilla2
> Project MESSAGE: Using local copy of qscintilla2.prf instead.
> root at medienschwammerl-marcel:/home/openscad# make clean
> 
There's a special qscintilla for each Qt version.

Qt5: libqt5scintilla2-dev
Qt4: libqscintilla2-dev

I suspect the issue you are seeing might not (or not only) be related
to the Qt4 -> Qt5 problems we have.
I think there were also some changes between 2014.03 and 2015.03 that
cause the model to be tessellated earlier to prevent CGAL from crying
about non-planar faces. Maybe that's what happens with your model.
Hopefully with the Qt4 qscintilla the compilation works, so we can
find out where the difference is coming from.

ciao,
  Torsten.



From marius at kintel.net  Sun Nov 29 19:25:43 2015
From: marius at kintel.net (Marius Kintel)
Date: Sun, 29 Nov 2015 19:25:43 -0500
Subject: [OpenSCAD] OpenScad 2014.03 - Segmentation Fault
In-Reply-To: <1448836991033-14823.post@n5.nabble.com>
References: <1448736911988-14805.post@n5.nabble.com> <565A0023.8040202@gmx.de>
	<CAMyDR6JEfEYpXycjsjA6eGR4je+CA=MrYEDCyb0Q2evcHhMfXA@mail.gmail.com>
	<1448791749572-14810.post@n5.nabble.com>
	<1448794980249-14811.post@n5.nabble.com>
	<CAMyDR6L+sMmWUJUBg+fGCcky2aW=i--68s9xJyNQXTS73qTjRA@mail.gmail.com>
	<1448815701345-14816.post@n5.nabble.com> <565B2EC8.9000507@gmx.de>
	<1448817429782-14818.post@n5.nabble.com> <565B3780.9020905@gmx.de>
	<1448836991033-14823.post@n5.nabble.com>
Message-ID: <AE46CDF4-FC7E-46C3-8C96-37C2B2F58907@kintel.net>

On Nov 29, 2015, at 17:43 PM, Spindoctor <spindoc at roundtray.yeara.net> wrote:
> 
> My model (https://github.com/speendo/tapeholder) however is still much too slow to
> work with it...
> 
> Maybe it's really something about my model?
> 
This model is going to render pretty slowly in Preview Mode.
The main reason is due to how the CSG operations are organized; it brings out the worst in preview performance, mostly due to use of complex objects as the positive argument to difference().
Try to do this, as a test:
In outer_part() and inner_part(), add render(convexity=3) to the first argument to your differences, like this:

[?]
    difference() {
        render(convexity=3) union() 
[?]

It will take some preprocessing, but rendering should be faster.

 -Marius

PS. This is independent from the Qt mouse lag issue




From oz.at.michael at gmail.com  Mon Nov 30 01:21:53 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sun, 29 Nov 2015 23:21:53 -0700 (MST)
Subject: [OpenSCAD] Can I force Animation to use "Render" instead of
	"Preview"?
Message-ID: <1448864513323-14828.post@n5.nabble.com>

Another dropped post. New user with external links as first post - anti SPAM
probably.

>From Bruno: (you animators should know this one)
=====================================================
I have a very complex animation that I am trying to Render as an animation.
Unfortunately, it looks terrible as a Preview. (The seams of objects I am
differencing have a film.) I would like to use Render on all 360 frames, but
don't want to render them one by one. Using animation would be great but it
produces Preview like results.


Sample:
https://dl.dropboxusercontent.com/u/310759/u/fuse_block_preview.png

    vs.
https://dl.dropboxusercontent.com/u/310759/u/fuse_block_render.png


.!# BrunoBronosky #!.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Can-I-force-Animation-to-use-Render-instead-of-Preview-tp14828.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Mon Nov 30 01:24:20 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sun, 29 Nov 2015 23:24:20 -0700 (MST)
Subject: [OpenSCAD] Can I force Animation to use "Render" instead of
	"Preview"?
In-Reply-To: <1448864513323-14828.post@n5.nabble.com>
References: <1448864513323-14828.post@n5.nabble.com>
Message-ID: <1448864660277-14829.post@n5.nabble.com>

I'm no expert on animation, you could try wrapping it in render() {...}



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Can-I-force-Animation-to-use-Render-instead-of-Preview-tp14828p14829.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From c.t.chin at szu.edu.cn  Mon Nov 30 03:12:58 2015
From: c.t.chin at szu.edu.cn (ctchin)
Date: Mon, 30 Nov 2015 01:12:58 -0700 (MST)
Subject: [OpenSCAD] rotate_extrude issue
In-Reply-To: <1448796493694-14812.post@n5.nabble.com>
References: <1395406039010-7442.post@n5.nabble.com>
	<1395886535982-7482.post@n5.nabble.com>
	<1395927820846-7491.post@n5.nabble.com>
	<1448743566336-14807.post@n5.nabble.com>
	<CAEEmnrPFYheh1jkxAW4ThagTjRgxCGsQVPmrccN_JrUgvu65jw@mail.gmail.com>
	<1448796493694-14812.post@n5.nabble.com>
Message-ID: <1448871178511-14830.post@n5.nabble.com>

Noted!

Anyone is welcome to send complaints re: docs to the topic: "Improving the
doc" it will get priority treatment (by me, probably).  



ChrisLT wrote
> I am merely saying that I found this counter-intuitive, and feel that it
> should be explicitly documented. 





--
View this message in context: http://forum.openscad.org/rotate-extrude-issue-tp7442p14830.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Mon Nov 30 07:03:45 2015
From: mschafer at wireframe.biz (Neon22)
Date: Mon, 30 Nov 2015 05:03:45 -0700 (MST)
Subject: [OpenSCAD] Can I force Animation to use "Render" instead of
	"Preview"?
In-Reply-To: <1448864660277-14829.post@n5.nabble.com>
References: <1448864513323-14828.post@n5.nabble.com>
	<1448864660277-14829.post@n5.nabble.com>
Message-ID: <1448885025777-14831.post@n5.nabble.com>

The Render operation is only repeated if it is required.
So it might not take a lot longer to Render() each frame depending on eth
nature of the animation.



--
View this message in context: http://forum.openscad.org/Can-I-force-Animation-to-use-Render-instead-of-Preview-tp14828p14831.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Mon Nov 30 07:37:11 2015
From: marius at kintel.net (Marius Kintel)
Date: Mon, 30 Nov 2015 07:37:11 -0500
Subject: [OpenSCAD] Can I force Animation to use "Render" instead of
	"Preview"?
In-Reply-To: <1448864513323-14828.post@n5.nabble.com>
References: <1448864513323-14828.post@n5.nabble.com>
Message-ID: <97DF9652-3820-4241-A908-6A101B5B7E48@kintel.net>

The animation is always Preview.
Your best bet is to make preview look nicer. In your case, try to make negative objects slightly larger so that you don?t get z fighting.
See the FAQ: https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/FAQ#What_are_those_strange_flickering_artifacts_in_the_preview.3F

 -Marius



From clusbytaylor at gmail.com  Mon Nov 30 11:11:35 2015
From: clusbytaylor at gmail.com (ChrisLT)
Date: Mon, 30 Nov 2015 09:11:35 -0700 (MST)
Subject: [OpenSCAD] Improving the doc
In-Reply-To: <1448016858188-14666.post@n5.nabble.com>
References: <1447828998302-14613.post@n5.nabble.com>
	<1447882726709-14629.post@n5.nabble.com>
	<1447884330884-14632.post@n5.nabble.com>
	<1447931761771-14640.post@n5.nabble.com>
	<1447939350024-14645.post@n5.nabble.com>
	<1447940144218-14646.post@n5.nabble.com>
	<1447940892775-14647.post@n5.nabble.com>
	<9FE53AD7-E953-4891-A8B1-0B6D4486A978@kintel.net>
	<1448009637077-14664.post@n5.nabble.com>
	<1448016858188-14666.post@n5.nabble.com>
Message-ID: <1448899895705-14833.post@n5.nabble.com>

I think the section on 2D, and especially rotate_extrude, needs some
clarification.
I've only been using OpenSCAD for a few days, but it seems to me that the
best way to think of 2D objects is as follows.

A 2D object has no thickness, so must be extruded to create a 3D object. 2D
objects are created in the XY plane at Z=0. They can be translated and/or
rotated into any other plane. This is particularly useful for text used to
annotate a model.
In order to make it visible, a 2D object is drawn in Preview mode with a
thickness of 1 unit, but there is no actual 3D object at this time.
In Render mode, if the first object to be drawn is 2D, any 3D objects will
be ignored and vice versa. The projection of the 2D objects onto the XY
plane is drawn with zero thickness. To render the 3D objects, make sure the
first object is a solid.

There are two ways to extrude a 2D object into a solid. In both, if the 2D
shape has been translated or rotated out of the Z=0 plane, the extrusion is
of its projection onto that plane:
 - linear_extrude: The 2D object, or its projection, is extruded in the +Z
direction. Any twist is applied about the Z axis. Positive twist angles
create a left-hand twist, negative, right-hand. Center=true centres the
solid above and below the Z=0 plane. It does not centre in X or Y.
Centre=false extrudes from Z=0 into positive Z. You cannot set negative
height, but can use translate to move the object into negative Z if needed.
 - rotate_extrude: The 2D shape, or its projection in the XY plane, is first
rotated 90 degrees about the X axis to put it into the XZ plane, then
extruded by rotation about the Z axis. You may prefer to think that the 2D
object was first extruded about the Y axis, then the extrusion rotated to
put its axis along the Z axis.

The current documentation says you can't use rotate_extrude to create a
model of a screw thread. True - you should use linear_extrude with twist.

Also, it says that if linear_extrude scale is a vector the resulting side
walls may be non-planar. This is relevant for polygons but not circles. It
reveals a bug in the rendering in 2015.03 which can be overcome by setting
the slices and twist parameters.

Also, it incorrectly says center=true centers a rotate_extrusion on the Z
axis. No, it doesn't. It puts the vertical centre at Z=0.

I'd be happy to edit the documentation, but don't know how to go about it.

Chris



--
View this message in context: http://forum.openscad.org/Improving-the-doc-tp14333p14833.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Leef_me at cox.net  Mon Nov 30 15:12:04 2015
From: Leef_me at cox.net (Leef_me)
Date: Mon, 30 Nov 2015 12:12:04 -0800
Subject: [OpenSCAD] combine a union child and a difference child in one
	object.
Message-ID: <DF2340B8E3D244E0B6382A2ECB112517@LeeFUJI>

// Is it possible to combine the two lines marked part A and part B,
//  into one object, module or whatever?
//  If so, I'd appreciate an an example.

$fn=16;


difference()
{
 cube([5,5,5], center=true);
 #cylinder(d=1.5, h=12, center=true); // part A
}

cylinder(d=1, h=15, center=true); // part B

Thanks in advance

Leef_me
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151130/d64b596e/attachment.html>

From stempeldergeschichte at googlemail.com  Mon Nov 30 15:28:43 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Mon, 30 Nov 2015 21:28:43 +0100
Subject: [OpenSCAD] combine a union child and a difference child in one
	object.
In-Reply-To: <DF2340B8E3D244E0B6382A2ECB112517@LeeFUJI>
References: <DF2340B8E3D244E0B6382A2ECB112517@LeeFUJI>
Message-ID: <CAJgOqABXgxv1R-um6wDxf--1THPvYpSVR1_d6x1C7fU3_KiF3g@mail.gmail.com>

I'm not sure what you want to use the # for. Its normally only for
diagnostics.

How about this:

$fn=16;


difference()
{
 cube([5,5,5], center=true);
 wire(); // part A
}

wire();


module wire(){
    cylinder(d=1, h=15, center=true); // part B
    color("red")cylinder(d=1.5, h=12, center=true); // part A
}

2015-11-30 21:12 GMT+01:00 Leef_me <Leef_me at cox.net>:

> // Is it possible to combine the two lines marked part A and part B,
> //  into one object, module or whatever?
> //  If so, I'd appreciate an an example.
>
> $fn=16;
>
>
> difference()
> {
>  cube([5,5,5], center=true);
>  #cylinder(d=1.5, h=12, center=true); // part A
> }
>
> cylinder(d=1, h=15, center=true); // part B
>
> Thanks in advance
>
> Leef_me
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151130/4162222b/attachment.html>

From Leef_me at cox.net  Mon Nov 30 15:40:39 2015
From: Leef_me at cox.net (Leef_me)
Date: Mon, 30 Nov 2015 12:40:39 -0800
Subject: [OpenSCAD] combine a union child and a difference child in
	oneobject.
In-Reply-To: <nwVa1r01E0MQoQY01wVbrX>
References: <DF2340B8E3D244E0B6382A2ECB112517@LeeFUJI> <nwVa1r01E0MQoQY01wVbrX>
Message-ID: <49FB3913BB574D25B87FFA813B27A63F@LeeFUJI>


Part A should only be used as a difference.

Part B should appear loose in the cube.





From: Peter Falke 
Sent: Monday, November 30, 2015 12:28 PM
To: OpenSCAD general discussion 
Subject: Re: [OpenSCAD] combine a union child and a difference child in oneobject.


I'm not sure what you want to use the # for. Its normally only for diagnostics.


How about this:

$fn=16;
 

difference()
{
 cube([5,5,5], center=true);
 wire(); // part A
}

wire();


module wire(){
    cylinder(d=1, h=15, center=true); // part B
    color("red")cylinder(d=1.5, h=12, center=true); // part A
}



2015-11-30 21:12 GMT+01:00 Leef_me <Leef_me at cox.net>:

  // Is it possible to combine the two lines marked part A and part B,
  //  into one object, module or whatever?
  //  If so, I'd appreciate an an example.

  $fn=16;


  difference()
  {
   cube([5,5,5], center=true);
   #cylinder(d=1.5, h=12, center=true); // part A
  }

  cylinder(d=1, h=15, center=true); // part B

  Thanks in advance

  Leef_me

  _______________________________________________
  OpenSCAD mailing list
  Discuss at lists.openscad.org
  http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org






--------------------------------------------------------------------------------


_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151130/20c9eff7/attachment.html>

From arnholm at arnholm.org  Mon Nov 30 15:42:16 2015
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Mon, 30 Nov 2015 21:42:16 +0100
Subject: [OpenSCAD] Improving the doc
In-Reply-To: <1448899895705-14833.post@n5.nabble.com>
References: <1447828998302-14613.post@n5.nabble.com>
	<1447882726709-14629.post@n5.nabble.com>
	<1447884330884-14632.post@n5.nabble.com>
	<1447931761771-14640.post@n5.nabble.com>
	<1447939350024-14645.post@n5.nabble.com>
	<1447940144218-14646.post@n5.nabble.com>
	<1447940892775-14647.post@n5.nabble.com>
	<9FE53AD7-E953-4891-A8B1-0B6D4486A978@kintel.net>
	<1448009637077-14664.post@n5.nabble.com>
	<1448016858188-14666.post@n5.nabble.com>
	<1448899895705-14833.post@n5.nabble.com>
Message-ID: <565CB4A8.4040508@arnholm.org>

On 30. nov. 2015 17:11, ChrisLT wrote:
>   - rotate_extrude: The 2D shape, or its projection in the XY plane, is first
> rotated 90 degrees about the X axis to put it into the XZ plane, then
> extruded by rotation about the Z axis. You may prefer to think that the 2D
> object was first extruded about the Y axis, then the extrusion rotated to
> put its axis along the Z axis.


At
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Using_the_2D_Subsystem#Rotate_Extrude 

...it is stated "Rotational extrusion spins a 2D shape around the Y-axis 
to form a solid which has rotational symmetry. The resultant solid is 
placed along the Z-axis."

This is very unfortunate and confusing to say the least. What is not 
stated is that the Y- and Z-axes mentioned do not refer to the same 
coordinate system.

To make some sense of it, the first quoted sentence refers to the Y-axis 
on a 2D [X,Y] coordinate system and the second sentence refers to the 
Z-axis in a 3D [X,Y,Z] coordinate system. The 2D [X,Y] coordinates do 
*not* correspond to the 3D [X,Y] coordinates.

As ChrisLT says, there is an unstated transformation of the 2D shape 
into the 3D XZ plane before the extrusion takes place.

If I could choose, I would have preferred things to be more explicit. 
Given that rotations are referring to the 3d Z axis, it really does not 
make sense that this does not work:

1)
rotate_extrude()
rotate([0,90,0])
polygon(points=[ [0,0], [100,0], [100,100] ]);

There is no output and no warning is given. The 2d polygon is placed in 
the YZ plane, and you would think a rotate_extrude around Z would be 
perfectly fine. But the user is simply left wondering what is going on.

On second attempt, one might try to place the polygon in the XZ plane:

2)
rotate_extrude()
rotate([90,0,0])
polygon(points=[ [0,0], [100,0], [100,100] ]);

The result is an infinitely thin circular face in the 3D XY plane. It 
really does not make a lot of sense.

Getting a bit desperate at this stage, one might end up trying

3)
rotate_extrude()
rotate([0,0,90])
polygon(points=[ [0,0], [100,0], [100,100] ]);

Which really just rotates the polygon around the Z axis. The result 
again is nothing, no warning.

"Ah, ok" you say, "I am mixing 2d coordinates with 3d transformations" 
(should be perfectly valid, though). You might perhaps then try 
something like:

4)
rotate_extrude()
rotate([90,0])
polygon(points=[ [0,0], [100,0], [100,100] ]);

Perhaps syntactically invalid, but no warning is given. The result is 
the same as 2)

5) so the only thing that "works", but appears broken is

rotate_extrude()
rotate([0,0,0])
polygon(points=[ [0,0], [100,0], [100,100] ]);

or

rotate_extrude()
polygon(points=[ [0,0], [100,0], [100,100] ]);

It is very confusing to someone who actually understands 
transformations. The result is not logical.

----

Can it be fixed? Perhaps like this

rotate_extrude(axis="X")
polygon(points=[ [0,0], [100,0], [100,100] ]);

which (when the "axis" parameter is given) would apply no implicit 
rotation, it would simply rotate the 2D polygon around the 3D X-axis, 
i.e. the same result as the current

translate([100,0,0])
rotate([0,-90,0])
rotate_extrude()
polygon(points=[ [0,0], [100,0], [100,100] ]);

similarly

rotate_extrude(axis="Y")
polygon(points=[ [0,0], [100,0], [100,100] ]);

would be equivalent to the current

rotate([-90,0,0])
rotate_extrude()
polygon(points=[ [0,0], [100,0], [100,100] ]);

Then, if you don't specify the axis of rotation, you get the old 
"nonsensical" default, for reasons of compatibility:

rotate_extrude()
polygon(points=[ [0,0], [100,0], [100,100] ]);

meaning the same as

rotate_extrude(axis="old_style")
polygon(points=[ [0,0], [100,0], [100,100] ]);


Just my thoughts....

Carsten Arnholm




From nop.head at gmail.com  Mon Nov 30 15:57:32 2015
From: nop.head at gmail.com (nop head)
Date: Mon, 30 Nov 2015 20:57:32 +0000
Subject: [OpenSCAD] Improving the doc
In-Reply-To: <565CB4A8.4040508@arnholm.org>
References: <1447828998302-14613.post@n5.nabble.com>
	<1447882726709-14629.post@n5.nabble.com>
	<1447884330884-14632.post@n5.nabble.com>
	<1447931761771-14640.post@n5.nabble.com>
	<1447939350024-14645.post@n5.nabble.com>
	<1447940144218-14646.post@n5.nabble.com>
	<1447940892775-14647.post@n5.nabble.com>
	<9FE53AD7-E953-4891-A8B1-0B6D4486A978@kintel.net>
	<1448009637077-14664.post@n5.nabble.com>
	<1448016858188-14666.post@n5.nabble.com>
	<1448899895705-14833.post@n5.nabble.com>
	<565CB4A8.4040508@arnholm.org>
Message-ID: <CAEEmnrN2=BQnibv2mtL=HsVVz4OmQoXqbVrb8bvbjsvS1+x2jg@mail.gmail.com>

>...it is stated "Rotational extrusion spins a 2D shape around the Y-axis
to form a solid which has rotational symmetry. The resultant solid is
placed along the Z-axis."

>This is very unfortunate and confusing to say the least. What is not
stated is that the Y- and Z-axes mentioned do not refer to the same
coordinate system.

The X Y axes of the 2D object are the same as the X Y axes of the 3D
system. If you linear_extrude you see this is true. The Z axis is simply
orthogonal to both. Perhaps it should say "the resulting solid is rotated
90 degrees to have its axis of symmetry aligned with the Z axis".


On 30 November 2015 at 20:42, Carsten Arnholm <arnholm at arnholm.org> wrote:

> On 30. nov. 2015 17:11, ChrisLT wrote:
>
>>   - rotate_extrude: The 2D shape, or its projection in the XY plane, is
>> first
>> rotated 90 degrees about the X axis to put it into the XZ plane, then
>> extruded by rotation about the Z axis. You may prefer to think that the 2D
>> object was first extruded about the Y axis, then the extrusion rotated to
>> put its axis along the Z axis.
>>
>
>
> At
>
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Using_the_2D_Subsystem#Rotate_Extrude
> ...it is stated "Rotational extrusion spins a 2D shape around the Y-axis
> to form a solid which has rotational symmetry. The resultant solid is
> placed along the Z-axis."
>
> This is very unfortunate and confusing to say the least. What is not
> stated is that the Y- and Z-axes mentioned do not refer to the same
> coordinate system.
>
> To make some sense of it, the first quoted sentence refers to the Y-axis
> on a 2D [X,Y] coordinate system and the second sentence refers to the
> Z-axis in a 3D [X,Y,Z] coordinate system. The 2D [X,Y] coordinates do *not*
> correspond to the 3D [X,Y] coordinates.
>
> As ChrisLT says, there is an unstated transformation of the 2D shape into
> the 3D XZ plane before the extrusion takes place.
>
> If I could choose, I would have preferred things to be more explicit.
> Given that rotations are referring to the 3d Z axis, it really does not
> make sense that this does not work:
>
> 1)
> rotate_extrude()
> rotate([0,90,0])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> There is no output and no warning is given. The 2d polygon is placed in
> the YZ plane, and you would think a rotate_extrude around Z would be
> perfectly fine. But the user is simply left wondering what is going on.
>
> On second attempt, one might try to place the polygon in the XZ plane:
>
> 2)
> rotate_extrude()
> rotate([90,0,0])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> The result is an infinitely thin circular face in the 3D XY plane. It
> really does not make a lot of sense.
>
> Getting a bit desperate at this stage, one might end up trying
>
> 3)
> rotate_extrude()
> rotate([0,0,90])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> Which really just rotates the polygon around the Z axis. The result again
> is nothing, no warning.
>
> "Ah, ok" you say, "I am mixing 2d coordinates with 3d transformations"
> (should be perfectly valid, though). You might perhaps then try something
> like:
>
> 4)
> rotate_extrude()
> rotate([90,0])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> Perhaps syntactically invalid, but no warning is given. The result is the
> same as 2)
>
> 5) so the only thing that "works", but appears broken is
>
> rotate_extrude()
> rotate([0,0,0])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> or
>
> rotate_extrude()
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> It is very confusing to someone who actually understands transformations.
> The result is not logical.
>
> ----
>
> Can it be fixed? Perhaps like this
>
> rotate_extrude(axis="X")
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> which (when the "axis" parameter is given) would apply no implicit
> rotation, it would simply rotate the 2D polygon around the 3D X-axis, i.e.
> the same result as the current
>
> translate([100,0,0])
> rotate([0,-90,0])
> rotate_extrude()
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> similarly
>
> rotate_extrude(axis="Y")
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> would be equivalent to the current
>
> rotate([-90,0,0])
> rotate_extrude()
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> Then, if you don't specify the axis of rotation, you get the old
> "nonsensical" default, for reasons of compatibility:
>
> rotate_extrude()
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> meaning the same as
>
> rotate_extrude(axis="old_style")
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
>
> Just my thoughts....
>
> Carsten Arnholm
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151130/583ed81c/attachment-0001.html>

From hypher at gmail.com  Mon Nov 30 16:02:54 2015
From: hypher at gmail.com (Yona Appletree)
Date: Mon, 30 Nov 2015 13:02:54 -0800
Subject: [OpenSCAD] Improving the doc
In-Reply-To: <565CB4A8.4040508@arnholm.org>
References: <1447828998302-14613.post@n5.nabble.com>
	<1447882726709-14629.post@n5.nabble.com>
	<1447884330884-14632.post@n5.nabble.com>
	<1447931761771-14640.post@n5.nabble.com>
	<1447939350024-14645.post@n5.nabble.com>
	<1447940144218-14646.post@n5.nabble.com>
	<1447940892775-14647.post@n5.nabble.com>
	<9FE53AD7-E953-4891-A8B1-0B6D4486A978@kintel.net>
	<1448009637077-14664.post@n5.nabble.com>
	<1448016858188-14666.post@n5.nabble.com>
	<1448899895705-14833.post@n5.nabble.com>
	<565CB4A8.4040508@arnholm.org>
Message-ID: <565CB97E.6020805@gmail.com>

It seems to me that the primary confusion here is the difference between 
how the *_extrude methods handle 3d-transformed 2d surfaces and how they 
are displayed in preview.

Consider a simple example:

     rotate([45,0,0]) circle(r=10);

In preview, it appears as if the 2d shape is actually treated as being 
in 3d space:


However, if you render the the same, it is projected onto the XY plane:



If you notice that this is the actual representation of the transformed 
2d shape in OpenSCAD, then the extrusion makes much more sense, I think.

Perhaps it would be worth fixing how preview displays transformed 2d 
objects?

Perhaps also worth noting this is in the docs? "If you're having trouble 
with extrusion, try putting a bang (!) after the extrusion call and then 
rendering, to see the 2d representation of what's going to be extruded."

~ Yona

> Carsten Arnholm <mailto:arnholm at arnholm.org>
> November 30, 2015 at 12:42
>
>
>
> At
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Using_the_2D_Subsystem#Rotate_Extrude 
>
> ...it is stated "Rotational extrusion spins a 2D shape around the 
> Y-axis to form a solid which has rotational symmetry. The resultant 
> solid is placed along the Z-axis."
>
> This is very unfortunate and confusing to say the least. What is not 
> stated is that the Y- and Z-axes mentioned do not refer to the same 
> coordinate system.
>
> To make some sense of it, the first quoted sentence refers to the 
> Y-axis on a 2D [X,Y] coordinate system and the second sentence refers 
> to the Z-axis in a 3D [X,Y,Z] coordinate system. The 2D [X,Y] 
> coordinates do *not* correspond to the 3D [X,Y] coordinates.
>
> As ChrisLT says, there is an unstated transformation of the 2D shape 
> into the 3D XZ plane before the extrusion takes place.
>
> If I could choose, I would have preferred things to be more explicit. 
> Given that rotations are referring to the 3d Z axis, it really does 
> not make sense that this does not work:
>
> 1)
> rotate_extrude()
> rotate([0,90,0])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> There is no output and no warning is given. The 2d polygon is placed 
> in the YZ plane, and you would think a rotate_extrude around Z would 
> be perfectly fine. But the user is simply left wondering what is going 
> on.
>
> On second attempt, one might try to place the polygon in the XZ plane:
>
> 2)
> rotate_extrude()
> rotate([90,0,0])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> The result is an infinitely thin circular face in the 3D XY plane. It 
> really does not make a lot of sense.
>
> Getting a bit desperate at this stage, one might end up trying
>
> 3)
> rotate_extrude()
> rotate([0,0,90])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> Which really just rotates the polygon around the Z axis. The result 
> again is nothing, no warning.
>
> "Ah, ok" you say, "I am mixing 2d coordinates with 3d transformations" 
> (should be perfectly valid, though). You might perhaps then try 
> something like:
>
> 4)
> rotate_extrude()
> rotate([90,0])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> Perhaps syntactically invalid, but no warning is given. The result is 
> the same as 2)
>
> 5) so the only thing that "works", but appears broken is
>
> rotate_extrude()
> rotate([0,0,0])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> or
>
> rotate_extrude()
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> It is very confusing to someone who actually understands 
> transformations. The result is not logical.
>
> ----
>
> Can it be fixed? Perhaps like this
>
> rotate_extrude(axis="X")
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> which (when the "axis" parameter is given) would apply no implicit 
> rotation, it would simply rotate the 2D polygon around the 3D X-axis, 
> i.e. the same result as the current
>
> translate([100,0,0])
> rotate([0,-90,0])
> rotate_extrude()
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> similarly
>
> rotate_extrude(axis="Y")
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> would be equivalent to the current
>
> rotate([-90,0,0])
> rotate_extrude()
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> Then, if you don't specify the axis of rotation, you get the old 
> "nonsensical" default, for reasons of compatibility:
>
> rotate_extrude()
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> meaning the same as
>
> rotate_extrude(axis="old_style")
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
>
> Just my thoughts....
>
> Carsten Arnholm
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> ChrisLT <mailto:clusbytaylor at gmail.com>
> November 30, 2015 at 08:11
> I think the section on 2D, and especially rotate_extrude, needs some
> clarification.
> I've only been using OpenSCAD for a few days, but it seems to me that the
> best way to think of 2D objects is as follows.
>
> A 2D object has no thickness, so must be extruded to create a 3D 
> object. 2D
> objects are created in the XY plane at Z=0. They can be translated and/or
> rotated into any other plane. This is particularly useful for text used to
> annotate a model.
> In order to make it visible, a 2D object is drawn in Preview mode with a
> thickness of 1 unit, but there is no actual 3D object at this time.
> In Render mode, if the first object to be drawn is 2D, any 3D objects will
> be ignored and vice versa. The projection of the 2D objects onto the XY
> plane is drawn with zero thickness. To render the 3D objects, make 
> sure the
> first object is a solid.
>
> There are two ways to extrude a 2D object into a solid. In both, if the 2D
> shape has been translated or rotated out of the Z=0 plane, the 
> extrusion is
> of its projection onto that plane:
> - linear_extrude: The 2D object, or its projection, is extruded in the +Z
> direction. Any twist is applied about the Z axis. Positive twist angles
> create a left-hand twist, negative, right-hand. Center=true centres the
> solid above and below the Z=0 plane. It does not centre in X or Y.
> Centre=false extrudes from Z=0 into positive Z. You cannot set negative
> height, but can use translate to move the object into negative Z if 
> needed.
> - rotate_extrude: The 2D shape, or its projection in the XY plane, is 
> first
> rotated 90 degrees about the X axis to put it into the XZ plane, then
> extruded by rotation about the Z axis. You may prefer to think that the 2D
> object was first extruded about the Y axis, then the extrusion rotated to
> put its axis along the Z axis.
>
> The current documentation says you can't use rotate_extrude to create a
> model of a screw thread. True - you should use linear_extrude with twist.
>
> Also, it says that if linear_extrude scale is a vector the resulting side
> walls may be non-planar. This is relevant for polygons but not circles. It
> reveals a bug in the rendering in 2015.03 which can be overcome by setting
> the slices and twist parameters.
>
> Also, it incorrectly says center=true centers a rotate_extrusion on the Z
> axis. No, it doesn't. It puts the vertical centre at Z=0.
>
> I'd be happy to edit the documentation, but don't know how to go about it.
>
> Chris
>
>
>
> --
> View this message in context: 
> http://forum.openscad.org/Improving-the-doc-tp14333p14833.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> ctchin <mailto:c.t.chin at szu.edu.cn>
> November 20, 2015 at 02:54
> Many thanks to wolf for some thorough checking of my draft versions. Not
> just for spotting my mistakes and deficiencies, but receiving 
> attention and
> comments from kintel, tp3 and wolf, especially, is very encouraging.
>
> I've pretty much implemented every one of his suggestions, plus a little
> more. But on recursion:
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language/Fast_Guide%28c.t.chin%29#Recursive_function_calls
>
>
> wolf wrote
>
> Here I have only copied verbatim the part from the old doc ,
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language#Recursive_functions
> adding or subtracting nothing. My intention was only to illustrate that
> relevant sub-topics would be included in the complete ref (currently
> misnamed Fast Guide).
>
> I agree the write-up needs improvement and wolf's comment is spot-on. But
> until I read thread mentioned by wolf, I wasn't even aware of tail 
> recursion
> (well not quite true... if I think really hard, I might recall from 
> CS101 a
> quarter century ago).
>
> So... I'd like to wiggle out of this job: would some kind soul go and 
> fix up
> the writing on recursive function calls? If you be bold, just go ahead and
> re-write the original version. If you be shy, do feel free to experiment
> with my Fast Guide, which is unofficial and work-in-progress. (both links
> are found above)
>
>
>
>
>
> --
> View this message in context: 
> http://forum.openscad.org/Improving-the-doc-tp14333p14666.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> ctchin <mailto:c.t.chin at szu.edu.cn>
> November 20, 2015 at 00:53
> Yikes! It might have been me. VERY SORRY!
>
> It doesn't help that I can't even tell if it's me. I found out that
> sometimes I was logged out while editing the doc, leaving only some IP
> address as the author.
>
> Could the owner of the book limit editing rights to only those who are
> logged in as a registered person on Wikibooks? At least that way it's
> easier to trace mistakes.
>
> I do get distracted a lot during the day, so sometimes I leave a wiki page
> in the edit/open state could be some unfortunate combination of events
> caused the wiping of Transformations. Luckily wiki is undo-able.
>
> Thanks and SORRY!
>
>
>
>
> --
> View this message in context: 
> http://forum.openscad.org/Improving-the-doc-tp14333p14664.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> Marius Kintel <mailto:marius at kintel.net>
> November 19, 2015 at 22:35
> Hey,
>
> Thanks to all for contributing to the docs.
>
> One question: I see that someone accidentally deleted most of this 
> page: https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Transformations
>
> Not sure who, and somehow Wikibooks doesn't let me undo it, as it 
> thinks it's "suspicious".
> Could someone with better wikibooks permissions take a look?
>
> Cheers,
>
> -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151130/b3de186d/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image.png
Type: image/png
Size: 9696 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151130/b3de186d/attachment-0002.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image.png
Type: image/png
Size: 8548 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151130/b3de186d/attachment-0003.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: compose-unknown-contact.jpg
Type: image/jpeg
Size: 770 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151130/b3de186d/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: postbox-contact.jpg
Type: image/jpeg
Size: 1141 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151130/b3de186d/attachment-0003.jpg>

From jpmendes54 at gmail.com  Mon Nov 30 16:19:17 2015
From: jpmendes54 at gmail.com (jpmendes)
Date: Mon, 30 Nov 2015 14:19:17 -0700 (MST)
Subject: [OpenSCAD] Can I force Animation to use "Render" instead of
	"Preview"?
In-Reply-To: <1448864513323-14828.post@n5.nabble.com>
References: <1448864513323-14828.post@n5.nabble.com>
Message-ID: <1448918357216-14840.post@n5.nabble.com>

Hi, I made this animation pre-rendering all the components  video-02.mp4
<http://forum.openscad.org/file/n14840/video-02.mp4>  . It was very time
consuming and definition is not as good as I expected. 
Question: is there a way to achieve better video definition?

Best regards

Jo?o Mendes



--
View this message in context: http://forum.openscad.org/Can-I-force-Animation-to-use-Render-instead-of-Preview-tp14828p14840.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Mon Nov 30 16:21:47 2015
From: nop.head at gmail.com (nop head)
Date: Mon, 30 Nov 2015 21:21:47 +0000
Subject: [OpenSCAD] Improving the doc
In-Reply-To: <565CB97E.6020805@gmail.com>
References: <1447828998302-14613.post@n5.nabble.com>
	<1447882726709-14629.post@n5.nabble.com>
	<1447884330884-14632.post@n5.nabble.com>
	<1447931761771-14640.post@n5.nabble.com>
	<1447939350024-14645.post@n5.nabble.com>
	<1447940144218-14646.post@n5.nabble.com>
	<1447940892775-14647.post@n5.nabble.com>
	<9FE53AD7-E953-4891-A8B1-0B6D4486A978@kintel.net>
	<1448009637077-14664.post@n5.nabble.com>
	<1448016858188-14666.post@n5.nabble.com>
	<1448899895705-14833.post@n5.nabble.com>
	<565CB4A8.4040508@arnholm.org> <565CB97E.6020805@gmail.com>
Message-ID: <CAEEmnrNqF1EXUr1-_QSOd9GjVhyJ1CBDW=JgBPFdZodKgopHRA@mail.gmail.com>

I don't think X Y rotations should have any effect when the child is a 2D
object. Then F5 and F6 would be consistent, both a circle in this case.
Also F5 should render 2D objects as a very thin 3D object, not 1 unit thick.

On 30 November 2015 at 21:02, Yona Appletree <hypher at gmail.com> wrote:

> It seems to me that the primary confusion here is the difference between
> how the *_extrude methods handle 3d-transformed 2d surfaces and how they
> are displayed in preview.
>
> Consider a simple example:
>
>     rotate([45,0,0]) circle(r=10);
>
> In preview, it appears as if the 2d shape is actually treated as being in
> 3d space:
>
>
> However, if you render the the same, it is projected onto the XY plane:
>
>
>
> If you notice that this is the actual representation of the transformed 2d
> shape in OpenSCAD, then the extrusion makes much more sense, I think.
>
> Perhaps it would be worth fixing how preview displays transformed 2d
> objects?
>
> Perhaps also worth noting this is in the docs? "If you're having trouble
> with extrusion, try putting a bang (!) after the extrusion call and then
> rendering, to see the 2d representation of what's going to be extruded."
>
> ~ Yona
>
> Carsten Arnholm <arnholm at arnholm.org>
> November 30, 2015 at 12:42
>
>
>
> At
>
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Using_the_2D_Subsystem#Rotate_Extrude
> ...it is stated "Rotational extrusion spins a 2D shape around the Y-axis
> to form a solid which has rotational symmetry. The resultant solid is
> placed along the Z-axis."
>
> This is very unfortunate and confusing to say the least. What is not
> stated is that the Y- and Z-axes mentioned do not refer to the same
> coordinate system.
>
> To make some sense of it, the first quoted sentence refers to the Y-axis
> on a 2D [X,Y] coordinate system and the second sentence refers to the
> Z-axis in a 3D [X,Y,Z] coordinate system. The 2D [X,Y] coordinates do *not*
> correspond to the 3D [X,Y] coordinates.
>
> As ChrisLT says, there is an unstated transformation of the 2D shape into
> the 3D XZ plane before the extrusion takes place.
>
> If I could choose, I would have preferred things to be more explicit.
> Given that rotations are referring to the 3d Z axis, it really does not
> make sense that this does not work:
>
> 1)
> rotate_extrude()
> rotate([0,90,0])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> There is no output and no warning is given. The 2d polygon is placed in
> the YZ plane, and you would think a rotate_extrude around Z would be
> perfectly fine. But the user is simply left wondering what is going on.
>
> On second attempt, one might try to place the polygon in the XZ plane:
>
> 2)
> rotate_extrude()
> rotate([90,0,0])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> The result is an infinitely thin circular face in the 3D XY plane. It
> really does not make a lot of sense.
>
> Getting a bit desperate at this stage, one might end up trying
>
> 3)
> rotate_extrude()
> rotate([0,0,90])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> Which really just rotates the polygon around the Z axis. The result again
> is nothing, no warning.
>
> "Ah, ok" you say, "I am mixing 2d coordinates with 3d transformations"
> (should be perfectly valid, though). You might perhaps then try something
> like:
>
> 4)
> rotate_extrude()
> rotate([90,0])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> Perhaps syntactically invalid, but no warning is given. The result is the
> same as 2)
>
> 5) so the only thing that "works", but appears broken is
>
> rotate_extrude()
> rotate([0,0,0])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> or
>
> rotate_extrude()
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> It is very confusing to someone who actually understands transformations.
> The result is not logical.
>
> ----
>
> Can it be fixed? Perhaps like this
>
> rotate_extrude(axis="X")
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> which (when the "axis" parameter is given) would apply no implicit
> rotation, it would simply rotate the 2D polygon around the 3D X-axis, i.e.
> the same result as the current
>
> translate([100,0,0])
> rotate([0,-90,0])
> rotate_extrude()
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> similarly
>
> rotate_extrude(axis="Y")
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> would be equivalent to the current
>
> rotate([-90,0,0])
> rotate_extrude()
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> Then, if you don't specify the axis of rotation, you get the old
> "nonsensical" default, for reasons of compatibility:
>
> rotate_extrude()
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> meaning the same as
>
> rotate_extrude(axis="old_style")
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
>
> Just my thoughts....
>
> Carsten Arnholm
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> ChrisLT <clusbytaylor at gmail.com>
> November 30, 2015 at 08:11
> I think the section on 2D, and especially rotate_extrude, needs some
> clarification.
> I've only been using OpenSCAD for a few days, but it seems to me that the
> best way to think of 2D objects is as follows.
>
> A 2D object has no thickness, so must be extruded to create a 3D object. 2D
> objects are created in the XY plane at Z=0. They can be translated and/or
> rotated into any other plane. This is particularly useful for text used to
> annotate a model.
> In order to make it visible, a 2D object is drawn in Preview mode with a
> thickness of 1 unit, but there is no actual 3D object at this time.
> In Render mode, if the first object to be drawn is 2D, any 3D objects will
> be ignored and vice versa. The projection of the 2D objects onto the XY
> plane is drawn with zero thickness. To render the 3D objects, make sure the
> first object is a solid.
>
> There are two ways to extrude a 2D object into a solid. In both, if the 2D
> shape has been translated or rotated out of the Z=0 plane, the extrusion is
> of its projection onto that plane:
> - linear_extrude: The 2D object, or its projection, is extruded in the +Z
> direction. Any twist is applied about the Z axis. Positive twist angles
> create a left-hand twist, negative, right-hand. Center=true centres the
> solid above and below the Z=0 plane. It does not centre in X or Y.
> Centre=false extrudes from Z=0 into positive Z. You cannot set negative
> height, but can use translate to move the object into negative Z if needed.
> - rotate_extrude: The 2D shape, or its projection in the XY plane, is first
> rotated 90 degrees about the X axis to put it into the XZ plane, then
> extruded by rotation about the Z axis. You may prefer to think that the 2D
> object was first extruded about the Y axis, then the extrusion rotated to
> put its axis along the Z axis.
>
> The current documentation says you can't use rotate_extrude to create a
> model of a screw thread. True - you should use linear_extrude with twist.
>
> Also, it says that if linear_extrude scale is a vector the resulting side
> walls may be non-planar. This is relevant for polygons but not circles. It
> reveals a bug in the rendering in 2015.03 which can be overcome by setting
> the slices and twist parameters.
>
> Also, it incorrectly says center=true centers a rotate_extrusion on the Z
> axis. No, it doesn't. It puts the vertical centre at Z=0.
>
> I'd be happy to edit the documentation, but don't know how to go about it.
>
> Chris
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Improving-the-doc-tp14333p14833.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> ctchin <c.t.chin at szu.edu.cn>
> November 20, 2015 at 02:54
> Many thanks to wolf for some thorough checking of my draft versions. Not
> just for spotting my mistakes and deficiencies, but receiving attention and
> comments from kintel, tp3 and wolf, especially, is very encouraging.
>
> I've pretty much implemented every one of his suggestions, plus a little
> more. But on recursion:
>
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language/Fast_Guide%28c.t.chin%29#Recursive_function_calls
>
>
> wolf wrote
>
> Here I have only copied verbatim the part from the old doc ,
>
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language#Recursive_functions
> adding or subtracting nothing. My intention was only to illustrate that
> relevant sub-topics would be included in the complete ref (currently
> misnamed Fast Guide).
>
> I agree the write-up needs improvement and wolf's comment is spot-on. But
> until I read thread mentioned by wolf, I wasn't even aware of tail
> recursion
> (well not quite true... if I think really hard, I might recall from CS101 a
> quarter century ago).
>
> So... I'd like to wiggle out of this job: would some kind soul go and fix
> up
> the writing on recursive function calls? If you be bold, just go ahead and
> re-write the original version. If you be shy, do feel free to experiment
> with my Fast Guide, which is unofficial and work-in-progress. (both links
> are found above)
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Improving-the-doc-tp14333p14666.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> ctchin <c.t.chin at szu.edu.cn>
> November 20, 2015 at 00:53
> Yikes! It might have been me. VERY SORRY!
>
> It doesn't help that I can't even tell if it's me. I found out that
> sometimes I was logged out while editing the doc, leaving only some IP
> address as the author.
>
> Could the owner of the book limit editing rights to only those who are
> logged in as a registered person on Wikibooks? At least that way it's
> easier to trace mistakes.
>
> I do get distracted a lot during the day, so sometimes I leave a wiki page
> in the edit/open state could be some unfortunate combination of events
> caused the wiping of Transformations. Luckily wiki is undo-able.
>
> Thanks and SORRY!
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Improving-the-doc-tp14333p14664.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> Marius Kintel <marius at kintel.net>
> November 19, 2015 at 22:35
> Hey,
>
> Thanks to all for contributing to the docs.
>
> One question: I see that someone accidentally deleted most of this page:
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Transformations
>
> Not sure who, and somehow Wikibooks doesn?t let me undo it, as it thinks
> it?s ?suspicious?.
> Could someone with better wikibooks permissions take a look?
>
> Cheers,
>
> -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151130/1de1558c/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: postbox-contact.jpg
Type: image/jpeg
Size: 1141 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151130/1de1558c/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: compose-unknown-contact.jpg
Type: image/jpeg
Size: 770 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151130/1de1558c/attachment-0003.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image.png
Type: image/png
Size: 8548 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151130/1de1558c/attachment-0002.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image.png
Type: image/png
Size: 9696 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151130/1de1558c/attachment-0003.png>

From hypher at gmail.com  Mon Nov 30 16:25:50 2015
From: hypher at gmail.com (Yona Appletree)
Date: Mon, 30 Nov 2015 13:25:50 -0800
Subject: [OpenSCAD] Improving the doc
In-Reply-To: <CAEEmnrNqF1EXUr1-_QSOd9GjVhyJ1CBDW=JgBPFdZodKgopHRA@mail.gmail.com>
References: <1447828998302-14613.post@n5.nabble.com>
	<1447882726709-14629.post@n5.nabble.com>
	<1447884330884-14632.post@n5.nabble.com>
	<1447931761771-14640.post@n5.nabble.com>
	<1447939350024-14645.post@n5.nabble.com>
	<1447940144218-14646.post@n5.nabble.com>
	<1447940892775-14647.post@n5.nabble.com>
	<9FE53AD7-E953-4891-A8B1-0B6D4486A978@kintel.net>
	<1448009637077-14664.post@n5.nabble.com>
	<1448016858188-14666.post@n5.nabble.com>
	<1448899895705-14833.post@n5.nabble.com>
	<565CB4A8.4040508@arnholm.org> <565CB97E.6020805@gmail.com>
	<CAEEmnrNqF1EXUr1-_QSOd9GjVhyJ1CBDW=JgBPFdZodKgopHRA@mail.gmail.com>
Message-ID: <565CBEDE.3040205@gmail.com>

While that would make some sense, it would be backwards incompatible. 
Anything that relied on the projection functionality would be broken. 
Probably wouldn't have a huge impact, but it is a breaking change, 
nonetheless.

> nop head <mailto:nop.head at gmail.com>
> November 30, 2015 at 13:21
> I don't think X Y rotations should have any effect when the child is a 
> 2D object. Then F5 and F6 would be consistent, both a circle in this 
> case. Also F5 should render 2D objects as a very thin 3D object, not 1 
> unit thick.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> Carsten Arnholm <mailto:arnholm at arnholm.org>
> November 30, 2015 at 12:42
>
>
>
> At
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Using_the_2D_Subsystem#Rotate_Extrude 
>
> ...it is stated "Rotational extrusion spins a 2D shape around the 
> Y-axis to form a solid which has rotational symmetry. The resultant 
> solid is placed along the Z-axis."
>
> This is very unfortunate and confusing to say the least. What is not 
> stated is that the Y- and Z-axes mentioned do not refer to the same 
> coordinate system.
>
> To make some sense of it, the first quoted sentence refers to the 
> Y-axis on a 2D [X,Y] coordinate system and the second sentence refers 
> to the Z-axis in a 3D [X,Y,Z] coordinate system. The 2D [X,Y] 
> coordinates do *not* correspond to the 3D [X,Y] coordinates.
>
> As ChrisLT says, there is an unstated transformation of the 2D shape 
> into the 3D XZ plane before the extrusion takes place.
>
> If I could choose, I would have preferred things to be more explicit. 
> Given that rotations are referring to the 3d Z axis, it really does 
> not make sense that this does not work:
>
> 1)
> rotate_extrude()
> rotate([0,90,0])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> There is no output and no warning is given. The 2d polygon is placed 
> in the YZ plane, and you would think a rotate_extrude around Z would 
> be perfectly fine. But the user is simply left wondering what is going 
> on.
>
> On second attempt, one might try to place the polygon in the XZ plane:
>
> 2)
> rotate_extrude()
> rotate([90,0,0])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> The result is an infinitely thin circular face in the 3D XY plane. It 
> really does not make a lot of sense.
>
> Getting a bit desperate at this stage, one might end up trying
>
> 3)
> rotate_extrude()
> rotate([0,0,90])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> Which really just rotates the polygon around the Z axis. The result 
> again is nothing, no warning.
>
> "Ah, ok" you say, "I am mixing 2d coordinates with 3d transformations" 
> (should be perfectly valid, though). You might perhaps then try 
> something like:
>
> 4)
> rotate_extrude()
> rotate([90,0])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> Perhaps syntactically invalid, but no warning is given. The result is 
> the same as 2)
>
> 5) so the only thing that "works", but appears broken is
>
> rotate_extrude()
> rotate([0,0,0])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> or
>
> rotate_extrude()
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> It is very confusing to someone who actually understands 
> transformations. The result is not logical.
>
> ----
>
> Can it be fixed? Perhaps like this
>
> rotate_extrude(axis="X")
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> which (when the "axis" parameter is given) would apply no implicit 
> rotation, it would simply rotate the 2D polygon around the 3D X-axis, 
> i.e. the same result as the current
>
> translate([100,0,0])
> rotate([0,-90,0])
> rotate_extrude()
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> similarly
>
> rotate_extrude(axis="Y")
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> would be equivalent to the current
>
> rotate([-90,0,0])
> rotate_extrude()
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> Then, if you don't specify the axis of rotation, you get the old 
> "nonsensical" default, for reasons of compatibility:
>
> rotate_extrude()
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> meaning the same as
>
> rotate_extrude(axis="old_style")
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
>
> Just my thoughts....
>
> Carsten Arnholm
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> ChrisLT <mailto:clusbytaylor at gmail.com>
> November 30, 2015 at 08:11
> I think the section on 2D, and especially rotate_extrude, needs some
> clarification.
> I've only been using OpenSCAD for a few days, but it seems to me that the
> best way to think of 2D objects is as follows.
>
> A 2D object has no thickness, so must be extruded to create a 3D 
> object. 2D
> objects are created in the XY plane at Z=0. They can be translated and/or
> rotated into any other plane. This is particularly useful for text used to
> annotate a model.
> In order to make it visible, a 2D object is drawn in Preview mode with a
> thickness of 1 unit, but there is no actual 3D object at this time.
> In Render mode, if the first object to be drawn is 2D, any 3D objects will
> be ignored and vice versa. The projection of the 2D objects onto the XY
> plane is drawn with zero thickness. To render the 3D objects, make 
> sure the
> first object is a solid.
>
> There are two ways to extrude a 2D object into a solid. In both, if the 2D
> shape has been translated or rotated out of the Z=0 plane, the 
> extrusion is
> of its projection onto that plane:
> - linear_extrude: The 2D object, or its projection, is extruded in the +Z
> direction. Any twist is applied about the Z axis. Positive twist angles
> create a left-hand twist, negative, right-hand. Center=true centres the
> solid above and below the Z=0 plane. It does not centre in X or Y.
> Centre=false extrudes from Z=0 into positive Z. You cannot set negative
> height, but can use translate to move the object into negative Z if 
> needed.
> - rotate_extrude: The 2D shape, or its projection in the XY plane, is 
> first
> rotated 90 degrees about the X axis to put it into the XZ plane, then
> extruded by rotation about the Z axis. You may prefer to think that the 2D
> object was first extruded about the Y axis, then the extrusion rotated to
> put its axis along the Z axis.
>
> The current documentation says you can't use rotate_extrude to create a
> model of a screw thread. True - you should use linear_extrude with twist.
>
> Also, it says that if linear_extrude scale is a vector the resulting side
> walls may be non-planar. This is relevant for polygons but not circles. It
> reveals a bug in the rendering in 2015.03 which can be overcome by setting
> the slices and twist parameters.
>
> Also, it incorrectly says center=true centers a rotate_extrusion on the Z
> axis. No, it doesn't. It puts the vertical centre at Z=0.
>
> I'd be happy to edit the documentation, but don't know how to go about it.
>
> Chris
>
>
>
> --
> View this message in context: 
> http://forum.openscad.org/Improving-the-doc-tp14333p14833.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> ctchin <mailto:c.t.chin at szu.edu.cn>
> November 20, 2015 at 02:54
> Many thanks to wolf for some thorough checking of my draft versions. Not
> just for spotting my mistakes and deficiencies, but receiving 
> attention and
> comments from kintel, tp3 and wolf, especially, is very encouraging.
>
> I've pretty much implemented every one of his suggestions, plus a little
> more. But on recursion:
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language/Fast_Guide%28c.t.chin%29#Recursive_function_calls
>
>
> wolf wrote
>
> Here I have only copied verbatim the part from the old doc ,
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language#Recursive_functions
> adding or subtracting nothing. My intention was only to illustrate that
> relevant sub-topics would be included in the complete ref (currently
> misnamed Fast Guide).
>
> I agree the write-up needs improvement and wolf's comment is spot-on. But
> until I read thread mentioned by wolf, I wasn't even aware of tail 
> recursion
> (well not quite true... if I think really hard, I might recall from 
> CS101 a
> quarter century ago).
>
> So... I'd like to wiggle out of this job: would some kind soul go and 
> fix up
> the writing on recursive function calls? If you be bold, just go ahead and
> re-write the original version. If you be shy, do feel free to experiment
> with my Fast Guide, which is unofficial and work-in-progress. (both links
> are found above)
>
>
>
>
>
> --
> View this message in context: 
> http://forum.openscad.org/Improving-the-doc-tp14333p14666.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> ctchin <mailto:c.t.chin at szu.edu.cn>
> November 20, 2015 at 00:53
> Yikes! It might have been me. VERY SORRY!
>
> It doesn't help that I can't even tell if it's me. I found out that
> sometimes I was logged out while editing the doc, leaving only some IP
> address as the author.
>
> Could the owner of the book limit editing rights to only those who are
> logged in as a registered person on Wikibooks? At least that way it's
> easier to trace mistakes.
>
> I do get distracted a lot during the day, so sometimes I leave a wiki page
> in the edit/open state could be some unfortunate combination of events
> caused the wiping of Transformations. Luckily wiki is undo-able.
>
> Thanks and SORRY!
>
>
>
>
> --
> View this message in context: 
> http://forum.openscad.org/Improving-the-doc-tp14333p14664.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151130/f75891b5/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: postbox-contact.jpg
Type: image/jpeg
Size: 1266 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151130/f75891b5/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: compose-unknown-contact.jpg
Type: image/jpeg
Size: 770 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151130/f75891b5/attachment-0003.jpg>

From spindoc at roundtray.yeara.net  Mon Nov 30 16:33:59 2015
From: spindoc at roundtray.yeara.net (Spindoctor)
Date: Mon, 30 Nov 2015 14:33:59 -0700 (MST)
Subject: [OpenSCAD] OpenScad 2014.03 - Segmentation Fault
In-Reply-To: <AE46CDF4-FC7E-46C3-8C96-37C2B2F58907@kintel.net>
References: <CAMyDR6JEfEYpXycjsjA6eGR4je+CA=MrYEDCyb0Q2evcHhMfXA@mail.gmail.com>
	<1448791749572-14810.post@n5.nabble.com>
	<1448794980249-14811.post@n5.nabble.com>
	<CAMyDR6L+sMmWUJUBg+fGCcky2aW=i--68s9xJyNQXTS73qTjRA@mail.gmail.com>
	<1448815701345-14816.post@n5.nabble.com> <565B2EC8.9000507@gmx.de>
	<1448817429782-14818.post@n5.nabble.com> <565B3780.9020905@gmx.de>
	<1448836991033-14823.post@n5.nabble.com>
	<AE46CDF4-FC7E-46C3-8C96-37C2B2F58907@kintel.net>
Message-ID: <1448919239436-14843.post@n5.nabble.com>

Hi again!

Ok, I tried both.

First I tried render(convexity=3) at the first argument of my differences. I
opened the file with OpenSCAD 2015.03 (the stable version) and I can confirm
that this had an impact on the preview speed. Everything was a bit faster,
but still too slow to reasonably work with it.

In the mean time the Qt4 version was finished with compiling. I opened the
same file (still with render(convexity=3)) and I have to say this was a
*big* difference. The preview speed is still not "snappy" - it's more like
an old stop-motion film, but I would say I could live with that speed.

To also test the final combination, I removed render(convexity=3) again and
opened it with both versions again. Still the Qt4 version is much faster but
still too slow to work with it.

When I drag the model around it looks like the Qt5-version tries to display
all steps to the final position. This sometimes takes several minutes.

The Qt4 version instead just displays the first and the last position - no
(or just few) steps in between. This makes the Qt4 version much faster.

What do you think? This issue doesn't really "feel" resolved. Still I maybe
found a way I can continue my work on the model.

Thanks,

Marcel



--
View this message in context: http://forum.openscad.org/OpenScad-2014-03-Segmentation-Fault-tp14800p14843.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Mon Nov 30 17:02:52 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 30 Nov 2015 23:02:52 +0100
Subject: [OpenSCAD] Can I force Animation to use "Render" instead of
 "Preview"?
In-Reply-To: <1448918357216-14840.post@n5.nabble.com>
References: <1448864513323-14828.post@n5.nabble.com>
	<1448918357216-14840.post@n5.nabble.com>
Message-ID: <565CC78C.20709@gmx.de>

On 11/30/2015 10:19 PM, jpmendes wrote:
> Hi, I made this animation pre-rendering all the components  video-02.mp4
> <http://forum.openscad.org/file/n14840/video-02.mp4>  . It was very time
> consuming and definition is not as good as I expected. 
> Question: is there a way to achieve better video definition?
> 
>From the GUI it's currently not possible to set a specific resolution,
it always uses the window size, just grabbing the displayed image.

You can generate the animation from command line, e.g. using a script
like below. That way it's possible to define the image size within
the bounds your graphics driver will allow. I've used the example
Advanced->Animation that ships with the latest release.

Note that it needs an additional "$t = 0;" at the beginning of the
file to make the "-D" parameter work.

Result with HD resolution => http://files.openscad.org/tmp/animation-test.mp4

ciao,
  Torsten.


---snip---snap---snip---snap---snip---snap---snip---snap---snip---snap----

#!/bin/bash

STEPS=200
PATTERN=%04d.png

for a in $(seq 0 $STEPS)
do
        FILE=$(printf "$PATTERN" $a)
        echo "$FILE"
        openscad \
                --imgsize=1920,1080 \
                --camera=0,0,0,60,0,40,300 \
                "-D\$t=$a/$STEPS" \
                -o "$FILE" animation.scad \
                >/dev/null 2>&1
done

ffmpeg -i "$PATTERN" -c:v libx264 -r 30 -pix_fmt yuv420p animation.mp4

---snip---snap---snip---snap---snip---snap---snip---snap---snip---snap----




From jpmendes54 at gmail.com  Mon Nov 30 17:12:42 2015
From: jpmendes54 at gmail.com (jpmendes)
Date: Mon, 30 Nov 2015 15:12:42 -0700 (MST)
Subject: [OpenSCAD] combine a union child and a difference child in one
	object.
In-Reply-To: <DF2340B8E3D244E0B6382A2ECB112517@LeeFUJI>
References: <DF2340B8E3D244E0B6382A2ECB112517@LeeFUJI>
Message-ID: <1448921562979-14845.post@n5.nabble.com>

Do you want to generate a pipe with those two lines A and B? Or am I missing
something...
I use this generic module to generate my tubes.

DefaultSides=90;

module Tube(Length,Dout,Din,Sides) 
{			
    NSides= (Sides < 3 || Sides==undef)  ?  DefaultSides : Sides;

    rotate_extrude(convexity=2, $fn=NSides) translate([Din/2,0,0]) 
        square([(Dout-Din)/2,Length]); 
}
Tube();

Regards



--
View this message in context: http://forum.openscad.org/combine-a-union-child-and-a-difference-child-in-one-object-tp14834p14845.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Mon Nov 30 17:32:40 2015
From: mschafer at wireframe.biz (Neon22)
Date: Mon, 30 Nov 2015 15:32:40 -0700 (MST)
Subject: [OpenSCAD] combine a union child and a difference child in one
	object.
In-Reply-To: <1448921562979-14845.post@n5.nabble.com>
References: <DF2340B8E3D244E0B6382A2ECB112517@LeeFUJI>
	<1448921562979-14845.post@n5.nabble.com>
Message-ID: <1448922760178-14846.post@n5.nabble.com>

The cube has a cylindrical hole cut vertically through it.
Inside this is a thinner rod.
They are not connected together in any place.
We can't work out what sort of object you are trying to make.

You could add a flattened cube at the bottom and thereby make a mold kind-of
object to perhaps pour goop into to make tubes,  but not sure what this
object is trying to acheive so not sure how to answer your question.



--
View this message in context: http://forum.openscad.org/combine-a-union-child-and-a-difference-child-in-one-object-tp14834p14846.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jpmendes54 at gmail.com  Mon Nov 30 17:34:45 2015
From: jpmendes54 at gmail.com (jpmendes)
Date: Mon, 30 Nov 2015 15:34:45 -0700 (MST)
Subject: [OpenSCAD] Can I force Animation to use "Render" instead of
	"Preview"?
In-Reply-To: <565CC78C.20709@gmx.de>
References: <1448864513323-14828.post@n5.nabble.com>
	<1448918357216-14840.post@n5.nabble.com> <565CC78C.20709@gmx.de>
Message-ID: <1448922885881-14847.post@n5.nabble.com>

Hi Torsten, thanks a lot. Unfortunately I use Windows. I will try a script
adaptation to my OS.
Regards

jpmendes 



--
View this message in context: http://forum.openscad.org/Can-I-force-Animation-to-use-Render-instead-of-Preview-tp14828p14847.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jpmendes54 at gmail.com  Mon Nov 30 17:44:19 2015
From: jpmendes54 at gmail.com (jpmendes)
Date: Mon, 30 Nov 2015 15:44:19 -0700 (MST)
Subject: [OpenSCAD] Can I force Animation to use "Render" instead of
	"Preview"?
In-Reply-To: <1448922885881-14847.post@n5.nabble.com>
References: <1448864513323-14828.post@n5.nabble.com>
	<1448918357216-14840.post@n5.nabble.com> <565CC78C.20709@gmx.de>
	<1448922885881-14847.post@n5.nabble.com>
Message-ID: <1448923459844-14848.post@n5.nabble.com>

Hi Torsten, may I use the script directly in the CYGWIN Windows environment?
Thanks in advance.

Regards
jpmendes 



--
View this message in context: http://forum.openscad.org/Can-I-force-Animation-to-use-Render-instead-of-Preview-tp14828p14848.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Mon Nov 30 18:00:52 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Tue, 1 Dec 2015 00:00:52 +0100
Subject: [OpenSCAD] Can I force Animation to use "Render" instead of
 "Preview"?
In-Reply-To: <1448923459844-14848.post@n5.nabble.com>
References: <1448864513323-14828.post@n5.nabble.com>
	<1448918357216-14840.post@n5.nabble.com> <565CC78C.20709@gmx.de>
	<1448922885881-14847.post@n5.nabble.com>
	<1448923459844-14848.post@n5.nabble.com>
Message-ID: <565CD524.4050701@gmx.de>

On 11/30/2015 11:44 PM, jpmendes wrote:
> Hi Torsten, may I use the script directly in the CYGWIN Windows environment?
>
That might work, if some basic unix tools (in this case bash, seq, printf)
are installed.

Otherwise you could just generate a batch file using a good text editor,
excel, libreoffice... anything that makes it easy to generate lots of
lines and replace the number in the -D parameter.

(Not sure if the -D needs some quotes on Windows)

openscad.com --imgsize=1920,1080 --camera=0,0,0,60,0,40,300 -D$t=0/200 -o 0001.png animation.scad
openscad.com --imgsize=1920,1080 --camera=0,0,0,60,0,40,300 -D$t=1/200 -o 0002.png animation.scad
openscad.com --imgsize=1920,1080 --camera=0,0,0,60,0,40,300 -D$t=2/200 -o 0003.png animation.scad
.
.
.
openscad.com --imgsize=1920,1080 --camera=0,0,0,60,0,40,300 -D$t=199/200 -o 0199.png animation.scad

ciao,
  Torsten.



From Leef_me at cox.net  Mon Nov 30 19:08:40 2015
From: Leef_me at cox.net (Leef_me)
Date: Mon, 30 Nov 2015 16:08:40 -0800
Subject: [OpenSCAD] combine a union child and a difference child in
	oneobject.
In-Reply-To: <nyZP1r02u0MQoQY01yZRcF>
References: <DF2340B8E3D244E0B6382A2ECB112517@LeeFUJI><1448921562979-14845.post@n5.nabble.com>
	<nyZP1r02u0MQoQY01yZRcF>
Message-ID: <1DA345EBBED44208A606B8F4537F0D65@LeeFUJI>

You have all the essentially information.

> The cube has a cylindrical hole cut vertically through it.
> Inside this is a thinner rod.
> They are not connected together in any place.
> We can't work out what sort of object you are trying to make.

I want the "cylindrical hole" to be in the same module as the "thinner rod".
Wherever the "thinner rod" is placed, the "cylindrical hole" follows.

If I build a union of all the "thinner rods", their companion holes are cut 
from some shape that I specify.


--------------------------------------------------
From: "Neon22" <mschafer at wireframe.biz>
Sent: Monday, November 30, 2015 2:32 PM
To: <discuss at lists.openscad.org>
Subject: Re: [OpenSCAD] combine a union child and a difference child in 
oneobject.

> The cube has a cylindrical hole cut vertically through it.
> Inside this is a thinner rod.
> They are not connected together in any place.
> We can't work out what sort of object you are trying to make.
>
> You could add a flattened cube at the bottom and thereby make a mold 
> kind-of
> object to perhaps pour goop into to make tubes,  but not sure what this
> object is trying to acheive so not sure how to answer your question.
>
>
>
> --
> View this message in context: 
> http://forum.openscad.org/combine-a-union-child-and-a-difference-child-in-one-object-tp14834p14846.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org 



From nop.head at gmail.com  Mon Nov 30 19:09:13 2015
From: nop.head at gmail.com (nop head)
Date: Tue, 1 Dec 2015 00:09:13 +0000
Subject: [OpenSCAD] Improving the doc
In-Reply-To: <565CBEDE.3040205@gmail.com>
References: <1447828998302-14613.post@n5.nabble.com>
	<1447882726709-14629.post@n5.nabble.com>
	<1447884330884-14632.post@n5.nabble.com>
	<1447931761771-14640.post@n5.nabble.com>
	<1447939350024-14645.post@n5.nabble.com>
	<1447940144218-14646.post@n5.nabble.com>
	<1447940892775-14647.post@n5.nabble.com>
	<9FE53AD7-E953-4891-A8B1-0B6D4486A978@kintel.net>
	<1448009637077-14664.post@n5.nabble.com>
	<1448016858188-14666.post@n5.nabble.com>
	<1448899895705-14833.post@n5.nabble.com>
	<565CB4A8.4040508@arnholm.org> <565CB97E.6020805@gmail.com>
	<CAEEmnrNqF1EXUr1-_QSOd9GjVhyJ1CBDW=JgBPFdZodKgopHRA@mail.gmail.com>
	<565CBEDE.3040205@gmail.com>
Message-ID: <CAEEmnrPgquQWtbadnVOj1+WiFp3t6UXQJ9PXX_uZQKWOew+X3Q@mail.gmail.com>

Yes but does anybody rely on an undocumented implicit projection? It was a
total surprise to me when I tried it.

On 30 November 2015 at 21:25, Yona Appletree <hypher at gmail.com> wrote:

> While that would make some sense, it would be backwards incompatible.
> Anything that relied on the projection functionality would be broken.
> Probably wouldn't have a huge impact, but it is a breaking change,
> nonetheless.
>
> nop head <nop.head at gmail.com>
> November 30, 2015 at 13:21
> I don't think X Y rotations should have any effect when the child is a 2D
> object. Then F5 and F6 would be consistent, both a circle in this case.
> Also F5 should render 2D objects as a very thin 3D object, not 1 unit thick.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> Carsten Arnholm <arnholm at arnholm.org>
> November 30, 2015 at 12:42
>
>
>
> At
>
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Using_the_2D_Subsystem#Rotate_Extrude
> ...it is stated "Rotational extrusion spins a 2D shape around the Y-axis
> to form a solid which has rotational symmetry. The resultant solid is
> placed along the Z-axis."
>
> This is very unfortunate and confusing to say the least. What is not
> stated is that the Y- and Z-axes mentioned do not refer to the same
> coordinate system.
>
> To make some sense of it, the first quoted sentence refers to the Y-axis
> on a 2D [X,Y] coordinate system and the second sentence refers to the
> Z-axis in a 3D [X,Y,Z] coordinate system. The 2D [X,Y] coordinates do *not*
> correspond to the 3D [X,Y] coordinates.
>
> As ChrisLT says, there is an unstated transformation of the 2D shape into
> the 3D XZ plane before the extrusion takes place.
>
> If I could choose, I would have preferred things to be more explicit.
> Given that rotations are referring to the 3d Z axis, it really does not
> make sense that this does not work:
>
> 1)
> rotate_extrude()
> rotate([0,90,0])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> There is no output and no warning is given. The 2d polygon is placed in
> the YZ plane, and you would think a rotate_extrude around Z would be
> perfectly fine. But the user is simply left wondering what is going on.
>
> On second attempt, one might try to place the polygon in the XZ plane:
>
> 2)
> rotate_extrude()
> rotate([90,0,0])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> The result is an infinitely thin circular face in the 3D XY plane. It
> really does not make a lot of sense.
>
> Getting a bit desperate at this stage, one might end up trying
>
> 3)
> rotate_extrude()
> rotate([0,0,90])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> Which really just rotates the polygon around the Z axis. The result again
> is nothing, no warning.
>
> "Ah, ok" you say, "I am mixing 2d coordinates with 3d transformations"
> (should be perfectly valid, though). You might perhaps then try something
> like:
>
> 4)
> rotate_extrude()
> rotate([90,0])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> Perhaps syntactically invalid, but no warning is given. The result is the
> same as 2)
>
> 5) so the only thing that "works", but appears broken is
>
> rotate_extrude()
> rotate([0,0,0])
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> or
>
> rotate_extrude()
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> It is very confusing to someone who actually understands transformations.
> The result is not logical.
>
> ----
>
> Can it be fixed? Perhaps like this
>
> rotate_extrude(axis="X")
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> which (when the "axis" parameter is given) would apply no implicit
> rotation, it would simply rotate the 2D polygon around the 3D X-axis, i.e.
> the same result as the current
>
> translate([100,0,0])
> rotate([0,-90,0])
> rotate_extrude()
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> similarly
>
> rotate_extrude(axis="Y")
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> would be equivalent to the current
>
> rotate([-90,0,0])
> rotate_extrude()
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> Then, if you don't specify the axis of rotation, you get the old
> "nonsensical" default, for reasons of compatibility:
>
> rotate_extrude()
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
> meaning the same as
>
> rotate_extrude(axis="old_style")
> polygon(points=[ [0,0], [100,0], [100,100] ]);
>
>
> Just my thoughts....
>
> Carsten Arnholm
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> ChrisLT <clusbytaylor at gmail.com>
> November 30, 2015 at 08:11
> I think the section on 2D, and especially rotate_extrude, needs some
> clarification.
> I've only been using OpenSCAD for a few days, but it seems to me that the
> best way to think of 2D objects is as follows.
>
> A 2D object has no thickness, so must be extruded to create a 3D object. 2D
> objects are created in the XY plane at Z=0. They can be translated and/or
> rotated into any other plane. This is particularly useful for text used to
> annotate a model.
> In order to make it visible, a 2D object is drawn in Preview mode with a
> thickness of 1 unit, but there is no actual 3D object at this time.
> In Render mode, if the first object to be drawn is 2D, any 3D objects will
> be ignored and vice versa. The projection of the 2D objects onto the XY
> plane is drawn with zero thickness. To render the 3D objects, make sure the
> first object is a solid.
>
> There are two ways to extrude a 2D object into a solid. In both, if the 2D
> shape has been translated or rotated out of the Z=0 plane, the extrusion is
> of its projection onto that plane:
> - linear_extrude: The 2D object, or its projection, is extruded in the +Z
> direction. Any twist is applied about the Z axis. Positive twist angles
> create a left-hand twist, negative, right-hand. Center=true centres the
> solid above and below the Z=0 plane. It does not centre in X or Y.
> Centre=false extrudes from Z=0 into positive Z. You cannot set negative
> height, but can use translate to move the object into negative Z if needed.
> - rotate_extrude: The 2D shape, or its projection in the XY plane, is first
> rotated 90 degrees about the X axis to put it into the XZ plane, then
> extruded by rotation about the Z axis. You may prefer to think that the 2D
> object was first extruded about the Y axis, then the extrusion rotated to
> put its axis along the Z axis.
>
> The current documentation says you can't use rotate_extrude to create a
> model of a screw thread. True - you should use linear_extrude with twist.
>
> Also, it says that if linear_extrude scale is a vector the resulting side
> walls may be non-planar. This is relevant for polygons but not circles. It
> reveals a bug in the rendering in 2015.03 which can be overcome by setting
> the slices and twist parameters.
>
> Also, it incorrectly says center=true centers a rotate_extrusion on the Z
> axis. No, it doesn't. It puts the vertical centre at Z=0.
>
> I'd be happy to edit the documentation, but don't know how to go about it.
>
> Chris
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Improving-the-doc-tp14333p14833.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> ctchin <c.t.chin at szu.edu.cn>
> November 20, 2015 at 02:54
> Many thanks to wolf for some thorough checking of my draft versions. Not
> just for spotting my mistakes and deficiencies, but receiving attention and
> comments from kintel, tp3 and wolf, especially, is very encouraging.
>
> I've pretty much implemented every one of his suggestions, plus a little
> more. But on recursion:
>
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language/Fast_Guide%28c.t.chin%29#Recursive_function_calls
>
>
> wolf wrote
>
> Here I have only copied verbatim the part from the old doc ,
>
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language#Recursive_functions
> adding or subtracting nothing. My intention was only to illustrate that
> relevant sub-topics would be included in the complete ref (currently
> misnamed Fast Guide).
>
> I agree the write-up needs improvement and wolf's comment is spot-on. But
> until I read thread mentioned by wolf, I wasn't even aware of tail
> recursion
> (well not quite true... if I think really hard, I might recall from CS101 a
> quarter century ago).
>
> So... I'd like to wiggle out of this job: would some kind soul go and fix
> up
> the writing on recursive function calls? If you be bold, just go ahead and
> re-write the original version. If you be shy, do feel free to experiment
> with my Fast Guide, which is unofficial and work-in-progress. (both links
> are found above)
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Improving-the-doc-tp14333p14666.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> ctchin <c.t.chin at szu.edu.cn>
> November 20, 2015 at 00:53
> Yikes! It might have been me. VERY SORRY!
>
> It doesn't help that I can't even tell if it's me. I found out that
> sometimes I was logged out while editing the doc, leaving only some IP
> address as the author.
>
> Could the owner of the book limit editing rights to only those who are
> logged in as a registered person on Wikibooks? At least that way it's
> easier to trace mistakes.
>
> I do get distracted a lot during the day, so sometimes I leave a wiki page
> in the edit/open state could be some unfortunate combination of events
> caused the wiping of Transformations. Luckily wiki is undo-able.
>
> Thanks and SORRY!
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Improving-the-doc-tp14333p14664.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151201/40e201b7/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: compose-unknown-contact.jpg
Type: image/jpeg
Size: 770 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151201/40e201b7/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: postbox-contact.jpg
Type: image/jpeg
Size: 1266 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151201/40e201b7/attachment-0003.jpg>

From nop.head at gmail.com  Mon Nov 30 19:22:38 2015
From: nop.head at gmail.com (nop head)
Date: Tue, 1 Dec 2015 00:22:38 +0000
Subject: [OpenSCAD] combine a union child and a difference child in
	oneobject.
In-Reply-To: <1DA345EBBED44208A606B8F4537F0D65@LeeFUJI>
References: <DF2340B8E3D244E0B6382A2ECB112517@LeeFUJI>
	<1448921562979-14845.post@n5.nabble.com>
	<1DA345EBBED44208A606B8F4537F0D65@LeeFUJI>
Message-ID: <CAEEmnrNLK-wjwVVYjjYY8ZOzVMC6qPk5hRKK+KZKtBm2Jq7ctQ@mail.gmail.com>

No you can't do that in one operation in OpenScad. You need to subtract the
hole and add the rod. You could subtract a tube, which would leave a hole
with a rod in it but it couldn't protrude out of the cube without adding it.

On 1 December 2015 at 00:08, Leef_me <Leef_me at cox.net> wrote:

> You have all the essentially information.
>
> The cube has a cylindrical hole cut vertically through it.
>> Inside this is a thinner rod.
>> They are not connected together in any place.
>> We can't work out what sort of object you are trying to make.
>>
>
> I want the "cylindrical hole" to be in the same module as the "thinner
> rod".
> Wherever the "thinner rod" is placed, the "cylindrical hole" follows.
>
> If I build a union of all the "thinner rods", their companion holes are
> cut from some shape that I specify.
>
>
> --------------------------------------------------
> From: "Neon22" <mschafer at wireframe.biz>
> Sent: Monday, November 30, 2015 2:32 PM
> To: <discuss at lists.openscad.org>
> Subject: Re: [OpenSCAD] combine a union child and a difference child in
> oneobject.
>
> The cube has a cylindrical hole cut vertically through it.
>> Inside this is a thinner rod.
>> They are not connected together in any place.
>> We can't work out what sort of object you are trying to make.
>>
>> You could add a flattened cube at the bottom and thereby make a mold
>> kind-of
>> object to perhaps pour goop into to make tubes,  but not sure what this
>> object is trying to acheive so not sure how to answer your question.
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/combine-a-union-child-and-a-difference-child-in-one-object-tp14834p14846.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151201/08589fa6/attachment.html>

From Leef_me at cox.net  Mon Nov 30 19:54:15 2015
From: Leef_me at cox.net (Leef_me)
Date: Mon, 30 Nov 2015 16:54:15 -0800
Subject: [OpenSCAD] combine a union child and a difference child
	inoneobject.
In-Reply-To: <o0PS1r00l0MQoQY010PTvR>
References: <DF2340B8E3D244E0B6382A2ECB112517@LeeFUJI><1448921562979-14845.post@n5.nabble.com><1DA345EBBED44208A606B8F4537F0D65@LeeFUJI>
	<o0PS1r00l0MQoQY010PTvR>
Message-ID: <59FBA91C76124C299107E2EB2152D75A@LeeFUJI>

Here is a new version that does something of what I want.

$fn=16;

difference()
{
 cube([5,5,5], center=true);
 wire(which=2); // part A
};

wire(which=-1); // part B

module wire(which=1)
{
 if (which==-1)
  cylinder(d=1, h=15, center=true); // part B
 else    
        #cylinder(d=1.5, h=7, center=true); // part A
};


This page refers to children, but I don't see how to change the module to use children(0) or children(1)

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language#Object_modules






From: nop head 
Sent: Monday, November 30, 2015 4:22 PM
To: OpenSCAD general discussion 
Subject: Re: [OpenSCAD] combine a union child and a difference child inoneobject.


No you can't do that in one operation in OpenScad. You need to subtract the hole and add the rod. You could subtract a tube, which would leave a hole with a rod in it but it couldn't protrude out of the cube without adding it.



On 1 December 2015 at 00:08, Leef_me <Leef_me at cox.net> wrote:

  You have all the essentially information.


    The cube has a cylindrical hole cut vertically through it.
    Inside this is a thinner rod.
    They are not connected together in any place.
    We can't work out what sort of object you are trying to make.


  I want the "cylindrical hole" to be in the same module as the "thinner rod".
  Wherever the "thinner rod" is placed, the "cylindrical hole" follows.

  If I build a union of all the "thinner rods", their companion holes are cut from some shape that I specify.


  --------------------------------------------------
  From: "Neon22" <mschafer at wireframe.biz>
  Sent: Monday, November 30, 2015 2:32 PM
  To: <discuss at lists.openscad.org>
  Subject: Re: [OpenSCAD] combine a union child and a difference child in oneobject.


    The cube has a cylindrical hole cut vertically through it.
    Inside this is a thinner rod.
    They are not connected together in any place.
    We can't work out what sort of object you are trying to make.

    You could add a flattened cube at the bottom and thereby make a mold kind-of
    object to perhaps pour goop into to make tubes,  but not sure what this
    object is trying to acheive so not sure how to answer your question.



    --
    View this message in context: http://forum.openscad.org/combine-a-union-child-and-a-difference-child-in-one-object-tp14834p14846.html
    Sent from the OpenSCAD mailing list archive at Nabble.com.

    _______________________________________________
    OpenSCAD mailing list
    Discuss at lists.openscad.org
    http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org 



  _______________________________________________
  OpenSCAD mailing list
  Discuss at lists.openscad.org
  http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org





--------------------------------------------------------------------------------


_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20151130/399aebd3/attachment.html>

From mschafer at wireframe.biz  Mon Nov 30 20:25:37 2015
From: mschafer at wireframe.biz (Neon22)
Date: Mon, 30 Nov 2015 18:25:37 -0700 (MST)
Subject: [OpenSCAD] combine a union child and a difference child
	inoneobject.
In-Reply-To: <59FBA91C76124C299107E2EB2152D75A@LeeFUJI>
References: <DF2340B8E3D244E0B6382A2ECB112517@LeeFUJI>
	<1448921562979-14845.post@n5.nabble.com>
	<1DA345EBBED44208A606B8F4537F0D65@LeeFUJI>
	<59FBA91C76124C299107E2EB2152D75A@LeeFUJI>
Message-ID: <1448933137530-14854.post@n5.nabble.com>

How about this:

cyl_res = 16;

module wire()  {
	difference() {
		// outer block
		cube(size=[5,5,5], center=true);
		// subtract this
		children(0);
	}
}

wire() cylinder(d=1.5, h=7, center=true, $fn=cyl_res);
cylinder(d=1, h=15, center=true, $fn=cyl_res);




--
View this message in context: http://forum.openscad.org/combine-a-union-child-and-a-difference-child-in-one-object-tp14834p14854.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Mon Nov 30 22:32:53 2015
From: marius at kintel.net (Marius Kintel)
Date: Mon, 30 Nov 2015 22:32:53 -0500
Subject: [OpenSCAD] OpenScad 2014.03 - Segmentation Fault
In-Reply-To: <1448919239436-14843.post@n5.nabble.com>
References: <CAMyDR6JEfEYpXycjsjA6eGR4je+CA=MrYEDCyb0Q2evcHhMfXA@mail.gmail.com>
	<1448791749572-14810.post@n5.nabble.com>
	<1448794980249-14811.post@n5.nabble.com>
	<CAMyDR6L+sMmWUJUBg+fGCcky2aW=i--68s9xJyNQXTS73qTjRA@mail.gmail.com>
	<1448815701345-14816.post@n5.nabble.com> <565B2EC8.9000507@gmx.de>
	<1448817429782-14818.post@n5.nabble.com> <565B3780.9020905@gmx.de>
	<1448836991033-14823.post@n5.nabble.com>
	<AE46CDF4-FC7E-46C3-8C96-37C2B2F58907@kintel.net>
	<1448919239436-14843.post@n5.nabble.com>
Message-ID: <47EE546A-A2E0-4046-8441-B253BEDB7023@kintel.net>

> 
> When I drag the model around it looks like the Qt5-version tries to display
> all steps to the final position. This sometimes takes several minutes.
> 
This is the Qt5 problem that?s been discussed in various places. We haven?t really tracked down the cause of that one yet. The Qt4 behaviour is the correct one.

 -Marius



From marius at kintel.net  Mon Nov 30 22:47:27 2015
From: marius at kintel.net (Marius Kintel)
Date: Mon, 30 Nov 2015 22:47:27 -0500
Subject: [OpenSCAD] OpenSCAD 2015.03-2 released
Message-ID: <C08C0DF7-0E53-42B7-B431-1BCE0C0C719F@kintel.net>

Hi all,

We've released an update, OpenSCAD 2015.03-2, to address some critical issues with OpenSCAD 2015.03.
The new binaries are available for download, or on their way shortly.

Fixed issues:

#1483 - Fix Z-fighting in Ortho view
#1479 - No check for infinite $fn
#1472 - "nan" in list comprehension causes crash
#452 - rands() fails when the seed is a floating point number
#1407 - Recursive module crash
#1425 - Animate Filename Generation - Duplicate/Missing Filenames
#1420 - expression-evaluation-tests fails on arm64
#1410 - Crash when a polygon contains NaN
#1378 - Linear extrude plus infinite twist causes crash instead of just an error
#1358 - Add more detailed installer information including version number
#1356 - Crash when multiplying matrices with undefined elements
#1350 - Saving file when HD is full ends up in data loss
#1342 - Syntax Highlighting Does Not Work on Linux Mint 17.1
#1337 - Simple detection of script and direction based on given text
#1325 - Crash when polygons with > 3 indices turn out to be degenerate
#1329 - version() returned ```[0,0,0]```

Cheers,

-Marius



