From doug at moens.org  Fri Jan  1 00:57:57 2016
From: doug at moens.org (doug moen)
Date: Fri, 1 Jan 2016 00:57:57 -0500
Subject: [OpenSCAD] My OpenScad library for string and vector operations
In-Reply-To: <1451621976673-15403.post@n5.nabble.com>
References: <1451583057530-15399.post@n5.nabble.com>
	<CAGV6i+MTa==ye1ZptLahLPmyRjNJbmhZfEheC4M6+SvVUjsS+w@mail.gmail.com>
	<CAJHP+FM6Cm_P9r+B-e8ZHU_knvqF2EtkkfOUinPxNov8LA0rFQ@mail.gmail.com>
	<1451621976673-15403.post@n5.nabble.com>
Message-ID: <CAGV6i+MF-_DmenfEvSkvWFS3NnDL3jQe0xhcmWh8EWtaeVELzw@mail.gmail.com>

Nathana?l: Thanks for sharing. There's a lot of cool OpenSCAD code out
there, and it's hard to find out about it. My only comment right now is
that I find it strange for getval to return -1 if the key isn't found. A
return value of undef would seem more idiomatic for OpenSCAD.

Runsun: Thanks for the reference to String Theory. I had no idea that
regular expressions were implemented for OpenSCAD. And the General Library
of Relativity is even cooler (for my purposes anyway, since I don't use
strings for much).

On 31 December 2015 at 23:19, runsun <runsun at gmail.com> wrote:

> One other string lib that worth attention: the String Theory by 16807:
>
> http://www.thingiverse.com/thing:526023
>
>
>
> -----
>
> $  Runsun Pan, PhD
>
> $ libs:
>
> doctest ,
>
> faces ( git ),
>
> offline doc ( git ),
>
> runscad.py( 1 , 2 , git ),
>
>
> synwrite( 1 , 2 );
>
>
>
>  $ tips:
>
> hash( 1 , 2 ),
>
> sweep ,
>
> var( 1 , 2 ),
>
> lerp ,
>
> animGif ,
>
> precision( 1 , 2 ),
>
> xl-control
>
>
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/My-OpenScad-library-for-string-and-vector-operations-tp15399p15403.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160101/d0031b25/attachment.html>

From nop.head at gmail.com  Fri Jan  1 07:08:23 2016
From: nop.head at gmail.com (nop head)
Date: Fri, 1 Jan 2016 12:08:23 +0000
Subject: [OpenSCAD] Happy New Year + OpenSCAD syntax lexer for SynWrite
In-Reply-To: <1451621185549-15402.post@n5.nabble.com>
References: <1451621185549-15402.post@n5.nabble.com>
Message-ID: <CAEEmnrMs9cb9O7e6R3OKjMG-r7G-0S0gmq9c=QM_nrui_NS8Fg@mail.gmail.com>

Happy New Year and thanks for the lexer.

I hadn't come across SynWrite before but it looks like a nice editor. I
have never seen multi-caret editing before!

I added render to the list of actions as it seems to be missing.



On 1 January 2016 at 04:06, runsun <runsun at gmail.com> wrote:

> Happy New Year to all dear fellow OpenSCADists! To enjoy our journey of
> OpenSCAD in the new 2016 to come, allow me to present a present: an
> OpenSCAD syntax lexer for the editor SynWrite
> <http://www.uvviewsoft.com/synwrite/>.
>
> It's a lexer intended to deal with large and/or complicated scad files.
> Users will be able to divide large code into sections, in-function sections
> and in-module sections, all are blocks that can be folded and easily
> navigated through the syntax tree panel.
>
> The lexer already being incorporated into the SynWrite library, so you can
> get right to it once the SynWrite is installed. Couple of screenshots :
>
> *1. The synwrite_syntax_demo.scad domonstrating all the features of the
> lexer:*
>
>
>
> *2. foldable in-function sections*
>
>
>
> *3. Foldable in-module sections*
>
>
>
> *4. William Adam's math lib as viewed with this lexer*
>
>
>
>
> To load it to your SynWrite, just go to [Options]/ [Add-ons Manager] /
> [Install]
>
> To use it, select it in the status bar on the bottom of editor.
>
> The demonstrating file, synwrite_syntax_demo.scad, can be downloaded from
> the thing:http://www.thingiverse.com/thing:1237864. Enjoy !
> $ <http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1> *Runsun
> Pan, PhD*
> $ *libs*: doctest <https://github.com/runsun/openscad_doctest>, faces
> <http://forum.openscad.org/A-faces-function-for-simple-polyhedrons-td12809.html>
> (git <https://github.com/runsun/faces.scad>), offline doc
> <http://forum.openscad.org/Use-openscad-offliner-for-offline-documentation-td13096.html>
> (git <https://github.com/runsun/openscad_offliner>), runscad.py(1
> <http://forum.openscad.org/Animating-gif-with-3D-rotation-tp14011p14029.html>
> ,2 <http://forum.openscad.org/Symmetrical-Rotation-tp14062p14075.html>,git
> <https://gist.github.com/runsun/995250a8002386ab9abc>);
> $ *tips*: hash(1
> <http://forum.openscad.org/parameterized-models-td8303.html#a8306>,2
> <http://forum.openscad.org/Can-I-get-some-code-review-up-in-here-tp12341p12355.html>),
> sweep <http://forum.openscad.org/Two-annoyances-td12935i20.html#a13110>,
> var(1
> <http://forum.openscad.org/Ignoring-unknown-variable-issue-tp13156p13321.html>
> ,2 <http://forum.openscad.org/Special-Variables-tp14477p14512.html>), lerp
> <http://forum.openscad.org/Irregular-mesh-generated-tp13765p13779.html>,
> animGif
> <http://forum.openscad.org/Animating-gif-with-3D-rotation-tp14011.html>,
> precision(1
> <http://forum.openscad.org/Inconsistent-conversion-of-floating-number-to-string-at-7th-significant-digit-tp14350.html>
> ,2
> <http://forum.openscad.org/Simple-addition-of-numbers-introduces-error-td14408.html>),
> xl-control
> <http://forum.openscad.org/Parameterlist-Excel-export-to-OpenSCAD-tp15363p15367.html>
>
> ------------------------------
> View this message in context: Happy New Year + OpenSCAD syntax lexer for
> SynWrite
> <http://forum.openscad.org/Happy-New-Year-OpenSCAD-syntax-lexer-for-SynWrite-tp15402.html>
> Sent from the OpenSCAD mailing list archive <http://forum.openscad.org/>
> at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160101/5276ccbd/attachment.html>

From rudolf at parkinbot.com  Fri Jan  1 12:15:48 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 1 Jan 2016 10:15:48 -0700 (MST)
Subject: [OpenSCAD] Spline interpolation - nSpline()
In-Reply-To: <1451570238692-15394.post@n5.nabble.com>
References: <1450443386867-15207.post@n5.nabble.com>
	<1451318555976-15354.post@n5.nabble.com>
	<1451321056216-15355.post@n5.nabble.com>
	<1451326686077-15356.post@n5.nabble.com>
	<1451343448520-15361.post@n5.nabble.com>
	<1451567975890-15392.post@n5.nabble.com>
	<1451568653092-15393.post@n5.nabble.com>
	<1451570238692-15394.post@n5.nabble.com>
Message-ID: <1451668548506-15406.post@n5.nabble.com>

Hi Johan, 

I just updated sweep() and it fits your needs now. You can download it from
http://www.thingiverse.com/thing:1208001

BTW sweep() is NOT a full blown algorithm you can use with any shape. It
consumes convex shapes and weakly symmetric shapes like airfoils only, but
NO fancy stuff. skin() has a more general implementation. 

Don't forget to use the proper version of circle_() now. 


> function circle_(r, N) = [   for(i=[0:N-1])  let(angle = i*360/N) 
> [r*sin(angle), r*cos(angle)]];

- Rudolf 



--
View this message in context: http://forum.openscad.org/Spline-interpolation-nSpline-tp15207p15406.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Fri Jan  1 14:55:18 2016
From: runsun at gmail.com (runsun)
Date: Fri, 1 Jan 2016 12:55:18 -0700 (MST)
Subject: [OpenSCAD] My OpenScad library for string and vector operations
In-Reply-To: <CAGV6i+MF-_DmenfEvSkvWFS3NnDL3jQe0xhcmWh8EWtaeVELzw@mail.gmail.com>
References: <1451583057530-15399.post@n5.nabble.com>
	<CAGV6i+MTa==ye1ZptLahLPmyRjNJbmhZfEheC4M6+SvVUjsS+w@mail.gmail.com>
	<CAJHP+FM6Cm_P9r+B-e8ZHU_knvqF2EtkkfOUinPxNov8LA0rFQ@mail.gmail.com>
	<1451621976673-15403.post@n5.nabble.com>
	<CAGV6i+MF-_DmenfEvSkvWFS3NnDL3jQe0xhcmWh8EWtaeVELzw@mail.gmail.com>
Message-ID: <1451678118415-15407.post@n5.nabble.com>

doug.moen wrote
>  I had no idea that regular expressions were implemented for OpenSCAD

It's cool, isn't it ? In fact I have coded similar thing for my lib, a
scanner like parser that can do this:

> fml = "a+cos(2)+sin(5)";
> 
> match( fml, ps=[A_z] ) => [[0,0,"a",["a"]], [2,4, "cos",["cos"]],
> [9,11,"sin",["sin"]]];
> 
> match( fml, ps=[["cos","sin"]] ) => [[2,4,"cos", ["cos"]], [9,11,
> "sin",["sin"]]];
> 
> // Want only item 0 and 2 in the matches:
> match( fml, ps=["+-", ["sin(","cos("], 0_9,")]"], want=[0,2])
> => [ [1,7, "+cos(2)", ["+", "2"]], [8,14,"+sin(5)", ["+", "5"]] ]
> 
> match( "EE+ccc+AAaa+BBbb+DDD", ps=[A_Z,a_z] )
> => [ [7, 10,"AAaa", ["AA","aa"]], [12,15,"BBbb", ["BB","bb"]] ]

And with that you can do :

> calc( "x+1", ["x",3] )= 4
> calc( "x(y+2)", ["x",3,"y",1] )= 9
> calc( "x(y+2)^2", ["x",3,"y",1] )= 81
> calc( "x*((y+2)^2)", ["x",3,"y",1] )= 27
> calc( "2x+1.5y", ["x",3,"y",4] )= 12

This allows for an object easily customizable with different formula.

This was developed independently before I knew the existence of regex.  I'll
have to check if user 16807 is better for this kind of use. 

BTW, as a side note, the function calc( ) needs a scope parameter --- a
perfect usage case for a hash.



-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git ), 


synwrite( 1 , 2 ); 



 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision( 1 , 2 ),

xl-control 








--
View this message in context: http://forum.openscad.org/My-OpenScad-library-for-string-and-vector-operations-tp15399p15407.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Fri Jan  1 15:08:45 2016
From: runsun at gmail.com (runsun)
Date: Fri, 1 Jan 2016 13:08:45 -0700 (MST)
Subject: [OpenSCAD] Happy New Year + OpenSCAD syntax lexer for SynWrite
In-Reply-To: <CAEEmnrMs9cb9O7e6R3OKjMG-r7G-0S0gmq9c=QM_nrui_NS8Fg@mail.gmail.com>
References: <1451621185549-15402.post@n5.nabble.com>
	<CAEEmnrMs9cb9O7e6R3OKjMG-r7G-0S0gmq9c=QM_nrui_NS8Fg@mail.gmail.com>
Message-ID: <1451678925087-15408.post@n5.nabble.com>

@nophead, Thx for the render reminding. I'll collect bugs/improvement, etc
into next version. 

>From what I see, SynWrite has a lot of potentials. Besides the extremely
flexible lexer customization that I can do almost all I want, it has other
features:

-- With the external tool feature you can set it up to run OpenSCAD then
capture the console output of current file without even have OpenSCAD
opened. This will allows for any quick check of OpenSCAD language behaviors

-- It has the "Auto-completion" and "Function parameter hint" for common
languages. It might be possible that a plugin can be written for OpenSCAD. 

-- It has the capability of customizable event handlers (like, on_change or
something) and python API for that. This means that it could be possible to
set up key_up event and output function names and argument lists to
SynWrite's output panel. 




-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git ), 


synwrite( 1 , 2 ); 



 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision( 1 , 2 ),

xl-control 








--
View this message in context: http://forum.openscad.org/Happy-New-Year-OpenSCAD-syntax-lexer-for-SynWrite-tp15402p15408.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From unkerjay at centurylink.net  Fri Jan  1 16:41:07 2016
From: unkerjay at centurylink.net (unkerjay)
Date: Fri, 1 Jan 2016 14:41:07 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
Message-ID: <1451684467862-15409.post@n5.nabble.com>

Tried using Blender.

It's been a REAL challenge as there doesn't seem to be much
on the subject of text on polyhedra other than by texture,
which, 3D Printed, leaves only the option of sandstone printing.
Not very durable.

Not to mention that it's LARGE and hasn't passed ANY printability
OR repair tests yet.  

As you can see from the image below, it's not that complex.

Tried this:

http://blender.stackexchange.com/questions/28829/set-edge-as-axis-for-surface-rotation

as a starting point.  Thickened the edges.  Added the text.  Put it all
together, and voila!  Mush!

Looks nice.  Won't print.

There's this by the GREAT, and I use that word deliberately,
Kit Wallace:

http://kitwallace.tumblr.com/post/84238290024/adding-text

but, for me, it's just not clear.  

What I don't know about Openscad is a far greater chasm
than what I know.  So, please, bear that in mind.

I'm guessing, if it's to be done at all, in a remotely printable
format, my best option might be through Openscad.  But, I
have no idea how to begin.

Anyone?

Thanx

12_Days_Dodec_JPG.jpg
<http://forum.openscad.org/file/n15409/12_Days_Dodec_JPG.jpg>  



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From fred_dot_u at yahoo.com  Fri Jan  1 17:04:42 2016
From: fred_dot_u at yahoo.com (fred)
Date: Fri, 1 Jan 2016 22:04:42 +0000 (UTC)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1451684467862-15409.post@n5.nabble.com>
References: <1451684467862-15409.post@n5.nabble.com>
Message-ID: <1416820630.5884053.1451685882218.JavaMail.yahoo@mail.yahoo.com>

I can't tell you this is the specific answer, but it might be of use. I'm a simpleton when it comes to OpenSCAD, but this set of modules perhaps might be helpful?
https://github.com/brodykenrick/text_on_OpenSCAD
 

    On Friday, January 1, 2016 4:42 PM, unkerjay <unkerjay at centurylink.net> wrote:
 

 Tried using Blender.

It's been a REAL challenge as there doesn't seem to be much
on the subject of text on polyhedra other than by texture,
which, 3D Printed, leaves only the option of sandstone printing.
Not very durable.

Not to mention that it's LARGE and hasn't passed ANY printability
OR repair tests yet.? 

As you can see from the image below, it's not that complex.

Tried this:

http://blender.stackexchange.com/questions/28829/set-edge-as-axis-for-surface-rotation

as a starting point.? Thickened the edges.? Added the text.? Put it all
together, and voila!? Mush!

Looks nice.? Won't print.

There's this by the GREAT, and I use that word deliberately,
Kit Wallace:

http://kitwallace.tumblr.com/post/84238290024/adding-text

but, for me, it's just not clear.? 

What I don't know about Openscad is a far greater chasm
than what I know.? So, please, bear that in mind.

I'm guessing, if it's to be done at all, in a remotely printable
format, my best option might be through Openscad.? But, I
have no idea how to begin.

Anyone?

Thanx

12_Days_Dodec_JPG.jpg
<http://forum.openscad.org/file/n15409/12_Days_Dodec_JPG.jpg>? 



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409.html
Sent from the OpenSCAD mailing list archive at Nabble.com.

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160101/9d68733c/attachment.html>

From mschafer at wireframe.biz  Fri Jan  1 17:43:59 2016
From: mschafer at wireframe.biz (Neon22)
Date: Fri, 1 Jan 2016 15:43:59 -0700 (MST)
Subject: [OpenSCAD] Happy New Year + OpenSCAD syntax lexer for SynWrite
In-Reply-To: <1451678925087-15408.post@n5.nabble.com>
References: <1451621185549-15402.post@n5.nabble.com>
	<CAEEmnrMs9cb9O7e6R3OKjMG-r7G-0S0gmq9c=QM_nrui_NS8Fg@mail.gmail.com>
	<1451678925087-15408.post@n5.nabble.com>
Message-ID: <1451688239051-15411.post@n5.nabble.com>

sounds and looks pretty good. I'm a notepad++ person and I find the openSCAD
support very good.
   - http://www.thingiverse.com/thing:911342 (remix of  Gary Crowell
<http://www.thingiverse.com/garyacrowellsr>   original via  Fogl
<http://www.thingiverse.com/thing:167899/#remixes>  )
      - http://www.thingiverse.com/thing:167899

How does it compare - anyone know ?



--
View this message in context: http://forum.openscad.org/Happy-New-Year-OpenSCAD-syntax-lexer-for-SynWrite-tp15402p15411.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Fri Jan  1 18:09:10 2016
From: runsun at gmail.com (runsun)
Date: Fri, 1 Jan 2016 16:09:10 -0700 (MST)
Subject: [OpenSCAD] Happy New Year + OpenSCAD syntax lexer for SynWrite
In-Reply-To: <1451688239051-15411.post@n5.nabble.com>
References: <1451621185549-15402.post@n5.nabble.com>
	<CAEEmnrMs9cb9O7e6R3OKjMG-r7G-0S0gmq9c=QM_nrui_NS8Fg@mail.gmail.com>
	<1451678925087-15408.post@n5.nabble.com>
	<1451688239051-15411.post@n5.nabble.com>
Message-ID: <1451689750553-15412.post@n5.nabble.com>

@Neon22, I'm a Notepad++ person, too, being using it for as long as I can
remember.

Ever since I started learning OpenScad, I tried to make it work several
times but has no luck. Later on I found people seem to have done it, so I
picked up and tried those (including yours). What I found is that npp only
provides some commonly used features and I've tried and failed to add stuff
that I want. For example, the different *sections* type of blocks that I
described in this threads. The flexibility of syntax customization is far
beyond that of SynWrite.  

Another consideration is the auto-completion and function parameter hint.
People WERE using Npp for that, but it seems that new version of npp doesn't
allow it anymore. 

I am also eyeing at the several other customizations that I mentioned. It
gives me an impression that we can do a lot more to fit out needs. 

It doesn't mean that npp is not good tool for OpenSCAD. I think it is still
good for many. But to deal with large and complicated files, which I often
have, npp is just not enough. 



-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git ), 


synwrite( 1 , 2 ); 



 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision( 1 , 2 ),

xl-control 








--
View this message in context: http://forum.openscad.org/Happy-New-Year-OpenSCAD-syntax-lexer-for-SynWrite-tp15402p15412.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Fri Jan  1 18:24:57 2016
From: mschafer at wireframe.biz (Neon22)
Date: Fri, 1 Jan 2016 16:24:57 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1416820630.5884053.1451685882218.JavaMail.yahoo@mail.yahoo.com>
References: <1451684467862-15409.post@n5.nabble.com>
	<1416820630.5884053.1451685882218.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <1451690697545-15413.post@n5.nabble.com>

I recently "fixed" the "deprecated use of assign statement" in that lib and
my pull request got accepted but I broke the TTB, BTT options he had added. 

It works pretty well though and uses the new text() statement.
I need to try to fix that. its all in those nested if conditionals I think.



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15413.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Fri Jan  1 18:50:43 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 1 Jan 2016 16:50:43 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1451684467862-15409.post@n5.nabble.com>
References: <1451684467862-15409.post@n5.nabble.com>
Message-ID: <1451692243533-15414.post@n5.nabble.com>

There is a very elegant approach to construct a dodekaeder in OpenSCAD and it
goes hand in hand with putting some text on the sides as well.

<http://forum.openscad.org/file/n15414/showcase15.png> 

Try this code (CGAL rendering works quite well). 


> strings = ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"]; 
> 
> dodekaeder(10); 
> 
> module dodekaeder(r = 10)
> {
>   w = acos(1/sqrt(5)); 
>   rotate([0, 0, 180]) 
>   twosides(r, 0); 
>   for(i=[0:4])
>     rotate([0, -w, i*72])  // tricky!
>     twosides(r, i+1); 
> }
> 
> module twosides(r=1, i=1)
> {
>   h = r*2.618; 
>   linear_extrude(height = h, twist = 36, center = true) // tricky twist
>   circle(r, $fn=5); 
>   
>   // text for upper and lower surface
>   translate([0, 0, h/2]) 
>   linear_extrude(height = 1)
>   text(strings[i],halign = "center", valign = "center");
>   rotate([0, 180, 0])
>   translate([0, 0, h/2]) 
>   linear_extrude(height = 1)
>   text(strings[i+6],halign = "center", valign = "center");
> }


unkerjay wrote
> I'm guessing, if it's to be done at all, in a remotely printable
> format, my best option might be through Openscad.  But, I
> have no idea how to begin.
> 
> Anyone?

- Rudolf 




--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15414.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Fri Jan  1 19:04:35 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Sat, 2 Jan 2016 01:04:35 +0100
Subject: [OpenSCAD] Generate OpenSCAD models from AngelScript
In-Reply-To: <5684807C.4030304@arnholm.org>
References: <568445B4.8050506@arnholm.org>
	<1451515118720-15380.post@n5.nabble.com> <56845EAA.8060203@arnholm.org>
	<5684709B.9030907@pobox.com> <568473CC.7000304@arnholm.org>
	<1451523289358-15386.post@n5.nabble.com> <5684807C.4030304@arnholm.org>
Message-ID: <56871413.9020506@arnholm.org>

Happy new year to all!

I have been adding features to AngelScript CSG today. As others have 
mentioned here, spline curves can be very useful. I have hade the same 
idea for some time and have now added 2d and 3d spline curves.

A small example creating an OpenSCAD polygon from a 2d spline curve:
http://arnholm.org/software/as_csg/spline_sample.png

Another example is 3d splines. Below is an example of 3 splines turned 
into a lofted surface, turned into an OpenSCAD polyhedron by offsetting 
the original surface to create a solid with top an bottom:
http://arnholm.org/software/as_csg/polyhedron_sample.png

You can obviously make it as thick or thing as you like, and you can use 
as many/long curves as you want to. They should however not intersect 
and should be listed in a logical order.

The complete AngelScript CSG code used for generating the polyhedron:
http://arnholm.org/software/as_csg/polyhedron_sample.as

The result can be displayed in OpenSCAD using this .csg file
http://arnholm.org/software/as_csg/polyhedron_sample.csg

These new features will obviously not run in the version released a few 
days ago, as this is brand new.

Have fun.

Carsten Arnholm


From mschafer at wireframe.biz  Fri Jan  1 21:03:54 2016
From: mschafer at wireframe.biz (Neon22)
Date: Fri, 1 Jan 2016 19:03:54 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1451690697545-15413.post@n5.nabble.com>
References: <1451684467862-15409.post@n5.nabble.com>
	<1416820630.5884053.1451685882218.JavaMail.yahoo@mail.yahoo.com>
	<1451690697545-15413.post@n5.nabble.com>
Message-ID: <1451700234559-15416.post@n5.nabble.com>

submitted new pull req - rotate on circle and cylinder cases fixed.



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15416.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Fri Jan  1 21:12:47 2016
From: mschafer at wireframe.biz (Neon22)
Date: Fri, 1 Jan 2016 19:12:47 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1451692243533-15414.post@n5.nabble.com>
References: <1451684467862-15409.post@n5.nabble.com>
	<1451692243533-15414.post@n5.nabble.com>
Message-ID: <1451700767298-15417.post@n5.nabble.com>

To use as a dice and have the numbers opposite each other sum to 13 you'll
need to change to:
strings = ["1", "2", "3", "4", "5", "6.", "12", "11", "10", "9.", "8", "7"];

To make the text a little smaller (default size=10). use the size parameter
(or make the dodec bigger).
E.g.
text(strings[i+6],halign = "center", valign = "center", size=8)



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15417.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Sat Jan  2 13:13:50 2016
From: runsun at gmail.com (runsun)
Date: Sat, 2 Jan 2016 11:13:50 -0700 (MST)
Subject: [OpenSCAD] api in json format
Message-ID: <1451758430956-15418.post@n5.nabble.com>

Hi guys, I'm recently exploring the customization ability of editor  SynWrite
<http://forum.openscad.org/Happy-New-Year-OpenSCAD-syntax-lexer-for-SynWrite-td15402.html> 
, especially the python feature (py api) as well as event handlers. I am
very close to write up a plugin that can do function parameter hint, like if
you type:

cube(

then the log panel or output panel shows you the argument definition. 

At this point, a file with function/module in json format will be needed.
With that I can just load it into python. 

I can picture that such a file will be very useful as a source for other
formats of help documentation to fulfill the single-source documentation
we've been talking for a while. 

I believe we don't have such a file yet. So shall we start one here, like
what key/value pairs should be included ?





-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git ), 


synwrite( 1 , 2 ); 



 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision( 1 , 2 ),

xl-control 








--
View this message in context: http://forum.openscad.org/api-in-json-format-tp15418.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Sat Jan  2 13:29:25 2016
From: runsun at gmail.com (runsun)
Date: Sat, 2 Jan 2016 11:29:25 -0700 (MST)
Subject: [OpenSCAD] api in json format
In-Reply-To: <1451758430956-15418.post@n5.nabble.com>
References: <1451758430956-15418.post@n5.nabble.com>
Message-ID: <1451759365986-15419.post@n5.nabble.com>

Something like:

> {
>    
> <unit_name>
> : 
>    
>       { "type": 
> &lt;
> mod|func
> &gt;
>       , "tags": 
> &lt;
> math|operation| ... 
> &gt;
>       , "args": { 
> <arg1>
> : { "val": 
> <val>
> , "doc":"..." }
>                 , 
> <arg1>
> : { "val": 
> <val>
> , "doc":"..." }
>                 , ...
>                 }
>       , "short_doc": "..."
>       , "long_doc": "..."
>       }                      
> }





-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git ), 


synwrite( 1 , 2 ); 



 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision( 1 , 2 ),

xl-control 








--
View this message in context: http://forum.openscad.org/api-in-json-format-tp15418p15419.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sat Jan  2 13:53:08 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sat, 2 Jan 2016 19:53:08 +0100
Subject: [OpenSCAD] api in json format
In-Reply-To: <1451758430956-15418.post@n5.nabble.com>
References: <1451758430956-15418.post@n5.nabble.com>
Message-ID: <56881C94.4090200@gmx.de>

On 01/02/2016 07:13 PM, runsun wrote:
> I believe we don't have such a file yet. So shall we start one here, like
> what key/value pairs should be included ?
> 
I'm not aware of any existing file.

Yes, it would be useful for a number of other cases too, like as input
for https://github.com/openscad/openscad/pull/905 and maybe also for the
cheatsheet.

Some additional data that could be included:

* general
  - version of the description file itself
  - version of OpenSCAD the description refers to

* function/module
  - link to manual

* parameters
  - data type of parameter
  - mandatory / optional parameter

There's also another option, but that's probably too much work for the
short term... add the information to the code itself and let OpenSCAD
generate that info via some special command line switch.

ciao,
  Torsten.



From roys at iro.umontreal.ca  Sat Jan  2 20:17:19 2016
From: roys at iro.umontreal.ca (blobule)
Date: Sat, 2 Jan 2016 18:17:19 -0700 (MST)
Subject: [OpenSCAD] Volume and Center of mass
Message-ID: <1451783839383-15421.post@n5.nabble.com>

Hi everyone, happy new year!

I have implemented the computation of volume and center of mass in OpenSCAD.
This is extending a previous proposal to compute the bounding box of an
object ( see 
http://forum.openscad.org/request-for-comments-object-properties-and-or-alignment-td12983.html#a13200
<http://forum.openscad.org/request-for-comments-object-properties-and-or-alignment-td12983.html#a13200>   
).

The way it works is through a "probe()" function which computes the bounding
box, volume and center of mass of its first children, then renders all the
other children with extra variables defined (bbsize, bbcenter, volume,
centroid, ...).
For exemple:

module thing() { cube(20); translate([10,10,10]) cube(20); }
probe(volume=true) {
    thing(); // the thing to measure
    echo("volume=",volume," centroid=",centroid);
    %thing();
    color("red") translate(centroid) sphere(r=1,$fn=32);
}

<http://forum.openscad.org/file/n15421/volume00.volume00> 

This code will print "volume=15000 centroid=[15,15,15]". Notice that because
volume computation can be slow, you must specify "volume=true" to probe() in
order to get the information. It is an "on demand" computation, so I assume
it will be used only when needed. And when its needed, it will surely be
faster than computing by hand... :-)

The implementation somewhat simple: the polyhedron is decomposed into convex
parts (just like minkowski() does), then each part is further decomposed
into tetrahedrons. The volumes and centroids of all tetrahedrons are then
collected to get the final result. By the way, the computation is performed
on nef polyhedron using exact number representation, so it is very accurate.

Here are a few examples of what can be done with this...

A perfectly balanced object, where the base is automatically put at the
center of gravity:
<http://forum.openscad.org/file/n15421/volume1.volume1> 

Balancing objects:
<http://forum.openscad.org/file/n15421/volume2.volume2> 

Finding the center of rotation of assymetric wheels:
<http://forum.openscad.org/file/n15421/volume3.volume3> 

Making objects the exact same volume (here a sphere(20) is used as a
reference, and the computed cube has sides 32.0439... both have a volume of
32902.7 (not 33510.3 since the sphere is not a perfect sphere)
<http://forum.openscad.org/file/n15421/volume4.volume4> 


Can this be of any use to anyone? If so, I'll be happy to finalize it and
submit it for inclusion.

Sincerely,

S?bastien





--
View this message in context: http://forum.openscad.org/Volume-and-Center-of-mass-tp15421.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sat Jan  2 23:34:24 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 2 Jan 2016 21:34:24 -0700 (MST)
Subject: [OpenSCAD] api in json format
In-Reply-To: <56881C94.4090200@gmx.de>
References: <1451758430956-15418.post@n5.nabble.com> <56881C94.4090200@gmx.de>
Message-ID: <1451795664593-15422.post@n5.nabble.com>

Need to consider how the r= r1= r2= d= d1= d2= options would be handled.
Also the positional parameters are somewhat non-intuative sometimes, BTW.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/api-in-json-format-tp15418p15422.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From unkerjay at centurylink.net  Sat Jan  2 23:36:49 2016
From: unkerjay at centurylink.net (unkerjay)
Date: Sat, 2 Jan 2016 21:36:49 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1451700767298-15417.post@n5.nabble.com>
References: <1451684467862-15409.post@n5.nabble.com>
	<1451692243533-15414.post@n5.nabble.com>
	<1451700767298-15417.post@n5.nabble.com>
Message-ID: <1451795809088-15423.post@n5.nabble.com>

Here's what worked (sort of).

Thank you SO MUCH for this!

Haven't tried decreasing the text size.

First thing I tried, even before seeing
your reply, was to increase the dodec
size.

How would I do multiple lines of text.

strings = ["Partridge", "2 T-Doves", "3 F-Hens", "4 C-Birds", "5 G-Rings",
"6 Geese", "7 Swans", "8 Maids", "9 Ladies", "10 Lords", "11 Pipers", "12
Drummers"]; 

dodekaeder(50); 

module dodekaeder(r = 50) 
{ 
  w = acos(1/sqrt(5)); 
  rotate([0, 0, 180]) 
  twosides(r, 0); 
  for(i=[0:4]) 
    rotate([0, -w, i*72])  // tricky! 
    twosides(r, i+1); 
} 

module twosides(r=1, i=1) 
{ 
  h = r*2.618; 
  linear_extrude(height = h, twist = 36, center = true) // tricky twist 
  circle(r, $fn=5); 
  
  // text for upper and lower surface 
  translate([0, 0, h/2]) 
  linear_extrude(height = 1) 
  text(strings[i],halign = "center", valign = "center"); 
  rotate([0, 180, 0]) 
  translate([0, 0, h/2]) 
  linear_extrude(height = 1) 
  text(strings[i+6],halign = "center", valign = "center"); 
}



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15423.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sat Jan  2 23:38:41 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 2 Jan 2016 21:38:41 -0700 (MST)
Subject: [OpenSCAD] My OpenScad library for string and vector operations
In-Reply-To: <1451583057530-15399.post@n5.nabble.com>
References: <1451583057530-15399.post@n5.nabble.com>
Message-ID: <1451795921550-15424.post@n5.nabble.com>

roipoussiere wrote
> And I have also a question, where to put this in the OpenScad repo ?

You can also list it  here
<https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Libraries#Other_Libraries>  



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/My-OpenScad-library-for-string-and-vector-operations-tp15399p15424.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From unkerjay at centurylink.net  Sun Jan  3 01:29:56 2016
From: unkerjay at centurylink.net (unkerjay)
Date: Sat, 2 Jan 2016 23:29:56 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1451795809088-15423.post@n5.nabble.com>
References: <1451684467862-15409.post@n5.nabble.com>
	<1451692243533-15414.post@n5.nabble.com>
	<1451700767298-15417.post@n5.nabble.com>
	<1451795809088-15423.post@n5.nabble.com>
Message-ID: <1451802596921-15425.post@n5.nabble.com>

Final Version (including text resize):

A little tweaking in Netfabb Basic and
it's good to go!

Thank you!

strings = ["Partridge", "2 T-Doves", "3 F-Hens", "4 C-Birds", "5 G-Rings",
"6 Geese", "12 Drummers","7 Swans", "8 Maids", "9 Ladies", "10 Lords", "11
Pipers"]; 

dodekaeder(40); 

module dodekaeder(r = 40) 
{ 
  w = acos(1/sqrt(5)); 
  rotate([0, 0, 180]) 
  twosides(r, 0); 
  for(i=[0:4]) 
    rotate([0, -w, i*72])  // tricky! 
    twosides(r, i+1); 
} 

module twosides(r=1, i=1) 
{ 
  h = r*2.618; 
  linear_extrude(height = h, twist = 36, center = true) // tricky twist 
  circle(r, $fn=5); 
  
  // text for upper and lower surface 
  translate([0, 0, h/2]) 
  linear_extrude(height = 1) 
  text(strings[i],halign = "center", valign = "center", size=6); 
  rotate([0, 180, 0]) 
  translate([0, 0, h/2]) 
  linear_extrude(height = 1) 
  text(strings[i+6],halign = "center", valign = "center", size=6);   
}



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15425.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Sun Jan  3 01:32:19 2016
From: mschafer at wireframe.biz (Neon22)
Date: Sat, 2 Jan 2016 23:32:19 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1451795809088-15423.post@n5.nabble.com>
References: <1451684467862-15409.post@n5.nabble.com>
	<1451692243533-15414.post@n5.nabble.com>
	<1451700767298-15417.post@n5.nabble.com>
	<1451795809088-15423.post@n5.nabble.com>
Message-ID: <1451802739662-15426.post@n5.nabble.com>

You could make the text into lists of two strings, implying two lines.
Then print one under the other using two translate/text statements ?

Or use a more complex method where you parse the text, separating by spaces,
and then scale the whole thing to fit.
But I think you only need a special puropse one-off solution so I'd go with
my first suggestion.



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15426.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Sun Jan  3 01:41:25 2016
From: mschafer at wireframe.biz (Neon22)
Date: Sat, 2 Jan 2016 23:41:25 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1451802739662-15426.post@n5.nabble.com>
References: <1451684467862-15409.post@n5.nabble.com>
	<1451692243533-15414.post@n5.nabble.com>
	<1451700767298-15417.post@n5.nabble.com>
	<1451795809088-15423.post@n5.nabble.com>
	<1451802739662-15426.post@n5.nabble.com>
Message-ID: <1451803285564-15427.post@n5.nabble.com>

strings = [["Partridge"], ["2","T-Doves"], ["3","F-Hens"], ["4","C-Birds"],
		   ["5","G-Rings"], ["6","Geese"], ["12","Drummers"],["7","Swans"],
		   ["8","Maids"], ["9","Ladies"], ["10","Lords"], ["11","Pipers"]  ];

t_height = 8;

dodekaeder(40);

module dodekaeder(r = 40)
{
  w = acos(1/sqrt(5));
  rotate([0, 0, 180])
  twosides(r, 0);
  for(i=[0:4])
    rotate([0, -w, i*72])  // tricky!
    twosides(r, i+1);
}

module twosides(r=1, i=1)
{
  h = r*2.618;
  linear_extrude(height = h, twist = 36, center = true) // tricky twist
  circle(r, $fn=5);
 
  // text for upper and lower surface
  translate([0, t_height, h/2])
  linear_extrude(height = 1)
	text(strings[i][0],halign = "center", valign = "center", size=t_height);
  translate([0, -t_height, h/2])
  linear_extrude(height = 1)
	text(strings[i][1],halign = "center", valign = "center", size=t_height);
  //
  rotate([0, 180, 0]) {
	  translate([0, t_height, h/2])
	  linear_extrude(height = 1)
		text(strings[i+6][0],halign = "center", valign = "center", size=t_height);
	  translate([0, -t_height, h/2])
	  linear_extrude(height = 1)
		text(strings[i+6][1],halign = "center", valign = "center", size=t_height);
	}
} 



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15427.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mickvav at gmail.com  Sun Jan  3 03:50:57 2016
From: mickvav at gmail.com (Mihail Vasiliev)
Date: Sun, 3 Jan 2016 01:50:57 -0700 (MST)
Subject: [OpenSCAD] export() function.
Message-ID: <1451811057510-15428.post@n5.nabble.com>

Hello, everyone. 
I've just created a pull request for export() function - lt was strange for
me that a language has import() and doesn't have an export() operation,
although it's available from GUI. So, I've extended export.cc module to make
it support calls for export(file="test.dxf") ....;

Example:

export(file="testcube.dxf") projection(cut=true)
       translate([0,0,-1]) 
           cube([2,2,2]);

There is a pull request on github on this topic - 

https://github.com/openscad/openscad/pull/1534



--
View this message in context: http://forum.openscad.org/export-function-tp15428.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Sun Jan  3 07:17:44 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 3 Jan 2016 12:17:44 +0000
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
Message-ID: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>

 A cylinder is not the same as a linear_extruded circle. The side facets of
a cylinder are rectangles whereas the linear_extrude version are a pair of
triangles. This causes ugliness if you want to union them. Using a
linear_extruded circle instead of a cylinder works in some cases but I
still seem to have problems when the height is very different.

Here is an example:-

A base made from a hull of circles linear extruded.




A cylinder made from exactly the same circle linear extruded.



The union has extra facets and vertices on the base for some reason I don't
quite understand.


?
Could linear extrude use rectangles in the case when there is no twist so
the points are guaranteed to be planar?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160103/4b8eee82/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cylinder.png
Type: image/png
Size: 16998 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160103/4b8eee82/attachment.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: base.png
Type: image/png
Size: 20348 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160103/4b8eee82/attachment-0001.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: union.png
Type: image/png
Size: 18382 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160103/4b8eee82/attachment-0002.png>

From nop.head at gmail.com  Sun Jan  3 10:03:34 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 3 Jan 2016 15:03:34 +0000
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
Message-ID: <CAEEmnrObwKmpfE6q6we3DixaeyDo7FSOAsdXHojFf3w0bOh_vQ@mail.gmail.com>

The union seems to make up extra vertices. If I show the cylinder on its
own or the hull on its own the vertices are in the same place. Also they
are as should be with F5 but F6 introduces new vertices that should not be
there. I tried to distil it down to a simple example but that works fine.

On 3 January 2016 at 12:17, nop head <nop.head at gmail.com> wrote:

>  A cylinder is not the same as a linear_extruded circle. The side facets
> of a cylinder are rectangles whereas the linear_extrude version are a pair
> of triangles. This causes ugliness if you want to union them. Using a
> linear_extruded circle instead of a cylinder works in some cases but I
> still seem to have problems when the height is very different.
>
> Here is an example:-
>
> A base made from a hull of circles linear extruded.
>
>
>
>
> A cylinder made from exactly the same circle linear extruded.
>
>
>
> The union has extra facets and vertices on the base for some reason I
> don't quite understand.
>
>
> ?
> Could linear extrude use rectangles in the case when there is no twist so
> the points are guaranteed to be planar?
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160103/1d94a80d/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cylinder.png
Type: image/png
Size: 16998 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160103/1d94a80d/attachment.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: base.png
Type: image/png
Size: 20348 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160103/1d94a80d/attachment-0001.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: union.png
Type: image/png
Size: 18382 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160103/1d94a80d/attachment-0002.png>

From marius at kintel.net  Sun Jan  3 11:34:30 2016
From: marius at kintel.net (Marius Kintel)
Date: Sun, 3 Jan 2016 11:34:30 -0500
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
Message-ID: <37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>


> Could linear extrude use rectangles in the case when there is no twist so the points are guaranteed to be planar?
> 
I guess we could do this as a special case. Note that 4 vertices in floating point aren?t guaranteed to be planar, but there?s a good chance they are. CGAL is particularly picky about planarity and we have to triangulate whenever CGAL complains.

 -Marius



From nop.head at gmail.com  Sun Jan  3 11:39:31 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 3 Jan 2016 16:39:31 +0000
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
Message-ID: <CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>

With linear_extrude surely the top vertices have exactly the same x,y
coordinates as the bottom and just differ in Z, regardless of the
representation?

On 3 January 2016 at 16:34, Marius Kintel <marius at kintel.net> wrote:

>
> > Could linear extrude use rectangles in the case when there is no twist
> so the points are guaranteed to be planar?
> >
> I guess we could do this as a special case. Note that 4 vertices in
> floating point aren?t guaranteed to be planar, but there?s a good chance
> they are. CGAL is particularly picky about planarity and we have to
> triangulate whenever CGAL complains.
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160103/19be9328/attachment.html>

From marius at kintel.net  Sun Jan  3 11:42:31 2016
From: marius at kintel.net (Marius Kintel)
Date: Sun, 3 Jan 2016 11:42:31 -0500
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
Message-ID: <AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>

> On Jan 3, 2016, at 11:39 AM, nop head <nop.head at gmail.com> wrote:
> 
> With linear_extrude surely the top vertices have exactly the same x,y coordinates as the bottom and just differ in Z, regardless of the representation?
> 
Good point. If we also disregard scale, that would indeed constitute a special case we could rely on.

 -Marius



From runsun at gmail.com  Sun Jan  3 11:43:44 2016
From: runsun at gmail.com (runsun)
Date: Sun, 3 Jan 2016 09:43:44 -0700 (MST)
Subject: [OpenSCAD] Volume and Center of mass
In-Reply-To: <1451783839383-15421.post@n5.nabble.com>
References: <1451783839383-15421.post@n5.nabble.com>
Message-ID: <1451839424274-15433.post@n5.nabble.com>

Looks nice ! I for one is very interested in this. 

btw can you provide some references to the algorithm you use ? I cannot
image how this could be done with the current openscad. So there must be
something worth my learning. 



-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git ), 


synwrite( 1 , 2 ); 



 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision( 1 , 2 ),

xl-control 








--
View this message in context: http://forum.openscad.org/Volume-and-Center-of-mass-tp15421p15433.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Sun Jan  3 12:04:24 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Sun, 3 Jan 2016 10:04:24 -0700 (MST)
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <CAEEmnrObwKmpfE6q6we3DixaeyDo7FSOAsdXHojFf3w0bOh_vQ@mail.gmail.com>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<CAEEmnrObwKmpfE6q6we3DixaeyDo7FSOAsdXHojFf3w0bOh_vQ@mail.gmail.com>
Message-ID: <1451840664967-15435.post@n5.nabble.com>

Any stl-representation finally will be triangulated. So what do you expect to
gain, if you allowed for triangles AND rectangles (or even planar rhombus)
and write double but specialized code to preserve rectangles as long as
possible? 

You would have to start with two implementations for linear_extrude(), one
for calls with twist<>n*360 and one for all other cases. 

I mean, what is your sense of ugliness? 

- Rudolf 



--
View this message in context: http://forum.openscad.org/Unnecessary-triangulation-in-linear-extrude-tp15429p15435.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Sun Jan  3 12:22:13 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 3 Jan 2016 17:22:13 +0000
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <1451840664967-15435.post@n5.nabble.com>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<CAEEmnrObwKmpfE6q6we3DixaeyDo7FSOAsdXHojFf3w0bOh_vQ@mail.gmail.com>
	<1451840664967-15435.post@n5.nabble.com>
Message-ID: <CAEEmnrNEtgsuvsHu66La8vU4eybkvQOb6A58mfV5XW_YtKM7vg@mail.gmail.com>

I am trying to get rid of degenerate triangles in the STL. I think they
come from these extra facets and vertices. However I now think it may be a
bug in CGAL union.

Here is the result from my code with a lot removed. There are extra facets


?
Here is my simple test code to re-create the bug, but it doesn't happen.

$fa = 5;
$fs = 0.5;

union() {
    cylinder(r = 4, h= 100);

    linear_extrude(height = 10) hull() {
            circle(4);

        translate([30, 10, 0])
            circle(4);

        translate([10, 30, 0])
            circle(4);
    }
}

This is what it should look like because the vertices on the top and bottom
of the cylinder should exactly match those of the rounded corner,
regardless of number representation as they are all created by circle or
cylinder with the same parameters.



On 3 January 2016 at 17:04, Parkinbot <rudolf at parkinbot.com> wrote:

> Any stl-representation finally will be triangulated. So what do you expect
> to
> gain, if you allowed for triangles AND rectangles (or even planar rhombus)
> and write double but specialized code to preserve rectangles as long as
> possible?
>
> You would have to start with two implementations for linear_extrude(), one
> for calls with twist<>n*360 and one for all other cases.
>
> I mean, what is your sense of ugliness?
>
> - Rudolf
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Unnecessary-triangulation-in-linear-extrude-tp15429p15435.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160103/b68174a9/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pretty.png
Type: image/png
Size: 14521 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160103/b68174a9/attachment.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ugly.png
Type: image/png
Size: 22457 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160103/b68174a9/attachment-0001.png>

From jpmendes54 at gmail.com  Sun Jan  3 13:26:09 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Sun, 3 Jan 2016 11:26:09 -0700 (MST)
Subject: [OpenSCAD] export() function.
In-Reply-To: <1451811057510-15428.post@n5.nabble.com>
References: <1451811057510-15428.post@n5.nabble.com>
Message-ID: <1451845569640-15437.post@n5.nabble.com>

Hello,

I asked for such a functionality in a previous thread.
Now only a "function" to check for the existence of a file is missing.
Please note that the code I presented then did not intend to be exact, it
was only to express an idea.

And the idea was the capability of some automation from within the code to
achieve a fluid view and manipulation of complex multi-part objects.
Explaining briefly: rendering a multi-part complex object can make us loose
many minutes if not hours every time we start an editing session. When we
start assembling a multi-part object it happens frequently that some modules
are not at the right positions or that we forgot some details, so we need to
look to the object from several angles to understand better what to do. If
not rendered the set is almost impossible to move or rotate on the
view-port, the time lag is enormous. 
My solution would be: the modules that are important for the assembly would
verify for a previously exported .stl file with the same name of the module.
If the file exist then that part is imported, else the code would be
compiled and exported as an .stl file. Since the code bellow is already
possible,

module ABC() { 
  import("ABC.stl"); 
} 
 ABC(); 

The only thing missing  after having the export functionality working would
be a function returning a flag signaling the existence of a file. 

I know it is possible to have a fluid view  done from outside the script,
even to have a second instance of OpenSCAD open with all stls imported, but
it's not practical. It implies that the code is distributed into several
files and somehow the feel of unity of the object weakens.
Now with the OpenSCAD lexer presented by runsun (thank you runsun) for the
SinWrite editor, we have already the facility to better navigate in a more
"complex" code  and we do not need to separate the code into several files
if we are not planning for code reuse, for that I would build a library.

I read this comment by doug.moen a few hours ago.

"An export command with a file name argument permits a malicious OpenSCAD
script to clobber any file in the file system for which it has write
permissions. OpenSCAD is intentionally designed so that it isn't a general
purpose language like Python, and it doesn't suffer from this kind of
security issue."

What if limiting the file name parameter to a couple of known pacific
extensions? 
 
As I said in thread above I'm not a software guy nor an OpenSCAD expert and
I'm not a native english speaker either, so please understand that.

Happy new year

jpmendes
<http://forum.openscad.org/How-to-check-if-a-file-exist-Why-not-export-from-code-td14982.html#a14995> 



--
View this message in context: http://forum.openscad.org/export-function-tp15428p15437.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sun Jan  3 13:54:47 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 3 Jan 2016 19:54:47 +0100
Subject: [OpenSCAD] export() function.
In-Reply-To: <1451845569640-15437.post@n5.nabble.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
Message-ID: <56896E77.1020201@gmx.de>

On 01/03/2016 07:26 PM, jpmendes wrote:
> My solution would be: the modules that are important for the assembly would
> verify for a previously exported .stl file with the same name of the module.
> If the file exist then that part is imported, else the code would be
> compiled and exported as an .stl file. Since the code bellow is already
> possible,
> 
A persistent cache (I think there's already an issue on github for that)
could solve this specific issue too and in a way that does not need much
user interaction.

Having scad code to check for files and then automatically use those will
cause lots of headaches with outdated files that need to be updated
manually. If you open the the scad file in two instances of OpenSCAD,
funny things will happen and there might also be cross-platform issues.

How is the difference between preview and render mode handled with
export()? Will that always force the mesh generation and export the
file on F5? How will that interact with animation?

In essence, my totally personal opinion is that OpenSCAD itself should
focus on the model description part and not try to become a general
programming language. There's a huge amount of improvements possible
for making the model generation easier and more powerful.

Note that my view of model description includes (not yet available)
markup to define such things a multiple objects from one script that
could be exported in one step. But that would be a feature of the
GUI, not the description language.

ciao,
  Torsten.



From arnholm at arnholm.org  Sun Jan  3 14:36:33 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Sun, 3 Jan 2016 20:36:33 +0100
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
Message-ID: <56897841.2080907@arnholm.org>

On 03. jan. 2016 17:42, Marius Kintel wrote:
> Good point. If we also disregard scale, that would indeed constitute a special case we could rely on.

This will fail (generate nonplanar quads) if you apply the right skewing 
with multmatrix.

Carsten Arnholm



From nop.head at gmail.com  Sun Jan  3 14:51:59 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 3 Jan 2016 19:51:59 +0000
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <56897841.2080907@arnholm.org>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
Message-ID: <CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>

How does it handle cylinder then?

On 3 January 2016 at 19:36, Carsten Arnholm <arnholm at arnholm.org> wrote:

> On 03. jan. 2016 17:42, Marius Kintel wrote:
>
>> Good point. If we also disregard scale, that would indeed constitute a
>> special case we could rely on.
>>
>
> This will fail (generate nonplanar quads) if you apply the right skewing
> with multmatrix.
>
> Carsten Arnholm
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160103/0e6a275e/attachment.html>

From doug at moens.org  Sun Jan  3 15:26:04 2016
From: doug at moens.org (doug moen)
Date: Sun, 3 Jan 2016 15:26:04 -0500
Subject: [OpenSCAD]  export() function.
In-Reply-To: <1451845569640-15437.post@n5.nabble.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
Message-ID: <CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>

In https://github.com/openscad/openscad/issues/1437 clothbot and I propose
to add a persistent caching option to 'render'. This can address both
jpmendes and Mihail's problem.

If we add export *and* a function for testing file existence, then openscad
starts to become a scripting language for automating file management
workflow. The security problem becomes worse because now you can determine
what operating system is running, by testing for the existence of system
files, and now you know which files to clobber using 'export', for maximum
damage.

On Sunday, 3 January 2016, jpmendes <jpmendes54 at gmail.com
<javascript:_e(%7B%7D,'cvml','jpmendes54 at gmail.com');>> wrote:

> Hello,
>
> I asked for such a functionality in a previous thread.
> Now only a "function" to check for the existence of a file is missing.
> Please note that the code I presented then did not intend to be exact, it
> was only to express an idea.
>
> And the idea was the capability of some automation from within the code to
> achieve a fluid view and manipulation of complex multi-part objects.
> Explaining briefly: rendering a multi-part complex object can make us loose
> many minutes if not hours every time we start an editing session. When we
> start assembling a multi-part object it happens frequently that some
> modules
> are not at the right positions or that we forgot some details, so we need
> to
> look to the object from several angles to understand better what to do. If
> not rendered the set is almost impossible to move or rotate on the
> view-port, the time lag is enormous.
> My solution would be: the modules that are important for the assembly would
> verify for a previously exported .stl file with the same name of the
> module.
> If the file exist then that part is imported, else the code would be
> compiled and exported as an .stl file. Since the code bellow is already
> possible,
>
> module ABC() {
>   import("ABC.stl");
> }
>  ABC();
>
> The only thing missing  after having the export functionality working would
> be a function returning a flag signaling the existence of a file.
>
> I know it is possible to have a fluid view  done from outside the script,
> even to have a second instance of OpenSCAD open with all stls imported, but
> it's not practical. It implies that the code is distributed into several
> files and somehow the feel of unity of the object weakens.
> Now with the OpenSCAD lexer presented by runsun (thank you runsun) for the
> SinWrite editor, we have already the facility to better navigate in a more
> "complex" code  and we do not need to separate the code into several files
> if we are not planning for code reuse, for that I would build a library.
>
> I read this comment by doug.moen a few hours ago.
>
> "An export command with a file name argument permits a malicious OpenSCAD
> script to clobber any file in the file system for which it has write
> permissions. OpenSCAD is intentionally designed so that it isn't a general
> purpose language like Python, and it doesn't suffer from this kind of
> security issue."
>
> What if limiting the file name parameter to a couple of known pacific
> extensions?
>
> As I said in thread above I'm not a software guy nor an OpenSCAD expert and
> I'm not a native english speaker either, so please understand that.
>
> Happy new year
>
> jpmendes
> <
> http://forum.openscad.org/How-to-check-if-a-file-exist-Why-not-export-from-code-td14982.html#a14995
> >
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/export-function-tp15428p15437.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160103/bde2a883/attachment.html>

From arnholm at arnholm.org  Sun Jan  3 15:37:53 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Sun, 3 Jan 2016 21:37:53 +0100
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
Message-ID: <568986A1.5060301@arnholm.org>

On 03. jan. 2016 20:51, nop head wrote:
> How does it handle cylinder then?

Better than what i expected, or so it it seems :-) I may have been to 
quick. I tried things like this:

multmatrix([
   [1, 0.8, 0, 0],
   [0.2, 1, 0.95, 0],
   [0, 0, 1, 0],
   [0, 0, 0, 1]]) {
     cylinder($fn = 12, h = 100, r1 = 20, r2 = 20);
}

 From the looks only, it does indeed seem the quads remain planar. 
However, there could be numerical issues.

Carsten Arnholm


From nop.head at gmail.com  Sun Jan  3 15:39:13 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 3 Jan 2016 20:39:13 +0000
Subject: [OpenSCAD] export() function.
In-Reply-To: <CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
Message-ID: <CAEEmnrOCxJBGgBRqLPoMEZxW-7fT8Mu4mQV8g_qWYwoUXmUDdQ@mail.gmail.com>

Yes persistent caching gets my vote as there are no changes to the
language, it just gets faster.

To export multiple objects from my files I simply call them
something_stl(). I have a python script that finds them and invokes the
command line to export them. That would also get much faster with a
persistent cache.

On 3 January 2016 at 20:26, doug moen <doug at moens.org> wrote:

> In https://github.com/openscad/openscad/issues/1437 clothbot and I
> propose to add a persistent caching option to 'render'. This can address
> both jpmendes and Mihail's problem.
>
> If we add export *and* a function for testing file existence, then
> openscad starts to become a scripting language for automating file
> management workflow. The security problem becomes worse because now you can
> determine what operating system is running, by testing for the existence of
> system files, and now you know which files to clobber using 'export', for
> maximum damage.
>
> On Sunday, 3 January 2016, jpmendes <jpmendes54 at gmail.com> wrote:
>
>> Hello,
>>
>> I asked for such a functionality in a previous thread.
>> Now only a "function" to check for the existence of a file is missing.
>> Please note that the code I presented then did not intend to be exact, it
>> was only to express an idea.
>>
>> And the idea was the capability of some automation from within the code to
>> achieve a fluid view and manipulation of complex multi-part objects.
>> Explaining briefly: rendering a multi-part complex object can make us
>> loose
>> many minutes if not hours every time we start an editing session. When we
>> start assembling a multi-part object it happens frequently that some
>> modules
>> are not at the right positions or that we forgot some details, so we need
>> to
>> look to the object from several angles to understand better what to do. If
>> not rendered the set is almost impossible to move or rotate on the
>> view-port, the time lag is enormous.
>> My solution would be: the modules that are important for the assembly
>> would
>> verify for a previously exported .stl file with the same name of the
>> module.
>> If the file exist then that part is imported, else the code would be
>> compiled and exported as an .stl file. Since the code bellow is already
>> possible,
>>
>> module ABC() {
>>   import("ABC.stl");
>> }
>>  ABC();
>>
>> The only thing missing  after having the export functionality working
>> would
>> be a function returning a flag signaling the existence of a file.
>>
>> I know it is possible to have a fluid view  done from outside the script,
>> even to have a second instance of OpenSCAD open with all stls imported,
>> but
>> it's not practical. It implies that the code is distributed into several
>> files and somehow the feel of unity of the object weakens.
>> Now with the OpenSCAD lexer presented by runsun (thank you runsun) for the
>> SinWrite editor, we have already the facility to better navigate in a more
>> "complex" code  and we do not need to separate the code into several files
>> if we are not planning for code reuse, for that I would build a library.
>>
>> I read this comment by doug.moen a few hours ago.
>>
>> "An export command with a file name argument permits a malicious OpenSCAD
>> script to clobber any file in the file system for which it has write
>> permissions. OpenSCAD is intentionally designed so that it isn't a general
>> purpose language like Python, and it doesn't suffer from this kind of
>> security issue."
>>
>> What if limiting the file name parameter to a couple of known pacific
>> extensions?
>>
>> As I said in thread above I'm not a software guy nor an OpenSCAD expert
>> and
>> I'm not a native english speaker either, so please understand that.
>>
>> Happy new year
>>
>> jpmendes
>> <
>> http://forum.openscad.org/How-to-check-if-a-file-exist-Why-not-export-from-code-td14982.html#a14995
>> >
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/export-function-tp15428p15437.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160103/85aa4d1d/attachment.html>

From nop.head at gmail.com  Sun Jan  3 15:49:00 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 3 Jan 2016 20:49:00 +0000
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <568986A1.5060301@arnholm.org>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
	<568986A1.5060301@arnholm.org>
Message-ID: <CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>

I have boiled my bug down to this: -

$fa = 5;
$fs = 0.5;
tube_r = 4;
x = 38.8808;
y1 = 59;
y2 = -50;

union() {
    translate([x, y1,    0])
        difference() {
            cylinder(r = tube_r, h= 100);

            translate([0, 0, 99]) // small hole in the top
                cylinder(r = 1, h = 2);
        }

    linear_extrude(height = 10) hull() {
            circle(tube_r);

        translate([x, y1])
            circle(tube_r);

        translate([x, y2])
            circle(tube_r);
    }
}

Which gives


?
Simply commenting out the small hole in the top of the cylinder gives this:
-


?
So it looks to be some sort of numerical problem swapping between CGAL and
homebrew representations. I guess removing the hole in the top removes a
trip through CGAL and the circle coordinates remain exactly equal. However
I can't understand where the extra circle vertices come from as they are
not numerically close to the real vertices.

On 3 January 2016 at 20:37, Carsten Arnholm <arnholm at arnholm.org> wrote:

> On 03. jan. 2016 20:51, nop head wrote:
>
>> How does it handle cylinder then?
>>
>
> Better than what i expected, or so it it seems :-) I may have been to
> quick. I tried things like this:
>
> multmatrix([
>   [1, 0.8, 0, 0],
>   [0.2, 1, 0.95, 0],
>   [0, 0, 1, 0],
>   [0, 0, 0, 1]]) {
>     cylinder($fn = 12, h = 100, r1 = 20, r2 = 20);
> }
>
> From the looks only, it does indeed seem the quads remain planar. However,
> there could be numerical issues.
>
>
> Carsten Arnholm
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160103/43c398c4/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pretty.png
Type: image/png
Size: 17016 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160103/43c398c4/attachment.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ugly.png
Type: image/png
Size: 18611 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160103/43c398c4/attachment-0001.png>

From mickvav at gmail.com  Sun Jan  3 16:00:18 2016
From: mickvav at gmail.com (Mihail Vasiliev)
Date: Mon, 4 Jan 2016 00:00:18 +0300
Subject: [OpenSCAD] export() function.
In-Reply-To: <CAEEmnrOCxJBGgBRqLPoMEZxW-7fT8Mu4mQV8g_qWYwoUXmUDdQ@mail.gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<CAEEmnrOCxJBGgBRqLPoMEZxW-7fT8Mu4mQV8g_qWYwoUXmUDdQ@mail.gmail.com>
Message-ID: <CAPmXz3U=+12Nx_3gXLa0WBU2cKobiUCHAq8b+u7sa7CN=j4tWw@mail.gmail.com>

May be it's safe enought to permit only files with names, derived from
original script name.
3 ???. 2016 ?. 11:40 PM ???????????? "nop head" <nop.head at gmail.com>
???????:

> Yes persistent caching gets my vote as there are no changes to the
> language, it just gets faster.
>
> To export multiple objects from my files I simply call them
> something_stl(). I have a python script that finds them and invokes the
> command line to export them. That would also get much faster with a
> persistent cache.
>
> On 3 January 2016 at 20:26, doug moen <doug at moens.org> wrote:
>
>> In https://github.com/openscad/openscad/issues/1437 clothbot and I
>> propose to add a persistent caching option to 'render'. This can address
>> both jpmendes and Mihail's problem.
>>
>> If we add export *and* a function for testing file existence, then
>> openscad starts to become a scripting language for automating file
>> management workflow. The security problem becomes worse because now you can
>> determine what operating system is running, by testing for the existence of
>> system files, and now you know which files to clobber using 'export', for
>> maximum damage.
>>
>> On Sunday, 3 January 2016, jpmendes <jpmendes54 at gmail.com> wrote:
>>
>>> Hello,
>>>
>>> I asked for such a functionality in a previous thread.
>>> Now only a "function" to check for the existence of a file is missing.
>>> Please note that the code I presented then did not intend to be exact, it
>>> was only to express an idea.
>>>
>>> And the idea was the capability of some automation from within the code
>>> to
>>> achieve a fluid view and manipulation of complex multi-part objects.
>>> Explaining briefly: rendering a multi-part complex object can make us
>>> loose
>>> many minutes if not hours every time we start an editing session. When we
>>> start assembling a multi-part object it happens frequently that some
>>> modules
>>> are not at the right positions or that we forgot some details, so we
>>> need to
>>> look to the object from several angles to understand better what to do.
>>> If
>>> not rendered the set is almost impossible to move or rotate on the
>>> view-port, the time lag is enormous.
>>> My solution would be: the modules that are important for the assembly
>>> would
>>> verify for a previously exported .stl file with the same name of the
>>> module.
>>> If the file exist then that part is imported, else the code would be
>>> compiled and exported as an .stl file. Since the code bellow is already
>>> possible,
>>>
>>> module ABC() {
>>>   import("ABC.stl");
>>> }
>>>  ABC();
>>>
>>> The only thing missing  after having the export functionality working
>>> would
>>> be a function returning a flag signaling the existence of a file.
>>>
>>> I know it is possible to have a fluid view  done from outside the script,
>>> even to have a second instance of OpenSCAD open with all stls imported,
>>> but
>>> it's not practical. It implies that the code is distributed into several
>>> files and somehow the feel of unity of the object weakens.
>>> Now with the OpenSCAD lexer presented by runsun (thank you runsun) for
>>> the
>>> SinWrite editor, we have already the facility to better navigate in a
>>> more
>>> "complex" code  and we do not need to separate the code into several
>>> files
>>> if we are not planning for code reuse, for that I would build a library.
>>>
>>> I read this comment by doug.moen a few hours ago.
>>>
>>> "An export command with a file name argument permits a malicious OpenSCAD
>>> script to clobber any file in the file system for which it has write
>>> permissions. OpenSCAD is intentionally designed so that it isn't a
>>> general
>>> purpose language like Python, and it doesn't suffer from this kind of
>>> security issue."
>>>
>>> What if limiting the file name parameter to a couple of known pacific
>>> extensions?
>>>
>>> As I said in thread above I'm not a software guy nor an OpenSCAD expert
>>> and
>>> I'm not a native english speaker either, so please understand that.
>>>
>>> Happy new year
>>>
>>> jpmendes
>>> <
>>> http://forum.openscad.org/How-to-check-if-a-file-exist-Why-not-export-from-code-td14982.html#a14995
>>> >
>>>
>>>
>>>
>>> --
>>> View this message in context:
>>> http://forum.openscad.org/export-function-tp15428p15437.html
>>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160104/260665d2/attachment.html>

From nop.head at gmail.com  Sun Jan  3 16:01:50 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 3 Jan 2016 21:01:50 +0000
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
	<568986A1.5060301@arnholm.org>
	<CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>
Message-ID: <CAEEmnrMdN1EPm_XeDCRnp6syRHyUhGxggDrBN4A5rOBPWLpw7Q@mail.gmail.com>

And here is an even simpler version just unioning coincident cylinders.

$fa = 5;
$fs = 0.5;
tube_r = 4;
x = 38.8808;
y = 0;

union() {
    translate([x, y, 0])
        difference() {
            cylinder(r = tube_r, h= 100);

            translate([0, 0, 99]) // small hole in the top
                cylinder(r = 1, h = 2);
        }

        translate([x, y])
            cylinder(r = tube_r, h = 10);
}

With X = 0 there is no problem but other values give various extra vertices.

The version I am using is 2015, 5, 16

On 3 January 2016 at 20:49, nop head <nop.head at gmail.com> wrote:

> I have boiled my bug down to this: -
>
> $fa = 5;
> $fs = 0.5;
> tube_r = 4;
> x = 38.8808;
> y1 = 59;
> y2 = -50;
>
> union() {
>     translate([x, y1,    0])
>         difference() {
>             cylinder(r = tube_r, h= 100);
>
>             translate([0, 0, 99]) // small hole in the top
>                 cylinder(r = 1, h = 2);
>         }
>
>     linear_extrude(height = 10) hull() {
>             circle(tube_r);
>
>         translate([x, y1])
>             circle(tube_r);
>
>         translate([x, y2])
>             circle(tube_r);
>     }
> }
>
> Which gives
>
>
> ?
> Simply commenting out the small hole in the top of the cylinder gives
> this: -
>
>
> ?
> So it looks to be some sort of numerical problem swapping between CGAL and
> homebrew representations. I guess removing the hole in the top removes a
> trip through CGAL and the circle coordinates remain exactly equal. However
> I can't understand where the extra circle vertices come from as they are
> not numerically close to the real vertices.
>
> On 3 January 2016 at 20:37, Carsten Arnholm <arnholm at arnholm.org> wrote:
>
>> On 03. jan. 2016 20:51, nop head wrote:
>>
>>> How does it handle cylinder then?
>>>
>>
>> Better than what i expected, or so it it seems :-) I may have been to
>> quick. I tried things like this:
>>
>> multmatrix([
>>   [1, 0.8, 0, 0],
>>   [0.2, 1, 0.95, 0],
>>   [0, 0, 1, 0],
>>   [0, 0, 0, 1]]) {
>>     cylinder($fn = 12, h = 100, r1 = 20, r2 = 20);
>> }
>>
>> From the looks only, it does indeed seem the quads remain planar.
>> However, there could be numerical issues.
>>
>>
>> Carsten Arnholm
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160103/1408ad2d/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pretty.png
Type: image/png
Size: 17016 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160103/1408ad2d/attachment.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ugly.png
Type: image/png
Size: 18611 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160103/1408ad2d/attachment-0001.png>

From doug at moens.org  Sun Jan  3 16:16:25 2016
From: doug at moens.org (doug moen)
Date: Sun, 3 Jan 2016 16:16:25 -0500
Subject: [OpenSCAD] Volume and Center of mass
In-Reply-To: <1451839424274-15433.post@n5.nabble.com>
References: <1451783839383-15421.post@n5.nabble.com>
	<1451839424274-15433.post@n5.nabble.com>
Message-ID: <CAGV6i+M0KuDhtC1qksQ9E2qN_dtL9DwFG1VZWWTxtG6Amx5O8g@mail.gmail.com>

Hi Runsun. I'm pretty sure that Blobule implemented this in C++.

On 3 January 2016 at 11:43, runsun <runsun at gmail.com> wrote:

> Looks nice ! I for one is very interested in this.
>
> btw can you provide some references to the algorithm you use ? I cannot
> image how this could be done with the current openscad. So there must be
> something worth my learning.
>
>
>
> -----
>
> $  Runsun Pan, PhD
>
> $ libs:
>
> doctest ,
>
> faces ( git ),
>
> offline doc ( git ),
>
> runscad.py( 1 , 2 , git ),
>
>
> synwrite( 1 , 2 );
>
>
>
>  $ tips:
>
> hash( 1 , 2 ),
>
> sweep ,
>
> var( 1 , 2 ),
>
> lerp ,
>
> animGif ,
>
> precision( 1 , 2 ),
>
> xl-control
>
>
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Volume-and-Center-of-mass-tp15421p15433.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160103/0dde6672/attachment.html>

From jpmendes54 at gmail.com  Sun Jan  3 16:59:13 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Sun, 3 Jan 2016 14:59:13 -0700 (MST)
Subject: [OpenSCAD] export() function.
In-Reply-To: <CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
Message-ID: <1451858353053-15448.post@n5.nabble.com>

Hello,

For me persistent cache is welcome as I seldom make complex multi-part
objects. For the guys tackling
several projects a  time it can be very hard disk consuming. 
However with the limitation of the names and extensions of the exports, and
placing the exported files inside the project directory, I cannot figure out
where could be risk for malware propagation. 
For the guys not wanting to use the export functionality the language would
not be different. 

And what if we had a GUI more like an IDE with a project tree, where the
files could be added from other project dirs and made available locally, and
all (except calls to libraries) would be kept under the project directory?  

jpmendes



--
View this message in context: http://forum.openscad.org/export-function-tp15428p15448.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From alan at lxorguk.ukuu.org.uk  Sun Jan  3 17:10:33 2016
From: alan at lxorguk.ukuu.org.uk (Alan Cox)
Date: Sun, 3 Jan 2016 22:10:33 +0000
Subject: [OpenSCAD] export() function.
In-Reply-To: <1451858353053-15448.post@n5.nabble.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
Message-ID: <20160103221033.64758d3e@www.etchedpixels.co.uk>

On Sun, 3 Jan 2016 14:59:13 -0700 (MST)
jpmendes <jpmendes54 at gmail.com> wrote:

> Hello,
> 
> For me persistent cache is welcome as I seldom make complex multi-part
> objects. For the guys tackling
> several projects a  time it can be very hard disk consuming. 

Its usually going to be smaller and easier to manage than having loads of
saved export files you have to keep remembering to clean up by hand. It's
a model that works well and has a very simple interface ("Size ?"). All
the web browsers use it for example.

Alan


From rudolf at parkinbot.com  Sun Jan  3 17:42:28 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Sun, 3 Jan 2016 15:42:28 -0700 (MST)
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <CAEEmnrNEtgsuvsHu66La8vU4eybkvQOb6A58mfV5XW_YtKM7vg@mail.gmail.com>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<CAEEmnrObwKmpfE6q6we3DixaeyDo7FSOAsdXHojFf3w0bOh_vQ@mail.gmail.com>
	<1451840664967-15435.post@n5.nabble.com>
	<CAEEmnrNEtgsuvsHu66La8vU4eybkvQOb6A58mfV5XW_YtKM7vg@mail.gmail.com>
Message-ID: <1451860948654-15450.post@n5.nabble.com>

I am not suprised about linear_extrude(). What really suprises me is that the
basic implementations of cylinder and cube do use squares. This is not
self-evident. I mean, if you start like this, you could also allow for
convex n-polygons as planar thing (as you can do it VRML). I guess this has
some historical reasons. 

BTW, your problem has implementational AND numerical backgrounds. You get
what you want, if you give union() some "help":


> $fa = 5;
> $fs = 0.5;
>     cylinder(r = 4.0001, h= 100);
>     linear_extrude(height = 10) 
>     hull() {
>             circle(4);
>        
>         translate([30, 10, 0])
>             circle(4);
>        
>         translate([10, 30, 0])
>             circle(4);
>     }





--
View this message in context: http://forum.openscad.org/Unnecessary-triangulation-in-linear-extrude-tp15429p15450.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Sun Jan  3 18:05:34 2016
From: marius at kintel.net (Marius Kintel)
Date: Sun, 3 Jan 2016 18:05:34 -0500
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <CAEEmnrMdN1EPm_XeDCRnp6syRHyUhGxggDrBN4A5rOBPWLpw7Q@mail.gmail.com>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
	<568986A1.5060301@arnholm.org>
	<CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>
	<CAEEmnrMdN1EPm_XeDCRnp6syRHyUhGxggDrBN4A5rOBPWLpw7Q@mail.gmail.com>
Message-ID: <234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>

..or:

$fn=3;
translate([10,0,0]) {
    cylinder(r = 4, h= 20);
    translate([0, 0, 100]) cube(); //dummy
}
translate([10,0,0]) cylinder(r = 4, h = 10);

Not sure why this happens. It would be nice if we could test if it?s reproducible it in pure CGAL.

 -Marius



From rudolf at parkinbot.com  Sun Jan  3 18:16:40 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Sun, 3 Jan 2016 16:16:40 -0700 (MST)
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
	<568986A1.5060301@arnholm.org>
	<CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>
	<CAEEmnrMdN1EPm_XeDCRnp6syRHyUhGxggDrBN4A5rOBPWLpw7Q@mail.gmail.com>
	<234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>
Message-ID: <1451863000347-15452.post@n5.nabble.com>

Try this: 

$fn=3;
translate([.1,0,0]) {
    cylinder(r = 4, h= 10);
    translate([0, 0, 10]) cylinder(); //dummy
}
translate([.1,0,0]) cylinder(r = 4, h = 20);



--
View this message in context: http://forum.openscad.org/Unnecessary-triangulation-in-linear-extrude-tp15429p15452.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Sun Jan  3 18:17:45 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 3 Jan 2016 23:17:45 +0000
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
	<568986A1.5060301@arnholm.org>
	<CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>
	<CAEEmnrMdN1EPm_XeDCRnp6syRHyUhGxggDrBN4A5rOBPWLpw7Q@mail.gmail.com>
	<234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>
Message-ID: <CAEEmnrMRhnLR_j=nm-LtU4sfWm3tHeAX_za4vXo61Qqg-u19Gg@mail.gmail.com>

In that case there are just extra edges between existing vertices, which is
not too surprising. With this version the extra vertices appear at $fn = 32;

$fn=32;
translate([10.1,0,0]) {
    cylinder(r = 4, h= 20);
    translate([0, 0, 100]) cube(); //dummy
}
translate([10.1,0,0]) cylinder(r = 4, h = 10);



On 3 January 2016 at 23:05, Marius Kintel <marius at kintel.net> wrote:

> ..or:
>
> $fn=3;
> translate([10,0,0]) {
>     cylinder(r = 4, h= 20);
>     translate([0, 0, 100]) cube(); //dummy
> }
> translate([10,0,0]) cylinder(r = 4, h = 10);
>
> Not sure why this happens. It would be nice if we could test if it?s
> reproducible it in pure CGAL.
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160103/cd4bdb9a/attachment.html>

From nop.head at gmail.com  Sun Jan  3 18:20:39 2016
From: nop.head at gmail.com (nophead)
Date: Sun, 3 Jan 2016 16:20:39 -0700 (MST)
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <1451863000347-15452.post@n5.nabble.com>
References: <37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
	<568986A1.5060301@arnholm.org>
	<CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>
	<CAEEmnrMdN1EPm_XeDCRnp6syRHyUhGxggDrBN4A5rOBPWLpw7Q@mail.gmail.com>
	<234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>
	<1451863000347-15452.post@n5.nabble.com>
Message-ID: <1451863239143-15454.post@n5.nabble.com>

$fn=11;
translate([.1,0,0]) {
    cylinder(r = 4, h= 10);
    translate([0, 0, 10]) cylinder(); //dummy
}
translate([.1,0,0]) cylinder(r = 4, h = 20); 





--
View this message in context: http://forum.openscad.org/Unnecessary-triangulation-in-linear-extrude-tp15429p15454.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jpmendes54 at gmail.com  Sun Jan  3 19:30:40 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Sun, 3 Jan 2016 17:30:40 -0700 (MST)
Subject: [OpenSCAD] export() function.
In-Reply-To: <20160103221033.64758d3e@www.etchedpixels.co.uk>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
Message-ID: <1451867440947-15455.post@n5.nabble.com>

I pray for the persistent cache location to be user defined. Please!!!

jpmendes



--
View this message in context: http://forum.openscad.org/export-function-tp15428p15455.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sun Jan  3 19:45:30 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 4 Jan 2016 01:45:30 +0100
Subject: [OpenSCAD] export() function.
In-Reply-To: <1451867440947-15455.post@n5.nabble.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com>
Message-ID: <5689C0AA.2010206@gmx.de>

On 01/04/2016 01:30 AM, jpmendes wrote:
> I pray for the persistent cache location to be user defined. Please!!!
> 
One option would be the use of memcached, in that case OpenSCAD would
not specify a path for the actual storage.

ciao,
  Torsten.




From runsun at gmail.com  Sun Jan  3 23:05:40 2016
From: runsun at gmail.com (runsun)
Date: Sun, 3 Jan 2016 21:05:40 -0700 (MST)
Subject: [OpenSCAD] api in json format
In-Reply-To: <1451795664593-15422.post@n5.nabble.com>
References: <1451758430956-15418.post@n5.nabble.com> <56881C94.4090200@gmx.de>
	<1451795664593-15422.post@n5.nabble.com>
Message-ID: <1451880340790-15457.post@n5.nabble.com>

Thx for the inputs. Will take into considerations. 

The journey into SynWrite calltip feature looks promising. I've made this
possible: when user type "cube(", the output panel will show it's parameter
definition:

<http://forum.openscad.org/file/n15457/synwrite_calltip.png> 

I'm still working on how this is gonna play out, but most likely, once it's
done, users can have this feature by simply import a python plugin.

Here is the current json structure that I am using. Currently it has only
cube() and sphere(). Will keep modifying the structure along the way. 


> common_args={
>   "$fa": { "name": "$fa"
>          , "type": "num"
>          , "optional": "true"
>          , "default":12
>          , "doc" : 
>             [ "Special variable controlling the minimum angle for a
> fragment. Even a huge circle does not have more fragments than 360 divided
> by this number. The default value is 12 (i.e. 30 fragments for a full
> circle). The minimum allowed value is 0.01. Any attempt to set a lower
> value will cause a warning."
>             ]
>          }   
>  , "$fs": { "name": "$fs"
>          , "type": "num"
>          , "optional": "true"
>          , "default":2
>          , "doc" : 
>             [ "Special variable controlling the minimum size of a
> fragment. Because of this variable very small circles have a smaller
> number of fragments than specified using $fa. The default value is 2. The
> minimum allowed value is 0.01. Any attempt to set a lower value will cause
> a warning."
>             ]
>          }   
>  , "$fn": { "name": "$fn"
>          , "type": "num"
>          , "optional": "true"
>          , "default": 0
>          , "doc" : 
>             [ "Special variable controlling the number of fragments.
> Usually 0. When this variable has a value greater than zero, the other two
> variables are ignored and full circle is rendered using this number of
> fragments. The default value is 0."
>             ]
>          }    
> }      
>       
> openscad_api={
> 
>   "cube": 
> 
>   { "type": "mod"
>   , "tags": "obj, 3d"
>   , "args": 
>     [
>          { "name": "size"
>          , "type": "list|num"
>          , "optional": "true"
>          , "default": [1,1,1]
>          , "doc" : 
>             [ "single value, cube with all sides this length"
>             , "3 value array [x,y,z], cube with dimensions x,y,z"
>             ]
>          }          
>       ,  { "name": "center"
>          , "type": "bool"
>          , "optional":"true"
>          , "default": "false"
>          , "doc" : 
>             [ "false: 1st (positive) octant, one corner at (0,0,0)"
>             , "true: cube is centered at (0,0,0)"
>             ]
>          }
>     ]
>   , "return": ""  
>   , "shortdoc": "Creates a cube in the first octant. When center is true,
> the cube is centered on the origin"
>   , "longddoc":""
>   , "ver":""   
>   , "demo":[]  
>   }   
>   
>   , "sphere": 
>   
>   { "type": "mod"
>   , "tags": "obj, 3d"
>   , "args": 
>     [
>          { "name": "r"
>          , "type": "num"
>          , "optional": "true"
>          , "default": 1
>          , "doc" : 
>             [ "Radius of the sphere"
>             ]
>          }          
>       ,  { "name": "d"
>          , "type": "num"
>          , "optional":"true"
>          , "doc" : 
>             [ "Diameter of the sphere. Available in ver >= 2014.03"
>             ]
>          }
>       ,  common_args["$fa"]
>       ,  common_args["$fs"]
>       ,  common_args["$fn"]
> 
>     ]
>   , "return": ""  
>   , "shortdoc": "Creates a sphere at the origin of the coordinate system"
>   , "longddoc":""
>   , "ver":""   
>   , "demo":[]  
>   }                   
> }

It's currently written inside the python on_key plugin. Eventually it has to
be a stand-alone json file. 


 





-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git ), 


synwrite( 1 , 2 ); 



 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision( 1 , 2 ),

xl-control 








--
View this message in context: http://forum.openscad.org/api-in-json-format-tp15418p15457.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From roys at iro.umontreal.ca  Mon Jan  4 00:34:11 2016
From: roys at iro.umontreal.ca (blobule)
Date: Sun, 3 Jan 2016 22:34:11 -0700 (MST)
Subject: [OpenSCAD] Volume and Center of mass
In-Reply-To: <CAGV6i+M0KuDhtC1qksQ9E2qN_dtL9DwFG1VZWWTxtG6Amx5O8g@mail.gmail.com>
References: <1451783839383-15421.post@n5.nabble.com>
	<1451839424274-15433.post@n5.nabble.com>
	<CAGV6i+M0KuDhtC1qksQ9E2qN_dtL9DwFG1VZWWTxtG6Amx5O8g@mail.gmail.com>
Message-ID: <1451885651687-15458.post@n5.nabble.com>

Hi,
Yes indeed... the volume/centroid code is in C++, although sometimes the
heavily templated cgal library makes it look like a totally different
language... :-) 

What is done in C++ is only the basic volume/centroid computation.
Once you have that information, you can make the OpenSCAD code find by
itself the parameters that will make an object the exact volume you want. I
do this using binary search.

For example, you can have a module which makes a bottle with one parameter n
for its general size:

module inside(n=50) {
    hull() {
        sphere(r=20);
        translate([0,0,n]) cylinder(r=10,h=10);
    }
}

module wall() { translate([0,0,-3.02]) cylinder(r=3,h=3); }

module bottle() {
    difference() {
        minkowski() { children(); wall(); }
        children();
    }
}

By varying the parameter, you get bottles of different shapes. For example:
bottle() inside(20);
<http://forum.openscad.org/file/n15458/bottle1.png> 
bottle() inside(50);
<http://forum.openscad.org/file/n15458/bottle2.png> 


The first has a volume of 40.0ml, and the second one 60.9ml. To compute the
volume (in ml), I use:
probe(volume=true) { inside(20); echo(volume/1000); }

What is the parameter needed to get a volume of exactly 50ml? It's hard to
predict because the geometry is complex.
You can make a module that will find the parameter and make the bottle of
the correct size using binary search over the parameter space. This
obviously implies a monotonic relation between the parameter and the volume.
See the solve() module :

module solve(iter=0,min=20,max=50,target=50*1000) {
    m=(min+max)/2; // guess the parameter
    probe(volume=true) {
        inside(m); // we measure the inside
        echo("parameter=",m," and volume=",volume);
        if( iter==0 ) {
            // we are done searching!
            echo("FINAL bottle parameter=",m," volume=",volume);
            bottle() inside(m); // the final bottle
        }else{
            // try again, with a reduced interval for the search
            if( volume>target ) solve(iter-1,min,m,target);
            else solve(iter-1,m,max,target);
        }
    }
}

min/max are the interval where we want to search for the parameter, target
is the goal volume.
iter is the number of tries we want to make. Each try reduce the interval by
two, so you rarely need more than 10 iterations.

So now you can ask for a 50ml bottle using this:

solve(10,20,50,50*1000);
The parameter found for 50ml is 34.546. Here are the 3 bottles side by side:

<http://forum.openscad.org/file/n15458/bottles3.png> 

Once you do binary search, it becomes possible to specify an object with
parameters that are more natural to the user (like volume in this case).
Here is a collection of bottles/glass, with specified volumes solved by
OpenSCAD. 

<http://forum.openscad.org/file/n15458/bottles444.png> 





--
View this message in context: http://forum.openscad.org/Volume-and-Center-of-mass-tp15421p15458.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Mon Jan  4 00:44:54 2016
From: mschafer at wireframe.biz (Neon22)
Date: Sun, 3 Jan 2016 22:44:54 -0700 (MST)
Subject: [OpenSCAD] Volume and Center of mass
In-Reply-To: <1451885651687-15458.post@n5.nabble.com>
References: <1451783839383-15421.post@n5.nabble.com>
	<1451839424274-15433.post@n5.nabble.com>
	<CAGV6i+M0KuDhtC1qksQ9E2qN_dtL9DwFG1VZWWTxtG6Amx5O8g@mail.gmail.com>
	<1451885651687-15458.post@n5.nabble.com>
Message-ID: <1451886294966-15459.post@n5.nabble.com>

I think its fantastic.
I also really like the idea of extending probe() to be able to do other
things with the geometry. E.g.
- slice object using projection() at various values and export as svgs
- get a boolean result if it intersects with a second object
very nice implementation.



--
View this message in context: http://forum.openscad.org/Volume-and-Center-of-mass-tp15421p15459.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Mon Jan  4 00:49:32 2016
From: mschafer at wireframe.biz (Neon22)
Date: Sun, 3 Jan 2016 22:49:32 -0700 (MST)
Subject: [OpenSCAD] api in json format
In-Reply-To: <1451880340790-15457.post@n5.nabble.com>
References: <1451758430956-15418.post@n5.nabble.com> <56881C94.4090200@gmx.de>
	<1451795664593-15422.post@n5.nabble.com>
	<1451880340790-15457.post@n5.nabble.com>
Message-ID: <1451886572176-15460.post@n5.nabble.com>

Maybe each function could have a doc method which had this json in it.
This way if users made their own includable scad files they would also be
self documenting.

E.g. in python the first line of a function is optionally reserved for a doc
string.
def foo():
  " what foo does"
  code...

maybe module foo() "doc string" {
};

Doug - what do you think is right thing to do for openSCAD2 ?



--
View this message in context: http://forum.openscad.org/api-in-json-format-tp15418p15460.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Mon Jan  4 03:31:45 2016
From: nop.head at gmail.com (nop head)
Date: Mon, 4 Jan 2016 08:31:45 +0000
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
	<568986A1.5060301@arnholm.org>
	<CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>
	<CAEEmnrMdN1EPm_XeDCRnp6syRHyUhGxggDrBN4A5rOBPWLpw7Q@mail.gmail.com>
	<234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>
Message-ID: <CAEEmnrOJvnXC+8Y+04kQTyPKNjn=s296QTQNsuzqoMa4cQC0aQ@mail.gmail.com>

I tried it in an old version of OpenScad, 2013.06, which I assume only does
F6 in CGAL. That doesn't have the problem.

Is it perhaps that translate produces a different result when the object it
gets is from CGAL?

Another numerical issue I have noticed is when I generate Mendel90 on a
different PC, but with the same source files and the same old OpenScad
binary then some of the STL files are different. When I examined a simply
example I found one vertex on a circle had a different Y ordinate that
differed by one in the last floating point digit. One is an Intel Core2 Duo
running 32 bit XP and the other an Intel Core i7 running 64 bit Win7.
Perhaps I am naive but I thought IEEE floating point maths was supposed to
give consistent results.

On 3 January 2016 at 23:05, Marius Kintel <marius at kintel.net> wrote:

> ..or:
>
> $fn=3;
> translate([10,0,0]) {
>     cylinder(r = 4, h= 20);
>     translate([0, 0, 100]) cube(); //dummy
> }
> translate([10,0,0]) cylinder(r = 4, h = 10);
>
> Not sure why this happens. It would be nice if we could test if it?s
> reproducible it in pure CGAL.
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160104/ce3314fc/attachment.html>

From nop.head at gmail.com  Mon Jan  4 03:42:11 2016
From: nop.head at gmail.com (nop head)
Date: Mon, 4 Jan 2016 08:42:11 +0000
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <CAEEmnrOJvnXC+8Y+04kQTyPKNjn=s296QTQNsuzqoMa4cQC0aQ@mail.gmail.com>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
	<568986A1.5060301@arnholm.org>
	<CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>
	<CAEEmnrMdN1EPm_XeDCRnp6syRHyUhGxggDrBN4A5rOBPWLpw7Q@mail.gmail.com>
	<234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>
	<CAEEmnrOJvnXC+8Y+04kQTyPKNjn=s296QTQNsuzqoMa4cQC0aQ@mail.gmail.com>
Message-ID: <CAEEmnrMBZQ4W7eoiMgS=vSE69s=J_JBodGoozVLzsQNyqX8EuA@mail.gmail.com>

Another test that shows CGAL is OK is this:

fn=11;
translate([10.1,0,0]) {
    cylinder(r = 4, h= 20);
    translate([0, 0, 100]) cube(); //dummy
}
translate([10.1,0,0]) {
    cylinder(r = 4, h = 10);
    translate([0, 0, 100]) cube(); //dummy
}

This gives the correct result showing if both cylinders pass through CGAL
before being unioned they have numerically equal coordinates. When one is
translated before it gets converted to CGAL format the union generates
extra vertices. I think these are simply where two slightly different
planes meet.

On 4 January 2016 at 08:31, nop head <nop.head at gmail.com> wrote:

> I tried it in an old version of OpenScad, 2013.06, which I assume only
> does F6 in CGAL. That doesn't have the problem.
>
> Is it perhaps that translate produces a different result when the object
> it gets is from CGAL?
>
> Another numerical issue I have noticed is when I generate Mendel90 on a
> different PC, but with the same source files and the same old OpenScad
> binary then some of the STL files are different. When I examined a simply
> example I found one vertex on a circle had a different Y ordinate that
> differed by one in the last floating point digit. One is an Intel Core2 Duo
> running 32 bit XP and the other an Intel Core i7 running 64 bit Win7.
> Perhaps I am naive but I thought IEEE floating point maths was supposed to
> give consistent results.
>
> On 3 January 2016 at 23:05, Marius Kintel <marius at kintel.net> wrote:
>
>> ..or:
>>
>> $fn=3;
>> translate([10,0,0]) {
>>     cylinder(r = 4, h= 20);
>>     translate([0, 0, 100]) cube(); //dummy
>> }
>> translate([10,0,0]) cylinder(r = 4, h = 10);
>>
>> Not sure why this happens. It would be nice if we could test if it?s
>> reproducible it in pure CGAL.
>>
>>  -Marius
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160104/edd4e0d0/attachment.html>

From nop.head at gmail.com  Mon Jan  4 06:55:58 2016
From: nop.head at gmail.com (nop head)
Date: Mon, 4 Jan 2016 11:55:58 +0000
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <CAEEmnrMBZQ4W7eoiMgS=vSE69s=J_JBodGoozVLzsQNyqX8EuA@mail.gmail.com>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
	<568986A1.5060301@arnholm.org>
	<CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>
	<CAEEmnrMdN1EPm_XeDCRnp6syRHyUhGxggDrBN4A5rOBPWLpw7Q@mail.gmail.com>
	<234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>
	<CAEEmnrOJvnXC+8Y+04kQTyPKNjn=s296QTQNsuzqoMa4cQC0aQ@mail.gmail.com>
	<CAEEmnrMBZQ4W7eoiMgS=vSE69s=J_JBodGoozVLzsQNyqX8EuA@mail.gmail.com>
Message-ID: <CAEEmnrOE0qANiWX4jYRgHcgbG=LuD5-TkFSZKsycOLzQqaL-2A@mail.gmail.com>

BTW, what precision does OpenScad use for evaluating expressions in the
source code?


On 4 January 2016 at 08:42, nop head <nop.head at gmail.com> wrote:

> Another test that shows CGAL is OK is this:
>
> fn=11;
> translate([10.1,0,0]) {
>     cylinder(r = 4, h= 20);
>     translate([0, 0, 100]) cube(); //dummy
> }
> translate([10.1,0,0]) {
>     cylinder(r = 4, h = 10);
>     translate([0, 0, 100]) cube(); //dummy
> }
>
> This gives the correct result showing if both cylinders pass through CGAL
> before being unioned they have numerically equal coordinates. When one is
> translated before it gets converted to CGAL format the union generates
> extra vertices. I think these are simply where two slightly different
> planes meet.
>
> On 4 January 2016 at 08:31, nop head <nop.head at gmail.com> wrote:
>
>> I tried it in an old version of OpenScad, 2013.06, which I assume only
>> does F6 in CGAL. That doesn't have the problem.
>>
>> Is it perhaps that translate produces a different result when the object
>> it gets is from CGAL?
>>
>> Another numerical issue I have noticed is when I generate Mendel90 on a
>> different PC, but with the same source files and the same old OpenScad
>> binary then some of the STL files are different. When I examined a simply
>> example I found one vertex on a circle had a different Y ordinate that
>> differed by one in the last floating point digit. One is an Intel Core2 Duo
>> running 32 bit XP and the other an Intel Core i7 running 64 bit Win7.
>> Perhaps I am naive but I thought IEEE floating point maths was supposed to
>> give consistent results.
>>
>> On 3 January 2016 at 23:05, Marius Kintel <marius at kintel.net> wrote:
>>
>>> ..or:
>>>
>>> $fn=3;
>>> translate([10,0,0]) {
>>>     cylinder(r = 4, h= 20);
>>>     translate([0, 0, 100]) cube(); //dummy
>>> }
>>> translate([10,0,0]) cylinder(r = 4, h = 10);
>>>
>>> Not sure why this happens. It would be nice if we could test if it?s
>>> reproducible it in pure CGAL.
>>>
>>>  -Marius
>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160104/17edfaca/attachment.html>

From doug at moens.org  Mon Jan  4 08:19:01 2016
From: doug at moens.org (doug moen)
Date: Mon, 4 Jan 2016 08:19:01 -0500
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <CAEEmnrOJvnXC+8Y+04kQTyPKNjn=s296QTQNsuzqoMa4cQC0aQ@mail.gmail.com>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
	<568986A1.5060301@arnholm.org>
	<CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>
	<CAEEmnrMdN1EPm_XeDCRnp6syRHyUhGxggDrBN4A5rOBPWLpw7Q@mail.gmail.com>
	<234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>
	<CAEEmnrOJvnXC+8Y+04kQTyPKNjn=s296QTQNsuzqoMa4cQC0aQ@mail.gmail.com>
Message-ID: <CAGV6i+Od_GOKzQo=H0DeCN=_ubh3KA7KdXk_2rK+SoJEff0v2w@mail.gmail.com>

IEEE floating point can be made consistent, if you make the effort, at
least the standard places this requirement on language implementations. One
requirement is to set the mode bits consistently, which I don't think we
do. Trig functions (required for rotation) are usually implemented in the C
library, and I suspect that different implementations of sine or cosine (on
different OS versions) may return different results for the same input.

On Intel platforms, there is an extended precision 80 bit floating point
format. If you set the extended precision mode flag on the Intel GPU, then
intermediate results are represented with 80 bit precision, even though the
inputs and outputs of the operation are 64 bit. The ARM architecture lacks
this feature. If you disable extended precision mode, you should get the
same results on Intel and on ARM for basic operations implemented by the
FPU, although even here the standard provides a bit of wiggle room for
variation. I think that whether the extended precision flag is enabled or
disabled by default also varies with the operating system. Disabling it is
supposedly faster.

There is also a rounding mode that affects results, but that is less likely
to be the cause of your problem.

On 4 January 2016 at 03:31, nop head <nop.head at gmail.com> wrote:

> I tried it in an old version of OpenScad, 2013.06, which I assume only
> does F6 in CGAL. That doesn't have the problem.
>
> Is it perhaps that translate produces a different result when the object
> it gets is from CGAL?
>
> Another numerical issue I have noticed is when I generate Mendel90 on a
> different PC, but with the same source files and the same old OpenScad
> binary then some of the STL files are different. When I examined a simply
> example I found one vertex on a circle had a different Y ordinate that
> differed by one in the last floating point digit. One is an Intel Core2 Duo
> running 32 bit XP and the other an Intel Core i7 running 64 bit Win7.
> Perhaps I am naive but I thought IEEE floating point maths was supposed to
> give consistent results.
>
> On 3 January 2016 at 23:05, Marius Kintel <marius at kintel.net> wrote:
>
>> ..or:
>>
>> $fn=3;
>> translate([10,0,0]) {
>>     cylinder(r = 4, h= 20);
>>     translate([0, 0, 100]) cube(); //dummy
>> }
>> translate([10,0,0]) cylinder(r = 4, h = 10);
>>
>> Not sure why this happens. It would be nice if we could test if it?s
>> reproducible it in pure CGAL.
>>
>>  -Marius
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160104/b4f01dd7/attachment.html>

From nop.head at gmail.com  Mon Jan  4 08:49:11 2016
From: nop.head at gmail.com (nop head)
Date: Mon, 4 Jan 2016 13:49:11 +0000
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <CAGV6i+Od_GOKzQo=H0DeCN=_ubh3KA7KdXk_2rK+SoJEff0v2w@mail.gmail.com>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
	<568986A1.5060301@arnholm.org>
	<CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>
	<CAEEmnrMdN1EPm_XeDCRnp6syRHyUhGxggDrBN4A5rOBPWLpw7Q@mail.gmail.com>
	<234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>
	<CAEEmnrOJvnXC+8Y+04kQTyPKNjn=s296QTQNsuzqoMa4cQC0aQ@mail.gmail.com>
	<CAGV6i+Od_GOKzQo=H0DeCN=_ubh3KA7KdXk_2rK+SoJEff0v2w@mail.gmail.com>
Message-ID: <CAEEmnrMv=r2iyjDrTAz8uwdCgRUOzogVCDrJzpS1g9JVETtncA@mail.gmail.com>

Is the maths library statically linked? If so on a nearly identical
processor are we saying XP and Win7 set the extended precision flag
differently?


On 4 January 2016 at 13:19, doug moen <doug at moens.org> wrote:

> IEEE floating point can be made consistent, if you make the effort, at
> least the standard places this requirement on language implementations. One
> requirement is to set the mode bits consistently, which I don't think we
> do. Trig functions (required for rotation) are usually implemented in the C
> library, and I suspect that different implementations of sine or cosine (on
> different OS versions) may return different results for the same input.
>
> On Intel platforms, there is an extended precision 80 bit floating point
> format. If you set the extended precision mode flag on the Intel GPU, then
> intermediate results are represented with 80 bit precision, even though the
> inputs and outputs of the operation are 64 bit. The ARM architecture lacks
> this feature. If you disable extended precision mode, you should get the
> same results on Intel and on ARM for basic operations implemented by the
> FPU, although even here the standard provides a bit of wiggle room for
> variation. I think that whether the extended precision flag is enabled or
> disabled by default also varies with the operating system. Disabling it is
> supposedly faster.
>
> There is also a rounding mode that affects results, but that is less
> likely to be the cause of your problem.
>
> On 4 January 2016 at 03:31, nop head <nop.head at gmail.com> wrote:
>
>> I tried it in an old version of OpenScad, 2013.06, which I assume only
>> does F6 in CGAL. That doesn't have the problem.
>>
>> Is it perhaps that translate produces a different result when the object
>> it gets is from CGAL?
>>
>> Another numerical issue I have noticed is when I generate Mendel90 on a
>> different PC, but with the same source files and the same old OpenScad
>> binary then some of the STL files are different. When I examined a simply
>> example I found one vertex on a circle had a different Y ordinate that
>> differed by one in the last floating point digit. One is an Intel Core2 Duo
>> running 32 bit XP and the other an Intel Core i7 running 64 bit Win7.
>> Perhaps I am naive but I thought IEEE floating point maths was supposed to
>> give consistent results.
>>
>> On 3 January 2016 at 23:05, Marius Kintel <marius at kintel.net> wrote:
>>
>>> ..or:
>>>
>>> $fn=3;
>>> translate([10,0,0]) {
>>>     cylinder(r = 4, h= 20);
>>>     translate([0, 0, 100]) cube(); //dummy
>>> }
>>> translate([10,0,0]) cylinder(r = 4, h = 10);
>>>
>>> Not sure why this happens. It would be nice if we could test if it?s
>>> reproducible it in pure CGAL.
>>>
>>>  -Marius
>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160104/649449fb/attachment.html>

From doug at moens.org  Mon Jan  4 09:02:51 2016
From: doug at moens.org (doug moen)
Date: Mon, 4 Jan 2016 09:02:51 -0500
Subject: [OpenSCAD] api in json format
In-Reply-To: <1451886572176-15460.post@n5.nabble.com>
References: <1451758430956-15418.post@n5.nabble.com> <56881C94.4090200@gmx.de>
	<1451795664593-15422.post@n5.nabble.com>
	<1451880340790-15457.post@n5.nabble.com>
	<1451886572176-15460.post@n5.nabble.com>
Message-ID: <CAGV6i+PGM_zVCf2FN0oRKa6KgCsGMBcC9mAt5oRKuoWyDRts5g@mail.gmail.com>

This is in response to Neon22's suggestion for a language extension, to add
a doc string to function and module definitions.

The "Customizer GUI" project is already defining a syntax for adding a doc
string to variable definitions. Check out this example:
https://github.com/openscad/openscad/blob/model-meta-data3/examples/Parametric/sign.scad

Following that example, the syntax would be

@Description("doc string")
module foo() {
};

This syntax works fine with OpenSCAD2.

This opens up the question of whether we want to add a syntax for adding
doc strings and type annotations to each parameter of a function or module
definition.

Type annotations in particular are a big can of worms, especially if you
want them to be accurate, given the way some primitive functions and
modules are designed. How would you specify the type of 'min'? The
arguments are either a variable number of numeric arguments, or a single
argument which is a list of numbers. Up to this point, I've considered that
adding type annotations to OpenSCAD is not worth it, given the complexity
of the type language we'd need.

On 4 January 2016 at 00:49, Neon22 <mschafer at wireframe.biz> wrote:

> Maybe each function could have a doc method which had this json in it.
> This way if users made their own includable scad files they would also be
> self documenting.
>
> E.g. in python the first line of a function is optionally reserved for a
> doc
> string.
> def foo():
>   " what foo does"
>   code...
>
> maybe module foo() "doc string" {
> };
>
> Doug - what do you think is right thing to do for openSCAD2 ?
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/api-in-json-format-tp15418p15460.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160104/05ede39f/attachment.html>

From doug at moens.org  Mon Jan  4 09:38:49 2016
From: doug at moens.org (doug moen)
Date: Mon, 4 Jan 2016 09:38:49 -0500
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <CAEEmnrMv=r2iyjDrTAz8uwdCgRUOzogVCDrJzpS1g9JVETtncA@mail.gmail.com>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
	<568986A1.5060301@arnholm.org>
	<CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>
	<CAEEmnrMdN1EPm_XeDCRnp6syRHyUhGxggDrBN4A5rOBPWLpw7Q@mail.gmail.com>
	<234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>
	<CAEEmnrOJvnXC+8Y+04kQTyPKNjn=s296QTQNsuzqoMa4cQC0aQ@mail.gmail.com>
	<CAGV6i+Od_GOKzQo=H0DeCN=_ubh3KA7KdXk_2rK+SoJEff0v2w@mail.gmail.com>
	<CAEEmnrMv=r2iyjDrTAz8uwdCgRUOzogVCDrJzpS1g9JVETtncA@mail.gmail.com>
Message-ID: <CAGV6i+Nb54y1_e-H7C6JpQnix1_MShUTVNKnA=-WLSu8=rXFMA@mail.gmail.com>

I found something on stackoverflow indicating that there's a difference
between 32 and 64 bit windows w.r.t. floating point precision. Something to
do with SSE2 instructions.

"SSE2 also replaces the x87's IEEE 80-bit precision with the choice of
either IEEE 32-bit or 64-bit floating-point math. As a result, x86-64
processors running in 64-bit mode will produce floating-point results more
like those of most RISC CPUs, but those results will vary slightly from the
answers produced by legacy programs that use the x87 FPU due to the
difference in precision."

Does one of your machines have a 64 bit CPU?

On 4 January 2016 at 08:49, nop head <nop.head at gmail.com> wrote:

> Is the maths library statically linked? If so on a nearly identical
> processor are we saying XP and Win7 set the extended precision flag
> differently?
>
>
> On 4 January 2016 at 13:19, doug moen <doug at moens.org> wrote:
>
>> IEEE floating point can be made consistent, if you make the effort, at
>> least the standard places this requirement on language implementations. One
>> requirement is to set the mode bits consistently, which I don't think we
>> do. Trig functions (required for rotation) are usually implemented in the C
>> library, and I suspect that different implementations of sine or cosine (on
>> different OS versions) may return different results for the same input.
>>
>> On Intel platforms, there is an extended precision 80 bit floating point
>> format. If you set the extended precision mode flag on the Intel GPU, then
>> intermediate results are represented with 80 bit precision, even though the
>> inputs and outputs of the operation are 64 bit. The ARM architecture lacks
>> this feature. If you disable extended precision mode, you should get the
>> same results on Intel and on ARM for basic operations implemented by the
>> FPU, although even here the standard provides a bit of wiggle room for
>> variation. I think that whether the extended precision flag is enabled or
>> disabled by default also varies with the operating system. Disabling it is
>> supposedly faster.
>>
>> There is also a rounding mode that affects results, but that is less
>> likely to be the cause of your problem.
>>
>> On 4 January 2016 at 03:31, nop head <nop.head at gmail.com> wrote:
>>
>>> I tried it in an old version of OpenScad, 2013.06, which I assume only
>>> does F6 in CGAL. That doesn't have the problem.
>>>
>>> Is it perhaps that translate produces a different result when the object
>>> it gets is from CGAL?
>>>
>>> Another numerical issue I have noticed is when I generate Mendel90 on a
>>> different PC, but with the same source files and the same old OpenScad
>>> binary then some of the STL files are different. When I examined a simply
>>> example I found one vertex on a circle had a different Y ordinate that
>>> differed by one in the last floating point digit. One is an Intel Core2 Duo
>>> running 32 bit XP and the other an Intel Core i7 running 64 bit Win7.
>>> Perhaps I am naive but I thought IEEE floating point maths was supposed to
>>> give consistent results.
>>>
>>> On 3 January 2016 at 23:05, Marius Kintel <marius at kintel.net> wrote:
>>>
>>>> ..or:
>>>>
>>>> $fn=3;
>>>> translate([10,0,0]) {
>>>>     cylinder(r = 4, h= 20);
>>>>     translate([0, 0, 100]) cube(); //dummy
>>>> }
>>>> translate([10,0,0]) cylinder(r = 4, h = 10);
>>>>
>>>> Not sure why this happens. It would be nice if we could test if it?s
>>>> reproducible it in pure CGAL.
>>>>
>>>>  -Marius
>>>>
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160104/f47103f8/attachment.html>

From runsun at gmail.com  Mon Jan  4 09:40:46 2016
From: runsun at gmail.com (runsun)
Date: Mon, 4 Jan 2016 07:40:46 -0700 (MST)
Subject: [OpenSCAD] api in json format
In-Reply-To: <CAGV6i+PGM_zVCf2FN0oRKa6KgCsGMBcC9mAt5oRKuoWyDRts5g@mail.gmail.com>
References: <1451758430956-15418.post@n5.nabble.com> <56881C94.4090200@gmx.de>
	<1451795664593-15422.post@n5.nabble.com>
	<1451880340790-15457.post@n5.nabble.com>
	<1451886572176-15460.post@n5.nabble.com>
	<CAGV6i+PGM_zVCf2FN0oRKa6KgCsGMBcC9mAt5oRKuoWyDRts5g@mail.gmail.com>
Message-ID: <1451918446962-15468.post@n5.nabble.com>

doug.moen wrote
> The "Customizer GUI" project is already defining a syntax for adding a doc
> string to variable definitions. Check out this example:
> https://github.com/openscad/openscad/blob/model-meta-data3/examples/Parametric/sign.scad

That's pretty cool. What is the meaning of 

@Parameter([10, 20, 30, 50, 100])

Does it mean only the listed values are allowed ?


> Type annotations in particular are a big can of worms, especially if you
> want them to be accurate, given the way some primitive functions and
> modules are designed. How would you specify the type of 'min'? The
> arguments are either a variable number of numeric arguments, or a single
> argument which is a list of numbers. Up to this point, I've considered
> that
> adding type annotations to OpenSCAD is not worth it, given the complexity
> of the type language we'd need.

How about this:

@type("int")
 
@type("number", "list")

In the api that I wrote in previous post, I use:


>   { "name": "size" 
>   ,  "type": "list|num" 
>   , "optional": "true" 
>   , "default": [1,1,1] 
>   } 

to indicate that both list and number are allowed. 


_______________________________________________
OpenSCAD mailing list
Discuss at .openscad
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org




-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git ), 


synwrite( 1 , 2 ); 



 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision( 1 , 2 ),

xl-control 








--
View this message in context: http://forum.openscad.org/api-in-json-format-tp15418p15468.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From alan at lxorguk.ukuu.org.uk  Mon Jan  4 09:45:13 2016
From: alan at lxorguk.ukuu.org.uk (Alan Cox)
Date: Mon, 4 Jan 2016 14:45:13 +0000
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <CAGV6i+Od_GOKzQo=H0DeCN=_ubh3KA7KdXk_2rK+SoJEff0v2w@mail.gmail.com>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
	<568986A1.5060301@arnholm.org>
	<CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>
	<CAEEmnrMdN1EPm_XeDCRnp6syRHyUhGxggDrBN4A5rOBPWLpw7Q@mail.gmail.com>
	<234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>
	<CAEEmnrOJvnXC+8Y+04kQTyPKNjn=s296QTQNsuzqoMa4cQC0aQ@mail.gmail.com>
	<CAGV6i+Od_GOKzQo=H0DeCN=_ubh3KA7KdXk_2rK+SoJEff0v2w@mail.gmail.com>
Message-ID: <20160104144513.7dc3ef37@www.etchedpixels.co.uk>

On Mon, 4 Jan 2016 08:19:01 -0500
doug moen <doug at moens.org> wrote:

> IEEE floating point can be made consistent, if you make the effort, at
> least the standard places this requirement on language implementations. One
> requirement is to set the mode bits consistently, which I don't think we
> do. Trig functions (required for rotation) are usually implemented in the C
> library, and I suspect that different implementations of sine or cosine (on
> different OS versions) may return different results for the same input.

And CPU version, compiler, compiler version, optimisations, and a few
other bits. Even static linked the CPU version can have an effect if the
library tests for CPU features and configures itself optimally.

> On Intel platforms, there is an extended precision 80 bit floating point
> format. If you set the extended precision mode flag on the Intel GPU, then

CPU not GPU .. the GPU can't AFAIK handle extended precision at all.

> intermediate results are represented with 80 bit precision, even though the
> inputs and outputs of the operation are 64 bit. The ARM architecture lacks
> this feature. If you disable extended precision mode, you should get the
> same results on Intel and on ARM for basic operations implemented by the
> FPU, although even here the standard provides a bit of wiggle room for
> variation. I think that whether the extended precision flag is enabled or
> disabled by default also varies with the operating system. Disabling it is
> supposedly faster

Again depends on all sorts of things. Modern compilers and 64bit
toolchains will favour not emitting 8087 code in the first place.

Also to screw with your head - in some cases it matters if you are
compiling Ansi C or K&R C. The K&R standard says all floating arithemtic
is carried out double precision. Later standards allow a bit more
flexibility.

As I understand it 32bit Visual C++ uses double precision (64bit), while
the Intel compiler chain lets you select. GCC on Linux for 32bit will use
the 80bit precision for immediates, but 64bit will vary the intermediate
precision according to the types in use (eg float-float maths will
intermediate in floats)

C99: FLT_EVAL_METHOD is your "friend", although hitting yourself over the
head with a spade may feel more productive.

Alan


From marius at kintel.net  Mon Jan  4 09:57:09 2016
From: marius at kintel.net (Marius Kintel)
Date: Mon, 4 Jan 2016 09:57:09 -0500
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <CAEEmnrOJvnXC+8Y+04kQTyPKNjn=s296QTQNsuzqoMa4cQC0aQ@mail.gmail.com>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
	<568986A1.5060301@arnholm.org>
	<CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>
	<CAEEmnrMdN1EPm_XeDCRnp6syRHyUhGxggDrBN4A5rOBPWLpw7Q@mail.gmail.com>
	<234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>
	<CAEEmnrOJvnXC+8Y+04kQTyPKNjn=s296QTQNsuzqoMa4cQC0aQ@mail.gmail.com>
Message-ID: <9DE28CF0-24E8-49F6-9C32-4EAEAD9285E2@kintel.net>

> On Jan 4, 2016, at 03:31 AM, nop head <nop.head at gmail.com> wrote:
> 
> I tried it in an old version of OpenScad, 2013.06, which I assume only does F6 in CGAL. That doesn't have the problem.
> 
> Is it perhaps that translate produces a different result when the object it gets is from CGAL?
> 
Thanks for testing that!
In 2014.03 and later we do indeed do some optimization to avoid CGAL usage where we don?t need it.
I didn?t expect this to trigger the behavior you mention, but I?m probably wrong.
I recently started on some refactoring where I decouple the transformation from the original object, which should improve this without having to fall back to doing everything in CGAL.
..but I?ll see if I can find the cause of your problem as well, in case I can find a more immediate fix.

 -Marius



From doug at moens.org  Mon Jan  4 10:04:51 2016
From: doug at moens.org (doug moen)
Date: Mon, 4 Jan 2016 10:04:51 -0500
Subject: [OpenSCAD] api in json format
In-Reply-To: <1451918446962-15468.post@n5.nabble.com>
References: <1451758430956-15418.post@n5.nabble.com> <56881C94.4090200@gmx.de>
	<1451795664593-15422.post@n5.nabble.com>
	<1451880340790-15457.post@n5.nabble.com>
	<1451886572176-15460.post@n5.nabble.com>
	<CAGV6i+PGM_zVCf2FN0oRKa6KgCsGMBcC9mAt5oRKuoWyDRts5g@mail.gmail.com>
	<1451918446962-15468.post@n5.nabble.com>
Message-ID: <CAGV6i+Nf_8VC11=RBG41zLWDhuECV0mqL_k2VUW4xkxS79VKew@mail.gmail.com>

In order for an IDE editor to reliably show you hints about the names and
types of parameters, you need a strongly typed language, and you need the
IDE to parse and compile the code being edited in order to collect type
information for functions you might be calling. OpenSCAD isn't designed to
be a strongly typed language, so I'm not optimistic about this kind of
project succeeding.

If your only goal is to present information about built-in functions and
modules, and you don't worry about presenting hints for functions and
modules that are locally defined, or defined via include <f> or use <f>,
then the problem is much easier. In this case, we don't need type
annotations in the language at all.

In OpenSCAD2, the problem gets harder, because objects are first class
values, and you can write obj.f(x). So the IDE needs to know the type of
'obj', which could be passed as a parameter, or returned as a result from
another function call.

On 4 January 2016 at 09:40, runsun <runsun at gmail.com> wrote:

> doug.moen wrote
> > The "Customizer GUI" project is already defining a syntax for adding a
> doc
> > string to variable definitions. Check out this example:
> >
> https://github.com/openscad/openscad/blob/model-meta-data3/examples/Parametric/sign.scad
>
> That's pretty cool. What is the meaning of
>
> @Parameter([10, 20, 30, 50, 100])
>
> Does it mean only the listed values are allowed ?
>
>
> > Type annotations in particular are a big can of worms, especially if you
> > want them to be accurate, given the way some primitive functions and
> > modules are designed. How would you specify the type of 'min'? The
> > arguments are either a variable number of numeric arguments, or a single
> > argument which is a list of numbers. Up to this point, I've considered
> > that
> > adding type annotations to OpenSCAD is not worth it, given the complexity
> > of the type language we'd need.
>
> How about this:
>
> @type("int")
>
> @type("number", "list")
>
> In the api that I wrote in previous post, I use:
>
>
> >   { "name": "size"
> >   ,  "type": "list|num"
> >   , "optional": "true"
> >   , "default": [1,1,1]
> >   }
>
> to indicate that both list and number are allowed.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at .openscad
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
>
> -----
>
> $  Runsun Pan, PhD
>
> $ libs:
>
> doctest ,
>
> faces ( git ),
>
> offline doc ( git ),
>
> runscad.py( 1 , 2 , git ),
>
>
> synwrite( 1 , 2 );
>
>
>
>  $ tips:
>
> hash( 1 , 2 ),
>
> sweep ,
>
> var( 1 , 2 ),
>
> lerp ,
>
> animGif ,
>
> precision( 1 , 2 ),
>
> xl-control
>
>
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/api-in-json-format-tp15418p15468.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160104/cbe37b9f/attachment.html>

From alan at lxorguk.ukuu.org.uk  Mon Jan  4 10:14:08 2016
From: alan at lxorguk.ukuu.org.uk (Alan Cox)
Date: Mon, 4 Jan 2016 15:14:08 +0000
Subject: [OpenSCAD] api in json format
In-Reply-To: <CAGV6i+Nf_8VC11=RBG41zLWDhuECV0mqL_k2VUW4xkxS79VKew@mail.gmail.com>
References: <1451758430956-15418.post@n5.nabble.com> <56881C94.4090200@gmx.de>
	<1451795664593-15422.post@n5.nabble.com>
	<1451880340790-15457.post@n5.nabble.com>
	<1451886572176-15460.post@n5.nabble.com>
	<CAGV6i+PGM_zVCf2FN0oRKa6KgCsGMBcC9mAt5oRKuoWyDRts5g@mail.gmail.com>
	<1451918446962-15468.post@n5.nabble.com>
	<CAGV6i+Nf_8VC11=RBG41zLWDhuECV0mqL_k2VUW4xkxS79VKew@mail.gmail.com>
Message-ID: <20160104151408.48249f97@www.etchedpixels.co.uk>

On Mon, 4 Jan 2016 10:04:51 -0500
doug moen <doug at moens.org> wrote:

> In order for an IDE editor to reliably show you hints about the names and
> types of parameters, you need a strongly typed language, and you need the
> IDE to parse and compile the code being edited in order to collect type
> information for functions you might be calling. OpenSCAD isn't designed to
> be a strongly typed language, so I'm not optimistic about this kind of
> project succeeding.

That's an "or" not an "and" I think you'll find.

If you have the parse tree you know the set of valid types for any given
parameter and the resulting returned type. That may be quite a long list
and you may need to sort it by interest or represent it cleverly.

Alan


From runsun at gmail.com  Mon Jan  4 10:35:27 2016
From: runsun at gmail.com (runsun)
Date: Mon, 4 Jan 2016 08:35:27 -0700 (MST)
Subject: [OpenSCAD] api in json format
In-Reply-To: <CAGV6i+Nf_8VC11=RBG41zLWDhuECV0mqL_k2VUW4xkxS79VKew@mail.gmail.com>
References: <1451758430956-15418.post@n5.nabble.com> <56881C94.4090200@gmx.de>
	<1451795664593-15422.post@n5.nabble.com>
	<1451880340790-15457.post@n5.nabble.com>
	<1451886572176-15460.post@n5.nabble.com>
	<CAGV6i+PGM_zVCf2FN0oRKa6KgCsGMBcC9mAt5oRKuoWyDRts5g@mail.gmail.com>
	<1451918446962-15468.post@n5.nabble.com>
	<CAGV6i+Nf_8VC11=RBG41zLWDhuECV0mqL_k2VUW4xkxS79VKew@mail.gmail.com>
Message-ID: <1451921727066-15473.post@n5.nabble.com>

I kind of getting lost about what you said. But, that's ok.  

Don't know if this is helpful but I've been using type inspection, type
casting etc in my lib for quite a while:

>  type ( x )=str ( tested:18 ) (mode:12)
> ------------------------------------------------
> | 0> type([2, 3])= "arr"
> | 1> type([])= "arr"
> | 2> type(-4)= "int"
> | 3> type(0)= "int"
> | 4> type(0.3)= "float"
> | 5> type(-0.3)= "float"
> | 6> type(2e-6)= "float"
> | 7> type(2e3)= "int"
> | 8> type(2e-06)= "float"
> | 9> type(2e+03)= "int"
> | 10> type("a")= "str"
> | 11> type("10")= "str"
> | 12> type(true)= "bool"
> | 13> type(false)= "bool"
> | 14> type([1:2:10])= "range" // New 2015.9.10
> | 15> type([1:1.5:10])= "range" // New 2015.9.10
> | 16> type(undef)= undef
> | 17> type(12345678901234500)= "int" // Bugfix 2015.11.17

The type-checking has been a very crucial part of my lib, even geometric
stuff like points, lines and planes can be type-checked:

> gtype ( x,dim=3 ) =str ( tested:9 ) (mode:12)
> ------------------------------------------------
> | 0> gtype(P)= "pt"
> | 1> gtype([P,Q])= "ln"
> | 2> gtype([P,Q,R])= "pl"
> | 3> gtype("a")= undef
> | 4> gtype([P,Q,R,P])= undef
> | 5> gtype([[P,Q],1])= "cir"
> | 6> gtype([2,[P,Q]])= "cir"
> | 7> gtype([P,1])= "ball"
> | 8> gtype([0.5,P])= "ball"





-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git ), 


synwrite( 1 , 2 ); 



 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision( 1 , 2 ),

xl-control 








--
View this message in context: http://forum.openscad.org/api-in-json-format-tp15418p15473.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Mon Jan  4 10:54:13 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 4 Jan 2016 16:54:13 +0100
Subject: [OpenSCAD] api in json format
In-Reply-To: <1451918446962-15468.post@n5.nabble.com>
References: <1451758430956-15418.post@n5.nabble.com> <56881C94.4090200@gmx.de>
	<1451795664593-15422.post@n5.nabble.com>
	<1451880340790-15457.post@n5.nabble.com>
	<1451886572176-15460.post@n5.nabble.com>
	<CAGV6i+PGM_zVCf2FN0oRKa6KgCsGMBcC9mAt5oRKuoWyDRts5g@mail.gmail.com>
	<1451918446962-15468.post@n5.nabble.com>
Message-ID: <568A95A5.50802@gmx.de>

On 01/04/2016 03:40 PM, runsun wrote:
> That's pretty cool. What is the meaning of 
> 
> @Parameter([10, 20, 30, 50, 100])
> 
> Does it mean only the listed values are allowed ?
>
Yes, this is basically the basis for modeling the functionality
that the Thingiverse Customizer provides by adding comments to the
scad script.
See the github comment for short example screencasts
https://github.com/openscad/openscad/issues/722#issuecomment-69521189

The meta data definition would allow a long list of other
use-cases, not only the customizer parameter specification.
I've started to collect some of the use cases for different
types of annotations in the wiki:
https://github.com/openscad/openscad/wiki/Meta-Data-Use-Cases

The prototype implementation in branch model-meta-data3 uses
the Java Annotation like syntax as shown above, if it would
make things easier for other cases (e.g. OpenSCAD2) it should
be quite simple to use a different syntax...

ciao,
  Torsten.



From Torsten.Paul at gmx.de  Mon Jan  4 11:25:57 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 4 Jan 2016 17:25:57 +0100
Subject: [OpenSCAD] api in json format
In-Reply-To: <1451886572176-15460.post@n5.nabble.com>
References: <1451758430956-15418.post@n5.nabble.com> <56881C94.4090200@gmx.de>
	<1451795664593-15422.post@n5.nabble.com>
	<1451880340790-15457.post@n5.nabble.com>
	<1451886572176-15460.post@n5.nabble.com>
Message-ID: <568A9D15.9000000@gmx.de>

On 01/04/2016 06:49 AM, Neon22 wrote:
> maybe module foo() "doc string" {
> };
> 
> Doug - what do you think is right thing to do for openSCAD2 ?
> 
I think that would be possible with current OpenSCAD too, it
would simply require all *new* code that uses it to use the new
OpenSCAD version - which is pretty normal.

It seems to be some kind of convention to use triple " to mark
the docstring, so maybe that would make sense here too.
I guess the idea with that is to allow various markup in that
section, including the use of normal single quotes.

Although for current OpenSCAD, that would probably just allow
the syntax as we have no way for introspection or setting some
object field to make it available at runtime (some simple
solution like a docstring() function returning the doc of the
current module could be added, but I'm not sure that's very
useful).

It still would define a standard way for adding documentation,
which is a good thing to have. It might even allow to use
documentation generation tools like Sphinx to run on OpenSCAD
code.

ciao,
  Torsten.



From nop.head at gmail.com  Mon Jan  4 12:28:10 2016
From: nop.head at gmail.com (nop head)
Date: Mon, 4 Jan 2016 17:28:10 +0000
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <CAGV6i+Nb54y1_e-H7C6JpQnix1_MShUTVNKnA=-WLSu8=rXFMA@mail.gmail.com>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
	<568986A1.5060301@arnholm.org>
	<CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>
	<CAEEmnrMdN1EPm_XeDCRnp6syRHyUhGxggDrBN4A5rOBPWLpw7Q@mail.gmail.com>
	<234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>
	<CAEEmnrOJvnXC+8Y+04kQTyPKNjn=s296QTQNsuzqoMa4cQC0aQ@mail.gmail.com>
	<CAGV6i+Od_GOKzQo=H0DeCN=_ubh3KA7KdXk_2rK+SoJEff0v2w@mail.gmail.com>
	<CAEEmnrMv=r2iyjDrTAz8uwdCgRUOzogVCDrJzpS1g9JVETtncA@mail.gmail.com>
	<CAGV6i+Nb54y1_e-H7C6JpQnix1_MShUTVNKnA=-WLSu8=rXFMA@mail.gmail.com>
Message-ID: <CAEEmnrMJYOi4uHqy7NeFf2CZB+mfpYAtSPpx_aMTPyqr0MnU_Q@mail.gmail.com>

> Does one of your machines have a 64 bit CPU?

My understanding is both have 64 bit CPUs. The older one is running a 32bit
OS though. The executable is 32 bit as it runs on both.

On 4 January 2016 at 14:38, doug moen <doug at moens.org> wrote:

> I found something on stackoverflow indicating that there's a difference
> between 32 and 64 bit windows w.r.t. floating point precision. Something to
> do with SSE2 instructions.
>
> "SSE2 also replaces the x87's IEEE 80-bit precision with the choice of
> either IEEE 32-bit or 64-bit floating-point math. As a result, x86-64
> processors running in 64-bit mode will produce floating-point results more
> like those of most RISC CPUs, but those results will vary slightly from the
> answers produced by legacy programs that use the x87 FPU due to the
> difference in precision."
>
> Does one of your machines have a 64 bit CPU?
>
> On 4 January 2016 at 08:49, nop head <nop.head at gmail.com> wrote:
>
>> Is the maths library statically linked? If so on a nearly identical
>> processor are we saying XP and Win7 set the extended precision flag
>> differently?
>>
>>
>> On 4 January 2016 at 13:19, doug moen <doug at moens.org> wrote:
>>
>>> IEEE floating point can be made consistent, if you make the effort, at
>>> least the standard places this requirement on language implementations. One
>>> requirement is to set the mode bits consistently, which I don't think we
>>> do. Trig functions (required for rotation) are usually implemented in the C
>>> library, and I suspect that different implementations of sine or cosine (on
>>> different OS versions) may return different results for the same input.
>>>
>>> On Intel platforms, there is an extended precision 80 bit floating point
>>> format. If you set the extended precision mode flag on the Intel GPU, then
>>> intermediate results are represented with 80 bit precision, even though the
>>> inputs and outputs of the operation are 64 bit. The ARM architecture lacks
>>> this feature. If you disable extended precision mode, you should get the
>>> same results on Intel and on ARM for basic operations implemented by the
>>> FPU, although even here the standard provides a bit of wiggle room for
>>> variation. I think that whether the extended precision flag is enabled or
>>> disabled by default also varies with the operating system. Disabling it is
>>> supposedly faster.
>>>
>>> There is also a rounding mode that affects results, but that is less
>>> likely to be the cause of your problem.
>>>
>>> On 4 January 2016 at 03:31, nop head <nop.head at gmail.com> wrote:
>>>
>>>> I tried it in an old version of OpenScad, 2013.06, which I assume only
>>>> does F6 in CGAL. That doesn't have the problem.
>>>>
>>>> Is it perhaps that translate produces a different result when the
>>>> object it gets is from CGAL?
>>>>
>>>> Another numerical issue I have noticed is when I generate Mendel90 on a
>>>> different PC, but with the same source files and the same old OpenScad
>>>> binary then some of the STL files are different. When I examined a simply
>>>> example I found one vertex on a circle had a different Y ordinate that
>>>> differed by one in the last floating point digit. One is an Intel Core2 Duo
>>>> running 32 bit XP and the other an Intel Core i7 running 64 bit Win7.
>>>> Perhaps I am naive but I thought IEEE floating point maths was supposed to
>>>> give consistent results.
>>>>
>>>> On 3 January 2016 at 23:05, Marius Kintel <marius at kintel.net> wrote:
>>>>
>>>>> ..or:
>>>>>
>>>>> $fn=3;
>>>>> translate([10,0,0]) {
>>>>>     cylinder(r = 4, h= 20);
>>>>>     translate([0, 0, 100]) cube(); //dummy
>>>>> }
>>>>> translate([10,0,0]) cylinder(r = 4, h = 10);
>>>>>
>>>>> Not sure why this happens. It would be nice if we could test if it?s
>>>>> reproducible it in pure CGAL.
>>>>>
>>>>>  -Marius
>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> OpenSCAD mailing list
>>>>> Discuss at lists.openscad.org
>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160104/3f16684f/attachment.html>

From nop.head at gmail.com  Mon Jan  4 12:49:26 2016
From: nop.head at gmail.com (nop head)
Date: Mon, 4 Jan 2016 17:49:26 +0000
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <9DE28CF0-24E8-49F6-9C32-4EAEAD9285E2@kintel.net>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
	<568986A1.5060301@arnholm.org>
	<CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>
	<CAEEmnrMdN1EPm_XeDCRnp6syRHyUhGxggDrBN4A5rOBPWLpw7Q@mail.gmail.com>
	<234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>
	<CAEEmnrOJvnXC+8Y+04kQTyPKNjn=s296QTQNsuzqoMa4cQC0aQ@mail.gmail.com>
	<9DE28CF0-24E8-49F6-9C32-4EAEAD9285E2@kintel.net>
Message-ID: <CAEEmnrP2nUKhwjuNRJdjCoysX6e69xf6o6w+S1jX32bYLou8qw@mail.gmail.com>

A related bug is that if the object doesn't go through CGAL show edges does
not work.

Also show edges stopped F5 displaying anything. It was only restored when
OpenScad was restarted with it off. Turning on Goldfeather seems to fix it.

On 4 January 2016 at 14:57, Marius Kintel <marius at kintel.net> wrote:

> > On Jan 4, 2016, at 03:31 AM, nop head <nop.head at gmail.com> wrote:
> >
> > I tried it in an old version of OpenScad, 2013.06, which I assume only
> does F6 in CGAL. That doesn't have the problem.
> >
> > Is it perhaps that translate produces a different result when the object
> it gets is from CGAL?
> >
> Thanks for testing that!
> In 2014.03 and later we do indeed do some optimization to avoid CGAL usage
> where we don?t need it.
> I didn?t expect this to trigger the behavior you mention, but I?m probably
> wrong.
> I recently started on some refactoring where I decouple the transformation
> from the original object, which should improve this without having to fall
> back to doing everything in CGAL.
> ..but I?ll see if I can find the cause of your problem as well, in case I
> can find a more immediate fix.
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160104/0fffcb5a/attachment.html>

From doug at moens.org  Mon Jan  4 14:00:14 2016
From: doug at moens.org (doug moen)
Date: Mon, 4 Jan 2016 14:00:14 -0500
Subject: [OpenSCAD] api in json format
In-Reply-To: <568A9D15.9000000@gmx.de>
References: <1451758430956-15418.post@n5.nabble.com> <56881C94.4090200@gmx.de>
	<1451795664593-15422.post@n5.nabble.com>
	<1451880340790-15457.post@n5.nabble.com>
	<1451886572176-15460.post@n5.nabble.com> <568A9D15.9000000@gmx.de>
Message-ID: <CAGV6i+PGAfYmkwp+QeTSnhSWExv73urvQdkLTKNin6Aop0_y+w@mail.gmail.com>

Hi Torsten.

Sphinx is specifically designed for Python, so it requires the python """
string literal syntax, as you have noted. We'd have to extend the OpenSCAD
syntax to make it Sphinx compatible.

Or we could use Doxygen, which should work with OpenSCAD right now, with no
language extensions, since Doxygen was designed for C++, and embeds
documentation in C++ comments, which comment syntax is also supported by
OpenSCAD.

Sphinx uses ReStructuredText as its text markup language: RST is mostly
only used by the Python community. Doxygen uses MarkDown, which will be
familiar to a lot of OpenSCAD developers since github also uses MarkDown.
In fact, Doxygen will even process the README.md file at the root of your
project tree, which is also processed by github.

So I think doxygen is a better starting point for an OpenSCAD inline
documentation tool.

On 4 January 2016 at 11:25, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 01/04/2016 06:49 AM, Neon22 wrote:
> > maybe module foo() "doc string" {
> > };
> >
> > Doug - what do you think is right thing to do for openSCAD2 ?
> >
> I think that would be possible with current OpenSCAD too, it
> would simply require all *new* code that uses it to use the new
> OpenSCAD version - which is pretty normal.
>
> It seems to be some kind of convention to use triple " to mark
> the docstring, so maybe that would make sense here too.
> I guess the idea with that is to allow various markup in that
> section, including the use of normal single quotes.
>
> Although for current OpenSCAD, that would probably just allow
> the syntax as we have no way for introspection or setting some
> object field to make it available at runtime (some simple
> solution like a docstring() function returning the doc of the
> current module could be added, but I'm not sure that's very
> useful).
>
> It still would define a standard way for adding documentation,
> which is a good thing to have. It might even allow to use
> documentation generation tools like Sphinx to run on OpenSCAD
> code.
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160104/e166ff08/attachment.html>

From doug at moens.org  Mon Jan  4 14:05:25 2016
From: doug at moens.org (doug moen)
Date: Mon, 4 Jan 2016 14:05:25 -0500
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <CAEEmnrP2nUKhwjuNRJdjCoysX6e69xf6o6w+S1jX32bYLou8qw@mail.gmail.com>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
	<568986A1.5060301@arnholm.org>
	<CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>
	<CAEEmnrMdN1EPm_XeDCRnp6syRHyUhGxggDrBN4A5rOBPWLpw7Q@mail.gmail.com>
	<234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>
	<CAEEmnrOJvnXC+8Y+04kQTyPKNjn=s296QTQNsuzqoMa4cQC0aQ@mail.gmail.com>
	<9DE28CF0-24E8-49F6-9C32-4EAEAD9285E2@kintel.net>
	<CAEEmnrP2nUKhwjuNRJdjCoysX6e69xf6o6w+S1jX32bYLou8qw@mail.gmail.com>
Message-ID: <CAGV6i+PjaEmf=_muva60y5ptj-dwsJUn9JuguQ2UMZ6AxFFjzQ@mail.gmail.com>

I was using Show Edges earlier today. It was behaving unreliably, then it
started working, but I didn't restart OpenSCAD nor enable Goldfeather. It's
working right now but I don't have a recipe for reproducing the problem.

On 4 January 2016 at 12:49, nop head <nop.head at gmail.com> wrote:

> A related bug is that if the object doesn't go through CGAL show edges
> does not work.
>
> Also show edges stopped F5 displaying anything. It was only restored when
> OpenScad was restarted with it off. Turning on Goldfeather seems to fix it.
>
> On 4 January 2016 at 14:57, Marius Kintel <marius at kintel.net> wrote:
>
>> > On Jan 4, 2016, at 03:31 AM, nop head <nop.head at gmail.com> wrote:
>> >
>> > I tried it in an old version of OpenScad, 2013.06, which I assume only
>> does F6 in CGAL. That doesn't have the problem.
>> >
>> > Is it perhaps that translate produces a different result when the
>> object it gets is from CGAL?
>> >
>> Thanks for testing that!
>> In 2014.03 and later we do indeed do some optimization to avoid CGAL
>> usage where we don?t need it.
>> I didn?t expect this to trigger the behavior you mention, but I?m
>> probably wrong.
>> I recently started on some refactoring where I decouple the
>> transformation from the original object, which should improve this without
>> having to fall back to doing everything in CGAL.
>> ..but I?ll see if I can find the cause of your problem as well, in case I
>> can find a more immediate fix.
>>
>>  -Marius
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160104/5c837241/attachment.html>

From Torsten.Paul at gmx.de  Mon Jan  4 14:19:02 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 4 Jan 2016 20:19:02 +0100
Subject: [OpenSCAD] api in json format
In-Reply-To: <CAGV6i+PGAfYmkwp+QeTSnhSWExv73urvQdkLTKNin6Aop0_y+w@mail.gmail.com>
References: <1451758430956-15418.post@n5.nabble.com> <56881C94.4090200@gmx.de>
	<1451795664593-15422.post@n5.nabble.com>
	<1451880340790-15457.post@n5.nabble.com>
	<1451886572176-15460.post@n5.nabble.com> <568A9D15.9000000@gmx.de>
	<CAGV6i+PGAfYmkwp+QeTSnhSWExv73urvQdkLTKNin6Aop0_y+w@mail.gmail.com>
Message-ID: <568AC5A6.5020407@gmx.de>

On 01/04/2016 08:00 PM, doug moen wrote:
> Sphinx is specifically designed for Python, so it requires the
> python """ string literal syntax, as you have noted. We'd have
> to extend the OpenSCAD syntax to make it Sphinx compatible.
> 
Yes, it might need extensions, it's not just for Python though.
The Website claims: "...but C/C++ is already supported as well,
and it is planned to add special support for other languages as
well." so it might not be too complicated to have it handle
OpenSCAD as well.

But yes, it's just an example. If there's a different tool that
maybe just needs some configuration or so, that's perfect.

> So I think doxygen is a better starting point for an OpenSCAD
> inline documentation tool.
>
Cool, why not. I guess MarkDown is a good option. I don't like
that it's not going to be standardized, but it's wide adoption
still makes it a sensible choice.

ciao,
  Torsten.



From doug at moens.org  Mon Jan  4 14:23:27 2016
From: doug at moens.org (doug moen)
Date: Mon, 4 Jan 2016 14:23:27 -0500
Subject: [OpenSCAD] api in json format
In-Reply-To: <568AC5A6.5020407@gmx.de>
References: <1451758430956-15418.post@n5.nabble.com> <56881C94.4090200@gmx.de>
	<1451795664593-15422.post@n5.nabble.com>
	<1451880340790-15457.post@n5.nabble.com>
	<1451886572176-15460.post@n5.nabble.com> <568A9D15.9000000@gmx.de>
	<CAGV6i+PGAfYmkwp+QeTSnhSWExv73urvQdkLTKNin6Aop0_y+w@mail.gmail.com>
	<568AC5A6.5020407@gmx.de>
Message-ID: <CAGV6i+MKHVffS7JzUyYn7VRryK8FpEY1SYdo_q0iB=2QQyF5Tw@mail.gmail.com>

I know the Sphinx documentation claims C++ support, but this is done by
invoking Doxygen via Breathe. http://breathe.readthedocs.org/en/latest/

On 4 January 2016 at 14:19, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 01/04/2016 08:00 PM, doug moen wrote:
> > Sphinx is specifically designed for Python, so it requires the
> > python """ string literal syntax, as you have noted. We'd have
> > to extend the OpenSCAD syntax to make it Sphinx compatible.
> >
> Yes, it might need extensions, it's not just for Python though.
> The Website claims: "...but C/C++ is already supported as well,
> and it is planned to add special support for other languages as
> well." so it might not be too complicated to have it handle
> OpenSCAD as well.
>
> But yes, it's just an example. If there's a different tool that
> maybe just needs some configuration or so, that's perfect.
>
> > So I think doxygen is a better starting point for an OpenSCAD
> > inline documentation tool.
> >
> Cool, why not. I guess MarkDown is a good option. I don't like
> that it's not going to be standardized, but it's wide adoption
> still makes it a sensible choice.
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160104/8607d0c4/attachment.html>

From nop.head at gmail.com  Mon Jan  4 14:49:57 2016
From: nop.head at gmail.com (nop head)
Date: Mon, 4 Jan 2016 19:49:57 +0000
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <CAGV6i+PjaEmf=_muva60y5ptj-dwsJUn9JuguQ2UMZ6AxFFjzQ@mail.gmail.com>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
	<568986A1.5060301@arnholm.org>
	<CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>
	<CAEEmnrMdN1EPm_XeDCRnp6syRHyUhGxggDrBN4A5rOBPWLpw7Q@mail.gmail.com>
	<234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>
	<CAEEmnrOJvnXC+8Y+04kQTyPKNjn=s296QTQNsuzqoMa4cQC0aQ@mail.gmail.com>
	<9DE28CF0-24E8-49F6-9C32-4EAEAD9285E2@kintel.net>
	<CAEEmnrP2nUKhwjuNRJdjCoysX6e69xf6o6w+S1jX32bYLou8qw@mail.gmail.com>
	<CAGV6i+PjaEmf=_muva60y5ptj-dwsJUn9JuguQ2UMZ6AxFFjzQ@mail.gmail.com>
Message-ID: <CAEEmnrNBh9dQqXQ1SUrQqPN1E7Pa2q=++O8vvnL1LwNAa1YM0g@mail.gmail.com>

Yes I just turned Goldfeather off and show edges is still working, so it
seems intermittent. When it wasn't working thrown together still produced a
result but normal preview was empty.

On 4 January 2016 at 19:05, doug moen <doug at moens.org> wrote:

> I was using Show Edges earlier today. It was behaving unreliably, then it
> started working, but I didn't restart OpenSCAD nor enable Goldfeather. It's
> working right now but I don't have a recipe for reproducing the problem.
>
> On 4 January 2016 at 12:49, nop head <nop.head at gmail.com> wrote:
>
>> A related bug is that if the object doesn't go through CGAL show edges
>> does not work.
>>
>> Also show edges stopped F5 displaying anything. It was only restored when
>> OpenScad was restarted with it off. Turning on Goldfeather seems to fix it.
>>
>> On 4 January 2016 at 14:57, Marius Kintel <marius at kintel.net> wrote:
>>
>>> > On Jan 4, 2016, at 03:31 AM, nop head <nop.head at gmail.com> wrote:
>>> >
>>> > I tried it in an old version of OpenScad, 2013.06, which I assume only
>>> does F6 in CGAL. That doesn't have the problem.
>>> >
>>> > Is it perhaps that translate produces a different result when the
>>> object it gets is from CGAL?
>>> >
>>> Thanks for testing that!
>>> In 2014.03 and later we do indeed do some optimization to avoid CGAL
>>> usage where we don?t need it.
>>> I didn?t expect this to trigger the behavior you mention, but I?m
>>> probably wrong.
>>> I recently started on some refactoring where I decouple the
>>> transformation from the original object, which should improve this without
>>> having to fall back to doing everything in CGAL.
>>> ..but I?ll see if I can find the cause of your problem as well, in case
>>> I can find a more immediate fix.
>>>
>>>  -Marius
>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160104/ecff458e/attachment.html>

From jpmendes54 at gmail.com  Mon Jan  4 15:55:17 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Mon, 4 Jan 2016 13:55:17 -0700 (MST)
Subject: [OpenSCAD] Happy New Year + OpenSCAD syntax lexer for SynWrite
In-Reply-To: <1451689750553-15412.post@n5.nabble.com>
References: <1451621185549-15402.post@n5.nabble.com>
	<CAEEmnrMs9cb9O7e6R3OKjMG-r7G-0S0gmq9c=QM_nrui_NS8Fg@mail.gmail.com>
	<1451678925087-15408.post@n5.nabble.com>
	<1451688239051-15411.post@n5.nabble.com>
	<1451689750553-15412.post@n5.nabble.com>
Message-ID: <1451940917873-15483.post@n5.nabble.com>

Hello,

Tnx runsun for the lexer.
It seems to exist a problem with some rules because some modules do not
appear in the tree list.
A construct like this:

module foo() color("SlateGray") render(convexity=2) // or other any
"operator" before the curly bracket
{
...
}

doesn't appear in the tree list.

Btw, is there a reason for the boolean operators to have the same style as
operators like translation and rotation?
I already defined a new style for the boolean by editing directly the file
Lexlib.lxl for my own use. Made some other minor changes to suit my taste
also.

jpmendes






--
View this message in context: http://forum.openscad.org/Happy-New-Year-OpenSCAD-syntax-lexer-for-SynWrite-tp15402p15483.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mickvav at gmail.com  Mon Jan  4 16:31:05 2016
From: mickvav at gmail.com (Mihail Vasiliev)
Date: Mon, 4 Jan 2016 14:31:05 -0700 (MST)
Subject: [OpenSCAD] export() function.
In-Reply-To: <5689C0AA.2010206@gmx.de>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
Message-ID: <1451943065250-15484.post@n5.nabble.com>

On persistent cache - may be try using mmap-ed files? There is some mechanism
for it in boost
(http://www.boost.org/doc/libs/1_50_0/libs/iostreams/doc/classes/mapped_file.html),
but I have no experience with it.

On my original issue - what about reconsidering my patches and suggestions
on security enhancments? 



--
View this message in context: http://forum.openscad.org/export-function-tp15428p15484.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Mon Jan  4 16:47:43 2016
From: runsun at gmail.com (runsun)
Date: Mon, 4 Jan 2016 14:47:43 -0700 (MST)
Subject: [OpenSCAD] Happy New Year + OpenSCAD syntax lexer for SynWrite
In-Reply-To: <1451940917873-15483.post@n5.nabble.com>
References: <1451621185549-15402.post@n5.nabble.com>
	<CAEEmnrMs9cb9O7e6R3OKjMG-r7G-0S0gmq9c=QM_nrui_NS8Fg@mail.gmail.com>
	<1451678925087-15408.post@n5.nabble.com>
	<1451688239051-15411.post@n5.nabble.com>
	<1451689750553-15412.post@n5.nabble.com>
	<1451940917873-15483.post@n5.nabble.com>
Message-ID: <1451944063494-15485.post@n5.nabble.com>

@ jpmendes,

1) The lexer wasn't designed to handle the coding style as *module xx()
<operations> {...}*.  The <operations> could be a lot of different things
with undetermined length. It'd be too complicated to consider that (note
that comparing to other lexers comes with SynWrite, this lexer is already on
the "very complicated" side). 

So at this moment the best bet is to rewrite it to *module xx() {
<operations> ... }*

2) boolean shouldn't have the same style as operations. See below:

<http://forum.openscad.org/file/n15485/160104_osc_lexer_demo.png> 

It's likely that something was changed during your modification. I
personally never edit Lexlib.lxl directly but going:

    [Options]/[Customize lexer]   --- modify the current lexer
    or 
    [Options]/[Customize lexer library]   --- pick a lexer from a list 

You can go [Customize lexer library], pick a lexer, make a copy using the
icon on the menu. This will give you a new lexer like "OpenSCAD (copy)". You
then edit it, hit [Apply] on the button to see if it fits your need, or add
your own code to the example panel of "OpenSCAD (copy)" . 





-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git ), 


synwrite( 1 , 2 ); 



 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision( 1 , 2 ),

xl-control 








--
View this message in context: http://forum.openscad.org/Happy-New-Year-OpenSCAD-syntax-lexer-for-SynWrite-tp15402p15485.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Mon Jan  4 16:52:19 2016
From: runsun at gmail.com (runsun)
Date: Mon, 4 Jan 2016 14:52:19 -0700 (MST)
Subject: [OpenSCAD] Happy New Year + OpenSCAD syntax lexer for SynWrite
In-Reply-To: <1451944063494-15485.post@n5.nabble.com>
References: <1451621185549-15402.post@n5.nabble.com>
	<CAEEmnrMs9cb9O7e6R3OKjMG-r7G-0S0gmq9c=QM_nrui_NS8Fg@mail.gmail.com>
	<1451678925087-15408.post@n5.nabble.com>
	<1451688239051-15411.post@n5.nabble.com>
	<1451689750553-15412.post@n5.nabble.com>
	<1451940917873-15483.post@n5.nabble.com>
	<1451944063494-15485.post@n5.nabble.com>
Message-ID: <1451944339013-15486.post@n5.nabble.com>

runsun wrote
> 1) The lexer wasn't designed to handle the coding style as 
*
> module xx() 
> <operations>
>  {...}
*
> .  

FYI, the tech side of this is that it uses *"module xx() {"* to identify
module blocks (see the module block rule named: "r_module<id>(...){"

Inserting <operations> breaks the rule. 



-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git ), 


synwrite( 1 , 2 ); 



 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision( 1 , 2 ),

xl-control 








--
View this message in context: http://forum.openscad.org/Happy-New-Year-OpenSCAD-syntax-lexer-for-SynWrite-tp15402p15486.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jpmendes54 at gmail.com  Mon Jan  4 17:42:56 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Mon, 4 Jan 2016 15:42:56 -0700 (MST)
Subject: [OpenSCAD] Happy New Year + OpenSCAD syntax lexer for SynWrite
In-Reply-To: <1451944339013-15486.post@n5.nabble.com>
References: <1451621185549-15402.post@n5.nabble.com>
	<CAEEmnrMs9cb9O7e6R3OKjMG-r7G-0S0gmq9c=QM_nrui_NS8Fg@mail.gmail.com>
	<1451678925087-15408.post@n5.nabble.com>
	<1451688239051-15411.post@n5.nabble.com>
	<1451689750553-15412.post@n5.nabble.com>
	<1451940917873-15483.post@n5.nabble.com>
	<1451944063494-15485.post@n5.nabble.com>
	<1451944339013-15486.post@n5.nabble.com>
Message-ID: <1451947376221-15487.post@n5.nabble.com>

Ok, understood.
However when I mentioned the boolean operations I meant /intersection,
difference / and /union/, that have the same style as non boolean
/translation, rotation/ etc 
My personal modification was to put/ intersection difference and union/ bold
italic,  creating:

       item
        DisplayName = 's_id_openscad_builtin_boolean'
        Font.Charset = DEFAULT_CHARSET
        Font.Color = clTeal
        Font.Height = -13
        Font.Name = 'Courier New'
        Font.Style = [fsBold, fsItalic]
      end


and 

       item
        DisplayName = 'r_id_openscad_builtin_boolean'
        StyleName = 's_id_openscad_builtin_boolean'
        BlockType = btTagDetect
        ConditionList = <
          item
            TagList.Strings = (
              'difference'
              'intersection'
              'union')
            TokenTypes = 4
          end>
        HighlightPos = cpAny
        IgnoreAsParent = False
      end

jpmendes



--
View this message in context: http://forum.openscad.org/Happy-New-Year-OpenSCAD-syntax-lexer-for-SynWrite-tp15402p15487.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Mon Jan  4 18:09:53 2016
From: doug at moens.org (doug moen)
Date: Mon, 4 Jan 2016 18:09:53 -0500
Subject: [OpenSCAD] export() function.
In-Reply-To: <1451943065250-15484.post@n5.nabble.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
Message-ID: <CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>

Hi Mihail. Concerning your pull request for an export() command.

Torsten is a gatekeeper, I'm not. Torsten's response to your proposal was
more relevant and insightful than mine. The security problem is a side
issue, and the real problem is what Torsten said:

   1. OpenSCAD is not a procedural programming language. It is a purely
   declarative language for describing geometry. This is the primary issue.
   2. You can't add a procedural, side effect causing 'export()' command to
   the language because it doesn't make any sense to export a shape to a file
   while the script is being evaluated: this would mess up preview
   performance. Once again, this is a side issue, like security. It's a
   technical issue which underlies the fundamental design decision that
   OpenSCAD is a declarative language (see point 1 above).

Torsten asked a number of questions about "when does this side effect
occur", which are quite relevant, and which you didn't answer.

Then Torsten proposed a design which is consistent with the OpenSCAD
philosophy. Instead of an "export" function which has the semantics of
"write this shape to a file *right now*", there is a syntax for adding
metadata to a node of the CSG tree, which has the semantics: this branch of
the CSG tree should be exported to a separate file, at export time. It
could have the same syntax as your proposal.

This metadata is not interpreted until some GUI command is invoked. No
files are exported during preview, render or animation, which is as it
should be. For example, the GUI "Export" command can notice that there are
multiple exported subtrees tagged in the CSG tree. It could, for example,
ask you to specify a root directory, then write all of the exported files
relative to this directory. It should also be specified how to invoke
multiple export from the CLI.

Notice how the security problem goes away when the feature is properly
designed. We are no longer invisibly exporting files without the user's
knowledge, in the case of a downloaded SCAD file. Export only happens
explicitly.

This design addresses the goal of exporting multiple files from a single
*.scad file, but it doesn't address jpmendes' problem, because his goal is
for OpenSCAD to run faster, and he wants to achieve this by persistent
caching of specified subtrees. So we've proposed an extension to the
render() operator to solve his problem.

On 4 January 2016 at 16:31, Mihail Vasiliev <mickvav at gmail.com> wrote:

> On persistent cache - may be try using mmap-ed files? There is some
> mechanism
> for it in boost
> (
> http://www.boost.org/doc/libs/1_50_0/libs/iostreams/doc/classes/mapped_file.html
> ),
> but I have no experience with it.
>
> On my original issue - what about reconsidering my patches and suggestions
> on security enhancments?
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/export-function-tp15428p15484.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160104/d3774cfb/attachment.html>

From runsun at gmail.com  Mon Jan  4 18:20:56 2016
From: runsun at gmail.com (runsun)
Date: Mon, 4 Jan 2016 16:20:56 -0700 (MST)
Subject: [OpenSCAD] Happy New Year + OpenSCAD syntax lexer for SynWrite
In-Reply-To: <1451947376221-15487.post@n5.nabble.com>
References: <1451621185549-15402.post@n5.nabble.com>
	<CAEEmnrMs9cb9O7e6R3OKjMG-r7G-0S0gmq9c=QM_nrui_NS8Fg@mail.gmail.com>
	<1451678925087-15408.post@n5.nabble.com>
	<1451688239051-15411.post@n5.nabble.com>
	<1451689750553-15412.post@n5.nabble.com>
	<1451940917873-15483.post@n5.nabble.com>
	<1451944063494-15485.post@n5.nabble.com>
	<1451944339013-15486.post@n5.nabble.com>
	<1451947376221-15487.post@n5.nabble.com>
Message-ID: <1451949656929-15489.post@n5.nabble.com>

I c. I misunderstood. 

During the design of the lexer, I kept in mind not to make the colors too
complicated, because the structure is already complicated. For example, all
symbols are of same style. I recalled in other version of lexer for
Notepad++, for example, symbols are separated into different several
subgroups and styled differently. 

I also consider leaving some space for users to work on when they want to
add styles for their own libraries.

So in terms of "operations", I simple put everything that is applied to an
object to same style. 

No matter what, good to see you have it worked.


jpmendes wrote
> Ok, understood.
> However when I mentioned the boolean operations I meant 
/
> intersection, difference 
/
>  and 
/
> union
/
> , that have the same style as non boolean 
/
> translation, rotation
/
>  etc 
> My personal modification was to put
/
>  intersection difference and union
/
>  bold italic,  creating:
> 
>        item
>         DisplayName = 's_id_openscad_builtin_boolean'
>         Font.Charset = DEFAULT_CHARSET
>         Font.Color = clTeal
>         Font.Height = -13
>         Font.Name = 'Courier New'
>         Font.Style = [fsBold, fsItalic]
>       end
> 
> 
> and 
> 
>        item
>         DisplayName = 'r_id_openscad_builtin_boolean'
>         StyleName = 's_id_openscad_builtin_boolean'
>         BlockType = btTagDetect
>         ConditionList = <
>           item
>             TagList.Strings = (
>               'difference'
>               'intersection'
>               'union')
>             TokenTypes = 4
>           end>
>         HighlightPos = cpAny
>         IgnoreAsParent = False
>       end
> 
> jpmendes





-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git ), 


synwrite( 1 , 2 ); 



 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision( 1 , 2 ),

xl-control 








--
View this message in context: http://forum.openscad.org/Happy-New-Year-OpenSCAD-syntax-lexer-for-SynWrite-tp15402p15489.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Mon Jan  4 20:10:49 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Tue, 5 Jan 2016 02:10:49 +0100
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <CAGV6i+M8VVovbA2NWacc63nTb9F-92tRYDH63QK23g8tutrGNA@mail.gmail.com>
References: <CAEEmnrPkhwWK9K5AwOY8JfNkyDr6peGOkw=2Z6iZS07PiyVyVA@mail.gmail.com>
	<CAGV6i+M8VVovbA2NWacc63nTb9F-92tRYDH63QK23g8tutrGNA@mail.gmail.com>
Message-ID: <568B1819.1080300@gmx.de>

On 12/24/2015 03:48 PM, doug moen wrote:
> This proposed extension is also part of the OpenSCAD2 proposal.
> So I agree.
> 
> Generalised list comprehensions:
> https://github.com/doug-moen/openscad2/blob/master/rfc/Generators.md
> 
> On Thursday, 24 December 2015, nop head <nop.head at gmail.com> wrote:
> > Is there a reason why list comprehensions can't have a comma separated
> > list of elements after the for(..) instead of the just a single
> > element? That would eliminate the need for flatten in some cases.
>
Actually it's not the same. I just realized that after discussion with
Marius. The initial question was about having the list comprehension
expression as vector (without the []), like:

echo([ for (a = [2 : 4]) a, a*a ]);

which would result in:

ECHO: [ 2, 4, 3, 9, 4, 16 ]

The generalized solution (as is my understanding now) does not allow that,
it would result in "a*a" producing a warning that "a" is not defined at
this point as this part does not belong to the for() expression.

I think the solution following the suggested feature set would look like:

echo([ for (a = [2 : 4]) each [ a, a*a ] ]);
// ECHO: [2, 4, 3, 9, 4, 16]

which is a bit more verbose for this specific case, but having multiple
generators in one expression also allows for things like:

echo([ -1, for (a = [0:1:3]) a, for (b = [3:-1:0]) b, -1 ]);
// ECHO: [-1, 0, 1, 2, 3, 3, 2, 1, 0, -1]

I don't think we can have both, because the parser would have a hard
time to decide what the "," means.

The if/else is also implemented:

echo([ for (a = [0:2]) if (a == 1) "A" else "B" ]);
// ECHO: ["B", "A", "B"]

// nested list comprehension expressions with if/else
echo([ for (a = [0:3]) if ((a % 2) == 0) for (b = ["a", "b"]) b else each ["x", "y"] ]);
// ECHO: ["a", "b", "x", "y", "a", "b", "x", "y"]

AFAICS this should implement all the features of the "Using Generators in
List Literals" section with the exception of the "*" operator. What's the
rationale to have that shortcut?

ciao,
  Torsten.



From runsun at gmail.com  Mon Jan  4 20:35:09 2016
From: runsun at gmail.com (runsun)
Date: Mon, 4 Jan 2016 18:35:09 -0700 (MST)
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <568B1819.1080300@gmx.de>
References: <CAEEmnrPkhwWK9K5AwOY8JfNkyDr6peGOkw=2Z6iZS07PiyVyVA@mail.gmail.com>
	<CAGV6i+M8VVovbA2NWacc63nTb9F-92tRYDH63QK23g8tutrGNA@mail.gmail.com>
	<568B1819.1080300@gmx.de>
Message-ID: <1451957709765-15491.post@n5.nabble.com>

Any thought of accessing the item(s) generated (still in the buffer), in the
middle of looping, before the loop is completed ? 

Something like:

[ for(i=[1:4]) 
    if(i==1) 1 
    else ((@-1)+i)*i 
]

=> [ 1
     ,  (1+2)*2         // = 6
     ,  (6+3)*3         // = 27
     ,  (27+4)*4       // = 124 
     ]

=> [ 1,6,27,124 ]




-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git ), 


synwrite( 1 , 2 ); 



 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision( 1 , 2 ),

xl-control 








--
View this message in context: http://forum.openscad.org/List-comprehensions-tp15321p15491.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Mon Jan  4 20:42:41 2016
From: doug at moens.org (doug moen)
Date: Mon, 4 Jan 2016 20:42:41 -0500
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <568B1819.1080300@gmx.de>
References: <CAEEmnrPkhwWK9K5AwOY8JfNkyDr6peGOkw=2Z6iZS07PiyVyVA@mail.gmail.com>
	<CAGV6i+M8VVovbA2NWacc63nTb9F-92tRYDH63QK23g8tutrGNA@mail.gmail.com>
	<568B1819.1080300@gmx.de>
Message-ID: <CAGV6i+OTWyVdadQykqyU3Bzn-Qof_Nnqf=+qTgPGAuhOg0Kgvg@mail.gmail.com>

The reason for the * operator in OpenSCAD2 is that I unified the
"statement" and "expression" syntax to the maximum extent possible. The
prefix * operator already exists in OpenSCAD at the statement level, and I
made it available in expression syntax for consistency.

That's not a compelling reason for you to add it right now, it only really
makes sense later, assuming we decide to use the backward compatibility
scheme that I outline in the design doc. If we were to use a less rigid
backward compatibility system, one which allows some of the core syntax to
change, then we might decide to rename the prefix * operator to something
more mnemonic, like 'ignore'.

function f(x) = x;
module g(x) cube(x);

[ f(1), for (a = [2:4]) f(a), for (b = [4:-1:2]) f(b), f(1), ]
{ g(1); for (a = [2:4]) g(a); for (b = [4:-1:2]) g(b); g(1); }

Notice how the 2 lines above are structurally the same, and in OpenSCAD2
the 'for' operator has the same semantics in both cases. The first is a
list expression, the second is a "statement" (in OpenSCAD) or an "object
expression" (in OpenSCAD2). Note that the trailing , in the list expression
is optional in OpenSCAD, and I hope to make the trailing ; optional in the
object expression in OpenSCAD2.

Yes, the 'each' operator is verbose. I tried using an operator character,
&, in a previous draft, but it didn't get a very positive response from
Marius, because it doesn't look like anything familiar.


On 4 January 2016 at 20:10, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 12/24/2015 03:48 PM, doug moen wrote:
> > This proposed extension is also part of the OpenSCAD2 proposal.
> > So I agree.
> >
> > Generalised list comprehensions:
> > https://github.com/doug-moen/openscad2/blob/master/rfc/Generators.md
> >
> > On Thursday, 24 December 2015, nop head <nop.head at gmail.com> wrote:
> > > Is there a reason why list comprehensions can't have a comma separated
> > > list of elements after the for(..) instead of the just a single
> > > element? That would eliminate the need for flatten in some cases.
> >
> Actually it's not the same. I just realized that after discussion with
> Marius. The initial question was about having the list comprehension
> expression as vector (without the []), like:
>
> echo([ for (a = [2 : 4]) a, a*a ]);
>
> which would result in:
>
> ECHO: [ 2, 4, 3, 9, 4, 16 ]
>
> The generalized solution (as is my understanding now) does not allow that,
> it would result in "a*a" producing a warning that "a" is not defined at
> this point as this part does not belong to the for() expression.
>
> I think the solution following the suggested feature set would look like:
>
> echo([ for (a = [2 : 4]) each [ a, a*a ] ]);
> // ECHO: [2, 4, 3, 9, 4, 16]
>
> which is a bit more verbose for this specific case, but having multiple
> generators in one expression also allows for things like:
>
> echo([ -1, for (a = [0:1:3]) a, for (b = [3:-1:0]) b, -1 ]);
> // ECHO: [-1, 0, 1, 2, 3, 3, 2, 1, 0, -1]
>
> I don't think we can have both, because the parser would have a hard
> time to decide what the "," means.
>
> The if/else is also implemented:
>
> echo([ for (a = [0:2]) if (a == 1) "A" else "B" ]);
> // ECHO: ["B", "A", "B"]
>
> // nested list comprehension expressions with if/else
> echo([ for (a = [0:3]) if ((a % 2) == 0) for (b = ["a", "b"]) b else each
> ["x", "y"] ]);
> // ECHO: ["a", "b", "x", "y", "a", "b", "x", "y"]
>
> AFAICS this should implement all the features of the "Using Generators in
> List Literals" section with the exception of the "*" operator. What's the
> rationale to have that shortcut?
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160104/3c16c255/attachment.html>

From Torsten.Paul at gmx.de  Mon Jan  4 20:59:54 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Tue, 5 Jan 2016 02:59:54 +0100
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <1451957709765-15491.post@n5.nabble.com>
References: <CAEEmnrPkhwWK9K5AwOY8JfNkyDr6peGOkw=2Z6iZS07PiyVyVA@mail.gmail.com>
	<CAGV6i+M8VVovbA2NWacc63nTb9F-92tRYDH63QK23g8tutrGNA@mail.gmail.com>
	<568B1819.1080300@gmx.de> <1451957709765-15491.post@n5.nabble.com>
Message-ID: <568B239A.3010409@gmx.de>

On 01/05/2016 02:35 AM, runsun wrote:
> Any thought of accessing the item(s) generated (still in the buffer), in the
> middle of looping, before the loop is completed ?
> 
Hmm, the first two thoughts were
- Isn't that what recursive functions can do much easier
- I have no idea how to implement that with the current expression logic

Still, it might be possible. Do you have a specific use-case where that
would help. It's more compact than the matching recursive function,
but also looks a bit scary :).

> Something like:
> 
> [ for(i=[1:4]) 
>     if(i==1) 1 
>     else ((@-1)+i)*i 
> ]
> 
> => [ 1
>      ,  (1+2)*2         // = 6
>      ,  (6+3)*3         // = 27
>      ,  (27+4)*4       // = 124 
>      ]
> 
> => [ 1,6,27,124 ]
> 

// the tail-recursive version is a bit more verbose
function f(i, x, r = []) = i <= x ? f(i + 1, x, concat(r, i == 1 ? 1 : (r[len(r)-1] + i) * i)) : r;

// could be written using "each" too :)
function f(i, x, r = []) = i <= x ? f(i + 1, x, [ each r, i == 1 ? 1 : (r[len(r)-1] + i) * i ]) : r;

echo(f(1, 4));
// ECHO: [1, 6, 27, 124]

ciao,
  Torsten.



From marius at kintel.net  Mon Jan  4 21:14:39 2016
From: marius at kintel.net (Marius Kintel)
Date: Mon, 4 Jan 2016 21:14:39 -0500
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <CAEEmnrMRhnLR_j=nm-LtU4sfWm3tHeAX_za4vXo61Qqg-u19Gg@mail.gmail.com>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
	<568986A1.5060301@arnholm.org>
	<CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>
	<CAEEmnrMdN1EPm_XeDCRnp6syRHyUhGxggDrBN4A5rOBPWLpw7Q@mail.gmail.com>
	<234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>
	<CAEEmnrMRhnLR_j=nm-LtU4sfWm3tHeAX_za4vXo61Qqg-u19Gg@mail.gmail.com>
Message-ID: <07180D96-9CBD-4012-9661-EF1982851DD3@kintel.net>

> On Jan 3, 2016, at 18:17 PM, nop head <nop.head at gmail.com> wrote:
> 
> $fn=32;
> translate([10.1,0,0]) {
>     cylinder(r = 4, h= 20);
>     translate([0, 0, 100]) cube(); //dummy
> }
> translate([10.1,0,0]) cylinder(r = 4, h = 10);
> 
In this case, what happens is this:

* The first translate() first performs a CGAL union on the children, then transforms that while in CGAL
* The second translate() performs the transform on double precision floating point mesh, then converts to CGAL
* The final implicit union now has slightly different vertex positions for the same translation.

One workaround for such issues could be to force _all_ calculations to be kept in CGAL as long as we have a parent node for which we?re going to need CGAL. Another workaround (as mentioned) could be to accumulate transformations and applying them only when concrete vertices are needed.
Note that using 2D objects probably also causes similar issues, which are a lot harder to avoid since all 2D operations are done in fixed point.

While chasing this, I?d strongly suggest that we try to refactor this to allow for using other CSG libraries in the future.

Cheers,

 -Marius



From Torsten.Paul at gmx.de  Mon Jan  4 21:20:50 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Tue, 5 Jan 2016 03:20:50 +0100
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <CAGV6i+OTWyVdadQykqyU3Bzn-Qof_Nnqf=+qTgPGAuhOg0Kgvg@mail.gmail.com>
References: <CAEEmnrPkhwWK9K5AwOY8JfNkyDr6peGOkw=2Z6iZS07PiyVyVA@mail.gmail.com>
	<CAGV6i+M8VVovbA2NWacc63nTb9F-92tRYDH63QK23g8tutrGNA@mail.gmail.com>
	<568B1819.1080300@gmx.de>
	<CAGV6i+OTWyVdadQykqyU3Bzn-Qof_Nnqf=+qTgPGAuhOg0Kgvg@mail.gmail.com>
Message-ID: <568B2882.4040600@gmx.de>

On 01/05/2016 02:42 AM, doug moen wrote:
> The reason for the * operator in OpenSCAD2 is that I unified the "statement"
> and "expression" syntax to the maximum extent possible. The prefix * operator
> already exists in OpenSCAD at the statement level, and I made it available
> in expression syntax for consistency.
> 
Right, that makes sense. If it does not help regarding an easier move to
OpenSCAD2, I guess we can skip this for now. Otherwise it should be easy
to add (I hope bison agrees here ;-).

> [ f(1), for (a = [2:4]) f(a), for (b = [4:-1:2]) f(b), f(1), ]
> { g(1); for (a = [2:4]) g(a); for (b = [4:-1:2]) g(b); g(1); }
> 
> Notice how the 2 lines above are structurally the same, and in OpenSCAD2
> the 'for' operator has the same semantics in both cases. The first is a
> list expression, the second is a "statement" (in OpenSCAD) or an "object
> expression" (in OpenSCAD2). Note that the trailing , in the list expression
> is optional in OpenSCAD, and I hope to make the trailing ; optional in the
> object expression in OpenSCAD2.
>
Yep, and the first expression now works with the patch I'm working on:

function f(x) = x * x;
echo([ f(1), for (a = [2:4]) f(a), for (b = [4:-1:2]) f(b), f(1), ]);
// ECHO: [1, 4, 9, 16, 16, 9, 4, 1]

> Yes, the 'each' operator is verbose. I tried using an operator character, &,
> in a previous draft, but it didn't get a very positive response from Marius,
> because it doesn't look like anything familiar.
> 
I just stated that in comparison to the syntax nophead asked about and for
that specific case.
In general, I think using "each" looks much better, especially when using
with functions. First I did not see what it's supposed to do, but after
implementing it, it became clear it's basically the unwrap operator :-).

echo([ each f(x) ]);

ciao,
  Torsten.



From runsun at gmail.com  Mon Jan  4 22:35:36 2016
From: runsun at gmail.com (runsun)
Date: Mon, 4 Jan 2016 20:35:36 -0700 (MST)
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <568B239A.3010409@gmx.de>
References: <CAEEmnrPkhwWK9K5AwOY8JfNkyDr6peGOkw=2Z6iZS07PiyVyVA@mail.gmail.com>
	<CAGV6i+M8VVovbA2NWacc63nTb9F-92tRYDH63QK23g8tutrGNA@mail.gmail.com>
	<568B1819.1080300@gmx.de> <1451957709765-15491.post@n5.nabble.com>
	<568B239A.3010409@gmx.de>
Message-ID: <1451964936093-15496.post@n5.nabble.com>

tp3 wrote
> Still, it might be possible. Do you have a specific use-case where that
> would help. It's more compact than the matching recursive function,
> but also looks a bit scary :).

Not on top of my head now. But I recall that in early python, some guy found
a secret 
internal buffer, allowing python to do that :

 [ i==1 and 1 or _1[i]   // this line is the same as i==1?1:_1[i] in
openscad's code
   for i in range(1,5) 
]

The secret internal buffer is _1, which won't work in later python versions.
I made use of that _1 quite a lot and enjoying it very much. 

In deed it can be achieved using recursion. But recursion in general is much
harder to read, as can be seen from this example. 




-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git ), 


synwrite( 1 , 2 ); 



 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision( 1 , 2 ),

xl-control 








--
View this message in context: http://forum.openscad.org/List-comprehensions-tp15321p15496.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Mon Jan  4 23:20:43 2016
From: doug at moens.org (doug moen)
Date: Mon, 4 Jan 2016 23:20:43 -0500
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <1451957709765-15491.post@n5.nabble.com>
References: <CAEEmnrPkhwWK9K5AwOY8JfNkyDr6peGOkw=2Z6iZS07PiyVyVA@mail.gmail.com>
	<CAGV6i+M8VVovbA2NWacc63nTb9F-92tRYDH63QK23g8tutrGNA@mail.gmail.com>
	<568B1819.1080300@gmx.de> <1451957709765-15491.post@n5.nabble.com>
Message-ID: <CAGV6i+N4ozE80dxJzSqSqSqkRAh_wweXu+8FZdGghQMiH8qw_g@mail.gmail.com>

I think that this "secret internal buffer" syntax is obscure and hard to
figure out. It's not obvious it has a lot of use cases.

But I agree, recursive functions are a pain to write, and there is high
level syntax that is easier to write and which can replace the use of
recursive functions in some common cases. The list comprehension syntax is
a popular example of this.

I'm going to introduce another 'generator' operator for use in list
comprehensions. This operator is easy to understand, very powerful, and can
be used in place of recursive functions in many cases.

It is basically a direct rip-off of the C 'for' statement. If you know C,
the meaning should be obvious. I'll give examples.

[for (i=1; i <= 4; i=i+1) i]
=> [1,2,3,4]

[for (i=2; i <= 10; i=i+2) i]
=> [2,4,6,8,10]

[for (i=1,n=1; i <= 4; i=i+1, n=(n+i)*i) n]
=> [1, 6, 27, 124]
// Look, it's Runsun's magic sequence!

sort(x) = [for (L=x; L!=[]; m=min(L), L=[for (i=L) if (i > m) i]) m];
// non-recursive sort algorithm

If anybody reading this is a Haskell/functional programmer, then you might
recognize that this 'for' operator is actually a generalized anamorphism,
like 'unfold' but with more convenient syntax.

On 4 January 2016 at 20:35, runsun <runsun at gmail.com> wrote:

> Any thought of accessing the item(s) generated (still in the buffer), in
> the
> middle of looping, before the loop is completed ?
>
> Something like:
>
> [ for(i=[1:4])
>     if(i==1) 1
>     else ((@-1)+i)*i
> ]
>
> => [ 1
>      ,  (1+2)*2         // = 6
>      ,  (6+3)*3         // = 27
>      ,  (27+4)*4       // = 124
>      ]
>
> => [ 1,6,27,124 ]
>
>
>
>
> -----
>
> $  Runsun Pan, PhD
>
> $ libs:
>
> doctest ,
>
> faces ( git ),
>
> offline doc ( git ),
>
> runscad.py( 1 , 2 , git ),
>
>
> synwrite( 1 , 2 );
>
>
>
>  $ tips:
>
> hash( 1 , 2 ),
>
> sweep ,
>
> var( 1 , 2 ),
>
> lerp ,
>
> animGif ,
>
> precision( 1 , 2 ),
>
> xl-control
>
>
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/List-comprehensions-tp15321p15491.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160104/a6fed960/attachment.html>

From nop.head at gmail.com  Tue Jan  5 04:27:17 2016
From: nop.head at gmail.com (nop head)
Date: Tue, 5 Jan 2016 09:27:17 +0000
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <07180D96-9CBD-4012-9661-EF1982851DD3@kintel.net>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
	<568986A1.5060301@arnholm.org>
	<CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>
	<CAEEmnrMdN1EPm_XeDCRnp6syRHyUhGxggDrBN4A5rOBPWLpw7Q@mail.gmail.com>
	<234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>
	<CAEEmnrMRhnLR_j=nm-LtU4sfWm3tHeAX_za4vXo61Qqg-u19Gg@mail.gmail.com>
	<07180D96-9CBD-4012-9661-EF1982851DD3@kintel.net>
Message-ID: <CAEEmnrO-KnjowaHCmO_GBWbXRVf4QSuRSJKh_00g9TnW+BK00g@mail.gmail.com>

Hmm, seems to be a complete mess numerically: mixing fixed point, doubles
and presumably rationals in CGAL. Then the result gets converted to float
in the STL. Note that the STL vertices are all the same value in the
triangle prism example, so the difference is less than the resolution of a
float, not surprising.

This also explains my original observation that linear extruding a circle
matches a hull of circles better than cylinder. It isn't the triangulation
that is the issue, it is the vertex representation changing number format.
A workaround is to just make the cylinder a bit bigger as pointed out
before.

I think a program like this should have a solid number and consistent
number representation that doesn't change from version to version. When I
updated all my objects changed numerically. A few got degenerate triangles
and at least one became non manifold. When I review them with show edges I
found a lot look like patchwork quilts now. On the plus side replacing
minkowski with offset gets the render time down to 4 minutes from 20.

It is avoiding coincident surfaces that confuses newcomers the most and
gives CSG a bad name. In actual fact CGAL seems to handle coincident
surfaces fine it is the number conversions outside of it that screw up.

Once thing that surprises me is how does this work?:

big = 20;
small = 10.1;

cube([big, big, 10]);
translate([big - small / 2, big - small / 2, 10])
    cube([small, small, 20], center = true);

10.1 can't be represented exactly in float, so I would expect the
translated cube not to line up exactly with the big one, but in fact it
does.


?
It has now become more of a puzzle to create clean objects. For example
building one object back to front and then rotating it got a better result
because the faces that needed to line up where then on zero before the
rotation. I expected this example to replicate the issue but it doesn't.


On 5 January 2016 at 02:14, Marius Kintel <marius at kintel.net> wrote:

> > On Jan 3, 2016, at 18:17 PM, nop head <nop.head at gmail.com> wrote:
> >
> > $fn=32;
> > translate([10.1,0,0]) {
> >     cylinder(r = 4, h= 20);
> >     translate([0, 0, 100]) cube(); //dummy
> > }
> > translate([10.1,0,0]) cylinder(r = 4, h = 10);
> >
> In this case, what happens is this:
>
> * The first translate() first performs a CGAL union on the children, then
> transforms that while in CGAL
> * The second translate() performs the transform on double precision
> floating point mesh, then converts to CGAL
> * The final implicit union now has slightly different vertex positions for
> the same translation.
>
> One workaround for such issues could be to force _all_ calculations to be
> kept in CGAL as long as we have a parent node for which we?re going to need
> CGAL. Another workaround (as mentioned) could be to accumulate
> transformations and applying them only when concrete vertices are needed.
> Note that using 2D objects probably also causes similar issues, which are
> a lot harder to avoid since all 2D operations are done in fixed point.
>
> While chasing this, I?d strongly suggest that we try to refactor this to
> allow for using other CSG libraries in the future.
>
> Cheers,
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160105/0dcd17de/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cubes.png
Type: image/png
Size: 12968 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160105/0dcd17de/attachment.png>

From doug at moens.org  Tue Jan  5 08:19:17 2016
From: doug at moens.org (doug moen)
Date: Tue, 5 Jan 2016 08:19:17 -0500
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <CAEEmnrO-KnjowaHCmO_GBWbXRVf4QSuRSJKh_00g9TnW+BK00g@mail.gmail.com>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
	<568986A1.5060301@arnholm.org>
	<CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>
	<CAEEmnrMdN1EPm_XeDCRnp6syRHyUhGxggDrBN4A5rOBPWLpw7Q@mail.gmail.com>
	<234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>
	<CAEEmnrMRhnLR_j=nm-LtU4sfWm3tHeAX_za4vXo61Qqg-u19Gg@mail.gmail.com>
	<07180D96-9CBD-4012-9661-EF1982851DD3@kintel.net>
	<CAEEmnrO-KnjowaHCmO_GBWbXRVf4QSuRSJKh_00g9TnW+BK00g@mail.gmail.com>
Message-ID: <CAGV6i+OUztssHViDj1zNOGYmMBPWqRdPoA8HP6S18AYj8_K1aA@mail.gmail.com>

Regarding your big/small program: it makes sense that the cubes line up.
The specific value of 'small' doesn't matter, because you don't try to
compute that value in two different ways. What matters, for this program,
is that floats have a binary representation, so division by two always
returns an exact result, never an inexact approximation. You compute
small/2 in two ways, via centre=true, and via small/2, and those values
exactly match.

On Tuesday, 5 January 2016, nop head <nop.head at gmail.com> wrote:

> Hmm, seems to be a complete mess numerically: mixing fixed point, doubles
> and presumably rationals in CGAL. Then the result gets converted to float
> in the STL. Note that the STL vertices are all the same value in the
> triangle prism example, so the difference is less than the resolution of a
> float, not surprising.
>
> This also explains my original observation that linear extruding a circle
> matches a hull of circles better than cylinder. It isn't the triangulation
> that is the issue, it is the vertex representation changing number format.
> A workaround is to just make the cylinder a bit bigger as pointed out
> before.
>
> I think a program like this should have a solid number and consistent
> number representation that doesn't change from version to version. When I
> updated all my objects changed numerically. A few got degenerate triangles
> and at least one became non manifold. When I review them with show edges I
> found a lot look like patchwork quilts now. On the plus side replacing
> minkowski with offset gets the render time down to 4 minutes from 20.
>
> It is avoiding coincident surfaces that confuses newcomers the most and
> gives CSG a bad name. In actual fact CGAL seems to handle coincident
> surfaces fine it is the number conversions outside of it that screw up.
>
> Once thing that surprises me is how does this work?:
>
> big = 20;
> small = 10.1;
>
> cube([big, big, 10]);
> translate([big - small / 2, big - small / 2, 10])
>     cube([small, small, 20], center = true);
>
> 10.1 can't be represented exactly in float, so I would expect the
> translated cube not to line up exactly with the big one, but in fact it
> does.
>
>
> ?
> It has now become more of a puzzle to create clean objects. For example
> building one object back to front and then rotating it got a better result
> because the faces that needed to line up where then on zero before the
> rotation. I expected this example to replicate the issue but it doesn't.
>
>
> On 5 January 2016 at 02:14, Marius Kintel <marius at kintel.net
> <javascript:_e(%7B%7D,'cvml','marius at kintel.net');>> wrote:
>
>> > On Jan 3, 2016, at 18:17 PM, nop head <nop.head at gmail.com
>> <javascript:_e(%7B%7D,'cvml','nop.head at gmail.com');>> wrote:
>> >
>> > $fn=32;
>> > translate([10.1,0,0]) {
>> >     cylinder(r = 4, h= 20);
>> >     translate([0, 0, 100]) cube(); //dummy
>> > }
>> > translate([10.1,0,0]) cylinder(r = 4, h = 10);
>> >
>> In this case, what happens is this:
>>
>> * The first translate() first performs a CGAL union on the children, then
>> transforms that while in CGAL
>> * The second translate() performs the transform on double precision
>> floating point mesh, then converts to CGAL
>> * The final implicit union now has slightly different vertex positions
>> for the same translation.
>>
>> One workaround for such issues could be to force _all_ calculations to be
>> kept in CGAL as long as we have a parent node for which we?re going to need
>> CGAL. Another workaround (as mentioned) could be to accumulate
>> transformations and applying them only when concrete vertices are needed.
>> Note that using 2D objects probably also causes similar issues, which are
>> a lot harder to avoid since all 2D operations are done in fixed point.
>>
>> While chasing this, I?d strongly suggest that we try to refactor this to
>> allow for using other CSG libraries in the future.
>>
>> Cheers,
>>
>>  -Marius
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> <javascript:_e(%7B%7D,'cvml','Discuss at lists.openscad.org');>
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160105/221d14b2/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cubes.png
Type: image/png
Size: 12968 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160105/221d14b2/attachment.png>

From nop.head at gmail.com  Tue Jan  5 10:05:22 2016
From: nop.head at gmail.com (nop head)
Date: Tue, 5 Jan 2016 15:05:22 +0000
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <CAGV6i+OUztssHViDj1zNOGYmMBPWqRdPoA8HP6S18AYj8_K1aA@mail.gmail.com>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
	<568986A1.5060301@arnholm.org>
	<CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>
	<CAEEmnrMdN1EPm_XeDCRnp6syRHyUhGxggDrBN4A5rOBPWLpw7Q@mail.gmail.com>
	<234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>
	<CAEEmnrMRhnLR_j=nm-LtU4sfWm3tHeAX_za4vXo61Qqg-u19Gg@mail.gmail.com>
	<07180D96-9CBD-4012-9661-EF1982851DD3@kintel.net>
	<CAEEmnrO-KnjowaHCmO_GBWbXRVf4QSuRSJKh_00g9TnW+BK00g@mail.gmail.com>
	<CAGV6i+OUztssHViDj1zNOGYmMBPWqRdPoA8HP6S18AYj8_K1aA@mail.gmail.com>
Message-ID: <CAEEmnrOnR3__MnbHnhHDC7aGd4BG4-ZE5-w8K2mfzCBBJF6RZA@mail.gmail.com>

Yes thinking about it, it was probably another case of translates being
done in different number representations.

On 5 January 2016 at 13:19, doug moen <doug at moens.org> wrote:

> Regarding your big/small program: it makes sense that the cubes line up.
> The specific value of 'small' doesn't matter, because you don't try to
> compute that value in two different ways. What matters, for this program,
> is that floats have a binary representation, so division by two always
> returns an exact result, never an inexact approximation. You compute
> small/2 in two ways, via centre=true, and via small/2, and those values
> exactly match.
>
>
> On Tuesday, 5 January 2016, nop head <nop.head at gmail.com> wrote:
>
>> Hmm, seems to be a complete mess numerically: mixing fixed point, doubles
>> and presumably rationals in CGAL. Then the result gets converted to float
>> in the STL. Note that the STL vertices are all the same value in the
>> triangle prism example, so the difference is less than the resolution of a
>> float, not surprising.
>>
>> This also explains my original observation that linear extruding a circle
>> matches a hull of circles better than cylinder. It isn't the triangulation
>> that is the issue, it is the vertex representation changing number format.
>> A workaround is to just make the cylinder a bit bigger as pointed out
>> before.
>>
>> I think a program like this should have a solid number and consistent
>> number representation that doesn't change from version to version. When I
>> updated all my objects changed numerically. A few got degenerate triangles
>> and at least one became non manifold. When I review them with show edges I
>> found a lot look like patchwork quilts now. On the plus side replacing
>> minkowski with offset gets the render time down to 4 minutes from 20.
>>
>> It is avoiding coincident surfaces that confuses newcomers the most and
>> gives CSG a bad name. In actual fact CGAL seems to handle coincident
>> surfaces fine it is the number conversions outside of it that screw up.
>>
>> Once thing that surprises me is how does this work?:
>>
>> big = 20;
>> small = 10.1;
>>
>> cube([big, big, 10]);
>> translate([big - small / 2, big - small / 2, 10])
>>     cube([small, small, 20], center = true);
>>
>> 10.1 can't be represented exactly in float, so I would expect the
>> translated cube not to line up exactly with the big one, but in fact it
>> does.
>>
>>
>> ?
>> It has now become more of a puzzle to create clean objects. For example
>> building one object back to front and then rotating it got a better result
>> because the faces that needed to line up where then on zero before the
>> rotation. I expected this example to replicate the issue but it doesn't.
>>
>>
>> On 5 January 2016 at 02:14, Marius Kintel <marius at kintel.net> wrote:
>>
>>> > On Jan 3, 2016, at 18:17 PM, nop head <nop.head at gmail.com> wrote:
>>> >
>>> > $fn=32;
>>> > translate([10.1,0,0]) {
>>> >     cylinder(r = 4, h= 20);
>>> >     translate([0, 0, 100]) cube(); //dummy
>>> > }
>>> > translate([10.1,0,0]) cylinder(r = 4, h = 10);
>>> >
>>> In this case, what happens is this:
>>>
>>> * The first translate() first performs a CGAL union on the children,
>>> then transforms that while in CGAL
>>> * The second translate() performs the transform on double precision
>>> floating point mesh, then converts to CGAL
>>> * The final implicit union now has slightly different vertex positions
>>> for the same translation.
>>>
>>> One workaround for such issues could be to force _all_ calculations to
>>> be kept in CGAL as long as we have a parent node for which we?re going to
>>> need CGAL. Another workaround (as mentioned) could be to accumulate
>>> transformations and applying them only when concrete vertices are needed.
>>> Note that using 2D objects probably also causes similar issues, which
>>> are a lot harder to avoid since all 2D operations are done in fixed point.
>>>
>>> While chasing this, I?d strongly suggest that we try to refactor this to
>>> allow for using other CSG libraries in the future.
>>>
>>> Cheers,
>>>
>>>  -Marius
>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>
>>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160105/d725cd34/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cubes.png
Type: image/png
Size: 12968 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160105/d725cd34/attachment.png>

From marius at kintel.net  Tue Jan  5 11:31:18 2016
From: marius at kintel.net (Marius Kintel)
Date: Tue, 5 Jan 2016 11:31:18 -0500
Subject: [OpenSCAD] Unnecessary triangulation in linear_extrude
In-Reply-To: <CAEEmnrO-KnjowaHCmO_GBWbXRVf4QSuRSJKh_00g9TnW+BK00g@mail.gmail.com>
References: <CAEEmnrNUZKwvhLT5kj0cgWQBHvFTyGwmsgq50d1HMwZVo+FwNQ@mail.gmail.com>
	<37E6D0DB-82C7-4236-BF16-84ACF4C0F443@kintel.net>
	<CAEEmnrOf48pgrogWKJ9+bs2aSOA90_m6-Sh_xhppCRhaxpsS3g@mail.gmail.com>
	<AF6D6D59-C4E9-41FB-8870-88382D0768CB@kintel.net>
	<56897841.2080907@arnholm.org>
	<CAEEmnrP=BuLoihfaP6UPQEU+sga3KBMfmvS3P9YYx4ywE3F0-A@mail.gmail.com>
	<568986A1.5060301@arnholm.org>
	<CAEEmnrMYE7MBzaP_Eva8rsC-3pv3WeGTZ9Ogt=CTyKykfXLNpw@mail.gmail.com>
	<CAEEmnrMdN1EPm_XeDCRnp6syRHyUhGxggDrBN4A5rOBPWLpw7Q@mail.gmail.com>
	<234E68BA-E94A-422F-BDF9-9126EDB69C80@kintel.net>
	<CAEEmnrMRhnLR_j=nm-LtU4sfWm3tHeAX_za4vXo61Qqg-u19Gg@mail.gmail.com>
	<07180D96-9CBD-4012-9661-EF1982851DD3@kintel.net>
	<CAEEmnrO-KnjowaHCmO_GBWbXRVf4QSuRSJKh_00g9TnW+BK00g@mail.gmail.com>
Message-ID: <D28028CA-CBC7-4E69-B06D-21A5907C1891@kintel.net>

> On Jan 5, 2016, at 04:27 AM, nop head <nop.head at gmail.com> wrote:
> I think a program like this should have a solid number and consistent number representation that doesn't change from version to version.

I agree in principle - it?s just a bit utopic in reality : /
Our goal thus far has been to gradually move away from the slow CGAL operations whenever we find a good alternative. We also work around bugs in CGAL by using other libraries to perform certain operations (e.g. triangulations). This leaves us with a mashup of underlying libraries.

Anyway, as a quick test I tried to defer applying transformations until after the conversion to CGAL. That improved some of your cases.
We also perform some vertex quantizing, which I think is responsible for the remaining issues. I?ll try to temporarily remove that and see if I can construct a clean mesh using your examples.

Another idea would be to force vertex quantizing into a fixed point representation every time we convert between mesh representations. There are some challenges related to that; first that vertex quantizing is not topology preserving, secondly that it may come at a performance penalty as we?d need to quantize intermediate results from CGAL (which probably means reconstructing said CGAL objects).

If you have other variants of similar behavior, please post as they could serve as good candidates for test cases.

 -Marius



From Torsten.Paul at gmx.de  Tue Jan  5 14:33:14 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Tue, 5 Jan 2016 20:33:14 +0100
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <CAGV6i+N4ozE80dxJzSqSqSqkRAh_wweXu+8FZdGghQMiH8qw_g@mail.gmail.com>
References: <CAEEmnrPkhwWK9K5AwOY8JfNkyDr6peGOkw=2Z6iZS07PiyVyVA@mail.gmail.com>
	<CAGV6i+M8VVovbA2NWacc63nTb9F-92tRYDH63QK23g8tutrGNA@mail.gmail.com>
	<568B1819.1080300@gmx.de> <1451957709765-15491.post@n5.nabble.com>
	<CAGV6i+N4ozE80dxJzSqSqSqkRAh_wweXu+8FZdGghQMiH8qw_g@mail.gmail.com>
Message-ID: <568C1A7A.1030001@gmx.de>

On 01/05/2016 05:20 AM, doug moen wrote:
> I'm going to introduce another 'generator' operator for use in list
> comprehensions. This operator is easy to understand, very powerful,
> and can be used in place of recursive functions in many cases.
> 
> It is basically a direct rip-off of the C 'for' statement. If you
> know C, the meaning should be obvious. I'll give examples.
>
> [for (i=1; i <= 4; i=i+1) i]
> => [1,2,3,4]
> 
Ah, nice, that's much more obvious than a magic variable. So
this would introduce a special case where variable reassignment
is possible.

Some observations for discussions after implementing this :-)...

> [for (i=1,n=1; i <= 4; i=i+1, n=(n+i)*i) n]
> => [1, 6, 27, 124]
> // Look, it's Runsun's magic sequence!
> 
To make this work, we need to handle at least the 3rd part as
sequential assignment as let() does. Probably we also want this
for the 1st part, so it's both consistent and allows an initializer
list like "i = 1, n = i + 1".
The 2nd expression would be simply a boolean, so nothing special
there.

> sort(x) = [for (L=x; L!=[]; m=min(L), L=[for (i=L) if (i > m) i]) m];
> // non-recursive sort algorithm
> 
This gives "undefined variable m" with my implementation as the
first iteration does not have m set yet. I think that's correct
as the generator expression is evaluated before the iterator
expression.

ciao,
  Torsten.



From nop.head at gmail.com  Tue Jan  5 14:41:28 2016
From: nop.head at gmail.com (nop head)
Date: Tue, 5 Jan 2016 19:41:28 +0000
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <568C1A7A.1030001@gmx.de>
References: <CAEEmnrPkhwWK9K5AwOY8JfNkyDr6peGOkw=2Z6iZS07PiyVyVA@mail.gmail.com>
	<CAGV6i+M8VVovbA2NWacc63nTb9F-92tRYDH63QK23g8tutrGNA@mail.gmail.com>
	<568B1819.1080300@gmx.de> <1451957709765-15491.post@n5.nabble.com>
	<CAGV6i+N4ozE80dxJzSqSqSqkRAh_wweXu+8FZdGghQMiH8qw_g@mail.gmail.com>
	<568C1A7A.1030001@gmx.de>
Message-ID: <CAEEmnrPK1Mmr_6w=tm6Xu6N4ps1PVwKNKu6TEkabqOO1Noat0g@mail.gmail.com>

Looks like a step too far (backwards) towards C++ to me.

On 5 January 2016 at 19:33, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 01/05/2016 05:20 AM, doug moen wrote:
> > I'm going to introduce another 'generator' operator for use in list
> > comprehensions. This operator is easy to understand, very powerful,
> > and can be used in place of recursive functions in many cases.
> >
> > It is basically a direct rip-off of the C 'for' statement. If you
> > know C, the meaning should be obvious. I'll give examples.
> >
> > [for (i=1; i <= 4; i=i+1) i]
> > => [1,2,3,4]
> >
> Ah, nice, that's much more obvious than a magic variable. So
> this would introduce a special case where variable reassignment
> is possible.
>
> Some observations for discussions after implementing this :-)...
>
> > [for (i=1,n=1; i <= 4; i=i+1, n=(n+i)*i) n]
> > => [1, 6, 27, 124]
> > // Look, it's Runsun's magic sequence!
> >
> To make this work, we need to handle at least the 3rd part as
> sequential assignment as let() does. Probably we also want this
> for the 1st part, so it's both consistent and allows an initializer
> list like "i = 1, n = i + 1".
> The 2nd expression would be simply a boolean, so nothing special
> there.
>
> > sort(x) = [for (L=x; L!=[]; m=min(L), L=[for (i=L) if (i > m) i]) m];
> > // non-recursive sort algorithm
> >
> This gives "undefined variable m" with my implementation as the
> first iteration does not have m set yet. I think that's correct
> as the generator expression is evaluated before the iterator
> expression.
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160105/1433c093/attachment.html>

From arnholm at arnholm.org  Tue Jan  5 14:56:57 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Tue, 5 Jan 2016 20:56:57 +0100
Subject: [OpenSCAD] Generate OpenSCAD models from AngelScript
In-Reply-To: <56871413.9020506@arnholm.org>
References: <568445B4.8050506@arnholm.org>
	<1451515118720-15380.post@n5.nabble.com> <56845EAA.8060203@arnholm.org>
	<5684709B.9030907@pobox.com> <568473CC.7000304@arnholm.org>
	<1451523289358-15386.post@n5.nabble.com> <5684807C.4030304@arnholm.org>
	<56871413.9020506@arnholm.org>
Message-ID: <568C2009.8030802@arnholm.org>

I have regained access to my blog, and have today added a new post on 
generating OpenSCAD models using AngelScript CSG:

http://arnholm.org/angelscript-csg-part-2/

The post explains the updated features as of today. An updated Windows 
version can now be downloaded from there. Any feedback welcome.

Have fun.

Carsten Arnholm







From Torsten.Paul at gmx.de  Tue Jan  5 19:03:36 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Wed, 6 Jan 2016 01:03:36 +0100
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <CAEEmnrPK1Mmr_6w=tm6Xu6N4ps1PVwKNKu6TEkabqOO1Noat0g@mail.gmail.com>
References: <CAEEmnrPkhwWK9K5AwOY8JfNkyDr6peGOkw=2Z6iZS07PiyVyVA@mail.gmail.com>
	<CAGV6i+M8VVovbA2NWacc63nTb9F-92tRYDH63QK23g8tutrGNA@mail.gmail.com>
	<568B1819.1080300@gmx.de> <1451957709765-15491.post@n5.nabble.com>
	<CAGV6i+N4ozE80dxJzSqSqSqkRAh_wweXu+8FZdGghQMiH8qw_g@mail.gmail.com>
	<568C1A7A.1030001@gmx.de>
	<CAEEmnrPK1Mmr_6w=tm6Xu6N4ps1PVwKNKu6TEkabqOO1Noat0g@mail.gmail.com>
Message-ID: <568C59D8.7020100@gmx.de>

On 01/05/2016 08:41 PM, nop head wrote:
> Looks like a step too far (backwards) towards C++ to me.
> 
There are certainly some concerns about this. Introducing reassignment
in that special case is probably something that can cause some
confusion. Also with the future plan of unification of modules and
functions, this could lead to problems (need for serialized evaluation?).

So I pushed the other extensions separately, so we could have those
soon and still decide what to do with that c-style for expression...

ciao,
  Torsten.



From runsun at gmail.com  Tue Jan  5 19:37:35 2016
From: runsun at gmail.com (runsun)
Date: Tue, 5 Jan 2016 17:37:35 -0700 (MST)
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <CAGV6i+N4ozE80dxJzSqSqSqkRAh_wweXu+8FZdGghQMiH8qw_g@mail.gmail.com>
References: <CAEEmnrPkhwWK9K5AwOY8JfNkyDr6peGOkw=2Z6iZS07PiyVyVA@mail.gmail.com>
	<CAGV6i+M8VVovbA2NWacc63nTb9F-92tRYDH63QK23g8tutrGNA@mail.gmail.com>
	<568B1819.1080300@gmx.de> <1451957709765-15491.post@n5.nabble.com>
	<CAGV6i+N4ozE80dxJzSqSqSqkRAh_wweXu+8FZdGghQMiH8qw_g@mail.gmail.com>
Message-ID: <1452040655762-15506.post@n5.nabble.com>

doug.moen wrote
> [for (i=1,n=1; i <= 4; 
*
> i=i+1, n=(n+i)*i
*
> ) n]
> => [1, 6, 27, 124]
> // Look, it's Runsun's magic sequence!

If i=i+1 and n=(n+i)*i are to be in the same scope, I would say this should
have given:

[ i=1,n=1   => next i = 2, next n= (n+2)*2= 4
, i=2,n=4   => next i = 3, next n= (4+3)*3= 21
, i=3,n=21 => next i = 4, next n= (21+4)*4= 100
, i=4,n=100 => next i=5, next n = (100+5)*5= 525
]
=> [4,21,100,525]

At least that's the way I think it is, following my coding instinct. 

I think it's much harder to use and read than my version :)

Besides, my version allows users to grab any items that's already generated,
not just the last one. For example, this one adds the last two items of the
internal buffer (I introduce a @ as the buffer):

[ for(i=[1:4])
    if (i==1) i
    else if ( i==2) @[-1]
    else (@[-1] + @[-2] )*i
]

=> [ 1
     ,  1*2 = 2 
     ,  (1+2)*3 = 9
     ,  (2+9)*4 = 44
     ]

=> [ 1, 2, 9, 44 ]

This version adds all items previously generated, then * i :

[ for(i=[1:4])  sum(@) * i ]
    
=> [ 1, 2, 9, 48 ]

>From my limited understanding, in terms of development, the only thing need
to work out is to define a special variable @. 




-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git ), 


synwrite( 1 , 2 ); 



 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision( 1 , 2 ),

xl-control 








--
View this message in context: http://forum.openscad.org/List-comprehensions-tp15321p15506.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Tue Jan  5 19:44:14 2016
From: runsun at gmail.com (runsun)
Date: Tue, 5 Jan 2016 17:44:14 -0700 (MST)
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <1452040655762-15506.post@n5.nabble.com>
References: <CAEEmnrPkhwWK9K5AwOY8JfNkyDr6peGOkw=2Z6iZS07PiyVyVA@mail.gmail.com>
	<CAGV6i+M8VVovbA2NWacc63nTb9F-92tRYDH63QK23g8tutrGNA@mail.gmail.com>
	<568B1819.1080300@gmx.de> <1451957709765-15491.post@n5.nabble.com>
	<CAGV6i+N4ozE80dxJzSqSqSqkRAh_wweXu+8FZdGghQMiH8qw_g@mail.gmail.com>
	<1452040655762-15506.post@n5.nabble.com>
Message-ID: <1452041054511-15507.post@n5.nabble.com>

@doug, I see your logic now:

[ i=1,n=1  => i=1, n= 1
, i=2,n=1  => next i= 2, next n = (1+2)*2 = 6
, i=3,n=6  => next i= 3, next n= (6+3)*3= 27
, i=4,n=27=> next i= 4, next n= (27+4)*4= 124
]
=> [1, 6, 27, 124]

Pls scratch that part of my comment. 





-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git ), 


synwrite( 1 , 2 ); 



 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision( 1 , 2 ),

xl-control 








--
View this message in context: http://forum.openscad.org/List-comprehensions-tp15321p15507.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Tue Jan  5 20:21:28 2016
From: mschafer at wireframe.biz (Neon22)
Date: Tue, 5 Jan 2016 18:21:28 -0700 (MST)
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <568C59D8.7020100@gmx.de>
References: <CAEEmnrPkhwWK9K5AwOY8JfNkyDr6peGOkw=2Z6iZS07PiyVyVA@mail.gmail.com>
	<CAGV6i+M8VVovbA2NWacc63nTb9F-92tRYDH63QK23g8tutrGNA@mail.gmail.com>
	<568B1819.1080300@gmx.de> <1451957709765-15491.post@n5.nabble.com>
	<CAGV6i+N4ozE80dxJzSqSqSqkRAh_wweXu+8FZdGghQMiH8qw_g@mail.gmail.com>
	<568C1A7A.1030001@gmx.de>
	<CAEEmnrPK1Mmr_6w=tm6Xu6N4ps1PVwKNKu6TEkabqOO1Noat0g@mail.gmail.com>
	<568C59D8.7020100@gmx.de>
Message-ID: <1452043288084-15508.post@n5.nabble.com>

I wonder if you all are familiar with the Lisp loop macro.
IMHO its the best loop control system I have every used.
Rather than go for a C style of loop I'd rather see a more lisp and python
kind of control.
I refer you to these three short pages for examples and explanation.
 - http://cl-cookbook.sourceforge.net/loop.html
 - http://www.ai.sri.com/pkarp/loop.html
 - http://www.gigamonkeys.com/book/loop-for-black-belts.html
Here is the BNF form with all possible keywords (too many ):
   - http://www.lispworks.com/documentation/lw51/CLHS/Body/m_loop.htm

E.g. (in LISP)
list_of_random_values = [...]
a = (loop for i in list_of_random_values
         counting (evenp i) into evens
         counting (oddp i) into odds
         summing i into total
         maximizing i into max
         minimizing i into min
         finally (return (list min max total evens odds)))
This would be modified a little for use in list comprehensions to imply the
return of a list and to eliminate the loop keyword. So it must start with a
for.
Likewise the do argument indicates the following will be the return values
(in LISP this would actually use "collect" instead of "do" as the keyword).
Actually "collect" might be clearer as that is what the list comprehension
does. I have used "do" below
To deal with initial values and internal variables there are such things as
with, initially, and finally.


In LISP the loop macro expands to the core lisp code which is actually
executed. This expansion is documented so you can see how to do it in
another language - but OpenSCAD's existing let statement (from lisp
initially) pretty much handles all cases we might need below.

Currently in openSCAD (as a list comprehension) a syntax example is:
 - [ for (i=[0:10], j=[0:1])  let (a= [i, i*i]) a[j] ]

In openSCAD the syntax might look like : (I haven't worked out the ;
placement. using newlines)
- Return same as input
   [for [a b] in [[1 2] [3 4] [5 6]]
       do [a b] ]

- Return just first part
   [for [a b] in [[1 2] [3 4] [5 6]]
       do a ]
You can see why "collect" might be clearer replacement for "do" but longer.

- Create pairs
[for x = [1:5]
   for y = ["A","B","C","D","E"]
   do [x y]  ]
giving   [[1 A]  [2 B]  [3 C]  [4 D]  [5 E]]

- Increment a second variable by using from. The end of the loop will be
defined by prior for definitions
[for x = [1:5]
   for y from 10
   do [x y]  ]
giving   [[1 10]  [2 11]  [3 12]  [4 13]  [5 14]]

- Early termination using while or until
[for x in [1,2,3,4,5,6]
   while prime(x)
   do [ x, x*x] ]
until can be used instead of while for a negative test

- Nested loops - here using extended from syntax but could just use existing
range like x=[1:4]
[for x from 1 to 4
      [for y from 1 to x 
          collect y]  ]
gives: [[1] [1 2] [1 2 3]  [1 2 3 4]]

- using with statement (just add to implicit let() ) it leaves the variable
alone during the loop
[for x =[1,2,3,4,5,6]
    with start = 12
    while prime(x)
    do [ x, x*start] ]

- "initially" is evaluated after the for and with statements define
variables but before the loop begins.
[for x =[3,4,5,6,7,8]
    with start = 12
    initially factor = start*x
    while prime(x)
    do [ x, x*start+factor] ]

- using finally to return a single value after iterating over a large amount
of data
[for x=[1:100]
    for y = (* x x)
    until (y >= 729)
    finally [x, (y == 729)] ]
returns a single pair with second value true if x*x == 729 else false
I.e. the internal list is created and just before returning the finally
clause is evaluated and returned instead.

- using conditionals within the loop (as an operator, not a regular if
statement)
[for x below 10
    if odd(x)
    collect x into odds
    else
    collect x into evens
    finally [odds, evens] ]
gives [[1 3 5 7 9]  [0 2 4 6 8]]

Thoughts ?



--
View this message in context: http://forum.openscad.org/List-comprehensions-tp15321p15508.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Tue Jan  5 21:26:37 2016
From: doug at moens.org (doug moen)
Date: Tue, 5 Jan 2016 21:26:37 -0500
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <CAEEmnrPK1Mmr_6w=tm6Xu6N4ps1PVwKNKu6TEkabqOO1Noat0g@mail.gmail.com>
References: <CAEEmnrPkhwWK9K5AwOY8JfNkyDr6peGOkw=2Z6iZS07PiyVyVA@mail.gmail.com>
	<CAGV6i+M8VVovbA2NWacc63nTb9F-92tRYDH63QK23g8tutrGNA@mail.gmail.com>
	<568B1819.1080300@gmx.de> <1451957709765-15491.post@n5.nabble.com>
	<CAGV6i+N4ozE80dxJzSqSqSqkRAh_wweXu+8FZdGghQMiH8qw_g@mail.gmail.com>
	<568C1A7A.1030001@gmx.de>
	<CAEEmnrPK1Mmr_6w=tm6Xu6N4ps1PVwKNKu6TEkabqOO1Noat0g@mail.gmail.com>
Message-ID: <CAGV6i+NEvqtDBSCXRTWeg4TWt2ziYH6to5uek2T1FfL8Sj7m3g@mail.gmail.com>

Torsten wrote: "There are certainly some concerns about this. Introducing
reassignment in that special case is probably something that can cause some
confusion."

It's not reassignment. There's a full explanation below.

nophead wrote: "Looks like a step too far (backwards) towards C++ to me."

Since Javascript also contains the for (..;..;..) operator, you could also
say it's a step too far towards Javascript.

Anyway, that's deliberate, and I will explain. OpenSCAD is a pure
functional language that has the syntax of C (and Javascript), which are
procedural languages. It's a weird design decision which threw me for a
loop when I first encountered it. But I see the logic. Javascript is the
world's most popular language, so giving OpenSCAD C-like syntax is maybe a
way of lowering the barrier to learning and using it.

In the functional programming community, there's this idea that explicit
recursion is the "goto" of functional programming, and that we should be
providing higher level "structured" programming constructs that make it
easier to write code without resorting to recursive functions. Back in the
1970's, there was a successful campaign to banish the "goto" in favour of
high level control structures like if..then..else.., for.., while.. and
switch.. What are the equivalent high level control structures that replace
the use of recursion?

Part of the answer is list comprehension syntax, and that has been a very
successful addition to OpenSCAD.

Beyond this, functional programming theorists have identified a number of
commonly occurring patterns of recursion, and designed high level control
structures that encapsulate these recursive patterns.

One of these patterns is called "anamorphism", and the corresponding
functional control structure is called "unfold". The functions that Torsten
wrote to generate Runsun's sequence are anamorphisms. They could be
rewritten using "unfold", but the problem is that "unfold" in Haskell has a
complex and hard to use interface. So I don't want that interface in
OpenSCAD.

When I tried to design a better interface, I discovered that the new
interface was structurally the same as a C for loop. Since OpenSCAD is
designed to be a pure functional language with C syntax, it was obvious we
should just use C for loop syntax, rather than invent something new.

Here's how it works:

  [ for ( a=inita,b=initb,... ; condition ; a=nexta,b=nextb,... ) expr ]

is equivalent to:

  function f(a,b,...) =
    condition
      ? concat([expr], f(nexta,nextb,...))
      : [ ];
  f(inita,initb,...)

(Or you could convert this to tail recursion, like in Torsten's code.)

In other words, this really is functional programming. The
a=nexta,b=nextb,... section specifies the arguments that are passed to the
recursive call to f. It is not reassignment.

For example,
  [for (i=1; i <= 4; i=i+1) i]
is equivalent to:
  function f(i) =
    i <= 4
    ? concat([i], f(i=i+1))
    : [];
  echo(f(i=1));

Note that i=i+1 occurs in the expansion. It isn't reassignment!

And I think the design must have achieved it's goal: Torsten liked it
enough to do a trial implementation.

On 5 January 2016 at 14:41, nop head <nop.head at gmail.com> wrote:

> Looks like a step too far (backwards) towards C++ to me.
>
> On 5 January 2016 at 19:33, Torsten Paul <Torsten.Paul at gmx.de> wrote:
>
>> On 01/05/2016 05:20 AM, doug moen wrote:
>> > I'm going to introduce another 'generator' operator for use in list
>> > comprehensions. This operator is easy to understand, very powerful,
>> > and can be used in place of recursive functions in many cases.
>> >
>> > It is basically a direct rip-off of the C 'for' statement. If you
>> > know C, the meaning should be obvious. I'll give examples.
>> >
>> > [for (i=1; i <= 4; i=i+1) i]
>> > => [1,2,3,4]
>> >
>> Ah, nice, that's much more obvious than a magic variable. So
>> this would introduce a special case where variable reassignment
>> is possible.
>>
>> Some observations for discussions after implementing this :-)...
>>
>> > [for (i=1,n=1; i <= 4; i=i+1, n=(n+i)*i) n]
>> > => [1, 6, 27, 124]
>> > // Look, it's Runsun's magic sequence!
>> >
>> To make this work, we need to handle at least the 3rd part as
>> sequential assignment as let() does. Probably we also want this
>> for the 1st part, so it's both consistent and allows an initializer
>> list like "i = 1, n = i + 1".
>> The 2nd expression would be simply a boolean, so nothing special
>> there.
>>
>> > sort(x) = [for (L=x; L!=[]; m=min(L), L=[for (i=L) if (i > m) i]) m];
>> > // non-recursive sort algorithm
>> >
>> This gives "undefined variable m" with my implementation as the
>> first iteration does not have m set yet. I think that's correct
>> as the generator expression is evaluated before the iterator
>> expression.
>>
>> ciao,
>>   Torsten.
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160105/96d5fdf9/attachment.html>

From Torsten.Paul at gmx.de  Tue Jan  5 22:03:07 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Wed, 6 Jan 2016 04:03:07 +0100
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <1452043288084-15508.post@n5.nabble.com>
References: <CAEEmnrPkhwWK9K5AwOY8JfNkyDr6peGOkw=2Z6iZS07PiyVyVA@mail.gmail.com>
	<CAGV6i+M8VVovbA2NWacc63nTb9F-92tRYDH63QK23g8tutrGNA@mail.gmail.com>
	<568B1819.1080300@gmx.de> <1451957709765-15491.post@n5.nabble.com>
	<CAGV6i+N4ozE80dxJzSqSqSqkRAh_wweXu+8FZdGghQMiH8qw_g@mail.gmail.com>
	<568C1A7A.1030001@gmx.de>
	<CAEEmnrPK1Mmr_6w=tm6Xu6N4ps1PVwKNKu6TEkabqOO1Noat0g@mail.gmail.com>
	<568C59D8.7020100@gmx.de> <1452043288084-15508.post@n5.nabble.com>
Message-ID: <568C83EB.8080003@gmx.de>

On 01/06/2016 02:21 AM, Neon22 wrote:
> Rather than go for a C style of loop I'd rather see a more lisp
> and python kind of control.
>
For marketing purposes, we really have to call it python style,
sorry ;-) ...just joking... I think.

So, I guess we can't just change the whole list comprehension
syntax and break all the recently made scripts using it.
But there's a number of features that we could adopt by adding
new actions to the list comprehensions. One problem is that it
currently uses keywords for the list comprehension names, but
hopefully that can be changed in the parser (e.g. "each = 3;"
is now invalid with the latest changes due to that).

I'll have a look at the loop macro in lisp. At first glance
it seems most of the simple list generation features could be
somehow mapped to the OpenSCAD list comprehensions already.
The list and numeric accumulation might be a nice extension,
but I'm not sure how good those fit into the existing expression
code. But then the code is there to be changed, right :-).

ciao,
  Torsten.




From mschafer at wireframe.biz  Wed Jan  6 01:33:44 2016
From: mschafer at wireframe.biz (Neon22)
Date: Tue, 5 Jan 2016 23:33:44 -0700 (MST)
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <568C83EB.8080003@gmx.de>
References: <CAEEmnrPkhwWK9K5AwOY8JfNkyDr6peGOkw=2Z6iZS07PiyVyVA@mail.gmail.com>
	<CAGV6i+M8VVovbA2NWacc63nTb9F-92tRYDH63QK23g8tutrGNA@mail.gmail.com>
	<568B1819.1080300@gmx.de> <1451957709765-15491.post@n5.nabble.com>
	<CAGV6i+N4ozE80dxJzSqSqSqkRAh_wweXu+8FZdGghQMiH8qw_g@mail.gmail.com>
	<568C1A7A.1030001@gmx.de>
	<CAEEmnrPK1Mmr_6w=tm6Xu6N4ps1PVwKNKu6TEkabqOO1Noat0g@mail.gmail.com>
	<568C59D8.7020100@gmx.de> <1452043288084-15508.post@n5.nabble.com>
	<568C83EB.8080003@gmx.de>
Message-ID: <1452062024878-15511.post@n5.nabble.com>

Thanks Torsten,
Note there is also a specific iterator called "across" which deals with
vectors.
Having a purpose helper iterator for triplets or doublets in OpenSCAD could
be useful.

Also I forgot about "return" to send back a single value instead of a list.

s = "alpha45";
[ for i=[0:len(s)]
  for ch =  chr(s[i])
  when (ch==51)
    return ch ]

we might not need all of them
Cheers...



--
View this message in context: http://forum.openscad.org/List-comprehensions-tp15321p15511.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Wed Jan  6 03:31:07 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 6 Jan 2016 08:31:07 +0000
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <1452062024878-15511.post@n5.nabble.com>
References: <CAEEmnrPkhwWK9K5AwOY8JfNkyDr6peGOkw=2Z6iZS07PiyVyVA@mail.gmail.com>
	<CAGV6i+M8VVovbA2NWacc63nTb9F-92tRYDH63QK23g8tutrGNA@mail.gmail.com>
	<568B1819.1080300@gmx.de> <1451957709765-15491.post@n5.nabble.com>
	<CAGV6i+N4ozE80dxJzSqSqSqkRAh_wweXu+8FZdGghQMiH8qw_g@mail.gmail.com>
	<568C1A7A.1030001@gmx.de>
	<CAEEmnrPK1Mmr_6w=tm6Xu6N4ps1PVwKNKu6TEkabqOO1Noat0g@mail.gmail.com>
	<568C59D8.7020100@gmx.de> <1452043288084-15508.post@n5.nabble.com>
	<568C83EB.8080003@gmx.de> <1452062024878-15511.post@n5.nabble.com>
Message-ID: <CAEEmnrPxo1aMm=8tARk3h6PVD3edrNtgJB9bQvS_FfMELij5RA@mail.gmail.com>

>In the functional programming community, there's this idea that explicit
recursion is the "goto" of functional programming

I don't buy that as goto can make unstructured spaghetti which is hard to
read and analyze. Recursion is a succinct description of the result in
mathematical terms. Here is runsun's sequence:

function f(i) = i == 1 ? 1 : (f(i-1) + i) * i;

echo([for(i = [1 : 4]) f(i)]);

ECHO: [1, 6, 27, 124]

For me that is the most readable version so far and doesn't require any new
complication of the language. Having mutable variables in loops and not
outside is going to be very difficult to explain. You could argue for
instance that any variable that only has the scope of the loop could be
mutable in the loop body as each iteration is actually a new scope.
OpenScad is very simple language that can be learnt in hours. Please leave
all the complicated stuff for OpenScad2. Try not to end up with C++ that
actually nobody understands all of completely.


On 6 January 2016 at 06:33, Neon22 <mschafer at wireframe.biz> wrote:

> Thanks Torsten,
> Note there is also a specific iterator called "across" which deals with
> vectors.
> Having a purpose helper iterator for triplets or doublets in OpenSCAD could
> be useful.
>
> Also I forgot about "return" to send back a single value instead of a list.
>
> s = "alpha45";
> [ for i=[0:len(s)]
>   for ch =  chr(s[i])
>   when (ch==51)
>     return ch ]
>
> we might not need all of them
> Cheers...
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/List-comprehensions-tp15321p15511.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160106/c6aa29de/attachment.html>

From nop.head at gmail.com  Wed Jan  6 05:28:00 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 6 Jan 2016 10:28:00 +0000
Subject: [OpenSCAD] Non-deterministic STLs
Message-ID: <CAEEmnrNQfOaN067f7uA25HtUspp9J2qgtasL5LDk70cRUHKu0w@mail.gmail.com>

When you have a large fully parametric design and you change something it
isn't always obvious what the knock on effects will be. But you need to
know exactly which STL files have changed so you can re-slice and reprint
them. Also when you make a change to accommodate a new variant you might
want to verify that it doesn't affect other variants.

In both of the above use cases you need to be able to compare the STL files
and know if they have changed. As discussed before OpenScad uses machine
addresses to order the vertices, so the order changes when you change
unrelated code. I got around this by writing a Python script to order the
vertices numerically. That works most of the time but I still get the odd
file changing unexpectedly.

I changed a module today that generates rounded cylinders. The change
shouldn't have actually affected anything at all because mathematically it
was the same shape. However it did make small changes to STL files that
used it. Fair enough, probably due to the numerical conversion issues
discussed yesterday. However, it also changed an STL file that does not use
it. It includes the module but does not invoke it.

The change is numerically insignificant but it makes very difficult and
time consuming to work out what has really changed. Only two vertices
changed out of a file nearly 1MB long.

[image: Inline images 1]

Is it possible that having the vertices ordered by address (which can
change from machine to machine and when anything is added to or removed
from the source code) can lead to different numerical results due them
being processed in a different order somewhere?

Oddly although GitHub's STL difference views shows the correct number of
lines changed, it highlights a lot more triangles, so I think it has non
deterministic issues as well.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160106/d24854bf/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image.png
Type: image/png
Size: 53919 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160106/d24854bf/attachment.png>

From unkerjay at centurylink.net  Wed Jan  6 09:11:05 2016
From: unkerjay at centurylink.net (unkerjay)
Date: Wed, 6 Jan 2016 07:11:05 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1451802739662-15426.post@n5.nabble.com>
References: <1451684467862-15409.post@n5.nabble.com>
	<1451692243533-15414.post@n5.nabble.com>
	<1451700767298-15417.post@n5.nabble.com>
	<1451795809088-15423.post@n5.nabble.com>
	<1451802739662-15426.post@n5.nabble.com>
Message-ID: <1452089465310-15514.post@n5.nabble.com>

Just curious.

Reading up, a little, and wondering.

Would it be possible to embed cr/lf (carriage return / line feed)
or "Enter" in the text (would Unicodes work for this)?

Something like:

"A-U000D-Partridge-U000D-in a-U000D-Pear Tree"

Probably got the syntax off.

Would something like that work?



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15514.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Wed Jan  6 09:34:44 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Wed, 6 Jan 2016 15:34:44 +0100
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452089465310-15514.post@n5.nabble.com>
References: <1451684467862-15409.post@n5.nabble.com>
	<1451692243533-15414.post@n5.nabble.com>
	<1451700767298-15417.post@n5.nabble.com>
	<1451795809088-15423.post@n5.nabble.com>
	<1451802739662-15426.post@n5.nabble.com>
	<1452089465310-15514.post@n5.nabble.com>
Message-ID: <568D2604.1070708@gmx.de>

On 01/06/2016 03:11 PM, unkerjay wrote:
> Would it be possible to embed cr/lf (carriage return / line feed)
> or "Enter" in the text (would Unicodes work for this)?
> 
No, right now only the text shaping level is supported (using
the harfbuzz library). This means support for ligatures, script
languages and combining characters but no layouting.

Adding a newline to the text is no problem (e.g. using chr(13))
but it will just render the glyph that's defined in the selected
font, not produce an actual line break. In most cases that will
just be a dummy rectangle, some fonts may have a special glyph.

ciao,
  Torsten.



From unkerjay at centurylink.net  Wed Jan  6 10:19:49 2016
From: unkerjay at centurylink.net (unkerjay)
Date: Wed, 6 Jan 2016 08:19:49 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1451803285564-15427.post@n5.nabble.com>
References: <1451684467862-15409.post@n5.nabble.com>
	<1451692243533-15414.post@n5.nabble.com>
	<1451700767298-15417.post@n5.nabble.com>
	<1451795809088-15423.post@n5.nabble.com>
	<1451802739662-15426.post@n5.nabble.com>
	<1451803285564-15427.post@n5.nabble.com>
Message-ID: <1452093589497-15516.post@n5.nabble.com>

In for a penny, in for a pound.

Here's what I'm shooting for.

It sort of works.  Sort of.

Not getting the third line.

---


strings = [["A Partridge","in a","Pear Tree"], ["2"," Turtle Doves"],
["3","French Hens"], ["4","Calling Birds"], 
                   ["5","Golden", "Rings"], ["6","Geese", "a-laying"],
["12","Drummers", "drumming"],["7","Swans", "a-swimming"], 
                   ["8","Maids", "a-milking"], ["9","Ladies",
"Dancing"],["10","Lords", "a-leaping"],["11","Pipers Piping"] ]; 

t_height = 7; 

dodekaeder(40); 

module dodekaeder(r = 40) 
{ 
  w = acos(1/sqrt(5)); 
  rotate([0, 0, 180]) 
  twosides(r, 0); 
  for(i=[0:4]) 
    rotate([0, -w, i*72])  // tricky! 
    twosides(r, i+1); 
} 

module twosides(r=1, i=1) 
{ 
  h = r*2.618; 
  linear_extrude(height = h, twist = 36, center = true) // tricky twist 
  circle(r, $fn=5); 
  
  // text for upper and lower surface 
  translate([0, t_height, h/2]) 
  linear_extrude(height = 1) 
        text(strings[i][0],halign = "center", valign = "center",
size=t_height); 
  translate([0, -t_height, h/2]) 
  linear_extrude(height = 1) 
        text(strings[i][1],halign = "center", valign = "center",
size=t_height); 
  translate([1, -t_height, h/2]) 
  linear_extrude(height = 1) 
        text(strings[i][2],halign = "center", valign = "center",
size=t_height);     
  // 
  rotate([0, 180, 0]) { 
          translate([0, t_height, h/2]) 
          linear_extrude(height = 1) 
                text(strings[i+6][0],halign = "center", valign = "center",
size=t_height); 
          translate([0, -t_height, h/2]) 
          linear_extrude(height = 1) 
                text(strings[i+6][1],halign = "center", valign = "center",
size=t_height); 
          translate([0, -t_height, h/2]) 
          linear_extrude(height = 1) 
                text(strings[i+6][2],halign = "center", valign = "center",
size=t_height);      
        } 
}



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15516.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From david.boyd at usstem.org  Wed Jan  6 10:41:19 2016
From: david.boyd at usstem.org (David Boyd)
Date: Wed, 6 Jan 2016 10:41:19 -0500
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452093589497-15516.post@n5.nabble.com>
References: <1451684467862-15409.post@n5.nabble.com>
	<1451692243533-15414.post@n5.nabble.com>
	<1451700767298-15417.post@n5.nabble.com>
	<1451795809088-15423.post@n5.nabble.com>
	<1451802739662-15426.post@n5.nabble.com>
	<1451803285564-15427.post@n5.nabble.com>
	<1452093589497-15516.post@n5.nabble.com>
Message-ID: <568D359F.5080005@usstem.org>

Lines 37 and 51 should be -t_height*2.   The 2nd and 3rd lines are 
overwriting each other.

On 1/6/16 10:19 AM, unkerjay wrote:
> strings = [["A Partridge","in a","Pear Tree"], ["2"," Turtle Doves"],
> ["3","French Hens"], ["4","Calling Birds"],
>                     ["5","Golden", "Rings"], ["6","Geese", "a-laying"],
> ["12","Drummers", "drumming"],["7","Swans", "a-swimming"],
>                     ["8","Maids", "a-milking"], ["9","Ladies",
> "Dancing"],["10","Lords", "a-leaping"],["11","Pipers Piping"] ];
>
> t_height = 7;
>
> dodekaeder(40);
>
> module dodekaeder(r = 40)
> {
>    w = acos(1/sqrt(5));
>    rotate([0, 0, 180])
>    twosides(r, 0);
>    for(i=[0:4])
>      rotate([0, -w, i*72])  // tricky!
>      twosides(r, i+1);
> }
>
> module twosides(r=1, i=1)
> {
>    h = r*2.618;
>    linear_extrude(height = h, twist = 36, center = true) // tricky twist
>    circle(r, $fn=5);
>    
>    // text for upper and lower surface
>    translate([0, t_height, h/2])
>    linear_extrude(height = 1)
>          text(strings[i][0],halign = "center", valign = "center",
> size=t_height);
>    translate([0, -t_height, h/2])
>    linear_extrude(height = 1)
>          text(strings[i][1],halign = "center", valign = "center",
> size=t_height);
>    translate([1, -t_height, h/2])
>    linear_extrude(height = 1)
>          text(strings[i][2],halign = "center", valign = "center",
> size=t_height);
>    //
>    rotate([0, 180, 0]) {
>            translate([0, t_height, h/2])
>            linear_extrude(height = 1)
>                  text(strings[i+6][0],halign = "center", valign = "center",
> size=t_height);
>            translate([0, -t_height, h/2])
>            linear_extrude(height = 1)
>                  text(strings[i+6][1],halign = "center", valign = "center",
> size=t_height);
>            translate([0, -t_height, h/2])
>            linear_extrude(height = 1)
>                  text(strings[i+6][2],halign = "center", valign = "center",
> size=t_height);
>          }
> }
>


-- 
========= mailto:david.boyd at usstem.org ============
David W. Boyd
7371 Atlas Walk Way, #242
Gainesville, Va 20155
fax:     +1-703-656-4829
cell:     +1-703-402-7908
============== http://usstem.org/ ============
First Robotic Mentor - FRC, FTC - www.iliterobotics.org
Board Member- USSTEM Foundation - www.usstem.org
Program Assistant - USFIRST - www.usfirst.org

The information contained in this message may be privileged
and/or confidential and protected from disclosure.
If the reader of this message is not the intended recipient
or an employee or agent responsible for delivering this message
to the intended recipient, you are hereby notified that any
dissemination, distribution or copying of this communication
is strictly prohibited.  If you have received this communication
in error, please notify the sender immediately by replying to
this message and deleting the material from any computer.

  



From rudolf at parkinbot.com  Wed Jan  6 11:04:47 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Wed, 6 Jan 2016 09:04:47 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452093589497-15516.post@n5.nabble.com>
References: <1451684467862-15409.post@n5.nabble.com>
	<1451692243533-15414.post@n5.nabble.com>
	<1451700767298-15417.post@n5.nabble.com>
	<1451795809088-15423.post@n5.nabble.com>
	<1451802739662-15426.post@n5.nabble.com>
	<1451803285564-15427.post@n5.nabble.com>
	<1452093589497-15516.post@n5.nabble.com>
Message-ID: <1452096287017-15518.post@n5.nabble.com>

It is always better to do a bit more structured programming to get more of
it. This code allowes for any number of centered lines ... 


> strings = [["A Partridge","in a","Pear Tree", "and a", "Unicorn"], ["2","
> Turtle Doves"],
> ["3","French Hens"], ["4","Calling Birds"], 
>                    ["5","Golden", "Rings"], ["6","Geese", "a-laying"],
> ["12","Drummers", "drumming"],["7","Swans", "a-swimming"], 
>                    ["8","Maids", "a-milking"], ["9","Ladies",
> "Dancing"],["10","Lords", "a-leaping"],["11","Pipers Piping"] ]; 
> 
> t_height = 7; 
> 
> dodekaeder(40); 
> 
> module dodekaeder(r = 40) 
> { 
>   w = acos(1/sqrt(5)); 
>   rotate([0, 0, 180]) 
>   twosides(r, 0); 
>   for(i=[0:4]) 
>     rotate([0, -w, i*72])  // tricky! 
>     twosides(r, i+1); 
> } 
> 
> module twosides(r=1, i=1) 
> { 
>   h = r*2.618; 
>   linear_extrude(height = h, twist = 36, center = true) // tricky twist 
>   circle(r, $fn=5); 
>   
>   // text for upper and lower surface 
>   translate([0, 0, h/2+1])
>   multilinetext(strings[i]); 
>   rotate([0, 180, 0])
>   translate([0, 0, h/2])
>   multilinetext(strings[i+6]); 
> }
> 
> module multilinetext(t)
>   for(i=[0:len(t)-1])
>     translate([0, (len(t)/2-i)*t_height, 0])
>     linear_extrude(height = 1) 
>       text(t[i],halign = "center", valign = "center", size=t_height); 





--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15518.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From unkerjay at centurylink.net  Wed Jan  6 11:39:09 2016
From: unkerjay at centurylink.net (unkerjay)
Date: Wed, 6 Jan 2016 09:39:09 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <568D359F.5080005@usstem.org>
References: <1451684467862-15409.post@n5.nabble.com>
	<1451692243533-15414.post@n5.nabble.com>
	<1451700767298-15417.post@n5.nabble.com>
	<1451795809088-15423.post@n5.nabble.com>
	<1451802739662-15426.post@n5.nabble.com>
	<1451803285564-15427.post@n5.nabble.com>
	<1452093589497-15516.post@n5.nabble.com>
	<568D359F.5080005@usstem.org>
Message-ID: <1452098349825-15519.post@n5.nabble.com>

When I look at the code in my console, it ends at line 47.

So, not sure which lines you're referring to.



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15519.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From unkerjay at centurylink.net  Wed Jan  6 11:40:02 2016
From: unkerjay at centurylink.net (unkerjay)
Date: Wed, 6 Jan 2016 09:40:02 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452096287017-15518.post@n5.nabble.com>
References: <1451684467862-15409.post@n5.nabble.com>
	<1451692243533-15414.post@n5.nabble.com>
	<1451700767298-15417.post@n5.nabble.com>
	<1451795809088-15423.post@n5.nabble.com>
	<1451802739662-15426.post@n5.nabble.com>
	<1451803285564-15427.post@n5.nabble.com>
	<1452093589497-15516.post@n5.nabble.com>
	<1452096287017-15518.post@n5.nabble.com>
Message-ID: <1452098402709-15520.post@n5.nabble.com>

Code works.

How to adjust the line spacing?



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15520.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From unkerjay at centurylink.net  Wed Jan  6 11:46:24 2016
From: unkerjay at centurylink.net (unkerjay)
Date: Wed, 6 Jan 2016 09:46:24 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452098349825-15519.post@n5.nabble.com>
References: <1451684467862-15409.post@n5.nabble.com>
	<1451692243533-15414.post@n5.nabble.com>
	<1451700767298-15417.post@n5.nabble.com>
	<1451795809088-15423.post@n5.nabble.com>
	<1451802739662-15426.post@n5.nabble.com>
	<1451803285564-15427.post@n5.nabble.com>
	<1452093589497-15516.post@n5.nabble.com>
	<568D359F.5080005@usstem.org>
	<1452098349825-15519.post@n5.nabble.com>
Message-ID: <1452098784947-15521.post@n5.nabble.com>

If THIS:

          translate([0, -t_height, h/2]) 

is the line you're referring to,

I changed that.

Lines 2 and 3 aren't overwriting each other anymore.

But, I now get no line 3.

So, one problem solved, I think.



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15521.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From unkerjay at centurylink.net  Wed Jan  6 12:02:37 2016
From: unkerjay at centurylink.net (unkerjay)
Date: Wed, 6 Jan 2016 10:02:37 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452098402709-15520.post@n5.nabble.com>
References: <1451684467862-15409.post@n5.nabble.com>
	<1451692243533-15414.post@n5.nabble.com>
	<1451700767298-15417.post@n5.nabble.com>
	<1451795809088-15423.post@n5.nabble.com>
	<1451802739662-15426.post@n5.nabble.com>
	<1451803285564-15427.post@n5.nabble.com>
	<1452093589497-15516.post@n5.nabble.com>
	<1452096287017-15518.post@n5.nabble.com>
	<1452098402709-15520.post@n5.nabble.com>
Message-ID: <1452099757847-15522.post@n5.nabble.com>

Figured it out.

      translate([0, (len(t)/2-i)*t_height*1.5, 0]) 

Thanks.



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15522.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From unkerjay at centurylink.net  Wed Jan  6 12:03:59 2016
From: unkerjay at centurylink.net (unkerjay)
Date: Wed, 6 Jan 2016 10:03:59 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452096287017-15518.post@n5.nabble.com>
References: <1451684467862-15409.post@n5.nabble.com>
	<1451692243533-15414.post@n5.nabble.com>
	<1451700767298-15417.post@n5.nabble.com>
	<1451795809088-15423.post@n5.nabble.com>
	<1451802739662-15426.post@n5.nabble.com>
	<1451803285564-15427.post@n5.nabble.com>
	<1452093589497-15516.post@n5.nabble.com>
	<1452096287017-15518.post@n5.nabble.com>
Message-ID: <1452099839557-15523.post@n5.nabble.com>

P.S.

Nice touch "Unicorn"

:)



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15523.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From unkerjay at centurylink.net  Wed Jan  6 12:07:50 2016
From: unkerjay at centurylink.net (unkerjay)
Date: Wed, 6 Jan 2016 10:07:50 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452099839557-15523.post@n5.nabble.com>
References: <1451684467862-15409.post@n5.nabble.com>
	<1451692243533-15414.post@n5.nabble.com>
	<1451700767298-15417.post@n5.nabble.com>
	<1451795809088-15423.post@n5.nabble.com>
	<1451802739662-15426.post@n5.nabble.com>
	<1451803285564-15427.post@n5.nabble.com>
	<1452093589497-15516.post@n5.nabble.com>
	<1452096287017-15518.post@n5.nabble.com>
	<1452099839557-15523.post@n5.nabble.com>
Message-ID: <1452100070416-15524.post@n5.nabble.com>

Working code - so far:

strings = [["A Partridge","in a","Pear Tree"], ["2"," Turtle Doves"], 
["3","French Hens"], ["4","Calling Birds"], 
                   ["5","Golden", "Rings"], ["6","Geese", "a-laying"], 
["12","Drummers", "Drumming"],["7","Swans", "a-swimming"], 
                   ["8","Maids", "a-milking"], ["9","Ladies", 
"Dancing"],["10","Lords", "a-leaping"],["11","Pipers","Piping"] ]; 

t_height = 7; 

dodekaeder(40); 

module dodekaeder(r = 40) 
{ 
  w = acos(1/sqrt(5)); 
  rotate([0, 0, 180]) 
  twosides(r, 0); 
  for(i=[0:4]) 
    rotate([0, -w, i*72])  // tricky! 
    twosides(r, i+1); 
} 

module twosides(r=1, i=1) 
{ 
  h = r*2.618; 
  linear_extrude(height = h, twist = 36, center = true) // tricky twist 
  circle(r, $fn=5); 
  
  // text for upper and lower surface 
  translate([0, 0, h/2+1]) 
  multilinetext(strings[i]); 
  rotate([0, 180, 0]) 
  translate([0, 0, h/2]) 
  multilinetext(strings[i+6]); 
} 

module multilinetext(t) 
  for(i=[0:len(t)-1])   
    translate([0, (len(t)/2-i)*t_height*1.5, 0])  //Note the "1.5" = Line
Spacing
    linear_extrude(height = 1.5) 
      text(t[i],halign = "center", valign = "center", size=t_height);



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15524.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From unkerjay at centurylink.net  Wed Jan  6 12:13:34 2016
From: unkerjay at centurylink.net (unkerjay)
Date: Wed, 6 Jan 2016 10:13:34 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452100070416-15524.post@n5.nabble.com>
References: <1451684467862-15409.post@n5.nabble.com>
	<1451692243533-15414.post@n5.nabble.com>
	<1451700767298-15417.post@n5.nabble.com>
	<1451795809088-15423.post@n5.nabble.com>
	<1451802739662-15426.post@n5.nabble.com>
	<1451803285564-15427.post@n5.nabble.com>
	<1452093589497-15516.post@n5.nabble.com>
	<1452096287017-15518.post@n5.nabble.com>
	<1452099839557-15523.post@n5.nabble.com>
	<1452100070416-15524.post@n5.nabble.com>
Message-ID: <1452100414823-15525.post@n5.nabble.com>

And to be clear,  thank you ALL for your input.

MUCH appreciated.



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15525.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mickvav at gmail.com  Wed Jan  6 14:57:31 2016
From: mickvav at gmail.com (Mihail Vasiliev)
Date: Wed, 6 Jan 2016 22:57:31 +0300
Subject: [OpenSCAD] export() function.
In-Reply-To: <CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
Message-ID: <CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>

Hi, Doug, Torsten.

I'll try to answer Torsten's questions first.

1. How is the difference between preview and render mode handled with
export()?

The very exact way another side-effecting operation - "echo" does.
It does it's dirty job on "instantiate" call to corresponding AbstractNode.

2. Will that always force the mesh generation and export the
file on F5?

It's action is triggered at the same times as echo's.
As for now, it actually calls instantiateChildren on it's children nodes.
(I don't know, whether this function it use caches internally. I can dig
it, if it's necessary.)
Than it applies freshly-created GeometryEvaluator on the first of these
children and exports resulted geometry in supplied file, determining it's
type by it's name.

3. How will that interact with animation?

Yes, I regenerates file on each frame, and can be used to create series of
exported files of each time step.
e.g. the code:

export(file=str("gg",$t,".stl")) rotate([$t*50,0,0]) cube([10,10,10]);

generates several stl files with different names, as expected.

Now on Doug's questions:

1. OpenSCAD is not a procedural programming language. It is a purely
declarative language for describing geometry. This is the primary issue.

And why the way to output for this geometry is obligated to be declared in
command line, not in the language itself?

2. You can't add a procedural, side effect causing 'export()' command to
the language because it doesn't make any sense to export a shape to a file
while the script is being evaluated: this would mess up preview
performance. Once again, this is a side issue, like security. It's a
technical issue which underlies the fundamental design decision that
OpenSCAD is a declarative language (see point 1 above).

This technocal issue can be addressed by adding some extra argument to
export to make it skip it's operation in preview mode, for example. I can
do it, as well as security restrictions, regression tests and so on, if the
community is interested in the feature itself.


2016-01-05 2:09 GMT+03:00 doug moen <doug at moens.org>:

> Hi Mihail. Concerning your pull request for an export() command.
>
> Torsten is a gatekeeper, I'm not. Torsten's response to your proposal was
> more relevant and insightful than mine. The security problem is a side
> issue, and the real problem is what Torsten said:
>
>    1. OpenSCAD is not a procedural programming language. It is a purely
>    declarative language for describing geometry. This is the primary issue.
>    2. You can't add a procedural, side effect causing 'export()' command
>    to the language because it doesn't make any sense to export a shape to a
>    file while the script is being evaluated: this would mess up preview
>    performance. Once again, this is a side issue, like security. It's a
>    technical issue which underlies the fundamental design decision that
>    OpenSCAD is a declarative language (see point 1 above).
>
> Torsten asked a number of questions about "when does this side effect
> occur", which are quite relevant, and which you didn't answer.
>
> Then Torsten proposed a design which is consistent with the OpenSCAD
> philosophy. Instead of an "export" function which has the semantics of
> "write this shape to a file *right now*", there is a syntax for adding
> metadata to a node of the CSG tree, which has the semantics: this branch of
> the CSG tree should be exported to a separate file, at export time. It
> could have the same syntax as your proposal.
>
> This metadata is not interpreted until some GUI command is invoked. No
> files are exported during preview, render or animation, which is as it
> should be. For example, the GUI "Export" command can notice that there are
> multiple exported subtrees tagged in the CSG tree. It could, for example,
> ask you to specify a root directory, then write all of the exported files
> relative to this directory. It should also be specified how to invoke
> multiple export from the CLI.
>
> Notice how the security problem goes away when the feature is properly
> designed. We are no longer invisibly exporting files without the user's
> knowledge, in the case of a downloaded SCAD file. Export only happens
> explicitly.
>
> This design addresses the goal of exporting multiple files from a single
> *.scad file, but it doesn't address jpmendes' problem, because his goal is
> for OpenSCAD to run faster, and he wants to achieve this by persistent
> caching of specified subtrees. So we've proposed an extension to the
> render() operator to solve his problem.
>
> On 4 January 2016 at 16:31, Mihail Vasiliev <mickvav at gmail.com> wrote:
>
>> On persistent cache - may be try using mmap-ed files? There is some
>> mechanism
>> for it in boost
>> (
>> http://www.boost.org/doc/libs/1_50_0/libs/iostreams/doc/classes/mapped_file.html
>> ),
>> but I have no experience with it.
>>
>> On my original issue - what about reconsidering my patches and suggestions
>> on security enhancments?
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/export-function-tp15428p15484.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160106/2b7c4f70/attachment.html>

From doug at moens.org  Wed Jan  6 18:49:28 2016
From: doug at moens.org (doug moen)
Date: Wed, 6 Jan 2016 18:49:28 -0500
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <568C83EB.8080003@gmx.de>
References: <CAEEmnrPkhwWK9K5AwOY8JfNkyDr6peGOkw=2Z6iZS07PiyVyVA@mail.gmail.com>
	<CAGV6i+M8VVovbA2NWacc63nTb9F-92tRYDH63QK23g8tutrGNA@mail.gmail.com>
	<568B1819.1080300@gmx.de> <1451957709765-15491.post@n5.nabble.com>
	<CAGV6i+N4ozE80dxJzSqSqSqkRAh_wweXu+8FZdGghQMiH8qw_g@mail.gmail.com>
	<568C1A7A.1030001@gmx.de>
	<CAEEmnrPK1Mmr_6w=tm6Xu6N4ps1PVwKNKu6TEkabqOO1Noat0g@mail.gmail.com>
	<568C59D8.7020100@gmx.de> <1452043288084-15508.post@n5.nabble.com>
	<568C83EB.8080003@gmx.de>
Message-ID: <CAGV6i+N+qt18p=kT4kjqeybA5auew33UHJumqdaiWMN5h7qhCg@mail.gmail.com>

I agree with Torsten; we can't just throw out list comprehensions and
replace them with an incompatible syntax. The current syntax is popular and
works well.

Neon22, if you are serious about this, then you should propose something
that is an upward compatible extension of the current list comprehension
syntax. That might lead to a better discussion.

My impression of the Lisp LOOP macro is that it is extremely complicated.
It would really suck to hard code all of that syntax into the OpenSCAD
internals. The only reason that this exists in Lisp is that it isn't hard
coded, it is a user written library. I've got a copy of the Common Lisp
standard, and it lists 3 different loop libraries that you can choose from:
the LOOP macro, the Series package, and the Generator/Gatherer package.

List comprehensions are a popular feature that have been implemented in
many or most mainstream languages. But I've never heard of any other
language that has implemented the LOOP syntax. Why would that be?

What most languages provide, instead of a huge pile of syntax and keywords
like LOOP, is a library of list manipulation functions that can be composed
together, as an alternative to writing tail recursive loops over lists. All
of the examples you provided can be written in terms of list functions,
maybe in combination with list comprehensions. And these functions have
been mostly standardized across languages, with minor variations in naming.
I'm talking about map, filter, foldl/reduce, and so on.

I'm confused about your reference to a "lisp and python style of control".
Python doesn't have anything like the LOOP macro. What Lisp and Python have
in common is a standard set of high level list functions, as do most other
languages in this space.

Many of the standard list functions take functions as arguments, but that
problem is solved by OpenSCAD2, which allows functions to be passed as
arguments. The good thing about a list function library is that it doesn't
have to be hard coded into OpenSCAD. If you don't like somebodies list
library, you can write your own.

On 5 January 2016 at 22:03, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 01/06/2016 02:21 AM, Neon22 wrote:
> > Rather than go for a C style of loop I'd rather see a more lisp
> > and python kind of control.
> >
> For marketing purposes, we really have to call it python style,
> sorry ;-) ...just joking... I think.
>
> So, I guess we can't just change the whole list comprehension
> syntax and break all the recently made scripts using it.
> But there's a number of features that we could adopt by adding
> new actions to the list comprehensions. One problem is that it
> currently uses keywords for the list comprehension names, but
> hopefully that can be changed in the parser (e.g. "each = 3;"
> is now invalid with the latest changes due to that).
>
> I'll have a look at the loop macro in lisp. At first glance
> it seems most of the simple list generation features could be
> somehow mapped to the OpenSCAD list comprehensions already.
> The list and numeric accumulation might be a nice extension,
> but I'm not sure how good those fit into the existing expression
> code. But then the code is there to be changed, right :-).
>
> ciao,
>   Torsten.
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160106/e08672b6/attachment.html>

From oz.at.michael at gmail.com  Wed Jan  6 20:45:06 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Wed, 6 Jan 2016 18:45:06 -0700 (MST)
Subject: [OpenSCAD] Problem in openscad script from Thingiverse
In-Reply-To: <1449435174858-14986.post@n5.nabble.com>
References: <1449313358670-14953.post@n5.nabble.com>
	<1449358570192-14971.post@n5.nabble.com>
	<1449407717172-14978.post@n5.nabble.com>
	<1449433722533-14983.post@n5.nabble.com>
	<1449434374492-14984.post@n5.nabble.com>
	<1449435174858-14986.post@n5.nabble.com>
Message-ID: <1452131106041-15529.post@n5.nabble.com>

I found that if you remove the coincident faces the problem goes away.

In the translate() before the two plate() calls, change the z to
handle_height+0.01.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Problem-in-openscad-script-from-Thingiverse-tp14953p15529.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From unkerjay at centurylink.net  Wed Jan  6 21:48:19 2016
From: unkerjay at centurylink.net (unkerjay)
Date: Wed, 6 Jan 2016 19:48:19 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452100070416-15524.post@n5.nabble.com>
References: <1451684467862-15409.post@n5.nabble.com>
	<1451692243533-15414.post@n5.nabble.com>
	<1451700767298-15417.post@n5.nabble.com>
	<1451795809088-15423.post@n5.nabble.com>
	<1451802739662-15426.post@n5.nabble.com>
	<1451803285564-15427.post@n5.nabble.com>
	<1452093589497-15516.post@n5.nabble.com>
	<1452096287017-15518.post@n5.nabble.com>
	<1452099839557-15523.post@n5.nabble.com>
	<1452100070416-15524.post@n5.nabble.com>
Message-ID: <1452134899156-15530.post@n5.nabble.com>

Followup:

I've spent the better part of my day trying to get this object up to
printability.

I've (in Openscad):

Adjusted the extrude to be sure it extends below as well as above 
the surface.

rearranged the text so that it fits within the borders of its respective
face

adjusted the size for the same reason

(in Blender):

deleted, recreated, (and where necessary) merged faces for
a more unified model.

thickened the overall model

(in Netfabb Basic and Online):

attempted to repair it

Sculpteo:

90 objects!!!

Shapeways:

Errors:

Bounding Box
Wall Thickness
Loose Shells

It looks GREAT!

Doesn't print.

I think I could probably create
a dodec out of wood and burn
the text onto the surface sooner
than I'll get this up to printability.

The more this happens the less I
am persuaded that 3D printing is
yet a viable alternative for anything
but SMALL, SIMPLE models.

A Soma cube costs $ 35 to 3d print
the parts.

Out of wood?

$ 3

Check Amazon.

Check Shapeways.

Don't get me wrong.  A good amount
of what I try to create PRINTS.

Most of it TEXTLESS.  ALL of it
SMALL.  And at that, $ 5 - $ 10
a pop.  And that's from Shapeways.
Door to door.  3d hubs - pick it up
myself.  Last I checked (few months
ago) 4 - 6 times the cost of Shapeways
door to door.

Then, there's what's passed Printability
checks at Shapeways that people with
their own printers for various reasons
just have problems with.

Sure I could do it with a texture.  But
that really kind of defeats the point.  And
as I said, at the outset.  The only option then
is Sandstone which really isn't very durable.

Arrggggh!

Oh the time I've saved with technology.

Thanx again everyone for the help.




--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15530.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Jan  7 00:49:46 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Wed, 6 Jan 2016 22:49:46 -0700 (MST)
Subject: [OpenSCAD] Changes to CGAL datastructures? Memory use.
Message-ID: <1452145786651-15531.post@n5.nabble.com>

OpenSCAD 2015.03-2/64

When fiddling with the  surface issue
<https://github.com/openscad/openscad/issues/1535>   doing

union()
{
    translate([-5,0,5]) cube(1);
	surface(file = "model.data", center = true, invert = false);
}

It goes to nearly 3GB working set when rendering. It is a nearly 300x300
surface.

But the stats don't seem that big

Compiling design (CSG Tree generation)...
Rendering Polygon Mesh using CGAL...
Geometries in cache: 5
Geometry cache size in bytes: 71198536
CGAL Polyhedrons in cache: 2
CGAL cache size in bytes: 469181312
Total rendering time: 0 hours, 5 minutes, 53 seconds
   Top level object is a 3D object:
   Simple:        yes
   Vertices:   105562
   Halfedges:  543928
   Edges:      271964
   Halffacets: 332808
   Facets:     166404
   Volumes:         2
Rendering finished.

And there is definitely memory leaks, when re-rendering, after adding a
rotate & scale(1) the commit size got close to 8GB (fairly quickly). It then
crashed.




-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Changes-to-CGAL-datastructures-Memory-use-tp15531.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Thu Jan  7 01:26:35 2016
From: mschafer at wireframe.biz (Neon22)
Date: Wed, 6 Jan 2016 23:26:35 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452134899156-15530.post@n5.nabble.com>
References: <1451692243533-15414.post@n5.nabble.com>
	<1451700767298-15417.post@n5.nabble.com>
	<1451795809088-15423.post@n5.nabble.com>
	<1451802739662-15426.post@n5.nabble.com>
	<1451803285564-15427.post@n5.nabble.com>
	<1452093589497-15516.post@n5.nabble.com>
	<1452096287017-15518.post@n5.nabble.com>
	<1452099839557-15523.post@n5.nabble.com>
	<1452100070416-15524.post@n5.nabble.com>
	<1452134899156-15530.post@n5.nabble.com>
Message-ID: <1452147995149-15532.post@n5.nabble.com>

looking along an edge I can see the text is off the surface.
<http://forum.openscad.org/file/n15532/dodec-02_001304.png> 
I changed +1 to -Delta where Delta = 0.1

translate([0, 0, h/2-Delta])
  multilinetext(strings[i]);
  rotate([0, 180, 0])
  translate([0, 0, h/2-Delta])
  multilinetext(strings[i+6]);

Now the text sits just beow the surface and does not collide.

If you want the font to be bolder then choose a bold font
The cheatsheet is a fount of knowledge:
  - http://www.openscad.org/cheatsheet/
Here under text you can see help which indicates you can find the fonts on
your system by looking under Help/Font List on menu.
On my machine I choose "Verdana:style=Bold" but you might have different
fonts on yours and you'd need to check.
I would probably use a bigger font size for the first lline (when its a
number).

My code looks like:
strings = [["A Partridge","in a","Pear Tree"], ["2"," Turtle Doves"],
		   ["3","French Hens"], ["4","Calling Birds"],
		   ["5","Golden", "Rings"], ["6","Geese", "a-laying"],
		   ["12","Drummers", "Drumming"],["7","Swans", "a-swimming"],
		   ["8","Maids", "a-milking"], ["9","Ladies","Dancing"],
		   ["10","Lords", "a-leaping"],["11","Pipers","Piping"]
		  ];

t_size = 6;          // height of text
t_spacing = 1.5;  // spacing between lines
t_height = 1.5;    // extruded this tall
myfont = "Verdana:style=Bold";
Delta = 0.1;        // used to make sure interpenetrated

dodekaeder(40);

module dodekaeder(r = 40)
{
  w = acos(1/sqrt(5));
  rotate([0, 0, 180])
  twosides(r, 0);
  for(i=[0:4])
    rotate([0, -w, i*72])  // tricky!
    twosides(r, i+1);
}

module twosides(r=1, i=1)
{
  h = r*2.618;
  linear_extrude(height = h, twist = 36, center = true) // tricky twist
  circle(r, $fn=5);
 
  // text for upper and lower surface
  #translate([0, 0, h/2-Delta])
  multilinetext(strings[i]);
  rotate([0, 180, 0])
  translate([0, 0, h/2-Delta])
  multilinetext(strings[i+6]);
}

module multilinetext(t, spacing=t_spacing)
  for(i=[0:len(t)-1])  
    translate([0, (len(t)/2-i)*t_size*spacing, 0])  //Note the "1.5" = Line
Spacing
    linear_extrude(height = t_height)
      text(t[i],halign = "center", valign = "center",
size=t_size,font=myfont);

The End result - when rendered looks like this (took quite a while to render
with all that text)
<http://forum.openscad.org/file/n15532/dodec-02_001306.png> 

and when exported in an STL is a single object with no gaps or holes, ready
to print.
This object is about 100mm high, 7MB, 18000 faces.
<http://forum.openscad.org/file/n15532/dodec_02_001305.png> 

Printing is tricky because one side has to face down and it has text on it
and will need supports.
To simplify this, consider splitting it into two halves (using difference
and a big cube) and then gluing the two prints together.



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15532.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Thu Jan  7 05:11:52 2016
From: mschafer at wireframe.biz (Neon22)
Date: Thu, 7 Jan 2016 03:11:52 -0700 (MST)
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <CAGV6i+N+qt18p=kT4kjqeybA5auew33UHJumqdaiWMN5h7qhCg@mail.gmail.com>
References: <CAGV6i+M8VVovbA2NWacc63nTb9F-92tRYDH63QK23g8tutrGNA@mail.gmail.com>
	<568B1819.1080300@gmx.de> <1451957709765-15491.post@n5.nabble.com>
	<CAGV6i+N4ozE80dxJzSqSqSqkRAh_wweXu+8FZdGghQMiH8qw_g@mail.gmail.com>
	<568C1A7A.1030001@gmx.de>
	<CAEEmnrPK1Mmr_6w=tm6Xu6N4ps1PVwKNKu6TEkabqOO1Noat0g@mail.gmail.com>
	<568C59D8.7020100@gmx.de> <1452043288084-15508.post@n5.nabble.com>
	<568C83EB.8080003@gmx.de>
	<CAGV6i+N+qt18p=kT4kjqeybA5auew33UHJumqdaiWMN5h7qhCg@mail.gmail.com>
Message-ID: <1452161512420-15534.post@n5.nabble.com>

It was not my intention to start a flame war, merely to point out the way
another language did it.
I was referring to SCL:loop macro.
Python started with reduce and map - since removed due to pressure from C++
style people. Just because its good doesn't mean everyone adopts it. I can't
believe I have to explain this.

Just because there is another way to do it is not an attack on OpenSCAD 1 or
2 (which I rather like).
The entire Genera OS was written in lisp on a lisp machine. Yes an entire OS
in Lisp. It remains the best development system I worked on and the oldest
registered domain on the web - even though SMBX the company has gone. But
that's my problem not yours.

for OpenSCAD:

- add structured assignment:
[for ([a b]=[[1 2] [3 4] [5 6]]) [b a] ] 
   giving [[2 1] [4 3] [6 5]]

- add from
[ for (i=[1:10], j from 2) i*j ]
  where j starts at 2 and counts up. the i variable sets the termination of
the loop
  from could not appear on its own without a termination clause.

- loop terminatoin with while, or until, or just one and use not operator
for the other - for readability
[ for (x=1,2,3,4,5,6], while prime(x))  [ x, x*x] ]
  returning list of [x,x^2] until first non-prime encountered.

- define more internal loop variables. inner scope only
[for (x=1,2,3,4,5,6], start=12) x*start ]

- I can't imagine how to do if-then constructs and collect inside the
existing syntax.

Cheers everyone...



--
View this message in context: http://forum.openscad.org/List-comprehensions-tp15321p15534.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From unkerjay at centurylink.net  Thu Jan  7 05:21:48 2016
From: unkerjay at centurylink.net (unkerjay)
Date: Thu, 7 Jan 2016 03:21:48 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452147995149-15532.post@n5.nabble.com>
References: <1451700767298-15417.post@n5.nabble.com>
	<1451795809088-15423.post@n5.nabble.com>
	<1451802739662-15426.post@n5.nabble.com>
	<1451803285564-15427.post@n5.nabble.com>
	<1452093589497-15516.post@n5.nabble.com>
	<1452096287017-15518.post@n5.nabble.com>
	<1452099839557-15523.post@n5.nabble.com>
	<1452100070416-15524.post@n5.nabble.com>
	<1452134899156-15530.post@n5.nabble.com>
	<1452147995149-15532.post@n5.nabble.com>
Message-ID: <1452162108180-15535.post@n5.nabble.com>

Everything you mention except the splitting it in two, I saw and attempted
to address.

I did everything I knew to do, which leaves room, since there's a BIG gap
in what I know.

It looked printable.  It looked like it was on AND below the surface -
connected to the base.

So much it seems depends on having the right font, used in the right
way.

Fonts, it seems, were initially designed for / optimized for print on
the page - PAPER.

Now there's the possibiility of 3D printing, different technology, different
methods and materials, and fonts (I've noticed) have to be retooled,
redesigned (and have been to a degree) for these new methods and
materials.

It explains the physical, visual histrionics (as you showed) of attaching
text to a model.

I'll take a look again.

I'm learning a whole new vocabulary around this:

Manifold
Watertight
Connected
Bounding Box
Wall Thickness
Loose Shells

All the different things that are either done right or that get in
the way of printing.

It suggests to me that 3D printing is still very much in its infancy.

There are still significant limitations and obstacles.

Just as an aside, I recently watched a tv news episode which showed
that the lion's share of glasses frames are coming out of Italy.  Which,
economics 101 means (monopoly (or thereabouts), control the supply,
you control the cost.  There's already a demand.

Now if there's a project SCREAMING for a 3D printing solution, it's
THAT one.  I think it'll happen, and, when it does, kiss monopoly
(or thereabouts) good-bye.

So, I'm not sunk on the promise of 3D printing.

BUT, I sure am frustrated.

Thanx



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15535.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From unkerjay at centurylink.net  Thu Jan  7 05:30:42 2016
From: unkerjay at centurylink.net (unkerjay)
Date: Thu, 7 Jan 2016 03:30:42 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452147995149-15532.post@n5.nabble.com>
References: <1451700767298-15417.post@n5.nabble.com>
	<1451795809088-15423.post@n5.nabble.com>
	<1451802739662-15426.post@n5.nabble.com>
	<1451803285564-15427.post@n5.nabble.com>
	<1452093589497-15516.post@n5.nabble.com>
	<1452096287017-15518.post@n5.nabble.com>
	<1452099839557-15523.post@n5.nabble.com>
	<1452100070416-15524.post@n5.nabble.com>
	<1452134899156-15530.post@n5.nabble.com>
	<1452147995149-15532.post@n5.nabble.com>
Message-ID: <1452162642923-15536.post@n5.nabble.com>

Also, thank you for listing code that works.

My first impulse is cut and paste.

So, if it's a snippet of code that requires
something not readily apparent or some
condition or know-how to work, I'm at
a loss.

I worked tech support for PCs.  I use Linux
at home (Linux Mint). I supported Windows
PCs.  The fact that I work with OpenSCAD,
Blender, Inkscape, and lately GIMP put me
further into the Geek category as well as
the disproportionate amount of time I spend
following the doings of Kit Wallace on Polyhedrons
(not exactly table talk at most tables).

I'm not a stranger to scripting, just to OpenSCAD.

Give me a working example and I can figure it
out.  I can learn from it.

It's not enough that it "works for you".  

And I know I've got to bring SOMETHING to the
table.

I'm working on doing my part.

And I appreciate your assistance - VERY much.

Thank you - ALL.



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15536.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Thu Jan  7 06:49:46 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 7 Jan 2016 11:49:46 +0000
Subject: [OpenSCAD] Inaccurate rotates
Message-ID: <CAEEmnrPfHVhLtugoR2qpdkPjXujLk9aXF=DOYrAzhBBaad-6pw@mail.gmail.com>

After updating openscad I noticed some of my generated DXF sheet drawings
have very small numbers like 3.02425e-14 at the corners where they had 0
before. I tracked it down to a sequence of rotates by 90 degrees corrupting
the (0,y)  vertices. It probably corrupts all of them but 3.02425e-14 + x
where x is an integer isn't representable in a float so they get rounded to
whole numbers.

I distilled it down to a simple example like this: -

projection(cut = true)
rotate([0, 0, 90])
difference() {
    translate([0, 0, -1.5])
        cube([100, 200, 3], center = false);

    translate([90, 190, 0])
        cylinder(r = 2, h = 100, center = true);
}

Removing the cylindrical hole gives accurate zeros, so it looks like rotate
is like translate in that it has different precision operating on CGAL
objects. Looking at the source code it looks like all transformations will
have this problem.

So I added a derivative of Giles' user space rotate and that fixes it.

module rotate(a)
{
 cx = cos(a[0]);
 cy = cos(a[1]);
 cz = cos(a[2]);
 sx = sin(a[0]);
 sy = sin(a[1]);
 sz = sin(a[2]);
 multmatrix([
  [cy * cz, cz * sx * sy - cx * sz, cx * cz * sy + sx * sz, 0],
  [cy * sz, cx * cz + sx * sy * sz,-cz * sx + cx * sy * sz, 0],
  [-sy,     cy * sx,                cx * cy,                0],
  [0,       0,                      0,                      1]
 ]) children();
}

Giles used accurate at 90 versions of sin and cos but I think the sin and
cos functions in OpenScad got fixed to be accurate for 90, 45, 30 and 60.
The problem is they aren't used in rotate, they only seem to be used in
user code. So now we have not only multiple vertex representations but also
two versions of the trig functions. Nothing is going to line up exactly.

If I replace rotate globally then obviously all my files change a little
bit. Are there any down sides to this? Are user space expressions stored as
floats or doubles?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160107/efd29420/attachment.html>

From unkerjay at centurylink.net  Thu Jan  7 10:03:36 2016
From: unkerjay at centurylink.net (unkerjay)
Date: Thu, 7 Jan 2016 08:03:36 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452147995149-15532.post@n5.nabble.com>
References: <1451700767298-15417.post@n5.nabble.com>
	<1451795809088-15423.post@n5.nabble.com>
	<1451802739662-15426.post@n5.nabble.com>
	<1451803285564-15427.post@n5.nabble.com>
	<1452093589497-15516.post@n5.nabble.com>
	<1452096287017-15518.post@n5.nabble.com>
	<1452099839557-15523.post@n5.nabble.com>
	<1452100070416-15524.post@n5.nabble.com>
	<1452134899156-15530.post@n5.nabble.com>
	<1452147995149-15532.post@n5.nabble.com>
Message-ID: <1452179016010-15538.post@n5.nabble.com>

The fun I've been having:

Shapeways - "Fixed"
<http://forum.openscad.org/file/n15538/Shapeways_FIXED_PNG.png> 

Solidify (or Alt-S - doesn't matter which) - Blender
<http://forum.openscad.org/file/n15538/Solidify_or_Alt-S_Blender_FIXED_PNG.png> 

Alt-S - Blender
<http://forum.openscad.org/file/n15538/Alt_S_Blender_FIXED_PNG.png> 

NetFabb Basic - FIXED - in Shapeways
<http://forum.openscad.org/file/n15538/NetFabb_Basic_FIXED_PNG.png> 

NetFabb Online - FIXED (Looks Good)
<http://forum.openscad.org/file/n15538/NetFabb_Online_FIXED_PNG.png> 

As I said (LOOKED Good) - Wall Thickness Issues
<http://forum.openscad.org/file/n15538/Meshlab_FIXED2_PNG.png> 

Wall Thickness - How bad is it?
<http://forum.openscad.org/file/n15538/Shapeways_Wall_Thickness_PNG.png> 

After the "Fix"
<http://forum.openscad.org/file/n15538/Shapeways_Wall_Thickness_FIXED_PNG.png> 

Last try - Meshlab (From Openscad - User Manual):
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/STL_Import_and_Export

"In order to clean the STL file, you have the following options:

- use http://wiki.netfabb.com/Semi-Automatic_Repair_Options . This will
repair the holes but not the self-intersections.

- use netfabb basic. This free software doesnt have the option to close
holes nor can it fix the self-intersections

- use MeshLab, This free software can fix all the issues


Using MeshLab, you can do:

- Render - Show non Manif Edges

- Render - Show non Manif Vertices

- if found, use Filters - Selection - Select non Manifold Edges or Select
non Manifold Vertices - Apply - Close. Then click button 'Delete the current
set of selected vertices...' or check
http://www.youtube.com/watch?v=oDx0Tgy0UHo for an instruction video. The
screen should show "0 non manifold edges", "0 non manifold vertices"


Next, you can click the icon 'Fill Hole', select all the holes and click
Fill and then Accept. You might have to redo this action a few times.

Use File - Export Mesh to save the STL."

Meshlab - "Fixed" All well and good
<http://forum.openscad.org/file/n15538/Meshlab_FIXED_PNG.png> 

Meshlab - Not so good after all
<http://forum.openscad.org/file/n15538/Meshlab_Shapeways_PNG.png> 

When Uploaded to Shapeways without any modifications whatsoever, it printed
fine
at 5.13 in.  Small detail: $ 405.57 (about 130 mm / 13 cm)

So, I figured I'd rescale it to about 55 mm (little less than half the
size).

That's when the problems started.

Price was right.

Printability wasn't.

So, there you have it.

Not working so far.

Valiant effort?



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15538.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Thu Jan  7 10:08:29 2016
From: marius at kintel.net (kintel)
Date: Thu, 7 Jan 2016 08:08:29 -0700 (MST)
Subject: [OpenSCAD] include is borked
In-Reply-To: <1452157444505-15533.post@n5.nabble.com>
References: <1452157444505-15533.post@n5.nabble.com>
Message-ID: <1452179309988-15539.post@n5.nabble.com>

Including files is a very common workflow, so my guess is that something else
is happening.
If you could provide a step-by-step way to reproduce this, that would make
it a lot easier to help.

 -Marius




--
View this message in context: http://forum.openscad.org/include-is-borked-tp15533p15539.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From s2tillx at talktalk.net  Thu Jan  7 10:24:27 2016
From: s2tillx at talktalk.net (DavelikeC)
Date: Thu, 7 Jan 2016 08:24:27 -0700 (MST)
Subject: [OpenSCAD] computer screen layout adjustment
Message-ID: <1452180267409-15540.post@n5.nabble.com>

I would like editor screen displayed on the left hand half of the screen. I
would like on the right  half the preview screen,with the console screen
below.

When I open openscad, I get three horizontal screens, editor, preview,
console. Although I can change the widths of these bands and un-display any
of these screens, I don't know how to move the screens around to meet my
requirements as in the above paragraph.

I would be grateful for any help on this matter.



--
View this message in context: http://forum.openscad.org/computer-screen-layout-adjustment-tp15540.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Thu Jan  7 11:17:33 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Thu, 7 Jan 2016 17:17:33 +0100
Subject: [OpenSCAD] computer screen layout adjustment
In-Reply-To: <1452180267409-15540.post@n5.nabble.com>
References: <1452180267409-15540.post@n5.nabble.com>
Message-ID: <568E8F9D.1080605@gmx.de>

On 01/07/2016 04:24 PM, DavelikeC wrote:
> I would like editor screen displayed on the left hand half of the screen. I
> would like on the right  half the preview screen,with the console screen
> below.
> 
Check the preferences, you need to have the following option
enabled:

Edit->Preferences->Advanced->Enable docking of Editor and Console
in different places

After it's enabled, both Editor and Console should have a small
title bar with which they can be dragged into other positions.

ciao,
  Torsten.



From doug at moens.org  Thu Jan  7 12:03:35 2016
From: doug at moens.org (doug moen)
Date: Thu, 7 Jan 2016 12:03:35 -0500
Subject: [OpenSCAD] List comprehensions
Message-ID: <CAGV6i+NXhpuNyzgQ6Sf5DRUTR5xuS1tK93qwH5zj2vm6554HjA@mail.gmail.com>

Sorry about the negative tone of my response. I did get frustrated by your
original post, though. It's written in a pseudo-code, somewhere between
Lisp and OpenSCAD. Since you weren't proposing that as the final syntax, I
tried to translate your examples into OpenSCAD syntax, and what I finally
ended up with were list comprehensions + Haskell-inspired list functions.
Which is not what you were proposing.

The entire Genera OS was written in lisp on a lisp machine. Yes an entire
> OS in Lisp. It remains the best development system I worked on.
>

I never had an opportunity to use a Lisp Machine. I'm a student of computer
history, though, and it's legendary. I'd like to spend time playing with
this software so that I can understand why it's the best development system
ever. Maybe somebody will resurrect this in an emulator one day.


> - add structured assignment:
> [for ([a b]=[[1 2] [3 4] [5 6]]) [b a] ]
>    giving [[2 1] [4 3] [6 5]]
>

I completely agree with adding structured assignment. I've been writing
OpenSCAD2 code as part of a project, and I've added structured assignment,
because it is so convenient for destructuring 2-vectors and 3-vectors in
the style of geometric programming I'm playing with.

Your example is pseudo code, so I'll translate to OpenSCAD syntax:
  [ for ([a,b] = [[1,2], [3,4], [5,6]]) [b,a] ]

In my version of structured assignment,
  [a,b] = x
produces a run-time error if x is not a list of length 2. The syntax works
in definitions, function formal parameter lists, and for statements.


> - add from
> [ for (i=[1:10], j from 2) i*j ]
>   where j starts at 2 and counts up. the i variable sets the termination of
> the loop
>   from could not appear on its own without a termination clause.
>

You intend this to mean 2 loops running in parallel, instead of being
nested. In OpenSCAD, the syntax
   for (i=[1:10], j=[2:11]) ...
looks like it would be good syntax for two parallel loops, but it's not. It
actually means nested loops, same as
   for (i=[1:10]) for (j=[2:11]) ...
So I think there is a backward compatibility problem with expressing
parallel loops in the way you suggest. The problem is in violating the
expectations of OpenSCAD programmers, who expect 'for (i=.., j=..)' to mean
nested loops.

Your previous post had several examples of parallel loops. Here's one:

- Create pairs
[for x = [1:5]
   for y = ["A","B","C","D","E"]
   do [x y]  ]
giving   [[1 A]  [2 B]  [3 C]  [4 D]  [5 E]]

This is more pseudo-code. The problem is that if we convert this into
OpenSCAD syntax, we get nested loops:

  [for (x = [1:5])
    for (y = ["A","B","C","D","E"])
      [x,y]]
and the result is a list of 25 pairs.

In functional style programming, you would create the pairs by calling
transpose, which in OpenSCAD is matrix transpose from linear algebra.
   transpose([[1:5], ["A","B","C","D","E"]])
  => [[1,"A"], [2,"B"], [3,"C"], [4,"D"], [5,"E"]]

(This works in OpenSCAD2 because [1:5] is operationally equivalent to
[1,2,3,4,5] in all contexts.)

We could invent a new syntax for parallel loops in OpenSCAD. Maybe this
would work:
    for (x = xlist | y = ylist) ...

Or we could just use transpose. Because this also works:
    for ([x,y] = transpose(xlist, ylist)) ...

- loop terminatoin with while, or until, or just one and use not operator
> for the other - for readability
> [ for (x=1,2,3,4,5,6], while prime(x))  [ x, x*x] ]
>   returning list of [x,x^2] until first non-prime encountered.
>

I'm not sure about the , before the while, for reasons previously
discussed. And the argument of 'while' should be parenthesized, for
consistency with the rest of OpenSCAD syntax. So maybe this:

    [ for (x=[1,2,3,4,5,6] | while(prime(x))) [x, x*x] ]

In functional programming, you'd implement this using take_while, which
returns the longest prefix of a sequence that matches a predicate. In
OpenSCAD2, the code would look like this:

    [ for (x=[1,2,3,4,5,6] >> take_while(prime)) [x, x*x] ]

It's not much worse, and no additional syntax is added to the language,
since take_while is a library function. There is also a drop_while function
which discards initial elements that match the predicate, and I'm not sure
if this is expressible using the LOOP macro.

- define more internal loop variables. inner scope only
> [for (x=1,2,3,4,5,6], start=12) x*start ]
>

But we already have syntax for this.
    [for (x=[1,2,3,4,5,6]) let (start=12) x*start ]


> - I can't imagine how to do if-then constructs and collect inside the
> existing syntax.
>

I had the same problem, reading your previous post. You wrote:

- using conditionals within the loop (as an operator, not a regular if
statement)
[for x below 10
    if odd(x)
    collect x into odds
    else
    collect x into evens
    finally [odds, evens] ]
gives [[1 3 5 7 9]  [0 2 4 6 8]]

In functional programming, this would be done using 'partition'.
  partition(odd)([0:9])

Here is the non-recursive definition:
partition(f)(s) =
  let (p1 = [for (x=s) if (f(x)) x],
       p2 = [for (x=s) if (!f(x)) x])
  [p1,p2];

In summary, my counter-proposal is to add structured assignment to
OpenSCAD2, and then provide library functions to make writing loops and
list processing more convenient.

I'll admit I have a bias for the functional style of programming, since I'm
used to that, and I don't have any experience using the Lisp LOOP macros.
And I admit there's a learning curve; you need a cookbook to learn some of
the common programming patterns. I'll be interested to know what other
people think.

One thing to note: In my OpenSCAD2 list library, most functions have double
argument lists, with the list in the second or outmost argument list. This
allows you to chain together list operations the same way you can chain
together geometric transforms in OpenSCAD.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160107/a0a16334/attachment.html>

From nop.head at gmail.com  Thu Jan  7 12:40:45 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 7 Jan 2016 17:40:45 +0000
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <CAGV6i+NXhpuNyzgQ6Sf5DRUTR5xuS1tK93qwH5zj2vm6554HjA@mail.gmail.com>
References: <CAGV6i+NXhpuNyzgQ6Sf5DRUTR5xuS1tK93qwH5zj2vm6554HjA@mail.gmail.com>
Message-ID: <CAEEmnrM0AWpivW0c5kWddnCtydpGyxwJwJ0aBC5_6dk1zeUeLg@mail.gmail.com>

>And I admit there's a learning curve; you need a cookbook to learn some of
the common programming patterns. I'll be interested to know what other
people think.

I think we just don't need such language complexity to describe 3D objects.

It there any 3D object that cannot be described by OpenScad as it stands
now?

I am far more interested in OpenScad producing numerically accurate results
and getting faster than being able to accept more programming paradigms.
Sure some things get expressed more succinctly but at the expense of being
more cryptic and bringing the need to read up on several languages to
understand the code.

I only started this thread to propose a way of not having to create nested
lists just to flatten them. It seems to have lead to a Frankenstein's
monster of a loop syntax that combines bits from everybody's favourite
languages.

Fiddling about with the syntax of the source code when fundamental things
like union and rotate don't produce the correct results seems pointless to
me.


On 7 January 2016 at 17:03, doug moen <doug at moens.org> wrote:

> Sorry about the negative tone of my response. I did get frustrated by your
> original post, though. It's written in a pseudo-code, somewhere between
> Lisp and OpenSCAD. Since you weren't proposing that as the final syntax, I
> tried to translate your examples into OpenSCAD syntax, and what I finally
> ended up with were list comprehensions + Haskell-inspired list functions.
> Which is not what you were proposing.
>
> The entire Genera OS was written in lisp on a lisp machine. Yes an entire
>> OS in Lisp. It remains the best development system I worked on.
>>
>
> I never had an opportunity to use a Lisp Machine. I'm a student of
> computer history, though, and it's legendary. I'd like to spend time
> playing with this software so that I can understand why it's the best
> development system ever. Maybe somebody will resurrect this in an emulator
> one day.
>
>
>> - add structured assignment:
>> [for ([a b]=[[1 2] [3 4] [5 6]]) [b a] ]
>>    giving [[2 1] [4 3] [6 5]]
>>
>
> I completely agree with adding structured assignment. I've been writing
> OpenSCAD2 code as part of a project, and I've added structured assignment,
> because it is so convenient for destructuring 2-vectors and 3-vectors in
> the style of geometric programming I'm playing with.
>
> Your example is pseudo code, so I'll translate to OpenSCAD syntax:
>   [ for ([a,b] = [[1,2], [3,4], [5,6]]) [b,a] ]
>
> In my version of structured assignment,
>   [a,b] = x
> produces a run-time error if x is not a list of length 2. The syntax works
> in definitions, function formal parameter lists, and for statements.
>
>
>> - add from
>> [ for (i=[1:10], j from 2) i*j ]
>>   where j starts at 2 and counts up. the i variable sets the termination
>> of
>> the loop
>>   from could not appear on its own without a termination clause.
>>
>
> You intend this to mean 2 loops running in parallel, instead of being
> nested. In OpenSCAD, the syntax
>    for (i=[1:10], j=[2:11]) ...
> looks like it would be good syntax for two parallel loops, but it's not.
> It actually means nested loops, same as
>    for (i=[1:10]) for (j=[2:11]) ...
> So I think there is a backward compatibility problem with expressing
> parallel loops in the way you suggest. The problem is in violating the
> expectations of OpenSCAD programmers, who expect 'for (i=.., j=..)' to mean
> nested loops.
>
> Your previous post had several examples of parallel loops. Here's one:
>
> - Create pairs
> [for x = [1:5]
>    for y = ["A","B","C","D","E"]
>    do [x y]  ]
> giving   [[1 A]  [2 B]  [3 C]  [4 D]  [5 E]]
>
> This is more pseudo-code. The problem is that if we convert this into
> OpenSCAD syntax, we get nested loops:
>
>   [for (x = [1:5])
>     for (y = ["A","B","C","D","E"])
>       [x,y]]
> and the result is a list of 25 pairs.
>
> In functional style programming, you would create the pairs by calling
> transpose, which in OpenSCAD is matrix transpose from linear algebra.
>    transpose([[1:5], ["A","B","C","D","E"]])
>   => [[1,"A"], [2,"B"], [3,"C"], [4,"D"], [5,"E"]]
>
> (This works in OpenSCAD2 because [1:5] is operationally equivalent to
> [1,2,3,4,5] in all contexts.)
>
> We could invent a new syntax for parallel loops in OpenSCAD. Maybe this
> would work:
>     for (x = xlist | y = ylist) ...
>
> Or we could just use transpose. Because this also works:
>     for ([x,y] = transpose(xlist, ylist)) ...
>
> - loop terminatoin with while, or until, or just one and use not operator
>> for the other - for readability
>> [ for (x=1,2,3,4,5,6], while prime(x))  [ x, x*x] ]
>>   returning list of [x,x^2] until first non-prime encountered.
>>
>
> I'm not sure about the , before the while, for reasons previously
> discussed. And the argument of 'while' should be parenthesized, for
> consistency with the rest of OpenSCAD syntax. So maybe this:
>
>     [ for (x=[1,2,3,4,5,6] | while(prime(x))) [x, x*x] ]
>
> In functional programming, you'd implement this using take_while, which
> returns the longest prefix of a sequence that matches a predicate. In
> OpenSCAD2, the code would look like this:
>
>     [ for (x=[1,2,3,4,5,6] >> take_while(prime)) [x, x*x] ]
>
> It's not much worse, and no additional syntax is added to the language,
> since take_while is a library function. There is also a drop_while function
> which discards initial elements that match the predicate, and I'm not sure
> if this is expressible using the LOOP macro.
>
> - define more internal loop variables. inner scope only
>> [for (x=1,2,3,4,5,6], start=12) x*start ]
>>
>
> But we already have syntax for this.
>     [for (x=[1,2,3,4,5,6]) let (start=12) x*start ]
>
>
>> - I can't imagine how to do if-then constructs and collect inside the
>> existing syntax.
>>
>
> I had the same problem, reading your previous post. You wrote:
>
> - using conditionals within the loop (as an operator, not a regular if
> statement)
> [for x below 10
>     if odd(x)
>     collect x into odds
>     else
>     collect x into evens
>     finally [odds, evens] ]
> gives [[1 3 5 7 9]  [0 2 4 6 8]]
>
> In functional programming, this would be done using 'partition'.
>   partition(odd)([0:9])
>
> Here is the non-recursive definition:
> partition(f)(s) =
>   let (p1 = [for (x=s) if (f(x)) x],
>        p2 = [for (x=s) if (!f(x)) x])
>   [p1,p2];
>
> In summary, my counter-proposal is to add structured assignment to
> OpenSCAD2, and then provide library functions to make writing loops and
> list processing more convenient.
>
> I'll admit I have a bias for the functional style of programming, since
> I'm used to that, and I don't have any experience using the Lisp LOOP
> macros. And I admit there's a learning curve; you need a cookbook to learn
> some of the common programming patterns. I'll be interested to know what
> other people think.
>
> One thing to note: In my OpenSCAD2 list library, most functions have
> double argument lists, with the list in the second or outmost argument
> list. This allows you to chain together list operations the same way you
> can chain together geometric transforms in OpenSCAD.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160107/f54c92cb/attachment.html>

From doug at moens.org  Thu Jan  7 12:47:14 2016
From: doug at moens.org (doug moen)
Date: Thu, 7 Jan 2016 12:47:14 -0500
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <CAEEmnrM0AWpivW0c5kWddnCtydpGyxwJwJ0aBC5_6dk1zeUeLg@mail.gmail.com>
References: <CAGV6i+NXhpuNyzgQ6Sf5DRUTR5xuS1tK93qwH5zj2vm6554HjA@mail.gmail.com>
	<CAEEmnrM0AWpivW0c5kWddnCtydpGyxwJwJ0aBC5_6dk1zeUeLg@mail.gmail.com>
Message-ID: <CAGV6i+PYkyzMW6B-sLtBA4xvecnERgFJWg_E+Vep8QWptjojFg@mail.gmail.com>

Fair enough.

On 7 January 2016 at 12:40, nop head <nop.head at gmail.com> wrote:

> >And I admit there's a learning curve; you need a cookbook to learn some
> of the common programming patterns. I'll be interested to know what other
> people think.
>
> I think we just don't need such language complexity to describe 3D objects.
>
> It there any 3D object that cannot be described by OpenScad as it stands
> now?
>
> I am far more interested in OpenScad producing numerically accurate
> results and getting faster than being able to accept more programming
> paradigms. Sure some things get expressed more succinctly but at the
> expense of being more cryptic and bringing the need to read up on several
> languages to understand the code.
>
> I only started this thread to propose a way of not having to create nested
> lists just to flatten them. It seems to have lead to a Frankenstein's
> monster of a loop syntax that combines bits from everybody's favourite
> languages.
>
> Fiddling about with the syntax of the source code when fundamental things
> like union and rotate don't produce the correct results seems pointless to
> me.
>
>
> On 7 January 2016 at 17:03, doug moen <doug at moens.org> wrote:
>
>> Sorry about the negative tone of my response. I did get frustrated by
>> your original post, though. It's written in a pseudo-code, somewhere
>> between Lisp and OpenSCAD. Since you weren't proposing that as the final
>> syntax, I tried to translate your examples into OpenSCAD syntax, and what I
>> finally ended up with were list comprehensions + Haskell-inspired list
>> functions. Which is not what you were proposing.
>>
>> The entire Genera OS was written in lisp on a lisp machine. Yes an entire
>>> OS in Lisp. It remains the best development system I worked on.
>>>
>>
>> I never had an opportunity to use a Lisp Machine. I'm a student of
>> computer history, though, and it's legendary. I'd like to spend time
>> playing with this software so that I can understand why it's the best
>> development system ever. Maybe somebody will resurrect this in an emulator
>> one day.
>>
>>
>>> - add structured assignment:
>>> [for ([a b]=[[1 2] [3 4] [5 6]]) [b a] ]
>>>    giving [[2 1] [4 3] [6 5]]
>>>
>>
>> I completely agree with adding structured assignment. I've been writing
>> OpenSCAD2 code as part of a project, and I've added structured assignment,
>> because it is so convenient for destructuring 2-vectors and 3-vectors in
>> the style of geometric programming I'm playing with.
>>
>> Your example is pseudo code, so I'll translate to OpenSCAD syntax:
>>   [ for ([a,b] = [[1,2], [3,4], [5,6]]) [b,a] ]
>>
>> In my version of structured assignment,
>>   [a,b] = x
>> produces a run-time error if x is not a list of length 2. The syntax
>> works in definitions, function formal parameter lists, and for statements.
>>
>>
>>> - add from
>>> [ for (i=[1:10], j from 2) i*j ]
>>>   where j starts at 2 and counts up. the i variable sets the termination
>>> of
>>> the loop
>>>   from could not appear on its own without a termination clause.
>>>
>>
>> You intend this to mean 2 loops running in parallel, instead of being
>> nested. In OpenSCAD, the syntax
>>    for (i=[1:10], j=[2:11]) ...
>> looks like it would be good syntax for two parallel loops, but it's not.
>> It actually means nested loops, same as
>>    for (i=[1:10]) for (j=[2:11]) ...
>> So I think there is a backward compatibility problem with expressing
>> parallel loops in the way you suggest. The problem is in violating the
>> expectations of OpenSCAD programmers, who expect 'for (i=.., j=..)' to mean
>> nested loops.
>>
>> Your previous post had several examples of parallel loops. Here's one:
>>
>> - Create pairs
>> [for x = [1:5]
>>    for y = ["A","B","C","D","E"]
>>    do [x y]  ]
>> giving   [[1 A]  [2 B]  [3 C]  [4 D]  [5 E]]
>>
>> This is more pseudo-code. The problem is that if we convert this into
>> OpenSCAD syntax, we get nested loops:
>>
>>   [for (x = [1:5])
>>     for (y = ["A","B","C","D","E"])
>>       [x,y]]
>> and the result is a list of 25 pairs.
>>
>> In functional style programming, you would create the pairs by calling
>> transpose, which in OpenSCAD is matrix transpose from linear algebra.
>>    transpose([[1:5], ["A","B","C","D","E"]])
>>   => [[1,"A"], [2,"B"], [3,"C"], [4,"D"], [5,"E"]]
>>
>> (This works in OpenSCAD2 because [1:5] is operationally equivalent to
>> [1,2,3,4,5] in all contexts.)
>>
>> We could invent a new syntax for parallel loops in OpenSCAD. Maybe this
>> would work:
>>     for (x = xlist | y = ylist) ...
>>
>> Or we could just use transpose. Because this also works:
>>     for ([x,y] = transpose(xlist, ylist)) ...
>>
>> - loop terminatoin with while, or until, or just one and use not operator
>>> for the other - for readability
>>> [ for (x=1,2,3,4,5,6], while prime(x))  [ x, x*x] ]
>>>   returning list of [x,x^2] until first non-prime encountered.
>>>
>>
>> I'm not sure about the , before the while, for reasons previously
>> discussed. And the argument of 'while' should be parenthesized, for
>> consistency with the rest of OpenSCAD syntax. So maybe this:
>>
>>     [ for (x=[1,2,3,4,5,6] | while(prime(x))) [x, x*x] ]
>>
>> In functional programming, you'd implement this using take_while, which
>> returns the longest prefix of a sequence that matches a predicate. In
>> OpenSCAD2, the code would look like this:
>>
>>     [ for (x=[1,2,3,4,5,6] >> take_while(prime)) [x, x*x] ]
>>
>> It's not much worse, and no additional syntax is added to the language,
>> since take_while is a library function. There is also a drop_while function
>> which discards initial elements that match the predicate, and I'm not sure
>> if this is expressible using the LOOP macro.
>>
>> - define more internal loop variables. inner scope only
>>> [for (x=1,2,3,4,5,6], start=12) x*start ]
>>>
>>
>> But we already have syntax for this.
>>     [for (x=[1,2,3,4,5,6]) let (start=12) x*start ]
>>
>>
>>> - I can't imagine how to do if-then constructs and collect inside the
>>> existing syntax.
>>>
>>
>> I had the same problem, reading your previous post. You wrote:
>>
>> - using conditionals within the loop (as an operator, not a regular if
>> statement)
>> [for x below 10
>>     if odd(x)
>>     collect x into odds
>>     else
>>     collect x into evens
>>     finally [odds, evens] ]
>> gives [[1 3 5 7 9]  [0 2 4 6 8]]
>>
>> In functional programming, this would be done using 'partition'.
>>   partition(odd)([0:9])
>>
>> Here is the non-recursive definition:
>> partition(f)(s) =
>>   let (p1 = [for (x=s) if (f(x)) x],
>>        p2 = [for (x=s) if (!f(x)) x])
>>   [p1,p2];
>>
>> In summary, my counter-proposal is to add structured assignment to
>> OpenSCAD2, and then provide library functions to make writing loops and
>> list processing more convenient.
>>
>> I'll admit I have a bias for the functional style of programming, since
>> I'm used to that, and I don't have any experience using the Lisp LOOP
>> macros. And I admit there's a learning curve; you need a cookbook to learn
>> some of the common programming patterns. I'll be interested to know what
>> other people think.
>>
>> One thing to note: In my OpenSCAD2 list library, most functions have
>> double argument lists, with the list in the second or outmost argument
>> list. This allows you to chain together list operations the same way you
>> can chain together geometric transforms in OpenSCAD.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160107/0aa1ee0f/attachment.html>

From louijp at yahoo.com  Thu Jan  7 12:58:52 2016
From: louijp at yahoo.com (Jean-Paul Louis)
Date: Thu, 7 Jan 2016 12:58:52 -0500
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <CAEEmnrM0AWpivW0c5kWddnCtydpGyxwJwJ0aBC5_6dk1zeUeLg@mail.gmail.com>
References: <CAGV6i+NXhpuNyzgQ6Sf5DRUTR5xuS1tK93qwH5zj2vm6554HjA@mail.gmail.com>
	<CAEEmnrM0AWpivW0c5kWddnCtydpGyxwJwJ0aBC5_6dk1zeUeLg@mail.gmail.com>
Message-ID: <60E78594-2A45-4EA0-B538-6B704C1F2CEF@yahoo.com>

How do you describe a Moebius ring in OpenScad?

Just curious,
Jean-Paul
N1JPL

> On Jan 7, 2016, at 12:40 PM, nop head <nop.head at gmail.com> wrote:
> 
> >And I admit there's a learning curve; you need a cookbook to learn some of the common programming patterns. I'll be interested to know what other people think.
> 
> I think we just don't need such language complexity to describe 3D objects.
> 
> It there any 3D object that cannot be described by OpenScad as it stands now? 
> 
> I am far more interested in OpenScad producing numerically accurate results and getting faster than being able to accept more programming paradigms. Sure some things get expressed more succinctly but at the expense of being more cryptic and bringing the need to read up on several languages to understand the code.
> 
> I only started this thread to propose a way of not having to create nested lists just to flatten them. It seems to have lead to a Frankenstein's monster of a loop syntax that combines bits from everybody's favourite languages.
> 
> Fiddling about with the syntax of the source code when fundamental things like union and rotate don't produce the correct results seems pointless to me.
> 
> 
> On 7 January 2016 at 17:03, doug moen <doug at moens.org> wrote:
> Sorry about the negative tone of my response. I did get frustrated by your original post, though. It's written in a pseudo-code, somewhere between Lisp and OpenSCAD. Since you weren't proposing that as the final syntax, I tried to translate your examples into OpenSCAD syntax, and what I finally ended up with were list comprehensions + Haskell-inspired list functions. Which is not what you were proposing.
> 
> The entire Genera OS was written in lisp on a lisp machine. Yes an entire OS in Lisp. It remains the best development system I worked on.
> 
> I never had an opportunity to use a Lisp Machine. I'm a student of computer history, though, and it's legendary. I'd like to spend time playing with this software so that I can understand why it's the best development system ever. Maybe somebody will resurrect this in an emulator one day.
>  
> - add structured assignment:
> [for ([a b]=[[1 2] [3 4] [5 6]]) [b a] ]
>    giving [[2 1] [4 3] [6 5]]
> 
> I completely agree with adding structured assignment. I've been writing OpenSCAD2 code as part of a project, and I've added structured assignment, because it is so convenient for destructuring 2-vectors and 3-vectors in the style of geometric programming I'm playing with.
> 
> Your example is pseudo code, so I'll translate to OpenSCAD syntax:
>   [ for ([a,b] = [[1,2], [3,4], [5,6]]) [b,a] ]
> 
> In my version of structured assignment,
>   [a,b] = x
> produces a run-time error if x is not a list of length 2. The syntax works in definitions, function formal parameter lists, and for statements.
>  
> - add from
> [ for (i=[1:10], j from 2) i*j ]
>   where j starts at 2 and counts up. the i variable sets the termination of
> the loop
>   from could not appear on its own without a termination clause.
> 
> You intend this to mean 2 loops running in parallel, instead of being nested. In OpenSCAD, the syntax
>    for (i=[1:10], j=[2:11]) ...
> looks like it would be good syntax for two parallel loops, but it's not. It actually means nested loops, same as
>    for (i=[1:10]) for (j=[2:11]) ...
> So I think there is a backward compatibility problem with expressing parallel loops in the way you suggest. The problem is in violating the expectations of OpenSCAD programmers, who expect 'for (i=.., j=..)' to mean nested loops.
> 
> Your previous post had several examples of parallel loops. Here's one:
> 
> - Create pairs
> [for x = [1:5]
>    for y = ["A","B","C","D","E"]
>    do [x y]  ]
> giving   [[1 A]  [2 B]  [3 C]  [4 D]  [5 E]]
> 
> This is more pseudo-code. The problem is that if we convert this into OpenSCAD syntax, we get nested loops:
> 
>   [for (x = [1:5])
>     for (y = ["A","B","C","D","E"])
>       [x,y]]
> and the result is a list of 25 pairs.
> 
> In functional style programming, you would create the pairs by calling transpose, which in OpenSCAD is matrix transpose from linear algebra.
>    transpose([[1:5], ["A","B","C","D","E"]])
>   => [[1,"A"], [2,"B"], [3,"C"], [4,"D"], [5,"E"]]
> 
> (This works in OpenSCAD2 because [1:5] is operationally equivalent to [1,2,3,4,5] in all contexts.)
> 
> We could invent a new syntax for parallel loops in OpenSCAD. Maybe this would work:
>     for (x = xlist | y = ylist) ...
> 
> Or we could just use transpose. Because this also works:
>     for ([x,y] = transpose(xlist, ylist)) ...
> 
> - loop terminatoin with while, or until, or just one and use not operator
> for the other - for readability
> [ for (x=1,2,3,4,5,6], while prime(x))  [ x, x*x] ]
>   returning list of [x,x^2] until first non-prime encountered.
> 
> I'm not sure about the , before the while, for reasons previously discussed. And the argument of 'while' should be parenthesized, for consistency with the rest of OpenSCAD syntax. So maybe this:
> 
>     [ for (x=[1,2,3,4,5,6] | while(prime(x))) [x, x*x] ]
> 
> In functional programming, you'd implement this using take_while, which returns the longest prefix of a sequence that matches a predicate. In OpenSCAD2, the code would look like this:
> 
>     [ for (x=[1,2,3,4,5,6] >> take_while(prime)) [x, x*x] ]
> 
> It's not much worse, and no additional syntax is added to the language, since take_while is a library function. There is also a drop_while function which discards initial elements that match the predicate, and I'm not sure if this is expressible using the LOOP macro.
> 
> - define more internal loop variables. inner scope only
> [for (x=1,2,3,4,5,6], start=12) x*start ]
> 
> But we already have syntax for this.
>     [for (x=[1,2,3,4,5,6]) let (start=12) x*start ]
>  
> - I can't imagine how to do if-then constructs and collect inside the
> existing syntax.
> 
> I had the same problem, reading your previous post. You wrote:
> 
> - using conditionals within the loop (as an operator, not a regular if
> statement)
> [for x below 10
>     if odd(x)
>     collect x into odds
>     else
>     collect x into evens
>     finally [odds, evens] ]
> gives [[1 3 5 7 9]  [0 2 4 6 8]]
> 
> In functional programming, this would be done using 'partition'.
>   partition(odd)([0:9])
> 
> Here is the non-recursive definition:
> partition(f)(s) =
>   let (p1 = [for (x=s) if (f(x)) x],
>        p2 = [for (x=s) if (!f(x)) x])
>   [p1,p2];
> 
> In summary, my counter-proposal is to add structured assignment to OpenSCAD2, and then provide library functions to make writing loops and list processing more convenient.
> 
> I'll admit I have a bias for the functional style of programming, since I'm used to that, and I don't have any experience using the Lisp LOOP macros. And I admit there's a learning curve; you need a cookbook to learn some of the common programming patterns. I'll be interested to know what other people think.
> 
> One thing to note: In my OpenSCAD2 list library, most functions have double argument lists, with the list in the second or outmost argument list. This allows you to chain together list operations the same way you can chain together geometric transforms in OpenSCAD.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From marius at kintel.net  Thu Jan  7 13:10:35 2016
From: marius at kintel.net (Marius Kintel)
Date: Thu, 7 Jan 2016 13:10:35 -0500
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <CAEEmnrM0AWpivW0c5kWddnCtydpGyxwJwJ0aBC5_6dk1zeUeLg@mail.gmail.com>
References: <CAGV6i+NXhpuNyzgQ6Sf5DRUTR5xuS1tK93qwH5zj2vm6554HjA@mail.gmail.com>
	<CAEEmnrM0AWpivW0c5kWddnCtydpGyxwJwJ0aBC5_6dk1zeUeLg@mail.gmail.com>
Message-ID: <8B02641F-643A-4791-88AB-1C40C9A50F5C@kintel.net>

> On Jan 7, 2016, at 12:40 PM, nop head <nop.head at gmail.com> wrote:
> 
> Fiddling about with the syntax of the source code when fundamental things like union and rotate don't produce the correct results seems pointless to me.
> 
Keep in mind that the skills, time and focus requirements for working on computational geometry problems are different than working on functional language constructs. There are also personal motivational aspects involved with contributing to Open Source projects.
We all contribute where knowledge, skills and time allows.

 -Marius



From nop.head at gmail.com  Thu Jan  7 13:19:07 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 7 Jan 2016 18:19:07 +0000
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <60E78594-2A45-4EA0-B538-6B704C1F2CEF@yahoo.com>
References: <CAGV6i+NXhpuNyzgQ6Sf5DRUTR5xuS1tK93qwH5zj2vm6554HjA@mail.gmail.com>
	<CAEEmnrM0AWpivW0c5kWddnCtydpGyxwJwJ0aBC5_6dk1zeUeLg@mail.gmail.com>
	<60E78594-2A45-4EA0-B538-6B704C1F2CEF@yahoo.com>
Message-ID: <CAEEmnrOwPNE+eNSZhbgAn5UwnwWJ683dcbDK62ecf1c2UXGP1Q@mail.gmail.com>

http://www.thingiverse.com/thing:239158

On 7 January 2016 at 17:58, Jean-Paul Louis <louijp at yahoo.com> wrote:

> How do you describe a Moebius ring in OpenScad?
>
> Just curious,
> Jean-Paul
> N1JPL
>
> > On Jan 7, 2016, at 12:40 PM, nop head <nop.head at gmail.com> wrote:
> >
> > >And I admit there's a learning curve; you need a cookbook to learn some
> of the common programming patterns. I'll be interested to know what other
> people think.
> >
> > I think we just don't need such language complexity to describe 3D
> objects.
> >
> > It there any 3D object that cannot be described by OpenScad as it stands
> now?
> >
> > I am far more interested in OpenScad producing numerically accurate
> results and getting faster than being able to accept more programming
> paradigms. Sure some things get expressed more succinctly but at the
> expense of being more cryptic and bringing the need to read up on several
> languages to understand the code.
> >
> > I only started this thread to propose a way of not having to create
> nested lists just to flatten them. It seems to have lead to a
> Frankenstein's monster of a loop syntax that combines bits from everybody's
> favourite languages.
> >
> > Fiddling about with the syntax of the source code when fundamental
> things like union and rotate don't produce the correct results seems
> pointless to me.
> >
> >
> > On 7 January 2016 at 17:03, doug moen <doug at moens.org> wrote:
> > Sorry about the negative tone of my response. I did get frustrated by
> your original post, though. It's written in a pseudo-code, somewhere
> between Lisp and OpenSCAD. Since you weren't proposing that as the final
> syntax, I tried to translate your examples into OpenSCAD syntax, and what I
> finally ended up with were list comprehensions + Haskell-inspired list
> functions. Which is not what you were proposing.
> >
> > The entire Genera OS was written in lisp on a lisp machine. Yes an
> entire OS in Lisp. It remains the best development system I worked on.
> >
> > I never had an opportunity to use a Lisp Machine. I'm a student of
> computer history, though, and it's legendary. I'd like to spend time
> playing with this software so that I can understand why it's the best
> development system ever. Maybe somebody will resurrect this in an emulator
> one day.
> >
> > - add structured assignment:
> > [for ([a b]=[[1 2] [3 4] [5 6]]) [b a] ]
> >    giving [[2 1] [4 3] [6 5]]
> >
> > I completely agree with adding structured assignment. I've been writing
> OpenSCAD2 code as part of a project, and I've added structured assignment,
> because it is so convenient for destructuring 2-vectors and 3-vectors in
> the style of geometric programming I'm playing with.
> >
> > Your example is pseudo code, so I'll translate to OpenSCAD syntax:
> >   [ for ([a,b] = [[1,2], [3,4], [5,6]]) [b,a] ]
> >
> > In my version of structured assignment,
> >   [a,b] = x
> > produces a run-time error if x is not a list of length 2. The syntax
> works in definitions, function formal parameter lists, and for statements.
> >
> > - add from
> > [ for (i=[1:10], j from 2) i*j ]
> >   where j starts at 2 and counts up. the i variable sets the termination
> of
> > the loop
> >   from could not appear on its own without a termination clause.
> >
> > You intend this to mean 2 loops running in parallel, instead of being
> nested. In OpenSCAD, the syntax
> >    for (i=[1:10], j=[2:11]) ...
> > looks like it would be good syntax for two parallel loops, but it's not.
> It actually means nested loops, same as
> >    for (i=[1:10]) for (j=[2:11]) ...
> > So I think there is a backward compatibility problem with expressing
> parallel loops in the way you suggest. The problem is in violating the
> expectations of OpenSCAD programmers, who expect 'for (i=.., j=..)' to mean
> nested loops.
> >
> > Your previous post had several examples of parallel loops. Here's one:
> >
> > - Create pairs
> > [for x = [1:5]
> >    for y = ["A","B","C","D","E"]
> >    do [x y]  ]
> > giving   [[1 A]  [2 B]  [3 C]  [4 D]  [5 E]]
> >
> > This is more pseudo-code. The problem is that if we convert this into
> OpenSCAD syntax, we get nested loops:
> >
> >   [for (x = [1:5])
> >     for (y = ["A","B","C","D","E"])
> >       [x,y]]
> > and the result is a list of 25 pairs.
> >
> > In functional style programming, you would create the pairs by calling
> transpose, which in OpenSCAD is matrix transpose from linear algebra.
> >    transpose([[1:5], ["A","B","C","D","E"]])
> >   => [[1,"A"], [2,"B"], [3,"C"], [4,"D"], [5,"E"]]
> >
> > (This works in OpenSCAD2 because [1:5] is operationally equivalent to
> [1,2,3,4,5] in all contexts.)
> >
> > We could invent a new syntax for parallel loops in OpenSCAD. Maybe this
> would work:
> >     for (x = xlist | y = ylist) ...
> >
> > Or we could just use transpose. Because this also works:
> >     for ([x,y] = transpose(xlist, ylist)) ...
> >
> > - loop terminatoin with while, or until, or just one and use not operator
> > for the other - for readability
> > [ for (x=1,2,3,4,5,6], while prime(x))  [ x, x*x] ]
> >   returning list of [x,x^2] until first non-prime encountered.
> >
> > I'm not sure about the , before the while, for reasons previously
> discussed. And the argument of 'while' should be parenthesized, for
> consistency with the rest of OpenSCAD syntax. So maybe this:
> >
> >     [ for (x=[1,2,3,4,5,6] | while(prime(x))) [x, x*x] ]
> >
> > In functional programming, you'd implement this using take_while, which
> returns the longest prefix of a sequence that matches a predicate. In
> OpenSCAD2, the code would look like this:
> >
> >     [ for (x=[1,2,3,4,5,6] >> take_while(prime)) [x, x*x] ]
> >
> > It's not much worse, and no additional syntax is added to the language,
> since take_while is a library function. There is also a drop_while function
> which discards initial elements that match the predicate, and I'm not sure
> if this is expressible using the LOOP macro.
> >
> > - define more internal loop variables. inner scope only
> > [for (x=1,2,3,4,5,6], start=12) x*start ]
> >
> > But we already have syntax for this.
> >     [for (x=[1,2,3,4,5,6]) let (start=12) x*start ]
> >
> > - I can't imagine how to do if-then constructs and collect inside the
> > existing syntax.
> >
> > I had the same problem, reading your previous post. You wrote:
> >
> > - using conditionals within the loop (as an operator, not a regular if
> > statement)
> > [for x below 10
> >     if odd(x)
> >     collect x into odds
> >     else
> >     collect x into evens
> >     finally [odds, evens] ]
> > gives [[1 3 5 7 9]  [0 2 4 6 8]]
> >
> > In functional programming, this would be done using 'partition'.
> >   partition(odd)([0:9])
> >
> > Here is the non-recursive definition:
> > partition(f)(s) =
> >   let (p1 = [for (x=s) if (f(x)) x],
> >        p2 = [for (x=s) if (!f(x)) x])
> >   [p1,p2];
> >
> > In summary, my counter-proposal is to add structured assignment to
> OpenSCAD2, and then provide library functions to make writing loops and
> list processing more convenient.
> >
> > I'll admit I have a bias for the functional style of programming, since
> I'm used to that, and I don't have any experience using the Lisp LOOP
> macros. And I admit there's a learning curve; you need a cookbook to learn
> some of the common programming patterns. I'll be interested to know what
> other people think.
> >
> > One thing to note: In my OpenSCAD2 list library, most functions have
> double argument lists, with the list in the second or outmost argument
> list. This allows you to chain together list operations the same way you
> can chain together geometric transforms in OpenSCAD.
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> >
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160107/8ba2ad49/attachment.html>

From mschafer at wireframe.biz  Thu Jan  7 14:54:41 2016
From: mschafer at wireframe.biz (Neon22)
Date: Thu, 7 Jan 2016 12:54:41 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452179016010-15538.post@n5.nabble.com>
References: <1451795809088-15423.post@n5.nabble.com>
	<1451802739662-15426.post@n5.nabble.com>
	<1451803285564-15427.post@n5.nabble.com>
	<1452093589497-15516.post@n5.nabble.com>
	<1452096287017-15518.post@n5.nabble.com>
	<1452099839557-15523.post@n5.nabble.com>
	<1452100070416-15524.post@n5.nabble.com>
	<1452134899156-15530.post@n5.nabble.com>
	<1452147995149-15532.post@n5.nabble.com>
	<1452179016010-15538.post@n5.nabble.com>
Message-ID: <1452196481306-15548.post@n5.nabble.com>

@unkerjay you're doing yeoman's work there. wish it was easier :(

I tried to make as few changes as possible so as to illustrate what I did.
It is clear there are still some problems on your end.
Most critical one is the font seems to not be joining up properly - or at
least that's how I interpret what I'm seeing in your screenshots. I'm
checking that on my end to make sure that's what it is.

The other problem is the fine detail in the thickness of the lettering. When
the 3D print software slices the object into rings, it has a lower limit on
how small a movement it can make. This is related to the physical printer
limitations and to the layer height of each of these slices. If they are too
small then the printer can't resolve them as separate elements.

The green shapeways file looks like its rounded everything - this might be
because the detail is too fine for sharp edges - but I don't know what
they're really doing.

The Blender fix. Manual is best IMHO. some helpers here:
  - "select non-manifold edges" in selection menu so you can see wher ethe
cracks are.
  - https://www.youtube.com/watch?v=41SzwLJf-oc  4 mins - no sound
  - https://i.materialise.com/blog/3d-printing-with-blender  10 mins -
pretty clear but does not fix non-manifold

The shapeways thin wall highlighting seems to be indicating the feature is
too fine for the slicer to resolve and therefore print. At 55mm overall
size, the text lines are just too thin.
The only way to reasonably fix this is to use a thicker font (bold?) or
scale the object up.
This is why I parameterised the font, text height, and interline spacing at
the top of the file - for easy adjustment.

I suggest you first set the physical size you want to print the object for.
Then set the font as large and as thick(bold) as possible, possibly make
another matching array of font heights for each line (because partridge line
has no number) to make it easy to set the numeric text bigger.

Then export and check in Blender for non-manifioldness - which is easy to
see and very clearly illustrates if object is watertight.
Then - rather than fix the problem in Blender - go back and adjust the
openscad script until its manifold in Blender.
Then go onto Shapeways and see how much it costs. I think they use a powder
tub system(SLS?) so no support structure so you don't need to cut in half.
https://www.shapeways.com/tutorials/design_rules_for_3d_printing
But if you use a different filamant based service - I'd cut it into two
objects, print and glue.

Good luck 



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15548.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Thu Jan  7 15:05:49 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Thu, 7 Jan 2016 21:05:49 +0100
Subject: [OpenSCAD] Changes to CGAL datastructures? Memory use.
In-Reply-To: <1452145786651-15531.post@n5.nabble.com>
References: <1452145786651-15531.post@n5.nabble.com>
Message-ID: <568EC51D.4020505@arnholm.org>

Hi,

I thought your case was interesting. It makes little sense that 3GB 
memory is required for rendering a surface of less than 300x300 data points.

I downloaded your file and tried to replicate your model: 
http://arnholm.org/software/as_csg/surface/surface_file.png

As you can see, it renders in 30 seconds in OpenSCAD without any 
problems after generating it with AngelScript CSG:
http://arnholm.org/software/as_csg/surface/surface_file.as
(the feature to read surface data from file is new)

Running the script to generate the OpenSCAD .csg took 1 second:
http://arnholm.org/software/as_csg/surface/surface_file_compilation.png

The OpenSCAD .csg file generated:
http://arnholm.org/software/as_csg/surface/surface_file.csg

After exporting to STL, it was checked in KISSlicer, no errors.

I don't know the details on how OpenSCAD internally represents and 
processes surface data read from file, but if one simply generates a 
lofted surface from the data points and then a polyhedron from that like 
in this case it works fairly well, as would be expected.

Carsten Arnholm


On 07. jan. 2016 06:49, MichaelAtOz wrote:
> OpenSCAD 2015.03-2/64
>
> When fiddling with the  surface issue
> <https://github.com/openscad/openscad/issues/1535>   doing
>
> union()
> {
>      translate([-5,0,5]) cube(1);
> 	surface(file = "model.data", center = true, invert = false);
> }
>
> It goes to nearly 3GB working set when rendering. It is a nearly 300x300
> surface.
>
> But the stats don't seem that big
>
> Compiling design (CSG Tree generation)...
> Rendering Polygon Mesh using CGAL...
> Geometries in cache: 5
> Geometry cache size in bytes: 71198536
> CGAL Polyhedrons in cache: 2
> CGAL cache size in bytes: 469181312
> Total rendering time: 0 hours, 5 minutes, 53 seconds
>     Top level object is a 3D object:
>     Simple:        yes
>     Vertices:   105562
>     Halfedges:  543928
>     Edges:      271964
>     Halffacets: 332808
>     Facets:     166404
>     Volumes:         2
> Rendering finished.
>
> And there is definitely memory leaks, when re-rendering, after adding a
> rotate & scale(1) the commit size got close to 8GB (fairly quickly). It then
> crashed.
>



From doug at moens.org  Thu Jan  7 15:14:14 2016
From: doug at moens.org (doug moen)
Date: Thu, 7 Jan 2016 15:14:14 -0500
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452179016010-15538.post@n5.nabble.com>
References: <1451700767298-15417.post@n5.nabble.com>
	<1451795809088-15423.post@n5.nabble.com>
	<1451802739662-15426.post@n5.nabble.com>
	<1451803285564-15427.post@n5.nabble.com>
	<1452093589497-15516.post@n5.nabble.com>
	<1452096287017-15518.post@n5.nabble.com>
	<1452099839557-15523.post@n5.nabble.com>
	<1452100070416-15524.post@n5.nabble.com>
	<1452134899156-15530.post@n5.nabble.com>
	<1452147995149-15532.post@n5.nabble.com>
	<1452179016010-15538.post@n5.nabble.com>
Message-ID: <CAGV6i+OYobp-M+oxeLXKwwvRW1OrV9ukfntWwS-UvDXSOHxYQQ@mail.gmail.com>

So you've got a working printable model, but Shapeways wants $400? Maybe
you should find a cheaper service. I've looked around a bit, and Shapeways
can charge 10x what a Chinese service charges. Not tried any of them yet.
Or check out your local brick+mortar 3D printshop, or your local
makerspace/fablab.

On 7 January 2016 at 10:03, unkerjay <unkerjay at centurylink.net> wrote:

> The fun I've been having:
>
> Shapeways - "Fixed"
> <http://forum.openscad.org/file/n15538/Shapeways_FIXED_PNG.png>
>
> Solidify (or Alt-S - doesn't matter which) - Blender
> <
> http://forum.openscad.org/file/n15538/Solidify_or_Alt-S_Blender_FIXED_PNG.png
> >
>
> Alt-S - Blender
> <http://forum.openscad.org/file/n15538/Alt_S_Blender_FIXED_PNG.png>
>
> NetFabb Basic - FIXED - in Shapeways
> <http://forum.openscad.org/file/n15538/NetFabb_Basic_FIXED_PNG.png>
>
> NetFabb Online - FIXED (Looks Good)
> <http://forum.openscad.org/file/n15538/NetFabb_Online_FIXED_PNG.png>
>
> As I said (LOOKED Good) - Wall Thickness Issues
> <http://forum.openscad.org/file/n15538/Meshlab_FIXED2_PNG.png>
>
> Wall Thickness - How bad is it?
> <http://forum.openscad.org/file/n15538/Shapeways_Wall_Thickness_PNG.png>
>
> After the "Fix"
> <
> http://forum.openscad.org/file/n15538/Shapeways_Wall_Thickness_FIXED_PNG.png
> >
>
> Last try - Meshlab (From Openscad - User Manual):
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/STL_Import_and_Export
>
> "In order to clean the STL file, you have the following options:
>
> - use http://wiki.netfabb.com/Semi-Automatic_Repair_Options . This will
> repair the holes but not the self-intersections.
>
> - use netfabb basic. This free software doesnt have the option to close
> holes nor can it fix the self-intersections
>
> - use MeshLab, This free software can fix all the issues
>
>
> Using MeshLab, you can do:
>
> - Render - Show non Manif Edges
>
> - Render - Show non Manif Vertices
>
> - if found, use Filters - Selection - Select non Manifold Edges or Select
> non Manifold Vertices - Apply - Close. Then click button 'Delete the
> current
> set of selected vertices...' or check
> http://www.youtube.com/watch?v=oDx0Tgy0UHo for an instruction video. The
> screen should show "0 non manifold edges", "0 non manifold vertices"
>
>
> Next, you can click the icon 'Fill Hole', select all the holes and click
> Fill and then Accept. You might have to redo this action a few times.
>
> Use File - Export Mesh to save the STL."
>
> Meshlab - "Fixed" All well and good
> <http://forum.openscad.org/file/n15538/Meshlab_FIXED_PNG.png>
>
> Meshlab - Not so good after all
> <http://forum.openscad.org/file/n15538/Meshlab_Shapeways_PNG.png>
>
> When Uploaded to Shapeways without any modifications whatsoever, it printed
> fine
> at 5.13 in.  Small detail: $ 405.57 (about 130 mm / 13 cm)
>
> So, I figured I'd rescale it to about 55 mm (little less than half the
> size).
>
> That's when the problems started.
>
> Price was right.
>
> Printability wasn't.
>
> So, there you have it.
>
> Not working so far.
>
> Valiant effort?
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15538.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160107/189fa11e/attachment.html>

From oz.at.michael at gmail.com  Thu Jan  7 15:40:18 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 7 Jan 2016 13:40:18 -0700 (MST)
Subject: [OpenSCAD] include is borked
In-Reply-To: <1452157444505-15533.post@n5.nabble.com>
References: <1452157444505-15533.post@n5.nabble.com>
Message-ID: <1452199218732-15551.post@n5.nabble.com>

Hi Chris,

Welcome to the forum. Your post is still flagged as "This post has NOT been
accepted by the mailing list yet", so nobody gets it unless they look. You
need to subscribe to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.

As Marius said, if you can post some code it's easier to help.

Also see https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Libraries for
details on paths etc.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/include-is-borked-tp15533p15551.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Jan  7 16:56:08 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 7 Jan 2016 14:56:08 -0700 (MST)
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <CAEEmnrM0AWpivW0c5kWddnCtydpGyxwJwJ0aBC5_6dk1zeUeLg@mail.gmail.com>
References: <CAEEmnrPkhwWK9K5AwOY8JfNkyDr6peGOkw=2Z6iZS07PiyVyVA@mail.gmail.com>
	<CAGV6i+NXhpuNyzgQ6Sf5DRUTR5xuS1tK93qwH5zj2vm6554HjA@mail.gmail.com>
	<CAEEmnrM0AWpivW0c5kWddnCtydpGyxwJwJ0aBC5_6dk1zeUeLg@mail.gmail.com>
Message-ID: <1452203768582-15552.post@n5.nabble.com>

nophead wrote
> Sure some things get expressed more succinctly but at the expense of being
> more cryptic and bringing the need to read up on several languages to
> understand the code.
> ...
> It seems to have lead to a Frankenstein's
> monster of a loop syntax that combines bits from everybody's favourite
> languages.

+1. I like the term  syntactic syrup
<https://en.wikipedia.org/wiki/Syntactic_sugar>  , /which is not a good
thing/.


kintel wrote
> Keep in mind that the skills, time and focus requirements for working on
> computational geometry problems are different than working on functional
> language constructs. There are also personal motivational aspects involved
> with contributing to Open Source projects.

Agreed, but transforming the language into something that can only be read
my Tibetan monks will solve your future maintenance issue.




-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/List-comprehensions-tp15321p15552.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From louijp at yahoo.com  Thu Jan  7 17:04:03 2016
From: louijp at yahoo.com (Jean-Paul Louis)
Date: Thu, 7 Jan 2016 17:04:03 -0500
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <CAEEmnrOwPNE+eNSZhbgAn5UwnwWJ683dcbDK62ecf1c2UXGP1Q@mail.gmail.com>
References: <CAGV6i+NXhpuNyzgQ6Sf5DRUTR5xuS1tK93qwH5zj2vm6554HjA@mail.gmail.com>
	<CAEEmnrM0AWpivW0c5kWddnCtydpGyxwJwJ0aBC5_6dk1zeUeLg@mail.gmail.com>
	<60E78594-2A45-4EA0-B538-6B704C1F2CEF@yahoo.com>
	<CAEEmnrOwPNE+eNSZhbgAn5UwnwWJ683dcbDK62ecf1c2UXGP1Q@mail.gmail.com>
Message-ID: <CBDF7C5E-16AF-4FAF-8627-1D910FCBC38E@yahoo.com>

nop head,

Thank you for the link.
I though there was tricky stuff, but solution is simple and elegant.

Jean-Paul
N1JPL

> On Jan 7, 2016, at 1:19 PM, nop head <nop.head at gmail.com> wrote:
> 
> http://www.thingiverse.com/thing:239158
> 
> On 7 January 2016 at 17:58, Jean-Paul Louis <louijp at yahoo.com> wrote:
> How do you describe a Moebius ring in OpenScad?
> 
> Just curious,
> Jean-Paul
> N1JPL
> 
> > On Jan 7, 2016, at 12:40 PM, nop head <nop.head at gmail.com> wrote:
> >
> > >And I admit there's a learning curve; you need a cookbook to learn some of the common programming patterns. I'll be interested to know what other people think.
> >
> > I think we just don't need such language complexity to describe 3D objects.
> >
> > It there any 3D object that cannot be described by OpenScad as it stands now?
> >
> > I am far more interested in OpenScad producing numerically accurate results and getting faster than being able to accept more programming paradigms. Sure some things get expressed more succinctly but at the expense of being more cryptic and bringing the need to read up on several languages to understand the code.
> >
> > I only started this thread to propose a way of not having to create nested lists just to flatten them. It seems to have lead to a Frankenstein's monster of a loop syntax that combines bits from everybody's favourite languages.
> >
> > Fiddling about with the syntax of the source code when fundamental things like union and rotate don't produce the correct results seems pointless to me.
> >
> >
> > On 7 January 2016 at 17:03, doug moen <doug at moens.org> wrote:
> > Sorry about the negative tone of my response. I did get frustrated by your original post, though. It's written in a pseudo-code, somewhere between Lisp and OpenSCAD. Since you weren't proposing that as the final syntax, I tried to translate your examples into OpenSCAD syntax, and what I finally ended up with were list comprehensions + Haskell-inspired list functions. Which is not what you were proposing.
> >
> > The entire Genera OS was written in lisp on a lisp machine. Yes an entire OS in Lisp. It remains the best development system I worked on.
> >
> > I never had an opportunity to use a Lisp Machine. I'm a student of computer history, though, and it's legendary. I'd like to spend time playing with this software so that I can understand why it's the best development system ever. Maybe somebody will resurrect this in an emulator one day.
> >
> > - add structured assignment:
> > [for ([a b]=[[1 2] [3 4] [5 6]]) [b a] ]
> >    giving [[2 1] [4 3] [6 5]]
> >
> > I completely agree with adding structured assignment. I've been writing OpenSCAD2 code as part of a project, and I've added structured assignment, because it is so convenient for destructuring 2-vectors and 3-vectors in the style of geometric programming I'm playing with.
> >
> > Your example is pseudo code, so I'll translate to OpenSCAD syntax:
> >   [ for ([a,b] = [[1,2], [3,4], [5,6]]) [b,a] ]
> >
> > In my version of structured assignment,
> >   [a,b] = x
> > produces a run-time error if x is not a list of length 2. The syntax works in definitions, function formal parameter lists, and for statements.
> >
> > - add from
> > [ for (i=[1:10], j from 2) i*j ]
> >   where j starts at 2 and counts up. the i variable sets the termination of
> > the loop
> >   from could not appear on its own without a termination clause.
> >
> > You intend this to mean 2 loops running in parallel, instead of being nested. In OpenSCAD, the syntax
> >    for (i=[1:10], j=[2:11]) ...
> > looks like it would be good syntax for two parallel loops, but it's not. It actually means nested loops, same as
> >    for (i=[1:10]) for (j=[2:11]) ...
> > So I think there is a backward compatibility problem with expressing parallel loops in the way you suggest. The problem is in violating the expectations of OpenSCAD programmers, who expect 'for (i=.., j=..)' to mean nested loops.
> >
> > Your previous post had several examples of parallel loops. Here's one:
> >
> > - Create pairs
> > [for x = [1:5]
> >    for y = ["A","B","C","D","E"]
> >    do [x y]  ]
> > giving   [[1 A]  [2 B]  [3 C]  [4 D]  [5 E]]
> >
> > This is more pseudo-code. The problem is that if we convert this into OpenSCAD syntax, we get nested loops:
> >
> >   [for (x = [1:5])
> >     for (y = ["A","B","C","D","E"])
> >       [x,y]]
> > and the result is a list of 25 pairs.
> >
> > In functional style programming, you would create the pairs by calling transpose, which in OpenSCAD is matrix transpose from linear algebra.
> >    transpose([[1:5], ["A","B","C","D","E"]])
> >   => [[1,"A"], [2,"B"], [3,"C"], [4,"D"], [5,"E"]]
> >
> > (This works in OpenSCAD2 because [1:5] is operationally equivalent to [1,2,3,4,5] in all contexts.)
> >
> > We could invent a new syntax for parallel loops in OpenSCAD. Maybe this would work:
> >     for (x = xlist | y = ylist) ...
> >
> > Or we could just use transpose. Because this also works:
> >     for ([x,y] = transpose(xlist, ylist)) ...
> >
> > - loop terminatoin with while, or until, or just one and use not operator
> > for the other - for readability
> > [ for (x=1,2,3,4,5,6], while prime(x))  [ x, x*x] ]
> >   returning list of [x,x^2] until first non-prime encountered.
> >
> > I'm not sure about the , before the while, for reasons previously discussed. And the argument of 'while' should be parenthesized, for consistency with the rest of OpenSCAD syntax. So maybe this:
> >
> >     [ for (x=[1,2,3,4,5,6] | while(prime(x))) [x, x*x] ]
> >
> > In functional programming, you'd implement this using take_while, which returns the longest prefix of a sequence that matches a predicate. In OpenSCAD2, the code would look like this:
> >
> >     [ for (x=[1,2,3,4,5,6] >> take_while(prime)) [x, x*x] ]
> >
> > It's not much worse, and no additional syntax is added to the language, since take_while is a library function. There is also a drop_while function which discards initial elements that match the predicate, and I'm not sure if this is expressible using the LOOP macro.
> >
> > - define more internal loop variables. inner scope only
> > [for (x=1,2,3,4,5,6], start=12) x*start ]
> >
> > But we already have syntax for this.
> >     [for (x=[1,2,3,4,5,6]) let (start=12) x*start ]
> >
> > - I can't imagine how to do if-then constructs and collect inside the
> > existing syntax.
> >
> > I had the same problem, reading your previous post. You wrote:
> >
> > - using conditionals within the loop (as an operator, not a regular if
> > statement)
> > [for x below 10
> >     if odd(x)
> >     collect x into odds
> >     else
> >     collect x into evens
> >     finally [odds, evens] ]
> > gives [[1 3 5 7 9]  [0 2 4 6 8]]
> >
> > In functional programming, this would be done using 'partition'.
> >   partition(odd)([0:9])
> >
> > Here is the non-recursive definition:
> > partition(f)(s) =
> >   let (p1 = [for (x=s) if (f(x)) x],
> >        p2 = [for (x=s) if (!f(x)) x])
> >   [p1,p2];
> >
> > In summary, my counter-proposal is to add structured assignment to OpenSCAD2, and then provide library functions to make writing loops and list processing more convenient.
> >
> > I'll admit I have a bias for the functional style of programming, since I'm used to that, and I don't have any experience using the Lisp LOOP macros. And I admit there's a learning curve; you need a cookbook to learn some of the common programming patterns. I'll be interested to know what other people think.
> >
> > One thing to note: In my OpenSCAD2 list library, most functions have double argument lists, with the list in the second or outmost argument list. This allows you to chain together list operations the same way you can chain together geometric transforms in OpenSCAD.
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> >
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From unkerjay at centurylink.net  Thu Jan  7 19:16:26 2016
From: unkerjay at centurylink.net (unkerjay)
Date: Thu, 7 Jan 2016 17:16:26 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452179016010-15538.post@n5.nabble.com>
References: <1451795809088-15423.post@n5.nabble.com>
	<1451802739662-15426.post@n5.nabble.com>
	<1451803285564-15427.post@n5.nabble.com>
	<1452093589497-15516.post@n5.nabble.com>
	<1452096287017-15518.post@n5.nabble.com>
	<1452099839557-15523.post@n5.nabble.com>
	<1452100070416-15524.post@n5.nabble.com>
	<1452134899156-15530.post@n5.nabble.com>
	<1452147995149-15532.post@n5.nabble.com>
	<1452179016010-15538.post@n5.nabble.com>
Message-ID: <1452212186553-15554.post@n5.nabble.com>

ONE more idea on this.

One other little trick suggested is to put a hole
in a "discreet" location (not sure that's an option
with this since any side can be UP).

But, as I understand, it give the material an out,
thereby reducing the cost.

So, I understand THIS is what would do it:

difference[edit]
Subtracts the 2nd (and all further) child nodes from the first one (logical
and not).
May be used with either 2D or 3D objects, but don't mix them.

and this is WHERE I'd like to:

<http://forum.openscad.org/file/n15554/dodec_hole_PNG.png> 

The example is of a cylinder through a cylinder.

Not a dodecahedron.

Anyone?

Thanx



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15554.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From unkerjay at centurylink.net  Thu Jan  7 19:20:36 2016
From: unkerjay at centurylink.net (unkerjay)
Date: Thu, 7 Jan 2016 17:20:36 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452212186553-15554.post@n5.nabble.com>
References: <1451802739662-15426.post@n5.nabble.com>
	<1451803285564-15427.post@n5.nabble.com>
	<1452093589497-15516.post@n5.nabble.com>
	<1452096287017-15518.post@n5.nabble.com>
	<1452099839557-15523.post@n5.nabble.com>
	<1452100070416-15524.post@n5.nabble.com>
	<1452134899156-15530.post@n5.nabble.com>
	<1452147995149-15532.post@n5.nabble.com>
	<1452179016010-15538.post@n5.nabble.com>
	<1452212186553-15554.post@n5.nabble.com>
Message-ID: <1452212436248-15555.post@n5.nabble.com>

Code:

Usage example:
difference() {
        cylinder (h = 4, r=1, center = true, $fn=100);
        rotate ([90,0,0]) cylinder (h = 4, r=0.9, center = true, $fn=100);
}

Source:
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/The_OpenSCAD_Language#boolean_overview



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15555.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Thu Jan  7 20:39:58 2016
From: marius at kintel.net (Marius Kintel)
Date: Thu, 7 Jan 2016 20:39:58 -0500
Subject: [OpenSCAD] Changes to CGAL datastructures? Memory use.
In-Reply-To: <568EC51D.4020505@arnholm.org>
References: <1452145786651-15531.post@n5.nabble.com>
	<568EC51D.4020505@arnholm.org>
Message-ID: <1A42A2FE-4F60-45E3-8F84-2478C72CF575@kintel.net>

> On Jan 7, 2016, at 15:05 PM, Carsten Arnholm <arnholm at arnholm.org> wrote:
> 
> I don't know the details on how OpenSCAD internally represents and processes surface data read from file, but if one simply generates a lofted surface from the data points and then a polyhedron from that like in this case it works fairly well, as would be expected.
> 
A stand-alone surface() is fast as it?s just a polygon mesh and we don?t need to touch CGAL. The issues happen when we do CSG ops on it - we then need to convert it into CGAL data structures, and CGAL subsequently uses a lot of memory building internal data structures while performing the CSG.

 -Marius



From marius at kintel.net  Thu Jan  7 20:44:32 2016
From: marius at kintel.net (Marius Kintel)
Date: Thu, 7 Jan 2016 20:44:32 -0500
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <1452203768582-15552.post@n5.nabble.com>
References: <CAEEmnrPkhwWK9K5AwOY8JfNkyDr6peGOkw=2Z6iZS07PiyVyVA@mail.gmail.com>
	<CAGV6i+NXhpuNyzgQ6Sf5DRUTR5xuS1tK93qwH5zj2vm6554HjA@mail.gmail.com>
	<CAEEmnrM0AWpivW0c5kWddnCtydpGyxwJwJ0aBC5_6dk1zeUeLg@mail.gmail.com>
	<1452203768582-15552.post@n5.nabble.com>
Message-ID: <1B4B81AB-A22F-4258-8F3D-FCDA01AD415F@kintel.net>

> On Jan 7, 2016, at 16:56 PM, MichaelAtOz <oz.at.michael at gmail.com> wrote:
> 
> Agreed, but transforming the language into something that can only be read
> my Tibetan monks will solve your future maintenance issue.
> 
Definitely. One rule I like to follow is ?make the easy stuff easy and the difficult stuff possible?. I think having good list comprehensions belong in the second half of that sentence.

Also note that in order to make more of the possible stuff easy in OpenSCAD2, we really need to clean up some of the language, and while at it make it more orthogonal, with more separation of concerns.
Some (or most?) of this will involve syntax nitpicking, which is really only interesting to a handful of people. I want to eventually make it easier for new users to participate in a discussion forum without having to click through a lot of internal and complex discussions. Ideas for how to achieve that would be welcome :)

 -Marius



From mschafer at wireframe.biz  Thu Jan  7 21:42:48 2016
From: mschafer at wireframe.biz (Neon22)
Date: Thu, 7 Jan 2016 19:42:48 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452212436248-15555.post@n5.nabble.com>
References: <1451803285564-15427.post@n5.nabble.com>
	<1452093589497-15516.post@n5.nabble.com>
	<1452096287017-15518.post@n5.nabble.com>
	<1452099839557-15523.post@n5.nabble.com>
	<1452100070416-15524.post@n5.nabble.com>
	<1452134899156-15530.post@n5.nabble.com>
	<1452147995149-15532.post@n5.nabble.com>
	<1452179016010-15538.post@n5.nabble.com>
	<1452212186553-15554.post@n5.nabble.com>
	<1452212436248-15555.post@n5.nabble.com>
Message-ID: <1452220968292-15558.post@n5.nabble.com>

ahh yes because shapeways charges you for the volume of the object, you need
a hole to let it get out. Its made of powder. However the inside of your
object also needs to be hollow.

Its not right now.... OOps.
In fact the entire linear_extrude in twosides() with its twist trick is to
make a solid. You want a thin outer sheet instead




--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15558.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Jan  7 22:29:23 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 7 Jan 2016 20:29:23 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452220968292-15558.post@n5.nabble.com>
References: <1452093589497-15516.post@n5.nabble.com>
	<1452096287017-15518.post@n5.nabble.com>
	<1452099839557-15523.post@n5.nabble.com>
	<1452100070416-15524.post@n5.nabble.com>
	<1452134899156-15530.post@n5.nabble.com>
	<1452147995149-15532.post@n5.nabble.com>
	<1452179016010-15538.post@n5.nabble.com>
	<1452212186553-15554.post@n5.nabble.com>
	<1452212436248-15555.post@n5.nabble.com>
	<1452220968292-15558.post@n5.nabble.com>
Message-ID: <1452223763557-15559.post@n5.nabble.com>

Make it hollow and difference() the text to be the holes.
Make the text a bit larger and use a Bold font.
Although the Shapeways change to introduce 'machine space' will probably
keep the cost high.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15559.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Thu Jan  7 22:45:26 2016
From: mschafer at wireframe.biz (Neon22)
Date: Thu, 7 Jan 2016 20:45:26 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452220968292-15558.post@n5.nabble.com>
References: <1452093589497-15516.post@n5.nabble.com>
	<1452096287017-15518.post@n5.nabble.com>
	<1452099839557-15523.post@n5.nabble.com>
	<1452100070416-15524.post@n5.nabble.com>
	<1452134899156-15530.post@n5.nabble.com>
	<1452147995149-15532.post@n5.nabble.com>
	<1452179016010-15538.post@n5.nabble.com>
	<1452212186553-15554.post@n5.nabble.com>
	<1452212436248-15555.post@n5.nabble.com>
	<1452220968292-15558.post@n5.nabble.com>
Message-ID: <1452224726874-15560.post@n5.nabble.com>

so twosides needs to be rebuilt with cylinder slabs:
module twosides(r=1, i=1)  {
	h = r*2.618;
	translate([0,0,h/2])
	rotate([0,0,36])
		cylinder(h=1, r=r*1.01, $fn=5, center=true);
	rotate([0,180,0])
	translate([0,0,h/2])
	rotate([0,0,36])
		cylinder(h=1, r=r*1.01, $fn=5, center=true);


to drill a hole.
You need to put this in dodekaeder() and union the twosides() together
before subtracting a "hole".
giving this:


strings = [["A", "Partridge", "in a","Pear Tree"], ["2"," Turtle", "Doves"],
		   ["3","French", "Hens"], ["4","Calling", "Birds"],
		   ["5","Golden", "Rings"], ["6","Geese", "a-laying"],
		   ["12","Drummers", "Drumming"],["7","Swans", "a-swimming"],
		   ["8","Maids", "a-milking"], ["9","Ladies","Dancing"],
		   ["10","Lords", "a-leaping"],["11","Pipers","Piping"]
		  ];

t_size = 7;
t_spacing = 1.9;
t_height = 1.9;
myfont = "Verdana:style=Bold";
Delta = 0.1;

dodekaeder(40);

module dodekaeder(r = 40)
{
  w = acos(1/sqrt(5));
  difference() {
	union() {
		rotate([0, 0, 180])
			twosides(r, 0);
		for(i=[0:4])
			rotate([0, -w, i*72])  // tricky!
			twosides(r, i+1);
	}
	// hole
	translate ([r*0.7,r*0.5,-r*1.3]) 
		cylinder (h = 3, r=r/20, center = true, $fn=8);
	}
}

module twosides(r=1, i=1)  {
	h = r*2.618;
	translate([0,0,h/2])
	rotate([0,0,36])
		cylinder(h=1, r=r*1.01, $fn=5, center=true);
	rotate([0,180,0])
	translate([0,0,h/2])
	rotate([0,0,36])
		cylinder(h=1, r=r*1.01, $fn=5, center=true);
 
  // text for upper and lower surface
	translate([0, 0, h/2-Delta])
		multilinetext(strings[i]);
	rotate([0, 180, 0])
	translate([0, 0, h/2-Delta])
		multilinetext(strings[i+6]);
}

// module twosides(r=1, i=1) // solid
// {
  // h = r*2.618;
  // linear_extrude(height = h, center = true, twist = 36) // tricky twist
  // circle(r, $fn=5);
 
  // // text for upper and lower surface
  // translate([0, 0, h/2-Delta])
  // multilinetext(strings[i]);
  // rotate([0, 180, 0])
  // translate([0, 0, h/2-Delta])
  // multilinetext(strings[i+6]);
// }

module multilinetext(t, spacing=t_spacing)
  for(i=[0:len(t)-1])  
    translate([0, (len(t)/2-i)*t_size*spacing, 0])  //Note the "1.5" = Line
Spacing
    linear_extrude(height = t_height)
      text(t[i],halign = "center", valign = "center",
size=t_size,font=myfont);

I'm interested to know how much it costs now. $400 was super expensive.
<http://forum.openscad.org/file/n15560/dodec_02_hollow_001307.png> 



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15560.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Jan  7 23:20:27 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 7 Jan 2016 21:20:27 -0700 (MST)
Subject: [OpenSCAD] Changes to CGAL datastructures? Memory use.
In-Reply-To: <568EC51D.4020505@arnholm.org>
References: <1452145786651-15531.post@n5.nabble.com>
	<568EC51D.4020505@arnholm.org>
Message-ID: <1452226827906-15561.post@n5.nabble.com>

cacb wrote
> I thought your case was interesting. It makes little sense that 3GB 
> memory is required for rendering a surface of less than 300x300 data
> points.

Yes. But CGAL uses rationals, I once tried to understand their data
structure, it was scary.

> I downloaded your file and tried to replicate your model: 
> http://arnholm.org/software/as_csg/surface/surface_file.png
> 
> As you can see, it renders in 30 seconds in OpenSCAD without any 
> problems after generating it with AngelScript CSG:

Thanks for that. OpenSCAD F6 of that .csg used ~700KB

OpenSCAD F6 of Anglescript .csg / OpenSCAD F6 of .scad below
Vertices:     7213/153572
Halfedges:   37566/874810
Edges:       18783/437405
Halffacets:  23144/567670
Facets:      11572/283835


> h = 30;
> r = 30;
> e = 3;
> union()
> {
> 
> translate([0,20,-0.5])
> rotate([90,0,0])
> cylinder(h=h+10, r=r+e, $fn=100);
> /*
> translate([0,0,15]) 
> rotate(-125, [0,0,1])
> translate([0.5,0,0])
> rotate(-90, [1,0,0])
> rotate(90, [0,1,0]) 
> */
> scale([0.154, 0.109, 1])
> surface(file = "model.data", center = true, invert = false);
> }





-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Changes-to-CGAL-datastructures-Memory-use-tp15531p15561.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Jan  7 23:50:15 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 7 Jan 2016 21:50:15 -0700 (MST)
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <1B4B81AB-A22F-4258-8F3D-FCDA01AD415F@kintel.net>
References: <CAEEmnrPkhwWK9K5AwOY8JfNkyDr6peGOkw=2Z6iZS07PiyVyVA@mail.gmail.com>
	<CAGV6i+NXhpuNyzgQ6Sf5DRUTR5xuS1tK93qwH5zj2vm6554HjA@mail.gmail.com>
	<CAEEmnrM0AWpivW0c5kWddnCtydpGyxwJwJ0aBC5_6dk1zeUeLg@mail.gmail.com>
	<1452203768582-15552.post@n5.nabble.com>
	<1B4B81AB-A22F-4258-8F3D-FCDA01AD415F@kintel.net>
Message-ID: <1452228615913-15562.post@n5.nabble.com>

kintel wrote
> I want to eventually make it easier for new users to participate in a
> discussion forum without having to click through a lot of internal and
> complex discussions. Ideas for how to achieve that would be welcome :)

Nabble can have sub forum (fora?), you could have an 'OpenSCAD Language
Development' sub-forum, it appears that a sub-forum can have a different
mailing-list archive, but I can't test as I don't  have a mailing-list. 
Where is lists.openscad.org hosted?




-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/List-comprehensions-tp15321p15562.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Fri Jan  8 02:36:12 2016
From: arnholm at arnholm.org (arnholm at arnholm.org)
Date: Fri, 08 Jan 2016 08:36:12 +0100
Subject: [OpenSCAD]
 =?utf-8?q?Changes_to_CGAL_datastructures=3F_Memory_use?=
 =?utf-8?q?=2E?=
In-Reply-To: <1A42A2FE-4F60-45E3-8F84-2478C72CF575@kintel.net>
References: <1452145786651-15531.post@n5.nabble.com>
	<568EC51D.4020505@arnholm.org>
	<1A42A2FE-4F60-45E3-8F84-2478C72CF575@kintel.net>
Message-ID: <340896fbcf5fb0aa0eb353091fc609a8@arnholm.org>

On 2016-01-08 02:39, Marius Kintel wrote:
> A stand-alone surface() is fast as it?s just a polygon mesh and we
> don?t need to touch CGAL. The issues happen when we do CSG ops on it -
> we then need to convert it into CGAL data structures, and CGAL
> subsequently uses a lot of memory building internal data structures
> while performing the CSG.

It was OpenSCAD that performed the CSG boolean operation with CGAL in 
both cases, using the exact same surface data file, directly or 
indirectly. Same computer (my ~4 year old Win7 desktop), same software 
(OpenSCAD 2015.03-2). But the experiences were miles apart.

In the case where AngelScript CSG prepared the .csg file, it took <1 sec 
to create the .csg and then OpenSCAD used 30sec to do the boolean 
operation with CGAL, consuming approximately 4-500 MB of RAM in the 
process. Perhaps reasonable, although I would have liked it to be 
faster.

In the case where OpenSCAD read the data file by itself, using the 
surface command, the boolean rendering with CGAL took nearly 30 minutes 
on my computer, consuming some 3-4GB of RAM in the process, essentially 
bringing the computer down on its knees. From the output one can observe 
that the number of resulting vertices and facets appear to be at least 
an order of magnitude larger in this case.

The difference is that in the AngelScript CSG case, OpenSCAD does not 
see the surface data file directly, but instead a ready made polyhedron. 
I suspect this polyhedron is much less dense than the equivalent data 
structure generated by OpenSCAD, it would explain the difference. The 
visual appearances of the end results are similar.

Carsten Arnholm


From stempeldergeschichte at googlemail.com  Fri Jan  8 09:16:44 2016
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Fri, 8 Jan 2016 15:16:44 +0100
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452224726874-15560.post@n5.nabble.com>
References: <1452093589497-15516.post@n5.nabble.com>
	<1452096287017-15518.post@n5.nabble.com>
	<1452099839557-15523.post@n5.nabble.com>
	<1452100070416-15524.post@n5.nabble.com>
	<1452134899156-15530.post@n5.nabble.com>
	<1452147995149-15532.post@n5.nabble.com>
	<1452179016010-15538.post@n5.nabble.com>
	<1452212186553-15554.post@n5.nabble.com>
	<1452212436248-15555.post@n5.nabble.com>
	<1452220968292-15558.post@n5.nabble.com>
	<1452224726874-15560.post@n5.nabble.com>
Message-ID: <CAJgOqABm2Kh9DtQcDcKUt2pbCwt0JhiQuJSQx7EOgf61LsUizw@mail.gmail.com>

Hi unkerjay,

maybe you should have a look into low polygon count fonts.

I have an extrem low polygon count on thingiverse:
http://www.thingiverse.com/thing:79905
I designed it to have a minimal number of polygons. Now, I know it is not
the most readable font.

Have fun,

TakeItAndRun

2016-01-08 4:45 GMT+01:00 Neon22 <mschafer at wireframe.biz>:

> so twosides needs to be rebuilt with cylinder slabs:
> module twosides(r=1, i=1)  {
>         h = r*2.618;
>         translate([0,0,h/2])
>         rotate([0,0,36])
>                 cylinder(h=1, r=r*1.01, $fn=5, center=true);
>         rotate([0,180,0])
>         translate([0,0,h/2])
>         rotate([0,0,36])
>                 cylinder(h=1, r=r*1.01, $fn=5, center=true);
>
>
> to drill a hole.
> You need to put this in dodekaeder() and union the twosides() together
> before subtracting a "hole".
> giving this:
>
>
> strings = [["A", "Partridge", "in a","Pear Tree"], ["2"," Turtle",
> "Doves"],
>                    ["3","French", "Hens"], ["4","Calling", "Birds"],
>                    ["5","Golden", "Rings"], ["6","Geese", "a-laying"],
>                    ["12","Drummers", "Drumming"],["7","Swans",
> "a-swimming"],
>                    ["8","Maids", "a-milking"], ["9","Ladies","Dancing"],
>                    ["10","Lords", "a-leaping"],["11","Pipers","Piping"]
>                   ];
>
> t_size = 7;
> t_spacing = 1.9;
> t_height = 1.9;
> myfont = "Verdana:style=Bold";
> Delta = 0.1;
>
> dodekaeder(40);
>
> module dodekaeder(r = 40)
> {
>   w = acos(1/sqrt(5));
>   difference() {
>         union() {
>                 rotate([0, 0, 180])
>                         twosides(r, 0);
>                 for(i=[0:4])
>                         rotate([0, -w, i*72])  // tricky!
>                         twosides(r, i+1);
>         }
>         // hole
>         translate ([r*0.7,r*0.5,-r*1.3])
>                 cylinder (h = 3, r=r/20, center = true, $fn=8);
>         }
> }
>
> module twosides(r=1, i=1)  {
>         h = r*2.618;
>         translate([0,0,h/2])
>         rotate([0,0,36])
>                 cylinder(h=1, r=r*1.01, $fn=5, center=true);
>         rotate([0,180,0])
>         translate([0,0,h/2])
>         rotate([0,0,36])
>                 cylinder(h=1, r=r*1.01, $fn=5, center=true);
>
>   // text for upper and lower surface
>         translate([0, 0, h/2-Delta])
>                 multilinetext(strings[i]);
>         rotate([0, 180, 0])
>         translate([0, 0, h/2-Delta])
>                 multilinetext(strings[i+6]);
> }
>
> // module twosides(r=1, i=1) // solid
> // {
>   // h = r*2.618;
>   // linear_extrude(height = h, center = true, twist = 36) // tricky twist
>   // circle(r, $fn=5);
>
>   // // text for upper and lower surface
>   // translate([0, 0, h/2-Delta])
>   // multilinetext(strings[i]);
>   // rotate([0, 180, 0])
>   // translate([0, 0, h/2-Delta])
>   // multilinetext(strings[i+6]);
> // }
>
> module multilinetext(t, spacing=t_spacing)
>   for(i=[0:len(t)-1])
>     translate([0, (len(t)/2-i)*t_size*spacing, 0])  //Note the "1.5" = Line
> Spacing
>     linear_extrude(height = t_height)
>       text(t[i],halign = "center", valign = "center",
> size=t_size,font=myfont);
>
> I'm interested to know how much it costs now. $400 was super expensive.
> <http://forum.openscad.org/file/n15560/dodec_02_hollow_001307.png>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15560.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160108/29fde288/attachment.html>

From unkerjay at centurylink.net  Fri Jan  8 09:30:36 2016
From: unkerjay at centurylink.net (unkerjay)
Date: Fri, 8 Jan 2016 07:30:36 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452224726874-15560.post@n5.nabble.com>
References: <1452096287017-15518.post@n5.nabble.com>
	<1452099839557-15523.post@n5.nabble.com>
	<1452100070416-15524.post@n5.nabble.com>
	<1452134899156-15530.post@n5.nabble.com>
	<1452147995149-15532.post@n5.nabble.com>
	<1452179016010-15538.post@n5.nabble.com>
	<1452212186553-15554.post@n5.nabble.com>
	<1452212436248-15555.post@n5.nabble.com>
	<1452220968292-15558.post@n5.nabble.com>
	<1452224726874-15560.post@n5.nabble.com>
Message-ID: <1452263436638-15565.post@n5.nabble.com>

Thanx.

Here's what I'm doing so far.

Let's see how it works.

Applying your code, complete with hole.

Reducing the size of the font and the
dodec in Openscad.  If it's going to 
print at all, it might as well print at
half the size and hopefully half (-)
the cost.

And I've switched the font to one of
the boldest fonts I've found:

Revolution (Free Font):

http://www.dafont.com/revolution-saji.font

Downside, it doesn't have numbers or 
hyphens.  But, that just translates
ALL the text to TEXT.  So, better in
that regard as well.

Now, let's see just how much difference
all these changes make.

Stay tuned.



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15565.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jdawgaz at gmail.com  Fri Jan  8 10:57:36 2016
From: jdawgaz at gmail.com (Jerry Davis)
Date: Fri, 8 Jan 2016 08:57:36 -0700
Subject: [OpenSCAD] rotate_extrude() what is the angle for?
In-Reply-To: <CAMyDR6JN8uq6-YrmoYM=+s=MKVzS5G7Z1ivxyQhDSMXmjF-J6Q@mail.gmail.com>
References: <CAMyDR6JeHykKOK8SHbYZ3zGD82P-vjcgXYCrMA96EoKheOTtdw@mail.gmail.com>
	<CAGV6i+O2A0kOhfpih_RhicvLqZmmLvV0Do71L_KAYsnvLY7fGw@mail.gmail.com>
	<CAMyDR6L1yJp0Nxx-tu03Dsyr4JWFnjHeiBWJuQ4VG+duJAgpNg@mail.gmail.com>
	<21D97208-7E11-4691-904F-F1F9A7A4614E@kintel.net>
	<CAMyDR6JN8uq6-YrmoYM=+s=MKVzS5G7Z1ivxyQhDSMXmjF-J6Q@mail.gmail.com>
Message-ID: <CAMyDR6KFxZzTxvpL6yve5inhq9R36XNVsw8Wa-ChNbTBEgzrSQ@mail.gmail.com>

I am tutoring my friends (who unfortunately only have windows)
Will the latest 2015.10.17 dev snapshot work with the new code that has
angle working (like my osx 2015.12.02?)



--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson

On Wed, Dec 16, 2015 at 12:04 PM, Jerry Davis <jdawgaz at gmail.com> wrote:

> just got the 2015.12.02 and it works!
> just jumped the gun on this is all.
>
>
> --
> Extra Ham Operator: K7AZJ
> Registered Linux User: 275424
> Raspberry Pi and Arduino developer
>
>
> *The most exciting phrase to hear in science - the one that heralds new
> discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov
>
> *I*
> *f you give someone a program, you will frustrate them for a day; if you
> teach them how to program, you will frustrate them for a lifetime. *-
> Anonymous
>
>
> *If writing good code requires very little comments, then writing really
> excellent code requires no comments at all!*- Ken Thompson
>
> On Wed, Dec 16, 2015 at 11:58 AM, Marius Kintel <marius at kintel.net> wrote:
>
>>
>> > On Dec 16, 2015, at 11:39 AM, Jerry Davis <jdawgaz at gmail.com> wrote:
>> >
>> > so, what WILL it be used for then? to stop at the angle you want
>> (instead of 360) of the the rotate_extrude? or is that in the earlier
>> thread?
>> >
>> Exactly.
>> See here for the updated example:
>>
>> https://github.com/openscad/openscad/blob/master/examples/Basics/rotate_extrude.scad
>>
>> https://github.com/openscad/openscad/blob/master/tests/regression/opencsgtest/rotate_extrude-expected.png
>>
>>  -Marius
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160108/6e402c98/attachment.html>

From unkerjay at centurylink.net  Fri Jan  8 12:20:29 2016
From: unkerjay at centurylink.net (unkerjay)
Date: Fri, 8 Jan 2016 10:20:29 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452263436638-15565.post@n5.nabble.com>
References: <1452099839557-15523.post@n5.nabble.com>
	<1452100070416-15524.post@n5.nabble.com>
	<1452134899156-15530.post@n5.nabble.com>
	<1452147995149-15532.post@n5.nabble.com>
	<1452179016010-15538.post@n5.nabble.com>
	<1452212186553-15554.post@n5.nabble.com>
	<1452212436248-15555.post@n5.nabble.com>
	<1452220968292-15558.post@n5.nabble.com>
	<1452224726874-15560.post@n5.nabble.com>
	<1452263436638-15565.post@n5.nabble.com>
Message-ID: <1452273629215-15567.post@n5.nabble.com>

yay. 

I mean YAYYYY!

<http://forum.openscad.org/file/n15567/YAY_WE_did_it_part1_PNG.png> 

and after a LITTLE repairing (for...  "Wall Thickness")

<http://forum.openscad.org/file/n15567/YAY_WE_did_it_part2_PNG.png> 

SIGNIFICANT reduction in size AND cost.

Stick a fork in it.

It's DONE.



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15567.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Fri Jan  8 12:42:11 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Fri, 8 Jan 2016 18:42:11 +0100
Subject: [OpenSCAD] export() function.
In-Reply-To: <CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
Message-ID: <568FF4F3.40407@gmx.de>

On 01/06/2016 08:57 PM, Mihail Vasiliev wrote:
> 1. How is the difference between preview and render mode handled with
> export()? 
> 
> The very exact way another side-effecting operation - "echo" does. 
> It does it's dirty job on "instantiate" call to corresponding AbstractNode.
> 
So it would try to generate the full mesh (aka. F6) for this part
of the model for each preview and export the file. I don't think
this is a good way of handling it. See below for more details...

> 3. How will that interact with animation?
> 
> Yes, I regenerates file on each frame, and can be used to create series
> of exported files of each time step. e.g. the code:
> 
> export(file=str("gg",$t,".stl")) rotate([$t*50,0,0]) cube([10,10,10]);
> 
Ok, that might be useful in some rare cases, but it looks a bit like
misusing the animation feature.

> 1. OpenSCAD is not a procedural programming language. It is a purely
> declarative language for describing geometry. This is the primary issue.
> 
> And why the way to output for this geometry is obligated to be declared
> in command line, not in the language itself?
>
I would not say it's impossible to use some language feature to declare
what to export. The main issue is the immediate execution which the
code is compiled.

Trying to find the analogy to C++ here, we _only_ have the compilation
step where you do "gcc -o program.exe file.c" and the analog part would
be "openscad -o model.stl file.scad".
So mapping the immediate execution of export() to gcc would be like
exporting another file while the compiler is running via #export file.out
or something similar.

Actually running as program does not really happen with OpenSCAD models,
as they are essentially a data structure that is evaluated by different
things.

Those things can be:
* F5 preview renderer in OpenSCAD GUI
* F6 mesh calculation in OpenSCAD GUI or command line
* various exports to different formats in OpenSCAD GUI or command line
* import into other programs, namely FreeCAD

Most notably here is the last point which highlights the interpretation
of SCAD (or it's simplified form CSG) files as data. What would FreeCAD
do with an export() node when reading the file?

It's true that echo() is also fitting into that problem area, it mainly
has the argument that there would be almost no debugging possibility
without it.

I think having some capabilities to markup/annotate parts of a model
to tell the OpenSCAD GUI what to do when interpreting the data could
cover both issues: a) leaving the scad script as a data description
while still b) allowing the user to export multiple parts at once.
All this without interfering with other programs that might want to
import the file or making the preview slow due to forced mesh generation.
Also annotations allow more control about export details, as for
instance the DXF export would benefit from defining model parts
as different layer while still exporting into a single file.

Maybe we can work together moving into that direction? The actual
feature for exporting multiple files / multiple layer would be
awesome to have and surely welcomed by a number of people.

ciao,
  Torsten.



From doug at moens.org  Fri Jan  8 13:57:11 2016
From: doug at moens.org (doug moen)
Date: Fri, 8 Jan 2016 13:57:11 -0500
Subject: [OpenSCAD] export() function.
In-Reply-To: <568FF4F3.40407@gmx.de>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
Message-ID: <CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>

The animate feature doesn't create an output file for each frame *unless*
you select the "dump images" option. There's currently no option to export
each frame as stl. *If* we added such a feature, only then would it make
sense to export tagged subtrees as stl for each frame.

On Friday, 8 January 2016, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 01/06/2016 08:57 PM, Mihail Vasiliev wrote:
> > 1. How is the difference between preview and render mode handled with
> > export()?
> >
> > The very exact way another side-effecting operation - "echo" does.
> > It does it's dirty job on "instantiate" call to corresponding
> AbstractNode.
> >
> So it would try to generate the full mesh (aka. F6) for this part
> of the model for each preview and export the file. I don't think
> this is a good way of handling it. See below for more details...
>
> > 3. How will that interact with animation?
> >
> > Yes, I regenerates file on each frame, and can be used to create series
> > of exported files of each time step. e.g. the code:
> >
> > export(file=str("gg",$t,".stl")) rotate([$t*50,0,0]) cube([10,10,10]);
> >
> Ok, that might be useful in some rare cases, but it looks a bit like
> misusing the animation feature.
>
> > 1. OpenSCAD is not a procedural programming language. It is a purely
> > declarative language for describing geometry. This is the primary issue.
> >
> > And why the way to output for this geometry is obligated to be declared
> > in command line, not in the language itself?
> >
> I would not say it's impossible to use some language feature to declare
> what to export. The main issue is the immediate execution which the
> code is compiled.
>
> Trying to find the analogy to C++ here, we _only_ have the compilation
> step where you do "gcc -o program.exe file.c" and the analog part would
> be "openscad -o model.stl file.scad".
> So mapping the immediate execution of export() to gcc would be like
> exporting another file while the compiler is running via #export file.out
> or something similar.
>
> Actually running as program does not really happen with OpenSCAD models,
> as they are essentially a data structure that is evaluated by different
> things.
>
> Those things can be:
> * F5 preview renderer in OpenSCAD GUI
> * F6 mesh calculation in OpenSCAD GUI or command line
> * various exports to different formats in OpenSCAD GUI or command line
> * import into other programs, namely FreeCAD
>
> Most notably here is the last point which highlights the interpretation
> of SCAD (or it's simplified form CSG) files as data. What would FreeCAD
> do with an export() node when reading the file?
>
> It's true that echo() is also fitting into that problem area, it mainly
> has the argument that there would be almost no debugging possibility
> without it.
>
> I think having some capabilities to markup/annotate parts of a model
> to tell the OpenSCAD GUI what to do when interpreting the data could
> cover both issues: a) leaving the scad script as a data description
> while still b) allowing the user to export multiple parts at once.
> All this without interfering with other programs that might want to
> import the file or making the preview slow due to forced mesh generation.
> Also annotations allow more control about export details, as for
> instance the DXF export would benefit from defining model parts
> as different layer while still exporting into a single file.
>
> Maybe we can work together moving into that direction? The actual
> feature for exporting multiple files / multiple layer would be
> awesome to have and surely welcomed by a number of people.
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org <javascript:;>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160108/e2e1e7bb/attachment.html>

From marius at kintel.net  Fri Jan  8 15:37:11 2016
From: marius at kintel.net (Marius Kintel)
Date: Fri, 8 Jan 2016 15:37:11 -0500
Subject: [OpenSCAD] List comprehensions
In-Reply-To: <1452228615913-15562.post@n5.nabble.com>
References: <CAEEmnrPkhwWK9K5AwOY8JfNkyDr6peGOkw=2Z6iZS07PiyVyVA@mail.gmail.com>
	<CAGV6i+NXhpuNyzgQ6Sf5DRUTR5xuS1tK93qwH5zj2vm6554HjA@mail.gmail.com>
	<CAEEmnrM0AWpivW0c5kWddnCtydpGyxwJwJ0aBC5_6dk1zeUeLg@mail.gmail.com>
	<1452203768582-15552.post@n5.nabble.com>
	<1B4B81AB-A22F-4258-8F3D-FCDA01AD415F@kintel.net>
	<1452228615913-15562.post@n5.nabble.com>
Message-ID: <514A1DA6-72B9-441A-97E9-362F640C34C7@kintel.net>

> On Jan 7, 2016, at 23:50 PM, MichaelAtOz <oz.at.michael at gmail.com> wrote:
> 
> Nabble can have sub forum (fora?), you could have an 'OpenSCAD Language
> Development' sub-forum, it appears that a sub-forum can have a different
> mailing-list archive, but I can't test as I don't  have a mailing-list. 
> Where is lists.openscad.org hosted?
> 
http://www.emwd.com/mailman-hosting/

I have a feeling the next tier of users may be less interested in jumping through the signup hoops and want a less committal approach to forums. I?m casually looking around for alternative forum engines. I just don?t want to let go of the mailing list format for the current type of discussions : /

 -Marius



From marius at kintel.net  Fri Jan  8 15:55:37 2016
From: marius at kintel.net (Marius Kintel)
Date: Fri, 8 Jan 2016 15:55:37 -0500
Subject: [OpenSCAD] rotate_extrude() what is the angle for?
In-Reply-To: <CAMyDR6KFxZzTxvpL6yve5inhq9R36XNVsw8Wa-ChNbTBEgzrSQ@mail.gmail.com>
References: <CAMyDR6JeHykKOK8SHbYZ3zGD82P-vjcgXYCrMA96EoKheOTtdw@mail.gmail.com>
	<CAGV6i+O2A0kOhfpih_RhicvLqZmmLvV0Do71L_KAYsnvLY7fGw@mail.gmail.com>
	<CAMyDR6L1yJp0Nxx-tu03Dsyr4JWFnjHeiBWJuQ4VG+duJAgpNg@mail.gmail.com>
	<21D97208-7E11-4691-904F-F1F9A7A4614E@kintel.net>
	<CAMyDR6JN8uq6-YrmoYM=+s=MKVzS5G7Z1ivxyQhDSMXmjF-J6Q@mail.gmail.com>
	<CAMyDR6KFxZzTxvpL6yve5inhq9R36XNVsw8Wa-ChNbTBEgzrSQ@mail.gmail.com>
Message-ID: <C85AED9C-7523-458F-A031-51C12661C4AF@kintel.net>

> On Jan 8, 2016, at 10:57 AM, Jerry Davis <jdawgaz at gmail.com> wrote:
> 
> I am tutoring my friends (who unfortunately only have windows)
> Will the latest 2015.10.17 dev snapshot work with the new code that has angle working (like my osx 2015.12.02?)
> 
Any snapshot after 2015.11.20 will work.
We should probably get an new Windows snapshot up..

 -Marius



From marius at kintel.net  Fri Jan  8 16:12:30 2016
From: marius at kintel.net (Marius Kintel)
Date: Fri, 8 Jan 2016 16:12:30 -0500
Subject: [OpenSCAD] Changes to CGAL datastructures? Memory use.
In-Reply-To: <340896fbcf5fb0aa0eb353091fc609a8@arnholm.org>
References: <1452145786651-15531.post@n5.nabble.com>
	<568EC51D.4020505@arnholm.org>
	<1A42A2FE-4F60-45E3-8F84-2478C72CF575@kintel.net>
	<340896fbcf5fb0aa0eb353091fc609a8@arnholm.org>
Message-ID: <4F5EB9A1-64EA-4B7A-9215-C5C88AE39B78@kintel.net>

> On Jan 8, 2016, at 02:36 AM, arnholm at arnholm.org wrote:
> 
> It was OpenSCAD that performed the CSG boolean operation with CGAL in both cases, using the exact same surface data file, directly or indirectly. Same computer (my ~4 year old Win7 desktop), same software (OpenSCAD 2015.03-2). But the experiences were miles apart.
> 
You forgot a tiny detail: Your polyhedron only contains ca. 1/9th of the pixels from the image.
I didn?t find your code anywhere so I cannot tell what you did wrong, but I guess just just skipped 8 lines from the data file for every line you used.

 -Marius



From mschafer at wireframe.biz  Fri Jan  8 17:03:49 2016
From: mschafer at wireframe.biz (Neon22)
Date: Fri, 8 Jan 2016 15:03:49 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452273629215-15567.post@n5.nabble.com>
References: <1452100070416-15524.post@n5.nabble.com>
	<1452134899156-15530.post@n5.nabble.com>
	<1452147995149-15532.post@n5.nabble.com>
	<1452179016010-15538.post@n5.nabble.com>
	<1452212186553-15554.post@n5.nabble.com>
	<1452212436248-15555.post@n5.nabble.com>
	<1452220968292-15558.post@n5.nabble.com>
	<1452224726874-15560.post@n5.nabble.com>
	<1452263436638-15565.post@n5.nabble.com>
	<1452273629215-15567.post@n5.nabble.com>
Message-ID: <1452290629222-15573.post@n5.nabble.com>

congrats. to get rid of that edge seam at the boundary of the faces - try
adjusting the 1.01 in the two lines that look like this:
    cylinder(h=1, r=r*1.01, $fn=5, center=true);



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15573.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Fri Jan  8 17:11:06 2016
From: mschafer at wireframe.biz (Neon22)
Date: Fri, 8 Jan 2016 15:11:06 -0700 (MST)
Subject: [OpenSCAD] Text on a dodecahedron
In-Reply-To: <1452290629222-15573.post@n5.nabble.com>
References: <1452134899156-15530.post@n5.nabble.com>
	<1452147995149-15532.post@n5.nabble.com>
	<1452179016010-15538.post@n5.nabble.com>
	<1452212186553-15554.post@n5.nabble.com>
	<1452212436248-15555.post@n5.nabble.com>
	<1452220968292-15558.post@n5.nabble.com>
	<1452224726874-15560.post@n5.nabble.com>
	<1452263436638-15565.post@n5.nabble.com>
	<1452273629215-15567.post@n5.nabble.com>
	<1452290629222-15573.post@n5.nabble.com>
Message-ID: <1452291066252-15574.post@n5.nabble.com>

Because you had to do "Wall thickness" fix this means the text is right at
the boundary of looking OK or not.
IMHO - you could try to make it a little bigger to improve this.

also fork now in it.  (http://www.thingiverse.com/thing:226875)
<http://forum.openscad.org/file/n15574/forkinit_001308.png> 



--
View this message in context: http://forum.openscad.org/Text-on-a-dodecahedron-tp15409p15574.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mickvav at gmail.com  Fri Jan  8 18:22:30 2016
From: mickvav at gmail.com (Mihail Vasiliev)
Date: Sat, 9 Jan 2016 02:22:30 +0300
Subject: [OpenSCAD] export() function.
In-Reply-To: <CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
Message-ID: <CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>

May be it's better to leave this decision to end user, whether to use
export keyword or not?

On compatibility with other software-I'm not sure, how FreeCAD parses
unknown predicates, but if it behaves like OpenSCAD - just ignores
corresponding subtree, everythings should be fine - it will just show the
same - nothing.
8 ???. 2016 ?. 9:58 PM ???????????? "doug moen" <doug at moens.org> ???????:

> The animate feature doesn't create an output file for each frame *unless*
> you select the "dump images" option. There's currently no option to export
> each frame as stl. *If* we added such a feature, only then would it make
> sense to export tagged subtrees as stl for each frame.
>
> On Friday, 8 January 2016, Torsten Paul <Torsten.Paul at gmx.de> wrote:
>
>> On 01/06/2016 08:57 PM, Mihail Vasiliev wrote:
>> > 1. How is the difference between preview and render mode handled with
>> > export()?
>> >
>> > The very exact way another side-effecting operation - "echo" does.
>> > It does it's dirty job on "instantiate" call to corresponding
>> AbstractNode.
>> >
>> So it would try to generate the full mesh (aka. F6) for this part
>> of the model for each preview and export the file. I don't think
>> this is a good way of handling it. See below for more details...
>>
>> > 3. How will that interact with animation?
>> >
>> > Yes, I regenerates file on each frame, and can be used to create series
>> > of exported files of each time step. e.g. the code:
>> >
>> > export(file=str("gg",$t,".stl")) rotate([$t*50,0,0]) cube([10,10,10]);
>> >
>> Ok, that might be useful in some rare cases, but it looks a bit like
>> misusing the animation feature.
>>
>> > 1. OpenSCAD is not a procedural programming language. It is a purely
>> > declarative language for describing geometry. This is the primary issue.
>> >
>> > And why the way to output for this geometry is obligated to be declared
>> > in command line, not in the language itself?
>> >
>> I would not say it's impossible to use some language feature to declare
>> what to export. The main issue is the immediate execution which the
>> code is compiled.
>>
>> Trying to find the analogy to C++ here, we _only_ have the compilation
>> step where you do "gcc -o program.exe file.c" and the analog part would
>> be "openscad -o model.stl file.scad".
>> So mapping the immediate execution of export() to gcc would be like
>> exporting another file while the compiler is running via #export file.out
>> or something similar.
>>
>> Actually running as program does not really happen with OpenSCAD models,
>> as they are essentially a data structure that is evaluated by different
>> things.
>>
>> Those things can be:
>> * F5 preview renderer in OpenSCAD GUI
>> * F6 mesh calculation in OpenSCAD GUI or command line
>> * various exports to different formats in OpenSCAD GUI or command line
>> * import into other programs, namely FreeCAD
>>
>> Most notably here is the last point which highlights the interpretation
>> of SCAD (or it's simplified form CSG) files as data. What would FreeCAD
>> do with an export() node when reading the file?
>>
>> It's true that echo() is also fitting into that problem area, it mainly
>> has the argument that there would be almost no debugging possibility
>> without it.
>>
>> I think having some capabilities to markup/annotate parts of a model
>> to tell the OpenSCAD GUI what to do when interpreting the data could
>> cover both issues: a) leaving the scad script as a data description
>> while still b) allowing the user to export multiple parts at once.
>> All this without interfering with other programs that might want to
>> import the file or making the preview slow due to forced mesh generation.
>> Also annotations allow more control about export details, as for
>> instance the DXF export would benefit from defining model parts
>> as different layer while still exporting into a single file.
>>
>> Maybe we can work together moving into that direction? The actual
>> feature for exporting multiple files / multiple layer would be
>> awesome to have and surely welcomed by a number of people.
>>
>> ciao,
>>   Torsten.
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160109/80f8b2e0/attachment.html>

From arnholm at arnholm.org  Fri Jan  8 18:52:42 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Sat, 9 Jan 2016 00:52:42 +0100
Subject: [OpenSCAD] Changes to CGAL datastructures? Memory use.
In-Reply-To: <4F5EB9A1-64EA-4B7A-9215-C5C88AE39B78@kintel.net>
References: <1452145786651-15531.post@n5.nabble.com>
	<568EC51D.4020505@arnholm.org>
	<1A42A2FE-4F60-45E3-8F84-2478C72CF575@kintel.net>
	<340896fbcf5fb0aa0eb353091fc609a8@arnholm.org>
	<4F5EB9A1-64EA-4B7A-9215-C5C88AE39B78@kintel.net>
Message-ID: <56904BCA.7020009@arnholm.org>

On 08. jan. 2016 22:12, Marius Kintel wrote:
> You forgot a tiny detail: Your polyhedron only contains ca. 1/9th of the pixels from the image.

Data reduction is a goal, not a problem as long as the visual 
representation is reasonable. However, see below, I did do a mistake and 
it did have a visual effect, I just didn't notice well enough.

> but I guess just just skipped 8 lines from the data file for every line you used.

No, I just double checked. However I did do something unintended that 
had a similar effect, so in a way you are right. I used the (smaller) 
default value of the polyhedron segmentation and it has that kind of 
reduction effect. The value is independent of the actual number of 
points in the data set. Perhaps there should not be a small default 
value, I will change it to mean the default uses all points, but still 
allowing a smaller value. When I set it to 300 to capture every point, 
now I get

http://arnholm.org/software/as_csg/surface/surface_file_full.png

Total rendering time: 0 hours, 9 minutes, 32 seconds
    Top level object is a 3D object:
    Simple:        yes
    Vertices:    56047
    Halfedges:  327334
    Edges:      163667
    Halffacets: 215244
    Facets:     107622
    Volumes:         2
Rendering finished.

So I agree it is more similar. To generate the bigger polyhedron still 
takes only 2 seconds.
http://arnholm.org/software/as_csg/surface/surface_file.7z

If I reduce the number of generated polyhedron facets (using the same 
parameter) to 150 instead of 300 in one direction, rendering takes 2 
minutes 21 seconds instead of 9 minutes and 32 seconds, with very minor 
visual degradation.

Thanks for (almost) spotting the cause of the difference.

Carsten Arnholm



From oz.at.michael at gmail.com  Fri Jan  8 21:19:06 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 8 Jan 2016 19:19:06 -0700 (MST)
Subject: [OpenSCAD] Changes to CGAL datastructures? Memory use.
In-Reply-To: <56904BCA.7020009@arnholm.org>
References: <1452145786651-15531.post@n5.nabble.com>
	<568EC51D.4020505@arnholm.org>
	<1A42A2FE-4F60-45E3-8F84-2478C72CF575@kintel.net>
	<340896fbcf5fb0aa0eb353091fc609a8@arnholm.org>
	<4F5EB9A1-64EA-4B7A-9215-C5C88AE39B78@kintel.net>
	<56904BCA.7020009@arnholm.org>
Message-ID: <1452305946456-15577.post@n5.nabble.com>

cacb wrote
> No, I just double checked. However I did do something unintended that 
> had a similar effect, so in a way you are right. I used the (smaller) 
> default value of the polyhedron segmentation and it has that kind of 
> reduction effect. The value is independent of the actual number of 
> points in the data set. Perhaps there should not be a small default 
> value, I will change it to mean the default uses all points, but still 
> allowing a smaller value. When I set it to 300 to capture every point, 
> now I get
> 
> http://arnholm.org/software/as_csg/surface/surface_file_full.png
> 
> Total rendering time: 0 hours, 9 minutes, 32 seconds
>     Top level object is a 3D object:
>     Simple:        yes
>     Vertices:    56047
>     Halfedges:  327334
>     Edges:      163667
>     Halffacets: 215244
>     Facets:     107622
>     Volumes:         2
> Rendering finished.

>From the look of the .png it has a lower $fn for the cylinder()  than the
100 in the original (or mine just above).




-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Changes-to-CGAL-datastructures-Memory-use-tp15531p15577.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Fri Jan  8 21:44:16 2016
From: marius at kintel.net (Marius Kintel)
Date: Fri, 8 Jan 2016 21:44:16 -0500
Subject: [OpenSCAD] Changes to CGAL datastructures? Memory use.
In-Reply-To: <56904BCA.7020009@arnholm.org>
References: <1452145786651-15531.post@n5.nabble.com>
	<568EC51D.4020505@arnholm.org>
	<1A42A2FE-4F60-45E3-8F84-2478C72CF575@kintel.net>
	<340896fbcf5fb0aa0eb353091fc609a8@arnholm.org>
	<4F5EB9A1-64EA-4B7A-9215-C5C88AE39B78@kintel.net>
	<56904BCA.7020009@arnholm.org>
Message-ID: <84DC1E1A-C46C-4DE5-8105-F07B68A9EB4B@kintel.net>

Carsten,

Just to clarify: There should not be any difference in performance from using a surface() vs. the corresponding polyhedron(). These produce exactly the same internal data structure in OpenSCAD. If you see any differences that?s likely to be differences in the actually produced geometry. ?or an unknown bug in OpenSCAD - that happens too :)

 -Marius



From shadowwynd at gmail.com  Fri Jan  8 21:59:52 2016
From: shadowwynd at gmail.com (Ezra Reynolds)
Date: Fri, 08 Jan 2016 21:59:52 -0500
Subject: [OpenSCAD] export() function.
In-Reply-To: <CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
Message-ID: <569077A8.2050507@gmail.com>

I wouldn't use FreeCAD as a barometer of compatibility, as it doesn't 
support hull() or offset() as of the most current version (hull is split 
into its components, offset throws nasty errors).

I have created many designs that have multiple subassemblies.  They are 
all inter-related pieces of the same design (e.g. top, bottom, middle, 
with matching screw-holes, standoffs, etc.)  Since they share variables, 
it is logical for them to to share a .SCAD file.  Yes, I know how to use 
a batch file or script to do all this, but I would say it is more

I normally arrange the pieces in OpenSCAD for 3D printing (many discrete 
volumes as a single STL).  This works up to the point where I have a 
single part, or several parts, fail during printing / 
derafting/assembly.  It is an error-prone thing to manually isolate each 
part, render as an STL, save it with the correct name, rinse and repeat. 
  Not a problem with a three-part assembly, but could be a problem with 
file that generates two dozen variations on a theme.


For my needs, an export("part1.stl") {subtree}  approach would work,
where the subtree is rendered to screen/cache (exactly like render()), 
but is also exported to disk as the last step of the process.

For example:
	export("top.stl") top();
	translate ([20, 0, 0]) export("middle.stl") middle ();
	translate ([-20, 0, 0]) export("bottom.stl") bottom();

F5 Preview - no difference, objects are rendered and shown

F6 Render - objects are rendered, displayed on screen.  Export subtrees 
are written to disk, allowing user to still save whole render as .STL or 
.AMF or whatever.  This guarantees I have a current (top, middle, 
bottom) and not a top from two revisions ago.

Or maybe have a "Super F6" (shift+F6?) that handles the export() 
commands or whatever other metadata functions we need.  I like 
doug.moen's suggestion about handling this as metadata; you could 
implement as a post-process function.

 From my vantage point, export is still "Object Description" and not 
"general programming"; it is describing the shape of the sub object, and 
how it stored on the disk.

One potential problem that hasn't been mentioned is that if export() 
triggers a render+write RIGHT NOW that can lead to a race condition; if 
I export "X.stl" and use "X.stl" in other parts of the same file - does 
it use the previous "X.stl" or the just-rendered version....







On 1/8/2016 6:22 PM, Mihail Vasiliev wrote:
> May be it's better to leave this decision to end user, whether to use
> export keyword or not?
>
> On compatibility with other software-I'm not sure, how FreeCAD parses
> unknown predicates, but if it behaves like OpenSCAD - just ignores
> corresponding subtree, everythings should be fine - it will just show
> the same - nothing.
>
> 8 ???. 2016 ?. 9:58 PM ???????????? "doug moen" <doug at moens.org
> <mailto:doug at moens.org>> ???????:
>
>     The animate feature doesn't create an output file for each frame
>     *unless* you select the "dump images" option. There's currently no
>     option to export each frame as stl. *If* we added such a feature,
>     only then would it make sense to export tagged subtrees as stl for
>     each frame.
>
>     On Friday, 8 January 2016, Torsten Paul <Torsten.Paul at gmx.de
>     <mailto:Torsten.Paul at gmx.de>> wrote:
>
>         On 01/06/2016 08:57 PM, Mihail Vasiliev wrote:
>          > 1. How is the difference between preview and render mode
>         handled with
>          > export()?
>          >
>          > The very exact way another side-effecting operation - "echo"
>         does.
>          > It does it's dirty job on "instantiate" call to corresponding
>         AbstractNode.
>          >
>         So it would try to generate the full mesh (aka. F6) for this part
>         of the model for each preview and export the file. I don't think
>         this is a good way of handling it. See below for more details...
>
>          > 3. How will that interact with animation?
>          >
>          > Yes, I regenerates file on each frame, and can be used to
>         create series
>          > of exported files of each time step. e.g. the code:
>          >
>          > export(file=str("gg",$t,".stl")) rotate([$t*50,0,0])
>         cube([10,10,10]);
>          >
>         Ok, that might be useful in some rare cases, but it looks a bit like
>         misusing the animation feature.
>
>          > 1. OpenSCAD is not a procedural programming language. It is a
>         purely
>          > declarative language for describing geometry. This is the
>         primary issue.
>          >
>          > And why the way to output for this geometry is obligated to
>         be declared
>          > in command line, not in the language itself?
>          >
>         I would not say it's impossible to use some language feature to
>         declare
>         what to export. The main issue is the immediate execution which the
>         code is compiled.
>
>         Trying to find the analogy to C++ here, we _only_ have the
>         compilation
>         step where you do "gcc -o program.exe file.c" and the analog
>         part would
>         be "openscad -o model.stl file.scad".
>         So mapping the immediate execution of export() to gcc would be like
>         exporting another file while the compiler is running via #export
>         file.out
>         or something similar.
>
>         Actually running as program does not really happen with OpenSCAD
>         models,
>         as they are essentially a data structure that is evaluated by
>         different
>         things.
>
>         Those things can be:
>         * F5 preview renderer in OpenSCAD GUI
>         * F6 mesh calculation in OpenSCAD GUI or command line
>         * various exports to different formats in OpenSCAD GUI or
>         command line
>         * import into other programs, namely FreeCAD
>
>         Most notably here is the last point which highlights the
>         interpretation
>         of SCAD (or it's simplified form CSG) files as data. What would
>         FreeCAD
>         do with an export() node when reading the file?
>
>         It's true that echo() is also fitting into that problem area, it
>         mainly
>         has the argument that there would be almost no debugging possibility
>         without it.
>
>         I think having some capabilities to markup/annotate parts of a model
>         to tell the OpenSCAD GUI what to do when interpreting the data could
>         cover both issues: a) leaving the scad script as a data description
>         while still b) allowing the user to export multiple parts at once.
>         All this without interfering with other programs that might want to
>         import the file or making the preview slow due to forced mesh
>         generation.
>         Also annotations allow more control about export details, as for
>         instance the DXF export would benefit from defining model parts
>         as different layer while still exporting into a single file.
>
>         Maybe we can work together moving into that direction? The actual
>         feature for exporting multiple files / multiple layer would be
>         awesome to have and surely welcomed by a number of people.
>
>         ciao,
>            Torsten.
>
>
>         _______________________________________________
>         OpenSCAD mailing list
>         Discuss at lists.openscad.org
>         http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
>     _______________________________________________
>     OpenSCAD mailing list
>     Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
>     http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>


From shadowwynd at gmail.com  Fri Jan  8 22:03:36 2016
From: shadowwynd at gmail.com (shadowwynd)
Date: Fri, 8 Jan 2016 20:03:36 -0700 (MST)
Subject: [OpenSCAD] Variable for render mode
In-Reply-To: <CAEEmnrNxeg3DcX1xYy96KAVtYjYKs3f1FnUpnC=VbAOXz2YfEw@mail.gmail.com>
References: <CAEEmnrNxeg3DcX1xYy96KAVtYjYKs3f1FnUpnC=VbAOXz2YfEw@mail.gmail.com>
Message-ID: <1452308616769-15580.post@n5.nabble.com>

I agree that this would be a useful tool to have.  It would mean we could
code a "visual representation" (F5), and a "layout for 3D printing" that is
automatically generated on F6.




--
View this message in context: http://forum.openscad.org/Variable-for-render-mode-tp5340p15580.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From hypher at gmail.com  Fri Jan  8 22:10:47 2016
From: hypher at gmail.com (Yona Appletree)
Date: Fri, 08 Jan 2016 19:10:47 -0800
Subject: [OpenSCAD] export() function.
In-Reply-To: <569077A8.2050507@gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com>
Message-ID: <56907A37.1050905@gmail.com>

I have very much the same workflow, and really like the idea of being 
able to tag a subtree as being a logically separate, named, object.

This would allow more than just exporting groups of objects at once 
(which as mentioned would be much better than rendering each part 
separately and manually entering filenames). It would be really neat if 
the preview window had, for instance, a dropdown where you could either 
view the entire generated tree or view each of the tagged subtrees on 
their own. Effectively and after-the-fact application of the re-root (!) 
operator.

In this same vein, having an export option that would automatically 
create a new folder for the specific export instance that is timestamped 
or versioned would be very awesome. Then, the current, many-step 
workflow for rendering, examining, and exporting a new version of a 
multipart model would be a click or two.

~ Yona

> Ezra Reynolds <mailto:shadowwynd at gmail.com>
> January 8, 2016 at 18:59
> I wouldn't use FreeCAD as a barometer of compatibility, as it doesn't 
> support hull() or offset() as of the most current version (hull is 
> split into its components, offset throws nasty errors).
>
> I have created many designs that have multiple subassemblies.  They 
> are all inter-related pieces of the same design (e.g. top, bottom, 
> middle, with matching screw-holes, standoffs, etc.)  Since they share 
> variables, it is logical for them to to share a .SCAD file.  Yes, I 
> know how to use a batch file or script to do all this, but I would say 
> it is more
>
> I normally arrange the pieces in OpenSCAD for 3D printing (many 
> discrete volumes as a single STL).  This works up to the point where I 
> have a single part, or several parts, fail during printing / 
> derafting/assembly.  It is an error-prone thing to manually isolate 
> each part, render as an STL, save it with the correct name, rinse and 
> repeat.  Not a problem with a three-part assembly, but could be a 
> problem with file that generates two dozen variations on a theme.
>
>
> For my needs, an export("part1.stl") {subtree}  approach would work,
> where the subtree is rendered to screen/cache (exactly like render()), 
> but is also exported to disk as the last step of the process.
>
> For example:
>     export("top.stl") top();
>     translate ([20, 0, 0]) export("middle.stl") middle ();
>     translate ([-20, 0, 0]) export("bottom.stl") bottom();
>
> F5 Preview - no difference, objects are rendered and shown
>
> F6 Render - objects are rendered, displayed on screen.  Export 
> subtrees are written to disk, allowing user to still save whole render 
> as .STL or .AMF or whatever.  This guarantees I have a current (top, 
> middle, bottom) and not a top from two revisions ago.
>
> Or maybe have a "Super F6" (shift+F6?) that handles the export() 
> commands or whatever other metadata functions we need.  I like 
> doug.moen's suggestion about handling this as metadata; you could 
> implement as a post-process function.
>
> From my vantage point, export is still "Object Description" and not 
> "general programming"; it is describing the shape of the sub object, 
> and how it stored on the disk.
>
> One potential problem that hasn't been mentioned is that if export() 
> triggers a render+write RIGHT NOW that can lead to a race condition; 
> if I export "X.stl" and use "X.stl" in other parts of the same file - 
> does it use the previous "X.stl" or the just-rendered version....
>
>
>
>
>
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> Mihail Vasiliev <mailto:mickvav at gmail.com>
> January 8, 2016 at 15:22
>
> May be it's better to leave this decision to end user, whether to use 
> export keyword or not?
>
> On compatibility with other software-I'm not sure, how FreeCAD parses 
> unknown predicates, but if it behaves like OpenSCAD - just ignores 
> corresponding subtree, everythings should be fine - it will just show 
> the same - nothing.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> doug moen <mailto:doug at moens.org>
> January 8, 2016 at 10:57
> The animate feature doesn't create an output file for each frame 
> *unless* you select the "dump images" option. There's currently no 
> option to export each frame as stl. *If* we added such a feature, only 
> then would it make sense to export tagged subtrees as stl for each frame.
>
> On Friday, 8 January 2016, Torsten Paul <Torsten.Paul at gmx.de 
> <mailto:Torsten.Paul at gmx.de>> wrote:
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> Torsten Paul <mailto:Torsten.Paul at gmx.de>
> January 8, 2016 at 09:42
> On 01/06/2016 08:57 PM, Mihail Vasiliev wrote:
>> 1. How is the difference between preview and render mode handled with
>> export()?
>>
>> The very exact way another side-effecting operation - "echo" does.
>> It does it's dirty job on "instantiate" call to corresponding AbstractNode.
>>
> So it would try to generate the full mesh (aka. F6) for this part
> of the model for each preview and export the file. I don't think
> this is a good way of handling it. See below for more details...
>
>> 3. How will that interact with animation?
>>
>> Yes, I regenerates file on each frame, and can be used to create series
>> of exported files of each time step. e.g. the code:
>>
>> export(file=str("gg",$t,".stl")) rotate([$t*50,0,0]) cube([10,10,10]);
>>
> Ok, that might be useful in some rare cases, but it looks a bit like
> misusing the animation feature.
>
>> 1. OpenSCAD is not a procedural programming language. It is a purely
>> declarative language for describing geometry. This is the primary issue.
>>
>> And why the way to output for this geometry is obligated to be declared
>> in command line, not in the language itself?
>>
> I would not say it's impossible to use some language feature to declare
> what to export. The main issue is the immediate execution which the
> code is compiled.
>
> Trying to find the analogy to C++ here, we _only_ have the compilation
> step where you do "gcc -o program.exe file.c" and the analog part would
> be "openscad -o model.stl file.scad".
> So mapping the immediate execution of export() to gcc would be like
> exporting another file while the compiler is running via #export file.out
> or something similar.
>
> Actually running as program does not really happen with OpenSCAD models,
> as they are essentially a data structure that is evaluated by different
> things.
>
> Those things can be:
> * F5 preview renderer in OpenSCAD GUI
> * F6 mesh calculation in OpenSCAD GUI or command line
> * various exports to different formats in OpenSCAD GUI or command line
> * import into other programs, namely FreeCAD
>
> Most notably here is the last point which highlights the interpretation
> of SCAD (or it's simplified form CSG) files as data. What would FreeCAD
> do with an export() node when reading the file?
>
> It's true that echo() is also fitting into that problem area, it mainly
> has the argument that there would be almost no debugging possibility
> without it.
>
> I think having some capabilities to markup/annotate parts of a model
> to tell the OpenSCAD GUI what to do when interpreting the data could
> cover both issues: a) leaving the scad script as a data description
> while still b) allowing the user to export multiple parts at once.
> All this without interfering with other programs that might want to
> import the file or making the preview slow due to forced mesh generation.
> Also annotations allow more control about export details, as for
> instance the DXF export would benefit from defining model parts
> as different layer while still exporting into a single file.
>
> Maybe we can work together moving into that direction? The actual
> feature for exporting multiple files / multiple layer would be
> awesome to have and surely welcomed by a number of people.
>
> ciao,
>    Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> Mihail Vasiliev <mailto:mickvav at gmail.com>
> January 6, 2016 at 11:57
> Hi, Doug, Torsten.
>
> I'll try to answer Torsten's questions first.
>
> 1. How is the difference between preview and render mode handled with
> export()?
>
> The very exact way another side-effecting operation - "echo" does.
> It does it's dirty job on "instantiate" call to corresponding 
> AbstractNode.
>
> 2. Will that always force the mesh generation and export the
> file on F5?
>
> It's action is triggered at the same times as echo's.
> As for now, it actually calls instantiateChildren on it's children 
> nodes. (I don't know, whether this function it use caches internally. 
> I can dig it, if it's necessary.)
> Than it applies freshly-created GeometryEvaluator on the first of 
> these children and exports resulted geometry in supplied file, 
> determining it's type by it's name.
> 3. How will that interact with animation?
>
> Yes, I regenerates file on each frame, and can be used to create 
> series of exported files of each time step.
> e.g. the code:
>
> export(file=str("gg",$t,".stl")) rotate([$t*50,0,0]) cube([10,10,10]);
>
> generates several stl files with different names, as expected.
>
> Now on Doug's questions:
>
> 1. OpenSCAD is not a procedural programming language. It is a purely 
> declarative language for describing geometry. This is the primary issue.
>
> And why the way to output for this geometry is obligated to be 
> declared in command line, not in the language itself?
>
> 2. You can't add a procedural, side effect causing 'export()' command 
> to the language because it doesn't make any sense to export a shape to 
> a file while the script is being evaluated: this would mess up preview 
> performance. Once again, this is a side issue, like security. It's a 
> technical issue which underlies the fundamental design decision that 
> OpenSCAD is a declarative language (see point 1 above).
>
> This technocal issue can be addressed by adding some extra argument to 
> export to make it skip it's operation in preview mode, for example. I 
> can do it, as well as security restrictions, regression tests and so 
> on, if the community is interested in the feature itself.
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160108/d8b3056e/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: compose-unknown-contact.jpg
Type: image/jpeg
Size: 770 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160108/d8b3056e/attachment.jpg>

From mschafer at wireframe.biz  Fri Jan  8 22:24:54 2016
From: mschafer at wireframe.biz (Mark Schafer)
Date: Sat, 9 Jan 2016 16:24:54 +1300
Subject: [OpenSCAD] export() function.
In-Reply-To: <56907A37.1050905@gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <56907A37.1050905@gmail.com>
Message-ID: <56907D86.1090402@wireframe.biz>

would this be equivalent to allowing render() to have an export keyword ?



From oz.at.michael at gmail.com  Fri Jan  8 23:51:48 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 8 Jan 2016 21:51:48 -0700 (MST)
Subject: [OpenSCAD] export() function.
In-Reply-To: <56907D86.1090402@wireframe.biz>
References: <5689C0AA.2010206@gmx.de> <1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <56907A37.1050905@gmail.com>
	<56907D86.1090402@wireframe.biz>
Message-ID: <1452315108646-15583.post@n5.nabble.com>

We have had this discussion  before
<http://forum.openscad.org/Multi-material-support-was-Re-OpenSCAD-3000-td8613.html> 
, re multi-material support.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/export-function-tp15428p15583.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Sat Jan  9 05:14:56 2016
From: nop.head at gmail.com (nop head)
Date: Sat, 9 Jan 2016 10:14:56 +0000
Subject: [OpenSCAD] Variable for render mode
In-Reply-To: <1452308616769-15580.post@n5.nabble.com>
References: <CAEEmnrNxeg3DcX1xYy96KAVtYjYKs3f1FnUpnC=VbAOXz2YfEw@mail.gmail.com>
	<1452308616769-15580.post@n5.nabble.com>
Message-ID: <CAEEmnrOCHnWE8U=+OD6-93dpdghCX4U6a5GxUtiyeRwg9LmJkg@mail.gmail.com>

Yes that is exactly how I would use it.

When I press F5 I want this



And when I press F6 I want this


?
... without having to modify the file and remember to put it restore it
when I check it in. Accidentally pressing F6 with the assembly view
selected can bring my PC to its knees if it is a complicated assembly.
Novice uses trying to build Mendel90 often make this mistake.


On 9 January 2016 at 03:03, shadowwynd <shadowwynd at gmail.com> wrote:

> I agree that this would be a useful tool to have.  It would mean we could
> code a "visual representation" (F5), and a "layout for 3D printing" that is
> automatically generated on F6.
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Variable-for-render-mode-tp5340p15580.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160109/da2e422e/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: bc1.png
Type: image/png
Size: 28333 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160109/da2e422e/attachment.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: bc3.png
Type: image/png
Size: 23417 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160109/da2e422e/attachment-0001.png>

From jon at jonbondy.com  Sat Jan  9 06:07:02 2016
From: jon at jonbondy.com (jon)
Date: Sat, 9 Jan 2016 06:07:02 -0500
Subject: [OpenSCAD] export() function.
In-Reply-To: <569077A8.2050507@gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com>
Message-ID: <5690E9D6.7090504@jonbondy.com>

I create modules for each part, list them at the bottom of the script, 
and then use ! to create the geometry for the part that I wish to print.

On 1/8/2016 9:59 PM, Ezra Reynolds wrote:
> I normally arrange the pieces in OpenSCAD for 3D printing (many 
> discrete volumes as a single STL).  This works up to the point where I 
> have a single part, or several parts, fail during printing / 
> derafting/assembly.  It is an error-prone thing to manually isolate 
> each part, render as an STL, save it with the correct name, rinse and 
> repeat.  Not a problem with a three-part assembly, but could be a 
> problem with file that generates two dozen variations on a theme. 



From shadowwynd at gmail.com  Sat Jan  9 07:26:59 2016
From: shadowwynd at gmail.com (Ezra Reynolds)
Date: Sat, 09 Jan 2016 07:26:59 -0500
Subject: [OpenSCAD] export() function.
In-Reply-To: <56907D86.1090402@wireframe.biz>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <56907A37.1050905@gmail.com>
	<56907D86.1090402@wireframe.biz>
Message-ID: <5690FC93.4020408@gmail.com>

That could work well.

On 1/8/2016 10:24 PM, Mark Schafer wrote:
> would this be equivalent to allowing render() to have an export keyword ?
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>


From shadowwynd at gmail.com  Sat Jan  9 07:38:30 2016
From: shadowwynd at gmail.com (Ezra Reynolds)
Date: Sat, 09 Jan 2016 07:38:30 -0500
Subject: [OpenSCAD] export() function.
In-Reply-To: <5690E9D6.7090504@jonbondy.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <5690E9D6.7090504@jonbondy.com>
Message-ID: <5690FF46.90301@gmail.com>

I do the same, many of my files have a list of

	*!module1Name();
	*!module2Name();

at the bottom so that I can easily turn pieces off and on.

However, if using a generator:
for (i=[0 : 10])
{
     for (j=[0 : 10])
     {
	translate ([i*20, j*20, 0]) smallPartGenerator(i, j);

     }
}

I then have 100 individual volumes on a build plate  which is NOT as 
easy to toggle.

If we had an export command, then I could have an
export("R"+str(i) + "C"+str(j) + ".STL");
in the mix and get 100 STL files out of the deal; this makes it easier 
to get a specific replacement without reprinting all 100.



On 1/9/2016 6:07 AM, jon wrote:
> I create modules for each part, list them at the bottom of the script,
> and then use ! to create the geometry for the part that I wish to print.
>
> On 1/8/2016 9:59 PM, Ezra Reynolds wrote:
>> I normally arrange the pieces in OpenSCAD for 3D printing (many
>> discrete volumes as a single STL).  This works up to the point where I
>> have a single part, or several parts, fail during printing /
>> derafting/assembly.  It is an error-prone thing to manually isolate
>> each part, render as an STL, save it with the correct name, rinse and
>> repeat.  Not a problem with a three-part assembly, but could be a
>> problem with file that generates two dozen variations on a theme.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>


From jon at jonbondy.com  Sat Jan  9 08:03:29 2016
From: jon at jonbondy.com (jon)
Date: Sat, 9 Jan 2016 08:03:29 -0500
Subject: [OpenSCAD] export() function.
In-Reply-To: <5690FF46.90301@gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <5690E9D6.7090504@jonbondy.com>
	<5690FF46.90301@gmail.com>
Message-ID: <56910521.9030700@jonbondy.com>

I agree that this would be a useful improvement!

On 1/9/2016 7:38 AM, Ezra Reynolds wrote:
> I do the same, many of my files have a list of
>
>     *!module1Name();
>     *!module2Name();
>
> at the bottom so that I can easily turn pieces off and on.
>
> However, if using a generator:
> for (i=[0 : 10])
> {
>     for (j=[0 : 10])
>     {
>     translate ([i*20, j*20, 0]) smallPartGenerator(i, j);
>
>     }
> }
>
> I then have 100 individual volumes on a build plate  which is NOT as 
> easy to toggle.
>
> If we had an export command, then I could have an
> export("R"+str(i) + "C"+str(j) + ".STL");
> in the mix and get 100 STL files out of the deal; this makes it easier 
> to get a specific replacement without reprinting all 100.
>
>
>
> On 1/9/2016 6:07 AM, jon wrote:
>> I create modules for each part, list them at the bottom of the script,
>> and then use ! to create the geometry for the part that I wish to print.
>>
>> On 1/8/2016 9:59 PM, Ezra Reynolds wrote:
>>> I normally arrange the pieces in OpenSCAD for 3D printing (many
>>> discrete volumes as a single STL).  This works up to the point where I
>>> have a single part, or several parts, fail during printing /
>>> derafting/assembly.  It is an error-prone thing to manually isolate
>>> each part, render as an STL, save it with the correct name, rinse and
>>> repeat.  Not a problem with a three-part assembly, but could be a
>>> problem with file that generates two dozen variations on a theme.
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
> -----
> No virus found in this message.
> Checked by AVG - www.avg.com
> Version: 2016.0.7294 / Virus Database: 4489/11360 - Release Date: 
> 01/09/16
>
>



From nop.head at gmail.com  Sat Jan  9 08:24:17 2016
From: nop.head at gmail.com (nop head)
Date: Sat, 9 Jan 2016 13:24:17 +0000
Subject: [OpenSCAD] export() function.
In-Reply-To: <56910521.9030700@jonbondy.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <5690E9D6.7090504@jonbondy.com>
	<5690FF46.90301@gmail.com> <56910521.9030700@jonbondy.com>
Message-ID: <CAEEmnrMv-RPV1T5W3b2r2GoqyvKayCWxRKJwkUe-zzoj19JdnQ@mail.gmail.com>

Perhaps have export(file) treated the same as * for F5 and F6 but export
its subtree of geometry to the named file when a new Export "exports" menu
option is invoked. Doesn't that remove all the objections? It is just a
more convenient way of changing some *s at the bottom of the file, pressing
F6 and then invoking the Export menu. The code no longer has side effects,
the export is still an manual operation but can deliver a bunch of files.
The export doesn't appear in the CSG file but it could export a CSG file of
the things under it if the file type was CSG.

On 9 January 2016 at 13:03, jon <jon at jonbondy.com> wrote:

> I agree that this would be a useful improvement!
>
>
> On 1/9/2016 7:38 AM, Ezra Reynolds wrote:
>
>> I do the same, many of my files have a list of
>>
>>     *!module1Name();
>>     *!module2Name();
>>
>> at the bottom so that I can easily turn pieces off and on.
>>
>> However, if using a generator:
>> for (i=[0 : 10])
>> {
>>     for (j=[0 : 10])
>>     {
>>     translate ([i*20, j*20, 0]) smallPartGenerator(i, j);
>>
>>     }
>> }
>>
>> I then have 100 individual volumes on a build plate  which is NOT as easy
>> to toggle.
>>
>> If we had an export command, then I could have an
>> export("R"+str(i) + "C"+str(j) + ".STL");
>> in the mix and get 100 STL files out of the deal; this makes it easier to
>> get a specific replacement without reprinting all 100.
>>
>>
>>
>> On 1/9/2016 6:07 AM, jon wrote:
>>
>>> I create modules for each part, list them at the bottom of the script,
>>> and then use ! to create the geometry for the part that I wish to print.
>>>
>>> On 1/8/2016 9:59 PM, Ezra Reynolds wrote:
>>>
>>>> I normally arrange the pieces in OpenSCAD for 3D printing (many
>>>> discrete volumes as a single STL).  This works up to the point where I
>>>> have a single part, or several parts, fail during printing /
>>>> derafting/assembly.  It is an error-prone thing to manually isolate
>>>> each part, render as an STL, save it with the correct name, rinse and
>>>> repeat.  Not a problem with a three-part assembly, but could be a
>>>> problem with file that generates two dozen variations on a theme.
>>>>
>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>> -----
>> No virus found in this message.
>> Checked by AVG - www.avg.com
>> Version: 2016.0.7294 / Virus Database: 4489/11360 - Release Date: 01/09/16
>>
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160109/e43664cf/attachment.html>

From Torsten.Paul at gmx.de  Sat Jan  9 08:40:15 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sat, 9 Jan 2016 14:40:15 +0100
Subject: [OpenSCAD] Variable for render mode
In-Reply-To: <CAEEmnrOCHnWE8U=+OD6-93dpdghCX4U6a5GxUtiyeRwg9LmJkg@mail.gmail.com>
References: <CAEEmnrNxeg3DcX1xYy96KAVtYjYKs3f1FnUpnC=VbAOXz2YfEw@mail.gmail.com>
	<1452308616769-15580.post@n5.nabble.com>
	<CAEEmnrOCHnWE8U=+OD6-93dpdghCX4U6a5GxUtiyeRwg9LmJkg@mail.gmail.com>
Message-ID: <56910DBF.7030703@gmx.de>

There's a by now quite old github issue for that:
https://github.com/openscad/openscad/issues/149



From s2tillx at talktalk.net  Sat Jan  9 11:39:14 2016
From: s2tillx at talktalk.net (DavelikeC)
Date: Sat, 9 Jan 2016 09:39:14 -0700 (MST)
Subject: [OpenSCAD] computer screen layout adjustment
In-Reply-To: <568E8F9D.1080605@gmx.de>
References: <1452180267409-15540.post@n5.nabble.com> <568E8F9D.1080605@gmx.de>
Message-ID: <1452357554333-15592.post@n5.nabble.com>

thanks for that tp3. The query was nor really about openSCAD, rather the
basic way way much software enables the screen to be laid out, and that was
the reason I could not find it in help opensCAD! As soon as I had one
quarter read you response, I remembered what I had to do - drag the title
bar.

David



--
View this message in context: http://forum.openscad.org/computer-screen-layout-adjustment-tp15540p15592.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From hypher at gmail.com  Sat Jan  9 13:43:04 2016
From: hypher at gmail.com (Yona Appletree)
Date: Sat, 09 Jan 2016 10:43:04 -0800
Subject: [OpenSCAD] export() function.
In-Reply-To: <CAEEmnrMv-RPV1T5W3b2r2GoqyvKayCWxRKJwkUe-zzoj19JdnQ@mail.gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <5690E9D6.7090504@jonbondy.com>
	<5690FF46.90301@gmail.com> <56910521.9030700@jonbondy.com>
	<CAEEmnrMv-RPV1T5W3b2r2GoqyvKayCWxRKJwkUe-zzoj19JdnQ@mail.gmail.com>
Message-ID: <569154B8.1050202@gmail.com>

Sounds pretty much exactly like what I'm looking for -- in addition to 
being able to preview just one component from a drop-down menu post render.

> nop head <mailto:nop.head at gmail.com>
> January 9, 2016 at 05:24
> Perhaps have export(file) treated the same as * for F5 and F6 but 
> export its subtree of geometry to the named file when a new Export 
> "exports" menu option is invoked. Doesn't that remove all the 
> objections? It is just a more convenient way of changing some *s at 
> the bottom of the file, pressing F6 and then invoking the Export menu. 
> The code no longer has side effects, the export is still an manual 
> operation but can deliver a bunch of files. The export doesn't appear 
> in the CSG file but it could export a CSG file of the things under it 
> if the file type was CSG.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> jon <mailto:jon at jonbondy.com>
> January 9, 2016 at 05:03
> I agree that this would be a useful improvement!
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> Ezra Reynolds <mailto:shadowwynd at gmail.com>
> January 9, 2016 at 04:38
> I do the same, many of my files have a list of
>
>     *!module1Name();
>     *!module2Name();
>
> at the bottom so that I can easily turn pieces off and on.
>
> However, if using a generator:
> for (i=[0 : 10])
> {
>     for (j=[0 : 10])
>     {
>     translate ([i*20, j*20, 0]) smallPartGenerator(i, j);
>
>     }
> }
>
> I then have 100 individual volumes on a build plate  which is NOT as 
> easy to toggle.
>
> If we had an export command, then I could have an
> export("R"+str(i) + "C"+str(j) + ".STL");
> in the mix and get 100 STL files out of the deal; this makes it easier 
> to get a specific replacement without reprinting all 100.
>
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> jon <mailto:jon at jonbondy.com>
> January 9, 2016 at 03:07
> I create modules for each part, list them at the bottom of the script, 
> and then use ! to create the geometry for the part that I wish to print.
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> Ezra Reynolds <mailto:shadowwynd at gmail.com>
> January 8, 2016 at 18:59
> I wouldn't use FreeCAD as a barometer of compatibility, as it doesn't 
> support hull() or offset() as of the most current version (hull is 
> split into its components, offset throws nasty errors).
>
> I have created many designs that have multiple subassemblies.  They 
> are all inter-related pieces of the same design (e.g. top, bottom, 
> middle, with matching screw-holes, standoffs, etc.)  Since they share 
> variables, it is logical for them to to share a .SCAD file.  Yes, I 
> know how to use a batch file or script to do all this, but I would say 
> it is more
>
> I normally arrange the pieces in OpenSCAD for 3D printing (many 
> discrete volumes as a single STL).  This works up to the point where I 
> have a single part, or several parts, fail during printing / 
> derafting/assembly.  It is an error-prone thing to manually isolate 
> each part, render as an STL, save it with the correct name, rinse and 
> repeat.  Not a problem with a three-part assembly, but could be a 
> problem with file that generates two dozen variations on a theme.
>
>
> For my needs, an export("part1.stl") {subtree}  approach would work,
> where the subtree is rendered to screen/cache (exactly like render()), 
> but is also exported to disk as the last step of the process.
>
> For example:
>     export("top.stl") top();
>     translate ([20, 0, 0]) export("middle.stl") middle ();
>     translate ([-20, 0, 0]) export("bottom.stl") bottom();
>
> F5 Preview - no difference, objects are rendered and shown
>
> F6 Render - objects are rendered, displayed on screen.  Export 
> subtrees are written to disk, allowing user to still save whole render 
> as .STL or .AMF or whatever.  This guarantees I have a current (top, 
> middle, bottom) and not a top from two revisions ago.
>
> Or maybe have a "Super F6" (shift+F6?) that handles the export() 
> commands or whatever other metadata functions we need.  I like 
> doug.moen's suggestion about handling this as metadata; you could 
> implement as a post-process function.
>
> From my vantage point, export is still "Object Description" and not 
> "general programming"; it is describing the shape of the sub object, 
> and how it stored on the disk.
>
> One potential problem that hasn't been mentioned is that if export() 
> triggers a render+write RIGHT NOW that can lead to a race condition; 
> if I export "X.stl" and use "X.stl" in other parts of the same file - 
> does it use the previous "X.stl" or the just-rendered version....
>
>
>
>
>
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160109/db993f71/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: postbox-contact.jpg
Type: image/jpeg
Size: 1266 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160109/db993f71/attachment.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: compose-unknown-contact.jpg
Type: image/jpeg
Size: 770 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160109/db993f71/attachment-0001.jpg>

From Torsten.Paul at gmx.de  Sat Jan  9 13:59:33 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sat, 9 Jan 2016 19:59:33 +0100
Subject: [OpenSCAD] export() function.
In-Reply-To: <569154B8.1050202@gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <5690E9D6.7090504@jonbondy.com>
	<5690FF46.90301@gmail.com> <56910521.9030700@jonbondy.com>
	<CAEEmnrMv-RPV1T5W3b2r2GoqyvKayCWxRKJwkUe-zzoj19JdnQ@mail.gmail.com>
	<569154B8.1050202@gmail.com>
Message-ID: <56915895.70501@gmx.de>

On 01/09/2016 07:43 PM, Yona Appletree wrote:
>>
>> nop head <mailto:nop.head at gmail.com>
>> January 9, 2016 at 05:24
>> Perhaps have export(file) treated the same as * for F5 and F6 but export its subtree of geometry to the named file when a new Export
>> "exports" menu option is invoked. Doesn't that remove all the objections? It is just a more convenient way of changing some *s at the
>> bottom of the file, pressing F6 and then invoking the Export menu. The code no longer has side effects, the export is still an manual
>> operation but can deliver a bunch of files. The export doesn't appear in the CSG file but it could export a CSG file of the things under
>> it if the file type was CSG.
>>
> Sounds pretty much exactly like what I'm looking for -- in addition to being able to preview just one component from a drop-down menu post
> render.
>
Well, that's exactly what I'm talking about. Just with the additional
suggestion to use a different syntax that does not produce the confusion
of that export() "not being executed" when pressing F6 and allow more
flexibility to also handle DXF layers or AMF multi-volumes and such
things.

Having the separate syntax also means there's no need to mess with
the CSG files. We can simply export the data as it is.
Note that one rule is that exported CSG files can be read by OpenSCAD
again and are supposed to produce exactly the same model as the
original SCAD file. For 99.9% of files that works (problem is having
inf or NaN values) and is validated by the test suite.

ciao,
  Torsten.


From gwadej at anomaly.org  Sat Jan  9 14:01:06 2016
From: gwadej at anomaly.org (G. Wade Johnson)
Date: Sat, 9 Jan 2016 13:01:06 -0600
Subject: [OpenSCAD] export() function.
In-Reply-To: <5690FF46.90301@gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <5690E9D6.7090504@jonbondy.com>
	<5690FF46.90301@gmail.com>
Message-ID: <20160109130106.63696b0a@cygnus>

On Sat, 09 Jan 2016 07:38:30 -0500
Ezra Reynolds <shadowwynd at gmail.com> wrote:

> I do the same, many of my files have a list of
> 
> 	*!module1Name();
> 	*!module2Name();

I like that approach.

In many of my more complicated designs I have something like:

plate="combined";
if( plate == "part1" )
{
   module1Name();
}
if( plate == "part2" )
{
   module2Name();
}
if( plate == "combined" )
{
   translate([-20,-20, 0]) module1Name();
   translate([ 20, 20, 0]) module2Name();
}

This makes it easy to generate specific versions using openscad on the
command line. It works particularly well driven by make.

G. Wade

> at the bottom so that I can easily turn pieces off and on.
> 
> However, if using a generator:
> for (i=[0 : 10])
> {
>      for (j=[0 : 10])
>      {
> 	translate ([i*20, j*20, 0]) smallPartGenerator(i, j);
> 
>      }
> }
> 
> I then have 100 individual volumes on a build plate  which is NOT as 
> easy to toggle.
> 
> If we had an export command, then I could have an
> export("R"+str(i) + "C"+str(j) + ".STL");
> in the mix and get 100 STL files out of the deal; this makes it
> easier to get a specific replacement without reprinting all 100.
> 
> 
> 
> On 1/9/2016 6:07 AM, jon wrote:
> > I create modules for each part, list them at the bottom of the
> > script, and then use ! to create the geometry for the part that I
> > wish to print.
> >
> > On 1/8/2016 9:59 PM, Ezra Reynolds wrote:
> >> I normally arrange the pieces in OpenSCAD for 3D printing (many
> >> discrete volumes as a single STL).  This works up to the point
> >> where I have a single part, or several parts, fail during
> >> printing / derafting/assembly.  It is an error-prone thing to
> >> manually isolate each part, render as an STL, save it with the
> >> correct name, rinse and repeat.  Not a problem with a three-part
> >> assembly, but could be a problem with file that generates two
> >> dozen variations on a theme.
> >
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> >
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


-- 
You need at least two viewpoints to have perspective.
                                                    -- Rick Hoselton


From gregorybartonfrost at gmail.com  Sat Jan  9 16:25:41 2016
From: gregorybartonfrost at gmail.com (Greg Frost)
Date: Sun, 10 Jan 2016 07:55:41 +1030
Subject: [OpenSCAD] export() function.
In-Reply-To: <20160109130106.63696b0a@cygnus>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <5690E9D6.7090504@jonbondy.com>
	<5690FF46.90301@gmail.com> <20160109130106.63696b0a@cygnus>
Message-ID: <05186620-8678-49D1-A600-B8CDEA5F2143@gmail.com>

What if instead of export(), you could just tag a part of the tree with a name. Then when you do export, there could be an option to export subtrees where you give a base name for the export and each tagged subtree is exported with a filename constructed by appending the subtree's name to the base name.

You would have to think about what to do if two things were tagged with the same name.

Greg Frost

> On 10 Jan 2016, at 5:31 am, "G. Wade Johnson" <gwadej at anomaly.org> wrote:
> 
> On Sat, 09 Jan 2016 07:38:30 -0500
> Ezra Reynolds <shadowwynd at gmail.com> wrote:
> 
>> I do the same, many of my files have a list of
>> 
>>    *!module1Name();
>>    *!module2Name();
> 
> I like that approach.
> 
> In many of my more complicated designs I have something like:
> 
> plate="combined";
> if( plate == "part1" )
> {
>   module1Name();
> }
> if( plate == "part2" )
> {
>   module2Name();
> }
> if( plate == "combined" )
> {
>   translate([-20,-20, 0]) module1Name();
>   translate([ 20, 20, 0]) module2Name();
> }
> 
> This makes it easy to generate specific versions using openscad on the
> command line. It works particularly well driven by make.
> 
> G. Wade
> 
>> at the bottom so that I can easily turn pieces off and on.
>> 
>> However, if using a generator:
>> for (i=[0 : 10])
>> {
>>     for (j=[0 : 10])
>>     {
>>    translate ([i*20, j*20, 0]) smallPartGenerator(i, j);
>> 
>>     }
>> }
>> 
>> I then have 100 individual volumes on a build plate  which is NOT as 
>> easy to toggle.
>> 
>> If we had an export command, then I could have an
>> export("R"+str(i) + "C"+str(j) + ".STL");
>> in the mix and get 100 STL files out of the deal; this makes it
>> easier to get a specific replacement without reprinting all 100.
>> 
>> 
>> 
>>> On 1/9/2016 6:07 AM, jon wrote:
>>> I create modules for each part, list them at the bottom of the
>>> script, and then use ! to create the geometry for the part that I
>>> wish to print.
>>> 
>>>> On 1/8/2016 9:59 PM, Ezra Reynolds wrote:
>>>> I normally arrange the pieces in OpenSCAD for 3D printing (many
>>>> discrete volumes as a single STL).  This works up to the point
>>>> where I have a single part, or several parts, fail during
>>>> printing / derafting/assembly.  It is an error-prone thing to
>>>> manually isolate each part, render as an STL, save it with the
>>>> correct name, rinse and repeat.  Not a problem with a three-part
>>>> assembly, but could be a problem with file that generates two
>>>> dozen variations on a theme.
>>> 
>>> 
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>> 
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> 
> 
> -- 
> You need at least two viewpoints to have perspective.
>                                                    -- Rick Hoselton
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


From oz.at.michael at gmail.com  Sat Jan  9 16:30:19 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 9 Jan 2016 14:30:19 -0700 (MST)
Subject: [OpenSCAD] Color 3D printing
In-Reply-To: <1452344140170-15588.post@n5.nabble.com>
References: <1452344140170-15588.post@n5.nabble.com>
Message-ID: <1452375019247-15597.post@n5.nabble.com>

Hi Jaacov,

Welcome to the forum. Your post is still flagged as "This post has NOT been
accepted by the mailing list yet", so nobody gets it unless they look. You
need to subscribe to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.

Unfortunately the short answer is no you can't use OpenSCAD for different
colour printing. As is, it does not support multiple materials. This is
being worked on but don't hold your breath.

The longer answer is that you need to generate separate parts for each
material/colour. Export each, then the printing software combines them. 

This all depends on what printer type you use.

DXF is not usually used for 3D printers, they tend to use STL.

Except for high end professional machines, I don't think the state of the
art has progressed much.
Others here may have newer informed views.

While it won't support your current design, you can do multi colour by
changing filiment, see this  instructable
<http://www.instructables.com/id/How-to-3D-Print-multicolored-obejcts/>  .




-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Color-3D-printing-tp15588p15597.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sat Jan  9 17:44:23 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 9 Jan 2016 15:44:23 -0700 (MST)
Subject: [OpenSCAD] Variable for render mode
In-Reply-To: <56910DBF.7030703@gmx.de>
References: <CAEEmnrNxeg3DcX1xYy96KAVtYjYKs3f1FnUpnC=VbAOXz2YfEw@mail.gmail.com>
	<1452308616769-15580.post@n5.nabble.com>
	<CAEEmnrOCHnWE8U=+OD6-93dpdghCX4U6a5GxUtiyeRwg9LmJkg@mail.gmail.com>
	<56910DBF.7030703@gmx.de>
Message-ID: <1452379463154-15598.post@n5.nabble.com>

tp3 wrote
> There's a by now quite old github issue for that:
> https://github.com/openscad/openscad/issues/149

Surprising it hasn't been tackled as it has a $100 bounty.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Variable-for-render-mode-tp5340p15598.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sat Jan  9 17:45:53 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 9 Jan 2016 15:45:53 -0700 (MST)
Subject: [OpenSCAD] Variable for render mode
In-Reply-To: <1452379463154-15598.post@n5.nabble.com>
References: <CAEEmnrNxeg3DcX1xYy96KAVtYjYKs3f1FnUpnC=VbAOXz2YfEw@mail.gmail.com>
	<1452308616769-15580.post@n5.nabble.com>
	<CAEEmnrOCHnWE8U=+OD6-93dpdghCX4U6a5GxUtiyeRwg9LmJkg@mail.gmail.com>
	<56910DBF.7030703@gmx.de> <1452379463154-15598.post@n5.nabble.com>
Message-ID: <1452379553993-15599.post@n5.nabble.com>

Oh, that was nophead, just now...



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Variable-for-render-mode-tp5340p15599.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sat Jan  9 17:53:58 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sat, 9 Jan 2016 23:53:58 +0100
Subject: [OpenSCAD] Variable for render mode
In-Reply-To: <1452379553993-15599.post@n5.nabble.com>
References: <CAEEmnrNxeg3DcX1xYy96KAVtYjYKs3f1FnUpnC=VbAOXz2YfEw@mail.gmail.com>
	<1452308616769-15580.post@n5.nabble.com>
	<CAEEmnrOCHnWE8U=+OD6-93dpdghCX4U6a5GxUtiyeRwg9LmJkg@mail.gmail.com>
	<56910DBF.7030703@gmx.de> <1452379463154-15598.post@n5.nabble.com>
	<1452379553993-15599.post@n5.nabble.com>
Message-ID: <56918F86.2010405@gmx.de>

On 01/09/2016 11:45 PM, MichaelAtOz wrote:
> Oh, that was nophead, just now...
> 
Yep, actually I wanted to do that some time ago, but after discussion
with Marius it turned out, it might not be as easy as it sounds.
The feature itself is clear and very useful, but main concern was
the internal caching I think.
I'm still not sure we'll run into issues with a fixed value for each
new evaluation (except maybe using more cache memory, but that would
not be much different from just changing the value manually). I guess
we'll find out, hopefully soon :-).

Any ideas how to name it? I think it would make sense to

a) not introduce more $ variables as this also makes no sense for
a fixed value

b) maybe have something like ENV.something that can then be extended
for similar things like access to some system information as
requested in other issues.

ciao,
  Torsten.




From stempeldergeschichte at googlemail.com  Sat Jan  9 18:05:13 2016
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Sun, 10 Jan 2016 00:05:13 +0100
Subject: [OpenSCAD] Color 3D printing
In-Reply-To: <1452375019247-15597.post@n5.nabble.com>
References: <1452344140170-15588.post@n5.nabble.com>
	<1452375019247-15597.post@n5.nabble.com>
Message-ID: <CAJgOqACyPqXpPtaN37aYroW3GJs6cep64zUcD-q+NvKhDT0CJg@mail.gmail.com>

Just print it in one color and use a marker of contrasting color to color
the rised text.

2016-01-09 22:30 GMT+01:00 MichaelAtOz <oz.at.michael at gmail.com>:

> Hi Jaacov,
>
> Welcome to the forum. Your post is still flagged as "This post has NOT been
> accepted by the mailing list yet", so nobody gets it unless they look. You
> need to subscribe to the  mailing list
> <http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
> and respond to the registration email.
>
> Unfortunately the short answer is no you can't use OpenSCAD for different
> colour printing. As is, it does not support multiple materials. This is
> being worked on but don't hold your breath.
>
> The longer answer is that you need to generate separate parts for each
> material/colour. Export each, then the printing software combines them.
>
> This all depends on what printer type you use.
>
> DXF is not usually used for 3D printers, they tend to use STL.
>
> Except for high end professional machines, I don't think the state of the
> art has progressed much.
> Others here may have newer informed views.
>
> While it won't support your current design, you can do multi colour by
> changing filiment, see this  instructable
> <http://www.instructables.com/id/How-to-3D-Print-multicolored-obejcts/>  .
>
>
>
>
> -----
> Newly minted Admin - PM me if you need anything, or if I've done something
> stupid...
>
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; to the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work. Obviously
> inclusion of works of previous authors is not included in the above.
>
> The TPP is no simple ?trade agreement.?   Fight it!
> http://www.ourfairdeal.org/   time is running out!
> --
> View this message in context:
> http://forum.openscad.org/Color-3D-printing-tp15588p15597.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160110/d178391c/attachment.html>

From adamhill1988 at gmail.com  Sat Jan  9 18:48:44 2016
From: adamhill1988 at gmail.com (Rufe0)
Date: Sat, 9 Jan 2016 16:48:44 -0700 (MST)
Subject: [OpenSCAD] Color not displaying
Message-ID: <1452383324001-15602.post@n5.nabble.com>

Hello,
I've just downloaded OpenSCAD version 2013.06 x64 win, it looks good so far
apart from I can't seem to get colors to show up on the model. Tried names
and numbers. Any ideas?
Thanks Rufe0

<http://forum.openscad.org/file/n15602/OpenSCAD-color.png> 



--
View this message in context: http://forum.openscad.org/Color-not-displaying-tp15602.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sat Jan  9 18:52:56 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 10 Jan 2016 00:52:56 +0100
Subject: [OpenSCAD] Color not displaying
In-Reply-To: <1452383324001-15602.post@n5.nabble.com>
References: <1452383324001-15602.post@n5.nabble.com>
Message-ID: <56919D58.60006@gmx.de>

On 01/10/2016 12:48 AM, Rufe0 wrote:
> I've just downloaded OpenSCAD version 2013.06 x64 win, it looks good so far
>
Why would you download that ancient version?
Check http://www.openscad.org/downloads.html for the latest release which
is 2015.03-2...

> apart from I can't seem to get colors to show up on the model. Tried names
> and numbers. Any ideas?
> Thanks Rufe0
> 
> <http://forum.openscad.org/file/n15602/OpenSCAD-color.png> 
> 
...but even with that latest version, colors only work in preview mode
(F5) but not when rendering the final model (with F6).

ciao,
  Torsten.




From oz.at.michael at gmail.com  Sat Jan  9 18:57:30 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 9 Jan 2016 16:57:30 -0700 (MST)
Subject: [OpenSCAD] Variable for render mode
In-Reply-To: <56918F86.2010405@gmx.de>
References: <CAEEmnrNxeg3DcX1xYy96KAVtYjYKs3f1FnUpnC=VbAOXz2YfEw@mail.gmail.com>
	<1452308616769-15580.post@n5.nabble.com>
	<CAEEmnrOCHnWE8U=+OD6-93dpdghCX4U6a5GxUtiyeRwg9LmJkg@mail.gmail.com>
	<56910DBF.7030703@gmx.de> <1452379463154-15598.post@n5.nabble.com>
	<1452379553993-15599.post@n5.nabble.com> <56918F86.2010405@gmx.de>
Message-ID: <1452383850178-15604.post@n5.nabble.com>

I'd go with a built-in function, 

var = system("render"); // boolean - in this case

Initial set of options; 
"preview" boolean
"render" boolean
"mainfilename" string 
"datetime" string, YYYYMMDDHHMMSSmmd, mm=millisec, d=0-6 (day of week)
"GUI" boolean - false if command line

I was going to suggest the following, but that is too late, the compiling
has been done. Unless an auto-rerender concept...??
"export" [ returns the export type,
"STL","OFF","AMF","DXF","SVG","CSG","PNG"]

Note other discussion  here
<https://github.com/openscad/openscad/issues/907>  , some idiot ;)
suggested;

    openscad.isRender()
    openscad.isPreview()

    and later...

    env.platform()
    env.date()

So perhaps

var=openscad.system(as per above);

You don't need a separate env





-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Variable-for-render-mode-tp5340p15604.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From adamhill1988 at gmail.com  Sat Jan  9 18:57:48 2016
From: adamhill1988 at gmail.com (Rufe0)
Date: Sat, 9 Jan 2016 16:57:48 -0700 (MST)
Subject: [OpenSCAD] Color not displaying
In-Reply-To: <56919D58.60006@gmx.de>
References: <1452383324001-15602.post@n5.nabble.com> <56919D58.60006@gmx.de>
Message-ID: <1452383868237-15605.post@n5.nabble.com>

That was the first one that I could find in the downloads folder....

I just saved the document and colors magically appeared



--
View this message in context: http://forum.openscad.org/Color-not-displaying-tp15602p15605.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sat Jan  9 18:59:02 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 9 Jan 2016 16:59:02 -0700 (MST)
Subject: [OpenSCAD] Variable for render mode
In-Reply-To: <1452383850178-15604.post@n5.nabble.com>
References: <CAEEmnrNxeg3DcX1xYy96KAVtYjYKs3f1FnUpnC=VbAOXz2YfEw@mail.gmail.com>
	<1452308616769-15580.post@n5.nabble.com>
	<CAEEmnrOCHnWE8U=+OD6-93dpdghCX4U6a5GxUtiyeRwg9LmJkg@mail.gmail.com>
	<56910DBF.7030703@gmx.de> <1452379463154-15598.post@n5.nabble.com>
	<1452379553993-15599.post@n5.nabble.com> <56918F86.2010405@gmx.de>
	<1452383850178-15604.post@n5.nabble.com>
Message-ID: <1452383942258-15606.post@n5.nabble.com>

It could also be used to deprecate $vpr etc.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Variable-for-render-mode-tp5340p15606.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Sat Jan  9 19:12:00 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 10 Jan 2016 00:12:00 +0000
Subject: [OpenSCAD] Variable for render mode
In-Reply-To: <56918F86.2010405@gmx.de>
References: <CAEEmnrNxeg3DcX1xYy96KAVtYjYKs3f1FnUpnC=VbAOXz2YfEw@mail.gmail.com>
	<1452308616769-15580.post@n5.nabble.com>
	<CAEEmnrOCHnWE8U=+OD6-93dpdghCX4U6a5GxUtiyeRwg9LmJkg@mail.gmail.com>
	<56910DBF.7030703@gmx.de> <1452379463154-15598.post@n5.nabble.com>
	<1452379553993-15599.post@n5.nabble.com> <56918F86.2010405@gmx.de>
Message-ID: <CAEEmnrNOAx4jVk5CxuemiBGe6=LJcb9Xq5_br22oPhiffMCucw@mail.gmail.com>

Not sure how caching is a problem. I currently have if(0) ... else ... that
I manually change to if(1) when I switch from F6 to F5. How is automating
that so if can do if(preview()) going to affect the cache or cause any
other problems? It is just automating what I have to do manually.

If I changed $fn on the state then it might use more cache, but again it is
only automating what some people do manually.

I don't care what sort of variable it is communicated with as I can just
wrap it in my own function called preview(). It seems odd to start
inventing new syntax for such a simple feature. That seems to be why it has
never been implemented. I can't see why another $variable or built in
function is a bad thing. Especially as user variables and functions
override built in ones, so even if someone uses the same name it gets
overridden.

The same applies to my proposal for export, it just automates what people
do manually, with ! and * and the export menu.

On 9 January 2016 at 22:53, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 01/09/2016 11:45 PM, MichaelAtOz wrote:
> > Oh, that was nophead, just now...
> >
> Yep, actually I wanted to do that some time ago, but after discussion
> with Marius it turned out, it might not be as easy as it sounds.
> The feature itself is clear and very useful, but main concern was
> the internal caching I think.
> I'm still not sure we'll run into issues with a fixed value for each
> new evaluation (except maybe using more cache memory, but that would
> not be much different from just changing the value manually). I guess
> we'll find out, hopefully soon :-).
>
> Any ideas how to name it? I think it would make sense to
>
> a) not introduce more $ variables as this also makes no sense for
> a fixed value
>
> b) maybe have something like ENV.something that can then be extended
> for similar things like access to some system information as
> requested in other issues.
>
> ciao,
>   Torsten.
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160110/e99831bf/attachment.html>

From adamhill1988 at gmail.com  Sat Jan  9 19:26:27 2016
From: adamhill1988 at gmail.com (Rufe0)
Date: Sat, 9 Jan 2016 17:26:27 -0700 (MST)
Subject: [OpenSCAD] Color not displaying
In-Reply-To: <1452383868237-15605.post@n5.nabble.com>
References: <1452383324001-15602.post@n5.nabble.com> <56919D58.60006@gmx.de>
	<1452383868237-15605.post@n5.nabble.com>
Message-ID: <1452385587269-15608.post@n5.nabble.com>

Yeah it'f working fine now thanks, I was doing a render not preview



--
View this message in context: http://forum.openscad.org/Color-not-displaying-tp15602p15608.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sat Jan  9 19:35:15 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 10 Jan 2016 01:35:15 +0100
Subject: [OpenSCAD] Variable for render mode
In-Reply-To: <1452383850178-15604.post@n5.nabble.com>
References: <CAEEmnrNxeg3DcX1xYy96KAVtYjYKs3f1FnUpnC=VbAOXz2YfEw@mail.gmail.com>
	<1452308616769-15580.post@n5.nabble.com>
	<CAEEmnrOCHnWE8U=+OD6-93dpdghCX4U6a5GxUtiyeRwg9LmJkg@mail.gmail.com>
	<56910DBF.7030703@gmx.de> <1452379463154-15598.post@n5.nabble.com>
	<1452379553993-15599.post@n5.nabble.com> <56918F86.2010405@gmx.de>
	<1452383850178-15604.post@n5.nabble.com>
Message-ID: <5691A743.60002@gmx.de>

On 01/10/2016 12:57 AM, MichaelAtOz wrote:
> Note other discussion  here
> <https://github.com/openscad/openscad/issues/907>  , some idiot ;)
> suggested;
> 
Oi, someone reading the Debian bugtracker? ;-)

Right, that openscad.isRender() vs. env.platform()
was mainly to have some kind of logical grouping.
It's not strictly needed.

On 01/10/2016 01:12 AM, nop head wrote:
> I can't see why another $variable or built in function is
> a bad thing. Especially as user variables and functions
> override built in ones, so even if someone uses the same
> name it gets overridden.
>
For just one, that probably does not matter too much, but
there's lots of more stuff requested. Having like 20
global $variables for various stuff that could even
be overwritten in user assignments clutters the global
namespace quite a bit.
Having constants as $ variable also seems quite strange
in itself.

Also the dot notation is existing already (even if it's
just for some obscure special case) and that's the proposed
style for a possible OpenSCAD future.

The function notation might work too. This could automatically
clarify the values are just returned and can't be overwritten
and maybe even allow additional parameters like a format
string for the date.

I think it makes sense to think about the style that
will allow implementing the other issues in the same
way, even if this specific issue will just add one
small part.

ciao,
  Torsten.



From doug at moens.org  Sat Jan  9 19:36:36 2016
From: doug at moens.org (doug moen)
Date: Sat, 9 Jan 2016 19:36:36 -0500
Subject: [OpenSCAD] Variable for render mode
In-Reply-To: <1452383850178-15604.post@n5.nabble.com>
References: <CAEEmnrNxeg3DcX1xYy96KAVtYjYKs3f1FnUpnC=VbAOXz2YfEw@mail.gmail.com>
	<1452308616769-15580.post@n5.nabble.com>
	<CAEEmnrOCHnWE8U=+OD6-93dpdghCX4U6a5GxUtiyeRwg9LmJkg@mail.gmail.com>
	<56910DBF.7030703@gmx.de> <1452379463154-15598.post@n5.nabble.com>
	<1452379553993-15599.post@n5.nabble.com> <56918F86.2010405@gmx.de>
	<1452383850178-15604.post@n5.nabble.com>
Message-ID: <CAGV6i+Nos=Jca4+eFH9uHwfs3CcR4JS0qpziAKe2D=wqqQAWfg@mail.gmail.com>

I'll vote for $render, since I think this variable is not so different from
$t and others.

The implementation will need a way to determine if $render is referenced by
the code, since it (allegedly) affects caching. With $render, the
information is available early, at parse time, before the script is
evaluated. If the information is referenced by passing a run time value to
the system() function, then the information might not be available until
after script evaluation is complete. (I'm assuming that there could be
multiple strings you can pass to system(), and not all of them have an
impact on caching.) So the choice of syntax puts constraints on the caching
implementation. I'm voting for $render because it places the fewest
constraints on the implementation. I'm also thinking about what constraints
we may be placing on future implementations, since the caching
implementation could change.

It's also the simplest design. See also what Nop Head says about inventing
a whole new syntax for such a simple feature.

On 9 January 2016 at 18:57, MichaelAtOz <oz.at.michael at gmail.com> wrote:

> I'd go with a built-in function,
>
> var = system("render"); // boolean - in this case
>
> Initial set of options;
> "preview" boolean
> "render" boolean
> "mainfilename" string
> "datetime" string, YYYYMMDDHHMMSSmmd, mm=millisec, d=0-6 (day of week)
> "GUI" boolean - false if command line
>
> I was going to suggest the following, but that is too late, the compiling
> has been done. Unless an auto-rerender concept...??
> "export" [ returns the export type,
> "STL","OFF","AMF","DXF","SVG","CSG","PNG"]
>
> Note other discussion  here
> <https://github.com/openscad/openscad/issues/907>  , some idiot ;)
> suggested;
>
>     openscad.isRender()
>     openscad.isPreview()
>
>     and later...
>
>     env.platform()
>     env.date()
>
> So perhaps
>
> var=openscad.system(as per above);
>
> You don't need a separate env
>
>
>
>
>
> -----
> Newly minted Admin - PM me if you need anything, or if I've done something
> stupid...
>
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; to the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work. Obviously
> inclusion of works of previous authors is not included in the above.
>
> The TPP is no simple ?trade agreement.?   Fight it!
> http://www.ourfairdeal.org/   time is running out!
> --
> View this message in context:
> http://forum.openscad.org/Variable-for-render-mode-tp5340p15604.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160109/31b5d41e/attachment.html>

From oz.at.michael at gmail.com  Sat Jan  9 19:55:00 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 9 Jan 2016 17:55:00 -0700 (MST)
Subject: [OpenSCAD] CGAL errors upon translating a .scad file
In-Reply-To: <1452104708956-15526.post@n5.nabble.com>
References: <1452104708956-15526.post@n5.nabble.com>
Message-ID: <1452387300174-15611.post@n5.nabble.com>

J?rgen, paste the text from you OP here again, confirm it's working now, &
re-publish your issue.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/CGAL-errors-upon-translating-a-scad-file-tp15526p15611.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From juergen.boehm at aviduratas.de  Sat Jan  9 20:00:40 2016
From: juergen.boehm at aviduratas.de (JBoehm)
Date: Sat, 9 Jan 2016 18:00:40 -0700 (MST)
Subject: [OpenSCAD] CGAL errors upon translating a .scad file
In-Reply-To: <1452104708956-15526.post@n5.nabble.com>
References: <1452104708956-15526.post@n5.nabble.com>
Message-ID: <1452387640201-15612.post@n5.nabble.com>

The problem described in the above post I could in the meantime more or less
solve. In the original files modelpart-003.scad and others of a similar kind
I gave coordinates with 12 decimal digits after the decimal point. Now I
round to six digits after the decimal point and get no CGAL errors anymore.

Nevertheless not all of my problems are solved: If I calculate with

openscad -o modelpart-008.stl modelpart-008.scad
openscad -o modelpart-009.stl modelpart-009.scad

http://www.aviduratas.de/openscad-01/modelpart-008.scad
<http://www.aviduratas.de/openscad-01/modelpart-008.scad>  
http://www.aviduratas.de/openscad-01/modelpart-009.scad
<http://www.aviduratas.de/openscad-01/modelpart-009.scad>  

and then apply

http://www.aviduratas.de/openscad-01/tsty.scad
<http://www.aviduratas.de/openscad-01/tsty.scad>  

to get

http://www.aviduratas.de/openscad-01/tsty.stl
<http://www.aviduratas.de/openscad-01/tsty.stl>  

the STL-file tsty.stl is faulty, namely all facets belonging to
modelpart-009.stl are shown pink upon
doing import("tsty.stl"); and then F5 and F12






--
View this message in context: http://forum.openscad.org/CGAL-errors-upon-translating-a-scad-file-tp15526p15612.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From juergen.boehm at aviduratas.de  Sat Jan  9 20:05:05 2016
From: juergen.boehm at aviduratas.de (JBoehm)
Date: Sat, 9 Jan 2016 18:05:05 -0700 (MST)
Subject: [OpenSCAD] CGAL errors upon translating a .scad file
In-Reply-To: <1452387640201-15612.post@n5.nabble.com>
References: <1452104708956-15526.post@n5.nabble.com>
	<1452387640201-15612.post@n5.nabble.com>
Message-ID: <1452387905791-15613.post@n5.nabble.com>

This is a copy of my original threadstarter post, that did not make it to the
mailing list:

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Hello everybody,


Upon translating the file

http://www.aviduratas.de/openscad/modelpart-003.scad

I get with the command

juergen at antares:~$openscad -o modelpart-003.stl modelpart-003.scad

the output

ERROR: CGAL error in CGALUtils::applyBinaryOperator union: CGAL ERROR:
assertion violation!
Expr: itl != it->second.end()
File: /usr/include/CGAL/Nef_3/SNC_external_structure.h
Line: 1101
ERROR: CGAL error in CGALUtils::applyBinaryOperator union: CGAL ERROR:
assertion violation!
Expr: G.mark(v1,0)==G.mark(v2,0)&& G.mark(v1,1)==G.mark(v2,1)
File: /usr/include/CGAL/Nef_S2/SM_overlayer.h
Line: 252
ERROR: CGAL error in CGALUtils::applyBinaryOperator union: CGAL ERROR:
assertion violation!
Expr: itl != it->second.end()
File: /usr/include/CGAL/Nef_3/SNC_external_structure.h
Line: 1101
ERROR: CGAL error in CGALUtils::applyBinaryOperator union: CGAL ERROR:
assertion violation!
Expr: G.mark(v1,0)==G.mark(v2,0)&& G.mark(v1,1)==G.mark(v2,1)
File: /usr/include/CGAL/Nef_S2/SM_overlayer.h
Line: 252
WARNING: Exported object may not be a valid 2-manifold and may need repair

In the final .stl a certain number of triangle prisms are missing. If I
translate the same .scad with openjscad the output has different errors,
namely some triangles from triangular prisms are omitted.

I suspect that my input file is free of errors, because it is generated by a
very easy process from a triangulation of a sphere, which, upon visual
inspection, looks totally ok.

So maybe there is a problem with OpenSCAD here? In general, these files that
I am translating currently, which are part of a triangulation of a spheroid
shell seem to be a good test on correctness of programs like openscad. With
another one I found an issue in OpenJSCAD which produced errors not present
in the OpenSCAD translation. (it was the file
http://www.aviduratas.de/modelpart-025.scad)

It is probably quite difficult to pinpoint the problem, as the input file is
large, but maybe someone of you finds a way to connect the missing triangle
prisms with concrete positions in the files, a problem I could not solve,
because I currently don't know how to extract coordinates in netfabb - maybe
it could be done with another viewing software.

Greetings

J?rgen




--
View this message in context: http://forum.openscad.org/CGAL-errors-upon-translating-a-scad-file-tp15526p15613.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Sun Jan 10 02:39:51 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 10 Jan 2016 07:39:51 +0000
Subject: [OpenSCAD] Variable for render mode
In-Reply-To: <CAGV6i+Nos=Jca4+eFH9uHwfs3CcR4JS0qpziAKe2D=wqqQAWfg@mail.gmail.com>
References: <CAEEmnrNxeg3DcX1xYy96KAVtYjYKs3f1FnUpnC=VbAOXz2YfEw@mail.gmail.com>
	<1452308616769-15580.post@n5.nabble.com>
	<CAEEmnrOCHnWE8U=+OD6-93dpdghCX4U6a5GxUtiyeRwg9LmJkg@mail.gmail.com>
	<56910DBF.7030703@gmx.de> <1452379463154-15598.post@n5.nabble.com>
	<1452379553993-15599.post@n5.nabble.com> <56918F86.2010405@gmx.de>
	<1452383850178-15604.post@n5.nabble.com>
	<CAGV6i+Nos=Jca4+eFH9uHwfs3CcR4JS0qpziAKe2D=wqqQAWfg@mail.gmail.com>
Message-ID: <CAEEmnrM-WM1CRvGThVyy+=2CEkpXGKFKwH+QcyQeS_oA8OaBFQ@mail.gmail.com>

Can you explain what the issue with caching is please? How is a variable
that aromatically changes once at the start of a preview / render a problem
compared to me manually changing it or $t which is also a variable that
changes automatically.

On 10 January 2016 at 00:36, doug moen <doug at moens.org> wrote:

> I'll vote for $render, since I think this variable is not so different
> from $t and others.
>
> The implementation will need a way to determine if $render is referenced
> by the code, since it (allegedly) affects caching. With $render, the
> information is available early, at parse time, before the script is
> evaluated. If the information is referenced by passing a run time value to
> the system() function, then the information might not be available until
> after script evaluation is complete. (I'm assuming that there could be
> multiple strings you can pass to system(), and not all of them have an
> impact on caching.) So the choice of syntax puts constraints on the caching
> implementation. I'm voting for $render because it places the fewest
> constraints on the implementation. I'm also thinking about what constraints
> we may be placing on future implementations, since the caching
> implementation could change.
>
> It's also the simplest design. See also what Nop Head says about inventing
> a whole new syntax for such a simple feature.
>
> On 9 January 2016 at 18:57, MichaelAtOz <oz.at.michael at gmail.com> wrote:
>
>> I'd go with a built-in function,
>>
>> var = system("render"); // boolean - in this case
>>
>> Initial set of options;
>> "preview" boolean
>> "render" boolean
>> "mainfilename" string
>> "datetime" string, YYYYMMDDHHMMSSmmd, mm=millisec, d=0-6 (day of week)
>> "GUI" boolean - false if command line
>>
>> I was going to suggest the following, but that is too late, the compiling
>> has been done. Unless an auto-rerender concept...??
>> "export" [ returns the export type,
>> "STL","OFF","AMF","DXF","SVG","CSG","PNG"]
>>
>> Note other discussion  here
>> <https://github.com/openscad/openscad/issues/907>  , some idiot ;)
>> suggested;
>>
>>     openscad.isRender()
>>     openscad.isPreview()
>>
>>     and later...
>>
>>     env.platform()
>>     env.date()
>>
>> So perhaps
>>
>> var=openscad.system(as per above);
>>
>> You don't need a separate env
>>
>>
>>
>>
>>
>> -----
>> Newly minted Admin - PM me if you need anything, or if I've done
>> something stupid...
>>
>> Unless specifically shown otherwise above, my contribution is in the
>> Public Domain; to the extent possible under law, I have waived all
>> copyright and related or neighbouring rights to this work. Obviously
>> inclusion of works of previous authors is not included in the above.
>>
>> The TPP is no simple ?trade agreement.?   Fight it!
>> http://www.ourfairdeal.org/   time is running out!
>> --
>> View this message in context:
>> http://forum.openscad.org/Variable-for-render-mode-tp5340p15604.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160110/01f9b1b9/attachment.html>

From nop.head at gmail.com  Sun Jan 10 02:41:54 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 10 Jan 2016 07:41:54 +0000
Subject: [OpenSCAD] Variable for render mode
In-Reply-To: <CAEEmnrM-WM1CRvGThVyy+=2CEkpXGKFKwH+QcyQeS_oA8OaBFQ@mail.gmail.com>
References: <CAEEmnrNxeg3DcX1xYy96KAVtYjYKs3f1FnUpnC=VbAOXz2YfEw@mail.gmail.com>
	<1452308616769-15580.post@n5.nabble.com>
	<CAEEmnrOCHnWE8U=+OD6-93dpdghCX4U6a5GxUtiyeRwg9LmJkg@mail.gmail.com>
	<56910DBF.7030703@gmx.de> <1452379463154-15598.post@n5.nabble.com>
	<1452379553993-15599.post@n5.nabble.com> <56918F86.2010405@gmx.de>
	<1452383850178-15604.post@n5.nabble.com>
	<CAGV6i+Nos=Jca4+eFH9uHwfs3CcR4JS0qpziAKe2D=wqqQAWfg@mail.gmail.com>
	<CAEEmnrM-WM1CRvGThVyy+=2CEkpXGKFKwH+QcyQeS_oA8OaBFQ@mail.gmail.com>
Message-ID: <CAEEmnrPJ0wVw4BMhvB0ncb00uMeDE+SdDz15qOiUEto5-2PCoQ@mail.gmail.com>

No idea where "aromatically" came from!

On 10 January 2016 at 07:39, nop head <nop.head at gmail.com> wrote:

> Can you explain what the issue with caching is please? How is a variable
> that aromatically changes once at the start of a preview / render a problem
> compared to me manually changing it or $t which is also a variable that
> changes automatically.
>
> On 10 January 2016 at 00:36, doug moen <doug at moens.org> wrote:
>
>> I'll vote for $render, since I think this variable is not so different
>> from $t and others.
>>
>> The implementation will need a way to determine if $render is referenced
>> by the code, since it (allegedly) affects caching. With $render, the
>> information is available early, at parse time, before the script is
>> evaluated. If the information is referenced by passing a run time value to
>> the system() function, then the information might not be available until
>> after script evaluation is complete. (I'm assuming that there could be
>> multiple strings you can pass to system(), and not all of them have an
>> impact on caching.) So the choice of syntax puts constraints on the caching
>> implementation. I'm voting for $render because it places the fewest
>> constraints on the implementation. I'm also thinking about what constraints
>> we may be placing on future implementations, since the caching
>> implementation could change.
>>
>> It's also the simplest design. See also what Nop Head says about
>> inventing a whole new syntax for such a simple feature.
>>
>> On 9 January 2016 at 18:57, MichaelAtOz <oz.at.michael at gmail.com> wrote:
>>
>>> I'd go with a built-in function,
>>>
>>> var = system("render"); // boolean - in this case
>>>
>>> Initial set of options;
>>> "preview" boolean
>>> "render" boolean
>>> "mainfilename" string
>>> "datetime" string, YYYYMMDDHHMMSSmmd, mm=millisec, d=0-6 (day of week)
>>> "GUI" boolean - false if command line
>>>
>>> I was going to suggest the following, but that is too late, the compiling
>>> has been done. Unless an auto-rerender concept...??
>>> "export" [ returns the export type,
>>> "STL","OFF","AMF","DXF","SVG","CSG","PNG"]
>>>
>>> Note other discussion  here
>>> <https://github.com/openscad/openscad/issues/907>  , some idiot ;)
>>> suggested;
>>>
>>>     openscad.isRender()
>>>     openscad.isPreview()
>>>
>>>     and later...
>>>
>>>     env.platform()
>>>     env.date()
>>>
>>> So perhaps
>>>
>>> var=openscad.system(as per above);
>>>
>>> You don't need a separate env
>>>
>>>
>>>
>>>
>>>
>>> -----
>>> Newly minted Admin - PM me if you need anything, or if I've done
>>> something stupid...
>>>
>>> Unless specifically shown otherwise above, my contribution is in the
>>> Public Domain; to the extent possible under law, I have waived all
>>> copyright and related or neighbouring rights to this work. Obviously
>>> inclusion of works of previous authors is not included in the above.
>>>
>>> The TPP is no simple ?trade agreement.?   Fight it!
>>> http://www.ourfairdeal.org/   time is running out!
>>> --
>>> View this message in context:
>>> http://forum.openscad.org/Variable-for-render-mode-tp5340p15604.html
>>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160110/155bdd67/attachment.html>

From arnholm at arnholm.org  Sun Jan 10 04:12:14 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Sun, 10 Jan 2016 10:12:14 +0100
Subject: [OpenSCAD] Changes to CGAL datastructures? Memory use.
In-Reply-To: <84DC1E1A-C46C-4DE5-8105-F07B68A9EB4B@kintel.net>
References: <1452145786651-15531.post@n5.nabble.com>
	<568EC51D.4020505@arnholm.org>
	<1A42A2FE-4F60-45E3-8F84-2478C72CF575@kintel.net>
	<340896fbcf5fb0aa0eb353091fc609a8@arnholm.org>
	<4F5EB9A1-64EA-4B7A-9215-C5C88AE39B78@kintel.net>
	<56904BCA.7020009@arnholm.org>
	<84DC1E1A-C46C-4DE5-8105-F07B68A9EB4B@kintel.net>
Message-ID: <5692206E.5080907@arnholm.org>

On 09. jan. 2016 03:44, Marius Kintel wrote:
> Carsten,
>
> Just to clarify: There should not be any difference in performance from using a surface() vs. the corresponding polyhedron(). These produce exactly the same internal data structure in OpenSCAD. If you see any differences that?s likely to be differences in the actually produced geometry. ?or an unknown bug in OpenSCAD - that happens too :)
>
>   -Marius

Thank you, Marius, it makes sense. I have been experimenting a little 
with both the OpenSCAD 'surface' command reading images and the 
equivalent new feature in AngelScript CSG which creates explicit 
polyhedrons http://arnholm.org/angelscript-csg-part-3/

I am able to import images in both cases, but it seems very difficult to 
successfully perform any booleans on such models.

Carsten Arnholm


From oz.at.michael at gmail.com  Sun Jan 10 05:16:03 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sun, 10 Jan 2016 03:16:03 -0700 (MST)
Subject: [OpenSCAD] Variable for render mode
In-Reply-To: <CAEEmnrPJ0wVw4BMhvB0ncb00uMeDE+SdDz15qOiUEto5-2PCoQ@mail.gmail.com>
References: <1452308616769-15580.post@n5.nabble.com>
	<CAEEmnrOCHnWE8U=+OD6-93dpdghCX4U6a5GxUtiyeRwg9LmJkg@mail.gmail.com>
	<56910DBF.7030703@gmx.de> <1452379463154-15598.post@n5.nabble.com>
	<1452379553993-15599.post@n5.nabble.com> <56918F86.2010405@gmx.de>
	<1452383850178-15604.post@n5.nabble.com>
	<CAGV6i+Nos=Jca4+eFH9uHwfs3CcR4JS0qpziAKe2D=wqqQAWfg@mail.gmail.com>
	<CAEEmnrM-WM1CRvGThVyy+=2CEkpXGKFKwH+QcyQeS_oA8OaBFQ@mail.gmail.com>
	<CAEEmnrPJ0wVw4BMhvB0ncb00uMeDE+SdDz15qOiUEto5-2PCoQ@mail.gmail.com>
Message-ID: <1452420963891-15617.post@n5.nabble.com>

nophead wrote
> "aromatically" 

Smells like sh---...garbage...



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Variable-for-render-mode-tp5340p15617.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mickvav at gmail.com  Sun Jan 10 06:49:15 2016
From: mickvav at gmail.com (Mihail Vasiliev)
Date: Sun, 10 Jan 2016 14:49:15 +0300
Subject: [OpenSCAD] export() function.
In-Reply-To: <05186620-8678-49D1-A600-B8CDEA5F2143@gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <5690E9D6.7090504@jonbondy.com>
	<5690FF46.90301@gmail.com> <20160109130106.63696b0a@cygnus>
	<05186620-8678-49D1-A600-B8CDEA5F2143@gmail.com>
Message-ID: <CAPmXz3U5s6JzG0LUDhKMUnTVXBSKEM4ERsXybH1etS58Q8iyPQ@mail.gmail.com>

Ok, let's try to create a short resume of the discussion.
1. The feature itself is expected by at least some (or even most of)
people, who posted their opinions here.
2. People are interested in having options to control, when export is
performing it's action - preview or render mode.
3. There are security and unpredicted behavior issues:
3a when exporting to arbitrary file.
3b when importing and exporting from/to the same file.

4. There is a separate, but extremely interesting idea on giving names/tags
to subtrees. I think it's worth separate discussion. Like having a
function, which fetches such name from subtree to be able to do something
like:
module mymod(){
  name("My Super Module");
  ...
};

export(file=nameofchild()+".stl") mymod();

Or even place texts with module names on top of the modules themself (seems
fun, but not sure, whether it is needed by someone at all).

If I have missed something, correct me please.

So, I have a simple question to maintainers - if I address the issues 1-3,
will these patches be accepted (after technical review, cleanup, whatever)?

What I'm planing to do:
2. Add options to export()
onrender=true|false, default - true
onpreview=true|false, default - true
// At this point I want to add undiscussed option
show=true|false, default - true, to control, whether just-exported subtree
should be shown on screen.
3a. Limit export operations to current working directory. Limit characters,
allowed in filenames to some known-safe set.
3b. Store all export/import filenames in some common (global?) data
structure to prevent loops.
10 ???. 2016 ?. 12:26 AM ???????????? "Greg Frost" <
gregorybartonfrost at gmail.com> ???????:

> What if instead of export(), you could just tag a part of the tree with a
> name. Then when you do export, there could be an option to export subtrees
> where you give a base name for the export and each tagged subtree is
> exported with a filename constructed by appending the subtree's name to the
> base name.
>
> You would have to think about what to do if two things were tagged with
> the same name.
>
> Greg Frost
>
> > On 10 Jan 2016, at 5:31 am, "G. Wade Johnson" <gwadej at anomaly.org>
> wrote:
> >
> > On Sat, 09 Jan 2016 07:38:30 -0500
> > Ezra Reynolds <shadowwynd at gmail.com> wrote:
> >
> >> I do the same, many of my files have a list of
> >>
> >>    *!module1Name();
> >>    *!module2Name();
> >
> > I like that approach.
> >
> > In many of my more complicated designs I have something like:
> >
> > plate="combined";
> > if( plate == "part1" )
> > {
> >   module1Name();
> > }
> > if( plate == "part2" )
> > {
> >   module2Name();
> > }
> > if( plate == "combined" )
> > {
> >   translate([-20,-20, 0]) module1Name();
> >   translate([ 20, 20, 0]) module2Name();
> > }
> >
> > This makes it easy to generate specific versions using openscad on the
> > command line. It works particularly well driven by make.
> >
> > G. Wade
> >
> >> at the bottom so that I can easily turn pieces off and on.
> >>
> >> However, if using a generator:
> >> for (i=[0 : 10])
> >> {
> >>     for (j=[0 : 10])
> >>     {
> >>    translate ([i*20, j*20, 0]) smallPartGenerator(i, j);
> >>
> >>     }
> >> }
> >>
> >> I then have 100 individual volumes on a build plate  which is NOT as
> >> easy to toggle.
> >>
> >> If we had an export command, then I could have an
> >> export("R"+str(i) + "C"+str(j) + ".STL");
> >> in the mix and get 100 STL files out of the deal; this makes it
> >> easier to get a specific replacement without reprinting all 100.
> >>
> >>
> >>
> >>> On 1/9/2016 6:07 AM, jon wrote:
> >>> I create modules for each part, list them at the bottom of the
> >>> script, and then use ! to create the geometry for the part that I
> >>> wish to print.
> >>>
> >>>> On 1/8/2016 9:59 PM, Ezra Reynolds wrote:
> >>>> I normally arrange the pieces in OpenSCAD for 3D printing (many
> >>>> discrete volumes as a single STL).  This works up to the point
> >>>> where I have a single part, or several parts, fail during
> >>>> printing / derafting/assembly.  It is an error-prone thing to
> >>>> manually isolate each part, render as an STL, save it with the
> >>>> correct name, rinse and repeat.  Not a problem with a three-part
> >>>> assembly, but could be a problem with file that generates two
> >>>> dozen variations on a theme.
> >>>
> >>>
> >>> _______________________________________________
> >>> OpenSCAD mailing list
> >>> Discuss at lists.openscad.org
> >>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> >>
> >> _______________________________________________
> >> OpenSCAD mailing list
> >> Discuss at lists.openscad.org
> >> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> >
> >
> > --
> > You need at least two viewpoints to have perspective.
> >                                                    -- Rick Hoselton
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160110/05505848/attachment.html>

From alan at lxorguk.ukuu.org.uk  Sun Jan 10 07:11:57 2016
From: alan at lxorguk.ukuu.org.uk (Alan Cox)
Date: Sun, 10 Jan 2016 12:11:57 +0000
Subject: [OpenSCAD] export() function.
In-Reply-To: <CAPmXz3U5s6JzG0LUDhKMUnTVXBSKEM4ERsXybH1etS58Q8iyPQ@mail.gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <5690E9D6.7090504@jonbondy.com>
	<5690FF46.90301@gmail.com> <20160109130106.63696b0a@cygnus>
	<05186620-8678-49D1-A600-B8CDEA5F2143@gmail.com>
	<CAPmXz3U5s6JzG0LUDhKMUnTVXBSKEM4ERsXybH1etS58Q8iyPQ@mail.gmail.com>
Message-ID: <20160110121157.28da203b@www.etchedpixels.co.uk>

On Sun, 10 Jan 2016 14:49:15 +0300
Mihail Vasiliev <mickvav at gmail.com> wrote:

> Ok, let's try to create a short resume of the discussion.
> 1. The feature itself is expected by at least some (or even most of)
> people, who posted their opinions here.

I'm surprised we need an export() given that you really need render() to
force the right behaviour.  render(export="xx") might be saner but that
is a minor point.

> 2. People are interested in having options to control, when export is
> performing it's action - preview or render mode.

Or neither or both. However that's *nothing* to do with export(). It's a
matter of having a variable saying which mode you are in. That is
immediately way more powerful and cleaner.

Even better but a separate issue might also be having a "view" variable
that two fn keys inc/dec so that you can flip between views as programmed.

> 3. There are security and unpredicted behavior issues:
> 3a when exporting to arbitrary file.
> 3b when importing and exporting from/to the same file.

Any file can be a security issue. Even writing just files ending ".stl"
into the current directory can be used to overwrite existing stuff, while
not overwriting has its own set of usability problems.

> 3a. Limit export operations to current working directory. Limit characters,
> allowed in filenames to some known-safe set.

There is no simple known safe set (eg "AUX" in windows) but you can get
close. Another alternative is to strip any pathname elements out and
place all the render components in a subdirectory based upon the name of
the original

ie

	foo.scad

produces
	components-foo/*.stl

(you'll notice this is basically what for example Firefox does saving web
pages)


Alan


From nop.head at gmail.com  Sun Jan 10 07:13:42 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 10 Jan 2016 12:13:42 +0000
Subject: [OpenSCAD] export() function.
In-Reply-To: <CAPmXz3U5s6JzG0LUDhKMUnTVXBSKEM4ERsXybH1etS58Q8iyPQ@mail.gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <5690E9D6.7090504@jonbondy.com>
	<5690FF46.90301@gmail.com> <20160109130106.63696b0a@cygnus>
	<05186620-8678-49D1-A600-B8CDEA5F2143@gmail.com>
	<CAPmXz3U5s6JzG0LUDhKMUnTVXBSKEM4ERsXybH1etS58Q8iyPQ@mail.gmail.com>
Message-ID: <CAEEmnrMp2LRLL+D-AzhrGF-KqU2mR06jVz4ehk-=mmcm37KRrg@mail.gmail.com>

I don't think export should ever do anything in preview or render except
cause it children to be ignored. Making what it does optional does not
solve any of the objections raised about side effects, security and race
conditions. It should only export on a menu action and then show the files
names it has generated and the directory they will go into like a normal
export file dialog. The only complication is there are multiple files
rather than one.

There is no need for new syntax for meta data tagging. You can always
explicitly put what you want exported under the export statement.


On 10 January 2016 at 11:49, Mihail Vasiliev <mickvav at gmail.com> wrote:

> Ok, let's try to create a short resume of the discussion.
> 1. The feature itself is expected by at least some (or even most of)
> people, who posted their opinions here.
> 2. People are interested in having options to control, when export is
> performing it's action - preview or render mode.
> 3. There are security and unpredicted behavior issues:
> 3a when exporting to arbitrary file.
> 3b when importing and exporting from/to the same file.
>
> 4. There is a separate, but extremely interesting idea on giving
> names/tags to subtrees. I think it's worth separate discussion. Like having
> a function, which fetches such name from subtree to be able to do something
> like:
> module mymod(){
>   name("My Super Module");
>   ...
> };
>
> export(file=nameofchild()+".stl") mymod();
>
> Or even place texts with module names on top of the modules themself
> (seems fun, but not sure, whether it is needed by someone at all).
>
> If I have missed something, correct me please.
>
> So, I have a simple question to maintainers - if I address the issues 1-3,
> will these patches be accepted (after technical review, cleanup, whatever)?
>
> What I'm planing to do:
> 2. Add options to export()
> onrender=true|false, default - true
> onpreview=true|false, default - true
> // At this point I want to add undiscussed option
> show=true|false, default - true, to control, whether just-exported subtree
> should be shown on screen.
> 3a. Limit export operations to current working directory. Limit
> characters, allowed in filenames to some known-safe set.
> 3b. Store all export/import filenames in some common (global?) data
> structure to prevent loops.
> 10 ???. 2016 ?. 12:26 AM ???????????? "Greg Frost" <
> gregorybartonfrost at gmail.com> ???????:
>
> What if instead of export(), you could just tag a part of the tree with a
>> name. Then when you do export, there could be an option to export subtrees
>> where you give a base name for the export and each tagged subtree is
>> exported with a filename constructed by appending the subtree's name to the
>> base name.
>>
>> You would have to think about what to do if two things were tagged with
>> the same name.
>>
>> Greg Frost
>>
>> > On 10 Jan 2016, at 5:31 am, "G. Wade Johnson" <gwadej at anomaly.org>
>> wrote:
>> >
>> > On Sat, 09 Jan 2016 07:38:30 -0500
>> > Ezra Reynolds <shadowwynd at gmail.com> wrote:
>> >
>> >> I do the same, many of my files have a list of
>> >>
>> >>    *!module1Name();
>> >>    *!module2Name();
>> >
>> > I like that approach.
>> >
>> > In many of my more complicated designs I have something like:
>> >
>> > plate="combined";
>> > if( plate == "part1" )
>> > {
>> >   module1Name();
>> > }
>> > if( plate == "part2" )
>> > {
>> >   module2Name();
>> > }
>> > if( plate == "combined" )
>> > {
>> >   translate([-20,-20, 0]) module1Name();
>> >   translate([ 20, 20, 0]) module2Name();
>> > }
>> >
>> > This makes it easy to generate specific versions using openscad on the
>> > command line. It works particularly well driven by make.
>> >
>> > G. Wade
>> >
>> >> at the bottom so that I can easily turn pieces off and on.
>> >>
>> >> However, if using a generator:
>> >> for (i=[0 : 10])
>> >> {
>> >>     for (j=[0 : 10])
>> >>     {
>> >>    translate ([i*20, j*20, 0]) smallPartGenerator(i, j);
>> >>
>> >>     }
>> >> }
>> >>
>> >> I then have 100 individual volumes on a build plate  which is NOT as
>> >> easy to toggle.
>> >>
>> >> If we had an export command, then I could have an
>> >> export("R"+str(i) + "C"+str(j) + ".STL");
>> >> in the mix and get 100 STL files out of the deal; this makes it
>> >> easier to get a specific replacement without reprinting all 100.
>> >>
>> >>
>> >>
>> >>> On 1/9/2016 6:07 AM, jon wrote:
>> >>> I create modules for each part, list them at the bottom of the
>> >>> script, and then use ! to create the geometry for the part that I
>> >>> wish to print.
>> >>>
>> >>>> On 1/8/2016 9:59 PM, Ezra Reynolds wrote:
>> >>>> I normally arrange the pieces in OpenSCAD for 3D printing (many
>> >>>> discrete volumes as a single STL).  This works up to the point
>> >>>> where I have a single part, or several parts, fail during
>> >>>> printing / derafting/assembly.  It is an error-prone thing to
>> >>>> manually isolate each part, render as an STL, save it with the
>> >>>> correct name, rinse and repeat.  Not a problem with a three-part
>> >>>> assembly, but could be a problem with file that generates two
>> >>>> dozen variations on a theme.
>> >>>
>> >>>
>> >>> _______________________________________________
>> >>> OpenSCAD mailing list
>> >>> Discuss at lists.openscad.org
>> >>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>> >>
>> >> _______________________________________________
>> >> OpenSCAD mailing list
>> >> Discuss at lists.openscad.org
>> >> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>> >
>> >
>> > --
>> > You need at least two viewpoints to have perspective.
>> >                                                    -- Rick Hoselton
>> >
>> > _______________________________________________
>> > OpenSCAD mailing list
>> > Discuss at lists.openscad.org
>> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160110/54a25362/attachment.html>

From nop.head at gmail.com  Sun Jan 10 08:57:40 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 10 Jan 2016 13:57:40 +0000
Subject: [OpenSCAD] Scope rules broken
Message-ID: <CAEEmnrNSuUgE+oiHSOW_5-xUgaevokv+mHFE08RbHe5M=3BfWw@mail.gmail.com>

To get rid of warnings I changed my assigns to assignment inside braces but
it doesn't work if the braces are otherwise redundant. I.e. braces don't
create a new scope, only control statements like if and for. Surely this is
wrong?

module test() {
    assign(x = 0) echo(x);
    assign(x = 1) echo(x);
}

test();

module test2() {
    { x = 0; echo(x); }
    { x = 1; echo(x); }
}

test2();

module test3() {
    if(1){ x = 0; echo(x); }
    if(1){ x = 1; echo(x); }
}

test3();

DEPRECATED: The assign() module will be removed in future releases. Use a
regular assignment instead.

ECHO: 0

ECHO: 1

ECHO: 1 <==== should be 0

ECHO: 1

ECHO: 0

ECHO: 1
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160110/abfc9551/attachment.html>

From nop.head at gmail.com  Sun Jan 10 09:19:28 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 10 Jan 2016 14:19:28 +0000
Subject: [OpenSCAD] Scope rules broken
In-Reply-To: <CAEEmnrNSuUgE+oiHSOW_5-xUgaevokv+mHFE08RbHe5M=3BfWw@mail.gmail.com>
References: <CAEEmnrNSuUgE+oiHSOW_5-xUgaevokv+mHFE08RbHe5M=3BfWw@mail.gmail.com>
Message-ID: <CAEEmnrMBko1nj=H_qyRpuwq6pBcnSPkW4AZntKe0zPA2jT8UBw@mail.gmail.com>

My workaround is to use for in place of assign. It seems to be an exact
replacement when the values is a scalar.

On 10 January 2016 at 13:57, nop head <nop.head at gmail.com> wrote:

> To get rid of warnings I changed my assigns to assignment inside braces
> but it doesn't work if the braces are otherwise redundant. I.e. braces
> don't create a new scope, only control statements like if and for. Surely
> this is wrong?
>
> module test() {
>     assign(x = 0) echo(x);
>     assign(x = 1) echo(x);
> }
>
> test();
>
> module test2() {
>     { x = 0; echo(x); }
>     { x = 1; echo(x); }
> }
>
> test2();
>
> module test3() {
>     if(1){ x = 0; echo(x); }
>     if(1){ x = 1; echo(x); }
> }
>
> test3();
>
> DEPRECATED: The assign() module will be removed in future releases. Use a
> regular assignment instead.
>
> ECHO: 0
>
> ECHO: 1
>
> ECHO: 1 <==== should be 0
>
> ECHO: 1
>
> ECHO: 0
>
> ECHO: 1
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160110/af55dfda/attachment.html>

From doug at moens.org  Sun Jan 10 10:16:53 2016
From: doug at moens.org (doug moen)
Date: Sun, 10 Jan 2016 10:16:53 -0500
Subject: [OpenSCAD] Variable for render mode
In-Reply-To: <CAEEmnrM-WM1CRvGThVyy+=2CEkpXGKFKwH+QcyQeS_oA8OaBFQ@mail.gmail.com>
References: <CAEEmnrNxeg3DcX1xYy96KAVtYjYKs3f1FnUpnC=VbAOXz2YfEw@mail.gmail.com>
	<1452308616769-15580.post@n5.nabble.com>
	<CAEEmnrOCHnWE8U=+OD6-93dpdghCX4U6a5GxUtiyeRwg9LmJkg@mail.gmail.com>
	<56910DBF.7030703@gmx.de> <1452379463154-15598.post@n5.nabble.com>
	<1452379553993-15599.post@n5.nabble.com> <56918F86.2010405@gmx.de>
	<1452383850178-15604.post@n5.nabble.com>
	<CAGV6i+Nos=Jca4+eFH9uHwfs3CcR4JS0qpziAKe2D=wqqQAWfg@mail.gmail.com>
	<CAEEmnrM-WM1CRvGThVyy+=2CEkpXGKFKwH+QcyQeS_oA8OaBFQ@mail.gmail.com>
Message-ID: <CAGV6i+MopyAr2qwCde44EipokUBi2eY0wZWimW42aSAfffpGOA@mail.gmail.com>

If the variable aromatically changes, then the problem is code smell.

On Sunday, 10 January 2016, nop head <nop.head at gmail.com> wrote:

> Can you explain what the issue with caching is please? How is a variable
> that aromatically changes once at the start of a preview / render a problem
> compared to me manually changing it or $t which is also a variable that
> changes automatically.
>
> On 10 January 2016 at 00:36, doug moen <doug at moens.org
> <javascript:_e(%7B%7D,'cvml','doug at moens.org');>> wrote:
>
>> I'll vote for $render, since I think this variable is not so different
>> from $t and others.
>>
>> The implementation will need a way to determine if $render is referenced
>> by the code, since it (allegedly) affects caching. With $render, the
>> information is available early, at parse time, before the script is
>> evaluated. If the information is referenced by passing a run time value to
>> the system() function, then the information might not be available until
>> after script evaluation is complete. (I'm assuming that there could be
>> multiple strings you can pass to system(), and not all of them have an
>> impact on caching.) So the choice of syntax puts constraints on the caching
>> implementation. I'm voting for $render because it places the fewest
>> constraints on the implementation. I'm also thinking about what constraints
>> we may be placing on future implementations, since the caching
>> implementation could change.
>>
>> It's also the simplest design. See also what Nop Head says about
>> inventing a whole new syntax for such a simple feature.
>>
>> On 9 January 2016 at 18:57, MichaelAtOz <oz.at.michael at gmail.com
>> <javascript:_e(%7B%7D,'cvml','oz.at.michael at gmail.com');>> wrote:
>>
>>> I'd go with a built-in function,
>>>
>>> var = system("render"); // boolean - in this case
>>>
>>> Initial set of options;
>>> "preview" boolean
>>> "render" boolean
>>> "mainfilename" string
>>> "datetime" string, YYYYMMDDHHMMSSmmd, mm=millisec, d=0-6 (day of week)
>>> "GUI" boolean - false if command line
>>>
>>> I was going to suggest the following, but that is too late, the compiling
>>> has been done. Unless an auto-rerender concept...??
>>> "export" [ returns the export type,
>>> "STL","OFF","AMF","DXF","SVG","CSG","PNG"]
>>>
>>> Note other discussion  here
>>> <https://github.com/openscad/openscad/issues/907>  , some idiot ;)
>>> suggested;
>>>
>>>     openscad.isRender()
>>>     openscad.isPreview()
>>>
>>>     and later...
>>>
>>>     env.platform()
>>>     env.date()
>>>
>>> So perhaps
>>>
>>> var=openscad.system(as per above);
>>>
>>> You don't need a separate env
>>>
>>>
>>>
>>>
>>>
>>> -----
>>> Newly minted Admin - PM me if you need anything, or if I've done
>>> something stupid...
>>>
>>> Unless specifically shown otherwise above, my contribution is in the
>>> Public Domain; to the extent possible under law, I have waived all
>>> copyright and related or neighbouring rights to this work. Obviously
>>> inclusion of works of previous authors is not included in the above.
>>>
>>> The TPP is no simple ?trade agreement.?   Fight it!
>>> http://www.ourfairdeal.org/   time is running out!
>>> --
>>> View this message in context:
>>> http://forum.openscad.org/Variable-for-render-mode-tp5340p15604.html
>>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> <javascript:_e(%7B%7D,'cvml','Discuss at lists.openscad.org');>
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> <javascript:_e(%7B%7D,'cvml','Discuss at lists.openscad.org');>
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160110/54e00bce/attachment.html>

From Torsten.Paul at gmx.de  Sun Jan 10 10:28:07 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 10 Jan 2016 16:28:07 +0100
Subject: [OpenSCAD] Scope rules broken
In-Reply-To: <CAEEmnrNSuUgE+oiHSOW_5-xUgaevokv+mHFE08RbHe5M=3BfWw@mail.gmail.com>
References: <CAEEmnrNSuUgE+oiHSOW_5-xUgaevokv+mHFE08RbHe5M=3BfWw@mail.gmail.com>
Message-ID: <56927887.3050200@gmx.de>

On 01/10/2016 02:57 PM, nop head wrote:
> To get rid of warnings I changed my assigns to assignment
> inside braces but it doesn't work if the braces are otherwise
> redundant. I.e. braces don't create a new scope, only control
> statements like if and for. Surely this is wrong?
> 
I think the key is "backward compatibility". It was used in
scripts before to group variables. Introducing a new scope
now, would break all those scripts.

I guess otherwise it would indeed be the preferred way to
create a new scope.

This is mentioned in the manual as "anonymous scopes"
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/General#Scope_of_variables

ciao,
  Torsten.



From Torsten.Paul at gmx.de  Sun Jan 10 11:14:27 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 10 Jan 2016 17:14:27 +0100
Subject: [OpenSCAD] Variable for render mode
In-Reply-To: <CAEEmnrM-WM1CRvGThVyy+=2CEkpXGKFKwH+QcyQeS_oA8OaBFQ@mail.gmail.com>
References: <CAEEmnrNxeg3DcX1xYy96KAVtYjYKs3f1FnUpnC=VbAOXz2YfEw@mail.gmail.com>
	<1452308616769-15580.post@n5.nabble.com>
	<CAEEmnrOCHnWE8U=+OD6-93dpdghCX4U6a5GxUtiyeRwg9LmJkg@mail.gmail.com>
	<56910DBF.7030703@gmx.de> <1452379463154-15598.post@n5.nabble.com>
	<1452379553993-15599.post@n5.nabble.com> <56918F86.2010405@gmx.de>
	<1452383850178-15604.post@n5.nabble.com>
	<CAGV6i+Nos=Jca4+eFH9uHwfs3CcR4JS0qpziAKe2D=wqqQAWfg@mail.gmail.com>
	<CAEEmnrM-WM1CRvGThVyy+=2CEkpXGKFKwH+QcyQeS_oA8OaBFQ@mail.gmail.com>
Message-ID: <56928363.5080102@gmx.de>

On 01/10/2016 08:39 AM, nop head wrote:
> Can you explain what the issue with caching is please? How
> is a variable that aromatically changes once at the start
> of a preview / render a problem compared to me manually
> changing it or $t which is also a variable that changes
> automatically.
>
No, as I said before, I'm not sure myself.

However I can show an example where caching was broken,
even when the user changes the scad script.

When toying with a loft() module I did pass the function
parameter to loft() via strings, so it looked like:

https://gist.githubusercontent.com/t-paul/7171783/raw/loft-5.png

  function path(t) = [ 0, 0, 80 + 80 * cos(180 * t) ];
  loft(path = "path") circle(1);

Due to the cache key for the loft module only having the
name of the function, it can't detect changes in the actual
values returned. To fix that, the cache key for the module
would also need to include the full function definition to
pick up changes at this point of the script.

Anyway, I've tried a simple way of injecting a $render
variable. This is currently only working for GUI, it's
a bit more complex to get it working for command line
too, but I guess we do want this for command line too.
Both $t and the $vpX variables are currently GUI-only
features and are never set when running from command
line.

For now I don't see any issues. I'll talk to Marius and
see if he can give some more insight into the concerns.

ciao,
  Torsten.



From doug at moens.org  Sun Jan 10 11:20:59 2016
From: doug at moens.org (doug moen)
Date: Sun, 10 Jan 2016 11:20:59 -0500
Subject: [OpenSCAD] Scope rules broken
In-Reply-To: <56927887.3050200@gmx.de>
References: <CAEEmnrNSuUgE+oiHSOW_5-xUgaevokv+mHFE08RbHe5M=3BfWw@mail.gmail.com>
	<56927887.3050200@gmx.de>
Message-ID: <CAGV6i+MgzfqhWSsBAWP0k_buQFfcZjHR2Xr9WxVrgRjWF3Tbeg@mail.gmail.com>

I discovered this earlier in the year. I agree it's a bug. OpenSCAD copies
it's syntax from the C-like family of languages, and in those languages,
{..} introduces a new scope. But some people discovered the bug, started
treating it as a feature (for grouping variables). And now the wiki
documents this as a feature.

Nop Head mentions that for(x=1,y=2) {...} is a substitute for introducing a
scope. I think this is another bug: we should report an error if you try to
iterate over something that is not a list or range.

So are we now going to update the wiki, recommending that people replace
assign(x=1,y=2){...} with for(x=1,y=2){...}? Yuck.

If we are going down this path, then I request that we add a let statement,
consistent with the let expression, so that you can use let(x=1,y=2){...}
instead of abusing the for statement.

On 10 January 2016 at 10:28, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 01/10/2016 02:57 PM, nop head wrote:
> > To get rid of warnings I changed my assigns to assignment
> > inside braces but it doesn't work if the braces are otherwise
> > redundant. I.e. braces don't create a new scope, only control
> > statements like if and for. Surely this is wrong?
> >
> I think the key is "backward compatibility". It was used in
> scripts before to group variables. Introducing a new scope
> now, would break all those scripts.
>
> I guess otherwise it would indeed be the preferred way to
> create a new scope.
>
> This is mentioned in the manual as "anonymous scopes"
>
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/General#Scope_of_variables
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160110/3c5e075f/attachment.html>

From nop.head at gmail.com  Sun Jan 10 11:24:01 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 10 Jan 2016 16:24:01 +0000
Subject: [OpenSCAD] Scope rules broken
In-Reply-To: <56927887.3050200@gmx.de>
References: <CAEEmnrNSuUgE+oiHSOW_5-xUgaevokv+mHFE08RbHe5M=3BfWw@mail.gmail.com>
	<56927887.3050200@gmx.de>
Message-ID: <CAEEmnrOJrUqni9gRRqq4Zw1uZHYHVWdUUeX2vNP-u_UY-FduyA@mail.gmail.com>

Perhaps assign should not have been deprecated then as I now have to
replace them with for and there is no way of assigning a list.

On 10 January 2016 at 15:28, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 01/10/2016 02:57 PM, nop head wrote:
> > To get rid of warnings I changed my assigns to assignment
> > inside braces but it doesn't work if the braces are otherwise
> > redundant. I.e. braces don't create a new scope, only control
> > statements like if and for. Surely this is wrong?
> >
> I think the key is "backward compatibility". It was used in
> scripts before to group variables. Introducing a new scope
> now, would break all those scripts.
>
> I guess otherwise it would indeed be the preferred way to
> create a new scope.
>
> This is mentioned in the manual as "anonymous scopes"
>
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/General#Scope_of_variables
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160110/6ab41444/attachment.html>

From Torsten.Paul at gmx.de  Sun Jan 10 11:25:20 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 10 Jan 2016 17:25:20 +0100
Subject: [OpenSCAD] export() function.
In-Reply-To: <CAEEmnrMp2LRLL+D-AzhrGF-KqU2mR06jVz4ehk-=mmcm37KRrg@mail.gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <5690E9D6.7090504@jonbondy.com>
	<5690FF46.90301@gmail.com> <20160109130106.63696b0a@cygnus>
	<05186620-8678-49D1-A600-B8CDEA5F2143@gmail.com>
	<CAPmXz3U5s6JzG0LUDhKMUnTVXBSKEM4ERsXybH1etS58Q8iyPQ@mail.gmail.com>
	<CAEEmnrMp2LRLL+D-AzhrGF-KqU2mR06jVz4ehk-=mmcm37KRrg@mail.gmail.com>
Message-ID: <569285F0.8080706@gmx.de>

On 01/10/2016 01:13 PM, nop head wrote:
> There is no need for new syntax for meta data tagging. You can
> always explicitly put what you want exported under the export
> statement.
>
Ok, we also have https://github.com/openscad/openscad/issues/1044
which asks for a way to control the layers that will be exported
to DXF. And there's a number of other similar requests already. How
would you do that with multiple file exports? Put all the various
possible inputs as parameters into one single export() which is then
called sometimes with parameterset A (for dxf layers) and sometimes
for parameterset B (for defining a file export)? This would also
mean the export() calls would need to be nested as the layers belong
into a single file.

With just tagging the subtrees, it leaves the interpretation to
the actual export function which could even show that information
to the user and allow changing it.

Note1: The syntax is just the Java one, lots of other languages
have adopted this feature with a different syntax, we would be
free to choose.

Note2: The prototype implementing this is already there and it's
actually not very complicated. The complex part is as always the
GUI. I also like to point out how this prototype is for a completely
different feature (https://github.com/openscad/openscad/issues/722)
and that would also be covered using the same syntax, maybe at
other places in the code, like the module definition instead of
the module instantiation.

module something(s) {
	square(s * 10);
}

module part(r) {
	@DxfLayer("layer1")
	rotate(r) something(10);
	
	@DxfLayer("layer2")
	rotate(r) something(20);
}

@Export(name = "part1")
part1(0);

@Export(name = "part2")
part1(45);

Basically this simply attaches a set of key/value pairs to the
nodes which then can be interpreted when traversing the models
node tree.

Slic3r supports annotations in AMF files, to define some
properties for slicing a model. Even that could be handled
like @AMFMetaData(name = "slic3r.extruder", value = 1) and
would be silently ignore for STL export which does not have
any means to store this information.

ciao,
  Torsten.



From nop.head at gmail.com  Sun Jan 10 11:28:26 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 10 Jan 2016 16:28:26 +0000
Subject: [OpenSCAD] Variable for render mode
In-Reply-To: <56928363.5080102@gmx.de>
References: <CAEEmnrNxeg3DcX1xYy96KAVtYjYKs3f1FnUpnC=VbAOXz2YfEw@mail.gmail.com>
	<1452308616769-15580.post@n5.nabble.com>
	<CAEEmnrOCHnWE8U=+OD6-93dpdghCX4U6a5GxUtiyeRwg9LmJkg@mail.gmail.com>
	<56910DBF.7030703@gmx.de> <1452379463154-15598.post@n5.nabble.com>
	<1452379553993-15599.post@n5.nabble.com> <56918F86.2010405@gmx.de>
	<1452383850178-15604.post@n5.nabble.com>
	<CAGV6i+Nos=Jca4+eFH9uHwfs3CcR4JS0qpziAKe2D=wqqQAWfg@mail.gmail.com>
	<CAEEmnrM-WM1CRvGThVyy+=2CEkpXGKFKwH+QcyQeS_oA8OaBFQ@mail.gmail.com>
	<56928363.5080102@gmx.de>
Message-ID: <CAEEmnrMvv7z5nwtZeHrHs8tHyj-UW0+-ZUDuSvBhnRoYwB2tYA@mail.gmail.com>

If you want to set it from the command line you can presumably with -D.

On 10 January 2016 at 16:14, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 01/10/2016 08:39 AM, nop head wrote:
> > Can you explain what the issue with caching is please? How
> > is a variable that aromatically changes once at the start
> > of a preview / render a problem compared to me manually
> > changing it or $t which is also a variable that changes
> > automatically.
> >
> No, as I said before, I'm not sure myself.
>
> However I can show an example where caching was broken,
> even when the user changes the scad script.
>
> When toying with a loft() module I did pass the function
> parameter to loft() via strings, so it looked like:
>
> https://gist.githubusercontent.com/t-paul/7171783/raw/loft-5.png
>
>   function path(t) = [ 0, 0, 80 + 80 * cos(180 * t) ];
>   loft(path = "path") circle(1);
>
> Due to the cache key for the loft module only having the
> name of the function, it can't detect changes in the actual
> values returned. To fix that, the cache key for the module
> would also need to include the full function definition to
> pick up changes at this point of the script.
>
> Anyway, I've tried a simple way of injecting a $render
> variable. This is currently only working for GUI, it's
> a bit more complex to get it working for command line
> too, but I guess we do want this for command line too.
> Both $t and the $vpX variables are currently GUI-only
> features and are never set when running from command
> line.
>
> For now I don't see any issues. I'll talk to Marius and
> see if he can give some more insight into the concerns.
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160110/eb114f5b/attachment.html>

From Torsten.Paul at gmx.de  Sun Jan 10 11:32:52 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 10 Jan 2016 17:32:52 +0100
Subject: [OpenSCAD] Variable for render mode
In-Reply-To: <CAEEmnrMvv7z5nwtZeHrHs8tHyj-UW0+-ZUDuSvBhnRoYwB2tYA@mail.gmail.com>
References: <CAEEmnrNxeg3DcX1xYy96KAVtYjYKs3f1FnUpnC=VbAOXz2YfEw@mail.gmail.com>
	<1452308616769-15580.post@n5.nabble.com>
	<CAEEmnrOCHnWE8U=+OD6-93dpdghCX4U6a5GxUtiyeRwg9LmJkg@mail.gmail.com>
	<56910DBF.7030703@gmx.de> <1452379463154-15598.post@n5.nabble.com>
	<1452379553993-15599.post@n5.nabble.com> <56918F86.2010405@gmx.de>
	<1452383850178-15604.post@n5.nabble.com>
	<CAGV6i+Nos=Jca4+eFH9uHwfs3CcR4JS0qpziAKe2D=wqqQAWfg@mail.gmail.com>
	<CAEEmnrM-WM1CRvGThVyy+=2CEkpXGKFKwH+QcyQeS_oA8OaBFQ@mail.gmail.com>
	<56928363.5080102@gmx.de>
	<CAEEmnrMvv7z5nwtZeHrHs8tHyj-UW0+-ZUDuSvBhnRoYwB2tYA@mail.gmail.com>
Message-ID: <569287B4.3020101@gmx.de>

On 01/10/2016 05:28 PM, nop head wrote:
> If you want to set it from the command line you can
> presumably with -D.
>
Sure, without additional safeguards, you can even set it
in the script itself (unfortunately).

Although at least for the PNG export there's a separate
render mode setting, so I guess that should be considered.
For STL export it's of cause always fixed to true.

ciao,
  Torsten.




From doug at moens.org  Sun Jan 10 11:35:50 2016
From: doug at moens.org (doug moen)
Date: Sun, 10 Jan 2016 11:35:50 -0500
Subject: [OpenSCAD] Scope rules broken
In-Reply-To: <CAEEmnrOJrUqni9gRRqq4Zw1uZHYHVWdUUeX2vNP-u_UY-FduyA@mail.gmail.com>
References: <CAEEmnrNSuUgE+oiHSOW_5-xUgaevokv+mHFE08RbHe5M=3BfWw@mail.gmail.com>
	<56927887.3050200@gmx.de>
	<CAEEmnrOJrUqni9gRRqq4Zw1uZHYHVWdUUeX2vNP-u_UY-FduyA@mail.gmail.com>
Message-ID: <CAGV6i+MB_KC0_AuvxeTg4+A9z-UUjAwGP2mfCrv1uJZkmbgpmw@mail.gmail.com>

The difference between 'assign' and 'let' is that 'let' supports
"sequential scoping", so you can write let(x=1,y=x*2).

I know that Marius is keen to support sequential scoping everywhere that it
makes sense, and I think that may be a motivation for deprecating assign.

On 10 January 2016 at 11:24, nop head <nop.head at gmail.com> wrote:

> Perhaps assign should not have been deprecated then as I now have to
> replace them with for and there is no way of assigning a list.
>
> On 10 January 2016 at 15:28, Torsten Paul <Torsten.Paul at gmx.de> wrote:
>
>> On 01/10/2016 02:57 PM, nop head wrote:
>> > To get rid of warnings I changed my assigns to assignment
>> > inside braces but it doesn't work if the braces are otherwise
>> > redundant. I.e. braces don't create a new scope, only control
>> > statements like if and for. Surely this is wrong?
>> >
>> I think the key is "backward compatibility". It was used in
>> scripts before to group variables. Introducing a new scope
>> now, would break all those scripts.
>>
>> I guess otherwise it would indeed be the preferred way to
>> create a new scope.
>>
>> This is mentioned in the manual as "anonymous scopes"
>>
>> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/General#Scope_of_variables
>>
>> ciao,
>>   Torsten.
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160110/ac274c29/attachment.html>

From Torsten.Paul at gmx.de  Sun Jan 10 11:35:40 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 10 Jan 2016 17:35:40 +0100
Subject: [OpenSCAD] Scope rules broken
In-Reply-To: <CAGV6i+MgzfqhWSsBAWP0k_buQFfcZjHR2Xr9WxVrgRjWF3Tbeg@mail.gmail.com>
References: <CAEEmnrNSuUgE+oiHSOW_5-xUgaevokv+mHFE08RbHe5M=3BfWw@mail.gmail.com>
	<56927887.3050200@gmx.de>
	<CAGV6i+MgzfqhWSsBAWP0k_buQFfcZjHR2Xr9WxVrgRjWF3Tbeg@mail.gmail.com>
Message-ID: <5692885C.6090605@gmx.de>

On 01/10/2016 05:20 PM, doug moen wrote:
> If we are going down this path, then I request that we
> add a let statement, consistent with the let expression,
> so that you can use let(x=1,y=2){...} instead of abusing
> the for statement.
>
Good point. With having let() executing the assignments
sequentially, that would also prevent that nesting which
is needed for assign() if the variables are dependent.

This is included in the OpenSCAD2 proposal already, right?
It should be trivial to add to the existing version too.

ciao,
  Torsten.



From nop.head at gmail.com  Sun Jan 10 11:47:20 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 10 Jan 2016 16:47:20 +0000
Subject: [OpenSCAD] export() function.
In-Reply-To: <569285F0.8080706@gmx.de>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451845569640-15437.post@n5.nabble.com>
	<CAGV6i+Ox8zvV8NzpKibKsnWERaDdi_4VJm=jHueDVhoNLHp1AQ@mail.gmail.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <5690E9D6.7090504@jonbondy.com>
	<5690FF46.90301@gmail.com> <20160109130106.63696b0a@cygnus>
	<05186620-8678-49D1-A600-B8CDEA5F2143@gmail.com>
	<CAPmXz3U5s6JzG0LUDhKMUnTVXBSKEM4ERsXybH1etS58Q8iyPQ@mail.gmail.com>
	<CAEEmnrMp2LRLL+D-AzhrGF-KqU2mR06jVz4ehk-=mmcm37KRrg@mail.gmail.com>
	<569285F0.8080706@gmx.de>
Message-ID: <CAEEmnrNi+aFFHDpMCHgt0w5Au2CFSUhmR+8AzOwpm3sAOGDzkg@mail.gmail.com>

I think being able to put multiple layers in a DXF or multiple materials in
an AMF is completely orthogonal functionality to being able to export
multiple files using the export menu. They can both be implemented
separately and will simple work together when you export a tree that makes
a multi component file.

I.e. If you export a DXF then it is exactly the same as removing a * or
adding a !, doing F6 (or F5 if it is a png) and using the export menu. My
proposed export simply automates what you can already with *,! and the
export menu but is tedious. I don't see why designing a multi-material
system needs to hold up this simple function.

My preferred way of doing multi-materials would be to attach attributes
exactly the same way color does, rather than borrowing more syntax from
other languages. Keep it looking like C as much as possible. I wouldn't
have chosen C myself as I prefer Python syntax but as it started out almost
pure C syntax I think it should stay that way.

On 10 January 2016 at 16:25, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 01/10/2016 01:13 PM, nop head wrote:
> > There is no need for new syntax for meta data tagging. You can
> > always explicitly put what you want exported under the export
> > statement.
> >
> Ok, we also have https://github.com/openscad/openscad/issues/1044
> which asks for a way to control the layers that will be exported
> to DXF. And there's a number of other similar requests already. How
> would you do that with multiple file exports? Put all the various
> possible inputs as parameters into one single export() which is then
> called sometimes with parameterset A (for dxf layers) and sometimes
> for parameterset B (for defining a file export)? This would also
> mean the export() calls would need to be nested as the layers belong
> into a single file.
>
> With just tagging the subtrees, it leaves the interpretation to
> the actual export function which could even show that information
> to the user and allow changing it.
>
> Note1: The syntax is just the Java one, lots of other languages
> have adopted this feature with a different syntax, we would be
> free to choose.
>
> Note2: The prototype implementing this is already there and it's
> actually not very complicated. The complex part is as always the
> GUI. I also like to point out how this prototype is for a completely
> different feature (https://github.com/openscad/openscad/issues/722)
> and that would also be covered using the same syntax, maybe at
> other places in the code, like the module definition instead of
> the module instantiation.
>
> module something(s) {
>         square(s * 10);
> }
>
> module part(r) {
>         @DxfLayer("layer1")
>         rotate(r) something(10);
>
>         @DxfLayer("layer2")
>         rotate(r) something(20);
> }
>
> @Export(name = "part1")
> part1(0);
>
> @Export(name = "part2")
> part1(45);
>
> Basically this simply attaches a set of key/value pairs to the
> nodes which then can be interpreted when traversing the models
> node tree.
>
> Slic3r supports annotations in AMF files, to define some
> properties for slicing a model. Even that could be handled
> like @AMFMetaData(name = "slic3r.extruder", value = 1) and
> would be silently ignore for STL export which does not have
> any means to store this information.
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160110/dc4c3c05/attachment.html>

From nop.head at gmail.com  Sun Jan 10 11:50:29 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 10 Jan 2016 16:50:29 +0000
Subject: [OpenSCAD] Variable for render mode
In-Reply-To: <569287B4.3020101@gmx.de>
References: <CAEEmnrNxeg3DcX1xYy96KAVtYjYKs3f1FnUpnC=VbAOXz2YfEw@mail.gmail.com>
	<1452308616769-15580.post@n5.nabble.com>
	<CAEEmnrOCHnWE8U=+OD6-93dpdghCX4U6a5GxUtiyeRwg9LmJkg@mail.gmail.com>
	<56910DBF.7030703@gmx.de> <1452379463154-15598.post@n5.nabble.com>
	<1452379553993-15599.post@n5.nabble.com> <56918F86.2010405@gmx.de>
	<1452383850178-15604.post@n5.nabble.com>
	<CAGV6i+Nos=Jca4+eFH9uHwfs3CcR4JS0qpziAKe2D=wqqQAWfg@mail.gmail.com>
	<CAEEmnrM-WM1CRvGThVyy+=2CEkpXGKFKwH+QcyQeS_oA8OaBFQ@mail.gmail.com>
	<56928363.5080102@gmx.de>
	<CAEEmnrMvv7z5nwtZeHrHs8tHyj-UW0+-ZUDuSvBhnRoYwB2tYA@mail.gmail.com>
	<569287B4.3020101@gmx.de>
Message-ID: <CAEEmnrMktS3nzk=8knatDF36SnpNcO7esoy9fAhP9Ed6TYzUag@mail.gmail.com>

Yes it would make sense if it was set for everything except PNG.

On 10 January 2016 at 16:32, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 01/10/2016 05:28 PM, nop head wrote:
> > If you want to set it from the command line you can
> > presumably with -D.
> >
> Sure, without additional safeguards, you can even set it
> in the script itself (unfortunately).
>
> Although at least for the PNG export there's a separate
> render mode setting, so I guess that should be considered.
> For STL export it's of cause always fixed to true.
>
> ciao,
>   Torsten.
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160110/5deaedf8/attachment.html>

From nop.head at gmail.com  Sun Jan 10 11:58:31 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 10 Jan 2016 16:58:31 +0000
Subject: [OpenSCAD] Scope rules broken
In-Reply-To: <CAGV6i+MB_KC0_AuvxeTg4+A9z-UUjAwGP2mfCrv1uJZkmbgpmw@mail.gmail.com>
References: <CAEEmnrNSuUgE+oiHSOW_5-xUgaevokv+mHFE08RbHe5M=3BfWw@mail.gmail.com>
	<56927887.3050200@gmx.de>
	<CAEEmnrOJrUqni9gRRqq4Zw1uZHYHVWdUUeX2vNP-u_UY-FduyA@mail.gmail.com>
	<CAGV6i+MB_KC0_AuvxeTg4+A9z-UUjAwGP2mfCrv1uJZkmbgpmw@mail.gmail.com>
Message-ID: <CAEEmnrMNvwL21ygJ4=k5mHzxdm+8hDO0nzg7VcT+rxQRcYMySQ@mail.gmail.com>

A bit premature then to deprecate it before adding let.

On 10 January 2016 at 16:35, doug moen <doug at moens.org> wrote:

> The difference between 'assign' and 'let' is that 'let' supports
> "sequential scoping", so you can write let(x=1,y=x*2).
>
> I know that Marius is keen to support sequential scoping everywhere that
> it makes sense, and I think that may be a motivation for deprecating assign.
>
> On 10 January 2016 at 11:24, nop head <nop.head at gmail.com> wrote:
>
>> Perhaps assign should not have been deprecated then as I now have to
>> replace them with for and there is no way of assigning a list.
>>
>> On 10 January 2016 at 15:28, Torsten Paul <Torsten.Paul at gmx.de> wrote:
>>
>>> On 01/10/2016 02:57 PM, nop head wrote:
>>> > To get rid of warnings I changed my assigns to assignment
>>> > inside braces but it doesn't work if the braces are otherwise
>>> > redundant. I.e. braces don't create a new scope, only control
>>> > statements like if and for. Surely this is wrong?
>>> >
>>> I think the key is "backward compatibility". It was used in
>>> scripts before to group variables. Introducing a new scope
>>> now, would break all those scripts.
>>>
>>> I guess otherwise it would indeed be the preferred way to
>>> create a new scope.
>>>
>>> This is mentioned in the manual as "anonymous scopes"
>>>
>>> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/General#Scope_of_variables
>>>
>>> ciao,
>>>   Torsten.
>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160110/c802902d/attachment.html>

From Torsten.Paul at gmx.de  Sun Jan 10 12:23:33 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 10 Jan 2016 18:23:33 +0100
Subject: [OpenSCAD] export() function.
In-Reply-To: <CAEEmnrNi+aFFHDpMCHgt0w5Au2CFSUhmR+8AzOwpm3sAOGDzkg@mail.gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <5690E9D6.7090504@jonbondy.com>
	<5690FF46.90301@gmail.com> <20160109130106.63696b0a@cygnus>
	<05186620-8678-49D1-A600-B8CDEA5F2143@gmail.com>
	<CAPmXz3U5s6JzG0LUDhKMUnTVXBSKEM4ERsXybH1etS58Q8iyPQ@mail.gmail.com>
	<CAEEmnrMp2LRLL+D-AzhrGF-KqU2mR06jVz4ehk-=mmcm37KRrg@mail.gmail.com>
	<569285F0.8080706@gmx.de>
	<CAEEmnrNi+aFFHDpMCHgt0w5Au2CFSUhmR+8AzOwpm3sAOGDzkg@mail.gmail.com>
Message-ID: <56929395.50105@gmx.de>

On 01/10/2016 05:47 PM, nop head wrote:
> I wouldn't have chosen C myself as I prefer Python syntax but as it
> started out almost pure C syntax I think it should stay that way.
>
Interesting, even Python has similar features for functions.
http://python-future.org/func_annotations.html

And when looking at python decorators, the syntax almost matches
the Java syntax, I've used as example:
http://thecodeship.com/patterns/guide-to-python-function-decorators/
Although those are serving a bit different purpose, I think.

As I said, the specific syntax is just a prototype so far. It
does not really matter. Unfortunately C does not have annotations
so we can't borrow that syntax. But you could also argue that SCAD
looks like C# and we could try to use that syntax.

> My preferred way of doing multi-materials would be to attach
> attributes exactly the same way color does
>
I think the key word here is *attach*. And that's precisely what
color() right now does not do. It creates a new tree node, so
if you traverse the node tree, there's a separate color node.
This actually makes things more complicated internally.

ciao,
  Torsten.


From nop.head at gmail.com  Sun Jan 10 12:46:52 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 10 Jan 2016 17:46:52 +0000
Subject: [OpenSCAD] export() function.
In-Reply-To: <56929395.50105@gmx.de>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <5690E9D6.7090504@jonbondy.com>
	<5690FF46.90301@gmail.com> <20160109130106.63696b0a@cygnus>
	<05186620-8678-49D1-A600-B8CDEA5F2143@gmail.com>
	<CAPmXz3U5s6JzG0LUDhKMUnTVXBSKEM4ERsXybH1etS58Q8iyPQ@mail.gmail.com>
	<CAEEmnrMp2LRLL+D-AzhrGF-KqU2mR06jVz4ehk-=mmcm37KRrg@mail.gmail.com>
	<569285F0.8080706@gmx.de>
	<CAEEmnrNi+aFFHDpMCHgt0w5Au2CFSUhmR+8AzOwpm3sAOGDzkg@mail.gmail.com>
	<56929395.50105@gmx.de>
Message-ID: <CAEEmnrMewzFKgffJ3VU22Zz7cBGTxHsh13vjUJ0CQkZSQXgi_g@mail.gmail.com>

I think your last point is implementation details, which should not really
dictate language syntax.  From the outside I don't see any logical
difference between color and material and isn't everything a tree node in
openscad? It is however a big subject when you consider what happens with
respect to CGS ops (that isn't even right for colours yet). I don't think
it should hold up this or have any bearing on it.

I would prefer to keep the syntax as small as possible and not grabbed from
other, far more complicated, languages. Otherwise you might as well write
in those languages and generate scad files, as many people do.

module mydx() {
   layer("outlines") { // note I have no idea what DXF layers names look
like.
      ...
   }
   layer("engrave") {
     ...
   }
}

export("my.xdf) mydxf();

module myamf() {
    material("PLA") {.....};
    material("TEP") {.....};
}

export("my.amf") myamf();

Why does it need to be more complicated?



On 10 January 2016 at 17:23, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 01/10/2016 05:47 PM, nop head wrote:
> > I wouldn't have chosen C myself as I prefer Python syntax but as it
> > started out almost pure C syntax I think it should stay that way.
> >
> Interesting, even Python has similar features for functions.
> http://python-future.org/func_annotations.html
>
> And when looking at python decorators, the syntax almost matches
> the Java syntax, I've used as example:
> http://thecodeship.com/patterns/guide-to-python-function-decorators/
> Although those are serving a bit different purpose, I think.
>
> As I said, the specific syntax is just a prototype so far. It
> does not really matter. Unfortunately C does not have annotations
> so we can't borrow that syntax. But you could also argue that SCAD
> looks like C# and we could try to use that syntax.
>
> > My preferred way of doing multi-materials would be to attach
> > attributes exactly the same way color does
> >
> I think the key word here is *attach*. And that's precisely what
> color() right now does not do. It creates a new tree node, so
> if you traverse the node tree, there's a separate color node.
> This actually makes things more complicated internally.
>
> ciao,
>   Torsten.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160110/862453b9/attachment.html>

From Torsten.Paul at gmx.de  Sun Jan 10 14:33:25 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 10 Jan 2016 20:33:25 +0100
Subject: [OpenSCAD] Scope rules broken
In-Reply-To: <CAGV6i+MgzfqhWSsBAWP0k_buQFfcZjHR2Xr9WxVrgRjWF3Tbeg@mail.gmail.com>
References: <CAEEmnrNSuUgE+oiHSOW_5-xUgaevokv+mHFE08RbHe5M=3BfWw@mail.gmail.com>
	<56927887.3050200@gmx.de>
	<CAGV6i+MgzfqhWSsBAWP0k_buQFfcZjHR2Xr9WxVrgRjWF3Tbeg@mail.gmail.com>
Message-ID: <5692B205.80809@gmx.de>

On 01/10/2016 05:20 PM, doug moen wrote:
> If we are going down this path, then I request that we add a
> let statement, consistent with the let expression, so that you
> can use let(x=1,y=2){...} instead of abusing the for statement.
>
There it is https://github.com/openscad/openscad/pull/1549

ciao,
  Torsten.



From marius at kintel.net  Sun Jan 10 15:07:29 2016
From: marius at kintel.net (Marius Kintel)
Date: Sun, 10 Jan 2016 15:07:29 -0500
Subject: [OpenSCAD] Scope rules broken
In-Reply-To: <CAGV6i+MgzfqhWSsBAWP0k_buQFfcZjHR2Xr9WxVrgRjWF3Tbeg@mail.gmail.com>
References: <CAEEmnrNSuUgE+oiHSOW_5-xUgaevokv+mHFE08RbHe5M=3BfWw@mail.gmail.com>
	<56927887.3050200@gmx.de>
	<CAGV6i+MgzfqhWSsBAWP0k_buQFfcZjHR2Xr9WxVrgRjWF3Tbeg@mail.gmail.com>
Message-ID: <F1DB2D08-D445-4EEC-AFBE-8ACF574F1E58@kintel.net>

To confirm/clarify:

The anonymous scopes was a design mistake in early OpenSCAD, where scopes didn?t have a function.
I don?t know how often people use that feature to group variables, so I haven?t dared changing that yet, but I do agree that ideally this should be a true scope.

Deprecating assert() was indeed a bit premature, but it functions well as a way of telling people to avoid using it.
The parallel assignment behavior was an extra motivator to deprecate it. Adding let() makes sense to me and that would also be another baby step towards OpenSCAD2 :)

 -Marius



From nop.head at gmail.com  Sun Jan 10 16:08:59 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 10 Jan 2016 21:08:59 +0000
Subject: [OpenSCAD] Scope rules broken
In-Reply-To: <F1DB2D08-D445-4EEC-AFBE-8ACF574F1E58@kintel.net>
References: <CAEEmnrNSuUgE+oiHSOW_5-xUgaevokv+mHFE08RbHe5M=3BfWw@mail.gmail.com>
	<56927887.3050200@gmx.de>
	<CAGV6i+MgzfqhWSsBAWP0k_buQFfcZjHR2Xr9WxVrgRjWF3Tbeg@mail.gmail.com>
	<F1DB2D08-D445-4EEC-AFBE-8ACF574F1E58@kintel.net>
Message-ID: <CAEEmnrM98o+E-o5qieL5xBvc+t1Ybgk28ePBr6sbveFgf12Qzg@mail.gmail.com>

I don't understand what is meant by "grouping variables". Do anonymous
braces do anything at all when applied around variables?

Scad:
{ a = 1; b = 2; cube();}
{ c = 3; d = 4; sphere();}

AST:
a = 1;

b = 2;

c = 3;

d = 4;

cube();

sphere();


CSG:

group() {

cube(size = [1, 1, 1], center = false);

sphere($fn = 0, $fa = 12, $fs = 2, r = 1);

}


They look like they do nothing at all to me.






On 10 January 2016 at 20:07, Marius Kintel <marius at kintel.net> wrote:

> To confirm/clarify:
>
> The anonymous scopes was a design mistake in early OpenSCAD, where scopes
> didn?t have a function.
> I don?t know how often people use that feature to group variables, so I
> haven?t dared changing that yet, but I do agree that ideally this should be
> a true scope.
>
> Deprecating assert() was indeed a bit premature, but it functions well as
> a way of telling people to avoid using it.
> The parallel assignment behavior was an extra motivator to deprecate it.
> Adding let() makes sense to me and that would also be another baby step
> towards OpenSCAD2 :)
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160110/f81c7a1a/attachment.html>

From Torsten.Paul at gmx.de  Sun Jan 10 16:14:49 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 10 Jan 2016 22:14:49 +0100
Subject: [OpenSCAD] Scope rules broken
In-Reply-To: <CAEEmnrM98o+E-o5qieL5xBvc+t1Ybgk28ePBr6sbveFgf12Qzg@mail.gmail.com>
References: <CAEEmnrNSuUgE+oiHSOW_5-xUgaevokv+mHFE08RbHe5M=3BfWw@mail.gmail.com>
	<56927887.3050200@gmx.de>
	<CAGV6i+MgzfqhWSsBAWP0k_buQFfcZjHR2Xr9WxVrgRjWF3Tbeg@mail.gmail.com>
	<F1DB2D08-D445-4EEC-AFBE-8ACF574F1E58@kintel.net>
	<CAEEmnrM98o+E-o5qieL5xBvc+t1Ybgk28ePBr6sbveFgf12Qzg@mail.gmail.com>
Message-ID: <5692C9C9.5040800@gmx.de>

On 01/10/2016 10:08 PM, nop head wrote:
> I don't understand what is meant by "grouping variables". Do
> anonymous braces do anything at all when applied around variables?
> 
http://forum.openscad.org/OpenSCAD2-design-docs-td13019.html#a13225

ciao,
  Torsten.



From nop.head at gmail.com  Sun Jan 10 16:27:13 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 10 Jan 2016 21:27:13 +0000
Subject: [OpenSCAD] Scope rules broken
In-Reply-To: <5692C9C9.5040800@gmx.de>
References: <CAEEmnrNSuUgE+oiHSOW_5-xUgaevokv+mHFE08RbHe5M=3BfWw@mail.gmail.com>
	<56927887.3050200@gmx.de>
	<CAGV6i+MgzfqhWSsBAWP0k_buQFfcZjHR2Xr9WxVrgRjWF3Tbeg@mail.gmail.com>
	<F1DB2D08-D445-4EEC-AFBE-8ACF574F1E58@kintel.net>
	<CAEEmnrM98o+E-o5qieL5xBvc+t1Ybgk28ePBr6sbveFgf12Qzg@mail.gmail.com>
	<5692C9C9.5040800@gmx.de>
Message-ID: <CAEEmnrMYOJV0AD8nXiXfNi71QEqSSq-hLR7UrR5DTbKyiK_rjw@mail.gmail.com>

I see, so for folding in an editor, no effect in OpenScad at all.

Considering I have spent days trying to sort out the mess created by
updating to an OpenScad version that is supposed to be backwards compatible
I think having to remove a few braces is not much hardship. You can program
editors to fold on special comments anyway.


On 10 January 2016 at 21:14, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 01/10/2016 10:08 PM, nop head wrote:
> > I don't understand what is meant by "grouping variables". Do
> > anonymous braces do anything at all when applied around variables?
> >
> http://forum.openscad.org/OpenSCAD2-design-docs-td13019.html#a13225
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160110/b6cb4669/attachment.html>

From Torsten.Paul at gmx.de  Sun Jan 10 22:42:41 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 11 Jan 2016 04:42:41 +0100
Subject: [OpenSCAD] export() function.
In-Reply-To: <CAEEmnrMewzFKgffJ3VU22Zz7cBGTxHsh13vjUJ0CQkZSQXgi_g@mail.gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <5690E9D6.7090504@jonbondy.com>
	<5690FF46.90301@gmail.com> <20160109130106.63696b0a@cygnus>
	<05186620-8678-49D1-A600-B8CDEA5F2143@gmail.com>
	<CAPmXz3U5s6JzG0LUDhKMUnTVXBSKEM4ERsXybH1etS58Q8iyPQ@mail.gmail.com>
	<CAEEmnrMp2LRLL+D-AzhrGF-KqU2mR06jVz4ehk-=mmcm37KRrg@mail.gmail.com>
	<569285F0.8080706@gmx.de>
	<CAEEmnrNi+aFFHDpMCHgt0w5Au2CFSUhmR+8AzOwpm3sAOGDzkg@mail.gmail.com>
	<56929395.50105@gmx.de>
	<CAEEmnrMewzFKgffJ3VU22Zz7cBGTxHsh13vjUJ0CQkZSQXgi_g@mail.gmail.com>
Message-ID: <569324B1.1040702@gmx.de>

On 01/10/2016 06:46 PM, nop head wrote:
> I think your last point is implementation details, which should
> not really dictate language syntax.
>
In some respects, yes, that's true. But there's one thing that
does make it relevant. When using "normal" builtin modules to
define meta-data, we will capture all those names. Part of that
might be fixable if there's ever an implementation for namespaces,
but that's a bigger project in itself.
I've seen quite some cases where trying to unify everything into
the same logic resulted in problems.

> From the outside I don't see any logical difference between
> color and material and isn't everything a tree node in openscad?
>
Yes, color() is obviously existing as node already as there is
currently no other means. It certainly could be an annotation too.
I'm not really convinced that because we currently only have
hammers^H^H^H^H^H^H^Hnodes we need to shape every new problem
into nails^H^H^H^H^Hnodes if there are other options too.

Well, actually that's not totally true that we only have nodes.
In fact the ! # and % modifiers already behave like an annotation
for the module they are written before. This explains why this is
a parse error:

  ! { cube(); sphere(); }

And if we are talking about how hugely complicated things look
with annotations, let me, just for illustration purposes, use _
instead of that scary @ and reformat a bit

module part(r) {
        _layer("layer1") rotate(r) something(10);
        _layer("layer2") rotate(r) something(20);
}

_export(name = "part1") part1(0);
_export(name = "part2") part1(45);


Hmm, I really don't see how that's more complicated. Although
export is probably a bad name anyway. Something like Volume
would probably be ok, or even better something that applies
nicely to both 3D and 2D objects. (That's basically the HTML
discussion: Do logical instead of presentational description
and leave the interpretation to the processor/browser).

In essence, I think the only real difference between using a
module and something special whatever it's called is that it
introduces a different global namespace that does not collide
with the other existing ones and is not evaluated in the
script itself but in the renderer/exporter/external-tool.

ciao,
  Torsten.



From mickvav at gmail.com  Mon Jan 11 00:51:00 2016
From: mickvav at gmail.com (Mihail Vasiliev)
Date: Mon, 11 Jan 2016 08:51:00 +0300
Subject: [OpenSCAD] export() function.
In-Reply-To: <569324B1.1040702@gmx.de>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <5690E9D6.7090504@jonbondy.com>
	<5690FF46.90301@gmail.com> <20160109130106.63696b0a@cygnus>
	<05186620-8678-49D1-A600-B8CDEA5F2143@gmail.com>
	<CAPmXz3U5s6JzG0LUDhKMUnTVXBSKEM4ERsXybH1etS58Q8iyPQ@mail.gmail.com>
	<CAEEmnrMp2LRLL+D-AzhrGF-KqU2mR06jVz4ehk-=mmcm37KRrg@mail.gmail.com>
	<569285F0.8080706@gmx.de>
	<CAEEmnrNi+aFFHDpMCHgt0w5Au2CFSUhmR+8AzOwpm3sAOGDzkg@mail.gmail.com>
	<56929395.50105@gmx.de>
	<CAEEmnrMewzFKgffJ3VU22Zz7cBGTxHsh13vjUJ0CQkZSQXgi_g@mail.gmail.com>
	<569324B1.1040702@gmx.de>
Message-ID: <CAPmXz3XVoF3PkFvsxsjgzLVc2XGTZ6QhauX4bbjyR0AoJ2_fYg@mail.gmail.com>

Well, interpretation of any language feature is always up to the tool,
which reads this language. E.g. if it's web app, it can open a frame/new
window/whatever with such exported view.

Hmm, may be it should be called view() instead of export()?
11 ???. 2016 ?. 6:43 AM ???????????? "Torsten Paul" <Torsten.Paul at gmx.de>
???????:

> On 01/10/2016 06:46 PM, nop head wrote:
> > I think your last point is implementation details, which should
> > not really dictate language syntax.
> >
> In some respects, yes, that's true. But there's one thing that
> does make it relevant. When using "normal" builtin modules to
> define meta-data, we will capture all those names. Part of that
> might be fixable if there's ever an implementation for namespaces,
> but that's a bigger project in itself.
> I've seen quite some cases where trying to unify everything into
> the same logic resulted in problems.
>
> > From the outside I don't see any logical difference between
> > color and material and isn't everything a tree node in openscad?
> >
> Yes, color() is obviously existing as node already as there is
> currently no other means. It certainly could be an annotation too.
> I'm not really convinced that because we currently only have
> hammers^H^H^H^H^H^H^Hnodes we need to shape every new problem
> into nails^H^H^H^H^Hnodes if there are other options too.
>
> Well, actually that's not totally true that we only have nodes.
> In fact the ! # and % modifiers already behave like an annotation
> for the module they are written before. This explains why this is
> a parse error:
>
>   ! { cube(); sphere(); }
>
> And if we are talking about how hugely complicated things look
> with annotations, let me, just for illustration purposes, use _
> instead of that scary @ and reformat a bit
>
> module part(r) {
>         _layer("layer1") rotate(r) something(10);
>         _layer("layer2") rotate(r) something(20);
> }
>
> _export(name = "part1") part1(0);
> _export(name = "part2") part1(45);
>
>
> Hmm, I really don't see how that's more complicated. Although
> export is probably a bad name anyway. Something like Volume
> would probably be ok, or even better something that applies
> nicely to both 3D and 2D objects. (That's basically the HTML
> discussion: Do logical instead of presentational description
> and leave the interpretation to the processor/browser).
>
> In essence, I think the only real difference between using a
> module and something special whatever it's called is that it
> introduces a different global namespace that does not collide
> with the other existing ones and is not evaluated in the
> script itself but in the renderer/exporter/external-tool.
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160111/ce40b038/attachment.html>

From oz.at.michael at gmail.com  Mon Jan 11 02:43:13 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Mon, 11 Jan 2016 00:43:13 -0700 (MST)
Subject: [OpenSCAD] export() function.
In-Reply-To: <CAPmXz3XVoF3PkFvsxsjgzLVc2XGTZ6QhauX4bbjyR0AoJ2_fYg@mail.gmail.com>
References: <20160109130106.63696b0a@cygnus>
	<05186620-8678-49D1-A600-B8CDEA5F2143@gmail.com>
	<CAPmXz3U5s6JzG0LUDhKMUnTVXBSKEM4ERsXybH1etS58Q8iyPQ@mail.gmail.com>
	<CAEEmnrMp2LRLL+D-AzhrGF-KqU2mR06jVz4ehk-=mmcm37KRrg@mail.gmail.com>
	<569285F0.8080706@gmx.de>
	<CAEEmnrNi+aFFHDpMCHgt0w5Au2CFSUhmR+8AzOwpm3sAOGDzkg@mail.gmail.com>
	<56929395.50105@gmx.de>
	<CAEEmnrMewzFKgffJ3VU22Zz7cBGTxHsh13vjUJ0CQkZSQXgi_g@mail.gmail.com>
	<569324B1.1040702@gmx.de>
	<CAPmXz3XVoF3PkFvsxsjgzLVc2XGTZ6QhauX4bbjyR0AoJ2_fYg@mail.gmail.com>
Message-ID: <1452498193843-15645.post@n5.nabble.com>

Mihail Vasiliev wrote
> Hmm, may be it should be called view() instead of export()?

Wikpedia - AMF

> Structure
> 
> An AMF can represent one object, or multiple objects arranged in a
> constellation. Each object is described as a set of non-overlapping
> volumes. Each volume is described by a triangular mesh that references a
> set of points (vertices). These vertices can be shared among volumes. An
> AMF file can also specify the material and the color of each volume, as
> well as the color of each triangle in the mesh. The AMF file is compressed
> using the zip compression format, but the ".amf" file extension is
> retained. A minimal AMF reader implementation must be able to decompress
> an AMF file and import at least geometry information (ignoring curvature).
> Basic file structure
> 
> The AMF file begins with the XML declaration line specifying the XML
> version and encoding. The remainder of the file is enclosed between an
> opening 
> <amf>
>  element and a closing 
> </amf>
>  element. The unit system can also be specified (millimeter, inch, feet,
> meter or micrometer). In absence of a units specification, millimeters are
> assumed.
> 
> Within the AMF brackets, there are five top level elements. Only a single
> object element is required for a fully functional AMF file.
> 
>     object - The object element defines a volume or volumes of material,
> each of which are associated with a material ID for printing. At least one
> object element must be present in the file. Additional objects are
> optional.
>     material - The optional material element defines one or more materials
> for printing with an associated material ID. If no material element is
> included, a single default material is assumed.
>     texture - The optional texture element defines one or more images or
> textures for color or texture mapping, each with an associated texture ID.
>     constellation - The optional constellation element hierarchically
> combines objects and other constellations into a relative pattern for
> printing.
>     metadata - The optional metadata element specifies additional
> information about the object(s) and elements contained in the file.

"An AMF file can also specify the material and the color of each volume"
call it a volume()



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/export-function-tp15428p15645.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrea.croci at gmx.de  Mon Jan 11 03:13:29 2016
From: andrea.croci at gmx.de (Andrea Croci)
Date: Mon, 11 Jan 2016 09:13:29 +0100
Subject: [OpenSCAD] Union of polyhedra not rendering.
Message-ID: <56936429.9090904@gmx.de>

Hello Everybody,

I was playing around with OpenSCAD trying out some platonic solids and 
extensions thereof. I'm only at my first day with it, so I'm very much a 
newbie.

I wanted to build tetrahedra on a tetrahedron and wrote this code:

lato=100;
h_triangolo=sqrt(3)/2*lato;
h_tetraedro=sqrt(2/3)*lato;

union() {
scale(1.1,1.1,1.1) //added later to try the overlapping of faces
polyhedron(
   points=[ 
[lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[-lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[0,(2/3)*h_triangolo,-(1/4)*h_tetraedro],[0,0,(3/4)*h_tetraedro]],
   faces=[ [1,0,2],[0,1,3],[1,2,3],[2,0,3]] );

polyhedron(
   points=[ 
[lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[-lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[0,0,(3/4)*h_tetraedro],[0,-(5/(2*sqrt(7)))*lato,(5/(2*sqrt(42)))*lato]],
   faces=[ [0,1,2],[0,1,3],[1,2,3],[2,0,3]] );

polyhedron(
   points=[ 
[-lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[0,(2/3)*h_triangolo,-(1/4)*h_tetraedro],[0,0,(3/4)*h_tetraedro],[-(5/4)*sqrt(3/7)*lato,(5/4)*sqrt(1/7)*lato,(5/(2*sqrt(42)))*lato]],
   faces=[ [0,1,2],[0,1,3],[1,2,3],[2,0,3]] );

polyhedron(
   points=[ 
[lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[0,(2/3)*h_triangolo,-(1/4)*h_tetraedro],[0,0,(3/4)*h_tetraedro],[(5/4)*sqrt(3/7)*lato,(5/4)*sqrt(1/7)*lato,(5/(2*sqrt(42)))*lato]],
   faces=[ [1,0,2],[1,0,3],[2,1,3],[0,2,3]] );

polyhedron(
   points=[ 
[lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[-lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[0,(2/3)*h_triangolo,-(1/4)*h_tetraedro],[0,0,-(5/4)*h_tetraedro]],
   faces=[ [1,0,2],[1,0,3],[2,1,3],[0,2,3]] );
}

It does preview the way I expect, but only renders the first polyhedron 
in the list. I was thinking it may have to do with the small 
uncertainties in the floating point calculated numbers that make the 
faces not perfectly in contact, therefore I scaled up the first 
tetrahedron and now it sticks out. It still doesn't render in my case:

version 2015.03-1on Ubuntu 14.04.3 LTS

What else could it be? Maybe a library that I left out? I installed 
pretty much all suggested packages.


Thank you,

Andrea.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160111/c1b3d68c/attachment.html>

From nop.head at gmail.com  Mon Jan 11 03:49:37 2016
From: nop.head at gmail.com (nop head)
Date: Mon, 11 Jan 2016 08:49:37 +0000
Subject: [OpenSCAD] Union of polyhedra not rendering.
In-Reply-To: <56936429.9090904@gmx.de>
References: <56936429.9090904@gmx.de>
Message-ID: <CAEEmnrOL4asa=j78HsQSVR5AKE+Oc+di7LambSZTBqrBc1mUCg@mail.gmail.com>

You had some of your faces facing inwards. They show up purple in the
thrown together view. This version works.

lato=100;
h_triangolo=sqrt(3)/2*lato;
h_tetraedro=sqrt(2/3)*lato;

union() {
//scale(1.1,1.1,1.1) //added later to try the overlapping of faces
polyhedron(
  points=[
[lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[-lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[0,(2/3)*h_triangolo,-(1/4)*h_tetraedro],[0,0,(3/4)*h_tetraedro]],
  faces=[ [1,0,2],[0,1,3],[1,2,3],[2,0,3]] );

polyhedron(
  points=[
[lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[-lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[0,0,(3/4)*h_tetraedro],[0,-(5/(2*sqrt(7)))*lato,(5/(2*sqrt(42)))*lato]],
  faces=[ [1,0,2],[0,1,3],[1,2,3],[2,0,3]] );

polyhedron(
  points=[
[-lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[0,(2/3)*h_triangolo,-(1/4)*h_tetraedro],[0,0,(3/4)*h_tetraedro],[-(5/4)*sqrt(3/7)*lato,(5/4)*sqrt(1/7)*lato,(5/(2*sqrt(42)))*lato]],
  faces=[ [1,0,2],[0,1,3],[1,2,3],[2,0,3]] );

polyhedron(
  points=[
[lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[0,(2/3)*h_triangolo,-(1/4)*h_tetraedro],[0,0,(3/4)*h_tetraedro],[(5/4)*sqrt(3/7)*lato,(5/4)*sqrt(1/7)*lato,(5/(2*sqrt(42)))*lato]],
  faces=[ [0,1,2],[1,0,3],[2,1,3],[0,2,3]] );

polyhedron(
  points=[
[lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[-lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[0,(2/3)*h_triangolo,-(1/4)*h_tetraedro],[0,0,-(5/4)*h_tetraedro]],
  faces=[ [0,1,2],[1,0,3],[2,1,3],[0,2,3]] );
}

On 11 January 2016 at 08:13, Andrea Croci <andrea.croci at gmx.de> wrote:

> Hello Everybody,
>
> I was playing around with OpenSCAD trying out some platonic solids and
> extensions thereof. I'm only at my first day with it, so I'm very much a
> newbie.
>
> I wanted to build tetrahedra on a tetrahedron and wrote this code:
>
> lato=100;
> h_triangolo=sqrt(3)/2*lato;
> h_tetraedro=sqrt(2/3)*lato;
>
> union() {
> scale(1.1,1.1,1.1) //added later to try the overlapping of faces
> polyhedron(
>   points=[
> [lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[-lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[0,(2/3)*h_triangolo,-(1/4)*h_tetraedro],[0,0,(3/4)*h_tetraedro]],
>   faces=[ [1,0,2],[0,1,3],[1,2,3],[2,0,3]] );
>
> polyhedron(
>   points=[
> [lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[-lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[0,0,(3/4)*h_tetraedro],[0,-(5/(2*sqrt(7)))*lato,(5/(2*sqrt(42)))*lato]],
>   faces=[ [0,1,2],[0,1,3],[1,2,3],[2,0,3]] );
>
> polyhedron(
>   points=[
> [-lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[0,(2/3)*h_triangolo,-(1/4)*h_tetraedro],[0,0,(3/4)*h_tetraedro],[-(5/4)*sqrt(3/7)*lato,(5/4)*sqrt(1/7)*lato,(5/(2*sqrt(42)))*lato]],
>   faces=[ [0,1,2],[0,1,3],[1,2,3],[2,0,3]] );
>
> polyhedron(
>   points=[
> [lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[0,(2/3)*h_triangolo,-(1/4)*h_tetraedro],[0,0,(3/4)*h_tetraedro],[(5/4)*sqrt(3/7)*lato,(5/4)*sqrt(1/7)*lato,(5/(2*sqrt(42)))*lato]],
>   faces=[ [1,0,2],[1,0,3],[2,1,3],[0,2,3]] );
>
> polyhedron(
>   points=[
> [lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[-lato/2,-h_triangolo/3,-(1/4)*h_tetraedro],[0,(2/3)*h_triangolo,-(1/4)*h_tetraedro],[0,0,-(5/4)*h_tetraedro]],
>   faces=[ [1,0,2],[1,0,3],[2,1,3],[0,2,3]] );
> }
>
> It does preview the way I expect, but only renders the first polyhedron in
> the list. I was thinking it may have to do with the small uncertainties in
> the floating point calculated numbers that make the faces not perfectly in
> contact, therefore I scaled up the first tetrahedron and now it sticks out.
> It still doesn't render in my case:
>
> version 2015.03-1 on Ubuntu 14.04.3 LTS
>
> What else could it be? Maybe a library that I left out? I installed pretty
> much all suggested packages.
>
> Thank you,
>
> Andrea.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160111/979a43f4/attachment.html>

From andrea.croci at gmx.de  Mon Jan 11 03:59:36 2016
From: andrea.croci at gmx.de (Andrea Croci)
Date: Mon, 11 Jan 2016 09:59:36 +0100
Subject: [OpenSCAD] Union of polyhedra not rendering.
In-Reply-To: <CAEEmnrOL4asa=j78HsQSVR5AKE+Oc+di7LambSZTBqrBc1mUCg@mail.gmail.com>
References: <56936429.9090904@gmx.de>
	<CAEEmnrOL4asa=j78HsQSVR5AKE+Oc+di7LambSZTBqrBc1mUCg@mail.gmail.com>
Message-ID: <56936EF8.3080309@gmx.de>

Boy, Nop Head, you are the man!

I doubled and triple checked them all also with the Thrown together view 
(well, not really all of them: I was missing just the four that create 
the problem), but I couldn't see any. The thing I didn't understand is 
that the same face could belong to two different polyhedra and has to 
face inside the right one: namely once in one direction and the other 
time in the other direction. I was doing them both times in the same 
direction. Thank you for teaching me something.

Andrea.

On 11.01.2016 09:49, nop head wrote:
> You had some of your faces facing inwards. They show up purple in the 
> thrown together view. This version works.



From nop.head at gmail.com  Mon Jan 11 05:29:07 2016
From: nop.head at gmail.com (nop head)
Date: Mon, 11 Jan 2016 10:29:07 +0000
Subject: [OpenSCAD] Reversed faces
Message-ID: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>

Since the problem of reversed polyhedron faces comes up about once a week I
was wondering why OpenScad doesn't detect them by default. Isn't it just a
matter of checking all the edges of a polyhedron are a pair of opposite
direction half edges, or is it more complicated than that?

I suppose if all the faces where reversed it would need some extra test to
detect it was completely inside out. Perhaps check all the inward face
normals intersect with at least one other face? Again it doesn't seem
particularly expensive if done once on construction and cached.

It would be nice if it reported reversed faces and always highlighted them,
not just in thrown together mode. If it is simply a matter of checking half
edges it could be done for every polyhedron construction and stored in a
valid flag. That could issue a warning on every F5 or F6 and also flag that
the inside of the polygon should be drawn purple when it is rendered. It
would also detect holes and T junctions.

The current situation is doubly confusing because the CGAL exception is
only printed once and it can take a cache flush to get the polygon to
display after fixing it.

Now that flush clears the font cache and it takes a while to rebuild having
to flush the cache is a pain.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160111/1d48c9f3/attachment.html>

From oz.at.michael at gmail.com  Mon Jan 11 06:54:22 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Mon, 11 Jan 2016 04:54:22 -0700 (MST)
Subject: [OpenSCAD] Reversed faces
In-Reply-To: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
Message-ID: <1452513262527-15650.post@n5.nabble.com>

I seem to recall this was discussed before.
Apart from the purple faces, I never understood what thrown together was
for, it just seemed to put noise in the way of finding that issue.

A warning to the console would seem to be called for.

Also the caching causing lack of repeated console messages is problematic,
perhaps the cached nodes could carry the error/warning, so it can be
repeated to the console. ?

(on rereading nophead's post, I think the above was just +1) 

Separate naive question: "suppose if all the faces where reversed", is there
ever any valid reason for that? 



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Reversed-faces-tp15649p15650.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Mon Jan 11 07:01:12 2016
From: nop.head at gmail.com (nop head)
Date: Mon, 11 Jan 2016 12:01:12 +0000
Subject: [OpenSCAD] Reversed faces
In-Reply-To: <1452513262527-15650.post@n5.nabble.com>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<1452513262527-15650.post@n5.nabble.com>
Message-ID: <CAEEmnrPQne2J62bSOQb=oLUB=qvO-+G5FfPkWQSoFpBJD9XajA@mail.gmail.com>

>Separate naive question: "suppose if all the faces where reversed", is
there ever any valid reason for that?

Logically it would make a negative volume that isn't a valid object in
OpenScad and I think all subsequent CGAL operations fail.

On 11 January 2016 at 11:54, MichaelAtOz <oz.at.michael at gmail.com> wrote:

> I seem to recall this was discussed before.
> Apart from the purple faces, I never understood what thrown together was
> for, it just seemed to put noise in the way of finding that issue.
>
> A warning to the console would seem to be called for.
>
> Also the caching causing lack of repeated console messages is problematic,
> perhaps the cached nodes could carry the error/warning, so it can be
> repeated to the console. ?
>
> (on rereading nophead's post, I think the above was just +1)
>
> Separate naive question: "suppose if all the faces where reversed", is
> there
> ever any valid reason for that?
>
>
>
> -----
> Newly minted Admin - PM me if you need anything, or if I've done something
> stupid...
>
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; to the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work. Obviously
> inclusion of works of previous authors is not included in the above.
>
> The TPP is no simple ?trade agreement.?   Fight it!
> http://www.ourfairdeal.org/   time is running out!
> --
> View this message in context:
> http://forum.openscad.org/Reversed-faces-tp15649p15650.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160111/a55cd096/attachment.html>

From doug at moens.org  Mon Jan 11 08:40:49 2016
From: doug at moens.org (doug moen)
Date: Mon, 11 Jan 2016 08:40:49 -0500
Subject: [OpenSCAD] Reversed faces
In-Reply-To: <CAEEmnrPQne2J62bSOQb=oLUB=qvO-+G5FfPkWQSoFpBJD9XajA@mail.gmail.com>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<1452513262527-15650.post@n5.nabble.com>
	<CAEEmnrPQne2J62bSOQb=oLUB=qvO-+G5FfPkWQSoFpBJD9XajA@mail.gmail.com>
Message-ID: <CAGV6i+PRaYRz4a=+hiig2QX=AD9vrrjKL-eUZu0k_iE7KzneBQ@mail.gmail.com>

"suppose all the faces were reversed"

In solid modelling systems based on functional representation, such as
ImplicitCAD and Antimony, there is a complement operator. For example,
complement(cube) is an infinite solid that fills all of space, except for a
cube shaped hole. (This is different from a negative object.) In an F-Rep
system, difference(a,b) is defined as intersection(a, complement(b)). (By
contrast, a negative object cuts a hole in a solid when it is unioned with
that solid, by my definition.)

I don't know CGAL very well, but I notice that there is a complement
operator. It makes sense to me that complement is implemented by reversing
all of the faces in a mesh, and it looks like the code is doing that, but I
can't be sure. I'm guessing that a face-reversed solid is a legal CGAL
object, an infinite object, different from a negative object.

In F-Rep solid modeling systems, infinite solids and the complement
operator are very useful, due to the increased expressive power of F-Rep.
You can't export an infinite solid to an STL file, but they are useful for
building other objects.

In OpenSCAD, due to the limitations of what you can represent with a mesh,
I think this would be a lot less useful, so I am not advocating that we
extend OpenSCAD with a complement operation. I'm just providing background
information.

On 11 January 2016 at 07:01, nop head <nop.head at gmail.com> wrote:

> >Separate naive question: "suppose if all the faces where reversed", is
> there ever any valid reason for that?
>
> Logically it would make a negative volume that isn't a valid object in
> OpenScad and I think all subsequent CGAL operations fail.
>
> On 11 January 2016 at 11:54, MichaelAtOz <oz.at.michael at gmail.com> wrote:
>
>> I seem to recall this was discussed before.
>> Apart from the purple faces, I never understood what thrown together was
>> for, it just seemed to put noise in the way of finding that issue.
>>
>> A warning to the console would seem to be called for.
>>
>> Also the caching causing lack of repeated console messages is problematic,
>> perhaps the cached nodes could carry the error/warning, so it can be
>> repeated to the console. ?
>>
>> (on rereading nophead's post, I think the above was just +1)
>>
>> Separate naive question: "suppose if all the faces where reversed", is
>> there
>> ever any valid reason for that?
>>
>>
>>
>> -----
>> Newly minted Admin - PM me if you need anything, or if I've done
>> something stupid...
>>
>> Unless specifically shown otherwise above, my contribution is in the
>> Public Domain; to the extent possible under law, I have waived all
>> copyright and related or neighbouring rights to this work. Obviously
>> inclusion of works of previous authors is not included in the above.
>>
>> The TPP is no simple ?trade agreement.?   Fight it!
>> http://www.ourfairdeal.org/   time is running out!
>> --
>> View this message in context:
>> http://forum.openscad.org/Reversed-faces-tp15649p15650.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160111/81043548/attachment.html>

From marius at kintel.net  Mon Jan 11 08:53:05 2016
From: marius at kintel.net (Marius Kintel)
Date: Mon, 11 Jan 2016 08:53:05 -0500
Subject: [OpenSCAD] Reversed faces
In-Reply-To: <CAEEmnrPQne2J62bSOQb=oLUB=qvO-+G5FfPkWQSoFpBJD9XajA@mail.gmail.com>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<1452513262527-15650.post@n5.nabble.com>
	<CAEEmnrPQne2J62bSOQb=oLUB=qvO-+G5FfPkWQSoFpBJD9XajA@mail.gmail.com>
Message-ID: <D25F31EC-F073-448D-88EE-801F6A87B070@kintel.net>

> On Jan 11, 2016, at 07:01 AM, nop head <nop.head at gmail.com> wrote:
> 
> >Separate naive question: "suppose if all the faces where reversed", is there ever any valid reason for that?
> 
> Logically it would make a negative volume that isn't a valid object in OpenScad and I think all subsequent CGAL operations fail.
> 
Also, if you want to build e.g. a hollow cube, you?d build a mesh consisting of two separate volumes: The outer cube and the inner cube, That inner cube will have all its faces reversed.

 -Marius



From marius at kintel.net  Mon Jan 11 08:59:43 2016
From: marius at kintel.net (Marius Kintel)
Date: Mon, 11 Jan 2016 08:59:43 -0500
Subject: [OpenSCAD] Reversed faces
In-Reply-To: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
Message-ID: <F1BC3736-C638-4D80-B5F0-063553F7C709@kintel.net>

Some related issues:

https://github.com/openscad/openscad/issues/348
https://github.com/openscad/openscad/issues/1042
https://github.com/openscad/openscad/issues/590

Two things:
o We should rewrite our mesh class to support tests and operators like this. This would also be a good step towards repairing imported STLs which CGAL struggles with. We could also look at external libraries with good mesh classes.
o Highlights of reversed faces in preview mode: It should be possible to simply turn this on.

 -Marius



From nop.head at gmail.com  Mon Jan 11 10:06:17 2016
From: nop.head at gmail.com (nop head)
Date: Mon, 11 Jan 2016 15:06:17 +0000
Subject: [OpenSCAD] Reversed faces
In-Reply-To: <F1BC3736-C638-4D80-B5F0-063553F7C709@kintel.net>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<F1BC3736-C638-4D80-B5F0-063553F7C709@kintel.net>
Message-ID: <CAEEmnrM140OEj1DEOytUatsN67sCOBf1hbFN9=axKcgxrunhkA@mail.gmail.com>

> o Highlights of reversed faces in preview mode: It should be possible to
simply turn this on.
That would stop a lot of questions I think.

On 11 January 2016 at 13:59, Marius Kintel <marius at kintel.net> wrote:

> Some related issues:
>
> https://github.com/openscad/openscad/issues/348
> https://github.com/openscad/openscad/issues/1042
> https://github.com/openscad/openscad/issues/590
>
> Two things:
> o We should rewrite our mesh class to support tests and operators like
> this. This would also be a good step towards repairing imported STLs which
> CGAL struggles with. We could also look at external libraries with good
> mesh classes.
> o Highlights of reversed faces in preview mode: It should be possible to
> simply turn this on.
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160111/d94bbb5d/attachment.html>

From arnholm at arnholm.org  Mon Jan 11 10:40:20 2016
From: arnholm at arnholm.org (arnholm at arnholm.org)
Date: Mon, 11 Jan 2016 16:40:20 +0100
Subject: [OpenSCAD] Reversed faces
In-Reply-To: <D25F31EC-F073-448D-88EE-801F6A87B070@kintel.net>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<1452513262527-15650.post@n5.nabble.com>
	<CAEEmnrPQne2J62bSOQb=oLUB=qvO-+G5FfPkWQSoFpBJD9XajA@mail.gmail.com>
	<D25F31EC-F073-448D-88EE-801F6A87B070@kintel.net>
Message-ID: <ce72c0e78572452cd00303054ac46059@arnholm.org>

On 2016-01-11 14:53, Marius Kintel wrote:
> Also, if you want to build e.g. a hollow cube, you?d build a mesh
> consisting of two separate volumes: The outer cube and the inner cube,
> That inner cube will have all its faces reversed.

"Reversed faces" is a relative term and therefore somewhat confusing (to 
me, anyway). Isn't the absolute and general rule simply that any face 
normal should always point away from the material? This definition 
should work for any number of internal voids and also the external 
surface.

The face normal for a triangle with vertices v[0], v[1] and v[2] could 
be defined as the cross product between 2 vectors

vec0, from v[0] to v[1]
vec1, from v[0] to v[2]

face_normal = vec0 x vec1

(quite possibly the other way around....).

Carsten Arnholm






From marius at kintel.net  Mon Jan 11 10:51:40 2016
From: marius at kintel.net (Marius Kintel)
Date: Mon, 11 Jan 2016 10:51:40 -0500
Subject: [OpenSCAD] Reversed faces
In-Reply-To: <ce72c0e78572452cd00303054ac46059@arnholm.org>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<1452513262527-15650.post@n5.nabble.com>
	<CAEEmnrPQne2J62bSOQb=oLUB=qvO-+G5FfPkWQSoFpBJD9XajA@mail.gmail.com>
	<D25F31EC-F073-448D-88EE-801F6A87B070@kintel.net>
	<ce72c0e78572452cd00303054ac46059@arnholm.org>
Message-ID: <0680A018-5183-42CA-B29B-B3139654C6E2@kintel.net>

> On Jan 11, 2016, at 10:40 AM, arnholm at arnholm.org wrote:
> Isn't the absolute and general rule simply that any face normal should always point away from the material? This definition should work for any number of internal voids and also the external surface.
> 
?reversed faces? is just used to follow the original topic. In this context it means that the vertex order of the faces is reversed.

 -Marius



From nop.head at gmail.com  Mon Jan 11 11:05:35 2016
From: nop.head at gmail.com (nop head)
Date: Mon, 11 Jan 2016 16:05:35 +0000
Subject: [OpenSCAD] Reversed faces
In-Reply-To: <0680A018-5183-42CA-B29B-B3139654C6E2@kintel.net>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<1452513262527-15650.post@n5.nabble.com>
	<CAEEmnrPQne2J62bSOQb=oLUB=qvO-+G5FfPkWQSoFpBJD9XajA@mail.gmail.com>
	<D25F31EC-F073-448D-88EE-801F6A87B070@kintel.net>
	<ce72c0e78572452cd00303054ac46059@arnholm.org>
	<0680A018-5183-42CA-B29B-B3139654C6E2@kintel.net>
Message-ID: <CAEEmnrORC1seAc+efbxhhxYVQufJc4pHsh=4Op-3d1N6X3TwpA@mail.gmail.com>

Pointing away from the material is a bit ambiguous for concave polyhedra as
a normal pointing outwards could hit another part of the object.

On 11 January 2016 at 15:51, Marius Kintel <marius at kintel.net> wrote:

> > On Jan 11, 2016, at 10:40 AM, arnholm at arnholm.org wrote:
> > Isn't the absolute and general rule simply that any face normal should
> always point away from the material? This definition should work for any
> number of internal voids and also the external surface.
> >
> ?reversed faces? is just used to follow the original topic. In this
> context it means that the vertex order of the faces is reversed.
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160111/35e204f4/attachment.html>

From doug at moens.org  Mon Jan 11 11:42:27 2016
From: doug at moens.org (doug moen)
Date: Mon, 11 Jan 2016 11:42:27 -0500
Subject: [OpenSCAD] Reversed faces
In-Reply-To: <F1BC3736-C638-4D80-B5F0-063553F7C709@kintel.net>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<F1BC3736-C638-4D80-B5F0-063553F7C709@kintel.net>
Message-ID: <CAGV6i+Mff4bzm3sqoTbonaW7sm-YRFR=Qy-WOyx0c0Oan90u-Q@mail.gmail.com>

>From the Admesh library, referenced by
https://github.com/openscad/openscad/issues/1042:

A common problem with STL files is that some or all of facets are oriented
backwards; i.e. the vertices are listed in a clockwise direction when
viewed from outside the part.  Admesh repairs the orientation of facets
according to the following algorithm:
1. Generate the neighbors list for all facets.
2. Inspect the first neighbor of the first facet to determine the
orientation of its vertices.
3. If the neighboring facet is oriented in the same direction as the first
facet, mark the neighbor as checked.  If the neighboring facet is oriented
opposite to the first facet, reverse the neighbor, and mark it as checked.
4. Repeat steps 2 and 3 until all facets have been checked.
The above algorithm ensures that all connected facets are oriented in the
same direction.  However, if the first facet is backwards, then all facets
will be backwards.  The correct orientation for the entire part is
determined after the volume has been calculated.  If the volume is
negative, then all of the facets must be backwards.  Admesh then reverses
all facets to set the correct orientation.

Nop Head's original suggestion is to report if two neighbouring facets have
opposite orientations, which matches what Admesh does. And that probably
takes care of the most common case where people screw up the arguments to
polyhedron and ask for help on the forum. It wouldn't be perfect, but it
would be progress.

Detecting whether all faces are backwards looks more complicated and
expensive. There's no "local" property you can test, as in the neighbouring
facet test. It's a global property of the entire shape.

   - Admesh does this by computing the volume, and testing if it is
   negative. Computing the volume might be expensive? There's another thread,
   a pull request for a "probe" function, which adds the ability to compute
   the volume of a shape, but this computation is said to be very expensive.
   It requires a convex decomposition, which in itself is expensive.
   - I'm not sure how Admesh deals with a complex object containing an
   interior void. Then you have an interior mesh, and an exterior mesh, which
   aren't connected. The interior mesh is expected to have a negative volume,
   while the exterior mesh is expected to have a positive volume.



On 11 January 2016 at 08:59, Marius Kintel <marius at kintel.net> wrote:

> Some related issues:
>
> https://github.com/openscad/openscad/issues/348
> https://github.com/openscad/openscad/issues/1042
> https://github.com/openscad/openscad/issues/590
>
> Two things:
> o We should rewrite our mesh class to support tests and operators like
> this. This would also be a good step towards repairing imported STLs which
> CGAL struggles with. We could also look at external libraries with good
> mesh classes.
> o Highlights of reversed faces in preview mode: It should be possible to
> simply turn this on.
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160111/d15fa12c/attachment.html>

From nop.head at gmail.com  Mon Jan 11 11:55:40 2016
From: nop.head at gmail.com (nop head)
Date: Mon, 11 Jan 2016 16:55:40 +0000
Subject: [OpenSCAD] Reversed faces
In-Reply-To: <CAGV6i+Mff4bzm3sqoTbonaW7sm-YRFR=Qy-WOyx0c0Oan90u-Q@mail.gmail.com>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<F1BC3736-C638-4D80-B5F0-063553F7C709@kintel.net>
	<CAGV6i+Mff4bzm3sqoTbonaW7sm-YRFR=Qy-WOyx0c0Oan90u-Q@mail.gmail.com>
Message-ID: <CAEEmnrOANpYjUVdfVOVGnV=nY-AYPp+1EGBzUURNdShbZ8ZFxQ@mail.gmail.com>

Does polyhedron currently work if you have an interior hole with a negative
volume?

On 11 January 2016 at 16:42, doug moen <doug at moens.org> wrote:

> From the Admesh library, referenced by
> https://github.com/openscad/openscad/issues/1042:
>
> A common problem with STL files is that some or all of facets are oriented
> backwards; i.e. the vertices are listed in a clockwise direction when
> viewed from outside the part.  Admesh repairs the orientation of facets
> according to the following algorithm:
> 1. Generate the neighbors list for all facets.
> 2. Inspect the first neighbor of the first facet to determine the
> orientation of its vertices.
> 3. If the neighboring facet is oriented in the same direction as the first
> facet, mark the neighbor as checked.  If the neighboring facet is oriented
> opposite to the first facet, reverse the neighbor, and mark it as checked.
> 4. Repeat steps 2 and 3 until all facets have been checked.
> The above algorithm ensures that all connected facets are oriented in the
> same direction.  However, if the first facet is backwards, then all facets
> will be backwards.  The correct orientation for the entire part is
> determined after the volume has been calculated.  If the volume is
> negative, then all of the facets must be backwards.  Admesh then reverses
> all facets to set the correct orientation.
>
> Nop Head's original suggestion is to report if two neighbouring facets
> have opposite orientations, which matches what Admesh does. And that
> probably takes care of the most common case where people screw up the
> arguments to polyhedron and ask for help on the forum. It wouldn't be
> perfect, but it would be progress.
>
> Detecting whether all faces are backwards looks more complicated and
> expensive. There's no "local" property you can test, as in the neighbouring
> facet test. It's a global property of the entire shape.
>
>    - Admesh does this by computing the volume, and testing if it is
>    negative. Computing the volume might be expensive? There's another thread,
>    a pull request for a "probe" function, which adds the ability to compute
>    the volume of a shape, but this computation is said to be very expensive.
>    It requires a convex decomposition, which in itself is expensive.
>    - I'm not sure how Admesh deals with a complex object containing an
>    interior void. Then you have an interior mesh, and an exterior mesh, which
>    aren't connected. The interior mesh is expected to have a negative volume,
>    while the exterior mesh is expected to have a positive volume.
>
>
>
> On 11 January 2016 at 08:59, Marius Kintel <marius at kintel.net> wrote:
>
>> Some related issues:
>>
>> https://github.com/openscad/openscad/issues/348
>> https://github.com/openscad/openscad/issues/1042
>> https://github.com/openscad/openscad/issues/590
>>
>> Two things:
>> o We should rewrite our mesh class to support tests and operators like
>> this. This would also be a good step towards repairing imported STLs which
>> CGAL struggles with. We could also look at external libraries with good
>> mesh classes.
>> o Highlights of reversed faces in preview mode: It should be possible to
>> simply turn this on.
>>
>>  -Marius
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160111/20defcc4/attachment.html>

From doug at moens.org  Mon Jan 11 12:21:36 2016
From: doug at moens.org (doug moen)
Date: Mon, 11 Jan 2016 12:21:36 -0500
Subject: [OpenSCAD] Reversed faces
In-Reply-To: <CAEEmnrOANpYjUVdfVOVGnV=nY-AYPp+1EGBzUURNdShbZ8ZFxQ@mail.gmail.com>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<F1BC3736-C638-4D80-B5F0-063553F7C709@kintel.net>
	<CAGV6i+Mff4bzm3sqoTbonaW7sm-YRFR=Qy-WOyx0c0Oan90u-Q@mail.gmail.com>
	<CAEEmnrOANpYjUVdfVOVGnV=nY-AYPp+1EGBzUURNdShbZ8ZFxQ@mail.gmail.com>
Message-ID: <CAGV6i+MNDKiSBg=6rsEWPeCBQo9cWDBCSd=WH1Y3Jvm18m2e=w@mail.gmail.com>

I tried and got a CGAL error.

If it doesn't work, then that may be bad news for users of STL -> SCAD file
converters. This trick is used for posting OpenSCAD files to Thingiverse,
since the thingiverse customizer won't work if your scad file imports an
STL file: the imported polyhedron must instead be written as inline code. I
haven't used one of these converters: you could write one smart enough to
detect interior voids and generate difference() statements.

On 11 January 2016 at 11:55, nop head <nop.head at gmail.com> wrote:

> Does polyhedron currently work if you have an interior hole with a
> negative volume?
>
> On 11 January 2016 at 16:42, doug moen <doug at moens.org> wrote:
>
>> From the Admesh library, referenced by
>> https://github.com/openscad/openscad/issues/1042:
>>
>> A common problem with STL files is that some or all of facets are
>> oriented backwards; i.e. the vertices are listed in a clockwise direction
>> when viewed from outside the part.  Admesh repairs the orientation of
>> facets according to the following algorithm:
>> 1. Generate the neighbors list for all facets.
>> 2. Inspect the first neighbor of the first facet to determine the
>> orientation of its vertices.
>> 3. If the neighboring facet is oriented in the same direction as the
>> first facet, mark the neighbor as checked.  If the neighboring facet is
>> oriented opposite to the first facet, reverse the neighbor, and mark it as
>> checked.
>> 4. Repeat steps 2 and 3 until all facets have been checked.
>> The above algorithm ensures that all connected facets are oriented in the
>> same direction.  However, if the first facet is backwards, then all facets
>> will be backwards.  The correct orientation for the entire part is
>> determined after the volume has been calculated.  If the volume is
>> negative, then all of the facets must be backwards.  Admesh then reverses
>> all facets to set the correct orientation.
>>
>> Nop Head's original suggestion is to report if two neighbouring facets
>> have opposite orientations, which matches what Admesh does. And that
>> probably takes care of the most common case where people screw up the
>> arguments to polyhedron and ask for help on the forum. It wouldn't be
>> perfect, but it would be progress.
>>
>> Detecting whether all faces are backwards looks more complicated and
>> expensive. There's no "local" property you can test, as in the neighbouring
>> facet test. It's a global property of the entire shape.
>>
>>    - Admesh does this by computing the volume, and testing if it is
>>    negative. Computing the volume might be expensive? There's another thread,
>>    a pull request for a "probe" function, which adds the ability to compute
>>    the volume of a shape, but this computation is said to be very expensive.
>>    It requires a convex decomposition, which in itself is expensive.
>>    - I'm not sure how Admesh deals with a complex object containing an
>>    interior void. Then you have an interior mesh, and an exterior mesh, which
>>    aren't connected. The interior mesh is expected to have a negative volume,
>>    while the exterior mesh is expected to have a positive volume.
>>
>>
>>
>> On 11 January 2016 at 08:59, Marius Kintel <marius at kintel.net> wrote:
>>
>>> Some related issues:
>>>
>>> https://github.com/openscad/openscad/issues/348
>>> https://github.com/openscad/openscad/issues/1042
>>> https://github.com/openscad/openscad/issues/590
>>>
>>> Two things:
>>> o We should rewrite our mesh class to support tests and operators like
>>> this. This would also be a good step towards repairing imported STLs which
>>> CGAL struggles with. We could also look at external libraries with good
>>> mesh classes.
>>> o Highlights of reversed faces in preview mode: It should be possible to
>>> simply turn this on.
>>>
>>>  -Marius
>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160111/c77b20f7/attachment.html>

From marius at kintel.net  Mon Jan 11 13:03:42 2016
From: marius at kintel.net (Marius Kintel)
Date: Mon, 11 Jan 2016 13:03:42 -0500
Subject: [OpenSCAD] Reversed faces
In-Reply-To: <CAGV6i+MNDKiSBg=6rsEWPeCBQo9cWDBCSd=WH1Y3Jvm18m2e=w@mail.gmail.com>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<F1BC3736-C638-4D80-B5F0-063553F7C709@kintel.net>
	<CAGV6i+Mff4bzm3sqoTbonaW7sm-YRFR=Qy-WOyx0c0Oan90u-Q@mail.gmail.com>
	<CAEEmnrOANpYjUVdfVOVGnV=nY-AYPp+1EGBzUURNdShbZ8ZFxQ@mail.gmail.com>
	<CAGV6i+MNDKiSBg=6rsEWPeCBQo9cWDBCSd=WH1Y3Jvm18m2e=w@mail.gmail.com>
Message-ID: <9820A2CB-7919-42F4-B6E4-80A65A4AA14E@kintel.net>

Hm, that should work - we fixed some bugs related to that a while ago.
I?ll give it a spin..

 -Marius

> On Jan 11, 2016, at 12:21 PM, doug moen <doug at moens.org> wrote:
> 
> I tried and got a CGAL error.
> 
> If it doesn't work, then that may be bad news for users of STL -> SCAD file converters. This trick is used for posting OpenSCAD files to Thingiverse, since the thingiverse customizer won't work if your scad file imports an STL file: the imported polyhedron must instead be written as inline code. I haven't used one of these converters: you could write one smart enough to detect interior voids and generate difference() statements.
> 
> On 11 January 2016 at 11:55, nop head <nop.head at gmail.com> wrote:
> Does polyhedron currently work if you have an interior hole with a negative volume?



From arnholm at arnholm.org  Mon Jan 11 14:24:49 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Mon, 11 Jan 2016 20:24:49 +0100
Subject: [OpenSCAD] Reversed faces
In-Reply-To: <CAEEmnrORC1seAc+efbxhhxYVQufJc4pHsh=4Op-3d1N6X3TwpA@mail.gmail.com>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<1452513262527-15650.post@n5.nabble.com>
	<CAEEmnrPQne2J62bSOQb=oLUB=qvO-+G5FfPkWQSoFpBJD9XajA@mail.gmail.com>
	<D25F31EC-F073-448D-88EE-801F6A87B070@kintel.net>
	<ce72c0e78572452cd00303054ac46059@arnholm.org>
	<0680A018-5183-42CA-B29B-B3139654C6E2@kintel.net>
	<CAEEmnrORC1seAc+efbxhhxYVQufJc4pHsh=4Op-3d1N6X3TwpA@mail.gmail.com>
Message-ID: <56940181.9010109@arnholm.org>

On 11. jan. 2016 17:05, nop head wrote:
> Pointing away from the material is a bit ambiguous for concave polyhedra
> as a normal pointing outwards could hit another part of the object.

No it isn't ambiguous. It refers only to the immediate direction of the 
non-material wrt. the face as compared to the immediate direction of the 
solid material wrt. the same face.

Carsten Arnholm





From mschafer at wireframe.biz  Mon Jan 11 16:47:17 2016
From: mschafer at wireframe.biz (Mark Schafer)
Date: Tue, 12 Jan 2016 10:47:17 +1300
Subject: [OpenSCAD] Reversed faces
In-Reply-To: <CAGV6i+Mff4bzm3sqoTbonaW7sm-YRFR=Qy-WOyx0c0Oan90u-Q@mail.gmail.com>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<F1BC3736-C638-4D80-B5F0-063553F7C709@kintel.net>
	<CAGV6i+Mff4bzm3sqoTbonaW7sm-YRFR=Qy-WOyx0c0Oan90u-Q@mail.gmail.com>
Message-ID: <569422E5.8010700@wireframe.biz>

You can determine the correct orientation at the outset by randomly 
sampling faces until you find one whose normal does not collide with any 
other faces on the object. I.e. if there is a face whose normal, when 
raycast, does not hit any other faces, then that face has the correct 
orientation.
In practise sampling some % of faces in the object looking for a single 
fail to set the orientation.
Then start the growing/winding procedure with that face.




From nop.head at gmail.com  Mon Jan 11 17:19:07 2016
From: nop.head at gmail.com (nop head)
Date: Mon, 11 Jan 2016 22:19:07 +0000
Subject: [OpenSCAD] Reversed faces
In-Reply-To: <569422E5.8010700@wireframe.biz>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<F1BC3736-C638-4D80-B5F0-063553F7C709@kintel.net>
	<CAGV6i+Mff4bzm3sqoTbonaW7sm-YRFR=Qy-WOyx0c0Oan90u-Q@mail.gmail.com>
	<569422E5.8010700@wireframe.biz>
Message-ID: <CAEEmnrMZTZxsNnvJHd923+7Zu6A48XMD-=c7ChCToLiusG5Y0w@mail.gmail.com>

>No it isn't ambiguous. It refers only to the immediate direction of the
non-material wrt. the face as compared to the immediate direction of the
solid material wrt. the same face.

Not ambiguous as a definition but in practice there is no solid material,
just faces representing its boundary. So as the previous post says you need
to see if the normal intersects another face. I.e. you need to find an
outwards normal that doesn't intersect. One that does intersect is
ambiguous on a concave object.

On 11 January 2016 at 21:47, Mark Schafer <mschafer at wireframe.biz> wrote:

> You can determine the correct orientation at the outset by randomly
> sampling faces until you find one whose normal does not collide with any
> other faces on the object. I.e. if there is a face whose normal, when
> raycast, does not hit any other faces, then that face has the correct
> orientation.
> In practise sampling some % of faces in the object looking for a single
> fail to set the orientation.
> Then start the growing/winding procedure with that face.
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160111/5b99199a/attachment.html>

From oz.at.michael at gmail.com  Mon Jan 11 21:30:04 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Mon, 11 Jan 2016 19:30:04 -0700 (MST)
Subject: [OpenSCAD] .scad file won't render
In-Reply-To: <1452556099418-15667.post@n5.nabble.com>
References: <1452556099418-15667.post@n5.nabble.com>
Message-ID: <1452565804887-15668.post@n5.nabble.com>

Micheed,

Welcome to the forum. Your post is still flagged as "This post has NOT been
accepted by the mailing list yet", so nobody gets it unless they look. You
need to subscribe to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.

"it just stops and says Rendering Polygon Mesh using CGAL" - CGAL is slow
with complex models. Particularly when union()ing many objects, which I have
a suspicion is happening here.

I have had some renders go over 24 hours, tho many minutes is typical. How
long did you wait?

How big is the file you load into OpenSCAD, perhaps you could load it here
(under the More button) or link to it.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/scad-file-won-t-render-tp15667p15668.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From drchrispook at gmail.com  Mon Jan 11 21:31:48 2016
From: drchrispook at gmail.com (chris)
Date: Mon, 11 Jan 2016 19:31:48 -0700 (MST)
Subject: [OpenSCAD] include is borked
In-Reply-To: <1452179309988-15539.post@n5.nabble.com>
References: <1452157444505-15533.post@n5.nabble.com>
	<1452179309988-15539.post@n5.nabble.com>
Message-ID: <1452565908277-15669.post@n5.nabble.com>

Hi Marius, thanks for getting back to me. You are correct, there was a typo
in the list of variables I was pasting into the included file which threw a
"Warning: _____ variable not recognised" error when I pressed F5. 

Full Internal Report to follow immediately in High Embarrassment Factor
code.

Regards, 
Chris



--
View this message in context: http://forum.openscad.org/include-is-borked-tp15533p15669.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Mon Jan 11 22:47:57 2016
From: mschafer at wireframe.biz (Neon22)
Date: Mon, 11 Jan 2016 20:47:57 -0700 (MST)
Subject: [OpenSCAD] .scad file won't render
In-Reply-To: <1452556099418-15667.post@n5.nabble.com>
References: <1452556099418-15667.post@n5.nabble.com>
Message-ID: <1452570477963-15670.post@n5.nabble.com>

@micheed. try using the extension to save out for inkscape.
here - http://www.thingiverse.com/thing:1065500

It will turn your vector shapes into extruded blocks.
You might want to group some together and add a base.




--
View this message in context: http://forum.openscad.org/scad-file-won-t-render-tp15667p15670.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From gregorybartonfrost at gmail.com  Tue Jan 12 04:44:31 2016
From: gregorybartonfrost at gmail.com (Greg Frost)
Date: Tue, 12 Jan 2016 20:14:31 +1030
Subject: [OpenSCAD] Reversed faces
In-Reply-To: <CAEEmnrMZTZxsNnvJHd923+7Zu6A48XMD-=c7ChCToLiusG5Y0w@mail.gmail.com>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<F1BC3736-C638-4D80-B5F0-063553F7C709@kintel.net>
	<CAGV6i+Mff4bzm3sqoTbonaW7sm-YRFR=Qy-WOyx0c0Oan90u-Q@mail.gmail.com>
	<569422E5.8010700@wireframe.biz>
	<CAEEmnrMZTZxsNnvJHd923+7Zu6A48XMD-=c7ChCToLiusG5Y0w@mail.gmail.com>
Message-ID: <E96C9B48-8773-4514-9CD9-0A4D768DBE31@gmail.com>



> On 12 Jan 2016, at 8:49 am, nop head <nop.head at gmail.com> wrote:
> 
> >No it isn't ambiguous. It refers only to the immediate direction of the non-material wrt. the face as compared to the immediate direction of the solid material wrt. the same face.
> 
> Not ambiguous as a definition but in practice there is no solid material, just faces representing its boundary. So as the previous post says you need to see if the normal intersects another face. I.e. you need to find an outwards normal that doesn't intersect. One that does intersect is ambiguous on a concave object.
> 
>> On 11 January 2016 at 21:47, Mark Schafer <mschafer at wireframe.biz> wrote:
>> You can determine the correct orientation at the outset by randomly sampling faces until you find one whose normal does not collide with any other faces on the object. I.e. if there is a face whose normal, when raycast, does not hit any other faces, then that face has the correct orientation.
>> In practise sampling some % of faces in the object looking for a single fail to set the orientation.
>> Then start the growing/winding procedure with that face
> 
If it intersects an even number of times, you started on the outside. If it intersects an odd number, you are on the inside.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160112/dfa88ab8/attachment.html>

From nop.head at gmail.com  Tue Jan 12 05:00:44 2016
From: nop.head at gmail.com (nop head)
Date: Tue, 12 Jan 2016 10:00:44 +0000
Subject: [OpenSCAD] Reversed faces
In-Reply-To: <E96C9B48-8773-4514-9CD9-0A4D768DBE31@gmail.com>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<F1BC3736-C638-4D80-B5F0-063553F7C709@kintel.net>
	<CAGV6i+Mff4bzm3sqoTbonaW7sm-YRFR=Qy-WOyx0c0Oan90u-Q@mail.gmail.com>
	<569422E5.8010700@wireframe.biz>
	<CAEEmnrMZTZxsNnvJHd923+7Zu6A48XMD-=c7ChCToLiusG5Y0w@mail.gmail.com>
	<E96C9B48-8773-4514-9CD9-0A4D768DBE31@gmail.com>
Message-ID: <CAEEmnrOODofuJbFTFgDH=KcPDhLN021C-QuR8KcnQW6WXfFqNw@mail.gmail.com>

Yes if you are careful about intersecting another face at an edge or a
vertex or along its plane.

On 12 January 2016 at 09:44, Greg Frost <gregorybartonfrost at gmail.com>
wrote:

>
>
> On 12 Jan 2016, at 8:49 am, nop head <nop.head at gmail.com> wrote:
>
> >No it isn't ambiguous. It refers only to the immediate direction of the
> non-material wrt. the face as compared to the immediate direction of the
> solid material wrt. the same face.
>
> Not ambiguous as a definition but in practice there is no solid material,
> just faces representing its boundary. So as the previous post says you need
> to see if the normal intersects another face. I.e. you need to find an
> outwards normal that doesn't intersect. One that does intersect is
> ambiguous on a concave object.
>
> On 11 January 2016 at 21:47, Mark Schafer <mschafer at wireframe.biz> wrote:
>
>> You can determine the correct orientation at the outset by randomly
>> sampling faces until you find one whose normal does not collide with any
>> other faces on the object. I.e. if there is a face whose normal, when
>> raycast, does not hit any other faces, then that face has the correct
>> orientation.
>> In practise sampling some % of faces in the object looking for a single
>> fail to set the orientation.
>> Then start the growing/winding procedure with that face
>
>
> If it intersects an even number of times, you started on the outside. If
> it intersects an odd number, you are on the inside.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160112/92dc3157/attachment.html>

From oz.at.michael at gmail.com  Tue Jan 12 07:06:11 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Tue, 12 Jan 2016 05:06:11 -0700 (MST)
Subject: [OpenSCAD] Reversed faces
In-Reply-To: <CAEEmnrOODofuJbFTFgDH=KcPDhLN021C-QuR8KcnQW6WXfFqNw@mail.gmail.com>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<F1BC3736-C638-4D80-B5F0-063553F7C709@kintel.net>
	<CAGV6i+Mff4bzm3sqoTbonaW7sm-YRFR=Qy-WOyx0c0Oan90u-Q@mail.gmail.com>
	<569422E5.8010700@wireframe.biz>
	<CAEEmnrMZTZxsNnvJHd923+7Zu6A48XMD-=c7ChCToLiusG5Y0w@mail.gmail.com>
	<E96C9B48-8773-4514-9CD9-0A4D768DBE31@gmail.com>
	<CAEEmnrOODofuJbFTFgDH=KcPDhLN021C-QuR8KcnQW6WXfFqNw@mail.gmail.com>
Message-ID: <1452600371288-15673.post@n5.nabble.com>

Many of my issues occur with lines/planes and faces of circles/cylinders with
varying $fn values, particularly intersection/difference, how does this
approach consider the tangential inconsistency of the curve approximation.
He says naively...  ;) or provocatively...if I have 1/2 an understanding...



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Reversed-faces-tp15649p15673.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Tue Jan 12 07:18:36 2016
From: nop.head at gmail.com (nop head)
Date: Tue, 12 Jan 2016 12:18:36 +0000
Subject: [OpenSCAD] Reversed faces
In-Reply-To: <1452600371288-15673.post@n5.nabble.com>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<F1BC3736-C638-4D80-B5F0-063553F7C709@kintel.net>
	<CAGV6i+Mff4bzm3sqoTbonaW7sm-YRFR=Qy-WOyx0c0Oan90u-Q@mail.gmail.com>
	<569422E5.8010700@wireframe.biz>
	<CAEEmnrMZTZxsNnvJHd923+7Zu6A48XMD-=c7ChCToLiusG5Y0w@mail.gmail.com>
	<E96C9B48-8773-4514-9CD9-0A4D768DBE31@gmail.com>
	<CAEEmnrOODofuJbFTFgDH=KcPDhLN021C-QuR8KcnQW6WXfFqNw@mail.gmail.com>
	<1452600371288-15673.post@n5.nabble.com>
Message-ID: <CAEEmnrMDMC_Mrn+n=Q7btkmbVbknq8Y-_54_5nfJRaXMxCzU7g@mail.gmail.com>

I don't think detecting and highlighting reversed polyhedra faces has any
connection to tangential problems with cylinder does it?

Basically you need to avoid a tangential interfaces because even with a
perfect mathematical curve you create an infinitely thin knife edge that is
problematical.

Keeping $fn a multiple of 4 is a good idea and using hull instead of union
if possible. Now that 2D uses fixed point things get even more tricky.


On 12 January 2016 at 12:06, MichaelAtOz <oz.at.michael at gmail.com> wrote:

> Many of my issues occur with lines/planes and faces of circles/cylinders
> with
> varying $fn values, particularly intersection/difference, how does this
> approach consider the tangential inconsistency of the curve approximation.
> He says naively...  ;) or provocatively...if I have 1/2 an understanding...
>
>
>
> -----
> Newly minted Admin - PM me if you need anything, or if I've done something
> stupid...
>
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; to the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work. Obviously
> inclusion of works of previous authors is not included in the above.
>
> The TPP is no simple ?trade agreement.?   Fight it!
> http://www.ourfairdeal.org/   time is running out!
> --
> View this message in context:
> http://forum.openscad.org/Reversed-faces-tp15649p15673.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160112/808e2a92/attachment.html>

From oz.at.michael at gmail.com  Wed Jan 13 17:26:38 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Wed, 13 Jan 2016 15:26:38 -0700 (MST)
Subject: [OpenSCAD] Volume and Center of mass
In-Reply-To: <1452723432904-15675.post@n5.nabble.com>
References: <1451783839383-15421.post@n5.nabble.com>
	<1451839424274-15433.post@n5.nabble.com>
	<CAGV6i+M0KuDhtC1qksQ9E2qN_dtL9DwFG1VZWWTxtG6Amx5O8g@mail.gmail.com>
	<1451885651687-15458.post@n5.nabble.com>
	<1451886294966-15459.post@n5.nabble.com>
	<1452723432904-15675.post@n5.nabble.com>
Message-ID: <1452723998665-15676.post@n5.nabble.com>

joao.quezada wrote
> I agree! very nice work.
> 
> Please publish :)

Welcome to the forum. Your post is still flagged as "This post has NOT been
accepted by the mailing list yet", so nobody gets it unless they look. 
You need to subscribe to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Volume-and-Center-of-mass-tp15421p15676.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Wed Jan 13 19:26:14 2016
From: doug at moens.org (doug moen)
Date: Wed, 13 Jan 2016 19:26:14 -0500
Subject: [OpenSCAD] export() function.
In-Reply-To: <CAEEmnrMewzFKgffJ3VU22Zz7cBGTxHsh13vjUJ0CQkZSQXgi_g@mail.gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <5690E9D6.7090504@jonbondy.com>
	<5690FF46.90301@gmail.com> <20160109130106.63696b0a@cygnus>
	<05186620-8678-49D1-A600-B8CDEA5F2143@gmail.com>
	<CAPmXz3U5s6JzG0LUDhKMUnTVXBSKEM4ERsXybH1etS58Q8iyPQ@mail.gmail.com>
	<CAEEmnrMp2LRLL+D-AzhrGF-KqU2mR06jVz4ehk-=mmcm37KRrg@mail.gmail.com>
	<569285F0.8080706@gmx.de>
	<CAEEmnrNi+aFFHDpMCHgt0w5Au2CFSUhmR+8AzOwpm3sAOGDzkg@mail.gmail.com>
	<56929395.50105@gmx.de>
	<CAEEmnrMewzFKgffJ3VU22Zz7cBGTxHsh13vjUJ0CQkZSQXgi_g@mail.gmail.com>
Message-ID: <CAGV6i+O9sgCNyaiOJenQBUiB-o0FyaK-Noq8r3WkyjO-cxExCw@mail.gmail.com>

I agree with Nop Head that we can and should keep the syntax simple., The
namespace management issue that Torsten brought up is really orthogonal to
this discussion, and can be solved in a different way.

There are several different use cases being discussed. Multi-part models,
as described by Ezra, are really a different problem than multiple
materials. We've discussed multi-material semantics in a different thread,
and we want to extend the semantics of the CSG operators to behave sensibly
when the argument shapes consist of multiple materials. That issue doesn't
arise for multi-part models.

AMF *is* relevant to multi-part models. The AMF file format can separately
describe each component of a multi-part model. And slic3r has support for
reading and writing multi-part models, as single AMF files. Ezra describes
the situation where you try to print a multi-part model: some of the parts
print successfully, some of them fail. Then you want to reprint only those
components that failed. Slic3r supports this workflow using multi-part AMF
files (in Expert mode).

I think OpenSCAD should provide a simple, high level syntax for tagging the
different parts of a multi-part model. The details of how that is
represented in the file system should depend on what export option you are
using. There's one option to export a multi-part model as a collection of
STL files, and there's another option to export it as a single AMF file. (A
third option is to export the entire assembly as a single STL file.)
Instead of export("filename"), we could have component("partname"). This
way, the model stays abstract, and the details of which file format you are
exporting to are kept out of the model.

Doug.

On 10 January 2016 at 12:46, nop head <nop.head at gmail.com> wrote:

> I think your last point is implementation details, which should not really
> dictate language syntax.  From the outside I don't see any logical
> difference between color and material and isn't everything a tree node in
> openscad? It is however a big subject when you consider what happens with
> respect to CGS ops (that isn't even right for colours yet). I don't think
> it should hold up this or have any bearing on it.
>
> I would prefer to keep the syntax as small as possible and not grabbed
> from other, far more complicated, languages. Otherwise you might as well
> write in those languages and generate scad files, as many people do.
>
> module mydx() {
>    layer("outlines") { // note I have no idea what DXF layers names look
> like.
>       ...
>    }
>    layer("engrave") {
>      ...
>    }
> }
>
> export("my.xdf) mydxf();
>
> module myamf() {
>     material("PLA") {.....};
>     material("TEP") {.....};
> }
>
> export("my.amf") myamf();
>
> Why does it need to be more complicated?
>
>
>
> On 10 January 2016 at 17:23, Torsten Paul <Torsten.Paul at gmx.de> wrote:
>
>> On 01/10/2016 05:47 PM, nop head wrote:
>> > I wouldn't have chosen C myself as I prefer Python syntax but as it
>> > started out almost pure C syntax I think it should stay that way.
>> >
>> Interesting, even Python has similar features for functions.
>> http://python-future.org/func_annotations.html
>>
>> And when looking at python decorators, the syntax almost matches
>> the Java syntax, I've used as example:
>> http://thecodeship.com/patterns/guide-to-python-function-decorators/
>> Although those are serving a bit different purpose, I think.
>>
>> As I said, the specific syntax is just a prototype so far. It
>> does not really matter. Unfortunately C does not have annotations
>> so we can't borrow that syntax. But you could also argue that SCAD
>> looks like C# and we could try to use that syntax.
>>
>> > My preferred way of doing multi-materials would be to attach
>> > attributes exactly the same way color does
>> >
>> I think the key word here is *attach*. And that's precisely what
>> color() right now does not do. It creates a new tree node, so
>> if you traverse the node tree, there's a separate color node.
>> This actually makes things more complicated internally.
>>
>> ciao,
>>   Torsten.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160113/497ed531/attachment.html>

From marius at kintel.net  Wed Jan 13 23:55:28 2016
From: marius at kintel.net (Marius Kintel)
Date: Wed, 13 Jan 2016 23:55:28 -0500
Subject: [OpenSCAD] export() function.
In-Reply-To: <CAGV6i+O9sgCNyaiOJenQBUiB-o0FyaK-Noq8r3WkyjO-cxExCw@mail.gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com>
	<5689C0AA.2010206@gmx.de> <1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <5690E9D6.7090504@jonbondy.com>
	<5690FF46.90301@gmail.com> <20160109130106.63696b0a@cygnus>
	<05186620-8678-49D1-A600-B8CDEA5F2143@gmail.com>
	<CAPmXz3U5s6JzG0LUDhKMUnTVXBSKEM4ERsXybH1etS58Q8iyPQ@mail.gmail.com>
	<CAEEmnrMp2LRLL+D-AzhrGF-KqU2mR06jVz4ehk-=mmcm37KRrg@mail.gmail.com>
	<569285F0.8080706@gmx.de>
	<CAEEmnrNi+aFFHDpMCHgt0w5Au2CFSUhmR+8AzOwpm3sAOGDzkg@mail.gmail.com>
	<56929395.50105@gmx.de>
	<CAEEmnrMewzFKgffJ3VU22Zz7cBGTxHsh13vjUJ0CQkZSQXgi_g@mail.gmail.com>
	<CAGV6i+O9sgCNyaiOJenQBUiB-o0FyaK-Noq8r3WkyjO-cxExCw@mail.gmail.com>
Message-ID: <D7D0BDAD-9127-49C7-8EB5-EF4908F91633@kintel.net>

Hi all,

I?m a bit late to the discussion, but I?d like to make some observations and suggestions based on the contributions so far:

Syntax aside, it sounds to me like the red thread in this discussion is the ability to ?tag? nodes or sub-trees in an OpenSCAD design with certain information, which can later be used to perform operations _after_ we?ve successfully built what we usually call a CSG tree (a tree of CSG operators on concrete geometries).

Operations discussed here include: Various forms of rendering (incl. color/material selection and rendering modifiers), export to various file formats, text output/echo for BOM purposes, annotations for export purposes (incl. layer specification), select/ignore modifiers, persistent caching.

What if we implemented general purpose annotation functionality for attaching a name=value dictionary (or smth. similar) to any OpenSCAD CSG tree node? Various built-in functions (as mentioned above) could then use these annotations while traversing the tree, by querying pre-defined annotations.
By making it general purpose, we could theoretically, at a later stage, add some sort of API to query these annotations to allow other software (or plugins) to extend the functionality of OpenSCAD.

To implement this within the current syntax, we could (as suggested earlier) implement modules serving only tagging purposes.
One example would be (to use an example from the previous email from Doug): component(?name?) someSubTree();
This has the benefit of keeping the user-facing syntax simple.
A more general approach could be annotation(component=?name?) someSubTree();
The 'component(?name?)? syntax could simply be a shortcut for the full annotation syntax. OpenSCAD2 would also allow us to attach any plain old data structure to a node, or even programmatically define annotations.

For this to be successful, we should not create group nodes for such annotations, but accumulate them into a dict attached to the child node.
One interesting note: If we do this properly, we could probably rewrite both color() and the 4 modifier characters to the new annotation scheme.

There might be namespace clashes. One earlier suggestion (by Torsten I believe) was to use a special character ?@? for annotation shortcuts.
Torsten also pointed out that this could be generalized further into annotating module definitions for customization, documentation and auto-complete purposes.

ok, this was a bit longer than anticipated.
I also apologize in advance for being late for the next discussion. Too many emails?

 -Marius



From nop.head at gmail.com  Thu Jan 14 03:36:55 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 14 Jan 2016 08:36:55 +0000
Subject: [OpenSCAD] export() function.
In-Reply-To: <D7D0BDAD-9127-49C7-8EB5-EF4908F91633@kintel.net>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <5690E9D6.7090504@jonbondy.com>
	<5690FF46.90301@gmail.com> <20160109130106.63696b0a@cygnus>
	<05186620-8678-49D1-A600-B8CDEA5F2143@gmail.com>
	<CAPmXz3U5s6JzG0LUDhKMUnTVXBSKEM4ERsXybH1etS58Q8iyPQ@mail.gmail.com>
	<CAEEmnrMp2LRLL+D-AzhrGF-KqU2mR06jVz4ehk-=mmcm37KRrg@mail.gmail.com>
	<569285F0.8080706@gmx.de>
	<CAEEmnrNi+aFFHDpMCHgt0w5Au2CFSUhmR+8AzOwpm3sAOGDzkg@mail.gmail.com>
	<56929395.50105@gmx.de>
	<CAEEmnrMewzFKgffJ3VU22Zz7cBGTxHsh13vjUJ0CQkZSQXgi_g@mail.gmail.com>
	<CAGV6i+O9sgCNyaiOJenQBUiB-o0FyaK-Noq8r3WkyjO-cxExCw@mail.gmail.com>
	<D7D0BDAD-9127-49C7-8EB5-EF4908F91633@kintel.net>
Message-ID: <CAEEmnrMgeC+_QHrM0wcq2AAkjbKFxK5vdnSv5oRuaukuASysog@mail.gmail.com>

Annotations would be nice but the problem is I don't want to export the
model I see in F5. In that model my printed parts are not oriented for
printing and may not have additional support structures added. This is why
I want an export function that doesn't render its children during F5 and
F6. During the export operation invoked from a menu I only want the
children of export statements rendered, not my main model, which is an
assembly view. So it's a bit more than just annotation.

Currently I achieve exactly what I want with echo and Python but other
people what to have it native to OpenScad.

On 14 January 2016 at 04:55, Marius Kintel <marius at kintel.net> wrote:

> Hi all,
>
> I?m a bit late to the discussion, but I?d like to make some observations
> and suggestions based on the contributions so far:
>
> Syntax aside, it sounds to me like the red thread in this discussion is
> the ability to ?tag? nodes or sub-trees in an OpenSCAD design with certain
> information, which can later be used to perform operations _after_ we?ve
> successfully built what we usually call a CSG tree (a tree of CSG operators
> on concrete geometries).
>
> Operations discussed here include: Various forms of rendering (incl.
> color/material selection and rendering modifiers), export to various file
> formats, text output/echo for BOM purposes, annotations for export purposes
> (incl. layer specification), select/ignore modifiers, persistent caching.
>
> What if we implemented general purpose annotation functionality for
> attaching a name=value dictionary (or smth. similar) to any OpenSCAD CSG
> tree node? Various built-in functions (as mentioned above) could then use
> these annotations while traversing the tree, by querying pre-defined
> annotations.
> By making it general purpose, we could theoretically, at a later stage,
> add some sort of API to query these annotations to allow other software (or
> plugins) to extend the functionality of OpenSCAD.
>
> To implement this within the current syntax, we could (as suggested
> earlier) implement modules serving only tagging purposes.
> One example would be (to use an example from the previous email from
> Doug): component(?name?) someSubTree();
> This has the benefit of keeping the user-facing syntax simple.
> A more general approach could be annotation(component=?name?)
> someSubTree();
> The 'component(?name?)? syntax could simply be a shortcut for the full
> annotation syntax. OpenSCAD2 would also allow us to attach any plain old
> data structure to a node, or even programmatically define annotations.
>
> For this to be successful, we should not create group nodes for such
> annotations, but accumulate them into a dict attached to the child node.
> One interesting note: If we do this properly, we could probably rewrite
> both color() and the 4 modifier characters to the new annotation scheme.
>
> There might be namespace clashes. One earlier suggestion (by Torsten I
> believe) was to use a special character ?@? for annotation shortcuts.
> Torsten also pointed out that this could be generalized further into
> annotating module definitions for customization, documentation and
> auto-complete purposes.
>
> ok, this was a bit longer than anticipated.
> I also apologize in advance for being late for the next discussion. Too
> many emails?
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160114/c64cf010/attachment.html>

From mickvav at gmail.com  Thu Jan 14 04:05:23 2016
From: mickvav at gmail.com (Mihail Vasiliev)
Date: Thu, 14 Jan 2016 12:05:23 +0300
Subject: [OpenSCAD] export() function.
In-Reply-To: <CAEEmnrMgeC+_QHrM0wcq2AAkjbKFxK5vdnSv5oRuaukuASysog@mail.gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com>
	<5689C0AA.2010206@gmx.de> <1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <5690E9D6.7090504@jonbondy.com>
	<5690FF46.90301@gmail.com> <20160109130106.63696b0a@cygnus>
	<05186620-8678-49D1-A600-B8CDEA5F2143@gmail.com>
	<CAPmXz3U5s6JzG0LUDhKMUnTVXBSKEM4ERsXybH1etS58Q8iyPQ@mail.gmail.com>
	<CAEEmnrMp2LRLL+D-AzhrGF-KqU2mR06jVz4ehk-=mmcm37KRrg@mail.gmail.com>
	<569285F0.8080706@gmx.de>
	<CAEEmnrNi+aFFHDpMCHgt0w5Au2CFSUhmR+8AzOwpm3sAOGDzkg@mail.gmail.com>
	<56929395.50105@gmx.de>
	<CAEEmnrMewzFKgffJ3VU22Zz7cBGTxHsh13vjUJ0CQkZSQXgi_g@mail.gmail.com>
	<CAGV6i+O9sgCNyaiOJenQBUiB-o0FyaK-Noq8r3WkyjO-cxExCw@mail.gmail.com>
	<D7D0BDAD-9127-49C7-8EB5-EF4908F91633@kintel.net>
	<CAEEmnrMgeC+_QHrM0wcq2AAkjbKFxK5vdnSv5oRuaukuASysog@mail.gmail.com>
Message-ID: <CAPmXz3W_MEvYJMEjiSMhmHYmN+pJbSp+rGhQhCe11Wbo+xP3_Q@mail.gmail.com>

>From my point of view, it's just an orthogonal ideas - annotation of
logical parts of actual model and defining viewports for their presentation
to user. If I model a house and annotate it's part as a "roof", I want to
be able to define a views "3D from the front", "3D oxonometric", "2D cut
through rooftop". And see the annotated parts labeled by their annotations.

And it's Ok to have several windows as representations of these views on
F5/F6, and have them in files on (something else, say, F7, not sure if it
is used already). Although, if someone needs, say, 100 cuts in 2D, these
cuts should have an option to disable GUI preview case. For more general
approach option to disable exporting in file for a view should also be
implemented.


2016-01-14 11:36 GMT+03:00 nop head <nop.head at gmail.com>:

> Annotations would be nice but the problem is I don't want to export the
> model I see in F5. In that model my printed parts are not oriented for
> printing and may not have additional support structures added. This is why
> I want an export function that doesn't render its children during F5 and
> F6. During the export operation invoked from a menu I only want the
> children of export statements rendered, not my main model, which is an
> assembly view. So it's a bit more than just annotation.
>
> Currently I achieve exactly what I want with echo and Python but other
> people what to have it native to OpenScad.
>
> On 14 January 2016 at 04:55, Marius Kintel <marius at kintel.net> wrote:
>
>> Hi all,
>>
>> I?m a bit late to the discussion, but I?d like to make some observations
>> and suggestions based on the contributions so far:
>>
>> Syntax aside, it sounds to me like the red thread in this discussion is
>> the ability to ?tag? nodes or sub-trees in an OpenSCAD design with certain
>> information, which can later be used to perform operations _after_ we?ve
>> successfully built what we usually call a CSG tree (a tree of CSG operators
>> on concrete geometries).
>>
>> Operations discussed here include: Various forms of rendering (incl.
>> color/material selection and rendering modifiers), export to various file
>> formats, text output/echo for BOM purposes, annotations for export purposes
>> (incl. layer specification), select/ignore modifiers, persistent caching.
>>
>> What if we implemented general purpose annotation functionality for
>> attaching a name=value dictionary (or smth. similar) to any OpenSCAD CSG
>> tree node? Various built-in functions (as mentioned above) could then use
>> these annotations while traversing the tree, by querying pre-defined
>> annotations.
>> By making it general purpose, we could theoretically, at a later stage,
>> add some sort of API to query these annotations to allow other software (or
>> plugins) to extend the functionality of OpenSCAD.
>>
>> To implement this within the current syntax, we could (as suggested
>> earlier) implement modules serving only tagging purposes.
>> One example would be (to use an example from the previous email from
>> Doug): component(?name?) someSubTree();
>> This has the benefit of keeping the user-facing syntax simple.
>> A more general approach could be annotation(component=?name?)
>> someSubTree();
>> The 'component(?name?)? syntax could simply be a shortcut for the full
>> annotation syntax. OpenSCAD2 would also allow us to attach any plain old
>> data structure to a node, or even programmatically define annotations.
>>
>> For this to be successful, we should not create group nodes for such
>> annotations, but accumulate them into a dict attached to the child node.
>> One interesting note: If we do this properly, we could probably rewrite
>> both color() and the 4 modifier characters to the new annotation scheme.
>>
>> There might be namespace clashes. One earlier suggestion (by Torsten I
>> believe) was to use a special character ?@? for annotation shortcuts.
>> Torsten also pointed out that this could be generalized further into
>> annotating module definitions for customization, documentation and
>> auto-complete purposes.
>>
>> ok, this was a bit longer than anticipated.
>> I also apologize in advance for being late for the next discussion. Too
>> many emails?
>>
>>  -Marius
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160114/1f8ba900/attachment.html>

From bioinformatics at gringene.org  Thu Jan 14 12:13:59 2016
From: bioinformatics at gringene.org (David Eccles (gringer))
Date: Fri, 15 Jan 2016 06:13:59 +1300
Subject: [OpenSCAD] Subject: Re:  Volume and Center of mass
In-Reply-To: <mailman.7.1452790805.23670.discuss_lists.openscad.org@lists.openscad.org>
References: <mailman.7.1452790805.23670.discuss_lists.openscad.org@lists.openscad.org>
Message-ID: <5697D757.5050405@gringene.org>

Is there any chance that a variable can be added to probe that contains
the vertexes of its first child (if not already there)?

That would allow me to manipulate arbitrary 2D objects (or possibly
even 3D objects) with unpredictable geometry (e.g. snowflakes, letters)
using native OpenSCAD code, which would be nice.

- D


From marius at kintel.net  Thu Jan 14 12:23:25 2016
From: marius at kintel.net (Marius Kintel)
Date: Thu, 14 Jan 2016 12:23:25 -0500
Subject: [OpenSCAD] export() function.
In-Reply-To: <CAEEmnrMgeC+_QHrM0wcq2AAkjbKFxK5vdnSv5oRuaukuASysog@mail.gmail.com>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com>
	<5689C0AA.2010206@gmx.de> <1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <5690E9D6.7090504@jonbondy.com>
	<5690FF46.90301@gmail.com> <20160109130106.63696b0a@cygnus>
	<05186620-8678-49D1-A600-B8CDEA5F2143@gmail.com>
	<CAPmXz3U5s6JzG0LUDhKMUnTVXBSKEM4ERsXybH1etS58Q8iyPQ@mail.gmail.com>
	<CAEEmnrMp2LRLL+D-AzhrGF-KqU2mR06jVz4ehk-=mmcm37KRrg@mail.gmail.com>
	<569285F0.8080706@gmx.de>
	<CAEEmnrNi+aFFHDpMCHgt0w5Au2CFSUhmR+8AzOwpm3sAOGDzkg@mail.gmail.com>
	<56929395.50105@gmx.de>
	<CAEEmnrMewzFKgffJ3VU22Zz7cBGTxHsh13vjUJ0CQkZSQXgi_g@mail.gmail.com>
	<CAGV6i+O9sgCNyaiOJenQBUiB-o0FyaK-Noq8r3WkyjO-cxExCw@mail.gmail.com>
	<D7D0BDAD-9127-49C7-8EB5-EF4908F91633@kintel.net>
	<CAEEmnrMgeC+_QHrM0wcq2AAkjbKFxK5vdnSv5oRuaukuASysog@mail.gmail.com>
Message-ID: <0DD0A662-FDA5-4FC1-9086-3A5BC1B51B0C@kintel.net>

What if someone else wants to export _and_ show, or export and _only_ show in the preview?

-> hiding from view and export could be orthogonal concepts, e.g.:
*component(?name?) someObject(); // Hide and tag for export

..then add a menu entry File->Export Components

Dealing with preview vs. render differences is yet another topic. The original idea was that preview should be as accurate as possible to the rendering, but this has diverged a bit (2D objects, color support) due to weaknesses in the preview and render modes.
Perhaps what we need is a different rendering mode (assembly)?

 -Marius

> On Jan 14, 2016, at 03:36 AM, nop head <nop.head at gmail.com> wrote:
> 
> Annotations would be nice but the problem is I don't want to export the model I see in F5. In that model my printed parts are not oriented for printing and may not have additional support structures added. This is why I want an export function that doesn't render its children during F5 and F6. During the export operation invoked from a menu I only want the children of export statements rendered, not my main model, which is an assembly view. So it's a bit more than just annotation.
> 
> Currently I achieve exactly what I want with echo and Python but other people what to have it native to OpenScad. 



From johnmdanskin at gmail.com  Thu Jan 14 12:33:58 2016
From: johnmdanskin at gmail.com (John Danskin)
Date: Thu, 14 Jan 2016 12:33:58 -0500
Subject: [OpenSCAD] debug print in openscad functions
Message-ID: <CAAawR6V75i5B15QLFn_j=9srufTP1u+Q0ho48v-cbnLKKh4ing@mail.gmail.com>

I just discovered that you can do this.

function debugprint(s) = search(s, []);
function f(x) = [debugprint(str("f(", x, ")")), 2 * x][1];
t = f(3);

And get this output:

WARNING: search term not found: "f"

WARNING: search term not found: "("

WARNING: search term not found: "3"

WARNING: search term not found: ")"

ECHO: t = 6


Which is hacky but way better than a poke in the eye with a sharp stick if
you are desperately trying to debug something. I still wish there was a
function with an echo side-effect. It could return undef. If I can already
use search for this, the functionality is in there somewhere.


Anyway, hope this technique helps someone.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160114/3359eeb2/attachment.html>

From nop.head at gmail.com  Thu Jan 14 13:04:31 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 14 Jan 2016 18:04:31 +0000
Subject: [OpenSCAD] export() function.
In-Reply-To: <0DD0A662-FDA5-4FC1-9086-3A5BC1B51B0C@kintel.net>
References: <1451811057510-15428.post@n5.nabble.com>
	<1451858353053-15448.post@n5.nabble.com>
	<20160103221033.64758d3e@www.etchedpixels.co.uk>
	<1451867440947-15455.post@n5.nabble.com> <5689C0AA.2010206@gmx.de>
	<1451943065250-15484.post@n5.nabble.com>
	<CAGV6i+M_Xz0FGqGfrzXJAgiDer_5nvsRGNUD5jRwUVBWVKA4kw@mail.gmail.com>
	<CAPmXz3VeVgy+KfPV5fz9sBgYL3DaQ503tPSjmgN4iLdzZptcLw@mail.gmail.com>
	<568FF4F3.40407@gmx.de>
	<CAGV6i+PtNt-+8PxssH5JWo=0+ka0tME93D9or-XEx2MA=d247A@mail.gmail.com>
	<CAPmXz3XBNAjBcDEZJ4D5UnA5POX=F0h_mhk=F9XZPb9nNhPa0A@mail.gmail.com>
	<569077A8.2050507@gmail.com> <5690E9D6.7090504@jonbondy.com>
	<5690FF46.90301@gmail.com> <20160109130106.63696b0a@cygnus>
	<05186620-8678-49D1-A600-B8CDEA5F2143@gmail.com>
	<CAPmXz3U5s6JzG0LUDhKMUnTVXBSKEM4ERsXybH1etS58Q8iyPQ@mail.gmail.com>
	<CAEEmnrMp2LRLL+D-AzhrGF-KqU2mR06jVz4ehk-=mmcm37KRrg@mail.gmail.com>
	<569285F0.8080706@gmx.de>
	<CAEEmnrNi+aFFHDpMCHgt0w5Au2CFSUhmR+8AzOwpm3sAOGDzkg@mail.gmail.com>
	<56929395.50105@gmx.de>
	<CAEEmnrMewzFKgffJ3VU22Zz7cBGTxHsh13vjUJ0CQkZSQXgi_g@mail.gmail.com>
	<CAGV6i+O9sgCNyaiOJenQBUiB-o0FyaK-Noq8r3WkyjO-cxExCw@mail.gmail.com>
	<D7D0BDAD-9127-49C7-8EB5-EF4908F91633@kintel.net>
	<CAEEmnrMgeC+_QHrM0wcq2AAkjbKFxK5vdnSv5oRuaukuASysog@mail.gmail.com>
	<0DD0A662-FDA5-4FC1-9086-3A5BC1B51B0C@kintel.net>
Message-ID: <CAEEmnrMDVn6CTjq7n7ebGm5HBOAG_Tx+v5i9ZM8UGRozG0EoFw@mail.gmail.com>

If F7 "show assembly" just set $assembly and did F5 that would be fine with
me. That would be better than the proposed $render variable as one could
then do both F5 and F6 on the non-assembly view, which is the parts laid
out for printing in my use and it would still prevent accidentally pressing
F6 with an assembly view selected. From the command line one could set it
with -D to get a PNG of the assembly view.

On 14 January 2016 at 17:23, Marius Kintel <marius at kintel.net> wrote:

> What if someone else wants to export _and_ show, or export and _only_ show
> in the preview?
>
> -> hiding from view and export could be orthogonal concepts, e.g.:
> *component(?name?) someObject(); // Hide and tag for export
>
> ..then add a menu entry File->Export Components
>
> Dealing with preview vs. render differences is yet another topic. The
> original idea was that preview should be as accurate as possible to the
> rendering, but this has diverged a bit (2D objects, color support) due to
> weaknesses in the preview and render modes.
> Perhaps what we need is a different rendering mode (assembly)?
>
>  -Marius
>
> > On Jan 14, 2016, at 03:36 AM, nop head <nop.head at gmail.com> wrote:
> >
> > Annotations would be nice but the problem is I don't want to export the
> model I see in F5. In that model my printed parts are not oriented for
> printing and may not have additional support structures added. This is why
> I want an export function that doesn't render its children during F5 and
> F6. During the export operation invoked from a menu I only want the
> children of export statements rendered, not my main model, which is an
> assembly view. So it's a bit more than just annotation.
> >
> > Currently I achieve exactly what I want with echo and Python but other
> people what to have it native to OpenScad.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160114/6e275cb5/attachment.html>

From oz.at.michael at gmail.com  Thu Jan 14 17:19:05 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 14 Jan 2016 15:19:05 -0700 (MST)
Subject: [OpenSCAD] debug print in openscad functions
In-Reply-To: <CAAawR6V75i5B15QLFn_j=9srufTP1u+Q0ho48v-cbnLKKh4ing@mail.gmail.com>
References: <CAAawR6V75i5B15QLFn_j=9srufTP1u+Q0ho48v-cbnLKKh4ing@mail.gmail.com>
Message-ID: <1452809945793-15685.post@n5.nabble.com>

Thanks. Nice use of a "side-effect" which I thought we didn't allow?
Seems to be the main argument against  echof()
<https://github.com/openscad/openscad/issues/741>  



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/debug-print-in-openscad-functions-tp15683p15685.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Jan 14 19:32:11 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 14 Jan 2016 17:32:11 -0700 (MST)
Subject: [OpenSCAD] Newbie question/problem....
In-Reply-To: <1452816264313-15687.post@n5.nabble.com>
References: <1452816264313-15687.post@n5.nabble.com>
Message-ID: <1452817931131-15688.post@n5.nabble.com>

macdarren wrote
> I was pleased to see the recent updates include provisions for placing
> text in models.
> I never loved any of the packages I used in the past so I am hopeful the
> built in features will get me,
> what I am looking for, however so far I haven't had any luck figuring it
> out.
> 
> I can place text that is no problem.
> What I can't seem to do is generate text which is what I think I need to
> do.
> 
> I make multiple piece models sometimes there are many iterations over a
> short time frame.
> Often the individual parts change very little, however they are often NOT
> interchangeable.
> These parts are printed or milled over time and assembled.
> 
> What I want to do is generate a serial/revision number (that I don't have
> to set manually)
> each time I build a final STL, I want that number placed on the individual
> parts so that they can be
> latter assembled and I can know which parts go together to form a single
> unit.
> 
> What I do now is set a constant at the top of the file(s) like "A" or "B"
> then use text functions
> to place that on each of the model components in a area that doesn't
> affect them or their assembly.
> 
> This does work but not when I forget to update the rev number, I want this
> to be automated.  I don't care
> if there are lots of unused rev IDs, say from each time I generate a file
> but then decide to update it again before I commit them to the printer or
> mill.
> 
> I have considered trying random number generation but that really doesn't
> assure unique IDs
> 
> If there were some way to read and write to a file each time the STL is
> built I could use that, or if I could
> generate a time stamp that I could embed (though that could be too large
> to place on my parts)
> Maybe some sort of hashing where I could use the current time to pull an
> entry from a table but I just need that unique time or number first.
> 
> Can I do this?  If not is there maybe a better way that I am just not
> thinking about to somehow identify
> actual parts as opposed to the file that was used to make them which of
> course is time stamped.
> 
> 
> Thanks
> Darren

Hi Darren,
Welcome to the forum. Your post is still flagged as "This post has NOT been
accepted by the mailing list yet", so nobody gets it unless they look. 
You need to subscribe to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.

Re your issue:

If your stuff is complex you could consider  command line use
<https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Using_OpenSCAD_in_a_command_line_environment>  
and use make.
You could use an include<> file, have the version number variable there,
updated each time you build.

It doesn't make sense to have a GUI feature for something like this, but
with Auto-reload-and-preview, if you have some external script (say on a
desktop icon) which increments the include<> file variable, it would auto
preview any open instances. You would need to render/export.

There are others here who do command-line stuff who may have other ideas.






-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Newbie-question-problem-tp15687p15688.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From macdarren at mac.com  Thu Jan 14 19:48:39 2016
From: macdarren at mac.com (macdarren)
Date: Thu, 14 Jan 2016 17:48:39 -0700 (MST)
Subject: [OpenSCAD] Newbie question/problem....
In-Reply-To: <1452817931131-15688.post@n5.nabble.com>
References: <1452816264313-15687.post@n5.nabble.com>
	<1452817931131-15688.post@n5.nabble.com>
Message-ID: <1452818919361-15689.post@n5.nabble.com>

Thanks for the response...I thought I had gotten the mailing list set, by
sending the subscribe and visiting the web site that was in the reply.  I
resubscribed and this time replied to the email and then got a confirmation
so now I think I am good...not sure if I should repost my message.


At any rate....maybe I don't need a 'GUI' feature as just a simple way to
get the current date/time with a function like 'time()' similar to 'rands()' 
I could then use this to generate my serial/rev number.
Not as elegant as something sequential but useable.

I will look into the command line idea...

Darren




--
View this message in context: http://forum.openscad.org/Newbie-question-problem-tp15687p15689.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Jan 14 19:54:42 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 14 Jan 2016 17:54:42 -0700 (MST)
Subject: [OpenSCAD] Newbie question/problem....
In-Reply-To: <1452818919361-15689.post@n5.nabble.com>
References: <1452816264313-15687.post@n5.nabble.com>
	<1452817931131-15688.post@n5.nabble.com>
	<1452818919361-15689.post@n5.nabble.com>
Message-ID: <1452819282461-15690.post@n5.nabble.com>

https://github.com/openscad/openscad/issues/380



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Newbie-question-problem-tp15687p15690.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Jan 14 21:25:10 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 14 Jan 2016 19:25:10 -0700 (MST)
Subject: [OpenSCAD] export() function.
In-Reply-To: <CAEEmnrMDVn6CTjq7n7ebGm5HBOAG_Tx+v5i9ZM8UGRozG0EoFw@mail.gmail.com>
References: <CAEEmnrMp2LRLL+D-AzhrGF-KqU2mR06jVz4ehk-=mmcm37KRrg@mail.gmail.com>
	<569285F0.8080706@gmx.de>
	<CAEEmnrNi+aFFHDpMCHgt0w5Au2CFSUhmR+8AzOwpm3sAOGDzkg@mail.gmail.com>
	<56929395.50105@gmx.de>
	<CAEEmnrMewzFKgffJ3VU22Zz7cBGTxHsh13vjUJ0CQkZSQXgi_g@mail.gmail.com>
	<CAGV6i+O9sgCNyaiOJenQBUiB-o0FyaK-Noq8r3WkyjO-cxExCw@mail.gmail.com>
	<D7D0BDAD-9127-49C7-8EB5-EF4908F91633@kintel.net>
	<CAEEmnrMgeC+_QHrM0wcq2AAkjbKFxK5vdnSv5oRuaukuASysog@mail.gmail.com>
	<0DD0A662-FDA5-4FC1-9086-3A5BC1B51B0C@kintel.net>
	<CAEEmnrMDVn6CTjq7n7ebGm5HBOAG_Tx+v5i9ZM8UGRozG0EoFw@mail.gmail.com>
Message-ID: <1452824710132-15691.post@n5.nabble.com>

nophead wrote
> If F7 "show assembly" just set $assembly and did F5 that would be fine
> with
> me. That would be better than the proposed $render variable as one could
> then do both F5 and F6 on the non-assembly view, which is the parts laid
> out for printing in my use and it would still prevent accidentally
> pressing
> F6 with an assembly view selected. From the command line one could set it
> with -D to get a PNG of the assembly view.

It would still need $render to do what some want, such as different $fn for
F5/F6.




-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/export-function-tp15428p15691.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Jan 14 22:00:27 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 14 Jan 2016 20:00:27 -0700 (MST)
Subject: [OpenSCAD] Void set operations issue
In-Reply-To: <1452815011334-15686.post@n5.nabble.com>
References: <1452815011334-15686.post@n5.nabble.com>
Message-ID: <1452826827460-15692.post@n5.nabble.com>

Looks like it is fixed in 2015.03-2

BTW, Your post is still flagged as "This post has NOT been accepted by the
mailing list yet", so nobody gets it unless they look. 
You need to subscribe to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.




-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Void-set-operations-issue-tp15686p15692.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Jan 14 22:04:55 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 14 Jan 2016 20:04:55 -0700 (MST)
Subject: [OpenSCAD] Inaccurate rotates
In-Reply-To: <CAEEmnrPfHVhLtugoR2qpdkPjXujLk9aXF=DOYrAzhBBaad-6pw@mail.gmail.com>
References: <CAEEmnrPfHVhLtugoR2qpdkPjXujLk9aXF=DOYrAzhBBaad-6pw@mail.gmail.com>
Message-ID: <1452827095883-15693.post@n5.nabble.com>

nophead wrote
> Giles used accurate at 90 versions of sin and cos but I think the sin and
> cos functions in OpenScad got fixed to be accurate for 90, 45, 30 and 60.
> The problem is they aren't used in rotate, they only seem to be used in
> user code. So now we have not only multiple vertex representations but
> also
> two versions of the trig functions. Nothing is going to line up exactly.
> 
> If I replace rotate globally then obviously all my files change a little
> bit. Are there any down sides to this? Are user space expressions stored
> as
> floats or doubles?

Perhaps OpenSCAD should use them everywhere?



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Inaccurate-rotates-tp15537p15693.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Jan 14 22:13:03 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 14 Jan 2016 20:13:03 -0700 (MST)
Subject: [OpenSCAD] Non-deterministic STLs
In-Reply-To: <CAEEmnrNQfOaN067f7uA25HtUspp9J2qgtasL5LDk70cRUHKu0w@mail.gmail.com>
References: <CAEEmnrNQfOaN067f7uA25HtUspp9J2qgtasL5LDk70cRUHKu0w@mail.gmail.com>
Message-ID: <1452827583567-15694.post@n5.nabble.com>

nophead wrote
> However, it also changed an STL file that does not use
> it. It includes the module but does not invoke it.
> 
> The change is numerically insignificant but it makes very difficult and
> time consuming to work out what has really changed. Only two vertices
> changed out of a file nearly 1MB long.
> 
> Is it possible that having the vertices ordered by address (which can
> change from machine to machine and when anything is added to or removed
> from the source code) can lead to different numerical results due them
> being processed in a different order somewhere?

Was the old STL done with the same OpenSCAD version?
Doesn't sound good for geometry to change where a changed module is not
invoked.
I still have a feeling there is a ghost in the machine since 2015.03... 




-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Non-deterministic-STLs-tp15513p15694.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu Jan 14 23:46:14 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 14 Jan 2016 21:46:14 -0700 (MST)
Subject: [OpenSCAD] Non-deterministic STLs
In-Reply-To: <1452827583567-15694.post@n5.nabble.com>
References: <CAEEmnrNQfOaN067f7uA25HtUspp9J2qgtasL5LDk70cRUHKu0w@mail.gmail.com>
	<1452827583567-15694.post@n5.nabble.com>
Message-ID: <1452833174910-15695.post@n5.nabble.com>

"NaN.000000000000013" <http://xkcd.com/1537/>   ;)



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Non-deterministic-STLs-tp15513p15695.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Fri Jan 15 03:07:05 2016
From: nop.head at gmail.com (nop head)
Date: Fri, 15 Jan 2016 08:07:05 +0000
Subject: [OpenSCAD] Inaccurate rotates
In-Reply-To: <1452827095883-15693.post@n5.nabble.com>
References: <CAEEmnrPfHVhLtugoR2qpdkPjXujLk9aXF=DOYrAzhBBaad-6pw@mail.gmail.com>
	<1452827095883-15693.post@n5.nabble.com>
Message-ID: <CAEEmnrPMePUBUtPCN_MiGwz_4Af8pcaMpOjt5_G6eBjCZvfDmQ@mail.gmail.com>

Yes everywhere it uses trig to generate vertices. Looking at the code it
seems to be rotate, rotate_extrude, generating circles, cylinders and
spheres, clipper offsetting and dxf import and dxf dims.

On 15 January 2016 at 03:04, MichaelAtOz <oz.at.michael at gmail.com> wrote:

> nophead wrote
> > Giles used accurate at 90 versions of sin and cos but I think the sin and
> > cos functions in OpenScad got fixed to be accurate for 90, 45, 30 and 60.
> > The problem is they aren't used in rotate, they only seem to be used in
> > user code. So now we have not only multiple vertex representations but
> > also
> > two versions of the trig functions. Nothing is going to line up exactly.
> >
> > If I replace rotate globally then obviously all my files change a little
> > bit. Are there any down sides to this? Are user space expressions stored
> > as
> > floats or doubles?
>
> Perhaps OpenSCAD should use them everywhere?
>
>
>
> -----
> Newly minted Admin - PM me if you need anything, or if I've done something
> stupid...
>
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; to the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work. Obviously
> inclusion of works of previous authors is not included in the above.
>
> The TPP is no simple ?trade agreement.?   Fight it!
> http://www.ourfairdeal.org/   time is running out!
> --
> View this message in context:
> http://forum.openscad.org/Inaccurate-rotates-tp15537p15693.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160115/5e7c9e0b/attachment.html>

From nop.head at gmail.com  Fri Jan 15 03:47:31 2016
From: nop.head at gmail.com (nop head)
Date: Fri, 15 Jan 2016 08:47:31 +0000
Subject: [OpenSCAD] debug print in openscad functions
In-Reply-To: <1452809945793-15685.post@n5.nabble.com>
References: <CAAawR6V75i5B15QLFn_j=9srufTP1u+Q0ho48v-cbnLKKh4ing@mail.gmail.com>
	<1452809945793-15685.post@n5.nabble.com>
Message-ID: <CAEEmnrMUs+CQubqy3Gv6n9bzxkxpQ+0obROegSYZJY5L_byGWA@mail.gmail.com>

If you accept that functions can return a debug string as well as a value
then it is no longer a side effect. If you cache the value of the function
for optimisation then you also have to cache the string and emit it
whenever you use the cached value. The same with echo in modules and
geometry.

On 14 January 2016 at 22:19, MichaelAtOz <oz.at.michael at gmail.com> wrote:

> Thanks. Nice use of a "side-effect" which I thought we didn't allow?
> Seems to be the main argument against  echof()
> <https://github.com/openscad/openscad/issues/741>
>
>
>
> -----
> Newly minted Admin - PM me if you need anything, or if I've done something
> stupid...
>
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; to the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work. Obviously
> inclusion of works of previous authors is not included in the above.
>
> The TPP is no simple ?trade agreement.?   Fight it!
> http://www.ourfairdeal.org/   time is running out!
> --
> View this message in context:
> http://forum.openscad.org/debug-print-in-openscad-functions-tp15683p15685.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160115/a4cf2412/attachment.html>

From nop.head at gmail.com  Fri Jan 15 03:55:43 2016
From: nop.head at gmail.com (nop head)
Date: Fri, 15 Jan 2016 08:55:43 +0000
Subject: [OpenSCAD] Non-deterministic STLs
In-Reply-To: <1452833174910-15695.post@n5.nabble.com>
References: <CAEEmnrNQfOaN067f7uA25HtUspp9J2qgtasL5LDk70cRUHKu0w@mail.gmail.com>
	<1452827583567-15694.post@n5.nabble.com>
	<1452833174910-15695.post@n5.nabble.com>
Message-ID: <CAEEmnrOJ1dtcP7G5R36hAyxy_xv4DCnOzTKQM35TaBijpbmZmg@mail.gmail.com>

>Was the old STL done with the same OpenSCAD version?
Yes the same 32 bit binary but running on 32 bit XP on a core due as
opposed to 64 bit Win7 on a core I5.

>Doesn't sound good for geometry to change where a changed module is not
invoked.
I am not sure that is the case, I may have been mistaken or it is a very
rare occurrence.

On 15 January 2016 at 04:46, MichaelAtOz <oz.at.michael at gmail.com> wrote:

> "NaN.000000000000013" <http://xkcd.com/1537/>   ;)
>
>
>
> -----
> Newly minted Admin - PM me if you need anything, or if I've done something
> stupid...
>
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; to the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work. Obviously
> inclusion of works of previous authors is not included in the above.
>
> The TPP is no simple ?trade agreement.?   Fight it!
> http://www.ourfairdeal.org/   time is running out!
> --
> View this message in context:
> http://forum.openscad.org/Non-deterministic-STLs-tp15513p15695.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160115/784dd255/attachment.html>

From nop.head at gmail.com  Fri Jan 15 04:06:12 2016
From: nop.head at gmail.com (nop head)
Date: Fri, 15 Jan 2016 09:06:12 +0000
Subject: [OpenSCAD] export() function.
In-Reply-To: <1452824710132-15691.post@n5.nabble.com>
References: <CAEEmnrMp2LRLL+D-AzhrGF-KqU2mR06jVz4ehk-=mmcm37KRrg@mail.gmail.com>
	<569285F0.8080706@gmx.de>
	<CAEEmnrNi+aFFHDpMCHgt0w5Au2CFSUhmR+8AzOwpm3sAOGDzkg@mail.gmail.com>
	<56929395.50105@gmx.de>
	<CAEEmnrMewzFKgffJ3VU22Zz7cBGTxHsh13vjUJ0CQkZSQXgi_g@mail.gmail.com>
	<CAGV6i+O9sgCNyaiOJenQBUiB-o0FyaK-Noq8r3WkyjO-cxExCw@mail.gmail.com>
	<D7D0BDAD-9127-49C7-8EB5-EF4908F91633@kintel.net>
	<CAEEmnrMgeC+_QHrM0wcq2AAkjbKFxK5vdnSv5oRuaukuASysog@mail.gmail.com>
	<0DD0A662-FDA5-4FC1-9086-3A5BC1B51B0C@kintel.net>
	<CAEEmnrMDVn6CTjq7n7ebGm5HBOAG_Tx+v5i9ZM8UGRozG0EoFw@mail.gmail.com>
	<1452824710132-15691.post@n5.nabble.com>
Message-ID: <CAEEmnrMx=4jSfbOR0BCBjQh94YdjpUSPrbO1PRPc8sJe_Qp+1A@mail.gmail.com>

So F7 $assembly = true, $render = false,  do preview.
     F6 $assembly = false, $render = true, do render.
     F5 $assembly = false, $render = false ,do preview.
     F4 $assembly unchanged, $render = false do, preview.


On 15 January 2016 at 02:25, MichaelAtOz <oz.at.michael at gmail.com> wrote:

> nophead wrote
> > If F7 "show assembly" just set $assembly and did F5 that would be fine
> > with
> > me. That would be better than the proposed $render variable as one could
> > then do both F5 and F6 on the non-assembly view, which is the parts laid
> > out for printing in my use and it would still prevent accidentally
> > pressing
> > F6 with an assembly view selected. From the command line one could set it
> > with -D to get a PNG of the assembly view.
>
> It would still need $render to do what some want, such as different $fn for
> F5/F6.
>
>
>
>
> -----
> Newly minted Admin - PM me if you need anything, or if I've done something
> stupid...
>
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; to the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work. Obviously
> inclusion of works of previous authors is not included in the above.
>
> The TPP is no simple ?trade agreement.?   Fight it!
> http://www.ourfairdeal.org/   time is running out!
> --
> View this message in context:
> http://forum.openscad.org/export-function-tp15428p15691.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160115/198109e9/attachment.html>

From rl.ward at bigpond.com  Fri Jan 15 06:27:46 2016
From: rl.ward at bigpond.com (Rob Ward)
Date: Fri, 15 Jan 2016 22:27:46 +1100
Subject: [OpenSCAD] export() function.
In-Reply-To: <CAEEmnrMx=4jSfbOR0BCBjQh94YdjpUSPrbO1PRPc8sJe_Qp+1A@mail.gmail.com>
References: <CAEEmnrMp2LRLL+D-AzhrGF-KqU2mR06jVz4ehk-=mmcm37KRrg@mail.gmail.com>
	<569285F0.8080706@gmx.de>
	<CAEEmnrNi+aFFHDpMCHgt0w5Au2CFSUhmR+8AzOwpm3sAOGDzkg@mail.gmail.com>
	<56929395.50105@gmx.de>
	<CAEEmnrMewzFKgffJ3VU22Zz7cBGTxHsh13vjUJ0CQkZSQXgi_g@mail.gmail.com>
	<CAGV6i+O9sgCNyaiOJenQBUiB-o0FyaK-Noq8r3WkyjO-cxExCw@mail.gmail.com>
	<D7D0BDAD-9127-49C7-8EB5-EF4908F91633@kintel.net>
	<CAEEmnrMgeC+_QHrM0wcq2AAkjbKFxK5vdnSv5oRuaukuASysog@mail.gmail.com>
	<0DD0A662-FDA5-4FC1-9086-3A5BC1B51B0C@kintel.net>
	<CAEEmnrMDVn6CTjq7n7ebGm5HBOAG_Tx+v5i9ZM8UGRozG0EoFw@mail.gmail.com>
	<1452824710132-15691.post@n5.nabble.com>
	<CAEEmnrMx=4jSfbOR0BCBjQh94YdjpUSPrbO1PRPc8sJe_Qp+1A@mail.gmail.com>
Message-ID: <5698D7B2.9090608@bigpond.com>

Ah!
Rob

On 15/01/16 20:06, nop head wrote:
> So F7 $assembly = true, $render = false,  do preview.
>      F6 $assembly = false, $render = true, do render.
>      F5 $assembly = false, $render = false ,do preview.
>      F4 $assembly unchanged, $render = false do, preview.
>
>
> On 15 January 2016 at 02:25, MichaelAtOz <oz.at.michael at gmail.com 
> <mailto:oz.at.michael at gmail.com>> wrote:
>
>     nophead wrote
>     > If F7 "show assembly" just set $assembly and did F5 that would be fine
>     > with
>     > me. That would be better than the proposed $render variable as
>     one could
>     > then do both F5 and F6 on the non-assembly view, which is the
>     parts laid
>     > out for printing in my use and it would still prevent accidentally
>     > pressing
>     > F6 with an assembly view selected. From the command line one
>     could set it
>     > with -D to get a PNG of the assembly view.
>
>     It would still need $render to do what some want, such as
>     different $fn for
>     F5/F6.
>
>
>
>
>     -----
>     Newly minted Admin - PM me if you need anything, or if I've done
>     something stupid...
>
>     Unless specifically shown otherwise above, my contribution is in
>     the Public Domain; to the extent possible under law, I have waived
>     all copyright and related or neighbouring rights to this work.
>     Obviously inclusion of works of previous authors is not included
>     in the above.
>
>     The TPP is no simple ?trade agreement.?   Fight it!
>     http://www.ourfairdeal.org/   time is running out!
>     --
>     View this message in context:
>     http://forum.openscad.org/export-function-tp15428p15691.html
>     Sent from the OpenSCAD mailing list archive at Nabble.com.
>
>     _______________________________________________
>     OpenSCAD mailing list
>     Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
>     http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160115/44c9bccb/attachment.html>

From marius at kintel.net  Fri Jan 15 09:30:27 2016
From: marius at kintel.net (Marius Kintel)
Date: Fri, 15 Jan 2016 09:30:27 -0500
Subject: [OpenSCAD] Non-deterministic STLs
In-Reply-To: <CAEEmnrOJ1dtcP7G5R36hAyxy_xv4DCnOzTKQM35TaBijpbmZmg@mail.gmail.com>
References: <CAEEmnrNQfOaN067f7uA25HtUspp9J2qgtasL5LDk70cRUHKu0w@mail.gmail.com>
	<1452827583567-15694.post@n5.nabble.com>
	<1452833174910-15695.post@n5.nabble.com>
	<CAEEmnrOJ1dtcP7G5R36hAyxy_xv4DCnOzTKQM35TaBijpbmZmg@mail.gmail.com>
Message-ID: <4ADD1AD8-CD76-48DC-A3CB-76F98DF472CF@kintel.net>

> On Jan 15, 2016, at 03:55 AM, nop head <nop.head at gmail.com> wrote:
> 
> >Was the old STL done with the same OpenSCAD version?
> Yes the same 32 bit binary but running on 32 bit XP on a core due as opposed to 64 bit Win7 on a core I5.
> 
That would be on a different CPU, different OS and different C library implementation, all of which can influence floating point arithmetics as well as rounding.

If you really want 100% parity across CPUs, OSes and C libraries, I would start by investigating two things:
1) Rounding, see e.g. http://martinwguy.co.uk/crunch/test/tybor/tbin2dec.c
2) Floating point format used (e.g. 80 bit float extensions which has been discussed earlier)

Note that this will probably extend to the external libraries we use as well (CGAL, Eigen, libtess2, Clipper).

 -Marius



From nop.head at gmail.com  Fri Jan 15 11:05:08 2016
From: nop.head at gmail.com (nop head)
Date: Fri, 15 Jan 2016 16:05:08 +0000
Subject: [OpenSCAD] Non-deterministic STLs
In-Reply-To: <4ADD1AD8-CD76-48DC-A3CB-76F98DF472CF@kintel.net>
References: <CAEEmnrNQfOaN067f7uA25HtUspp9J2qgtasL5LDk70cRUHKu0w@mail.gmail.com>
	<1452827583567-15694.post@n5.nabble.com>
	<1452833174910-15695.post@n5.nabble.com>
	<CAEEmnrOJ1dtcP7G5R36hAyxy_xv4DCnOzTKQM35TaBijpbmZmg@mail.gmail.com>
	<4ADD1AD8-CD76-48DC-A3CB-76F98DF472CF@kintel.net>
Message-ID: <CAEEmnrOeiEg7UPBLPThVt6AJRHPydpVR=FFGs+UjyVD+Ht_fvw@mail.gmail.com>

tbin2dec.c prints the same on both computers when compiled for 32 bits with
GCC 4.9.2. It also prints the same when compiled for 64 bits on the 64 bit
OS.

Rounding is add 0.5 and truncate.
MIN_WIDTH=509.
Test ( Pass ) {}

On 15 January 2016 at 14:30, Marius Kintel <marius at kintel.net> wrote:

> > On Jan 15, 2016, at 03:55 AM, nop head <nop.head at gmail.com> wrote:
> >
> > >Was the old STL done with the same OpenSCAD version?
> > Yes the same 32 bit binary but running on 32 bit XP on a core due as
> opposed to 64 bit Win7 on a core I5.
> >
> That would be on a different CPU, different OS and different C library
> implementation, all of which can influence floating point arithmetics as
> well as rounding.
>
> If you really want 100% parity across CPUs, OSes and C libraries, I would
> start by investigating two things:
> 1) Rounding, see e.g. http://martinwguy.co.uk/crunch/test/tybor/tbin2dec.c
> 2) Floating point format used (e.g. 80 bit float extensions which has been
> discussed earlier)
>
> Note that this will probably extend to the external libraries we use as
> well (CGAL, Eigen, libtess2, Clipper).
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160115/4fb0d237/attachment.html>

From doug at moens.org  Fri Jan 15 11:17:28 2016
From: doug at moens.org (doug moen)
Date: Fri, 15 Jan 2016 11:17:28 -0500
Subject: [OpenSCAD] debug print in openscad functions
In-Reply-To: <CAEEmnrMUs+CQubqy3Gv6n9bzxkxpQ+0obROegSYZJY5L_byGWA@mail.gmail.com>
References: <CAAawR6V75i5B15QLFn_j=9srufTP1u+Q0ho48v-cbnLKKh4ing@mail.gmail.com>
	<1452809945793-15685.post@n5.nabble.com>
	<CAEEmnrMUs+CQubqy3Gv6n9bzxkxpQ+0obROegSYZJY5L_byGWA@mail.gmail.com>
Message-ID: <CAGV6i+NhmHDagmWokD-jaWsC-8YD7E4vDSV4JK9PuyFb_cFJQA@mail.gmail.com>

The "search" function is badly designed. It prints those warning messages
because
  search("large", [["large",42], ["medium",17], ["small",5]])
does not do what it should do.

We should deprecate "search" and replace it with something simpler and
better behaved. A lot of people who need this functionality have already
done this, by writing their own function. My preferred interface looks like
this:
  lookup(key, [[key1,value1], [key2,value2], ...])
returns the value associated with the key argument, or returns undef if
there is no match. Works with any type of key for which equality is
defined, including strings and lists.

There is nothing wrong with adding an "echof" function as an aid in
debugging functions. It's no worse than "echo". This is needed as a debug
feature, since OpenSCAD doesn't have proper debug facilities. But we should
be aiming higher, at providing a proper debugger UI in a future release. If
you could use a debugger to set "watchpoints" that print a trace message to
the console each time a particular expression is evaluated, then you could
debug a program without cluttering up the source code with echo statements.

OpenSCAD is a declarative language. Ideally, it has no side effects, and it
has no defined evaluation order, which gives the implementation maximum
flexibility to compile scripts into a form that execute quickly. For
example,

   - Suppose that an expensive-to-compute subexpression occurs inside a for
   loop, but doesn't depend on the iteration variable. An optimizing compiler
   can lift that subexpression outside of the loop, and only evaluate it once.
   - If the same subexpression occurs multiple times, the compiler can
   recognize this and arrange to only evaluate the expression once, caching
   the result for later use.
   - Declarative programs can be automatically parallelized, so that
   multiple cores are used to simultaneously evaluate different parts of the
   program.

Debugging tools expose the evaluation order. That's inevitable. A problem
with 'echo' and 'echof' is that they are part of the language, and users
might come to rely on a particular script producing echo output in a
particular order. I think we should make it clear that 'echo' is only a
debug feature, that there is no defined evaluation order, and that the
evaluation order can change across releases, or vary depending on the
hardware and operating system. With multi-core evaluation, the evaluation
order can change from one run to the next.

I know that people use 'echo' to generate a bill of materials. We should
provide a more declarative way to do this. In OpenSCAD2, I've provided a
mechanism for attaching user-defined metadata to geometric shapes, and I
also explain how to use this to generate a BOM declaratively, without using
echo.

Remember that in a declarative language, the evaluation order is something
internal to the implementation, it does not (should not) affect the final
result. Otherwise it's a bug. In OpenSCAD, the final result is usually the
geometry, but in the above example it's the BOM, if the BOM is defined
declaratively using metadata.


On 15 January 2016 at 03:47, nop head <nop.head at gmail.com> wrote:

> If you accept that functions can return a debug string as well as a value
> then it is no longer a side effect. If you cache the value of the function
> for optimisation then you also have to cache the string and emit it
> whenever you use the cached value. The same with echo in modules and
> geometry.
>
> On 14 January 2016 at 22:19, MichaelAtOz <oz.at.michael at gmail.com> wrote:
>
>> Thanks. Nice use of a "side-effect" which I thought we didn't allow?
>> Seems to be the main argument against  echof()
>> <https://github.com/openscad/openscad/issues/741>
>>
>>
>>
>> -----
>> Newly minted Admin - PM me if you need anything, or if I've done
>> something stupid...
>>
>> Unless specifically shown otherwise above, my contribution is in the
>> Public Domain; to the extent possible under law, I have waived all
>> copyright and related or neighbouring rights to this work. Obviously
>> inclusion of works of previous authors is not included in the above.
>>
>> The TPP is no simple ?trade agreement.?   Fight it!
>> http://www.ourfairdeal.org/   time is running out!
>> --
>> View this message in context:
>> http://forum.openscad.org/debug-print-in-openscad-functions-tp15683p15685.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160115/a30c86fc/attachment.html>

From nop.head at gmail.com  Fri Jan 15 12:05:15 2016
From: nop.head at gmail.com (nop head)
Date: Fri, 15 Jan 2016 17:05:15 +0000
Subject: [OpenSCAD] debug print in openscad functions
In-Reply-To: <CAGV6i+NhmHDagmWokD-jaWsC-8YD7E4vDSV4JK9PuyFb_cFJQA@mail.gmail.com>
References: <CAAawR6V75i5B15QLFn_j=9srufTP1u+Q0ho48v-cbnLKKh4ing@mail.gmail.com>
	<1452809945793-15685.post@n5.nabble.com>
	<CAEEmnrMUs+CQubqy3Gv6n9bzxkxpQ+0obROegSYZJY5L_byGWA@mail.gmail.com>
	<CAGV6i+NhmHDagmWokD-jaWsC-8YD7E4vDSV4JK9PuyFb_cFJQA@mail.gmail.com>
Message-ID: <CAEEmnrP3GeBLOVhqVYuPuwsx_qsZ50E3pdhi2dvhLpehLu3x9Q@mail.gmail.com>

Well actually I think echo is run while the CSG tree is being made from the
AST tree, which is a serial process and unlikely to be the bit paralleled
for speed, which would be evaluating the CSG tree to create geometry.

As I said before if you consider the console text as part of the result it
is no longer a side effect any more than creating geometry and rendering it
on the screen is. It doesn't create any side effect type problems like
mutable variables do because its effect is external to the program.

If any debug information needs to be output during the geometry creation it
isn't a problem either. Any parallel execution has to evaluate the children
of a node before it can use the results to do its operation. As long as the
text from echo is returned as part of the value of the child node instead
of being immediately printed the tree can be used to render it in the
console in the correct order. I.e. each node evaluates it children
(potentially in parallel) and returns the geometry to is parent. I can all
receive debug strings from its children, concatenate them and return them
to its parent. The text will still be in the same order regardless of
parallelism. Also any optimisation that caches geometry has to cache the
string as well.

Echo in expressions can be handled exactly the same way and produce
deterministic results despite parallelism and caching, just the same as the
expression value is deterministic.

If you can get a deterministic result from attaching metadata then you can
also make echo work as you can consider it a special case of metadata.



On 15 January 2016 at 16:17, doug moen <doug at moens.org> wrote:

> The "search" function is badly designed. It prints those warning messages
> because
>   search("large", [["large",42], ["medium",17], ["small",5]])
> does not do what it should do.
>
> We should deprecate "search" and replace it with something simpler and
> better behaved. A lot of people who need this functionality have already
> done this, by writing their own function. My preferred interface looks like
> this:
>   lookup(key, [[key1,value1], [key2,value2], ...])
> returns the value associated with the key argument, or returns undef if
> there is no match. Works with any type of key for which equality is
> defined, including strings and lists.
>
> There is nothing wrong with adding an "echof" function as an aid in
> debugging functions. It's no worse than "echo". This is needed as a debug
> feature, since OpenSCAD doesn't have proper debug facilities. But we should
> be aiming higher, at providing a proper debugger UI in a future release. If
> you could use a debugger to set "watchpoints" that print a trace message to
> the console each time a particular expression is evaluated, then you could
> debug a program without cluttering up the source code with echo statements.
>
> OpenSCAD is a declarative language. Ideally, it has no side effects, and
> it has no defined evaluation order, which gives the implementation maximum
> flexibility to compile scripts into a form that execute quickly. For
> example,
>
>    - Suppose that an expensive-to-compute subexpression occurs inside a
>    for loop, but doesn't depend on the iteration variable. An optimizing
>    compiler can lift that subexpression outside of the loop, and only evaluate
>    it once.
>    - If the same subexpression occurs multiple times, the compiler can
>    recognize this and arrange to only evaluate the expression once, caching
>    the result for later use.
>    - Declarative programs can be automatically parallelized, so that
>    multiple cores are used to simultaneously evaluate different parts of the
>    program.
>
> Debugging tools expose the evaluation order. That's inevitable. A problem
> with 'echo' and 'echof' is that they are part of the language, and users
> might come to rely on a particular script producing echo output in a
> particular order. I think we should make it clear that 'echo' is only a
> debug feature, that there is no defined evaluation order, and that the
> evaluation order can change across releases, or vary depending on the
> hardware and operating system. With multi-core evaluation, the evaluation
> order can change from one run to the next.
>
> I know that people use 'echo' to generate a bill of materials. We should
> provide a more declarative way to do this. In OpenSCAD2, I've provided a
> mechanism for attaching user-defined metadata to geometric shapes, and I
> also explain how to use this to generate a BOM declaratively, without using
> echo.
>
> Remember that in a declarative language, the evaluation order is something
> internal to the implementation, it does not (should not) affect the final
> result. Otherwise it's a bug. In OpenSCAD, the final result is usually the
> geometry, but in the above example it's the BOM, if the BOM is defined
> declaratively using metadata.
>
>
> On 15 January 2016 at 03:47, nop head <nop.head at gmail.com> wrote:
>
>> If you accept that functions can return a debug string as well as a value
>> then it is no longer a side effect. If you cache the value of the function
>> for optimisation then you also have to cache the string and emit it
>> whenever you use the cached value. The same with echo in modules and
>> geometry.
>>
>> On 14 January 2016 at 22:19, MichaelAtOz <oz.at.michael at gmail.com> wrote:
>>
>>> Thanks. Nice use of a "side-effect" which I thought we didn't allow?
>>> Seems to be the main argument against  echof()
>>> <https://github.com/openscad/openscad/issues/741>
>>>
>>>
>>>
>>> -----
>>> Newly minted Admin - PM me if you need anything, or if I've done
>>> something stupid...
>>>
>>> Unless specifically shown otherwise above, my contribution is in the
>>> Public Domain; to the extent possible under law, I have waived all
>>> copyright and related or neighbouring rights to this work. Obviously
>>> inclusion of works of previous authors is not included in the above.
>>>
>>> The TPP is no simple ?trade agreement.?   Fight it!
>>> http://www.ourfairdeal.org/   time is running out!
>>> --
>>> View this message in context:
>>> http://forum.openscad.org/debug-print-in-openscad-functions-tp15683p15685.html
>>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160115/5b7ccc50/attachment.html>

From andrew at plumb.org  Fri Jan 15 12:24:21 2016
From: andrew at plumb.org (clothbot)
Date: Fri, 15 Jan 2016 10:24:21 -0700 (MST)
Subject: [OpenSCAD] Reversed faces
In-Reply-To: <F1BC3736-C638-4D80-B5F0-063553F7C709@kintel.net>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<F1BC3736-C638-4D80-B5F0-063553F7C709@kintel.net>
Message-ID: <1452878661814-15706.post@n5.nabble.com>

kintel wrote
> Some related issues:
> 
> https://github.com/openscad/openscad/issues/348
> https://github.com/openscad/openscad/issues/1042
> https://github.com/openscad/openscad/issues/590
> 
> Two things:
> o We should rewrite our mesh class to support tests and operators like
> this. This would also be a good step towards repairing imported STLs which
> CGAL struggles with. We could also look at external libraries with good
> mesh classes.
> o Highlights of reversed faces in preview mode: It should be possible to
> simply turn this on.
> 
>  -Marius

Hi Marius,

Has anyone (re)visited the "Polygon Mesh Processing" features available in
latest CGAL?

http://doc.cgal.org/latest/Polygon_mesh_processing/index.html

There seem to be quite a few Useful Features built in now related to hole
filling, and related mesh repair and manifold-ness.

Andrew.




--
View this message in context: http://forum.openscad.org/Reversed-faces-tp15649p15706.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From johnmdanskin at gmail.com  Fri Jan 15 13:05:55 2016
From: johnmdanskin at gmail.com (johnmdanskin)
Date: Fri, 15 Jan 2016 11:05:55 -0700 (MST)
Subject: [OpenSCAD] debug print in openscad functions
In-Reply-To: <CAEEmnrP3GeBLOVhqVYuPuwsx_qsZ50E3pdhi2dvhLpehLu3x9Q@mail.gmail.com>
References: <CAAawR6V75i5B15QLFn_j=9srufTP1u+Q0ho48v-cbnLKKh4ing@mail.gmail.com>
	<1452809945793-15685.post@n5.nabble.com>
	<CAEEmnrMUs+CQubqy3Gv6n9bzxkxpQ+0obROegSYZJY5L_byGWA@mail.gmail.com>
	<CAGV6i+NhmHDagmWokD-jaWsC-8YD7E4vDSV4JK9PuyFb_cFJQA@mail.gmail.com>
	<CAEEmnrP3GeBLOVhqVYuPuwsx_qsZ50E3pdhi2dvhLpehLu3x9Q@mail.gmail.com>
Message-ID: <1452881155496-15707.post@n5.nabble.com>

I agree that the search function isn't ideal. The only use I can think of for
the current search function is to generate the side effect statements. A
user defined lookup function is only 3ish lines of code (wrote one last
night), so I don't really feel the lack.

As a person trying to debug functions, my most common problem, or at least
the only common problem I actually remember, is infinite recursion. Somehow
I make a mistake, the stupid thing won't stop, and all I get is "Recursion
Detected". If functions returned a debug string, that wouldn't help because
my problem is that the function never returns.  As someone who is just
looking for a freaking debugging clue, any theoretical non-determinism
wouldn't be nearly as irritating as not being able to debug.

I'd be really sad if we couldn't implement echof because really we should
have an IDE.  As a side point, an IDE would also expose execution order and
the presence or absence of caching.

About 100 years ago, I wrote a language that worked a lot like OpenSCAD. I
appreciate the functional issues. I admire the decisions that have been
made. In most ways, OpenSCAD is a thing of  beauty.

Echof is a side-effect, but it doesn't actually influence program execution.
Since it doesn't influence program execution, it shouldn't be a programming
model issue.




--
View this message in context: http://forum.openscad.org/debug-print-in-openscad-functions-tp15683p15707.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Fri Jan 15 13:15:04 2016
From: marius at kintel.net (Marius Kintel)
Date: Fri, 15 Jan 2016 13:15:04 -0500
Subject: [OpenSCAD] Reversed faces
In-Reply-To: <1452878661814-15706.post@n5.nabble.com>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<F1BC3736-C638-4D80-B5F0-063553F7C709@kintel.net>
	<1452878661814-15706.post@n5.nabble.com>
Message-ID: <4C24C846-427E-4984-9926-AEDAA75C7287@kintel.net>

On Jan 15, 2016, at 12:24 PM, clothbot <andrew at plumb.org> wrote:
> 
> 
> Has anyone (re)visited the "Polygon Mesh Processing" features available in
> latest CGAL?
> 
I haven?t looked into it yet. CGAL APIs scare me : /

 -Marius



From doug at moens.org  Fri Jan 15 14:21:59 2016
From: doug at moens.org (doug moen)
Date: Fri, 15 Jan 2016 14:21:59 -0500
Subject: [OpenSCAD] debug print in openscad functions
In-Reply-To: <CAEEmnrP3GeBLOVhqVYuPuwsx_qsZ50E3pdhi2dvhLpehLu3x9Q@mail.gmail.com>
References: <CAAawR6V75i5B15QLFn_j=9srufTP1u+Q0ho48v-cbnLKKh4ing@mail.gmail.com>
	<1452809945793-15685.post@n5.nabble.com>
	<CAEEmnrMUs+CQubqy3Gv6n9bzxkxpQ+0obROegSYZJY5L_byGWA@mail.gmail.com>
	<CAGV6i+NhmHDagmWokD-jaWsC-8YD7E4vDSV4JK9PuyFb_cFJQA@mail.gmail.com>
	<CAEEmnrP3GeBLOVhqVYuPuwsx_qsZ50E3pdhi2dvhLpehLu3x9Q@mail.gmail.com>
Message-ID: <CAGV6i+NrYHto_x7M=pJhWrWFYxKC0ffGtTWLAF+DFJjL_haEHQ@mail.gmail.com>

There's a design flaw in our geometry cache, which caches geometry across
different script evaluations. The problem is that CGAL messages which
appear the first time, do not appear during subsequent F5/F6 evaluations.
This is annoying and should be fixed. I agree that the fix will have to
involve caching the CGAL messages together with the cached geometry.

I consider this issue separate from the issue of making the script
evaluator run faster, using the standard techniques that are available to
declarative and functional languages. In the latter case, I am quite sure
that we don't want to prohibit the use of optimizations because somebody
might use echo to debug a script.

Yes, echo and echof produce side effects. Optimizations will often change
those side effects, even though the result is the same:

   - an optimization might avoid evaluating a module or expression multiple
   times, because the result is the same each time. This means the echo
   happens only once instead of multiple times.
   - an optimization can change the order of evaluation. This doesn't
   affect the result, but the echos will now occur in a different order.
   - an optimization can decide not to evaluate a function or module call,
   because the optimizer can prove that the result has no effect on the
   geometric output. This means the echo doesn't occur.

Echo is not the same thing as metadata. These optimizations apply equally
well to geometry nodes that contain metadata.

If we agree that caching evaluation results *across different script
evaluations* needs to be treated more carefully, then can we agree that it
is okay to use agressive performance optimizations *within* a single script
evaluation?

Nop Head said:
>Well actually I think echo is run while the CSG tree is being made from
the AST tree, which is a serial process and unlikely to be the bit
paralleled for speed, which would be evaluating the CSG tree to create
geometry.

Historically, it's true that OpenSCAD is designed to have a script
evaluation phase, which isn't performance critical, followed by a geometry
evaluation phase (currently using CGAL) which is very performance
sensitive. But if you look at how the language is being used now, and at
the pull request for 'probe', then that may no longer be an accurate way to
think about performance.

   1. OpenSCAD has poor support for creating curved surfaces, so we now
   have libraries that build curved surfaces using polyhedron(), such as the
   new spline library. This means we are now increasingly doing our geometry
   computations in the OpenSCAD scripting language, instead of in CGAL.
   2. There is a pull request for a 'probe' function, which performs a CGAL
   computation, then makes the results available to the function, expression
   and variable part of the scripting language. One request in that thread is
   to make the vertices and faces available, presumably so they can be
   transformed and fed back into polyhedron using the scripting language. This
   could greatly increase the extent to which CGAL and script evaluation are
   interleaved.

If the scripting language is being called upon to do the heavy lifting of
geometry evaluation, as an adjunct to CGAL, then yes maybe we will need to
consider parallel script evaluation.

On 15 January 2016 at 12:05, nop head <nop.head at gmail.com> wrote:

> Well actually I think echo is run while the CSG tree is being made from
> the AST tree, which is a serial process and unlikely to be the bit
> paralleled for speed, which would be evaluating the CSG tree to create
> geometry.
>
> As I said before if you consider the console text as part of the result it
> is no longer a side effect any more than creating geometry and rendering it
> on the screen is. It doesn't create any side effect type problems like
> mutable variables do because its effect is external to the program.
>
> If any debug information needs to be output during the geometry creation
> it isn't a problem either. Any parallel execution has to evaluate the
> children of a node before it can use the results to do its operation. As
> long as the text from echo is returned as part of the value of the child
> node instead of being immediately printed the tree can be used to render it
> in the console in the correct order. I.e. each node evaluates it children
> (potentially in parallel) and returns the geometry to is parent. I can all
> receive debug strings from its children, concatenate them and return them
> to its parent. The text will still be in the same order regardless of
> parallelism. Also any optimisation that caches geometry has to cache the
> string as well.
>
> Echo in expressions can be handled exactly the same way and produce
> deterministic results despite parallelism and caching, just the same as the
> expression value is deterministic.
>
> If you can get a deterministic result from attaching metadata then you can
> also make echo work as you can consider it a special case of metadata.
>
>
>
> On 15 January 2016 at 16:17, doug moen <doug at moens.org> wrote:
>
>> The "search" function is badly designed. It prints those warning messages
>> because
>>   search("large", [["large",42], ["medium",17], ["small",5]])
>> does not do what it should do.
>>
>> We should deprecate "search" and replace it with something simpler and
>> better behaved. A lot of people who need this functionality have already
>> done this, by writing their own function. My preferred interface looks like
>> this:
>>   lookup(key, [[key1,value1], [key2,value2], ...])
>> returns the value associated with the key argument, or returns undef if
>> there is no match. Works with any type of key for which equality is
>> defined, including strings and lists.
>>
>> There is nothing wrong with adding an "echof" function as an aid in
>> debugging functions. It's no worse than "echo". This is needed as a debug
>> feature, since OpenSCAD doesn't have proper debug facilities. But we should
>> be aiming higher, at providing a proper debugger UI in a future release. If
>> you could use a debugger to set "watchpoints" that print a trace message to
>> the console each time a particular expression is evaluated, then you could
>> debug a program without cluttering up the source code with echo statements.
>>
>> OpenSCAD is a declarative language. Ideally, it has no side effects, and
>> it has no defined evaluation order, which gives the implementation maximum
>> flexibility to compile scripts into a form that execute quickly. For
>> example,
>>
>>    - Suppose that an expensive-to-compute subexpression occurs inside a
>>    for loop, but doesn't depend on the iteration variable. An optimizing
>>    compiler can lift that subexpression outside of the loop, and only evaluate
>>    it once.
>>    - If the same subexpression occurs multiple times, the compiler can
>>    recognize this and arrange to only evaluate the expression once, caching
>>    the result for later use.
>>    - Declarative programs can be automatically parallelized, so that
>>    multiple cores are used to simultaneously evaluate different parts of the
>>    program.
>>
>> Debugging tools expose the evaluation order. That's inevitable. A problem
>> with 'echo' and 'echof' is that they are part of the language, and users
>> might come to rely on a particular script producing echo output in a
>> particular order. I think we should make it clear that 'echo' is only a
>> debug feature, that there is no defined evaluation order, and that the
>> evaluation order can change across releases, or vary depending on the
>> hardware and operating system. With multi-core evaluation, the evaluation
>> order can change from one run to the next.
>>
>> I know that people use 'echo' to generate a bill of materials. We should
>> provide a more declarative way to do this. In OpenSCAD2, I've provided a
>> mechanism for attaching user-defined metadata to geometric shapes, and I
>> also explain how to use this to generate a BOM declaratively, without using
>> echo.
>>
>> Remember that in a declarative language, the evaluation order is
>> something internal to the implementation, it does not (should not) affect
>> the final result. Otherwise it's a bug. In OpenSCAD, the final result is
>> usually the geometry, but in the above example it's the BOM, if the BOM is
>> defined declaratively using metadata.
>>
>>
>> On 15 January 2016 at 03:47, nop head <nop.head at gmail.com> wrote:
>>
>>> If you accept that functions can return a debug string as well as a
>>> value then it is no longer a side effect. If you cache the value of the
>>> function for optimisation then you also have to cache the string and emit
>>> it whenever you use the cached value. The same with echo in modules and
>>> geometry.
>>>
>>> On 14 January 2016 at 22:19, MichaelAtOz <oz.at.michael at gmail.com>
>>> wrote:
>>>
>>>> Thanks. Nice use of a "side-effect" which I thought we didn't allow?
>>>> Seems to be the main argument against  echof()
>>>> <https://github.com/openscad/openscad/issues/741>
>>>>
>>>>
>>>>
>>>> -----
>>>> Newly minted Admin - PM me if you need anything, or if I've done
>>>> something stupid...
>>>>
>>>> Unless specifically shown otherwise above, my contribution is in the
>>>> Public Domain; to the extent possible under law, I have waived all
>>>> copyright and related or neighbouring rights to this work. Obviously
>>>> inclusion of works of previous authors is not included in the above.
>>>>
>>>> The TPP is no simple ?trade agreement.?   Fight it!
>>>> http://www.ourfairdeal.org/   time is running out!
>>>> --
>>>> View this message in context:
>>>> http://forum.openscad.org/debug-print-in-openscad-functions-tp15683p15685.html
>>>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160115/5e35dcca/attachment.html>

From doug at moens.org  Fri Jan 15 14:40:22 2016
From: doug at moens.org (doug moen)
Date: Fri, 15 Jan 2016 14:40:22 -0500
Subject: [OpenSCAD] debug print in openscad functions
In-Reply-To: <1452881155496-15707.post@n5.nabble.com>
References: <CAAawR6V75i5B15QLFn_j=9srufTP1u+Q0ho48v-cbnLKKh4ing@mail.gmail.com>
	<1452809945793-15685.post@n5.nabble.com>
	<CAEEmnrMUs+CQubqy3Gv6n9bzxkxpQ+0obROegSYZJY5L_byGWA@mail.gmail.com>
	<CAGV6i+NhmHDagmWokD-jaWsC-8YD7E4vDSV4JK9PuyFb_cFJQA@mail.gmail.com>
	<CAEEmnrP3GeBLOVhqVYuPuwsx_qsZ50E3pdhi2dvhLpehLu3x9Q@mail.gmail.com>
	<1452881155496-15707.post@n5.nabble.com>
Message-ID: <CAGV6i+MoxzaBdmmTiAR3+EZSp7tNKGp5NDubwsNxJNe=ZEjW1w@mail.gmail.com>

Yes, I would like us to have echof.

But I want the easy-to-implement version of echof that outputs text to the
console as a side effect, and is used for debugging. With this version,
internal performance optimizations are fully visible via echof. If your
function isn't called at all, or called only once instead of several times,
due to a performance optimization, then you'll see this in the echof
output, and it will help you to understand what's going on during script
evaluation. This is particularly useful if you are debugging a performance
problem.

What I don't want is a denotational semantics for OpenSCAD where echof is
given a declarative semantics, and optimizations need to be suppressed when
echof is used. That increases the complexity of the implementation, and
decreases the utility of echof for debugging.

On 15 January 2016 at 13:05, johnmdanskin <johnmdanskin at gmail.com> wrote:

> I agree that the search function isn't ideal. The only use I can think of
> for
> the current search function is to generate the side effect statements. A
> user defined lookup function is only 3ish lines of code (wrote one last
> night), so I don't really feel the lack.
>
> As a person trying to debug functions, my most common problem, or at least
> the only common problem I actually remember, is infinite recursion. Somehow
> I make a mistake, the stupid thing won't stop, and all I get is "Recursion
> Detected". If functions returned a debug string, that wouldn't help because
> my problem is that the function never returns.  As someone who is just
> looking for a freaking debugging clue, any theoretical non-determinism
> wouldn't be nearly as irritating as not being able to debug.
>
> I'd be really sad if we couldn't implement echof because really we should
> have an IDE.  As a side point, an IDE would also expose execution order and
> the presence or absence of caching.
>
> About 100 years ago, I wrote a language that worked a lot like OpenSCAD. I
> appreciate the functional issues. I admire the decisions that have been
> made. In most ways, OpenSCAD is a thing of  beauty.
>
> Echof is a side-effect, but it doesn't actually influence program
> execution.
> Since it doesn't influence program execution, it shouldn't be a programming
> model issue.
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/debug-print-in-openscad-functions-tp15683p15707.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160115/0fc9eff8/attachment.html>

From Torsten.Paul at gmx.de  Fri Jan 15 14:52:46 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Fri, 15 Jan 2016 20:52:46 +0100
Subject: [OpenSCAD] debug print in openscad functions
In-Reply-To: <CAGV6i+MoxzaBdmmTiAR3+EZSp7tNKGp5NDubwsNxJNe=ZEjW1w@mail.gmail.com>
References: <CAAawR6V75i5B15QLFn_j=9srufTP1u+Q0ho48v-cbnLKKh4ing@mail.gmail.com>
	<1452809945793-15685.post@n5.nabble.com>
	<CAEEmnrMUs+CQubqy3Gv6n9bzxkxpQ+0obROegSYZJY5L_byGWA@mail.gmail.com>
	<CAGV6i+NhmHDagmWokD-jaWsC-8YD7E4vDSV4JK9PuyFb_cFJQA@mail.gmail.com>
	<CAEEmnrP3GeBLOVhqVYuPuwsx_qsZ50E3pdhi2dvhLpehLu3x9Q@mail.gmail.com>
	<1452881155496-15707.post@n5.nabble.com>
	<CAGV6i+MoxzaBdmmTiAR3+EZSp7tNKGp5NDubwsNxJNe=ZEjW1w@mail.gmail.com>
Message-ID: <56994E0E.7040705@gmx.de>

On 01/15/2016 08:40 PM, doug moen wrote:
> Yes, I would like us to have echof.
>
Ok then, to make it easier to use, what about:

- just call it echo() instead of echof()

- have it declared like echo(result, ...)

  where it returns the value that is either the first positional
  argument or the argument named result (to match the argument
  behavior of module instantiations).

- all arguments are printed as with the module echo()

- if the function echo() is called with no argument, it will
  return undef.

ciao,
  Torsten.



From nop.head at gmail.com  Fri Jan 15 15:14:43 2016
From: nop.head at gmail.com (nop head)
Date: Fri, 15 Jan 2016 20:14:43 +0000
Subject: [OpenSCAD] debug print in openscad functions
In-Reply-To: <CAGV6i+NrYHto_x7M=pJhWrWFYxKC0ffGtTWLAF+DFJjL_haEHQ@mail.gmail.com>
References: <CAAawR6V75i5B15QLFn_j=9srufTP1u+Q0ho48v-cbnLKKh4ing@mail.gmail.com>
	<1452809945793-15685.post@n5.nabble.com>
	<CAEEmnrMUs+CQubqy3Gv6n9bzxkxpQ+0obROegSYZJY5L_byGWA@mail.gmail.com>
	<CAGV6i+NhmHDagmWokD-jaWsC-8YD7E4vDSV4JK9PuyFb_cFJQA@mail.gmail.com>
	<CAEEmnrP3GeBLOVhqVYuPuwsx_qsZ50E3pdhi2dvhLpehLu3x9Q@mail.gmail.com>
	<CAGV6i+NrYHto_x7M=pJhWrWFYxKC0ffGtTWLAF+DFJjL_haEHQ@mail.gmail.com>
Message-ID: <CAEEmnrPyh6fPFZ7orNJd8pzBQ++BUfEMsfnmZtJg26GJLhqVOg@mail.gmail.com>

On 15 January 2016 at 19:21, doug moen <doug at moens.org> wrote:

> There's a design flaw in our geometry cache, which caches geometry across
> different script evaluations. The problem is that CGAL messages which
> appear the first time, do not appear during subsequent F5/F6 evaluations.
> This is annoying and should be fixed. I agree that the fix will have to
> involve caching the CGAL messages together with the cached geometry.
>

Agreed. And the same mechanism can be used for echof in functions if the
functions get memoized.


>
> I consider this issue separate from the issue of making the script
> evaluator run faster, using the standard techniques that are available to
> declarative and functional languages. In the latter case, I am quite sure
> that we don't want to prohibit the use of optimizations because somebody
> might use echo to debug a script.
>

No but you can recognise that the presence of echo locally means you can't
rearrange the code if it would change the text. It is quite normal to
disable optimisations when debugging code. I don't see a need for echof
once the bug is found. I don't think the same applies to echo in modules /
the geometry tree however and the order of evaluation doesn't matter as
long as the strings are combined alongside the geometry results.


>
> Yes, echo and echof produce side effects. Optimizations will often change
> those side effects, even though the result is the same:
>
>    - an optimization might avoid evaluating a module or expression
>    multiple times, because the result is the same each time. This means the
>    echo happens only once instead of multiple times.
>    - an optimization can change the order of evaluation. This doesn't
>    affect the result, but the echos will now occur in a different order.
>    - an optimization can decide not to evaluate a function or module
>    call, because the optimizer can prove that the result has no effect on the
>    geometric output. This means the echo doesn't occur.
>
> All these things make debugging totally confusing unless you can disable
them. The last time I used Microsoft Visual Studio debug mode disabled all
optimisations and ran about 10 times slower. It was possible to run the
debugger on release mode code but it was mighty confusing. For example you
could have simple functions in unrelated classes, such as property
accessors, that produce the same machine code but have totally different
names. In release mode they all get combined so you step through one class
and and see it call a completely unrelated one. But if you put printf in,
it still produces the correct results in release mode because the optimiser
knows it can't remove or reorder the code so it prints differently. Nobody
complains their code runs slower due to the presence of debugging code they
put in. It does sometimes create Heisenbugs though.



> Echo is not the same thing as metadata. These optimizations apply equally
> well to geometry nodes that contain metadata.
>

I don't understand that. If I make a bom with metadata I want it to be the
same as one I currently create with echo, so if you handle metadata
correctly, so that it is the same, then you can handle echo the same way.


>
> If we agree that caching evaluation results *across different script
> evaluations* needs to be treated more carefully, then can we agree that it
> is okay to use agressive performance optimizations *within* a single script
> evaluation?
>

Yes but I think echo is not a side effect, just as the geometry is not a
side effect, so you can do whatever optimisations don't affect the geometry
and don't change what is echoed.


> Nop Head said:
> >Well actually I think echo is run while the CSG tree is being made from
> the AST tree, which is a serial process and unlikely to be the bit
> paralleled for speed, which would be evaluating the CSG tree to create
> geometry.
>
> Historically, it's true that OpenSCAD is designed to have a script
> evaluation phase, which isn't performance critical, followed by a geometry
> evaluation phase (currently using CGAL) which is very performance
> sensitive. But if you look at how the language is being used now, and at
> the pull request for 'probe', then that may no longer be an accurate way to
> think about performance.
>
>    1. OpenSCAD has poor support for creating curved surfaces, so we now
>    have libraries that build curved surfaces using polyhedron(), such as the
>    new spline library. This means we are now increasingly doing our geometry
>    computations in the OpenSCAD scripting language, instead of in CGAL.
>    2. There is a pull request for a 'probe' function, which performs a
>    CGAL computation, then makes the results available to the function,
>    expression and variable part of the scripting language. One request in that
>    thread is to make the vertices and faces available, presumably so they can
>    be transformed and fed back into polyhedron using the scripting language.
>    This could greatly increase the extent to which CGAL and script evaluation
>    are interleaved.
>
> If the scripting language is being called upon to do the heavy lifting of
> geometry evaluation, as an adjunct to CGAL, then yes maybe we will need to
> consider parallel script evaluation.
>

Yes but as I described before, echo in modules does not prevent them being
run in parallel or in any order as long as the text is gathered from the
children and concatenated in the right order and passed up to the parent,
just the same as the geometry.


>
> On 15 January 2016 at 12:05, nop head <nop.head at gmail.com> wrote:
>
>> Well actually I think echo is run while the CSG tree is being made from
>> the AST tree, which is a serial process and unlikely to be the bit
>> paralleled for speed, which would be evaluating the CSG tree to create
>> geometry.
>>
>> As I said before if you consider the console text as part of the result
>> it is no longer a side effect any more than creating geometry and rendering
>> it on the screen is. It doesn't create any side effect type problems like
>> mutable variables do because its effect is external to the program.
>>
>> If any debug information needs to be output during the geometry creation
>> it isn't a problem either. Any parallel execution has to evaluate the
>> children of a node before it can use the results to do its operation. As
>> long as the text from echo is returned as part of the value of the child
>> node instead of being immediately printed the tree can be used to render it
>> in the console in the correct order. I.e. each node evaluates it children
>> (potentially in parallel) and returns the geometry to is parent. I can all
>> receive debug strings from its children, concatenate them and return them
>> to its parent. The text will still be in the same order regardless of
>> parallelism. Also any optimisation that caches geometry has to cache the
>> string as well.
>>
>> Echo in expressions can be handled exactly the same way and produce
>> deterministic results despite parallelism and caching, just the same as the
>> expression value is deterministic.
>>
>> If you can get a deterministic result from attaching metadata then you
>> can also make echo work as you can consider it a special case of metadata.
>>
>>
>>
>> On 15 January 2016 at 16:17, doug moen <doug at moens.org> wrote:
>>
>>> The "search" function is badly designed. It prints those warning
>>> messages because
>>>   search("large", [["large",42], ["medium",17], ["small",5]])
>>> does not do what it should do.
>>>
>>> We should deprecate "search" and replace it with something simpler and
>>> better behaved. A lot of people who need this functionality have already
>>> done this, by writing their own function. My preferred interface looks like
>>> this:
>>>   lookup(key, [[key1,value1], [key2,value2], ...])
>>> returns the value associated with the key argument, or returns undef if
>>> there is no match. Works with any type of key for which equality is
>>> defined, including strings and lists.
>>>
>>> There is nothing wrong with adding an "echof" function as an aid in
>>> debugging functions. It's no worse than "echo". This is needed as a debug
>>> feature, since OpenSCAD doesn't have proper debug facilities. But we should
>>> be aiming higher, at providing a proper debugger UI in a future release. If
>>> you could use a debugger to set "watchpoints" that print a trace message to
>>> the console each time a particular expression is evaluated, then you could
>>> debug a program without cluttering up the source code with echo statements.
>>>
>>> OpenSCAD is a declarative language. Ideally, it has no side effects, and
>>> it has no defined evaluation order, which gives the implementation maximum
>>> flexibility to compile scripts into a form that execute quickly. For
>>> example,
>>>
>>>    - Suppose that an expensive-to-compute subexpression occurs inside a
>>>    for loop, but doesn't depend on the iteration variable. An optimizing
>>>    compiler can lift that subexpression outside of the loop, and only evaluate
>>>    it once.
>>>    - If the same subexpression occurs multiple times, the compiler can
>>>    recognize this and arrange to only evaluate the expression once, caching
>>>    the result for later use.
>>>    - Declarative programs can be automatically parallelized, so that
>>>    multiple cores are used to simultaneously evaluate different parts of the
>>>    program.
>>>
>>> Debugging tools expose the evaluation order. That's inevitable. A
>>> problem with 'echo' and 'echof' is that they are part of the language, and
>>> users might come to rely on a particular script producing echo output in a
>>> particular order. I think we should make it clear that 'echo' is only a
>>> debug feature, that there is no defined evaluation order, and that the
>>> evaluation order can change across releases, or vary depending on the
>>> hardware and operating system. With multi-core evaluation, the evaluation
>>> order can change from one run to the next.
>>>
>>> I know that people use 'echo' to generate a bill of materials. We should
>>> provide a more declarative way to do this. In OpenSCAD2, I've provided a
>>> mechanism for attaching user-defined metadata to geometric shapes, and I
>>> also explain how to use this to generate a BOM declaratively, without using
>>> echo.
>>>
>>> Remember that in a declarative language, the evaluation order is
>>> something internal to the implementation, it does not (should not) affect
>>> the final result. Otherwise it's a bug. In OpenSCAD, the final result is
>>> usually the geometry, but in the above example it's the BOM, if the BOM is
>>> defined declaratively using metadata.
>>>
>>>
>>> On 15 January 2016 at 03:47, nop head <nop.head at gmail.com> wrote:
>>>
>>>> If you accept that functions can return a debug string as well as a
>>>> value then it is no longer a side effect. If you cache the value of the
>>>> function for optimisation then you also have to cache the string and emit
>>>> it whenever you use the cached value. The same with echo in modules and
>>>> geometry.
>>>>
>>>> On 14 January 2016 at 22:19, MichaelAtOz <oz.at.michael at gmail.com>
>>>> wrote:
>>>>
>>>>> Thanks. Nice use of a "side-effect" which I thought we didn't allow?
>>>>> Seems to be the main argument against  echof()
>>>>> <https://github.com/openscad/openscad/issues/741>
>>>>>
>>>>>
>>>>>
>>>>> -----
>>>>> Newly minted Admin - PM me if you need anything, or if I've done
>>>>> something stupid...
>>>>>
>>>>> Unless specifically shown otherwise above, my contribution is in the
>>>>> Public Domain; to the extent possible under law, I have waived all
>>>>> copyright and related or neighbouring rights to this work. Obviously
>>>>> inclusion of works of previous authors is not included in the above.
>>>>>
>>>>> The TPP is no simple ?trade agreement.?   Fight it!
>>>>> http://www.ourfairdeal.org/   time is running out!
>>>>> --
>>>>> View this message in context:
>>>>> http://forum.openscad.org/debug-print-in-openscad-functions-tp15683p15685.html
>>>>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>>>>
>>>>> _______________________________________________
>>>>> OpenSCAD mailing list
>>>>> Discuss at lists.openscad.org
>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160115/e123e832/attachment.html>

From doug at moens.org  Fri Jan 15 15:39:35 2016
From: doug at moens.org (doug moen)
Date: Fri, 15 Jan 2016 15:39:35 -0500
Subject: [OpenSCAD] debug print in openscad functions
In-Reply-To: <56994E0E.7040705@gmx.de>
References: <CAAawR6V75i5B15QLFn_j=9srufTP1u+Q0ho48v-cbnLKKh4ing@mail.gmail.com>
	<1452809945793-15685.post@n5.nabble.com>
	<CAEEmnrMUs+CQubqy3Gv6n9bzxkxpQ+0obROegSYZJY5L_byGWA@mail.gmail.com>
	<CAGV6i+NhmHDagmWokD-jaWsC-8YD7E4vDSV4JK9PuyFb_cFJQA@mail.gmail.com>
	<CAEEmnrP3GeBLOVhqVYuPuwsx_qsZ50E3pdhi2dvhLpehLu3x9Q@mail.gmail.com>
	<1452881155496-15707.post@n5.nabble.com>
	<CAGV6i+MoxzaBdmmTiAR3+EZSp7tNKGp5NDubwsNxJNe=ZEjW1w@mail.gmail.com>
	<56994E0E.7040705@gmx.de>
Message-ID: <CAGV6i+OSmOD5pv4khC4ssLjJojcop+ghiZCkFk=8SmmO5bn2Qg@mail.gmail.com>

Hi Torsten. In OpenSCAD2, because there is a single namespace (instead of
separate module/function namespaces), I need echo and echof to be separate
functions. They seem to require different interfaces, and I haven't found a
good way to unify them.

For OpenSCAD2, the syntax I designed for echof is:
  echof(stuff, to, echo) result

The syntax is copied from module calls, and is convenient to use for the
same reasons.
For example,
   echof("calling f(",x,")") f(x)
is syntactically similar to applying a transformation to some geometry, as
in
   translate([10,0,0]) cube(10)

I just like the way that the debug output is visually separated from the
rest of the code in a function.

function sum(x, y) =
   echof("sum(",x,",",y,")")
   (x + y);

If you like this syntax, you'll need to add another production to the
expression grammar, which for now will only be used by echof. I can help,
since I've already got a working bison grammar for this.


On 15 January 2016 at 14:52, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 01/15/2016 08:40 PM, doug moen wrote:
> > Yes, I would like us to have echof.
> >
> Ok then, to make it easier to use, what about:
>
> - just call it echo() instead of echof()
>
> - have it declared like echo(result, ...)
>
>   where it returns the value that is either the first positional
>   argument or the argument named result (to match the argument
>   behavior of module instantiations).
>
> - all arguments are printed as with the module echo()
>
> - if the function echo() is called with no argument, it will
>   return undef.
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160115/3ab3ed19/attachment.html>

From Torsten.Paul at gmx.de  Fri Jan 15 15:49:44 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Fri, 15 Jan 2016 21:49:44 +0100
Subject: [OpenSCAD] debug print in openscad functions
In-Reply-To: <CAGV6i+OSmOD5pv4khC4ssLjJojcop+ghiZCkFk=8SmmO5bn2Qg@mail.gmail.com>
References: <CAAawR6V75i5B15QLFn_j=9srufTP1u+Q0ho48v-cbnLKKh4ing@mail.gmail.com>
	<1452809945793-15685.post@n5.nabble.com>
	<CAEEmnrMUs+CQubqy3Gv6n9bzxkxpQ+0obROegSYZJY5L_byGWA@mail.gmail.com>
	<CAGV6i+NhmHDagmWokD-jaWsC-8YD7E4vDSV4JK9PuyFb_cFJQA@mail.gmail.com>
	<CAEEmnrP3GeBLOVhqVYuPuwsx_qsZ50E3pdhi2dvhLpehLu3x9Q@mail.gmail.com>
	<1452881155496-15707.post@n5.nabble.com>
	<CAGV6i+MoxzaBdmmTiAR3+EZSp7tNKGp5NDubwsNxJNe=ZEjW1w@mail.gmail.com>
	<56994E0E.7040705@gmx.de>
	<CAGV6i+OSmOD5pv4khC4ssLjJojcop+ghiZCkFk=8SmmO5bn2Qg@mail.gmail.com>
Message-ID: <56995B68.9090005@gmx.de>

On 01/15/2016 09:39 PM, doug moen wrote:
> Hi Torsten. In OpenSCAD2, because there is a single namespace
> (instead of separate module/function namespaces), I need echo
> and echof to be separate functions. They seem to require
> different interfaces, and I haven't found a good way to unify them.
>
Hmm, right, the result thingy would make it it harder to unify.
But we already have a case where the same name is used for both
cases: let().

So how about having it behave like let() (including the sequential
assignment) just with the additional side effect of printing the
values?

ciao,
  Torsten.


From oz.at.michael at gmail.com  Fri Jan 15 15:56:54 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 15 Jan 2016 13:56:54 -0700 (MST)
Subject: [OpenSCAD] debug print in openscad functions
In-Reply-To: <CAGV6i+OSmOD5pv4khC4ssLjJojcop+ghiZCkFk=8SmmO5bn2Qg@mail.gmail.com>
References: <CAAawR6V75i5B15QLFn_j=9srufTP1u+Q0ho48v-cbnLKKh4ing@mail.gmail.com>
	<1452809945793-15685.post@n5.nabble.com>
	<CAEEmnrMUs+CQubqy3Gv6n9bzxkxpQ+0obROegSYZJY5L_byGWA@mail.gmail.com>
	<CAGV6i+NhmHDagmWokD-jaWsC-8YD7E4vDSV4JK9PuyFb_cFJQA@mail.gmail.com>
	<CAEEmnrP3GeBLOVhqVYuPuwsx_qsZ50E3pdhi2dvhLpehLu3x9Q@mail.gmail.com>
	<1452881155496-15707.post@n5.nabble.com>
	<CAGV6i+MoxzaBdmmTiAR3+EZSp7tNKGp5NDubwsNxJNe=ZEjW1w@mail.gmail.com>
	<56994E0E.7040705@gmx.de>
	<CAGV6i+OSmOD5pv4khC4ssLjJojcop+ghiZCkFk=8SmmO5bn2Qg@mail.gmail.com>
Message-ID: <1452891414008-15715.post@n5.nabble.com>

doug.moen wrote
> I just like the way that the debug output is visually separated from the
> rest of the code in a function.
> 
> function sum(x, y) =
>    echof("sum(",x,",",y,")")
>    (x + y);
> 
> If you like this syntax, you'll need to add another production to the
> expression grammar, which for now will only be used by echof. I can help,
> since I've already got a working bison grammar for this.

Nooooooooooo. (I think)

echof() needs to be able to be placed anywhere in an expression.
Consider a complex recursion, it could be going wrong in any number of 
"...?...:..." 




-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/debug-print-in-openscad-functions-tp15683p15715.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Fri Jan 15 16:05:58 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 15 Jan 2016 14:05:58 -0700 (MST)
Subject: [OpenSCAD] debug print in openscad functions
In-Reply-To: <56994E0E.7040705@gmx.de>
References: <CAAawR6V75i5B15QLFn_j=9srufTP1u+Q0ho48v-cbnLKKh4ing@mail.gmail.com>
	<1452809945793-15685.post@n5.nabble.com>
	<CAEEmnrMUs+CQubqy3Gv6n9bzxkxpQ+0obROegSYZJY5L_byGWA@mail.gmail.com>
	<CAGV6i+NhmHDagmWokD-jaWsC-8YD7E4vDSV4JK9PuyFb_cFJQA@mail.gmail.com>
	<CAEEmnrP3GeBLOVhqVYuPuwsx_qsZ50E3pdhi2dvhLpehLu3x9Q@mail.gmail.com>
	<1452881155496-15707.post@n5.nabble.com>
	<CAGV6i+MoxzaBdmmTiAR3+EZSp7tNKGp5NDubwsNxJNe=ZEjW1w@mail.gmail.com>
	<56994E0E.7040705@gmx.de>
Message-ID: <1452891958421-15716.post@n5.nabble.com>

tp3 wrote
> On 01/15/2016 08:40 PM, doug moen wrote:
>> Yes, I would like us to have echof.
>>
> Ok then, to make it easier to use, what about:
> 
> - just call it echo() instead of echof()
> 
> - have it declared like echo(result, ...)
> 
>   where it returns the value that is either the first positional
>   argument or the argument named result (to match the argument
>   behavior of module instantiations).
> 
> - all arguments are printed as with the module echo()
> 
> - if the function echo() is called with no argument, it will
>   return undef.

How about calling the parameter 'return' as in return code.
I was about to argue for just returning zero, as originally proposed, but
I can see echof(return=[],"msg") & echof(return="","msg") being handy in
non-numeric functions.




-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/debug-print-in-openscad-functions-tp15683p15716.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Fri Jan 15 16:07:49 2016
From: doug at moens.org (doug moen)
Date: Fri, 15 Jan 2016 16:07:49 -0500
Subject: [OpenSCAD] debug print in openscad functions
In-Reply-To: <1452891414008-15715.post@n5.nabble.com>
References: <CAAawR6V75i5B15QLFn_j=9srufTP1u+Q0ho48v-cbnLKKh4ing@mail.gmail.com>
	<1452809945793-15685.post@n5.nabble.com>
	<CAEEmnrMUs+CQubqy3Gv6n9bzxkxpQ+0obROegSYZJY5L_byGWA@mail.gmail.com>
	<CAGV6i+NhmHDagmWokD-jaWsC-8YD7E4vDSV4JK9PuyFb_cFJQA@mail.gmail.com>
	<CAEEmnrP3GeBLOVhqVYuPuwsx_qsZ50E3pdhi2dvhLpehLu3x9Q@mail.gmail.com>
	<1452881155496-15707.post@n5.nabble.com>
	<CAGV6i+MoxzaBdmmTiAR3+EZSp7tNKGp5NDubwsNxJNe=ZEjW1w@mail.gmail.com>
	<56994E0E.7040705@gmx.de>
	<CAGV6i+OSmOD5pv4khC4ssLjJojcop+ghiZCkFk=8SmmO5bn2Qg@mail.gmail.com>
	<1452891414008-15715.post@n5.nabble.com>
Message-ID: <CAGV6i+Mv_AfsuvKGPpHsAU2gvJ5A6Yqm7n9zBSUHFSctrX6Apg@mail.gmail.com>

In OpenSCAD2, a call to echof is just an expression, and can therefore be
placed anywhere in an expression.

If you reduce it to the simplest case, then
    echof(stuff,to,echo)(result)
is an expression with the same precedence as a function call, and can be
used in any context that a function call can be used. (There are also a
limited set of cases where the parentheses around (result) can be omitted,
but we can leave that out for now.)

Sorry to dump OpenSCAD2 syntax into this thread. My excuse is that Torsten
and Marius have previously expressed interest in integrating more of that
syntax into OpenSCAD.

On 15 January 2016 at 15:56, MichaelAtOz <oz.at.michael at gmail.com> wrote:

> doug.moen wrote
> > I just like the way that the debug output is visually separated from the
> > rest of the code in a function.
> >
> > function sum(x, y) =
> >    echof("sum(",x,",",y,")")
> >    (x + y);
> >
> > If you like this syntax, you'll need to add another production to the
> > expression grammar, which for now will only be used by echof. I can help,
> > since I've already got a working bison grammar for this.
>
> Nooooooooooo. (I think)
>
> echof() needs to be able to be placed anywhere in an expression.
> Consider a complex recursion, it could be going wrong in any number of
> "...?...:..."
>
>
>
>
> -----
> Newly minted Admin - PM me if you need anything, or if I've done something
> stupid...
>
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; to the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work. Obviously
> inclusion of works of previous authors is not included in the above.
>
> The TPP is no simple ?trade agreement.?   Fight it!
> http://www.ourfairdeal.org/   time is running out!
> --
> View this message in context:
> http://forum.openscad.org/debug-print-in-openscad-functions-tp15683p15715.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160115/b94c9c4b/attachment.html>

From Torsten.Paul at gmx.de  Fri Jan 15 16:09:13 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Fri, 15 Jan 2016 22:09:13 +0100
Subject: [OpenSCAD] debug print in openscad functions
In-Reply-To: <1452891414008-15715.post@n5.nabble.com>
References: <CAAawR6V75i5B15QLFn_j=9srufTP1u+Q0ho48v-cbnLKKh4ing@mail.gmail.com>
	<1452809945793-15685.post@n5.nabble.com>
	<CAEEmnrMUs+CQubqy3Gv6n9bzxkxpQ+0obROegSYZJY5L_byGWA@mail.gmail.com>
	<CAGV6i+NhmHDagmWokD-jaWsC-8YD7E4vDSV4JK9PuyFb_cFJQA@mail.gmail.com>
	<CAEEmnrP3GeBLOVhqVYuPuwsx_qsZ50E3pdhi2dvhLpehLu3x9Q@mail.gmail.com>
	<1452881155496-15707.post@n5.nabble.com>
	<CAGV6i+MoxzaBdmmTiAR3+EZSp7tNKGp5NDubwsNxJNe=ZEjW1w@mail.gmail.com>
	<56994E0E.7040705@gmx.de>
	<CAGV6i+OSmOD5pv4khC4ssLjJojcop+ghiZCkFk=8SmmO5bn2Qg@mail.gmail.com>
	<1452891414008-15715.post@n5.nabble.com>
Message-ID: <56995FF9.5010303@gmx.de>

On 01/15/2016 09:56 PM, MichaelAtOz wrote:
> doug.moen wrote
>> function sum(x, y) =
>>    echof("sum(",x,",",y,")")
>>    (x + y);
>>
> Nooooooooooo. (I think)
> 
> echof() needs to be able to be placed anywhere in an expression.
> Consider a complex recursion, it could be going wrong in any number of 
> "...?...:..." 
> 
If it would behave as let(), you can place it where you want.

E.g. what I had first thought:

function f(x) = echo(x = x, result = x > 0 ? f(x - 1) * 2 : 1);

would become

function f(x) = echo(x = x) x > 0 ? f(x - 1) * 2 : 1;

and print the "x = ..." part first and after the values that
are coming from the assignment, it would print (and also return)
the expression behind.

Also: function f(x, y) = echo() x * echo() y;
or: function(x, y) = echo(x = x, y = y) x * y;

ciao,
  Torsten.




From oz.at.michael at gmail.com  Fri Jan 15 17:25:45 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 15 Jan 2016 15:25:45 -0700 (MST)
Subject: [OpenSCAD] debug print in openscad functions
In-Reply-To: <56995FF9.5010303@gmx.de>
References: <1452809945793-15685.post@n5.nabble.com>
	<CAEEmnrMUs+CQubqy3Gv6n9bzxkxpQ+0obROegSYZJY5L_byGWA@mail.gmail.com>
	<CAGV6i+NhmHDagmWokD-jaWsC-8YD7E4vDSV4JK9PuyFb_cFJQA@mail.gmail.com>
	<CAEEmnrP3GeBLOVhqVYuPuwsx_qsZ50E3pdhi2dvhLpehLu3x9Q@mail.gmail.com>
	<1452881155496-15707.post@n5.nabble.com>
	<CAGV6i+MoxzaBdmmTiAR3+EZSp7tNKGp5NDubwsNxJNe=ZEjW1w@mail.gmail.com>
	<56994E0E.7040705@gmx.de>
	<CAGV6i+OSmOD5pv4khC4ssLjJojcop+ghiZCkFk=8SmmO5bn2Qg@mail.gmail.com>
	<1452891414008-15715.post@n5.nabble.com> <56995FF9.5010303@gmx.de>
Message-ID: <1452896745961-15719.post@n5.nabble.com>

tp3 wrote
> and print the "x = ..." part first and after the values that
> are coming from the assignment, it would print (and also return)
> the expression behind.
> 
> Also: function f(x, y) = echo() x * echo() y;
> or: function(x, y) = echo(x = x, y = y) x * y;

Are you suggesting the assignment actually works as per let()?
That changes it from a simple none side-effect (except console) debug
statement, to a functional part of the language.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/debug-print-in-openscad-functions-tp15683p15719.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Fri Jan 15 17:54:16 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Fri, 15 Jan 2016 23:54:16 +0100
Subject: [OpenSCAD] debug print in openscad functions
In-Reply-To: <1452896745961-15719.post@n5.nabble.com>
References: <1452809945793-15685.post@n5.nabble.com>
	<CAEEmnrMUs+CQubqy3Gv6n9bzxkxpQ+0obROegSYZJY5L_byGWA@mail.gmail.com>
	<CAGV6i+NhmHDagmWokD-jaWsC-8YD7E4vDSV4JK9PuyFb_cFJQA@mail.gmail.com>
	<CAEEmnrP3GeBLOVhqVYuPuwsx_qsZ50E3pdhi2dvhLpehLu3x9Q@mail.gmail.com>
	<1452881155496-15707.post@n5.nabble.com>
	<CAGV6i+MoxzaBdmmTiAR3+EZSp7tNKGp5NDubwsNxJNe=ZEjW1w@mail.gmail.com>
	<56994E0E.7040705@gmx.de>
	<CAGV6i+OSmOD5pv4khC4ssLjJojcop+ghiZCkFk=8SmmO5bn2Qg@mail.gmail.com>
	<1452891414008-15715.post@n5.nabble.com> <56995FF9.5010303@gmx.de>
	<1452896745961-15719.post@n5.nabble.com>
Message-ID: <56997898.7010703@gmx.de>

On 01/15/2016 11:25 PM, MichaelAtOz wrote:
> tp3 wrote
>> and print the "x = ..." part first and after the values that
>> are coming from the assignment, it would print (and also return)
>> the expression behind.
>>
>> Also: function f(x, y) = echo() x * echo() y;
>> or: function(x, y) = echo(x = x, y = y) x * y;
> 
> Are you suggesting the assignment actually works as per let()?
> That changes it from a simple none side-effect (except console) debug
> statement, to a functional part of the language.
> 
I'd prefer something that makes it easier to move to the
OpenSCAD2 syntax later and does not have funny names like
echof().

If it's not possible to find a sensible way to have that
with echo(), it might even be something completely new for
both cases which leaves behind the current echo() eventually.

ciao,
  Torsten.



From fractorr at gmail.com  Fri Jan 15 18:05:31 2016
From: fractorr at gmail.com (fractorr)
Date: Fri, 15 Jan 2016 16:05:31 -0700 (MST)
Subject: [OpenSCAD] shape data from json or xml file
In-Reply-To: <5665E224.7050406@gmx.de>
References: <1449508644889-15014.post@n5.nabble.com>
	<CAEEmnrN_xHuk-BFxFTNUk4wUd3eUCOqBnA3fFMkPSSW1N_+2YA@mail.gmail.com>
	<1449515382059-15021.post@n5.nabble.com> <5665E224.7050406@gmx.de>
Message-ID: <1452899131892-15721.post@n5.nabble.com>

I am REALLY liking OpenSCAD. I went with the BOLTS type method.  I have 12
modules that accept various parameters for generating shapes.  With those 12
modules I can generate over 1,400 different OpenSCAD files.  I created a
script file to generate all the possible OpenSCAD files with the various
parameters for each module.   I then used the command line export option to
batch export them to stl and png files.  This ability saved me countless
hours of work.  




--
View this message in context: http://forum.openscad.org/shape-data-from-json-or-xml-file-tp15014p15721.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jdawgaz at gmail.com  Fri Jan 15 19:35:59 2016
From: jdawgaz at gmail.com (Jerry Davis)
Date: Fri, 15 Jan 2016 17:35:59 -0700
Subject: [OpenSCAD] shape data from json or xml file
In-Reply-To: <1452899131892-15721.post@n5.nabble.com>
References: <1449508644889-15014.post@n5.nabble.com>
	<CAEEmnrN_xHuk-BFxFTNUk4wUd3eUCOqBnA3fFMkPSSW1N_+2YA@mail.gmail.com>
	<1449515382059-15021.post@n5.nabble.com> <5665E224.7050406@gmx.de>
	<1452899131892-15721.post@n5.nabble.com>
Message-ID: <CAMyDR6JGE04XJoWPK3sCff2HtFUaz+nK89DzVSWJXP_OpQy6Pw@mail.gmail.com>

for those of you looking into BOLTS.
I installed it, and tried it out. My bolts have no threads.
Are my bolts supposed to come out with no threads?




--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson

On Fri, Jan 15, 2016 at 4:05 PM, fractorr <fractorr at gmail.com> wrote:

> I am REALLY liking OpenSCAD. I went with the BOLTS type method.  I have 12
> modules that accept various parameters for generating shapes.  With those
> 12
> modules I can generate over 1,400 different OpenSCAD files.  I created a
> script file to generate all the possible OpenSCAD files with the various
> parameters for each module.   I then used the command line export option to
> batch export them to stl and png files.  This ability saved me countless
> hours of work.
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/shape-data-from-json-or-xml-file-tp15014p15721.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160115/5c4e282e/attachment.html>

From oz.at.michael at gmail.com  Fri Jan 15 19:55:03 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 15 Jan 2016 17:55:03 -0700 (MST)
Subject: [OpenSCAD] debug print in openscad functions
In-Reply-To: <56997898.7010703@gmx.de>
References: <CAGV6i+NhmHDagmWokD-jaWsC-8YD7E4vDSV4JK9PuyFb_cFJQA@mail.gmail.com>
	<CAEEmnrP3GeBLOVhqVYuPuwsx_qsZ50E3pdhi2dvhLpehLu3x9Q@mail.gmail.com>
	<1452881155496-15707.post@n5.nabble.com>
	<CAGV6i+MoxzaBdmmTiAR3+EZSp7tNKGp5NDubwsNxJNe=ZEjW1w@mail.gmail.com>
	<56994E0E.7040705@gmx.de>
	<CAGV6i+OSmOD5pv4khC4ssLjJojcop+ghiZCkFk=8SmmO5bn2Qg@mail.gmail.com>
	<1452891414008-15715.post@n5.nabble.com> <56995FF9.5010303@gmx.de>
	<1452896745961-15719.post@n5.nabble.com> <56997898.7010703@gmx.de>
Message-ID: <1452905703145-15724.post@n5.nabble.com>

Could consider plain dumb echof() or echo() [as a function] short term and
immediately deprecate it, while working on debug() [or whatever the grand
OpenSCAD2 solution will be]. 

Could call it _echo() or something if you don't like funny names...



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/debug-print-in-openscad-functions-tp15683p15724.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Fri Jan 15 20:05:57 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sat, 16 Jan 2016 02:05:57 +0100
Subject: [OpenSCAD] debug print in openscad functions
In-Reply-To: <1452905703145-15724.post@n5.nabble.com>
References: <CAGV6i+NhmHDagmWokD-jaWsC-8YD7E4vDSV4JK9PuyFb_cFJQA@mail.gmail.com>
	<CAEEmnrP3GeBLOVhqVYuPuwsx_qsZ50E3pdhi2dvhLpehLu3x9Q@mail.gmail.com>
	<1452881155496-15707.post@n5.nabble.com>
	<CAGV6i+MoxzaBdmmTiAR3+EZSp7tNKGp5NDubwsNxJNe=ZEjW1w@mail.gmail.com>
	<56994E0E.7040705@gmx.de>
	<CAGV6i+OSmOD5pv4khC4ssLjJojcop+ghiZCkFk=8SmmO5bn2Qg@mail.gmail.com>
	<1452891414008-15715.post@n5.nabble.com> <56995FF9.5010303@gmx.de>
	<1452896745961-15719.post@n5.nabble.com> <56997898.7010703@gmx.de>
	<1452905703145-15724.post@n5.nabble.com>
Message-ID: <56999775.1030805@gmx.de>

On 01/16/2016 01:55 AM, MichaelAtOz wrote:
> Could consider plain dumb echof() or echo() [as a function] short term and
> immediately deprecate it, while working on debug() [or whatever the grand
> OpenSCAD2 solution will be]. 
> 
> Could call it _echo() or something if you don't like funny names...
> 
In case a "temporary" solution is ok, then it can be just echo().
If that's fine with Marius, I'd have an updated pull request ready
based on the older existing echof() pull request...

ciao,
  Torsten.



From oz.at.michael at gmail.com  Fri Jan 15 20:13:49 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 15 Jan 2016 18:13:49 -0700 (MST)
Subject: [OpenSCAD] 2dgraph; equation-based 2-D shapes in openSCAD
In-Reply-To: <1452904298279-15722.post@n5.nabble.com>
References: <1452904298279-15722.post@n5.nabble.com>
Message-ID: <1452906829751-15726.post@n5.nabble.com>

Lowell Nelson wrote
> I am a flagrant beginner to CAD & openSCAD, with somewhat feeble
> programming skills.
> 
> I wish to generate 2-D shapes from math (trigonometric) functions (this is
> not the same as manipulation of existing shapes/primitives), and
> 2dgraph.scad seems likely to do what I need.  However, though I find
> references to its use, I CANNOT find a direct description of 2dgraph by
> internet searches.  Is 2dgraph a module which exists within openSCAD, or
> is it a user/third party product?  What is its syntax?  Where can I obtain
> 2dgraph or its code?
> 
> Thanks for any kick-start someone can give me.
> 
> Lowell Nelson

Hi,
Welcome to the forum. Your post is still flagged as "This post has NOT been
accepted by the mailing list yet", so nobody gets it unless they look. 
You need to subscribe to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.

Tho as it is quoted above they will see it now.

I never heard of 2Dgraph, a quick google gave me  this
<http://www.thingiverse.com/thing:11243>   ??



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/2dgraph-equation-based-2-D-shapes-in-openSCAD-tp15722p15726.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Fri Jan 15 23:53:20 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 15 Jan 2016 21:53:20 -0700 (MST)
Subject: [OpenSCAD] export() function.
In-Reply-To: <CAEEmnrMx=4jSfbOR0BCBjQh94YdjpUSPrbO1PRPc8sJe_Qp+1A@mail.gmail.com>
References: <CAEEmnrNi+aFFHDpMCHgt0w5Au2CFSUhmR+8AzOwpm3sAOGDzkg@mail.gmail.com>
	<56929395.50105@gmx.de>
	<CAEEmnrMewzFKgffJ3VU22Zz7cBGTxHsh13vjUJ0CQkZSQXgi_g@mail.gmail.com>
	<CAGV6i+O9sgCNyaiOJenQBUiB-o0FyaK-Noq8r3WkyjO-cxExCw@mail.gmail.com>
	<D7D0BDAD-9127-49C7-8EB5-EF4908F91633@kintel.net>
	<CAEEmnrMgeC+_QHrM0wcq2AAkjbKFxK5vdnSv5oRuaukuASysog@mail.gmail.com>
	<0DD0A662-FDA5-4FC1-9086-3A5BC1B51B0C@kintel.net>
	<CAEEmnrMDVn6CTjq7n7ebGm5HBOAG_Tx+v5i9ZM8UGRozG0EoFw@mail.gmail.com>
	<1452824710132-15691.post@n5.nabble.com>
	<CAEEmnrMx=4jSfbOR0BCBjQh94YdjpUSPrbO1PRPc8sJe_Qp+1A@mail.gmail.com>
Message-ID: <1452920000224-15727.post@n5.nabble.com>

I presume F4 still reloads.
Of course the variables can be overridden in the source. So you can test
effect without having to render, for example.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/export-function-tp15428p15727.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sat Jan 16 01:49:14 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 15 Jan 2016 23:49:14 -0700 (MST)
Subject: [OpenSCAD] Anyone done anything on countersunk screw holes?
Message-ID: <1452926954494-15728.post@n5.nabble.com>

Apparently according to  wikipedia
<https://en.wikipedia.org/wiki/Countersink>  , ISO Metric & Imperial screw
countersink are 90 degrees, while American UN is 82d.
I need a hole to wall mount a holder, but it needs to be flush for an item
to slide into the holder.
Hence a countersunk screw. Ideally one model that can be used world wide.

A ISO screw in a 82d hole is going to sit proud, unless a smaller screw is
used.
A UN screw in a 90d hole just has less surface contact, but at the thinner
part of the hole - so less secure.

Anyone know the specification of screw head size for a given screw size, ie
the red bit:
<http://forum.openscad.org/file/n15728/400px-Screw_head_cs.png> 

Something like BOLTS, but SCREWS? 

It's not holding a bridge, maybe I'm over thinking this?




-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Anyone-done-anything-on-countersunk-screw-holes-tp15728.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Sat Jan 16 03:17:20 2016
From: nop.head at gmail.com (nop head)
Date: Sat, 16 Jan 2016 08:17:20 +0000
Subject: [OpenSCAD] debug print in openscad functions
In-Reply-To: <56999775.1030805@gmx.de>
References: <CAGV6i+NhmHDagmWokD-jaWsC-8YD7E4vDSV4JK9PuyFb_cFJQA@mail.gmail.com>
	<CAEEmnrP3GeBLOVhqVYuPuwsx_qsZ50E3pdhi2dvhLpehLu3x9Q@mail.gmail.com>
	<1452881155496-15707.post@n5.nabble.com>
	<CAGV6i+MoxzaBdmmTiAR3+EZSp7tNKGp5NDubwsNxJNe=ZEjW1w@mail.gmail.com>
	<56994E0E.7040705@gmx.de>
	<CAGV6i+OSmOD5pv4khC4ssLjJojcop+ghiZCkFk=8SmmO5bn2Qg@mail.gmail.com>
	<1452891414008-15715.post@n5.nabble.com> <56995FF9.5010303@gmx.de>
	<1452896745961-15719.post@n5.nabble.com> <56997898.7010703@gmx.de>
	<1452905703145-15724.post@n5.nabble.com> <56999775.1030805@gmx.de>
Message-ID: <CAEEmnrMzAQR4-tb+Aa0-xfJx-3FNRETvL48__CmxGi=x5v=KsQ@mail.gmail.com>

Considering I make heavy used of the separate namespaces for functions,
modules and variables, none of my code will work in OpenScad2 anyway.

On 16 January 2016 at 01:05, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 01/16/2016 01:55 AM, MichaelAtOz wrote:
> > Could consider plain dumb echof() or echo() [as a function] short term
> and
> > immediately deprecate it, while working on debug() [or whatever the grand
> > OpenSCAD2 solution will be].
> >
> > Could call it _echo() or something if you don't like funny names...
> >
> In case a "temporary" solution is ok, then it can be just echo().
> If that's fine with Marius, I'd have an updated pull request ready
> based on the older existing echof() pull request...
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160116/ec4e3187/attachment.html>

From nop.head at gmail.com  Sat Jan 16 03:20:47 2016
From: nop.head at gmail.com (nop head)
Date: Sat, 16 Jan 2016 08:20:47 +0000
Subject: [OpenSCAD] export() function.
In-Reply-To: <1452920000224-15727.post@n5.nabble.com>
References: <CAEEmnrNi+aFFHDpMCHgt0w5Au2CFSUhmR+8AzOwpm3sAOGDzkg@mail.gmail.com>
	<56929395.50105@gmx.de>
	<CAEEmnrMewzFKgffJ3VU22Zz7cBGTxHsh13vjUJ0CQkZSQXgi_g@mail.gmail.com>
	<CAGV6i+O9sgCNyaiOJenQBUiB-o0FyaK-Noq8r3WkyjO-cxExCw@mail.gmail.com>
	<D7D0BDAD-9127-49C7-8EB5-EF4908F91633@kintel.net>
	<CAEEmnrMgeC+_QHrM0wcq2AAkjbKFxK5vdnSv5oRuaukuASysog@mail.gmail.com>
	<0DD0A662-FDA5-4FC1-9086-3A5BC1B51B0C@kintel.net>
	<CAEEmnrMDVn6CTjq7n7ebGm5HBOAG_Tx+v5i9ZM8UGRozG0EoFw@mail.gmail.com>
	<1452824710132-15691.post@n5.nabble.com>
	<CAEEmnrMx=4jSfbOR0BCBjQh94YdjpUSPrbO1PRPc8sJe_Qp+1A@mail.gmail.com>
	<1452920000224-15727.post@n5.nabble.com>
Message-ID: <CAEEmnrM7bOP0fXmuaJ=g8D4045XV7tcw3Tyjn5V787sZecUYmQ@mail.gmail.com>

Yes F4 would still reload. Also auto reload should behave the same way in
not changing $assembly.

On 16 January 2016 at 04:53, MichaelAtOz <oz.at.michael at gmail.com> wrote:

> I presume F4 still reloads.
> Of course the variables can be overridden in the source. So you can test
> effect without having to render, for example.
>
>
>
> -----
> Newly minted Admin - PM me if you need anything, or if I've done something
> stupid...
>
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; to the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work. Obviously
> inclusion of works of previous authors is not included in the above.
>
> The TPP is no simple ?trade agreement.?   Fight it!
> http://www.ourfairdeal.org/   time is running out!
> --
> View this message in context:
> http://forum.openscad.org/export-function-tp15428p15727.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160116/b4cd793d/attachment.html>

From nop.head at gmail.com  Sat Jan 16 03:38:15 2016
From: nop.head at gmail.com (nop head)
Date: Sat, 16 Jan 2016 08:38:15 +0000
Subject: [OpenSCAD] Anyone done anything on countersunk screw holes?
In-Reply-To: <1452926954494-15728.post@n5.nabble.com>
References: <1452926954494-15728.post@n5.nabble.com>
Message-ID: <CAEEmnrPVWFrbZO+v+GU5bNSQrhv97GpwELXOU7ccdqRBhN3YVg@mail.gmail.com>

This company gives dimensions of all the screws it sells, e.g.:
http://www.pts-uk.com/Products/Woodscrews_Pozi_Countersunk_Woodscrews_Metric_A2/A79973025

On 16 January 2016 at 06:49, MichaelAtOz <oz.at.michael at gmail.com> wrote:

> Apparently according to  wikipedia
> <https://en.wikipedia.org/wiki/Countersink>  , ISO Metric & Imperial screw
> countersink are 90 degrees, while American UN is 82d.
> I need a hole to wall mount a holder, but it needs to be flush for an item
> to slide into the holder.
> Hence a countersunk screw. Ideally one model that can be used world wide.
>
> A ISO screw in a 82d hole is going to sit proud, unless a smaller screw is
> used.
> A UN screw in a 90d hole just has less surface contact, but at the thinner
> part of the hole - so less secure.
>
> Anyone know the specification of screw head size for a given screw size, ie
> the red bit:
> <http://forum.openscad.org/file/n15728/400px-Screw_head_cs.png>
>
> Something like BOLTS, but SCREWS?
>
> It's not holding a bridge, maybe I'm over thinking this?
>
>
>
>
> -----
> Newly minted Admin - PM me if you need anything, or if I've done something
> stupid...
>
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; to the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work. Obviously
> inclusion of works of previous authors is not included in the above.
>
> The TPP is no simple ?trade agreement.?   Fight it!
> http://www.ourfairdeal.org/   time is running out!
> --
> View this message in context:
> http://forum.openscad.org/Anyone-done-anything-on-countersunk-screw-holes-tp15728.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160116/9e24e03a/attachment.html>

From stempeldergeschichte at googlemail.com  Sat Jan 16 04:43:57 2016
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Sat, 16 Jan 2016 10:43:57 +0100
Subject: [OpenSCAD] export() function.
In-Reply-To: <CAEEmnrM7bOP0fXmuaJ=g8D4045XV7tcw3Tyjn5V787sZecUYmQ@mail.gmail.com>
References: <CAEEmnrNi+aFFHDpMCHgt0w5Au2CFSUhmR+8AzOwpm3sAOGDzkg@mail.gmail.com>
	<56929395.50105@gmx.de>
	<CAEEmnrMewzFKgffJ3VU22Zz7cBGTxHsh13vjUJ0CQkZSQXgi_g@mail.gmail.com>
	<CAGV6i+O9sgCNyaiOJenQBUiB-o0FyaK-Noq8r3WkyjO-cxExCw@mail.gmail.com>
	<D7D0BDAD-9127-49C7-8EB5-EF4908F91633@kintel.net>
	<CAEEmnrMgeC+_QHrM0wcq2AAkjbKFxK5vdnSv5oRuaukuASysog@mail.gmail.com>
	<0DD0A662-FDA5-4FC1-9086-3A5BC1B51B0C@kintel.net>
	<CAEEmnrMDVn6CTjq7n7ebGm5HBOAG_Tx+v5i9ZM8UGRozG0EoFw@mail.gmail.com>
	<1452824710132-15691.post@n5.nabble.com>
	<CAEEmnrMx=4jSfbOR0BCBjQh94YdjpUSPrbO1PRPc8sJe_Qp+1A@mail.gmail.com>
	<1452920000224-15727.post@n5.nabble.com>
	<CAEEmnrM7bOP0fXmuaJ=g8D4045XV7tcw3Tyjn5V787sZecUYmQ@mail.gmail.com>
Message-ID: <CAJgOqACe+VMYdnJY5x8_f+rmMVo_FZokPsac_JgruyN7jOQyDA@mail.gmail.com>

We should think about how export() will work with costomizer on thingiverse.

2016-01-16 9:20 GMT+01:00 nop head <nop.head at gmail.com>:

> Yes F4 would still reload. Also auto reload should behave the same way in
> not changing $assembly.
>
> On 16 January 2016 at 04:53, MichaelAtOz <oz.at.michael at gmail.com> wrote:
>
>> I presume F4 still reloads.
>> Of course the variables can be overridden in the source. So you can test
>> effect without having to render, for example.
>>
>>
>>
>> -----
>> Newly minted Admin - PM me if you need anything, or if I've done
>> something stupid...
>>
>> Unless specifically shown otherwise above, my contribution is in the
>> Public Domain; to the extent possible under law, I have waived all
>> copyright and related or neighbouring rights to this work. Obviously
>> inclusion of works of previous authors is not included in the above.
>>
>> The TPP is no simple ?trade agreement.?   Fight it!
>> http://www.ourfairdeal.org/   time is running out!
>> --
>> View this message in context:
>> http://forum.openscad.org/export-function-tp15428p15727.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160116/f42befda/attachment.html>

From nop.head at gmail.com  Sat Jan 16 07:01:11 2016
From: nop.head at gmail.com (nop head)
Date: Sat, 16 Jan 2016 12:01:11 +0000
Subject: [OpenSCAD] Github compare across branches
Message-ID: <CAEEmnrN6Sy8tg=a19sKhzuWuz5MKFwBTwypXG+-UcLL4jbasGQ@mail.gmail.com>

Sorry for an off topic question but there must be some Github experts on
this list.

I want to compare the heads of two branches and show all the file
differences. Github compare seems to do something different and is not
commutative. For example
https://github.com/openscad/openscad/compare/master...c++11 is not the same
as https://github.com/openscad/openscad/compare/c++11...master. I would
expect it to simply to swap left and right making additions deletions, etc.

I think it must find the point where the branches diverged and show the
difference of one branch with respect to that. Is there a way to show the
difference between the two heads?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160116/9f2fcd56/attachment.html>

From nop.head at gmail.com  Sat Jan 16 07:40:52 2016
From: nop.head at gmail.com (nop head)
Date: Sat, 16 Jan 2016 12:40:52 +0000
Subject: [OpenSCAD] Github compare across branches
In-Reply-To: <CAEEmnrN6Sy8tg=a19sKhzuWuz5MKFwBTwypXG+-UcLL4jbasGQ@mail.gmail.com>
References: <CAEEmnrN6Sy8tg=a19sKhzuWuz5MKFwBTwypXG+-UcLL4jbasGQ@mail.gmail.com>
Message-ID: <CAEEmnrMC=cKyVoOmMh5WxMiSg7HBV5RjOi0TDiTkdVc978a1mw@mail.gmail.com>

Looks like it should be two dots instead of three in git diff but Github
compare doesn't support it, bummer!

On 16 January 2016 at 12:01, nop head <nop.head at gmail.com> wrote:

> Sorry for an off topic question but there must be some Github experts on
> this list.
>
> I want to compare the heads of two branches and show all the file
> differences. Github compare seems to do something different and is not
> commutative. For example
> https://github.com/openscad/openscad/compare/master...c++11 is not the
> same as https://github.com/openscad/openscad/compare/c++11...master. I
> would expect it to simply to swap left and right making additions
> deletions, etc.
>
> I think it must find the point where the branches diverged and show the
> difference of one branch with respect to that. Is there a way to show the
> difference between the two heads?
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160116/fe20e5ac/attachment.html>

From shadowwynd at gmail.com  Sat Jan 16 07:53:51 2016
From: shadowwynd at gmail.com (Ezra Reynolds)
Date: Sat, 16 Jan 2016 07:53:51 -0500
Subject: [OpenSCAD] Anyone done anything on countersunk screw holes?
In-Reply-To: <CAEEmnrPVWFrbZO+v+GU5bNSQrhv97GpwELXOU7ccdqRBhN3YVg@mail.gmail.com>
References: <1452926954494-15728.post@n5.nabble.com>
	<CAEEmnrPVWFrbZO+v+GU5bNSQrhv97GpwELXOU7ccdqRBhN3YVg@mail.gmail.com>
Message-ID: <569A3D5F.20408@gmail.com>

I normally just measure the screws I have at hand (shaft diameter, head 
diameter, head width) and put notes in the OpenSCAD file as a comment 
(where purchased, exact screw dimensions, etc.)   That way anyone on 
thingiverse who wants to build it can order something that should be 
very similar.  I also put all hardware-related things prominently marked 
as variables at the top of the file so that it is easy to change.

I don't think you are going to find a universal screw that is readily 
available worldwide; for most common applications it doesn't matter, for 
niche and critical applications it is a special-order over the internet 
anyway.

For example (in the US) wood screws for countersinking, even if they are 
the same shaft diameter, often have different head profiles based on 
different manufacturers.  For 3D printing countersunk holes, it has been 
problematic - different printers can sometimes be off by a millimeter, 
especially on interior holes; this can make countersunk screws not sit 
flush to the surface (using the same model, same screws, and different 
3D printers).

Any commercial DIY products include the screws for this reason.

On 1/16/2016 3:38 AM, nop head wrote:
> This company gives dimensions of all the screws it sells, e.g.:
> http://www.pts-uk.com/Products/Woodscrews_Pozi_Countersunk_Woodscrews_Metric_A2/A79973025
>
> On 16 January 2016 at 06:49, MichaelAtOz <oz.at.michael at gmail.com
> <mailto:oz.at.michael at gmail.com>> wrote:
>
>     Apparently according to  wikipedia
>     <https://en.wikipedia.org/wiki/Countersink>  , ISO Metric & Imperial
>     screw
>     countersink are 90 degrees, while American UN is 82d.
>     I need a hole to wall mount a holder, but it needs to be flush for
>     an item
>     to slide into the holder.
>     Hence a countersunk screw. Ideally one model that can be used world
>     wide.
>
>     A ISO screw in a 82d hole is going to sit proud, unless a smaller
>     screw is
>     used.
>     A UN screw in a 90d hole just has less surface contact, but at the
>     thinner
>     part of the hole - so less secure.
>
>     Anyone know the specification of screw head size for a given screw
>     size, ie
>     the red bit:
>     <http://forum.openscad.org/file/n15728/400px-Screw_head_cs.png>
>
>     Something like BOLTS, but SCREWS?
>
>     It's not holding a bridge, maybe I'm over thinking this?
>
>
>
>
>     -----
>     Newly minted Admin - PM me if you need anything, or if I've done
>     something stupid...
>
>     Unless specifically shown otherwise above, my contribution is in the
>     Public Domain; to the extent possible under law, I have waived all
>     copyright and related or neighbouring rights to this work. Obviously
>     inclusion of works of previous authors is not included in the above.
>
>     The TPP is no simple ?trade agreement.?   Fight it!
>     http://www.ourfairdeal.org/   time is running out!
>     --
>     View this message in context:
>     http://forum.openscad.org/Anyone-done-anything-on-countersunk-screw-holes-tp15728.html
>     Sent from the OpenSCAD mailing list archive at Nabble.com.
>
>     _______________________________________________
>     OpenSCAD mailing list
>     Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
>     http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>


From mickvav at gmail.com  Sat Jan 16 08:04:44 2016
From: mickvav at gmail.com (Mihail Vasiliev)
Date: Sat, 16 Jan 2016 16:04:44 +0300
Subject: [OpenSCAD] Anyone done anything on countersunk screw holes?
In-Reply-To: <569A3D5F.20408@gmail.com>
References: <1452926954494-15728.post@n5.nabble.com>
	<CAEEmnrPVWFrbZO+v+GU5bNSQrhv97GpwELXOU7ccdqRBhN3YVg@mail.gmail.com>
	<569A3D5F.20408@gmail.com>
Message-ID: <CAPmXz3WHy8SZBH1gZt_HTTUseGrOtuWxSYKLs6fyH1uf8kjm-g@mail.gmail.com>

May be it would be a good idea to put imortant screw sizes into
well-commented variables, so anyone can adjust them to the screws he has?
16 ???. 2016 ?. 3:54 PM ???????????? "Ezra Reynolds" <shadowwynd at gmail.com>
???????:

> I normally just measure the screws I have at hand (shaft diameter, head
> diameter, head width) and put notes in the OpenSCAD file as a comment
> (where purchased, exact screw dimensions, etc.)   That way anyone on
> thingiverse who wants to build it can order something that should be very
> similar.  I also put all hardware-related things prominently marked as
> variables at the top of the file so that it is easy to change.
>
> I don't think you are going to find a universal screw that is readily
> available worldwide; for most common applications it doesn't matter, for
> niche and critical applications it is a special-order over the internet
> anyway.
>
> For example (in the US) wood screws for countersinking, even if they are
> the same shaft diameter, often have different head profiles based on
> different manufacturers.  For 3D printing countersunk holes, it has been
> problematic - different printers can sometimes be off by a millimeter,
> especially on interior holes; this can make countersunk screws not sit
> flush to the surface (using the same model, same screws, and different 3D
> printers).
>
> Any commercial DIY products include the screws for this reason.
>
> On 1/16/2016 3:38 AM, nop head wrote:
>
>> This company gives dimensions of all the screws it sells, e.g.:
>>
>> http://www.pts-uk.com/Products/Woodscrews_Pozi_Countersunk_Woodscrews_Metric_A2/A79973025
>>
>> On 16 January 2016 at 06:49, MichaelAtOz <oz.at.michael at gmail.com
>> <mailto:oz.at.michael at gmail.com>> wrote:
>>
>>     Apparently according to  wikipedia
>>     <https://en.wikipedia.org/wiki/Countersink>  , ISO Metric & Imperial
>>     screw
>>     countersink are 90 degrees, while American UN is 82d.
>>     I need a hole to wall mount a holder, but it needs to be flush for
>>     an item
>>     to slide into the holder.
>>     Hence a countersunk screw. Ideally one model that can be used world
>>     wide.
>>
>>     A ISO screw in a 82d hole is going to sit proud, unless a smaller
>>     screw is
>>     used.
>>     A UN screw in a 90d hole just has less surface contact, but at the
>>     thinner
>>     part of the hole - so less secure.
>>
>>     Anyone know the specification of screw head size for a given screw
>>     size, ie
>>     the red bit:
>>     <http://forum.openscad.org/file/n15728/400px-Screw_head_cs.png>
>>
>>     Something like BOLTS, but SCREWS?
>>
>>     It's not holding a bridge, maybe I'm over thinking this?
>>
>>
>>
>>
>>     -----
>>     Newly minted Admin - PM me if you need anything, or if I've done
>>     something stupid...
>>
>>     Unless specifically shown otherwise above, my contribution is in the
>>     Public Domain; to the extent possible under law, I have waived all
>>     copyright and related or neighbouring rights to this work. Obviously
>>     inclusion of works of previous authors is not included in the above.
>>
>>     The TPP is no simple ?trade agreement.?   Fight it!
>>     http://www.ourfairdeal.org/   time is running out!
>>     --
>>     View this message in context:
>>
>> http://forum.openscad.org/Anyone-done-anything-on-countersunk-screw-holes-tp15728.html
>>     Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>>     _______________________________________________
>>     OpenSCAD mailing list
>>     Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
>>     http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160116/360b7c39/attachment.html>

From nop.head at gmail.com  Sat Jan 16 08:25:26 2016
From: nop.head at gmail.com (nop head)
Date: Sat, 16 Jan 2016 13:25:26 +0000
Subject: [OpenSCAD] Anyone done anything on countersunk screw holes?
In-Reply-To: <CAPmXz3WHy8SZBH1gZt_HTTUseGrOtuWxSYKLs6fyH1uf8kjm-g@mail.gmail.com>
References: <1452926954494-15728.post@n5.nabble.com>
	<CAEEmnrPVWFrbZO+v+GU5bNSQrhv97GpwELXOU7ccdqRBhN3YVg@mail.gmail.com>
	<569A3D5F.20408@gmail.com>
	<CAPmXz3WHy8SZBH1gZt_HTTUseGrOtuWxSYKLs6fyH1uf8kjm-g@mail.gmail.com>
Message-ID: <CAEEmnrPO=KQTb2Zokd7wzUrFgijunt91O=LTFoyOQpcucoowTQ@mail.gmail.com>

Countersunk screws are particularly tricky with 3D printed parts. If they
are vertical then you need to take into account the staircase effect if you
want them to sit flush, which depends on the layer height. I always use
poly_cylinders when I need accurate holes but this would need a poly_cone.
In practice they don't have infinitely sharp edges so you also need about
1mm of straight sided counter-bore above the cone.

If they are horizontal then it gets even more complicated with the
staircase and they tend to split the layers apart if you tighten them too
much. For that reason I use counter_bored pan heads in plastic parts.

On 16 January 2016 at 13:04, Mihail Vasiliev <mickvav at gmail.com> wrote:

> May be it would be a good idea to put imortant screw sizes into
> well-commented variables, so anyone can adjust them to the screws he has?
> 16 ???. 2016 ?. 3:54 PM ???????????? "Ezra Reynolds" <shadowwynd at gmail.com>
> ???????:
>
> I normally just measure the screws I have at hand (shaft diameter, head
>> diameter, head width) and put notes in the OpenSCAD file as a comment
>> (where purchased, exact screw dimensions, etc.)   That way anyone on
>> thingiverse who wants to build it can order something that should be very
>> similar.  I also put all hardware-related things prominently marked as
>> variables at the top of the file so that it is easy to change.
>>
>> I don't think you are going to find a universal screw that is readily
>> available worldwide; for most common applications it doesn't matter, for
>> niche and critical applications it is a special-order over the internet
>> anyway.
>>
>> For example (in the US) wood screws for countersinking, even if they are
>> the same shaft diameter, often have different head profiles based on
>> different manufacturers.  For 3D printing countersunk holes, it has been
>> problematic - different printers can sometimes be off by a millimeter,
>> especially on interior holes; this can make countersunk screws not sit
>> flush to the surface (using the same model, same screws, and different 3D
>> printers).
>>
>> Any commercial DIY products include the screws for this reason.
>>
>> On 1/16/2016 3:38 AM, nop head wrote:
>>
>>> This company gives dimensions of all the screws it sells, e.g.:
>>>
>>> http://www.pts-uk.com/Products/Woodscrews_Pozi_Countersunk_Woodscrews_Metric_A2/A79973025
>>>
>>> On 16 January 2016 at 06:49, MichaelAtOz <oz.at.michael at gmail.com
>>> <mailto:oz.at.michael at gmail.com>> wrote:
>>>
>>>     Apparently according to  wikipedia
>>>     <https://en.wikipedia.org/wiki/Countersink>  , ISO Metric & Imperial
>>>     screw
>>>     countersink are 90 degrees, while American UN is 82d.
>>>     I need a hole to wall mount a holder, but it needs to be flush for
>>>     an item
>>>     to slide into the holder.
>>>     Hence a countersunk screw. Ideally one model that can be used world
>>>     wide.
>>>
>>>     A ISO screw in a 82d hole is going to sit proud, unless a smaller
>>>     screw is
>>>     used.
>>>     A UN screw in a 90d hole just has less surface contact, but at the
>>>     thinner
>>>     part of the hole - so less secure.
>>>
>>>     Anyone know the specification of screw head size for a given screw
>>>     size, ie
>>>     the red bit:
>>>     <http://forum.openscad.org/file/n15728/400px-Screw_head_cs.png>
>>>
>>>     Something like BOLTS, but SCREWS?
>>>
>>>     It's not holding a bridge, maybe I'm over thinking this?
>>>
>>>
>>>
>>>
>>>     -----
>>>     Newly minted Admin - PM me if you need anything, or if I've done
>>>     something stupid...
>>>
>>>     Unless specifically shown otherwise above, my contribution is in the
>>>     Public Domain; to the extent possible under law, I have waived all
>>>     copyright and related or neighbouring rights to this work. Obviously
>>>     inclusion of works of previous authors is not included in the above.
>>>
>>>     The TPP is no simple ?trade agreement.?   Fight it!
>>>     http://www.ourfairdeal.org/   time is running out!
>>>     --
>>>     View this message in context:
>>>
>>> http://forum.openscad.org/Anyone-done-anything-on-countersunk-screw-holes-tp15728.html
>>>     Sent from the OpenSCAD mailing list archive at Nabble.com.
>>>
>>>     _______________________________________________
>>>     OpenSCAD mailing list
>>>     Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
>>>
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160116/5549ea75/attachment.html>

From marius at kintel.net  Sat Jan 16 11:36:22 2016
From: marius at kintel.net (Marius Kintel)
Date: Sat, 16 Jan 2016 11:36:22 -0500
Subject: [OpenSCAD] Github compare across branches
In-Reply-To: <CAEEmnrMC=cKyVoOmMh5WxMiSg7HBV5RjOi0TDiTkdVc978a1mw@mail.gmail.com>
References: <CAEEmnrN6Sy8tg=a19sKhzuWuz5MKFwBTwypXG+-UcLL4jbasGQ@mail.gmail.com>
	<CAEEmnrMC=cKyVoOmMh5WxMiSg7HBV5RjOi0TDiTkdVc978a1mw@mail.gmail.com>
Message-ID: <78A6FCC5-D897-4E4B-B2D4-1D9A8249B807@kintel.net>

> On Jan 16, 2016, at 07:40 AM, nop head <nop.head at gmail.com> wrote:
> 
> Looks like it should be two dots instead of three in git diff but Github compare doesn't support it, bummer!
> 
Yep, that?s correct.
You can simply do that on the cmd-line though: git diff origin/c++11..origin/master
There might be git GUI wrappers showing a graphical diff as well, but I don?t generally use those.

 -Marius



From nop.head at gmail.com  Sat Jan 16 16:19:55 2016
From: nop.head at gmail.com (nop head)
Date: Sat, 16 Jan 2016 21:19:55 +0000
Subject: [OpenSCAD] Github compare across branches
In-Reply-To: <78A6FCC5-D897-4E4B-B2D4-1D9A8249B807@kintel.net>
References: <CAEEmnrN6Sy8tg=a19sKhzuWuz5MKFwBTwypXG+-UcLL4jbasGQ@mail.gmail.com>
	<CAEEmnrMC=cKyVoOmMh5WxMiSg7HBV5RjOi0TDiTkdVc978a1mw@mail.gmail.com>
	<78A6FCC5-D897-4E4B-B2D4-1D9A8249B807@kintel.net>
Message-ID: <CAEEmnrOhW1ZkY78oemTSamfjAxHxkbVUwte0VC4NpxKKJvwgpw@mail.gmail.com>

Odd they don't support it. I even found some of their code that converted
two dots to three dots. It seems a massive gap in functionality and very
easy to implement if they use git as in their back end.

The reason I like using github compare is because it can show image
differences and STL differences graphically. I might have to create a dummy
repository and check in the files I want to compare sequentially and then
delete it again.

On 16 January 2016 at 16:36, Marius Kintel <marius at kintel.net> wrote:

> > On Jan 16, 2016, at 07:40 AM, nop head <nop.head at gmail.com> wrote:
> >
> > Looks like it should be two dots instead of three in git diff but Github
> compare doesn't support it, bummer!
> >
> Yep, that?s correct.
> You can simply do that on the cmd-line though: git diff
> origin/c++11..origin/master
> There might be git GUI wrappers showing a graphical diff as well, but I
> don?t generally use those.
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160116/0a072fa4/attachment.html>

From oz.at.michael at gmail.com  Sat Jan 16 17:36:16 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 16 Jan 2016 15:36:16 -0700 (MST)
Subject: [OpenSCAD] Anyone done anything on countersunk screw holes?
In-Reply-To: <CAEEmnrPO=KQTb2Zokd7wzUrFgijunt91O=LTFoyOQpcucoowTQ@mail.gmail.com>
References: <1452926954494-15728.post@n5.nabble.com>
	<CAEEmnrPVWFrbZO+v+GU5bNSQrhv97GpwELXOU7ccdqRBhN3YVg@mail.gmail.com>
	<569A3D5F.20408@gmail.com>
	<CAPmXz3WHy8SZBH1gZt_HTTUseGrOtuWxSYKLs6fyH1uf8kjm-g@mail.gmail.com>
	<CAEEmnrPO=KQTb2Zokd7wzUrFgijunt91O=LTFoyOQpcucoowTQ@mail.gmail.com>
Message-ID: <1452983776270-15740.post@n5.nabble.com>

Thanks all.

For posterity  this
<http://file.seekpart.com/keywordpdf/2011/3/22/20113228573866.pdf>   gives
dimensions for metric & a UN (I'm assuming from the 82d angle) countersunk
screws of various types as the DIN standards.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Anyone-done-anything-on-countersunk-screw-holes-tp15728p15740.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sat Jan 16 18:08:02 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 16 Jan 2016 16:08:02 -0700 (MST)
Subject: [OpenSCAD] Anyone done anything on countersunk screw holes?
In-Reply-To: <1452983776270-15740.post@n5.nabble.com>
References: <1452926954494-15728.post@n5.nabble.com>
	<CAEEmnrPVWFrbZO+v+GU5bNSQrhv97GpwELXOU7ccdqRBhN3YVg@mail.gmail.com>
	<569A3D5F.20408@gmail.com>
	<CAPmXz3WHy8SZBH1gZt_HTTUseGrOtuWxSYKLs6fyH1uf8kjm-g@mail.gmail.com>
	<CAEEmnrPO=KQTb2Zokd7wzUrFgijunt91O=LTFoyOQpcucoowTQ@mail.gmail.com>
	<1452983776270-15740.post@n5.nabble.com>
Message-ID: <1452985682985-15741.post@n5.nabble.com>

This is a handy reference too, one you have a reference - click in the boxes.
http://www.fasteners.eu/standards



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Anyone-done-anything-on-countersunk-screw-holes-tp15728p15741.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sat Jan 16 18:31:30 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 17 Jan 2016 00:31:30 +0100
Subject: [OpenSCAD] export() function.
In-Reply-To: <CAJgOqACe+VMYdnJY5x8_f+rmMVo_FZokPsac_JgruyN7jOQyDA@mail.gmail.com>
References: <CAEEmnrNi+aFFHDpMCHgt0w5Au2CFSUhmR+8AzOwpm3sAOGDzkg@mail.gmail.com>
	<56929395.50105@gmx.de>
	<CAEEmnrMewzFKgffJ3VU22Zz7cBGTxHsh13vjUJ0CQkZSQXgi_g@mail.gmail.com>
	<CAGV6i+O9sgCNyaiOJenQBUiB-o0FyaK-Noq8r3WkyjO-cxExCw@mail.gmail.com>
	<D7D0BDAD-9127-49C7-8EB5-EF4908F91633@kintel.net>
	<CAEEmnrMgeC+_QHrM0wcq2AAkjbKFxK5vdnSv5oRuaukuASysog@mail.gmail.com>
	<0DD0A662-FDA5-4FC1-9086-3A5BC1B51B0C@kintel.net>
	<CAEEmnrMDVn6CTjq7n7ebGm5HBOAG_Tx+v5i9ZM8UGRozG0EoFw@mail.gmail.com>
	<1452824710132-15691.post@n5.nabble.com>
	<CAEEmnrMx=4jSfbOR0BCBjQh94YdjpUSPrbO1PRPc8sJe_Qp+1A@mail.gmail.com>
	<1452920000224-15727.post@n5.nabble.com>
	<CAEEmnrM7bOP0fXmuaJ=g8D4045XV7tcw3Tyjn5V787sZecUYmQ@mail.gmail.com>
	<CAJgOqACe+VMYdnJY5x8_f+rmMVo_FZokPsac_JgruyN7jOQyDA@mail.gmail.com>
Message-ID: <569AD2D2.9020504@gmx.de>

On 01/16/2016 10:43 AM, Peter Falke wrote:
> We should think about how export() will work with costomizer on
> thingiverse.
> 
In the sense that we should not break the use case of OpenSCAD
running on a server, I agree.

Other than that, I don't see how we can care much as there seems
to be no feedback coming from thingiverse.

ciao,
  Torsten.




From bioinformatics at gringene.org  Sun Jan 17 19:16:19 2016
From: bioinformatics at gringene.org (David Eccles (gringer))
Date: Sun, 17 Jan 2016 17:16:19 -0700 (MST)
Subject: [OpenSCAD] 2dgraph; equation-based 2-D shapes in openSCAD
In-Reply-To: <1452904298279-15722.post@n5.nabble.com>
References: <1452904298279-15722.post@n5.nabble.com>
Message-ID: <1453076179701-15743.post@n5.nabble.com>

Making parametric curves is fairly easy in OpenSCAD now that it supports list
comprehesions and concatenation:



<http://forum.openscad.org/file/n15743/parametric_spiral.png> 



--
View this message in context: http://forum.openscad.org/2dgraph-equation-based-2-D-shapes-in-openSCAD-tp15722p15743.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jjnat86 at outlook.com  Sun Jan 17 22:56:05 2016
From: jjnat86 at outlook.com (jjnat14)
Date: Sun, 17 Jan 2016 20:56:05 -0700 (MST)
Subject: [OpenSCAD] module function not working
Message-ID: <1453089365734-15744.post@n5.nabble.com>

Hi, I'm a newbie and have just started exploring openScad. For some reason
whenever I try to create a module function, it returns a 'No top level
geometry to render' error. I've tried it multiple times and it always
results in this error. I'm clueless now. An example code and a screenshot of
the error are below.

radius=16;
sides=5;
thickness=1.5;

module polyshape(){

difference(){
    //outside part
offset(r=5,$fn=48)
circle(r=radius, $fn=sides);
    //inside part which is being subtracted
    offset(r=5-thickness,$fn=48)
circle(r=radius, $fn=sides);}
}

<http://forum.openscad.org/file/n15744/Screen_Shot_2016-01-17_at_10.png> 

Thanks in advance!



--
View this message in context: http://forum.openscad.org/module-function-not-working-tp15744.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From macdarren at mac.com  Sun Jan 17 23:06:25 2016
From: macdarren at mac.com (Darren DeVecchio)
Date: Sun, 17 Jan 2016 20:06:25 -0800
Subject: [OpenSCAD] module function not working
In-Reply-To: <1453089365734-15744.post@n5.nabble.com>
References: <1453089365734-15744.post@n5.nabble.com>
Message-ID: <8709F76A-6C2C-4285-832A-18B788B36C5B@mac.com>

This is pretty common for non-programmers.

The deal is you have created the module but you never invoke it.

you need to add the line:

polyshape();

in the main part of the program..I typically place it at the top

Darren


> On Jan 17, 2016, at 7:56 PM, jjnat14 <jjnat86 at outlook.com> wrote:
> 
> Hi, I'm a newbie and have just started exploring openScad. For some reason
> whenever I try to create a module function, it returns a 'No top level
> geometry to render' error. I've tried it multiple times and it always
> results in this error. I'm clueless now. An example code and a screenshot of
> the error are below.
> 
> radius=16;
> sides=5;
> thickness=1.5;
> 
> module polyshape(){
> 
> difference(){
>    //outside part
> offset(r=5,$fn=48)
> circle(r=radius, $fn=sides);
>    //inside part which is being subtracted
>    offset(r=5-thickness,$fn=48)
> circle(r=radius, $fn=sides);}
> }
> 
> <http://forum.openscad.org/file/n15744/Screen_Shot_2016-01-17_at_10.png> 
> 
> Thanks in advance!
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/module-function-not-working-tp15744.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From doug at moens.org  Sun Jan 17 23:06:36 2016
From: doug at moens.org (doug moen)
Date: Sun, 17 Jan 2016 23:06:36 -0500
Subject: [OpenSCAD] module function not working
In-Reply-To: <1453089365734-15744.post@n5.nabble.com>
References: <1453089365734-15744.post@n5.nabble.com>
Message-ID: <CAGV6i+M_p8-CiSy_NK8rKXNwx+GERB_o-sCLS_2u3fjOPL=Fzw@mail.gmail.com>

A module is like a function definition: it defines a named "function" which
takes arguments, and returns geometry as a result. It doesn't "do" anything
by itself.

If you don't call the module, then no geometry is generated.

Add the following code to the end of your script, which calls the module:

polyshape();

On 17 January 2016 at 22:56, jjnat14 <jjnat86 at outlook.com> wrote:

> Hi, I'm a newbie and have just started exploring openScad. For some reason
> whenever I try to create a module function, it returns a 'No top level
> geometry to render' error. I've tried it multiple times and it always
> results in this error. I'm clueless now. An example code and a screenshot
> of
> the error are below.
>
> radius=16;
> sides=5;
> thickness=1.5;
>
> module polyshape(){
>
> difference(){
>     //outside part
> offset(r=5,$fn=48)
> circle(r=radius, $fn=sides);
>     //inside part which is being subtracted
>     offset(r=5-thickness,$fn=48)
> circle(r=radius, $fn=sides);}
> }
>
> <http://forum.openscad.org/file/n15744/Screen_Shot_2016-01-17_at_10.png>
>
> Thanks in advance!
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/module-function-not-working-tp15744.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160117/f1f4cbb8/attachment.html>

From jjnat86 at outlook.com  Mon Jan 18 12:26:38 2016
From: jjnat86 at outlook.com (jjnat14)
Date: Mon, 18 Jan 2016 10:26:38 -0700 (MST)
Subject: [OpenSCAD] module function not working
In-Reply-To: <1453089365734-15744.post@n5.nabble.com>
References: <1453089365734-15744.post@n5.nabble.com>
Message-ID: <1453137998716-15748.post@n5.nabble.com>

Thank you 



--
View this message in context: http://forum.openscad.org/module-function-not-working-tp15744p15748.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Mon Jan 18 12:36:16 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Mon, 18 Jan 2016 18:36:16 +0100
Subject: [OpenSCAD] 2dgraph; equation-based 2-D shapes in openSCAD
In-Reply-To: <1453076179701-15743.post@n5.nabble.com>
References: <1452904298279-15722.post@n5.nabble.com>
	<1453076179701-15743.post@n5.nabble.com>
Message-ID: <569D2290.10704@arnholm.org>

On 18. jan. 2016 01:16, David Eccles (gringer) wrote:
> Making parametric curves is fairly easy in OpenSCAD now that it supports list
> comprehesions and concatenation:
>
> <http://forum.openscad.org/file/n15743/parametric_spiral.png>

What does the code to create the spiral look like?

Carsten Arnholm



From oz.at.michael at gmail.com  Mon Jan 18 15:59:18 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Mon, 18 Jan 2016 13:59:18 -0700 (MST)
Subject: [OpenSCAD] Export file as .stl but only saves as Certificate
 Trust List, what's wrong
In-Reply-To: <1453126549987-15747.post@n5.nabble.com>
References: <1453126549987-15747.post@n5.nabble.com>
Message-ID: <1453150758412-15750.post@n5.nabble.com>

Badvoc wrote
> Hi Guys, I am completely new to 3D modelling but have achieved what I
> need, I hope. Trouble is that every time I try to save the file as a .stl
> file so I can send it to the printers, it appears in my documentation as
> Certificate Trust List. I know this is probably a schoolboy error but what
> am I doing wrong? Please accept my apologies if I am "wasting your time"
> but everybody has to start somewhere and this is my somewhere
> 
> Kind regards
> 
> Duncan

That is just how your O.S. is set to recognise the .stl extension. You can
change that if it bothers you.
Sounds like Windows to me.
I recommend you change the following Explorer option. This lets you see what
it is.
Tools/Folder-options/View-tab & Uncheck 'Hide extensions for known file
types'




-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Export-file-as-stl-but-only-saves-as-Certificate-Trust-List-what-s-wrong-tp15747p15750.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From fred_dot_u at yahoo.com  Mon Jan 18 17:27:07 2016
From: fred_dot_u at yahoo.com (fred)
Date: Mon, 18 Jan 2016 22:27:07 +0000 (UTC)
Subject: [OpenSCAD] Export file as .stl but only saves as Certificate
 Trust List, what's wrong
In-Reply-To: <1453150758412-15750.post@n5.nabble.com>
References: <1453150758412-15750.post@n5.nabble.com>
Message-ID: <195307274.6397768.1453156027971.JavaMail.yahoo@mail.yahoo.com>

Duncan, if you have a program with which you want to open .STL files, right click on one of the .STL files and select "Open With" then pick your desired program from the list. Ensure that the "Always open with this program" or some such wording is checked in the box at the lower left. If the list that is presented to you when using the Open With option does not have the desired program, use the Browse button to find the executable file for your desired program. If you are uncertain of that location, pause here for a moment, locate the program you wish to have assigned to .STL files, right-click and select Properties. There will be an entry in the "Target" field with the information needed to enter in the Browse button field. Use Copy on this step and then use Paste to dump it into the Open With/Browse field.
A program can assign .STL files to automatically open them. Many of them do not, and if a new one is installed, it can take over the assignments, sometimes not to your liking.
I hope this is helpful.fred
 

    On Monday, January 18, 2016 4:00 PM, MichaelAtOz <oz.at.michael at gmail.com> wrote:
 

 Badvoc wrote
> Hi Guys, I am completely new to 3D modelling but have achieved what I
> need, I hope. Trouble is that every time I try to save the file as a .stl
> file so I can send it to the printers, it appears in my documentation as
> Certificate Trust List. I know this is probably a schoolboy error but what
> am I doing wrong? Please accept my apologies if I am "wasting your time"
> but everybody has to start somewhere and this is my somewhere
> 
> Kind regards
> 
> Duncan

That is just how your O.S. is set to recognise the .stl extension. You can
change that if it bothers you.
Sounds like Windows to me.
I recommend you change the following Explorer option. This lets you see what
it is.
Tools/Folder-options/View-tab & Uncheck 'Hide extensions for known file
types'




-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?? Fight it! http://www.ourfairdeal.org/ ? time is running out!
--
View this message in context: http://forum.openscad.org/Export-file-as-stl-but-only-saves-as-Certificate-Trust-List-what-s-wrong-tp15747p15750.html
Sent from the OpenSCAD mailing list archive at Nabble.com.

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160118/918a67d9/attachment.html>

From thehans at gmail.com  Mon Jan 18 20:13:00 2016
From: thehans at gmail.com (Hans L)
Date: Mon, 18 Jan 2016 19:13:00 -0600
Subject: [OpenSCAD] 2dgraph; equation-based 2-D shapes in openSCAD
In-Reply-To: <569D2290.10704@arnholm.org>
References: <1452904298279-15722.post@n5.nabble.com>
	<1453076179701-15743.post@n5.nabble.com>
	<569D2290.10704@arnholm.org>
Message-ID: <CAFoRp-OZQUtpSHvW6f9oTGg04M8Vp4nYZW8cgKA4RHjAxHA6OQ@mail.gmail.com>

Carsten, have a look at this github repo:
https://github.com/openscad/list-comprehension-demos

At the bottom is a 2d sprial example.

On Mon, Jan 18, 2016 at 11:36 AM, Carsten Arnholm <arnholm at arnholm.org>
wrote:

> On 18. jan. 2016 01:16, David Eccles (gringer) wrote:
>
>> Making parametric curves is fairly easy in OpenSCAD now that it supports
>> list
>> comprehesions and concatenation:
>>
>> <http://forum.openscad.org/file/n15743/parametric_spiral.png>
>>
>
> What does the code to create the spiral look like?
>
> Carsten Arnholm
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160118/b3a8a94a/attachment.html>

From thehans at gmail.com  Mon Jan 18 20:17:21 2016
From: thehans at gmail.com (Hans L)
Date: Mon, 18 Jan 2016 19:17:21 -0600
Subject: [OpenSCAD] 2dgraph; equation-based 2-D shapes in openSCAD
In-Reply-To: <CAFoRp-OZQUtpSHvW6f9oTGg04M8Vp4nYZW8cgKA4RHjAxHA6OQ@mail.gmail.com>
References: <1452904298279-15722.post@n5.nabble.com>
	<1453076179701-15743.post@n5.nabble.com>
	<569D2290.10704@arnholm.org>
	<CAFoRp-OZQUtpSHvW6f9oTGg04M8Vp4nYZW8cgKA4RHjAxHA6OQ@mail.gmail.com>
Message-ID: <CAFoRp-PHT8iHV_DCqML_=NZgjw_rHiNtu2VfRAKxuOeupXPv_A@mail.gmail.com>

Interesting, I normally view this mailing list through my gmail account.
David Eccles' post does not show any code here.  However I just viewed this
thread through nabble, and there is openscad code in his post.

Any ideas why the mailing list cuts that out?

On Mon, Jan 18, 2016 at 7:13 PM, Hans L <thehans at gmail.com> wrote:

> Carsten, have a look at this github repo:
> https://github.com/openscad/list-comprehension-demos
>
> At the bottom is a 2d sprial example.
>
> On Mon, Jan 18, 2016 at 11:36 AM, Carsten Arnholm <arnholm at arnholm.org>
> wrote:
>
>> On 18. jan. 2016 01:16, David Eccles (gringer) wrote:
>>
>>> Making parametric curves is fairly easy in OpenSCAD now that it supports
>>> list
>>> comprehesions and concatenation:
>>>
>>> <http://forum.openscad.org/file/n15743/parametric_spiral.png>
>>>
>>
>> What does the code to create the spiral look like?
>>
>> Carsten Arnholm
>>
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160118/ac41bd89/attachment.html>

From andrew at plumb.org  Mon Jan 18 20:49:15 2016
From: andrew at plumb.org (Andrew Plumb)
Date: Mon, 18 Jan 2016 20:49:15 -0500
Subject: [OpenSCAD] pointset primitive proof-of-concept (was Re: Reversed
	faces)
In-Reply-To: <4C24C846-427E-4984-9926-AEDAA75C7287@kintel.net>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<F1BC3736-C638-4D80-B5F0-063553F7C709@kintel.net>
	<1452878661814-15706.post@n5.nabble.com>
	<4C24C846-427E-4984-9926-AEDAA75C7287@kintel.net>
Message-ID: <420C9BB7-6F69-442E-B2C4-D370950797C4@plumb.org>

I decided to prod ?mesh processing" a bit with a pointset primitive stick.  Nothing formal commit-able to the master tree yet, but it ?does stuff that is (mostly) manifold."

https://github.com/clothbot/openscad/tree/read_issue1324 <https://github.com/clothbot/openscad/tree/read_issue1324>


> On Jan 15, 2016, at 1:15 PM, Marius Kintel <marius at kintel.net> wrote:
> 
> On Jan 15, 2016, at 12:24 PM, clothbot <andrew at plumb.org> wrote:
>> 
>> 
>> Has anyone (re)visited the "Polygon Mesh Processing" features available in
>> latest CGAL?
>> 
> I haven?t looked into it yet. CGAL APIs scare me : /
> 
> -Marius
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

--

"The future is already here.  It's just not very evenly distributed" -- William Gibson

Me: http://clothbot.com/wiki/ <http://clothbot.com/wiki/>



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160118/8efd6869/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pointset_primitive_lowres.png
Type: image/png
Size: 122596 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160118/8efd6869/attachment.png>

From karson_c_2000 at yahoo.com  Mon Jan 18 22:18:08 2016
From: karson_c_2000 at yahoo.com (K.C.C.)
Date: Mon, 18 Jan 2016 20:18:08 -0700 (MST)
Subject: [OpenSCAD] hull to create elbow not working
In-Reply-To: <54E61782.8070109@dbtgroup.com>
References: <54E61782.8070109@dbtgroup.com>
Message-ID: <1453173488364-15755.post@n5.nabble.com>

his seem to clear it up.

R=5;

rc=1.5;

x1=[0, -12.5, 4];


translate(x1+[0,0,R+rc]) // vertical part

cylinder(r=1.5, h=20, $fn=30);

rotate([90, 0, 45]) // horizontal part

translate([-8.9, 5.5, 8]+[0,0,R+rc-.7])

cylinder(r=1.5, h=20, $fn=30);


module bent(){

translate([0,0,R+rc])

rotate([0,90,0])

translate([0,-R,0])

difference(){

rotate_extrude($fn=60,convexity=4)

translate([R,0])circle(rc,$fn=30);

translate([0,-2*R,0])cube(4*R,true);

translate([-2*R,0,0])cube(4*R,true);

}

}

translate(x1)

rotate(44)

bent();



--
View this message in context: http://forum.openscad.org/hull-to-create-elbow-not-working-tp11667p15755.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Mon Jan 18 22:44:21 2016
From: runsun at gmail.com (runsun)
Date: Mon, 18 Jan 2016 20:44:21 -0700 (MST)
Subject: [OpenSCAD] 2dgraph; equation-based 2-D shapes in openSCAD
In-Reply-To: <CAFoRp-PHT8iHV_DCqML_=NZgjw_rHiNtu2VfRAKxuOeupXPv_A@mail.gmail.com>
References: <1452904298279-15722.post@n5.nabble.com>
	<1453076179701-15743.post@n5.nabble.com>
	<569D2290.10704@arnholm.org>
	<CAFoRp-OZQUtpSHvW6f9oTGg04M8Vp4nYZW8cgKA4RHjAxHA6OQ@mail.gmail.com>
	<CAFoRp-PHT8iHV_DCqML_=NZgjw_rHiNtu2VfRAKxuOeupXPv_A@mail.gmail.com>
Message-ID: <1453175061072-15756.post@n5.nabble.com>

thehans wrote
> Any ideas why the mailing list cuts that out?

I believe that the code uses &lt;raw&gt; tag, which will not be sent to
mailing list. 



-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git ), 


synwrite( 1 , 2 ); 



 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision( 1 , 2 ),

xl-control 








--
View this message in context: http://forum.openscad.org/2dgraph-equation-based-2-D-shapes-in-openSCAD-tp15722p15756.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Mon Jan 18 22:46:19 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Mon, 18 Jan 2016 20:46:19 -0700 (MST)
Subject: [OpenSCAD] 2dgraph; equation-based 2-D shapes in openSCAD
In-Reply-To: <CAFoRp-PHT8iHV_DCqML_=NZgjw_rHiNtu2VfRAKxuOeupXPv_A@mail.gmail.com>
References: <1452904298279-15722.post@n5.nabble.com>
	<1453076179701-15743.post@n5.nabble.com>
	<569D2290.10704@arnholm.org>
	<CAFoRp-OZQUtpSHvW6f9oTGg04M8Vp4nYZW8cgKA4RHjAxHA6OQ@mail.gmail.com>
	<CAFoRp-PHT8iHV_DCqML_=NZgjw_rHiNtu2VfRAKxuOeupXPv_A@mail.gmail.com>
Message-ID: <1453175179744-15757.post@n5.nabble.com>

If you use the < code > tags (under More button), that gets cut by nabble, a
supposed security feature I think.

Best to use < quote > ...code... < / quote >, that gets thru. 
DO NOT CLICK the Quote button, that will insert the previous post.

If you didn't get the graphic, it is the plain v's MIME setting on the
mailing list.
Go  here <http:// discuss at lists.openscad.org>   login (email in field at
bottom) to change your options. Or ask me to (PM).



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/2dgraph-equation-based-2-D-shapes-in-openSCAD-tp15722p15757.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Mon Jan 18 22:48:56 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Mon, 18 Jan 2016 20:48:56 -0700 (MST)
Subject: [OpenSCAD] 2dgraph; equation-based 2-D shapes in openSCAD
In-Reply-To: <1453175179744-15757.post@n5.nabble.com>
References: <1452904298279-15722.post@n5.nabble.com>
	<1453076179701-15743.post@n5.nabble.com>
	<569D2290.10704@arnholm.org>
	<CAFoRp-OZQUtpSHvW6f9oTGg04M8Vp4nYZW8cgKA4RHjAxHA6OQ@mail.gmail.com>
	<CAFoRp-PHT8iHV_DCqML_=NZgjw_rHiNtu2VfRAKxuOeupXPv_A@mail.gmail.com>
	<1453175179744-15757.post@n5.nabble.com>
Message-ID: <1453175336233-15758.post@n5.nabble.com>

oops...yes < raw >< /raw > not < code >



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/2dgraph-equation-based-2-D-shapes-in-openSCAD-tp15722p15758.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From bioinformatics at gringene.org  Tue Jan 19 05:06:09 2016
From: bioinformatics at gringene.org (David Eccles (gringer))
Date: Tue, 19 Jan 2016 03:06:09 -0700 (MST)
Subject: [OpenSCAD] 2dgraph; equation-based 2-D shapes in openSCAD
In-Reply-To: <CAFoRp-PHT8iHV_DCqML_=NZgjw_rHiNtu2VfRAKxuOeupXPv_A@mail.gmail.com>
References: <1452904298279-15722.post@n5.nabble.com>
	<1453076179701-15743.post@n5.nabble.com>
	<569D2290.10704@arnholm.org>
	<CAFoRp-OZQUtpSHvW6f9oTGg04M8Vp4nYZW8cgKA4RHjAxHA6OQ@mail.gmail.com>
	<CAFoRp-PHT8iHV_DCqML_=NZgjw_rHiNtu2VfRAKxuOeupXPv_A@mail.gmail.com>
Message-ID: <1453197969960-15759.post@n5.nabble.com>

Reproduced here for completeness (without any special tags):

r=1;
thickness=2;
loops=3;
linear_extrude(height=1) polygon(points= concat(
    [for(t = [90:360*loops]) 
        [(r-thickness+t/90)*sin(t),(r-thickness+t/90)*cos(t)]],
    [for(t = [360*loops:-1:90]) 
        [(r+t/90)*sin(t),(r+t/90)*cos(t)]]
        ));



--
View this message in context: http://forum.openscad.org/2dgraph-equation-based-2-D-shapes-in-openSCAD-tp15722p15759.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Tue Jan 19 09:11:52 2016
From: marius at kintel.net (Marius Kintel)
Date: Tue, 19 Jan 2016 09:11:52 -0500
Subject: [OpenSCAD] pointset primitive proof-of-concept (was Re:
	Reversed faces)
In-Reply-To: <420C9BB7-6F69-442E-B2C4-D370950797C4@plumb.org>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<F1BC3736-C638-4D80-B5F0-063553F7C709@kintel.net>
	<1452878661814-15706.post@n5.nabble.com>
	<4C24C846-427E-4984-9926-AEDAA75C7287@kintel.net>
	<420C9BB7-6F69-442E-B2C4-D370950797C4@plumb.org>
Message-ID: <BAE0A6AF-C334-45A2-BDE8-4BC5048488F4@kintel.net>


> On Jan 18, 2016, at 20:49 PM, Andrew Plumb <andrew at plumb.org> wrote:
> 
> I decided to prod ?mesh processing" a bit with a pointset primitive stick.  Nothing formal commit-able to the master tree yet, but it ?does stuff that is (mostly) manifold.?

Nice.

Btw., what?s the main difference between this, and doing a convex hull over the points?
Would this be used to e.g. tessellate a 3D scan point cloud?

 -Marius



From andrew at plumb.org  Tue Jan 19 11:55:44 2016
From: andrew at plumb.org (clothbot)
Date: Tue, 19 Jan 2016 09:55:44 -0700 (MST)
Subject: [OpenSCAD] pointset primitive proof-of-concept (was Re:
	Reversed faces)
In-Reply-To: <BAE0A6AF-C334-45A2-BDE8-4BC5048488F4@kintel.net>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<F1BC3736-C638-4D80-B5F0-063553F7C709@kintel.net>
	<1452878661814-15706.post@n5.nabble.com>
	<4C24C846-427E-4984-9926-AEDAA75C7287@kintel.net>
	<420C9BB7-6F69-442E-B2C4-D370950797C4@plumb.org>
	<BAE0A6AF-C334-45A2-BDE8-4BC5048488F4@kintel.net>
Message-ID: <1453222544591-15761.post@n5.nabble.com>

kintel wrote
>> On Jan 18, 2016, at 20:49 PM, Andrew Plumb &lt;

> andrew@

> &gt; wrote:
>> 
>> I decided to prod ?mesh processing" a bit with a pointset primitive
>> stick.  Nothing formal commit-able to the master tree yet, but it ?does
>> stuff that is (mostly) manifold.?
> 
> Nice.
> 
> Btw., what?s the main difference between this, and doing a convex hull
> over the points?
> Would this be used to e.g. tessellate a 3D scan point cloud?
> 
>  -Marius

The convex examples are just me picking my battles. Yes, I used the surface
reconstruction from point sets code as a starting point:

http://doc.cgal.org/latest/Surface_reconstruction_points_3/index.html#Chapter_Surface_Reconstruction_from_Point_Sets

...to get a feel for how all the different parameters interact.  I used the
POLYHEDRON primitive pieces as a starting-point for the code.

Next-up: pair it with a "read_xyz()" function to read in .xyz scannner
pointset files and see how far I get.

Andrew.




--
View this message in context: http://forum.openscad.org/Reversed-faces-tp15649p15761.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Tue Jan 19 12:23:01 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Tue, 19 Jan 2016 18:23:01 +0100
Subject: [OpenSCAD] 2dgraph; equation-based 2-D shapes in openSCAD
In-Reply-To: <1453197969960-15759.post@n5.nabble.com>
References: <1452904298279-15722.post@n5.nabble.com>
	<1453076179701-15743.post@n5.nabble.com> <569D2290.10704@arnholm.org>
	<CAFoRp-OZQUtpSHvW6f9oTGg04M8Vp4nYZW8cgKA4RHjAxHA6OQ@mail.gmail.com>
	<CAFoRp-PHT8iHV_DCqML_=NZgjw_rHiNtu2VfRAKxuOeupXPv_A@mail.gmail.com>
	<1453197969960-15759.post@n5.nabble.com>
Message-ID: <569E70F5.4030809@arnholm.org>

On 19. jan. 2016 11:06, David Eccles (gringer) wrote:
> Reproduced here for completeness (without any special tags):
>
> r=1;
> thickness=2;
> loops=3;
> linear_extrude(height=1) polygon(points= concat(
>      [for(t = [90:360*loops])
>          [(r-thickness+t/90)*sin(t),(r-thickness+t/90)*cos(t)]],
>      [for(t = [360*loops:-1:90])
>          [(r+t/90)*sin(t),(r+t/90)*cos(t)]]
>          ));
>


Thank you for sharing! It is rather "dense" syntax, I find it hard to 
follow.

Before you posted it, I tried the spiral using AngelScript CSG, here is 
the code for comparison
http://arnholm.org/software/as_csg/sweep_spiral.as

OpenSCAD csg file generated
http://arnholm.org/software/as_csg/sweep_spiral.csg

OpenSCAD view
http://arnholm.org/software/as_csg/sweep_spiral.png

The two include files:
http://arnholm.org/software/as_csg/lib_sweep.as
http://arnholm.org/software/as_csg/lib_degrees.as

Carsten Arnholm


From nop.head at gmail.com  Tue Jan 19 12:43:37 2016
From: nop.head at gmail.com (nop head)
Date: Tue, 19 Jan 2016 17:43:37 +0000
Subject: [OpenSCAD] 2dgraph; equation-based 2-D shapes in openSCAD
In-Reply-To: <569E70F5.4030809@arnholm.org>
References: <1452904298279-15722.post@n5.nabble.com>
	<1453076179701-15743.post@n5.nabble.com>
	<569D2290.10704@arnholm.org>
	<CAFoRp-OZQUtpSHvW6f9oTGg04M8Vp4nYZW8cgKA4RHjAxHA6OQ@mail.gmail.com>
	<CAFoRp-PHT8iHV_DCqML_=NZgjw_rHiNtu2VfRAKxuOeupXPv_A@mail.gmail.com>
	<1453197969960-15759.post@n5.nabble.com>
	<569E70F5.4030809@arnholm.org>
Message-ID: <CAEEmnrMiFHGzEx+nNQBSooSyLZv-r0OdKdadkBYr-AJ+s3TCOQ@mail.gmail.com>

Is this easier to follow?

r = 1;
thickness = 2;
loops = 3;

start_angle = 90;
end_angle = 360 * loops;

function spiral(r, t) = let(r = (r + t / 90)) [r * sin(t), r * cos(t)];

inner = [for(t = [start_angle : end_angle]) spiral(r - thickness, t) ];

outer = [for(t = [end_angle : -1 : start_angle]) spiral(r, t) ];

polygon(concat(inner, outer));


On 19 January 2016 at 17:23, Carsten Arnholm <arnholm at arnholm.org> wrote:

> On 19. jan. 2016 11:06, David Eccles (gringer) wrote:
>
>> Reproduced here for completeness (without any special tags):
>>
>> r=1;
>> thickness=2;
>> loops=3;
>> linear_extrude(height=1) polygon(points= concat(
>>      [for(t = [90:360*loops])
>>          [(r-thickness+t/90)*sin(t),(r-thickness+t/90)*cos(t)]],
>>      [for(t = [360*loops:-1:90])
>>          [(r+t/90)*sin(t),(r+t/90)*cos(t)]]
>>          ));
>>
>>
>
> Thank you for sharing! It is rather "dense" syntax, I find it hard to
> follow.
>
> Before you posted it, I tried the spiral using AngelScript CSG, here is
> the code for comparison
> http://arnholm.org/software/as_csg/sweep_spiral.as
>
> OpenSCAD csg file generated
> http://arnholm.org/software/as_csg/sweep_spiral.csg
>
> OpenSCAD view
> http://arnholm.org/software/as_csg/sweep_spiral.png
>
> The two include files:
> http://arnholm.org/software/as_csg/lib_sweep.as
> http://arnholm.org/software/as_csg/lib_degrees.as
>
> Carsten Arnholm
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160119/d8eec819/attachment.html>

From arnholm at arnholm.org  Tue Jan 19 13:00:03 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Tue, 19 Jan 2016 19:00:03 +0100
Subject: [OpenSCAD] 2dgraph; equation-based 2-D shapes in openSCAD
In-Reply-To: <CAEEmnrMiFHGzEx+nNQBSooSyLZv-r0OdKdadkBYr-AJ+s3TCOQ@mail.gmail.com>
References: <1452904298279-15722.post@n5.nabble.com>
	<1453076179701-15743.post@n5.nabble.com> <569D2290.10704@arnholm.org>
	<CAFoRp-OZQUtpSHvW6f9oTGg04M8Vp4nYZW8cgKA4RHjAxHA6OQ@mail.gmail.com>
	<CAFoRp-PHT8iHV_DCqML_=NZgjw_rHiNtu2VfRAKxuOeupXPv_A@mail.gmail.com>
	<1453197969960-15759.post@n5.nabble.com> <569E70F5.4030809@arnholm.org>
	<CAEEmnrMiFHGzEx+nNQBSooSyLZv-r0OdKdadkBYr-AJ+s3TCOQ@mail.gmail.com>
Message-ID: <569E79A3.2040705@arnholm.org>

On 19. jan. 2016 18:43, nop head wrote:
> Is this easier to follow?

Yes, it is much better. Interestingly, I could not figure out what the 
"dense" code did even though I saw the result. I only figured it out by 
looking at the generated .csg. Apparently, a spiral polygon is created 
and extruded in Z. In my code the approach is quite different, the 
rectangle cross section is swept along a spiral path.

Carsten Arnholm



From nop.head at gmail.com  Tue Jan 19 13:06:09 2016
From: nop.head at gmail.com (nop head)
Date: Tue, 19 Jan 2016 18:06:09 +0000
Subject: [OpenSCAD] 2dgraph; equation-based 2-D shapes in openSCAD
In-Reply-To: <569E79A3.2040705@arnholm.org>
References: <1452904298279-15722.post@n5.nabble.com>
	<1453076179701-15743.post@n5.nabble.com>
	<569D2290.10704@arnholm.org>
	<CAFoRp-OZQUtpSHvW6f9oTGg04M8Vp4nYZW8cgKA4RHjAxHA6OQ@mail.gmail.com>
	<CAFoRp-PHT8iHV_DCqML_=NZgjw_rHiNtu2VfRAKxuOeupXPv_A@mail.gmail.com>
	<1453197969960-15759.post@n5.nabble.com>
	<569E70F5.4030809@arnholm.org>
	<CAEEmnrMiFHGzEx+nNQBSooSyLZv-r0OdKdadkBYr-AJ+s3TCOQ@mail.gmail.com>
	<569E79A3.2040705@arnholm.org>
Message-ID: <CAEEmnrMK=wmv1DBLWSZEoz=TQ6GPv4nT5KTThEpvgD8LwiX_Zg@mail.gmail.com>

Yes I didn't bother extruding it 1mm because OpenScad shows it 1mm thick
anyway in preview and the subject was 2D shapes.

On 19 January 2016 at 18:00, Carsten Arnholm <arnholm at arnholm.org> wrote:

> On 19. jan. 2016 18:43, nop head wrote:
>
>> Is this easier to follow?
>>
>
> Yes, it is much better. Interestingly, I could not figure out what the
> "dense" code did even though I saw the result. I only figured it out by
> looking at the generated .csg. Apparently, a spiral polygon is created and
> extruded in Z. In my code the approach is quite different, the rectangle
> cross section is swept along a spiral path.
>
>
> Carsten Arnholm
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160119/91bd5127/attachment.html>

From superaorta at gmail.com  Tue Jan 19 14:07:21 2016
From: superaorta at gmail.com (superaorta at gmail.com)
Date: Tue, 19 Jan 2016 19:07:21 +0000
Subject: [OpenSCAD] Extrude curve generated elsewhere
Message-ID: <3930175.dLXC4VFP7N@lunesta>



I want to generate a shape according to an equation and somehow get this into 
openscad and then extrude it into a 3d form.

The curve consists of lots and lots of points and while I could script up 
something to generate code like this:

polygon([[0,0],[0,0.1].............) it would be a huge pain in the arse on 
account of the number of points I want to use.

I've tried rendering the 2-d slice as a .png and then using surface to load it 
(this would be ok for my purposes) but surface insists on sticking voxels 
where the height=0 which I don't want and something went wrong in openscad
because openscad rapidly needed 13Gb RAM to import my .png so I gave up.

Next I thought I'd try rendering the bit map in something that could vectorise 
it and then save as .dxf format but openscad did not like the dxf inkscape 
produced (unsupported entity SEQEND VERTEX POLYLINE).

Next I thought I'd script the shape generation in .off format but while I can 
produce a nice 2d shape using import("myfile.off") I cannot extrude it into 3D 
because openscad chokes on it complaining "WARNING: Ignoring 3D child object 
for 2D operation ".

I can't generate the points in openscad because the proceedure is too complex.

Suggestions please as to how I can load points into open scad, convert them to 
a polygon and extrude them please!

Thanks

SASA




From fred_dot_u at yahoo.com  Tue Jan 19 14:14:53 2016
From: fred_dot_u at yahoo.com (fred)
Date: Tue, 19 Jan 2016 19:14:53 +0000 (UTC)
Subject: [OpenSCAD] Extrude curve generated elsewhere
In-Reply-To: <3930175.dLXC4VFP7N@lunesta>
References: <3930175.dLXC4VFP7N@lunesta>
Message-ID: <842597824.8108459.1453230893212.JavaMail.yahoo@mail.yahoo.com>

SASA, have you tried using Inkscape to create your 2d shape, followed with the Inkscape extension for OpenSCAD? I've had good success with the limited projects I've created.
 

    On Tuesday, January 19, 2016 2:08 PM, "superaorta at gmail.com" <superaorta at gmail.com> wrote:
 

 

I want to generate a shape according to an equation and somehow get this into 
openscad and then extrude it into a 3d form.

The curve consists of lots and lots of points and while I could script up 
something to generate code like this:

polygon([[0,0],[0,0.1].............) it would be a huge pain in the arse on 
account of the number of points I want to use.

I've tried rendering the 2-d slice as a .png and then using surface to load it 
(this would be ok for my purposes) but surface insists on sticking voxels 
where the height=0 which I don't want and something went wrong in openscad
because openscad rapidly needed 13Gb RAM to import my .png so I gave up.

Next I thought I'd try rendering the bit map in something that could vectorise 
it and then save as .dxf format but openscad did not like the dxf inkscape 
produced (unsupported entity SEQEND VERTEX POLYLINE).

Next I thought I'd script the shape generation in .off format but while I can 
produce a nice 2d shape using import("myfile.off") I cannot extrude it into 3D 
because openscad chokes on it complaining "WARNING: Ignoring 3D child object 
for 2D operation ".

I can't generate the points in openscad because the proceedure is too complex.

Suggestions please as to how I can load points into open scad, convert them to 
a polygon and extrude them please!

Thanks

SASA



_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


   
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160119/17f1a764/attachment.html>

From Torsten.Paul at gmx.de  Tue Jan 19 14:29:09 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Tue, 19 Jan 2016 20:29:09 +0100
Subject: [OpenSCAD] Extrude curve generated elsewhere
In-Reply-To: <3930175.dLXC4VFP7N@lunesta>
References: <3930175.dLXC4VFP7N@lunesta>
Message-ID: <569E8E85.9010602@gmx.de>

On 01/19/2016 08:07 PM, superaorta at gmail.com wrote:
> I want to generate a shape according to an equation and somehow get this into 
> openscad and then extrude it into a 3d form.
> 
[snip]
> 
> I can't generate the points in openscad because the proceedure is too complex.
> 
If the equation is not secret, maybe post it anyway? Someone might have
a solution how to do it in OpenSCAD.

> Suggestions please as to how I can load points into open scad, convert them to 
> a polygon and extrude them please!
> 
If you already have the points as text data, you can just stick those into a file,
e.g. as points.scad

[ x1, y1 ],
[ x2, y2 ],
...

and include this into some other OpenSCAD file

points = [
include <points.scad>
];
polygon(points);

ciao,
  Torsten.



From superaorta at gmail.com  Tue Jan 19 14:40:38 2016
From: superaorta at gmail.com (superaorta at gmail.com)
Date: Tue, 19 Jan 2016 19:40:38 +0000
Subject: [OpenSCAD] Extrude curve generated elsewhere
In-Reply-To: <569E8E85.9010602@gmx.de>
References: <3930175.dLXC4VFP7N@lunesta> <569E8E85.9010602@gmx.de>
Message-ID: <2001470.28c2aZ32dD@lunesta>


Torsten,

Ok that's a nice suggestion I'll give it a go -

The "equation" isn't secret but is a lengthy matlab script with lots of calls 
to library functions that would be a big undertaking to redo in openscad.

Thanks,

SASA





On Tuesday 19 Jan 2016 20:29:09 Torsten Paul wrote:
> On 01/19/2016 08:07 PM, superaorta at gmail.com wrote:
> > I want to generate a shape according to an equation and somehow get this
> > into openscad and then extrude it into a 3d form.
> 
> [snip]
> 
> > I can't generate the points in openscad because the proceedure is too
> > complex.
> If the equation is not secret, maybe post it anyway? Someone might have
> a solution how to do it in OpenSCAD.
> 
> > Suggestions please as to how I can load points into open scad, convert
> > them to a polygon and extrude them please!
> 
> If you already have the points as text data, you can just stick those into a
> file, e.g. as points.scad
> 
> [ x1, y1 ],
> [ x2, y2 ],
> ...
> 
> and include this into some other OpenSCAD file
> 
> points = [
> include <points.scad>
> ];
> polygon(points);
> 
> ciao,
>   Torsten.
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From superaorta at gmail.com  Tue Jan 19 14:42:06 2016
From: superaorta at gmail.com (superaorta at gmail.com)
Date: Tue, 19 Jan 2016 19:42:06 +0000
Subject: [OpenSCAD] Extrude curve generated elsewhere
In-Reply-To: <842597824.8108459.1453230893212.JavaMail.yahoo@mail.yahoo.com>
References: <3930175.dLXC4VFP7N@lunesta>
	<842597824.8108459.1453230893212.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <1533856.Zv7Yz9ccWH@lunesta>


Fred,

I haven't tried this extension but I think I'll try Torsten's suggestion first 
as this is more suited to scripting.

thanks anyway,


SASA


On Tuesday 19 Jan 2016 19:14:53 fred wrote:
> SASA, have you tried using Inkscape to create your 2d shape, followed with
> the Inkscape extension for OpenSCAD? I've had good success with the limited
> projects I've created.
> 
> 
>     On Tuesday, January 19, 2016 2:08 PM, "superaorta at gmail.com"
> <superaorta at gmail.com> wrote:
> 
> 
> 
> 
> I want to generate a shape according to an equation and somehow get this
> into openscad and then extrude it into a 3d form.
> 
> The curve consists of lots and lots of points and while I could script up
> something to generate code like this:
> 
> polygon([[0,0],[0,0.1].............) it would be a huge pain in the arse on
> account of the number of points I want to use.
> 
> I've tried rendering the 2-d slice as a .png and then using surface to load
> it (this would be ok for my purposes) but surface insists on sticking
> voxels where the height=0 which I don't want and something went wrong in
> openscad because openscad rapidly needed 13Gb RAM to import my .png so I
> gave up.
> 
> Next I thought I'd try rendering the bit map in something that could
> vectorise it and then save as .dxf format but openscad did not like the dxf
> inkscape produced (unsupported entity SEQEND VERTEX POLYLINE).
> 
> Next I thought I'd script the shape generation in .off format but while I
> can produce a nice 2d shape using import("myfile.off") I cannot extrude it
> into 3D because openscad chokes on it complaining "WARNING: Ignoring 3D
> child object for 2D operation ".
> 
> I can't generate the points in openscad because the proceedure is too
> complex.
> 
> Suggestions please as to how I can load points into open scad, convert them
> to a polygon and extrude them please!
> 
> Thanks
> 
> SASA
> 
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From marius at kintel.net  Tue Jan 19 15:13:39 2016
From: marius at kintel.net (Marius Kintel)
Date: Tue, 19 Jan 2016 15:13:39 -0500
Subject: [OpenSCAD] Extrude curve generated elsewhere
In-Reply-To: <3930175.dLXC4VFP7N@lunesta>
References: <3930175.dLXC4VFP7N@lunesta>
Message-ID: <FFCF2267-D01A-45EC-927E-1AEDF3C65F8A@kintel.net>

Hey,

> [?] but openscad did not like the dxf inkscape 
> produced (unsupported entity SEQEND VERTEX POLYLINE).
You may have more luck with exporting as "Desktop Cutting Plotter (R13) (*.dxf)?

We also have an SVG importer in the works, but it requires a bit more work: https://github.com/openscad/openscad/pull/834

..and there?s the Inkscape plugin for saving OpenSCAD files: http://www.thingiverse.com/thing:25036

 -Marius



From superaorta at gmail.com  Tue Jan 19 15:34:12 2016
From: superaorta at gmail.com (superaorta at gmail.com)
Date: Tue, 19 Jan 2016 20:34:12 +0000
Subject: [OpenSCAD] Extrude curve generated elsewhere
In-Reply-To: <FFCF2267-D01A-45EC-927E-1AEDF3C65F8A@kintel.net>
References: <3930175.dLXC4VFP7N@lunesta>
	<FFCF2267-D01A-45EC-927E-1AEDF3C65F8A@kintel.net>
Message-ID: <1506910.EkVM6mQSj2@lunesta>



Thanks everyone!

Torsten's suggestion is working perfectly and is well suited to my needs.

My scad file now looks like this:


p1=[ include <points_1.scad> ];
linear_extrude(height=10)polygon(p1);
p2=[ include <points_2.scad> ];
linear_extrude(height=10)polygon(p2);
p3=[ include <points_3.scad> ];
linear_extrude(height=10)polygon(p3);
p4=[ include <points_4.scad> ];
linear_extrude(height=10)polygon(p4);
...

If anyone knows how I might parameterise this neatly so I could do something 
like

for i=1:20
	p(i)=[ include <points_$i.scad];
	linear_extrude(height=10)polygon(p(i));
	end

That would be great, but for now it works perfectly...


SASA

On Tuesday 19 Jan 2016 15:13:39 Marius Kintel wrote:
> Hey,
> 
> > [?] but openscad did not like the dxf inkscape
> > produced (unsupported entity SEQEND VERTEX POLYLINE).
> 
> You may have more luck with exporting as "Desktop Cutting Plotter (R13)
> (*.dxf)?
> 
> We also have an SVG importer in the works, but it requires a bit more work:
> https://github.com/openscad/openscad/pull/834
> 
> ..and there?s the Inkscape plugin for saving OpenSCAD files:
> http://www.thingiverse.com/thing:25036
> 
>  -Marius
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From Torsten.Paul at gmx.de  Tue Jan 19 16:15:34 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Tue, 19 Jan 2016 22:15:34 +0100
Subject: [OpenSCAD] Extrude curve generated elsewhere
In-Reply-To: <1506910.EkVM6mQSj2@lunesta>
References: <3930175.dLXC4VFP7N@lunesta>
	<FFCF2267-D01A-45EC-927E-1AEDF3C65F8A@kintel.net>
	<1506910.EkVM6mQSj2@lunesta>
Message-ID: <569EA776.2060809@gmx.de>

On 01/19/2016 09:34 PM, superaorta at gmail.com wrote:
> If anyone knows how I might parameterise this neatly so I could do something 
> like
> 
> for i=1:20
> 	p(i)=[ include <points_$i.scad];
> 	linear_extrude(height=10)polygon(p(i));
> 	end
> 
> That would be great, but for now it works perfectly...
>
Add another dimension to the array and import into a single
variable?

ciao,
  Torsten.



From runsun at gmail.com  Tue Jan 19 20:21:47 2016
From: runsun at gmail.com (runsun)
Date: Tue, 19 Jan 2016 18:21:47 -0700 (MST)
Subject: [OpenSCAD] Script parameterization with "In-Doc UI" in SynWrite
Message-ID: <1453252907034-15774.post@n5.nabble.com>

Script Parameterization
<https://github.com/openscad/openscad/wiki/Project:-Form-based-script-parameterization>  
is one of the future goals of OpenSCAD. With the help of event handler
capability in SynWrite editor, I did a lil experiment to create something
I'd call "In-Doc UI" (user-interface) to achieve some basic features of that
goal:

<http://forum.openscad.org/file/n15774/20160119_idu_demo.gif> 




-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git ), 


synwrite( 1 , 2 ); 



 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision( 1 , 2 ),

xl-control 








--
View this message in context: http://forum.openscad.org/Script-parameterization-with-In-Doc-UI-in-SynWrite-tp15774.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Tue Jan 19 20:22:32 2016
From: runsun at gmail.com (runsun)
Date: Tue, 19 Jan 2016 18:22:32 -0700 (MST)
Subject: [OpenSCAD] Script parameterization with "In-Doc UI" in SynWrite
In-Reply-To: <1453252907034-15774.post@n5.nabble.com>
References: <1453252907034-15774.post@n5.nabble.com>
Message-ID: <1453252952874-15775.post@n5.nabble.com>

mmmhhh this gif doesn't work. let me figure out an alternative.



-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git ), 


synwrite( 1 , 2 ); 



 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision( 1 , 2 ),

xl-control 








--
View this message in context: http://forum.openscad.org/Script-parameterization-with-In-Doc-UI-in-SynWrite-tp15774p15775.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Tue Jan 19 20:38:20 2016
From: runsun at gmail.com (runsun)
Date: Tue, 19 Jan 2016 18:38:20 -0700 (MST)
Subject: [OpenSCAD] Script parameterization with "In-Doc UI" in SynWrite
In-Reply-To: <1453252952874-15775.post@n5.nabble.com>
References: <1453252907034-15774.post@n5.nabble.com>
	<1453252952874-15775.post@n5.nabble.com>
Message-ID: <1453253900725-15776.post@n5.nabble.com>

Check it out on youtube:

*OpenSCAD Parameterization via"In-Doc UI" in SynWrite*
https://www.youtube.com/watch?v=PQHdxmk1gew



-----

$  Runsun Pan, PhD 

$ libs: 

doctest , 

faces ( git ), 

offline doc ( git ),

runscad.py( 1 , 2 , git ), 


synwrite( 1 , 2 ); 



 $ tips: 

hash( 1 , 2 ),

sweep ,

var( 1 , 2 ),

lerp ,

animGif ,
 
precision( 1 , 2 ),

xl-control 








--
View this message in context: http://forum.openscad.org/Script-parameterization-with-In-Doc-UI-in-SynWrite-tp15774p15776.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrew at plumb.org  Wed Jan 20 20:57:00 2016
From: andrew at plumb.org (clothbot)
Date: Wed, 20 Jan 2016 18:57:00 -0700 (MST)
Subject: [OpenSCAD] pointset primitive proof-of-concept (was Re:
	Reversed faces)
In-Reply-To: <1453222544591-15761.post@n5.nabble.com>
References: <CAEEmnrOafB5JFw1+eckFL5ixDUnF0+kbzcEf8duY+LLcBe5n1A@mail.gmail.com>
	<F1BC3736-C638-4D80-B5F0-063553F7C709@kintel.net>
	<1452878661814-15706.post@n5.nabble.com>
	<4C24C846-427E-4984-9926-AEDAA75C7287@kintel.net>
	<420C9BB7-6F69-442E-B2C4-D370950797C4@plumb.org>
	<BAE0A6AF-C334-45A2-BDE8-4BC5048488F4@kintel.net>
	<1453222544591-15761.post@n5.nabble.com>
Message-ID: <1453341420829-15777.post@n5.nabble.com>

Mwahahaha! Function read_xyz() added.

https://github.com/clothbot/openscad/tree/read_issue1324

https://github.com/clothbot/ClothBotCreations/blob/master/examples/test_read_xyz.scad

https://github.com/clothbot/ClothBotCreations/blob/master/examples/oni.xyz

Aside: The error is expected because of the read_xyz("invalid.xyz") call.

<http://forum.openscad.org/file/n15777/test_xyz_screenshot.png> 



--
View this message in context: http://forum.openscad.org/Reversed-faces-tp15649p15777.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marc at inbx.com  Wed Jan 20 22:39:53 2016
From: marc at inbx.com (Marc)
Date: Wed, 20 Jan 2016 20:39:53 -0700 (MST)
Subject: [OpenSCAD] 2015.03 preview not working
In-Reply-To: <7DD52C3E-0DC4-4CA9-BFA0-ABBC07CCA0D5@kintel.net>
References: <1426899150812-12101.post@n5.nabble.com>
	<1426901539637-12102.post@n5.nabble.com>
	<1426905226660-12103.post@n5.nabble.com>
	<1426907675104-12104.post@n5.nabble.com>
	<1427061067203-12145.post@n5.nabble.com>
	<1449674984388-15061.post@n5.nabble.com>
	<7DD52C3E-0DC4-4CA9-BFA0-ABBC07CCA0D5@kintel.net>
Message-ID: <1453347593201-15778.post@n5.nabble.com>

I know this post is a little old, but I'm hoping people are still watching.
I'm having the same issues here. I have a Surface Book with an Intel i7,
16gb of RAM.
If I Force Goldfeather the software locks up.

I've tried with the latest release, the release referenced in this post as
well as the Development Snapshot.

Thank you so much for your help.

Here is the content of the Help -> Library Info:
OpenSCAD Version: 2015.10.17 (git fba8130)
System information: Windows 8 (v6.2.0.0) 4 CPUs 15.93 GB RAM
Compiler: GCC "5.1.0" 64bit
Boost version: 1_57
Eigen version: 3.2.2
CGAL version, kernels: 4.5, Cartesian, Extended_cartesian, Epeck
OpenCSG version: OpenCSG 1.4.0
Qt version: 5.4.1
QScintilla version: 2.8.4
MingW build: MingW64
GLib version: 2.42.1
Application Path: C:/Users/marc/Desktop/openscad-2015.10.17
Documents Path: C:\Users\marc\Documents
Resource Path: C:/Users/marc/Desktop/openscad-2015.10.17
User Library Path: C:/Users/marc/Documents/OpenSCAD/libraries
User Config Path: C:\Users\marc\AppData\Local/OpenSCAD
Backup Path: C:/Users/marc/Documents/OpenSCAD/backups
OPENSCADPATH: 
OpenSCAD library path:
C:/Users/marc/Documents/OpenSCAD/libraries
C:/Users/marc/Desktop/openscad-2015.10.17\libraries

OPENSCAD_FONT_PATH: 
OpenSCAD font path:
GLEW version: 1.12.0
OpenGL Version: 4.4.0 - Build 20.19.15.4326
GL Renderer: Intel(R) HD Graphics 520
GL Vendor: Intel
RGBA(8888), depth(24), stencil(8)
GL_ARB_framebuffer_object: yes
GL_EXT_framebuffer_object: yes
GL_EXT_packed_depth_stencil: yes

Using QGLWidget

GL Extensions:
GL_3DFX_texture_compression_FXT1
GL_AMD_depth_clamp_separate
GL_AMD_vertex_shader_layer
GL_AMD_vertex_shader_viewport_index
GL_ARB_ES2_compatibility
GL_ARB_ES3_compatibility
GL_ARB_arrays_of_arrays
GL_ARB_base_instance
GL_ARB_blend_func_extended
GL_ARB_buffer_storage
GL_ARB_cl_event
GL_ARB_clear_buffer_object
GL_ARB_clear_texture
GL_ARB_clip_control
GL_ARB_color_buffer_float
GL_ARB_compatibility
GL_ARB_compressed_texture_pixel_storage
GL_ARB_compute_shader
GL_ARB_conservative_depth
GL_ARB_copy_buffer
GL_ARB_copy_image
GL_ARB_debug_output
GL_ARB_depth_buffer_float
GL_ARB_depth_clamp
GL_ARB_depth_texture
GL_ARB_draw_buffers
GL_ARB_draw_buffers_blend
GL_ARB_draw_elements_base_vertex
GL_ARB_draw_indirect
GL_ARB_draw_instanced
GL_ARB_enhanced_layouts
GL_ARB_explicit_attrib_location
GL_ARB_explicit_uniform_location
GL_ARB_fragment_coord_conventions
GL_ARB_fragment_layer_viewport
GL_ARB_fragment_program
GL_ARB_fragment_program_shadow
GL_ARB_fragment_shader
GL_ARB_fragment_shader_interlock
GL_ARB_framebuffer_no_attachments
GL_ARB_framebuffer_object
GL_ARB_framebuffer_sRGB
GL_ARB_geometry_shader4
GL_ARB_get_program_binary
GL_ARB_gpu_shader5
GL_ARB_gpu_shader_fp64
GL_ARB_half_float_pixel
GL_ARB_half_float_vertex
GL_ARB_indirect_parameters
GL_ARB_instanced_arrays
GL_ARB_internalformat_query
GL_ARB_internalformat_query2
GL_ARB_invalidate_subdata
GL_ARB_map_buffer_alignment
GL_ARB_map_buffer_range
GL_ARB_multi_bind
GL_ARB_multi_draw_indirect
GL_ARB_multisample
GL_ARB_multitexture
GL_ARB_occlusion_query
GL_ARB_occlusion_query2
GL_ARB_pixel_buffer_object
GL_ARB_point_parameters
GL_ARB_point_sprite
GL_ARB_program_interface_query
GL_ARB_provoking_vertex
GL_ARB_query_buffer_object
GL_ARB_robust_buffer_access_behavior
GL_ARB_robustness
GL_ARB_sample_shading
GL_ARB_sampler_objects
GL_ARB_seamless_cube_map
GL_ARB_seamless_cubemap_per_texture
GL_ARB_separate_shader_objects
GL_ARB_shader_atomic_counters
GL_ARB_shader_bit_encoding
GL_ARB_shader_image_load_store
GL_ARB_shader_image_size
GL_ARB_shader_objects
GL_ARB_shader_precision
GL_ARB_shader_stencil_export
GL_ARB_shader_storage_buffer_object
GL_ARB_shader_subroutine
GL_ARB_shading_language_100
GL_ARB_shading_language_420pack
GL_ARB_shading_language_packing
GL_ARB_shadow
GL_ARB_stencil_texturing
GL_ARB_sync
GL_ARB_tessellation_shader
GL_ARB_texture_border_clamp
GL_ARB_texture_buffer_object_rgb32
GL_ARB_texture_buffer_range
GL_ARB_texture_compression
GL_ARB_texture_compression_bptc
GL_ARB_texture_compression_rgtc
GL_ARB_texture_cube_map
GL_ARB_texture_cube_map_array
GL_ARB_texture_env_add
GL_ARB_texture_env_combine
GL_ARB_texture_env_crossbar
GL_ARB_texture_env_dot3
GL_ARB_texture_float
GL_ARB_texture_gather
GL_ARB_texture_mirror_clamp_to_edge
GL_ARB_texture_mirrored_repeat
GL_ARB_texture_multisample
GL_ARB_texture_non_power_of_two
GL_ARB_texture_query_levels
GL_ARB_texture_query_lod
GL_ARB_texture_rectangle
GL_ARB_texture_rg
GL_ARB_texture_rgb10_a2ui
GL_ARB_texture_stencil8
GL_ARB_texture_storage
GL_ARB_texture_storage_multisample
GL_ARB_texture_swizzle
GL_ARB_texture_view
GL_ARB_timer_query
GL_ARB_transform_feedback2
GL_ARB_transform_feedback3
GL_ARB_transform_feedback_instanced
GL_ARB_transpose_matrix
GL_ARB_uniform_buffer_object
GL_ARB_vertex_array_bgra
GL_ARB_vertex_array_object
GL_ARB_vertex_attrib_64bit
GL_ARB_vertex_attrib_binding
GL_ARB_vertex_buffer_object
GL_ARB_vertex_program
GL_ARB_vertex_shader
GL_ARB_vertex_type_10f_11f_11f_rev
GL_ARB_vertex_type_2_10_10_10_rev
GL_ARB_viewport_array
GL_ARB_window_pos
GL_ATI_separate_stencil
GL_EXT_abgr
GL_EXT_bgra
GL_EXT_blend_color
GL_EXT_blend_equation_separate
GL_EXT_blend_func_separate
GL_EXT_blend_minmax
GL_EXT_blend_subtract
GL_EXT_clip_volume_hint
GL_EXT_compiled_vertex_array
GL_EXT_direct_state_access
GL_EXT_draw_buffers2
GL_EXT_draw_range_elements
GL_EXT_fog_coord
GL_EXT_framebuffer_blit
GL_EXT_framebuffer_multisample
GL_EXT_framebuffer_object
GL_EXT_geometry_shader4
GL_EXT_gpu_program_parameters
GL_EXT_gpu_shader4
GL_EXT_multi_draw_arrays
GL_EXT_packed_depth_stencil
GL_EXT_packed_float
GL_EXT_packed_pixels
GL_EXT_polygon_offset_clamp
GL_EXT_rescale_normal
GL_EXT_secondary_color
GL_EXT_separate_specular_color
GL_EXT_shader_framebuffer_fetch
GL_EXT_shader_integer_mix
GL_EXT_shadow_funcs
GL_EXT_stencil_two_side
GL_EXT_stencil_wrap
GL_EXT_texture3D
GL_EXT_texture_array
GL_EXT_texture_compression_s3tc
GL_EXT_texture_edge_clamp
GL_EXT_texture_env_add
GL_EXT_texture_env_combine
GL_EXT_texture_filter_anisotropic
GL_EXT_texture_integer
GL_EXT_texture_lod_bias
GL_EXT_texture_rectangle
GL_EXT_texture_sRGB
GL_EXT_texture_sRGB_decode
GL_EXT_texture_shared_exponent
GL_EXT_texture_snorm
GL_EXT_texture_storage
GL_EXT_texture_swizzle
GL_EXT_transform_feedback
GL_IBM_texture_mirrored_repeat
GL_INTEL_conservative_rasterization
GL_INTEL_fragment_shader_ordering
GL_INTEL_map_texture
GL_INTEL_multi_rate_fragment_shader
GL_INTEL_performance_query
GL_KHR_blend_equation_advanced
GL_KHR_debug
GL_KHR_texture_compression_astc_hdr
GL_KHR_texture_compression_astc_ldr
GL_NV_blend_square
GL_NV_conditional_render
GL_NV_primitive_restart
GL_NV_texgen_reflection
GL_SGIS_generate_mipmap
GL_SGIS_texture_edge_clamp
GL_SGIS_texture_lod
GL_SUN_multi_draw_arrays
GL_WIN_swap_hint
WGL_ARB_buffer_region
WGL_ARB_create_context
WGL_ARB_create_context_profile
WGL_ARB_create_context_robustness
WGL_ARB_extensions_string
WGL_ARB_framebuffer_sRGB
WGL_ARB_make_current_read
WGL_ARB_multisample
WGL_ARB_pbuffer
WGL_ARB_pixel_format
WGL_ARB_pixel_format_float
WGL_EXT_create_context_es2_profile
WGL_EXT_create_context_es_profile
WGL_EXT_depth_float
WGL_EXT_extensions_string
WGL_EXT_pixel_format_packed_float
WGL_EXT_swap_control
WGL_EXT_swap_control_tear
WGL_NV_DX_interop




--
View this message in context: http://forum.openscad.org/Preview-not-working-with-Intel-GPUs-was-2015-03-preview-not-working-tp12101p15778.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Wed Jan 20 22:53:04 2016
From: doug at moens.org (doug moen)
Date: Wed, 20 Jan 2016 22:53:04 -0500
Subject: [OpenSCAD] 2015.03 preview not working
In-Reply-To: <1453347593201-15778.post@n5.nabble.com>
References: <1426899150812-12101.post@n5.nabble.com>
	<1426901539637-12102.post@n5.nabble.com>
	<1426905226660-12103.post@n5.nabble.com>
	<1426907675104-12104.post@n5.nabble.com>
	<1427061067203-12145.post@n5.nabble.com>
	<1449674984388-15061.post@n5.nabble.com>
	<7DD52C3E-0DC4-4CA9-BFA0-ABBC07CCA0D5@kintel.net>
	<1453347593201-15778.post@n5.nabble.com>
Message-ID: <CAGV6i+N-Qf1mP=5Uwou7p26+Barx2PjYSWst0J3gUrPQpCuwfQ@mail.gmail.com>

>
> I've seen a lot of chatter on the web about opengl problems on windows 8
> and 10. Maybe this link will help?


>
> http://answers.microsoft.com/en-us/windows/forum/windows_8-hardware/opengl-problem-after-upgrading-to-windows-8-solved/298bddc4-dbe2-4675-9b80-fe1ddf1cb6e2?auth=1
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160120/6d6d316f/attachment.html>

From superaorta at gmail.com  Thu Jan 21 03:17:50 2016
From: superaorta at gmail.com (superaorta at gmail.com)
Date: Thu, 21 Jan 2016 08:17:50 +0000
Subject: [OpenSCAD] Extrude curve generated elsewhere
In-Reply-To: <569EA776.2060809@gmx.de>
References: <3930175.dLXC4VFP7N@lunesta> <1506910.EkVM6mQSj2@lunesta>
	<569EA776.2060809@gmx.de>
Message-ID: <1747075.7cXmTDJ5Ru@lunesta>




I've developed another problem trying to do this that probably resides outside 
openscad but in case anyone is familiar with it here goes:

I generate my family of curves in openscad and and it looks fine - I export the 
curves as .stl and load into cura and it looks file, I then look at the tool 
path and some of the curves are missing.  I suspect my feature size is a bit
small but other smaller features produced using primitive shapes (cube) always 
get rendered correctly and only the polygons that get missed.

While I realise there is probably some setting in cura responsible rather than 
openscad and that I'm probably posting in the wrong place I just wondered if 
anyone had an idea...

Ta SASA















On Tuesday 19 Jan 2016 22:15:34 Torsten Paul wrote:
> On 01/19/2016 09:34 PM, superaorta at gmail.com wrote:
> > If anyone knows how I might parameterise this neatly so I could do
> > something like
> > 
> > for i=1:20
> > 
> > 	p(i)=[ include <points_$i.scad];
> > 	linear_extrude(height=10)polygon(p(i));
> > 	end
> > 
> > That would be great, but for now it works perfectly...
> 
> Add another dimension to the array and import into a single
> variable?
> 
> ciao,
>   Torsten.
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From triffid.hunter at gmail.com  Fri Jan 22 03:12:42 2016
From: triffid.hunter at gmail.com (Triffid Hunter)
Date: Fri, 22 Jan 2016 16:12:42 +0800
Subject: [OpenSCAD] Extrude curve generated elsewhere
In-Reply-To: <1747075.7cXmTDJ5Ru@lunesta>
References: <3930175.dLXC4VFP7N@lunesta> <1506910.EkVM6mQSj2@lunesta>
	<569EA776.2060809@gmx.de> <1747075.7cXmTDJ5Ru@lunesta>
Message-ID: <CACL3eKAqki9eY-YZ-7EjW9reQYz2Sd38mEmmMLe-FU63N3r=JQ@mail.gmail.com>

See what happens when you slice it with slic3r

On 21 January 2016 at 16:17, <superaorta at gmail.com> wrote:

>
>
>
> I've developed another problem trying to do this that probably resides
> outside
> openscad but in case anyone is familiar with it here goes:
>
> I generate my family of curves in openscad and and it looks fine - I
> export the
> curves as .stl and load into cura and it looks file, I then look at the
> tool
> path and some of the curves are missing.  I suspect my feature size is a
> bit
> small but other smaller features produced using primitive shapes (cube)
> always
> get rendered correctly and only the polygons that get missed.
>
> While I realise there is probably some setting in cura responsible rather
> than
> openscad and that I'm probably posting in the wrong place I just wondered
> if
> anyone had an idea...
>
> Ta SASA
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
> On Tuesday 19 Jan 2016 22:15:34 Torsten Paul wrote:
> > On 01/19/2016 09:34 PM, superaorta at gmail.com wrote:
> > > If anyone knows how I might parameterise this neatly so I could do
> > > something like
> > >
> > > for i=1:20
> > >
> > >     p(i)=[ include <points_$i.scad];
> > >     linear_extrude(height=10)polygon(p(i));
> > >     end
> > >
> > > That would be great, but for now it works perfectly...
> >
> > Add another dimension to the array and import into a single
> > variable?
> >
> > ciao,
> >   Torsten.
> >
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160122/fdc46d57/attachment.html>

From db5765 at outlook.com  Fri Jan 22 07:59:16 2016
From: db5765 at outlook.com (Trygon)
Date: Fri, 22 Jan 2016 05:59:16 -0700 (MST)
Subject: [OpenSCAD] Product Video produced with OpenSCAD
Message-ID: <1453467556876-15783.post@n5.nabble.com>

You might like this...

https://youtu.be/93H82WU8txM

Cheers,
Trygon




--
View this message in context: http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-tp15783.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jon at jonbondy.com  Fri Jan 22 08:51:28 2016
From: jon at jonbondy.com (jon)
Date: Fri, 22 Jan 2016 08:51:28 -0500
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <1453467556876-15783.post@n5.nabble.com>
References: <1453467556876-15783.post@n5.nabble.com>
Message-ID: <56A233E0.1060808@jonbondy.com>

You did that all with OpenSCAD?  Oh, my!

On 1/22/2016 7:59 AM, Trygon wrote:
> You might like this...
>
> https://youtu.be/93H82WU8txM
>
> Cheers,
> Trygon
>
>
>
>
> --
> View this message in context: http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-tp15783.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
> -----
> No virus found in this message.
> Checked by AVG - www.avg.com
> Version: 2016.0.7357 / Virus Database: 4522/11458 - Release Date: 01/22/16
>
>



From marc at inbx.com  Fri Jan 22 09:09:46 2016
From: marc at inbx.com (Marc)
Date: Fri, 22 Jan 2016 07:09:46 -0700 (MST)
Subject: [OpenSCAD] 2015.03 preview not working
In-Reply-To: <CAGV6i+N-Qf1mP=5Uwou7p26+Barx2PjYSWst0J3gUrPQpCuwfQ@mail.gmail.com>
References: <1426899150812-12101.post@n5.nabble.com>
	<1426901539637-12102.post@n5.nabble.com>
	<1426905226660-12103.post@n5.nabble.com>
	<1426907675104-12104.post@n5.nabble.com>
	<1427061067203-12145.post@n5.nabble.com>
	<1449674984388-15061.post@n5.nabble.com>
	<7DD52C3E-0DC4-4CA9-BFA0-ABBC07CCA0D5@kintel.net>
	<1453347593201-15778.post@n5.nabble.com>
	<CAGV6i+N-Qf1mP=5Uwou7p26+Barx2PjYSWst0J3gUrPQpCuwfQ@mail.gmail.com>
Message-ID: <1453471786316-15785.post@n5.nabble.com>

The Surface Book I have has the NVidia dGPU, which is the extra GPU in the
keyboard. I found the setting to force OpenSCAD to use the dGPU and ignore
the Intel graphics card. It works perfectly on the NVidia. I don't know of
this is helpful in finding the root cause, but it appears to be something in
the Intel drivers. 



--
View this message in context: http://forum.openscad.org/Preview-not-working-with-Intel-GPUs-was-2015-03-preview-not-working-tp12101p15785.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From thomas at bornhaupt.de  Fri Jan 22 09:19:22 2016
From: thomas at bornhaupt.de (Thomas Bornhaupt)
Date: Fri, 22 Jan 2016 15:19:22 +0100
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <1453467556876-15783.post@n5.nabble.com>
References: <1453467556876-15783.post@n5.nabble.com>
Message-ID: <56A23A6A.9020800@bornhaupt.de>

An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160122/38c852d4/attachment.html>

From doug at moens.org  Fri Jan 22 09:20:10 2016
From: doug at moens.org (doug moen)
Date: Fri, 22 Jan 2016 09:20:10 -0500
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <1453467556876-15783.post@n5.nabble.com>
References: <1453467556876-15783.post@n5.nabble.com>
Message-ID: <CAGV6i+MUW6mZOXd5eb+ek3E0iSVufKT+ztGm2upqvnQiNUytZg@mail.gmail.com>

Nice work.

On Friday, 22 January 2016, Trygon <db5765 at outlook.com> wrote:

> You might like this...
>
> https://youtu.be/93H82WU8txM
>
> Cheers,
> Trygon
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-tp15783.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org <javascript:;>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160122/75755410/attachment.html>

From fractorr at gmail.com  Fri Jan 22 11:02:51 2016
From: fractorr at gmail.com (Trevor Orr)
Date: Fri, 22 Jan 2016 08:02:51 -0800
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <CAGV6i+MUW6mZOXd5eb+ek3E0iSVufKT+ztGm2upqvnQiNUytZg@mail.gmail.com>
References: <1453467556876-15783.post@n5.nabble.com>
	<CAGV6i+MUW6mZOXd5eb+ek3E0iSVufKT+ztGm2upqvnQiNUytZg@mail.gmail.com>
Message-ID: <CAJc0q451Ce4kr=UHj=BzbBVz+5pg5QLpZ2OVWRt=9eCncXvCZQ@mail.gmail.com>

That is bad ass!!!!  Gives me some great ideas for something I am working
on.  Guess I have a lot to learn with the things that can be done with
OpenSCAD.



On Fri, Jan 22, 2016 at 6:20 AM, doug moen <doug at moens.org> wrote:

> Nice work.
>
>
> On Friday, 22 January 2016, Trygon <db5765 at outlook.com> wrote:
>
>> You might like this...
>>
>> https://youtu.be/93H82WU8txM
>>
>> Cheers,
>> Trygon
>>
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-tp15783.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160122/9dda0dd9/attachment.html>

From fractorr at gmail.com  Fri Jan 22 11:11:47 2016
From: fractorr at gmail.com (fractorr)
Date: Fri, 22 Jan 2016 09:11:47 -0700 (MST)
Subject: [OpenSCAD] 3D Builder
Message-ID: <1453479107072-15789.post@n5.nabble.com>

I have been trying to find an app like Microsoft's 3D Builder.  It allows to
to add multiple stl files and move/size each stl object in the design.  I
need something like this but with a good interface, I really dislike the 3D
Builder interface.  Anyone know of an open source app of any kind like this?




--
View this message in context: http://forum.openscad.org/3D-Builder-tp15789.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Fri Jan 22 11:15:25 2016
From: marius at kintel.net (Marius Kintel)
Date: Fri, 22 Jan 2016 11:15:25 -0500
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <1453467556876-15783.post@n5.nabble.com>
References: <1453467556876-15783.post@n5.nabble.com>
Message-ID: <8A53955B-3D02-44FD-8DC4-73B54B196C18@kintel.net>

Wow,

I bet this project comes with a long wishlist for features in OpenSCAD :)

 -Marius

> On Jan 22, 2016, at 07:59 AM, Trygon <db5765 at outlook.com> wrote:
> 
> You might like this...
> 
> https://youtu.be/93H82WU8txM
> 
> Cheers,
> Trygon



From marius at kintel.net  Fri Jan 22 11:19:30 2016
From: marius at kintel.net (Marius Kintel)
Date: Fri, 22 Jan 2016 11:19:30 -0500
Subject: [OpenSCAD] 3D Builder
In-Reply-To: <1453479107072-15789.post@n5.nabble.com>
References: <1453479107072-15789.post@n5.nabble.com>
Message-ID: <E20A53D0-D308-4866-86CF-54D1F62BAACC@kintel.net>

> On Jan 22, 2016, at 11:11 AM, fractorr <fractorr at gmail.com> wrote:
> 
> I have been trying to find an app like Microsoft's 3D Builder.  It allows to
> to add multiple stl files and move/size each stl object in the design.  I
> need something like this but with a good interface, I really dislike the 3D
> Builder interface.  Anyone know of an open source app of any kind like this?
> 
From the top of my head, nothing Open Source.

What are you trying to achieve with such a tool btw.? Importing, moving and resizing STL files sounds like a very limited feature set, unless your goal is to manually lay out parts for 3D printing..

 -Marius



From fractorr at gmail.com  Fri Jan 22 11:28:19 2016
From: fractorr at gmail.com (fractorr)
Date: Fri, 22 Jan 2016 09:28:19 -0700 (MST)
Subject: [OpenSCAD] 3D Builder
In-Reply-To: <E20A53D0-D308-4866-86CF-54D1F62BAACC@kintel.net>
References: <1453479107072-15789.post@n5.nabble.com>
	<E20A53D0-D308-4866-86CF-54D1F62BAACC@kintel.net>
Message-ID: <CAJc0q44Hz9JXuFeNtHCVFU94AduU5pyss+Qvvyw7YKuGRMWOuA@mail.gmail.com>

That is exactly what I am wanting to do.  I have an SCAD library that I
created that generates several hundred SCAD files  of various shapes and
various sizes and I want to lay a bunch of them together for 3D printing.
Would just be easier to do with a visual app, I have made a couple with an
SCAD file but it takes a while to do, I then used 3D builder and it was
easier to make a design but the interface for 3D builder is horrible.

On Fri, Jan 22, 2016 at 8:20 AM, kintel [via OpenSCAD] <
ml-node+s1091067n15791h99 at n5.nabble.com> wrote:

> > On Jan 22, 2016, at 11:11 AM, fractorr <[hidden email]
> <http:///user/SendEmail.jtp?type=node&node=15791&i=0>> wrote:
> >
> > I have been trying to find an app like Microsoft's 3D Builder.  It
> allows to
> > to add multiple stl files and move/size each stl object in the design.
> I
> > need something like this but with a good interface, I really dislike the
> 3D
> > Builder interface.  Anyone know of an open source app of any kind like
> this?
> >
> From the top of my head, nothing Open Source.
>
> What are you trying to achieve with such a tool btw.? Importing, moving
> and resizing STL files sounds like a very limited feature set, unless your
> goal is to manually lay out parts for 3D printing..
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=15791&i=1>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/3D-Builder-tp15789p15791.html
> To unsubscribe from 3D Builder, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=15789&code=ZnJhY3RvcnJAZ21haWwuY29tfDE1Nzg5fDIxNjk5NjU3OA==>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/3D-Builder-tp15789p15792.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160122/7b8005c3/attachment.html>

From marius at kintel.net  Fri Jan 22 11:33:08 2016
From: marius at kintel.net (Marius Kintel)
Date: Fri, 22 Jan 2016 11:33:08 -0500
Subject: [OpenSCAD] 3D Builder
In-Reply-To: <CAJc0q44Hz9JXuFeNtHCVFU94AduU5pyss+Qvvyw7YKuGRMWOuA@mail.gmail.com>
References: <1453479107072-15789.post@n5.nabble.com>
	<E20A53D0-D308-4866-86CF-54D1F62BAACC@kintel.net>
	<CAJc0q44Hz9JXuFeNtHCVFU94AduU5pyss+Qvvyw7YKuGRMWOuA@mail.gmail.com>
Message-ID: <0B0ACFFF-7382-4355-B17A-3889379B2F4A@kintel.net>

Wouldn?t your 3D print preparation software (Cura, Slic3r etc.) have all this functionality?
 -Marius

> On Jan 22, 2016, at 11:28 AM, fractorr <fractorr at gmail.com> wrote:
> 
> That is exactly what I am wanting to do.  I have an SCAD library that I created that generates several hundred SCAD files  of various shapes and various sizes and I want to lay a bunch of them together for 3D printing.  Would just be easier to do with a visual app, I have made a couple with an SCAD file but it takes a while to do, I then used 3D builder and it was easier to make a design but the interface for 3D builder is horrible.



From ari.diacou at gmail.com  Fri Jan 22 11:43:55 2016
From: ari.diacou at gmail.com (Ari Diacou)
Date: Fri, 22 Jan 2016 11:43:55 -0500
Subject: [OpenSCAD] 3D Builder
In-Reply-To: <0B0ACFFF-7382-4355-B17A-3889379B2F4A@kintel.net>
References: <1453479107072-15789.post@n5.nabble.com>
	<E20A53D0-D308-4866-86CF-54D1F62BAACC@kintel.net>
	<CAJc0q44Hz9JXuFeNtHCVFU94AduU5pyss+Qvvyw7YKuGRMWOuA@mail.gmail.com>
	<0B0ACFFF-7382-4355-B17A-3889379B2F4A@kintel.net>
Message-ID: <CA+HE+0L8YfX486yXB0m32PtHmUu5qWeip9R_DWNvZP-adyTZ4g@mail.gmail.com>

I have recently tried 3D builder. I like the Cura interface more (although
I used it first, and extensively, so maybe that's just preference).

On Fri, Jan 22, 2016 at 11:33 AM, Marius Kintel <marius at kintel.net> wrote:

> Wouldn?t your 3D print preparation software (Cura, Slic3r etc.) have all
> this functionality?
>  -Marius
>
> > On Jan 22, 2016, at 11:28 AM, fractorr <fractorr at gmail.com> wrote:
> >
> > That is exactly what I am wanting to do.  I have an SCAD library that I
> created that generates several hundred SCAD files  of various shapes and
> various sizes and I want to lay a bunch of them together for 3D printing.
> Would just be easier to do with a visual app, I have made a couple with an
> SCAD file but it takes a while to do, I then used 3D builder and it was
> easier to make a design but the interface for 3D builder is horrible.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160122/6e8b4dd6/attachment.html>

From fractorr at gmail.com  Fri Jan 22 11:44:22 2016
From: fractorr at gmail.com (fractorr)
Date: Fri, 22 Jan 2016 09:44:22 -0700 (MST)
Subject: [OpenSCAD] 3D Builder
In-Reply-To: <0B0ACFFF-7382-4355-B17A-3889379B2F4A@kintel.net>
References: <1453479107072-15789.post@n5.nabble.com>
	<E20A53D0-D308-4866-86CF-54D1F62BAACC@kintel.net>
	<CAJc0q44Hz9JXuFeNtHCVFU94AduU5pyss+Qvvyw7YKuGRMWOuA@mail.gmail.com>
	<0B0ACFFF-7382-4355-B17A-3889379B2F4A@kintel.net>
Message-ID: <CAJc0q47Eceo+sa4QyKeX2EMPrJ1hMWq_j=++CeryCUtVt-ydFg@mail.gmail.com>

The problem is that I don't have a 3D printer, I was going to use a service
like sculpteo.

On Fri, Jan 22, 2016 at 8:34 AM, kintel [via OpenSCAD] <
ml-node+s1091067n15793h61 at n5.nabble.com> wrote:

> Wouldn?t your 3D print preparation software (Cura, Slic3r etc.) have all
> this functionality?
>  -Marius
>
> > On Jan 22, 2016, at 11:28 AM, fractorr <[hidden email]
> <http:///user/SendEmail.jtp?type=node&node=15793&i=0>> wrote:
> >
> > That is exactly what I am wanting to do.  I have an SCAD library that I
> created that generates several hundred SCAD files  of various shapes and
> various sizes and I want to lay a bunch of them together for 3D printing.
> Would just be easier to do with a visual app, I have made a couple with an
> SCAD file but it takes a while to do, I then used 3D builder and it was
> easier to make a design but the interface for 3D builder is horrible.
>
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=15793&i=1>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/3D-Builder-tp15789p15793.html
> To unsubscribe from 3D Builder, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=15789&code=ZnJhY3RvcnJAZ21haWwuY29tfDE1Nzg5fDIxNjk5NjU3OA==>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/3D-Builder-tp15789p15794.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160122/86c8fe9d/attachment.html>

From doug at moens.org  Fri Jan 22 11:53:44 2016
From: doug at moens.org (doug moen)
Date: Fri, 22 Jan 2016 11:53:44 -0500
Subject: [OpenSCAD] 3D Builder
In-Reply-To: <1453479107072-15789.post@n5.nabble.com>
References: <1453479107072-15789.post@n5.nabble.com>
Message-ID: <CAGV6i+NZR-xwaCo7f9M+Mna=2EJMx8NQnhAm=5wxwABMq-BqgQ@mail.gmail.com>

You can do all of this in Slic3r, which is open source. You use the Add
command to add each STL file to the platform. You move the objects around
using direct manipulation. You can scale an object, uniformly or
non-uniformly, using the Scale command in the right mouse button menu. You
can export the resulting array of objects to either STL or AMF. You'll need
to enable expert mode; some of the above commands are disabled by default.

On 22 January 2016 at 11:11, fractorr <fractorr at gmail.com> wrote:

> I have been trying to find an app like Microsoft's 3D Builder.  It allows
> to
> to add multiple stl files and move/size each stl object in the design.  I
> need something like this but with a good interface, I really dislike the 3D
> Builder interface.  Anyone know of an open source app of any kind like
> this?
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/3D-Builder-tp15789.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160122/610244d6/attachment.html>

From fractorr at gmail.com  Fri Jan 22 12:04:03 2016
From: fractorr at gmail.com (fractorr)
Date: Fri, 22 Jan 2016 10:04:03 -0700 (MST)
Subject: [OpenSCAD] 3D Builder
In-Reply-To: <CAGV6i+NZR-xwaCo7f9M+Mna=2EJMx8NQnhAm=5wxwABMq-BqgQ@mail.gmail.com>
References: <1453479107072-15789.post@n5.nabble.com>
	<CAGV6i+NZR-xwaCo7f9M+Mna=2EJMx8NQnhAm=5wxwABMq-BqgQ@mail.gmail.com>
Message-ID: <CAJc0q46fbW7-ryoTcVvUGX-FunquRv1e3ba5f__hu81grRgxUQ@mail.gmail.com>

I downloaded Slic3r and it looks like this will do what I want, just need
to learn how to use t properly.

On Fri, Jan 22, 2016 at 8:54 AM, doug.moen [via OpenSCAD] <
ml-node+s1091067n15796h54 at n5.nabble.com> wrote:

> You can do all of this in Slic3r, which is open source. You use the Add
> command to add each STL file to the platform. You move the objects around
> using direct manipulation. You can scale an object, uniformly or
> non-uniformly, using the Scale command in the right mouse button menu. You
> can export the resulting array of objects to either STL or AMF. You'll need
> to enable expert mode; some of the above commands are disabled by default.
>
> On 22 January 2016 at 11:11, fractorr <[hidden email]
> <http:///user/SendEmail.jtp?type=node&node=15796&i=0>> wrote:
>
>> I have been trying to find an app like Microsoft's 3D Builder.  It allows
>> to
>> to add multiple stl files and move/size each stl object in the design.  I
>> need something like this but with a good interface, I really dislike the
>> 3D
>> Builder interface.  Anyone know of an open source app of any kind like
>> this?
>>
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/3D-Builder-tp15789.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> [hidden email] <http:///user/SendEmail.jtp?type=node&node=15796&i=1>
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> [hidden email] <http:///user/SendEmail.jtp?type=node&node=15796&i=2>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/3D-Builder-tp15789p15796.html
> To unsubscribe from 3D Builder, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=15789&code=ZnJhY3RvcnJAZ21haWwuY29tfDE1Nzg5fDIxNjk5NjU3OA==>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/3D-Builder-tp15789p15797.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160122/0737f5cb/attachment.html>

From doug at moens.org  Fri Jan 22 12:04:23 2016
From: doug at moens.org (doug moen)
Date: Fri, 22 Jan 2016 12:04:23 -0500
Subject: [OpenSCAD] 3D Builder
In-Reply-To: <CAGV6i+NZR-xwaCo7f9M+Mna=2EJMx8NQnhAm=5wxwABMq-BqgQ@mail.gmail.com>
References: <1453479107072-15789.post@n5.nabble.com>
	<CAGV6i+NZR-xwaCo7f9M+Mna=2EJMx8NQnhAm=5wxwABMq-BqgQ@mail.gmail.com>
Message-ID: <CAGV6i+MpsZUUBAUZS3y0iCq759DW9VBgn8yWPi-hFGU5=J4o0A@mail.gmail.com>

You can also do this using MakerWare, which is not open source. I think the
GUI is nicer than Slic3r for this particular work flow: scaling is done
using direct manipulation, and moving things around is nicer (Slic3r
recenters the group after each operation). You can import and export STL
(no AMF support).

On 22 January 2016 at 11:53, doug moen <doug at moens.org> wrote:

> You can do all of this in Slic3r, which is open source. You use the Add
> command to add each STL file to the platform. You move the objects around
> using direct manipulation. You can scale an object, uniformly or
> non-uniformly, using the Scale command in the right mouse button menu. You
> can export the resulting array of objects to either STL or AMF. You'll need
> to enable expert mode; some of the above commands are disabled by default.
>
> On 22 January 2016 at 11:11, fractorr <fractorr at gmail.com> wrote:
>
>> I have been trying to find an app like Microsoft's 3D Builder.  It allows
>> to
>> to add multiple stl files and move/size each stl object in the design.  I
>> need something like this but with a good interface, I really dislike the
>> 3D
>> Builder interface.  Anyone know of an open source app of any kind like
>> this?
>>
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/3D-Builder-tp15789.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160122/5613dc4a/attachment.html>

From marius at kintel.net  Fri Jan 22 12:05:02 2016
From: marius at kintel.net (Marius Kintel)
Date: Fri, 22 Jan 2016 12:05:02 -0500
Subject: [OpenSCAD] 3D Builder
In-Reply-To: <CAJc0q47Eceo+sa4QyKeX2EMPrJ1hMWq_j=++CeryCUtVt-ydFg@mail.gmail.com>
References: <1453479107072-15789.post@n5.nabble.com>
	<E20A53D0-D308-4866-86CF-54D1F62BAACC@kintel.net>
	<CAJc0q44Hz9JXuFeNtHCVFU94AduU5pyss+Qvvyw7YKuGRMWOuA@mail.gmail.com>
	<0B0ACFFF-7382-4355-B17A-3889379B2F4A@kintel.net>
	<CAJc0q47Eceo+sa4QyKeX2EMPrJ1hMWq_j=++CeryCUtVt-ydFg@mail.gmail.com>
Message-ID: <FECAE0F8-69B5-4031-9F66-6756E9CAB4A3@kintel.net>

> On Jan 22, 2016, at 11:44 AM, fractorr <fractorr at gmail.com> wrote:
> 
> The problem is that I don't have a 3D printer, I was going to use a service like sculpteo.
> 
Having never used Sculpteo, I would expect this to be one of their core UI tools. Looks like there is some room for innovation in that domain :)

Doug?s suggestion to use Slic3r is good. Cura can also export the build plate as STL.

 -Marius



From tim.thawkins at gmail.com  Fri Jan 22 12:11:50 2016
From: tim.thawkins at gmail.com (Tim Hawkins)
Date: Sat, 23 Jan 2016 01:11:50 +0800
Subject: [OpenSCAD] 3D Builder
In-Reply-To: <CAJc0q44Hz9JXuFeNtHCVFU94AduU5pyss+Qvvyw7YKuGRMWOuA@mail.gmail.com>
References: <1453479107072-15789.post@n5.nabble.com>
	<E20A53D0-D308-4866-86CF-54D1F62BAACC@kintel.net>
	<CAJc0q44Hz9JXuFeNtHCVFU94AduU5pyss+Qvvyw7YKuGRMWOuA@mail.gmail.com>
Message-ID: <CAEbsasQbSCrnRATU94d9Z+O3NyoemjVbDM6Jmvdc70M=xk0=OQ@mail.gmail.com>

What about meshmixer?
On Jan 23, 2016 12:29 AM, "fractorr" <fractorr at gmail.com> wrote:

> That is exactly what I am wanting to do.  I have an SCAD library that I
> created that generates several hundred SCAD files  of various shapes and
> various sizes and I want to lay a bunch of them together for 3D printing.
> Would just be easier to do with a visual app, I have made a couple with an
> SCAD file but it takes a while to do, I then used 3D builder and it was
> easier to make a design but the interface for 3D builder is horrible.
>
> On Fri, Jan 22, 2016 at 8:20 AM, kintel [via OpenSCAD] <[hidden email]
> <http:///user/SendEmail.jtp?type=node&node=15792&i=0>> wrote:
>
>> > On Jan 22, 2016, at 11:11 AM, fractorr <[hidden email]
>> <http:///user/SendEmail.jtp?type=node&node=15791&i=0>> wrote:
>> >
>> > I have been trying to find an app like Microsoft's 3D Builder.  It
>> allows to
>> > to add multiple stl files and move/size each stl object in the design.
>> I
>> > need something like this but with a good interface, I really dislike
>> the 3D
>> > Builder interface.  Anyone know of an open source app of any kind like
>> this?
>> >
>> From the top of my head, nothing Open Source.
>>
>> What are you trying to achieve with such a tool btw.? Importing, moving
>> and resizing STL files sounds like a very limited feature set, unless your
>> goal is to manually lay out parts for 3D printing..
>>
>>  -Marius
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> [hidden email] <http:///user/SendEmail.jtp?type=node&node=15791&i=1>
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>> ------------------------------
>> If you reply to this email, your message will be added to the discussion
>> below:
>> http://forum.openscad.org/3D-Builder-tp15789p15791.html
>> To unsubscribe from 3D Builder, click here.
>> NAML
>> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>>
>
>
> ------------------------------
> View this message in context: Re: 3D Builder
> <http://forum.openscad.org/3D-Builder-tp15789p15792.html>
> Sent from the OpenSCAD mailing list archive <http://forum.openscad.org/>
> at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160123/854ebdf2/attachment.html>

From fractorr at gmail.com  Fri Jan 22 12:15:04 2016
From: fractorr at gmail.com (Trevor Orr)
Date: Fri, 22 Jan 2016 09:15:04 -0800
Subject: [OpenSCAD] 3D Builder
In-Reply-To: <CAEbsasQbSCrnRATU94d9Z+O3NyoemjVbDM6Jmvdc70M=xk0=OQ@mail.gmail.com>
References: <1453479107072-15789.post@n5.nabble.com>
	<E20A53D0-D308-4866-86CF-54D1F62BAACC@kintel.net>
	<CAJc0q44Hz9JXuFeNtHCVFU94AduU5pyss+Qvvyw7YKuGRMWOuA@mail.gmail.com>
	<CAEbsasQbSCrnRATU94d9Z+O3NyoemjVbDM6Jmvdc70M=xk0=OQ@mail.gmail.com>
Message-ID: <CAJc0q47AuzESqkNfiOTOhaMWCzReqy6y37_47jkigjAGVbeJFg@mail.gmail.com>

Did not think there would be so many options to choose from.  I am going to
try them all out and see which one works best for me.

On Fri, Jan 22, 2016 at 9:11 AM, Tim Hawkins <tim.thawkins at gmail.com> wrote:

> What about meshmixer?
> On Jan 23, 2016 12:29 AM, "fractorr" <fractorr at gmail.com> wrote:
>
>> That is exactly what I am wanting to do.  I have an SCAD library that I
>> created that generates several hundred SCAD files  of various shapes and
>> various sizes and I want to lay a bunch of them together for 3D printing.
>> Would just be easier to do with a visual app, I have made a couple with an
>> SCAD file but it takes a while to do, I then used 3D builder and it was
>> easier to make a design but the interface for 3D builder is horrible.
>>
>> On Fri, Jan 22, 2016 at 8:20 AM, kintel [via OpenSCAD] <[hidden email]
>> <http:///user/SendEmail.jtp?type=node&node=15792&i=0>> wrote:
>>
>>> > On Jan 22, 2016, at 11:11 AM, fractorr <[hidden email]
>>> <http:///user/SendEmail.jtp?type=node&node=15791&i=0>> wrote:
>>> >
>>> > I have been trying to find an app like Microsoft's 3D Builder.  It
>>> allows to
>>> > to add multiple stl files and move/size each stl object in the
>>> design.  I
>>> > need something like this but with a good interface, I really dislike
>>> the 3D
>>> > Builder interface.  Anyone know of an open source app of any kind like
>>> this?
>>> >
>>> From the top of my head, nothing Open Source.
>>>
>>> What are you trying to achieve with such a tool btw.? Importing, moving
>>> and resizing STL files sounds like a very limited feature set, unless your
>>> goal is to manually lay out parts for 3D printing..
>>>
>>>  -Marius
>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> [hidden email] <http:///user/SendEmail.jtp?type=node&node=15791&i=1>
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>> ------------------------------
>>> If you reply to this email, your message will be added to the discussion
>>> below:
>>> http://forum.openscad.org/3D-Builder-tp15789p15791.html
>>> To unsubscribe from 3D Builder, click here.
>>> NAML
>>> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>>>
>>
>>
>> ------------------------------
>> View this message in context: Re: 3D Builder
>> <http://forum.openscad.org/3D-Builder-tp15789p15792.html>
>> Sent from the OpenSCAD mailing list archive <http://forum.openscad.org/>
>> at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160122/a7801e63/attachment.html>

From Torsten.Paul at gmx.de  Fri Jan 22 12:22:30 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Fri, 22 Jan 2016 18:22:30 +0100
Subject: [OpenSCAD] 3D Builder
In-Reply-To: <CAJc0q47AuzESqkNfiOTOhaMWCzReqy6y37_47jkigjAGVbeJFg@mail.gmail.com>
References: <1453479107072-15789.post@n5.nabble.com>
	<E20A53D0-D308-4866-86CF-54D1F62BAACC@kintel.net>
	<CAJc0q44Hz9JXuFeNtHCVFU94AduU5pyss+Qvvyw7YKuGRMWOuA@mail.gmail.com>
	<CAEbsasQbSCrnRATU94d9Z+O3NyoemjVbDM6Jmvdc70M=xk0=OQ@mail.gmail.com>
	<CAJc0q47AuzESqkNfiOTOhaMWCzReqy6y37_47jkigjAGVbeJFg@mail.gmail.com>
Message-ID: <56A26556.2070202@gmx.de>

On 01/22/2016 06:15 PM, Trevor Orr wrote:
> Did not think there would be so many options to choose from.  I am
> going to try them all out and see which one works best for me.
> 
If it's about generating a somewhat (space) optimized arrangement
of STL files, you could also have a look at simarrange. I think
it's a command line tool and I don't know if it's still maintained,
but as you say you have hundreds of objects, some automation might
be worth a try too...

https://guillaume.segu.in/blog/code/517/simarrange-a-smart-fast-stl-plater-by-kliment/

ciao,
  Torsten.



From fractorr at gmail.com  Fri Jan 22 12:26:08 2016
From: fractorr at gmail.com (Trevor Orr)
Date: Fri, 22 Jan 2016 09:26:08 -0800
Subject: [OpenSCAD] 3D Builder
In-Reply-To: <56A26556.2070202@gmx.de>
References: <1453479107072-15789.post@n5.nabble.com>
	<E20A53D0-D308-4866-86CF-54D1F62BAACC@kintel.net>
	<CAJc0q44Hz9JXuFeNtHCVFU94AduU5pyss+Qvvyw7YKuGRMWOuA@mail.gmail.com>
	<CAEbsasQbSCrnRATU94d9Z+O3NyoemjVbDM6Jmvdc70M=xk0=OQ@mail.gmail.com>
	<CAJc0q47AuzESqkNfiOTOhaMWCzReqy6y37_47jkigjAGVbeJFg@mail.gmail.com>
	<56A26556.2070202@gmx.de>
Message-ID: <CAJc0q45HJr_R0nDp204DHa1872veWa19M_r7+ddsPwNYBOPEcw@mail.gmail.com>

It's not for optimized arrangement, some layouts may have 20-30 parts added
to it while other layouts myave have 50 or more parts added it, the parts
are all added together to make one big part.

On Fri, Jan 22, 2016 at 9:22 AM, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 01/22/2016 06:15 PM, Trevor Orr wrote:
> > Did not think there would be so many options to choose from.  I am
> > going to try them all out and see which one works best for me.
> >
> If it's about generating a somewhat (space) optimized arrangement
> of STL files, you could also have a look at simarrange. I think
> it's a command line tool and I don't know if it's still maintained,
> but as you say you have hundreds of objects, some automation might
> be worth a try too...
>
>
> https://guillaume.segu.in/blog/code/517/simarrange-a-smart-fast-stl-plater-by-kliment/
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160122/726c8ae7/attachment.html>

From bioinformatics at gringene.org  Fri Jan 22 12:30:23 2016
From: bioinformatics at gringene.org (David Eccles (gringer))
Date: Sat, 23 Jan 2016 06:30:23 +1300
Subject: [OpenSCAD] 3D Builder
In-Reply-To: <mailman.7.1453482002.26303.discuss_lists.openscad.org@lists.openscad.org>
References: <mailman.7.1453482002.26303.discuss_lists.openscad.org@lists.openscad.org>
Message-ID: <56A2672F.3090709@gringene.org>

Repetier Host allows you to manipulate 3D objects and save the result
as STL files:

http://www.repetier.com/

 - David


From arnholm at arnholm.org  Fri Jan 22 12:53:06 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Fri, 22 Jan 2016 18:53:06 +0100
Subject: [OpenSCAD] 3D Builder
In-Reply-To: <CAJc0q44Hz9JXuFeNtHCVFU94AduU5pyss+Qvvyw7YKuGRMWOuA@mail.gmail.com>
References: <1453479107072-15789.post@n5.nabble.com>
	<E20A53D0-D308-4866-86CF-54D1F62BAACC@kintel.net>
	<CAJc0q44Hz9JXuFeNtHCVFU94AduU5pyss+Qvvyw7YKuGRMWOuA@mail.gmail.com>
Message-ID: <56A26C82.6030009@arnholm.org>

On 22. jan. 2016 17:28, fractorr wrote:
> That is exactly what I am wanting to do.  I have an SCAD library that I
> created that generates several hundred SCAD files  of various shapes and
> various sizes and I want to lay a bunch of them together for 3D
> printing.  Would just be easier to do with a visual app, I have made a
> couple with an SCAD file but it takes a while to do, I then used 3D
> builder and it was easier to make a design but the interface for 3D
> builder is horrible.

It sounds like you want to assemble/layout several STL files and 
generate a new STL file to send for printing. The slicers mentioned 
(including the one I use - KISSlicer) can do the layout, but the output 
is gcode, not an assembled STL.

As you already have scad files for your parts, you could assemble them 
using OpenSCAD obviously. I have done something similar in the past 
where I create modules

module part1() {...}
module part2() {...}

Then later, perform the layout for printing

module print_layout()
{
  translate(..) rotate(..) scale(..) part1();
  translate(..) rotate(..) scale(..) part2();
}
print_layout();
and export the assembly as a single STL.

Now, it could be that your list of parts is too long/complex so OpenSCAD 
is unable to complete the job in reasonable time (or at all). If you 
already have good STL files it may seem like the wrong approach, did you 
try something like this:

module print_layout()
{
translate(..) rotate(..) scale(..) import("part1.stl");
translate(..) rotate(..) scale(..) import("part2.stl");
}

Finally: Maybe it already exists somewhere, but a program to import 
several STL files like above, transform each one separately and just 
assemble them out as a single STL would be useful, in particular for 
those who don't own a printer. There would be no boolean operations, 
just visual collision check. All STL facets would be kept as is, but 
vertex coordinates would be transformed.

Carsten Arnholm







From marius at kintel.net  Fri Jan 22 13:01:31 2016
From: marius at kintel.net (kintel)
Date: Fri, 22 Jan 2016 11:01:31 -0700 (MST)
Subject: [OpenSCAD] Openscad commande line
In-Reply-To: <1453484779662-15805.post@n5.nabble.com>
References: <1453484779662-15805.post@n5.nabble.com>
Message-ID: <1453485691941-15807.post@n5.nabble.com>

We don't install a separate cmd-line app on the system. Just run the
executable directly like this:
/Applications/OpenSCAD.app/Contents/MacOS/OpenSCAD 




--
View this message in context: http://forum.openscad.org/Openscad-commande-line-tp15805p15807.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From fractorr at gmail.com  Fri Jan 22 13:06:55 2016
From: fractorr at gmail.com (Trevor Orr)
Date: Fri, 22 Jan 2016 10:06:55 -0800
Subject: [OpenSCAD] 3D Builder
In-Reply-To: <56A26C82.6030009@arnholm.org>
References: <1453479107072-15789.post@n5.nabble.com>
	<E20A53D0-D308-4866-86CF-54D1F62BAACC@kintel.net>
	<CAJc0q44Hz9JXuFeNtHCVFU94AduU5pyss+Qvvyw7YKuGRMWOuA@mail.gmail.com>
	<56A26C82.6030009@arnholm.org>
Message-ID: <CAJc0q45Ubb4SPMRP6mi4QWnLC71rs1H9P3Em-DaPbQK3EVus2A@mail.gmail.com>

So here is an example of what I am doing, for OpenSCAD to render this and
this is only about 1/2 to 1/3 the number of parts that what actually make
up the final layout and takes about 5 minutes to render and sometimes it
can't draw it at in preview mode and I have to use render mode instead,
which takes a long time.


module layout() {
union() {
   translate([0, 0, 0])
       rotate([0, 0, 0])
           draw_part1();

   translate([i2m(1.5), 0, 0])
       rotate([0, 0, 0])
           draw_part2();
   translate([i2m(3.0), 0, 0])
       rotate([0, 0, 0])
           draw_part2();

   translate([i2m(4.5), -i2m(.75), 0])
       rotate([0, 0, -90])
           draw_part3();

   translate([i2m(4.5), -i2m(3.75), 0])
       rotate([0, 0, 90])
           draw_part4();
   translate([i2m(1.5), -i2m(3.75), 0])
       rotate([0, 0, 270])
           draw_part5();
   translate([i2m(1.5), -i2m(3.75), 0])
       rotate([0, 0, 270])
           draw_part6();
   translate([i2m(1.5), -i2m(3.75), 0])
       rotate([0, 0, 180])
           draw_part6();
   translate([-i2m(1.5), -i2m(3.75), 0])
       rotate([0, 0, 0])
           draw_part7();

   translate([-i2m(1.5), -i2m(.75), 0])
       rotate([0, 0, 180])
           draw_part1();
   translate([-i2m(2.25), -i2m(.75), 0])
       rotate([0, 0, 90])
           draw_part3();
   translate([-i2m(2.25), i2m(.75), 0])
       rotate([0, 0, 90])
           draw_part4();
}
}


On Fri, Jan 22, 2016 at 9:53 AM, Carsten Arnholm <arnholm at arnholm.org>
wrote:

> On 22. jan. 2016 17:28, fractorr wrote:
>
>> That is exactly what I am wanting to do.  I have an SCAD library that I
>> created that generates several hundred SCAD files  of various shapes and
>> various sizes and I want to lay a bunch of them together for 3D
>> printing.  Would just be easier to do with a visual app, I have made a
>> couple with an SCAD file but it takes a while to do, I then used 3D
>> builder and it was easier to make a design but the interface for 3D
>> builder is horrible.
>>
>
> It sounds like you want to assemble/layout several STL files and generate
> a new STL file to send for printing. The slicers mentioned (including the
> one I use - KISSlicer) can do the layout, but the output is gcode, not an
> assembled STL.
>
> As you already have scad files for your parts, you could assemble them
> using OpenSCAD obviously. I have done something similar in the past where I
> create modules
>
> module part1() {...}
> module part2() {...}
>
> Then later, perform the layout for printing
>
> module print_layout()
> {
>  translate(..) rotate(..) scale(..) part1();
>  translate(..) rotate(..) scale(..) part2();
> }
> print_layout();
> and export the assembly as a single STL.
>
> Now, it could be that your list of parts is too long/complex so OpenSCAD
> is unable to complete the job in reasonable time (or at all). If you
> already have good STL files it may seem like the wrong approach, did you
> try something like this:
>
> module print_layout()
> {
> translate(..) rotate(..) scale(..) import("part1.stl");
> translate(..) rotate(..) scale(..) import("part2.stl");
> }
>
> Finally: Maybe it already exists somewhere, but a program to import
> several STL files like above, transform each one separately and just
> assemble them out as a single STL would be useful, in particular for those
> who don't own a printer. There would be no boolean operations, just visual
> collision check. All STL facets would be kept as is, but vertex coordinates
> would be transformed.
>
> Carsten Arnholm
>
>
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160122/e1a3d97b/attachment.html>

From jpmendes54 at gmail.com  Fri Jan 22 13:16:02 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Fri, 22 Jan 2016 11:16:02 -0700 (MST)
Subject: [OpenSCAD] 3D Builder
In-Reply-To: <1453479107072-15789.post@n5.nabble.com>
References: <1453479107072-15789.post@n5.nabble.com>
Message-ID: <1453486562750-15809.post@n5.nabble.com>

Hello

If you have the .stl files already just make a module to import those you
want, and place them as you like.

jpmendes 



--
View this message in context: http://forum.openscad.org/3D-Builder-tp15789p15809.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Fri Jan 22 13:22:29 2016
From: mschafer at wireframe.biz (Neon22)
Date: Fri, 22 Jan 2016 11:22:29 -0700 (MST)
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <1453467556876-15783.post@n5.nabble.com>
References: <1453467556876-15783.post@n5.nabble.com>
Message-ID: <1453486949704-15810.post@n5.nabble.com>

excellent work. what a great additiion too :) congrats. Best wishes getting
the Lego company involved.



--
View this message in context: http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-tp15783p15810.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Fri Jan 22 13:25:30 2016
From: mschafer at wireframe.biz (Neon22)
Date: Fri, 22 Jan 2016 11:25:30 -0700 (MST)
Subject: [OpenSCAD] 3D Builder
In-Reply-To: <1453479107072-15789.post@n5.nabble.com>
References: <1453479107072-15789.post@n5.nabble.com>
Message-ID: <1453487130796-15811.post@n5.nabble.com>

I recently saw this project which uses genetic alg to pack SVG shapes and is
written inJavascript.
I'm considering porting to Python.
A great addition would be to also do this with STL files. Probably assuming
they were already in a suitable "up" configuration for printing.

https://github.com/Jack000/SVGnest



--
View this message in context: http://forum.openscad.org/3D-Builder-tp15789p15811.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From fractorr at gmail.com  Fri Jan 22 13:28:00 2016
From: fractorr at gmail.com (fractorr)
Date: Fri, 22 Jan 2016 11:28:00 -0700 (MST)
Subject: [OpenSCAD] 3D Builder
In-Reply-To: <1453486562750-15809.post@n5.nabble.com>
References: <1453479107072-15789.post@n5.nabble.com>
	<1453486562750-15809.post@n5.nabble.com>
Message-ID: <CAJc0q44Q8rBtAW1Q6b+Pccrfmp=j6MrB0_icGN_93Fwb+yRjAg@mail.gmail.com>

Ah!!!!!  I was not aware I could import stl files like that.  This sure
makes rendering these larger layouts so much faster. Using ones of these
apps would still probably make it easier to assemble these layouts but
knowing the import works like that could save me a lot of waiting time for
rendering.

On Fri, Jan 22, 2016 at 10:16 AM, jpmendes [via OpenSCAD] <
ml-node+s1091067n15809h57 at n5.nabble.com> wrote:

> Hello
>
> If you have the .stl files already just make a module to import those you
> want, and place them as you like.
>
> jpmendes
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://forum.openscad.org/3D-Builder-tp15789p15809.html
> To unsubscribe from 3D Builder, click here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=15789&code=ZnJhY3RvcnJAZ21haWwuY29tfDE1Nzg5fDIxNjk5NjU3OA==>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/3D-Builder-tp15789p15812.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160122/4d765174/attachment.html>

From serve at perdix.org  Fri Jan 22 13:51:10 2016
From: serve at perdix.org (Mekko)
Date: Fri, 22 Jan 2016 11:51:10 -0700 (MST)
Subject: [OpenSCAD] 3D Builder
In-Reply-To: <56A26C82.6030009@arnholm.org>
References: <1453479107072-15789.post@n5.nabble.com>
	<E20A53D0-D308-4866-86CF-54D1F62BAACC@kintel.net>
	<CAJc0q44Hz9JXuFeNtHCVFU94AduU5pyss+Qvvyw7YKuGRMWOuA@mail.gmail.com>
	<56A26C82.6030009@arnholm.org>
Message-ID: <1453488670794-15814.post@n5.nabble.com>

If I'm understanding factorr's issue correctly then I have a couple of
observations based on my own experiences. 

First of all, there are several 3D printer services who will sell you a
volume to print and you can fill the volume however you like. In some cases
the volume dimensions are pre-determined (e.g.,
http://www.digits2widgets.com/3d_printing_prices/nylon_sls_containers/) and
in some cases the volume dimensions are up to you (e.g.,
https://i.materialise.com/container-upload and
https://www.3dprint-uk.co.uk/pricing/). I have used all three of those
services and compared to Shapeways and Sculpteo (whom I have also used)
those three are all *much* less expensive and all are great on customer
service. For example, one of my parts was $20.86 at Shapeways and $8.08 at
3DPRINTUK.

Second of all, the problem that factorr is hitting with OpenSCAD is a "right
tool for the job" kind of problem. I had eight parts, fairly complex, and I
tried a) putting all the code in one .scad file and rendering all of them,
and b) exporting .stl files for each of the parts and then using a separate
.scad file and translate() import() calls to position the collection of
parts. OpenSCAD crashed both ways and I don't really fault it - that's not
its job.

So I use MeshLab for positioning. I import all my .stl meshes, position
them, and then use the Filters/Mesh Layer/Flatten Visible Layers command to
create a unified mesh that I then export as a .stl file. It has a boundary
box view that helps with this considerably.

With respect to slicers,  I use Cura for driving my 3D printer and it
provides a way for positioning pieces in the XY plane but, as far as I know,
not along the Z axis. Maybe the other slicers have better functionality in
this area but again, I'm still not sure their main purpose is to support XYZ
positioning. 

Hope this helps!



--
View this message in context: http://forum.openscad.org/3D-Builder-tp15789p15814.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From stempeldergeschichte at googlemail.com  Fri Jan 22 15:08:43 2016
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Fri, 22 Jan 2016 21:08:43 +0100
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <56A233E0.1060808@jonbondy.com>
References: <1453467556876-15783.post@n5.nabble.com>
	<56A233E0.1060808@jonbondy.com>
Message-ID: <CAJgOqABMnN6XhjL5Jft+LDDsezZ-ROzxn5r0svEaJ+_Wz5JRkg@mail.gmail.com>

Nice.
Did you do something special to string out so many animations?

2016-01-22 14:51 GMT+01:00 jon <jon at jonbondy.com>:

> You did that all with OpenSCAD?  Oh, my!
>
>
> On 1/22/2016 7:59 AM, Trygon wrote:
>
>> You might like this...
>>
>> https://youtu.be/93H82WU8txM
>>
>> Cheers,
>> Trygon
>>
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-tp15783.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>> -----
>> No virus found in this message.
>> Checked by AVG - www.avg.com
>> Version: 2016.0.7357 / Virus Database: 4522/11458 - Release Date: 01/22/16
>>
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160122/e582581d/attachment.html>

From oz.at.michael at gmail.com  Fri Jan 22 15:28:03 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 22 Jan 2016 13:28:03 -0700 (MST)
Subject: [OpenSCAD] How to nicely join angled cylinders and add radius
 at jonction ?
In-Reply-To: <CA+ZHSYrDexdRGOREs7AS6RJX3j_4PME2UiZrT0XmMoc3-hGjWw@mail.gmail.com>
References: <CA+ZHSYrDexdRGOREs7AS6RJX3j_4PME2UiZrT0XmMoc3-hGjWw@mail.gmail.com>
Message-ID: <1453494483437-15816.post@n5.nabble.com>

Hi,
Welcome to the forum. Your post is still flagged as "This post has NOT been
accepted by the mailing list yet", so nobody gets it unless they look. 
You need to subscribe to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.


stressless wrote
> I am new to openScad and already a great fan of it.
> 
> I'd like to have the below cabinet handle 3D printed but have a couple of
> issues:
> 
> 1.) How to have the cylinders join nicely at their intersection ?
> 2.) How to add inner and outer radius at these same intersections ?
> 
> - - - - - - - - - - -
> // Cabinet handle beta - Dan T. Jan. 22, 2016
> echo(version=version());
> $fn=50;
> module half_handle(x,y,z) {
>     rotate(x,y,z) {
>         cylinder(h=3,d=12);
>         cylinder(h=10,d=8);
>         rotate([0,90,0]) translate([-23,0,20])
>             cylinder(h=28,d=8);
>         rotate([0,55,0]) translate([-6.5,0,2.7])
>             cylinder(h=29,d=8);
>     }
> }
> 
> half_handle(0,0,0);
> *translate([96,0,0]) half_handle(180,0,0);
> - - - - - - - - - - -
> I am sure openScad can do it elegantly but I cannot figure it out by
> myself.
> Thanks in advance for any tip.
> 
> Dan

I would trim then ends of the cylinder()s to the angle of the joint, by
difference()ing a cube().

Others may have a different angle?



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/How-to-nicely-join-angled-cylinders-and-add-radius-at-jonction-tp15782p15816.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Fri Jan 22 15:29:18 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 22 Jan 2016 13:29:18 -0700 (MST)
Subject: [OpenSCAD] Openscad commande line
In-Reply-To: <1453484779662-15805.post@n5.nabble.com>
References: <1453484779662-15805.post@n5.nabble.com>
Message-ID: <1453494558227-15817.post@n5.nabble.com>

Also,
Welcome to the forum. Your post is still flagged as "This post has NOT been
accepted by the mailing list yet", so nobody gets it unless they look. 
You need to subscribe to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Openscad-commande-line-tp15805p15817.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Fri Jan 22 15:39:14 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Fri, 22 Jan 2016 21:39:14 +0100
Subject: [OpenSCAD] How to nicely join angled cylinders and add radius
 at jonction ?
In-Reply-To: <1453494483437-15816.post@n5.nabble.com>
References: <CA+ZHSYrDexdRGOREs7AS6RJX3j_4PME2UiZrT0XmMoc3-hGjWw@mail.gmail.com>
	<1453494483437-15816.post@n5.nabble.com>
Message-ID: <56A29372.70104@arnholm.org>

On 22. jan. 2016 21:28, MichaelAtOz wrote:
>
>> stressless wrote
>> I am new to openScad and already a great fan of it.
>
> I would trim then ends of the cylinder()s to the angle of the joint, by
> difference()ing a cube().
>
> Others may have a different angle?

A couple of observations:

1. Is the shape essential or did it just happen to be this way due to 
use of straight cylinders? Perhaps you want a smooth shape handle instead?

2. The handle is going to be very hard to print, support material will 
be required, because you are printing in "open air". I would split it 
down the middle and print two halfs to be joined later instead.

Carsten Arnholm



From arnholm at arnholm.org  Fri Jan 22 15:58:37 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Fri, 22 Jan 2016 21:58:37 +0100
Subject: [OpenSCAD] How to nicely join angled cylinders and add radius
 at jonction ?
In-Reply-To: <56A29372.70104@arnholm.org>
References: <CA+ZHSYrDexdRGOREs7AS6RJX3j_4PME2UiZrT0XmMoc3-hGjWw@mail.gmail.com>
	<1453494483437-15816.post@n5.nabble.com> <56A29372.70104@arnholm.org>
Message-ID: <56A297FD.8040508@arnholm.org>

On 22. jan. 2016 21:39, Carsten Arnholm wrote:
> On 22. jan. 2016 21:28, MichaelAtOz wrote:
>>
>>> stressless wrote
>>> I am new to openScad and already a great fan of it.
>>
>> I would trim then ends of the cylinder()s to the angle of the joint, by
>> difference()ing a cube().
>>
>> Others may have a different angle?
>
> A couple of observations:
>
> 1. Is the shape essential or did it just happen to be this way due to
> use of straight cylinders? Perhaps you want a smooth shape handle instead?

Here is a suggested smooth handle alternative

$fn=180;
module smooth_handle()
{
    intersection()
    {
       translate([0,-1,-50])cube(100);
       scale([1,0.5,1])
       rotate_extrude()
       translate([50,0])
       circle(d=8);
    }

    translate([50,0,0])
    rotate([90,0,0])
    cylinder(h=3,d=12);
}

smooth_handle();


 > 2. The handle is going to be very hard to print, support
 > material will
 > be required, because you are printing in "open air". I would split it
 > down the middle and print two halves to be joined later instead.

Something like this for example:

module printable_handle()
{
    intersection()
    {
       translate([0,-10,0])
       cube(100);
       smooth_handle();
    }
}


Carsten Arnholm



From oz.at.michael at gmail.com  Fri Jan 22 16:16:49 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 22 Jan 2016 14:16:49 -0700 (MST)
Subject: [OpenSCAD] How to nicely join angled cylinders and add radius
 at jonction ?
In-Reply-To: <56A29372.70104@arnholm.org>
References: <CA+ZHSYrDexdRGOREs7AS6RJX3j_4PME2UiZrT0XmMoc3-hGjWw@mail.gmail.com>
	<1453494483437-15816.post@n5.nabble.com>
	<56A29372.70104@arnholm.org>
Message-ID: <1453497409192-15820.post@n5.nabble.com>

cacb wrote
> support material will 
> be required, because you are printing in "open air". I would split it 
> down the middle and print two halfs to be joined later instead.

That's if you use a FFF/FDM printer, others like Shapeways etc don't need
that.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/How-to-nicely-join-angled-cylinders-and-add-radius-at-jonction-tp15782p15820.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Fri Jan 22 18:14:34 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 22 Jan 2016 16:14:34 -0700 (MST)
Subject: [OpenSCAD] How to nicely join angled cylinders and add radius
 at jonction ?
In-Reply-To: <CA+ZHSYrDexdRGOREs7AS6RJX3j_4PME2UiZrT0XmMoc3-hGjWw@mail.gmail.com>
References: <CA+ZHSYrDexdRGOREs7AS6RJX3j_4PME2UiZrT0XmMoc3-hGjWw@mail.gmail.com>
Message-ID: <1453504474771-15821.post@n5.nabble.com>

put a sphere at each junction



--
View this message in context: http://forum.openscad.org/How-to-nicely-join-angled-cylinders-and-add-radius-at-jonction-tp15782p15821.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Fri Jan 22 18:47:09 2016
From: doug at moens.org (doug moen)
Date: Fri, 22 Jan 2016 18:47:09 -0500
Subject: [OpenSCAD] 3D Builder
In-Reply-To: <1453488670794-15814.post@n5.nabble.com>
References: <1453479107072-15789.post@n5.nabble.com>
	<E20A53D0-D308-4866-86CF-54D1F62BAACC@kintel.net>
	<CAJc0q44Hz9JXuFeNtHCVFU94AduU5pyss+Qvvyw7YKuGRMWOuA@mail.gmail.com>
	<56A26C82.6030009@arnholm.org>
	<1453488670794-15814.post@n5.nabble.com>
Message-ID: <CAGV6i+NnAZ4QN--emyN7RTqqpYeBSNO5Hzu3i62=eW++iZfo4A@mail.gmail.com>

Of the slicers I mentioned, MakerWare lets you control the Z position, and
Slic3r won't. Slic3r has a few commands missing in MakerWare: split a scene
into disjoint objects, and slice a single object into pieces. MakerWare has
a better GUI.

Mekko said: "I had eight parts, fairly complex, and I
tried a) putting all the code in one .scad file and rendering all of them,
and b) exporting .stl files for each of the parts and then using a separate
.scad file and translate() import() calls to position the collection of
parts. OpenSCAD crashed both ways"

There's no good reason why OpenSCAD needs to crash in this scenario.
Clearly, there are other mesh tools that can perform the same job without
crashing.

On 22 January 2016 at 13:51, Mekko <serve at perdix.org> wrote:

> If I'm understanding factorr's issue correctly then I have a couple of
> observations based on my own experiences.
>
> First of all, there are several 3D printer services who will sell you a
> volume to print and you can fill the volume however you like. In some cases
> the volume dimensions are pre-determined (e.g.,
> http://www.digits2widgets.com/3d_printing_prices/nylon_sls_containers/)
> and
> in some cases the volume dimensions are up to you (e.g.,
> https://i.materialise.com/container-upload and
> https://www.3dprint-uk.co.uk/pricing/). I have used all three of those
> services and compared to Shapeways and Sculpteo (whom I have also used)
> those three are all *much* less expensive and all are great on customer
> service. For example, one of my parts was $20.86 at Shapeways and $8.08 at
> 3DPRINTUK.
>
> Second of all, the problem that factorr is hitting with OpenSCAD is a
> "right
> tool for the job" kind of problem. I had eight parts, fairly complex, and I
> tried a) putting all the code in one .scad file and rendering all of them,
> and b) exporting .stl files for each of the parts and then using a separate
> .scad file and translate() import() calls to position the collection of
> parts. OpenSCAD crashed both ways and I don't really fault it - that's not
> its job.
>
> So I use MeshLab for positioning. I import all my .stl meshes, position
> them, and then use the Filters/Mesh Layer/Flatten Visible Layers command to
> create a unified mesh that I then export as a .stl file. It has a boundary
> box view that helps with this considerably.
>
> With respect to slicers,  I use Cura for driving my 3D printer and it
> provides a way for positioning pieces in the XY plane but, as far as I
> know,
> not along the Z axis. Maybe the other slicers have better functionality in
> this area but again, I'm still not sure their main purpose is to support
> XYZ
> positioning.
>
> Hope this helps!
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/3D-Builder-tp15789p15814.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160122/3293f474/attachment.html>

From richard.mortimer at bell.net  Fri Jan 22 20:07:52 2016
From: richard.mortimer at bell.net (richard_d)
Date: Fri, 22 Jan 2016 18:07:52 -0700 (MST)
Subject: [OpenSCAD] Parametric gear pump design
Message-ID: <1453511272878-15823.post@n5.nabble.com>

I am seeking a gear pump design that can be modified as needed.  Although
there are many .stl gear pumps designs around, I have not yet found a
parametric version.  Has anyone seen such a beast?



--
View this message in context: http://forum.openscad.org/Parametric-gear-pump-design-tp15823.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Fri Jan 22 21:17:35 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 22 Jan 2016 19:17:35 -0700 (MST)
Subject: [OpenSCAD] 2D view, negative Z
Message-ID: <1453515455482-15824.post@n5.nabble.com>

Top view after render
<http://forum.openscad.org/file/n15824/2D_-Z_top.jpg> 
Side view - note negative Z
<http://forum.openscad.org/file/n15824/2D_-Z_Right.jpg> 
Angled views, make it look like it is not aligned to the axis
<http://forum.openscad.org/file/n15824/2D_-Z_angle_same.jpg> 
<http://forum.openscad.org/file/n15824/2D_-Z_angle_opposite.jpg> 

Is this fixable?




-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/2D-view-negative-Z-tp15824.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Fri Jan 22 21:28:52 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 22 Jan 2016 19:28:52 -0700 (MST)
Subject: [OpenSCAD] 2D view, negative Z
In-Reply-To: <1453515455482-15824.post@n5.nabble.com>
References: <1453515455482-15824.post@n5.nabble.com>
Message-ID: <1453516132258-15825.post@n5.nabble.com>

I just translated it to look OK... for the wiki
<http://forum.openscad.org/file/n15825/Rotate_extrude_wiki_2D_B.jpg> 



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/2D-view-negative-Z-tp15824p15825.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Sat Jan 23 00:26:12 2016
From: mschafer at wireframe.biz (Neon22)
Date: Fri, 22 Jan 2016 22:26:12 -0700 (MST)
Subject: [OpenSCAD] Parametric gear pump design
In-Reply-To: <1453511272878-15823.post@n5.nabble.com>
References: <1453511272878-15823.post@n5.nabble.com>
Message-ID: <1453526772677-15826.post@n5.nabble.com>

depends what you mean by gear pump.
there are some moineau variants here:
 - http://www.thingiverse.com/Neon22/collections/moineau




--
View this message in context: http://forum.openscad.org/Parametric-gear-pump-design-tp15823p15826.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Sat Jan 23 00:30:50 2016
From: mschafer at wireframe.biz (Neon22)
Date: Fri, 22 Jan 2016 22:30:50 -0700 (MST)
Subject: [OpenSCAD] How to nicely join angled cylinders and add radius
 at jonction ?
In-Reply-To: <1453504474771-15821.post@n5.nabble.com>
References: <CA+ZHSYrDexdRGOREs7AS6RJX3j_4PME2UiZrT0XmMoc3-hGjWw@mail.gmail.com>
	<1453504474771-15821.post@n5.nabble.com>
Message-ID: <1453527050432-15827.post@n5.nabble.com>

@clothbots fillet operator generates nice results
- https://github.com/clothbot/ClothBotCreations/tree/master/utilities
E.g. example in this thread
http://forum.openscad.org/Non-Linear-Transformations-td14539i40.html#a14638



--
View this message in context: http://forum.openscad.org/How-to-nicely-join-angled-cylinders-and-add-radius-at-jonction-tp15782p15827.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Sat Jan 23 05:37:08 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Sat, 23 Jan 2016 11:37:08 +0100
Subject: [OpenSCAD] 2D view, negative Z
In-Reply-To: <1453515455482-15824.post@n5.nabble.com>
References: <1453515455482-15824.post@n5.nabble.com>
Message-ID: <56A357D4.9070806@arnholm.org>

On 23. jan. 2016 03:17, MichaelAtOz wrote:
> Top view after render
> <http://forum.openscad.org/file/n15824/2D_-Z_top.jpg>
> Side view - note negative Z
> <http://forum.openscad.org/file/n15824/2D_-Z_Right.jpg>
> Angled views, make it look like it is not aligned to the axis
> <http://forum.openscad.org/file/n15824/2D_-Z_angle_same.jpg>
> <http://forum.openscad.org/file/n15824/2D_-Z_angle_opposite.jpg>
>
> Is this fixable?

This seems paradoxical, or perhaps not? The problem relates to the value 
of the non-existent z coordinate in a 2d [x,y] coordinate system?

I think 2d coordinates on OpenSCAD are slightly (just slightly) 
scizophrenic. 2d shapes are sometimes drawn/interpreted/used for a value 
of z != 0, showing that it really has a z value as in your example.

When you rotate a 2d shape around for example the y-axis to give the 
coordinates z != 0, strange things start to happen. First, it makes a 
lot of sense:

rotate([0,-45]) translate([15,0])circle(5);

http://arnholm.org/tmp/openscad/circle2d_rotated.png

Now you have a 2d circle placed in 3d space where the points on the 
circumference of the circle have different z-coordinates in the global 
system. It is also drawn correctly with a small unit thickness in the 
direction perpendicular to the transformed local 2d coordinate system. 
It is the local coordinate system of the circle that is 2d, not its 
placement or orientation in 3d space. The display this in OpenSCAD 
appears to support this understanding.

But try this "extrude1":

module extrude1()
{
    color("green")
    linear_extrude(height=10)
    rotate([0,-45])
       translate([15,0])circle(5);
}
extrude1();

For some reason, the (unstated) projection of the rotated circle down to 
the global coordinate system x-y plane is now taken as the starting 
point of an extrusion in global z direction. This is where the thing is 
(slightly) scizophrenic, the circle has and it hasn't values for its 
z-coordinates, and the direction of its thickness/direction of extrusion 
has changed.

One could perhaps argue that a more consistent behaviour would be for 
the above to cause the same result as this "extrude2":

module circle3d(r=1,dx=1,ry=1)
{
    rotate([0,ry]) translate([15,0])
    linear_extrude(height=0.001) circle(r);
}

module extrude2()
{
    color("red")
    hull(){
      circle3d(r=5,dx=15,ry=-45);
      translate([0,0,10])
         circle3d(r=5,dx=15,ry=-45);
    }
}
extrude2();

That is, it is more consistent if you insist that linear_extrude 
operates only in z of the global 3d coordinate system. However, it is 
equally logical to expect that linear_extrude extrudes in the 
perpendicular direction of its 2d input, just like the original unit 
thickness drawing was hinting. After all the purpose in life of 
linear_extrude is to convert from 2d shapes to 3d solids. Therefore, 
accepting that transformed 2d shapes can exist in 3d space with 
coordinates z!=0, you might as well have expected the first extrusion to 
give a result equivalent to this:

module extrude3()
{
    color("blue") rotate([0,-45])
    linear_extrude(height=10)
    translate([15,0]) circle(r=5);
}
extrude3();

http://arnholm.org/tmp/openscad/extrusion_confusion.png

If you understand these inconsistencies, it is manageable. However, the 
behaviour of  extrude1() is really unreasonable in my mind. I think it 
would have been more consistent and logical if extrude1() gave the same 
result as extrude3(), i.e. the extrusion was in the direction of the 
original drawn unit thickness of the transformed 2d circle, starting 
from the placement of the circle in 3d space.

If you understand these inconsistencies it isn't a big problem, but I 
can imagine new users being very much confused by them.

Carsten Arnholm




From nop.head at gmail.com  Sat Jan 23 06:06:42 2016
From: nop.head at gmail.com (nop head)
Date: Sat, 23 Jan 2016 11:06:42 +0000
Subject: [OpenSCAD] 2D view, negative Z
In-Reply-To: <56A357D4.9070806@arnholm.org>
References: <1453515455482-15824.post@n5.nabble.com>
	<56A357D4.9070806@arnholm.org>
Message-ID: <CAEEmnrPj+tOY8itqHHHH21d7KywxFjzWH3WRMG44N1bg1rVs8w@mail.gmail.com>

square(); produces a square below the XY plane with F6, so I think there is
a bug drawing 2D objects on top of all the schizophrenia.

On 23 January 2016 at 10:37, Carsten Arnholm <arnholm at arnholm.org> wrote:

> On 23. jan. 2016 03:17, MichaelAtOz wrote:
>
>> Top view after render
>> <http://forum.openscad.org/file/n15824/2D_-Z_top.jpg>
>> Side view - note negative Z
>> <http://forum.openscad.org/file/n15824/2D_-Z_Right.jpg>
>> Angled views, make it look like it is not aligned to the axis
>> <http://forum.openscad.org/file/n15824/2D_-Z_angle_same.jpg>
>> <http://forum.openscad.org/file/n15824/2D_-Z_angle_opposite.jpg>
>>
>> Is this fixable?
>>
>
> This seems paradoxical, or perhaps not? The problem relates to the value
> of the non-existent z coordinate in a 2d [x,y] coordinate system?
>
> I think 2d coordinates on OpenSCAD are slightly (just slightly)
> scizophrenic. 2d shapes are sometimes drawn/interpreted/used for a value of
> z != 0, showing that it really has a z value as in your example.
>
> When you rotate a 2d shape around for example the y-axis to give the
> coordinates z != 0, strange things start to happen. First, it makes a lot
> of sense:
>
> rotate([0,-45]) translate([15,0])circle(5);
>
> http://arnholm.org/tmp/openscad/circle2d_rotated.png
>
> Now you have a 2d circle placed in 3d space where the points on the
> circumference of the circle have different z-coordinates in the global
> system. It is also drawn correctly with a small unit thickness in the
> direction perpendicular to the transformed local 2d coordinate system. It
> is the local coordinate system of the circle that is 2d, not its placement
> or orientation in 3d space. The display this in OpenSCAD appears to support
> this understanding.
>
> But try this "extrude1":
>
> module extrude1()
> {
>    color("green")
>    linear_extrude(height=10)
>    rotate([0,-45])
>       translate([15,0])circle(5);
> }
> extrude1();
>
> For some reason, the (unstated) projection of the rotated circle down to
> the global coordinate system x-y plane is now taken as the starting point
> of an extrusion in global z direction. This is where the thing is
> (slightly) scizophrenic, the circle has and it hasn't values for its
> z-coordinates, and the direction of its thickness/direction of extrusion
> has changed.
>
> One could perhaps argue that a more consistent behaviour would be for the
> above to cause the same result as this "extrude2":
>
> module circle3d(r=1,dx=1,ry=1)
> {
>    rotate([0,ry]) translate([15,0])
>    linear_extrude(height=0.001) circle(r);
> }
>
> module extrude2()
> {
>    color("red")
>    hull(){
>      circle3d(r=5,dx=15,ry=-45);
>      translate([0,0,10])
>         circle3d(r=5,dx=15,ry=-45);
>    }
> }
> extrude2();
>
> That is, it is more consistent if you insist that linear_extrude operates
> only in z of the global 3d coordinate system. However, it is equally
> logical to expect that linear_extrude extrudes in the perpendicular
> direction of its 2d input, just like the original unit thickness drawing
> was hinting. After all the purpose in life of linear_extrude is to convert
> from 2d shapes to 3d solids. Therefore, accepting that transformed 2d
> shapes can exist in 3d space with coordinates z!=0, you might as well have
> expected the first extrusion to give a result equivalent to this:
>
> module extrude3()
> {
>    color("blue") rotate([0,-45])
>    linear_extrude(height=10)
>    translate([15,0]) circle(r=5);
> }
> extrude3();
>
> http://arnholm.org/tmp/openscad/extrusion_confusion.png
>
> If you understand these inconsistencies, it is manageable. However, the
> behaviour of  extrude1() is really unreasonable in my mind. I think it
> would have been more consistent and logical if extrude1() gave the same
> result as extrude3(), i.e. the extrusion was in the direction of the
> original drawn unit thickness of the transformed 2d circle, starting from
> the placement of the circle in 3d space.
>
> If you understand these inconsistencies it isn't a big problem, but I can
> imagine new users being very much confused by them.
>
> Carsten Arnholm
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160123/1e5b0583/attachment.html>

From Torsten.Paul at gmx.de  Sat Jan 23 06:18:25 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sat, 23 Jan 2016 12:18:25 +0100
Subject: [OpenSCAD] 2D view, negative Z
In-Reply-To: <CAEEmnrPj+tOY8itqHHHH21d7KywxFjzWH3WRMG44N1bg1rVs8w@mail.gmail.com>
References: <1453515455482-15824.post@n5.nabble.com>
	<56A357D4.9070806@arnholm.org>
	<CAEEmnrPj+tOY8itqHHHH21d7KywxFjzWH3WRMG44N1bg1rVs8w@mail.gmail.com>
Message-ID: <56A36181.3070101@gmx.de>

On 01/23/2016 12:06 PM, nop head wrote:
> square(); produces a square below the XY plane with F6, so I think
> there is a bug drawing 2D objects on top of all the schizophrenia.
>
Yes, that one:
https://github.com/openscad/openscad/issues/1202

ciao,
  Torsten.



From db5765 at outlook.com  Sat Jan 23 06:19:21 2016
From: db5765 at outlook.com (Trygon)
Date: Sat, 23 Jan 2016 04:19:21 -0700 (MST)
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <56A23A6A.9020800@bornhaupt.de>
References: <1453467556876-15783.post@n5.nabble.com>
	<56A23A6A.9020800@bornhaupt.de>
Message-ID: <1453547961408-15833.post@n5.nabble.com>

Thank you all for your kind words.

Thomas, I used FFmpeg (freeware :) ffmpeg.org) to do all the video
post-processing once I had generated the the image frames using animate in
OpenSCAD. I will give you a much more comprehensive answer when I have a bit
more time - my experience is that FFmpeg is very capable but quite daunting!

Peter, The video comprises a number of separate segments, each generated by
its own OpenSCAD script. These were then turned into video segments and
subsequently glued together using FFmpeg. For most segments the opening
position of the components corresponds to the closing position from the
previous segment so the breaks are not visible.

Cheers,
Trygon



--
View this message in context: http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-tp15783p15833.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From juca at members.fsf.org  Sat Jan 23 06:33:51 2016
From: juca at members.fsf.org (Felipe Sanches)
Date: Sat, 23 Jan 2016 09:33:51 -0200
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <1453547961408-15833.post@n5.nabble.com>
References: <1453467556876-15783.post@n5.nabble.com>
	<56A23A6A.9020800@bornhaupt.de>
	<1453547961408-15833.post@n5.nabble.com>
Message-ID: <CAK6XL6DFRe5zzsoxPucHBvb4v_4OVym+Aek4X2NOvkPBi0xKdQ@mail.gmail.com>

It would be awesome to have these SCAD scripts published on GitHub
(https://github.com) with a free license.



On Sat, Jan 23, 2016 at 9:19 AM, Trygon <db5765 at outlook.com> wrote:
> Thank you all for your kind words.
>
> Thomas, I used FFmpeg (freeware :) ffmpeg.org) to do all the video
> post-processing once I had generated the the image frames using animate in
> OpenSCAD. I will give you a much more comprehensive answer when I have a bit
> more time - my experience is that FFmpeg is very capable but quite daunting!
>
> Peter, The video comprises a number of separate segments, each generated by
> its own OpenSCAD script. These were then turned into video segments and
> subsequently glued together using FFmpeg. For most segments the opening
> position of the components corresponds to the closing position from the
> previous segment so the breaks are not visible.
>
> Cheers,
> Trygon
>
>
>
> --
> View this message in context: http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-tp15783p15833.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


From juca at members.fsf.org  Sat Jan 23 06:34:26 2016
From: juca at members.fsf.org (Felipe Sanches)
Date: Sat, 23 Jan 2016 09:34:26 -0200
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <CAK6XL6DFRe5zzsoxPucHBvb4v_4OVym+Aek4X2NOvkPBi0xKdQ@mail.gmail.com>
References: <1453467556876-15783.post@n5.nabble.com>
	<56A23A6A.9020800@bornhaupt.de>
	<1453547961408-15833.post@n5.nabble.com>
	<CAK6XL6DFRe5zzsoxPucHBvb4v_4OVym+Aek4X2NOvkPBi0xKdQ@mail.gmail.com>
Message-ID: <CAK6XL6D1DtC0rZBHQtcV9UV_gj2K75Xqt_RH=LqBb26KGaVNXA@mail.gmail.com>

There are many possibilities, but some quick examples of ways you can
mark the licensing of the scripts are:

* "These scripts are released to the public domain"
* "These scripts are (c) 2015 Trygon <fullname & email address> and
are released under the terms of the General Public License, version 3
or later")

On Sat, Jan 23, 2016 at 9:33 AM, Felipe Sanches <juca at members.fsf.org> wrote:
> It would be awesome to have these SCAD scripts published on GitHub
> (https://github.com) with a free license.
>
>
>
> On Sat, Jan 23, 2016 at 9:19 AM, Trygon <db5765 at outlook.com> wrote:
>> Thank you all for your kind words.
>>
>> Thomas, I used FFmpeg (freeware :) ffmpeg.org) to do all the video
>> post-processing once I had generated the the image frames using animate in
>> OpenSCAD. I will give you a much more comprehensive answer when I have a bit
>> more time - my experience is that FFmpeg is very capable but quite daunting!
>>
>> Peter, The video comprises a number of separate segments, each generated by
>> its own OpenSCAD script. These were then turned into video segments and
>> subsequently glued together using FFmpeg. For most segments the opening
>> position of the components corresponds to the closing position from the
>> previous segment so the breaks are not visible.
>>
>> Cheers,
>> Trygon
>>
>>
>>
>> --
>> View this message in context: http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-tp15783p15833.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


From thomas at bornhaupt.de  Sat Jan 23 07:32:21 2016
From: thomas at bornhaupt.de (Thomas Bornhaupt)
Date: Sat, 23 Jan 2016 13:32:21 +0100
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <1453547961408-15833.post@n5.nabble.com>
References: <1453467556876-15783.post@n5.nabble.com>
	<56A23A6A.9020800@bornhaupt.de>
	<1453547961408-15833.post@n5.nabble.com>
Message-ID: <56A372D5.4000508@bornhaupt.de>

An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160123/110dc472/attachment.html>

From richard.mortimer at bell.net  Sat Jan 23 09:36:41 2016
From: richard.mortimer at bell.net (richard_d)
Date: Sat, 23 Jan 2016 07:36:41 -0700 (MST)
Subject: [OpenSCAD] Parametric gear pump design
In-Reply-To: <1453526772677-15826.post@n5.nabble.com>
References: <1453511272878-15823.post@n5.nabble.com>
	<1453526772677-15826.post@n5.nabble.com>
Message-ID: <1453559801303-15842.post@n5.nabble.com>

Thanks for the input regarding the Moineau system.  I am aware of this option
but I am more interested in a gear pump system as in
http://www.thingiverse.com/search?q=756866&sa= except in parametric form.



--
View this message in context: http://forum.openscad.org/Parametric-gear-pump-design-tp15823p15842.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrew at plumb.org  Sat Jan 23 10:23:20 2016
From: andrew at plumb.org (Andrew Plumb)
Date: Sat, 23 Jan 2016 10:23:20 -0500
Subject: [OpenSCAD] How to nicely join angled cylinders and add radius
	at jonction ?
In-Reply-To: <1453527050432-15827.post@n5.nabble.com>
References: <CA+ZHSYrDexdRGOREs7AS6RJX3j_4PME2UiZrT0XmMoc3-hGjWw@mail.gmail.com>
	<1453504474771-15821.post@n5.nabble.com>
	<1453527050432-15827.post@n5.nabble.com>
Message-ID: <9749849D-988F-4D1C-95A3-37966B67AD92@plumb.org>

The main caveat with my fillet operator is that it won?t preserve holes through the intersecting region because it uses hull. You have to difference() out the holes after the fillet operation if you care about them.

I filed issue 1562 - https://github.com/openscad/openscad/issues/1562 <https://github.com/openscad/openscad/issues/1562> - requesting a convex_decomposition() operator, however the implicit unions issue would gate that implementation - https://github.com/openscad/openscad/issues/350 <https://github.com/openscad/openscad/issues/350>

Andrew.

> On Jan 23, 2016, at 12:30 AM, Neon22 <mschafer at wireframe.biz> wrote:
> 
> @clothbots fillet operator generates nice results
> - https://github.com/clothbot/ClothBotCreations/tree/master/utilities
> E.g. example in this thread
> http://forum.openscad.org/Non-Linear-Transformations-td14539i40.html#a14638
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/How-to-nicely-join-angled-cylinders-and-add-radius-at-jonction-tp15782p15827.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

--

"The future is already here.  It's just not very evenly distributed" -- William Gibson

Me: http://clothbot.com/wiki/ <http://clothbot.com/wiki/>



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160123/6e1f0ffb/attachment.html>

From fred_dot_u at yahoo.com  Sat Jan 23 10:31:16 2016
From: fred_dot_u at yahoo.com (fred)
Date: Sat, 23 Jan 2016 15:31:16 +0000 (UTC)
Subject: [OpenSCAD] Parametric gear pump design
In-Reply-To: <1453559801303-15842.post@n5.nabble.com>
References: <1453559801303-15842.post@n5.nabble.com>
Message-ID: <1149564172.209662.1453563076560.JavaMail.yahoo@mail.yahoo.com>

I did a quick search on Thingiverse using the search phrase "openscad gear pump" and got three pump designs, all of which are OpenSCAD creations. One is a roots style blower, the other two are gear rotor type. Perhaps one of them will assist your search?
 

    On Saturday, January 23, 2016 9:37 AM, richard_d <richard.mortimer at bell.net> wrote:
 

 Thanks for the input regarding the Moineau system.? I am aware of this option
but I am more interested in a gear pump system as in
http://www.thingiverse.com/search?q=756866&sa= except in parametric form.



--
View this message in context: http://forum.openscad.org/Parametric-gear-pump-design-tp15823p15842.html
Sent from the OpenSCAD mailing list archive at Nabble.com.

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160123/17c4f8c4/attachment.html>

From richard.mortimer at bell.net  Sat Jan 23 10:49:31 2016
From: richard.mortimer at bell.net (richard_d)
Date: Sat, 23 Jan 2016 08:49:31 -0700 (MST)
Subject: [OpenSCAD] Parametric gear pump design
In-Reply-To: <1149564172.209662.1453563076560.JavaMail.yahoo@mail.yahoo.com>
References: <1453511272878-15823.post@n5.nabble.com>
	<1453526772677-15826.post@n5.nabble.com>
	<1453559801303-15842.post@n5.nabble.com>
	<1149564172.209662.1453563076560.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <1453564171526-15845.post@n5.nabble.com>

I had seen these options earlier and ignored them but, prompted by your
response, I took another look and I think the Gerotor design might be
modified to my purpose.  So, thank you for jogging me out of my rut.



--
View this message in context: http://forum.openscad.org/Parametric-gear-pump-design-tp15823p15845.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Sat Jan 23 12:30:11 2016
From: marius at kintel.net (kintel)
Date: Sat, 23 Jan 2016 10:30:11 -0700 (MST)
Subject: [OpenSCAD] Openscad commande line
In-Reply-To: <1453542116451-15828.post@n5.nabble.com>
References: <1453484779662-15805.post@n5.nabble.com>
	<1453485691941-15807.post@n5.nabble.com>
	<1453542116451-15828.post@n5.nabble.com>
Message-ID: <1453570211646-15846.post@n5.nabble.com>

How did you install OpenSCAD? Note that the man page for systems like
MacPorts or Homebrew is linked to the package name, not the executable name.



--
View this message in context: http://forum.openscad.org/Openscad-commande-line-tp15805p15846.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From antoinekindt at hotmail.com  Sat Jan 23 13:01:10 2016
From: antoinekindt at hotmail.com (antaur)
Date: Sat, 23 Jan 2016 11:01:10 -0700 (MST)
Subject: [OpenSCAD] Openscad commande line
In-Reply-To: <1453570211646-15846.post@n5.nabble.com>
References: <1453484779662-15805.post@n5.nabble.com>
	<1453485691941-15807.post@n5.nabble.com>
	<1453542116451-15828.post@n5.nabble.com>
	<1453570211646-15846.post@n5.nabble.com>
Message-ID: <1453572070176-15847.post@n5.nabble.com>

i have installed openscad first with the sources, got a error in compiling
the sources with (parse error with BOOSTJOIN) so i have install openscad
with dmg file, but i want to use it in command line.







--
View this message in context: http://forum.openscad.org/Openscad-commande-line-tp15805p15847.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Sat Jan 23 13:31:32 2016
From: marius at kintel.net (Marius Kintel)
Date: Sat, 23 Jan 2016 13:31:32 -0500
Subject: [OpenSCAD] Openscad commande line
In-Reply-To: <1453572070176-15847.post@n5.nabble.com>
References: <1453484779662-15805.post@n5.nabble.com>
	<1453485691941-15807.post@n5.nabble.com>
	<1453542116451-15828.post@n5.nabble.com>
	<1453570211646-15846.post@n5.nabble.com>
	<1453572070176-15847.post@n5.nabble.com>
Message-ID: <6C7FC41B-13CF-423B-93BA-1BDDC5F4E0C6@kintel.net>


> On Jan 23, 2016, at 13:01 PM, antaur <antoinekindt at hotmail.com> wrote:
> 
> i have installed openscad first with the sources, got a error in compiling
> the sources with (parse error with BOOSTJOIN) so i have install openscad
> with dmg file, but i want to use it in command line.
> 
In that case, my first suggestion is the correct one.

 -Marius



From marius at kintel.net  Sat Jan 23 14:08:57 2016
From: marius at kintel.net (Marius Kintel)
Date: Sat, 23 Jan 2016 14:08:57 -0500
Subject: [OpenSCAD] 2D view, negative Z
In-Reply-To: <56A36181.3070101@gmx.de>
References: <1453515455482-15824.post@n5.nabble.com>
	<56A357D4.9070806@arnholm.org>
	<CAEEmnrPj+tOY8itqHHHH21d7KywxFjzWH3WRMG44N1bg1rVs8w@mail.gmail.com>
	<56A36181.3070101@gmx.de>
Message-ID: <CF2CD7DD-0FF7-45BE-9583-F72F6F172985@kintel.net>

> On Jan 23, 2016, at 06:18 AM, Torsten Paul <Torsten.Paul at gmx.de> wrote:
> 
> On 01/23/2016 12:06 PM, nop head wrote:
>> square(); produces a square below the XY plane with F6, so I think
>> there is a bug drawing 2D objects on top of all the schizophrenia.
>> 
> Yes, that one:
> https://github.com/openscad/openscad/issues/1202
> 
Right, let?s just change it :)

 -Marius



From chrisjfarrell at sky.com  Sat Jan 23 15:47:27 2016
From: chrisjfarrell at sky.com (chrisjfarrell)
Date: Sat, 23 Jan 2016 13:47:27 -0700 (MST)
Subject: [OpenSCAD] Unable to difference a polyhedron with a cylinder
Message-ID: <1453582047666-15850.post@n5.nabble.com>

I've been working on a custom polyhedron, and want to make some circular
holes through it for motor spindles.

I've been using difference and cylinders, but on export it complains "Object
may not be a valid 2-manifold and may need repair!".

I have checked it in thrown together view, but all seems fine and correctly
orientated. I have also tried removing the cylinders and it then doesn't
report any warnings on export. 

I've also tested with a simple polyhedron cube and a cube differenced
against that which works fine, which means I can do it in principle, but I
just can't figure out why it's misbehaving for me.

My research across the internet has yielded things to check but doesn't help
at all pinpointing my issue, but I could be missing something obvious.

Any help would be greatly appreciated. My code is below.

Many thanks
Chris

width=80;
length=90;
height=60;

wall_thickness=2;

motor_hole_radius=5;
motor_offset_from_rear=30;

wedge_length=6;
wedge_rise=2;

left_right_top_width=10;

rear_top_length=12;
rear_top_inner_rise=4.7;

module mainBody()
{
polyhedron(
    points = 
    [
        //outer bottom
        [0,0,(height/2)],//FL (0)
        [width,0,(height/2)],//FR (1)
        [width, length, 0],//BR (2)
        [0, length, 0],//BL (3)
        
        //outer top points
        [width, length, height],//BR (4)
        [0, length, height],//BL (5)
    
        //inner left
        [wall_thickness, (length-wall_thickness), wall_thickness],//BL
(Bottom) (6)
        [wall_thickness, (length-wall_thickness),
(height-wall_thickness)],//BL (Top) (7)
        
        //inner right
        [(width-wall_thickness),(length-wall_thickness),wall_thickness],//BR
(Bottom) (8)
       
[(width-wall_thickness),(length-wall_thickness),(height-wall_thickness)],//BL
(Top) (9)
        
        //front wedge (back) (as looking from front)
        [wall_thickness,wedge_length,(height/2)],//L (Bottom) (10)
        [(width-wall_thickness),wedge_length,(height/2)],//R (Bottom) (11)
        
        //inner left top
        [(wall_thickness+left_right_top_width), wedge_length, (height/2)],
//front (12)
        
        //outer left top
        [(wall_thickness+left_right_top_width), wedge_length,
((height/2)+wedge_rise)], //front (13)
        
        //inner right top
        [(width-(wall_thickness+left_right_top_width)), wedge_length,
(height/2)], //front (14)
        
        //outer right top
        [(width-(wall_thickness+left_right_top_width)), wedge_length,
((height/2)+wedge_rise)], //front (15)
        
        //inner rear top
       
[(left_right_top_width+wall_thickness),(length-(wall_thickness+rear_top_length)),
(height-(rear_top_inner_rise+wall_thickness))],//L (16)
       
[(width-(left_right_top_width+wall_thickness)),(length-(wall_thickness+rear_top_length)),
(height-(rear_top_inner_rise+wall_thickness))],//R (17)
        
        //outer rear top
       
[(left_right_top_width+wall_thickness),(length-(wall_thickness+rear_top_length)),
(height-rear_top_inner_rise)],//L (18)
       
[(width-(left_right_top_width+wall_thickness)),(length-(wall_thickness+rear_top_length)),
(height-rear_top_inner_rise)],//R (19)
        
    ],
    faces = 
    [
        [0,1,2,3],//outer bottom
        [3,5,0],//outer left
        [1,4,2],// outer right
        [2,4,5,3],//outer back
        
        [10,6,8,11],//inner bottom
        
        [10,7,6], //inner left
        
        [8,9,11], //inner right
        
        [6,7,9,8], //inner back
        
        [0,13,15,1],//Front wedge (top)
        
        [14,15,13,12],//Front wedge (back)
        
        [12,16,7,10],//inner left top
        
        [0,5,18,13],//outer left top
        
        [11,9,17,14],//inner right top
        
        [15, 19, 4, 1],//outer right top
        
        [17,9,7,16],//inner rear top
        
        [18,5,4,19],//outer rear top
        
        [12,13,18,16],//close left top
        
        [17,19,15,14],//close right top
        
        [16,18,19,17],//close back top
    ]
);
}
difference()
{
    mainBody();
//left motor hole
translate([-1,(length-motor_offset_from_rear),(height/2)]) rotate([0,90,0])
cylinder(h = wall_thickness+2, r1 = motor_hole_radius, r2 =
motor_hole_radius);

//right motor hole
translate([(width-(wall_thickness+1)),(length-motor_offset_from_rear),(height/2)])
rotate([0,90,0]) cylinder(h = wall_thickness+2, r1 = motor_hole_radius, r2 =
motor_hole_radius);
}



--
View this message in context: http://forum.openscad.org/Unable-to-difference-a-polyhedron-with-a-cylinder-tp15850.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jon at jonbondy.com  Sat Jan 23 15:58:07 2016
From: jon at jonbondy.com (jon)
Date: Sat, 23 Jan 2016 15:58:07 -0500
Subject: [OpenSCAD] Unable to difference a polyhedron with a cylinder
In-Reply-To: <1453582047666-15850.post@n5.nabble.com>
References: <1453582047666-15850.post@n5.nabble.com>
Message-ID: <56A3E95F.6020406@jonbondy.com>

Just by visual inspection (after cutting the top off with a cube) the 
walls you are drilling the holes through appear to be made of two thin 
sheets, rather than being thick and solid...

Jon

On 1/23/2016 3:47 PM, chrisjfarrell wrote:
> I've been working on a custom polyhedron, and want to make some circular
> holes through it for motor spindles.
>
> I've been using difference and cylinders, but on export it complains "Object
> may not be a valid 2-manifold and may need repair!".
>
> I have checked it in thrown together view, but all seems fine and correctly
> orientated. I have also tried removing the cylinders and it then doesn't
> report any warnings on export.
>
> I've also tested with a simple polyhedron cube and a cube differenced
> against that which works fine, which means I can do it in principle, but I
> just can't figure out why it's misbehaving for me.
>
> My research across the internet has yielded things to check but doesn't help
> at all pinpointing my issue, but I could be missing something obvious.
>
> Any help would be greatly appreciated. My code is below.
>
> Many thanks
> Chris
>
> width=80;
> length=90;
> height=60;
>
> wall_thickness=2;
>
> motor_hole_radius=5;
> motor_offset_from_rear=30;
>
> wedge_length=6;
> wedge_rise=2;
>
> left_right_top_width=10;
>
> rear_top_length=12;
> rear_top_inner_rise=4.7;
>
> module mainBody()
> {
> polyhedron(
>      points =
>      [
>          //outer bottom
>          [0,0,(height/2)],//FL (0)
>          [width,0,(height/2)],//FR (1)
>          [width, length, 0],//BR (2)
>          [0, length, 0],//BL (3)
>          
>          //outer top points
>          [width, length, height],//BR (4)
>          [0, length, height],//BL (5)
>      
>          //inner left
>          [wall_thickness, (length-wall_thickness), wall_thickness],//BL
> (Bottom) (6)
>          [wall_thickness, (length-wall_thickness),
> (height-wall_thickness)],//BL (Top) (7)
>          
>          //inner right
>          [(width-wall_thickness),(length-wall_thickness),wall_thickness],//BR
> (Bottom) (8)
>         
> [(width-wall_thickness),(length-wall_thickness),(height-wall_thickness)],//BL
> (Top) (9)
>          
>          //front wedge (back) (as looking from front)
>          [wall_thickness,wedge_length,(height/2)],//L (Bottom) (10)
>          [(width-wall_thickness),wedge_length,(height/2)],//R (Bottom) (11)
>          
>          //inner left top
>          [(wall_thickness+left_right_top_width), wedge_length, (height/2)],
> //front (12)
>          
>          //outer left top
>          [(wall_thickness+left_right_top_width), wedge_length,
> ((height/2)+wedge_rise)], //front (13)
>          
>          //inner right top
>          [(width-(wall_thickness+left_right_top_width)), wedge_length,
> (height/2)], //front (14)
>          
>          //outer right top
>          [(width-(wall_thickness+left_right_top_width)), wedge_length,
> ((height/2)+wedge_rise)], //front (15)
>          
>          //inner rear top
>         
> [(left_right_top_width+wall_thickness),(length-(wall_thickness+rear_top_length)),
> (height-(rear_top_inner_rise+wall_thickness))],//L (16)
>         
> [(width-(left_right_top_width+wall_thickness)),(length-(wall_thickness+rear_top_length)),
> (height-(rear_top_inner_rise+wall_thickness))],//R (17)
>          
>          //outer rear top
>         
> [(left_right_top_width+wall_thickness),(length-(wall_thickness+rear_top_length)),
> (height-rear_top_inner_rise)],//L (18)
>         
> [(width-(left_right_top_width+wall_thickness)),(length-(wall_thickness+rear_top_length)),
> (height-rear_top_inner_rise)],//R (19)
>          
>      ],
>      faces =
>      [
>          [0,1,2,3],//outer bottom
>          [3,5,0],//outer left
>          [1,4,2],// outer right
>          [2,4,5,3],//outer back
>          
>          [10,6,8,11],//inner bottom
>          
>          [10,7,6], //inner left
>          
>          [8,9,11], //inner right
>          
>          [6,7,9,8], //inner back
>          
>          [0,13,15,1],//Front wedge (top)
>          
>          [14,15,13,12],//Front wedge (back)
>          
>          [12,16,7,10],//inner left top
>          
>          [0,5,18,13],//outer left top
>          
>          [11,9,17,14],//inner right top
>          
>          [15, 19, 4, 1],//outer right top
>          
>          [17,9,7,16],//inner rear top
>          
>          [18,5,4,19],//outer rear top
>          
>          [12,13,18,16],//close left top
>          
>          [17,19,15,14],//close right top
>          
>          [16,18,19,17],//close back top
>      ]
> );
> }
> difference()
> {
>      mainBody();
> //left motor hole
> translate([-1,(length-motor_offset_from_rear),(height/2)]) rotate([0,90,0])
> cylinder(h = wall_thickness+2, r1 = motor_hole_radius, r2 =
> motor_hole_radius);
>
> //right motor hole
> translate([(width-(wall_thickness+1)),(length-motor_offset_from_rear),(height/2)])
> rotate([0,90,0]) cylinder(h = wall_thickness+2, r1 = motor_hole_radius, r2 =
> motor_hole_radius);
> }
>
>
>
> --
> View this message in context: http://forum.openscad.org/Unable-to-difference-a-polyhedron-with-a-cylinder-tp15850.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
> -----
> No virus found in this message.
> Checked by AVG - www.avg.com
> Version: 2016.0.7357 / Virus Database: 4522/11466 - Release Date: 01/23/16
>
>



From fred_dot_u at yahoo.com  Sat Jan 23 18:14:04 2016
From: fred_dot_u at yahoo.com (fred)
Date: Sat, 23 Jan 2016 23:14:04 +0000 (UTC)
Subject: [OpenSCAD] Unable to difference a polyhedron with a cylinder
In-Reply-To: <56A3E95F.6020406@jonbondy.com>
References: <56A3E95F.6020406@jonbondy.com>
Message-ID: <1032185895.328782.1453590844377.JavaMail.yahoo@mail.yahoo.com>

Based on your suggestion, and knowing too little of OpenSCAD, would the solution be to use linear_extrude on the faces that are "sheets" to make them solid?
fred 

    On Saturday, January 23, 2016 3:58 PM, jon <jon at jonbondy.com> wrote:
 

 Just by visual inspection (after cutting the top off with a cube) the 
walls you are drilling the holes through appear to be made of two thin 
sheets, rather than being thick and solid...

Jon


   
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160123/5e832579/attachment.html>

From jon at jonbondy.com  Sat Jan 23 19:10:46 2016
From: jon at jonbondy.com (jon)
Date: Sat, 23 Jan 2016 19:10:46 -0500
Subject: [OpenSCAD] Unable to difference a polyhedron with a cylinder
In-Reply-To: <1032185895.328782.1453590844377.JavaMail.yahoo@mail.yahoo.com>
References: <56A3E95F.6020406@jonbondy.com>
	<1032185895.328782.1453590844377.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <56A41686.8000207@jonbondy.com>

Create your main shape using solid primitives, like cube() and modify 
them using difference() or intersection(); then cut the holes using 
difference() and cylinder()

Jon

On 1/23/2016 6:14 PM, fred wrote:
> Based on your suggestion, and knowing too little of OpenSCAD, would 
> the solution be to use linear_extrude on the faces that are "sheets" 
> to make them solid?
>
> fred
>
>
> On Saturday, January 23, 2016 3:58 PM, jon <jon at jonbondy.com> wrote:
>
>
> Just by visual inspection (after cutting the top off with a cube) the
> walls you are drilling the holes through appear to be made of two thin
> sheets, rather than being thick and solid...
>
> Jon

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160123/8ebf883a/attachment.html>

From mschafer at wireframe.biz  Sat Jan 23 19:45:10 2016
From: mschafer at wireframe.biz (Neon22)
Date: Sat, 23 Jan 2016 17:45:10 -0700 (MST)
Subject: [OpenSCAD] Unable to difference a polyhedron with a cylinder
In-Reply-To: <1032185895.328782.1453590844377.JavaMail.yahoo@mail.yahoo.com>
References: <1453582047666-15850.post@n5.nabble.com>
	<56A3E95F.6020406@jonbondy.com>
	<1032185895.328782.1453590844377.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <1453596310661-15854.post@n5.nabble.com>

Its apparent you have used the method of trying to construct a complex
polygon. This is fairly unusual approach in OpenSCAD, which is designed to
construct objects by boolean ops on simple primitives. It is a common
approach in polygonal modellers.

I'd suggest a different approach where you considered how the object could
be made if you had a pile of blocks, cylinders and spheres and could union
them together or intersect, subtract(difference) them from each other to
make your desired shape.

E.g.
module _wedge_cut(X,Y,Z) {
	angle = atan(Z/Y*0.5);
	translate([-Delta/2,0,Z/2])
	rotate([angle,0,0])
		cube(size=[X+Delta, Y*1.4, Z]);
}

Delta = 0.1;
module wedge(X,Y,Z) {
	difference() {
		// cube
		cube(size = [X, Y, Z]);
		// remove top
		_wedge_cut(X,Y,Z);
		// remove bottom
		translate([0,0,Z])
		mirror([0,0,1])
			_wedge_cut(X,Y,Z);
	}
}

difference() {
	// primary wedge
	wedge(width, length, height);
	// subtract interior
	translate([wall_thickness,0,wall_thickness*2+Delta])
		wedge(width-wall_thickness*2, length-wall_thickness*2,
height-wall_thickness*2);
	// subtract tube
	#translate([-Delta/2,(length-motor_offset_from_rear),(height/2)])
	rotate([0,90,0]) 
		cylinder(h = width+Delta, r = motor_hole_radius);
}



--
View this message in context: http://forum.openscad.org/Unable-to-difference-a-polyhedron-with-a-cylinder-tp15850p15854.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Sat Jan 23 19:50:39 2016
From: mschafer at wireframe.biz (Neon22)
Date: Sat, 23 Jan 2016 17:50:39 -0700 (MST)
Subject: [OpenSCAD] Parametric gear pump design
In-Reply-To: <1453564171526-15845.post@n5.nabble.com>
References: <1453511272878-15823.post@n5.nabble.com>
	<1453526772677-15826.post@n5.nabble.com>
	<1453559801303-15842.post@n5.nabble.com>
	<1149564172.209662.1453563076560.JavaMail.yahoo@mail.yahoo.com>
	<1453564171526-15845.post@n5.nabble.com>
Message-ID: <1453596639287-15855.post@n5.nabble.com>

Just a side note:
 - I have used roots style blowers for air and they are incredibly noisy.
Could not recommend.



--
View this message in context: http://forum.openscad.org/Parametric-gear-pump-design-tp15823p15855.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From fred_dot_u at yahoo.com  Sat Jan 23 20:05:12 2016
From: fred_dot_u at yahoo.com (fred)
Date: Sun, 24 Jan 2016 01:05:12 +0000 (UTC)
Subject: [OpenSCAD] Parametric gear pump design
In-Reply-To: <1453596639287-15855.post@n5.nabble.com>
References: <1453596639287-15855.post@n5.nabble.com>
Message-ID: <1038670973.340054.1453597512834.JavaMail.yahoo@mail.yahoo.com>

What is the primary contributor to the noise, in your opinion? A non-3d-printed blower would be made of metal, while these model items would be plastic. How much could that mitigate the noise level?
If the pump design is being used for liquid, I'd expect that would absorb much of the noise of such a device, yes? 

    On Saturday, January 23, 2016 7:50 PM, Neon22 <mschafer at wireframe.biz> wrote:
 

 Just a side note:
 - I have used roots style blowers for air and they are incredibly noisy.
Could not recommend.



--
View this message in context: http://forum.openscad.org/Parametric-gear-pump-design-tp15823p15855.html
Sent from the OpenSCAD mailing list archive at Nabble.com.

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


   
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160124/ea5fc4fb/attachment.html>

From mschafer at wireframe.biz  Sat Jan 23 20:44:50 2016
From: mschafer at wireframe.biz (Neon22)
Date: Sat, 23 Jan 2016 18:44:50 -0700 (MST)
Subject: [OpenSCAD] Parametric gear pump design
In-Reply-To: <1038670973.340054.1453597512834.JavaMail.yahoo@mail.yahoo.com>
References: <1453511272878-15823.post@n5.nabble.com>
	<1453526772677-15826.post@n5.nabble.com>
	<1453559801303-15842.post@n5.nabble.com>
	<1149564172.209662.1453563076560.JavaMail.yahoo@mail.yahoo.com>
	<1453564171526-15845.post@n5.nabble.com>
	<1453596639287-15855.post@n5.nabble.com>
	<1038670973.340054.1453597512834.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <1453599890835-15857.post@n5.nabble.com>

yes metal on metal at high speed. I have no concept of what you're pumping or
volumes.
Roots blowers are known for their constant velocity non-pulsing output.
rotary vane pumps have replaced them for lower noise.



--
View this message in context: http://forum.openscad.org/Parametric-gear-pump-design-tp15823p15857.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From fred_dot_u at yahoo.com  Sat Jan 23 20:59:07 2016
From: fred_dot_u at yahoo.com (fred)
Date: Sun, 24 Jan 2016 01:59:07 +0000 (UTC)
Subject: [OpenSCAD] Parametric gear pump design
In-Reply-To: <1453599890835-15857.post@n5.nabble.com>
References: <1453599890835-15857.post@n5.nabble.com>
Message-ID: <711085528.342800.1453600747585.JavaMail.yahoo@mail.yahoo.com>

I'm not the original poster, and I don't know the primary objective, liquid or gas, high speed or low. I don't have currently a project involving pumping, but I try to keep my alleged mind open to new concepts, especially those involving OpenSCAD. Rotary pumps discussions qualify in that respect.
 

    On Saturday, January 23, 2016 8:44 PM, Neon22 <mschafer at wireframe.biz> wrote:
 

 yes metal on metal at high speed. I have no concept of what you're pumping or
volumes.
Roots blowers are known for their constant velocity non-pulsing output.
rotary vane pumps have replaced them for lower noise.



--
View this message in context: http://forum.openscad.org/Parametric-gear-pump-design-tp15823p15857.html
Sent from the OpenSCAD mailing list archive at Nabble.com.

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


   
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160124/0563d8e7/attachment.html>

From richard.mortimer at bell.net  Sat Jan 23 22:27:41 2016
From: richard.mortimer at bell.net (richard_d)
Date: Sat, 23 Jan 2016 20:27:41 -0700 (MST)
Subject: [OpenSCAD] Parametric gear pump design
In-Reply-To: <711085528.342800.1453600747585.JavaMail.yahoo@mail.yahoo.com>
References: <1453511272878-15823.post@n5.nabble.com>
	<1453526772677-15826.post@n5.nabble.com>
	<1453559801303-15842.post@n5.nabble.com>
	<1149564172.209662.1453563076560.JavaMail.yahoo@mail.yahoo.com>
	<1453564171526-15845.post@n5.nabble.com>
	<1453596639287-15855.post@n5.nabble.com>
	<1038670973.340054.1453597512834.JavaMail.yahoo@mail.yahoo.com>
	<1453599890835-15857.post@n5.nabble.com>
	<711085528.342800.1453600747585.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <1453606061305-15859.post@n5.nabble.com>

My goal is to pump melted wax so that I can draw on fabric as in Batik art. 
Nick Seidl (Kolbi in the RepRap forum) published a lovely gear pump for
melted chocolate http://forums.reprap.org/read.php?230,342949,page=1 but,
over the past year and a half, he has struggled unsuccessfully to
commercialize it.  As his venture may not materialize, I decided to try and
build my own.  I have now drawn the two gears in OpenSCAD and will gradually
do the rest.  I expect to print the parts in nylon (possibly Alloy 910) so
the structure will be stable at around 80 C.  Whether I can accomplish all
this remains to be seen.  Maybe Nick will beat me to it after all.  Thanks
for your interest.



--
View this message in context: http://forum.openscad.org/Parametric-gear-pump-design-tp15823p15859.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rl.ward at bigpond.com  Sun Jan 24 00:02:37 2016
From: rl.ward at bigpond.com (Rob Ward)
Date: Sun, 24 Jan 2016 16:02:37 +1100
Subject: [OpenSCAD] Parametric gear pump design
In-Reply-To: <1038670973.340054.1453597512834.JavaMail.yahoo@mail.yahoo.com>
References: <1453596639287-15855.post@n5.nabble.com>
	<1038670973.340054.1453597512834.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <56A45AED.1050103@bigpond.com>

Old style water pumps in cars are a style of "blower", ie centrifugal is 
the concept, though I think that word needs to be used with care.  They 
are good for circulating fluids, but not so good if a fairly high 
pressure is needed.  Whereas outboard motors on boats use a rubber impeller.

Rob

On 24/01/16 12:05, fred wrote:
> What is the primary contributor to the noise, in your opinion? A 
> non-3d-printed blower would be made of metal, while these model items 
> would be plastic. How much could that mitigate the noise level?
>
> If the pump design is being used for liquid, I'd expect that would 
> absorb much of the noise of such a device, yes?
>
>
> On Saturday, January 23, 2016 7:50 PM, Neon22 <mschafer at wireframe.biz> 
> wrote:
>
>
> Just a side note:
> - I have used roots style blowers for air and they are incredibly noisy.
> Could not recommend.
>
>
>
> --
> View this message in context: 
> http://forum.openscad.org/Parametric-gear-pump-design-tp15823p15855.html
>
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160124/e45eebd8/attachment.html>

From nop.head at gmail.com  Sun Jan 24 05:18:10 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 24 Jan 2016 10:18:10 +0000
Subject: [OpenSCAD] Unable to difference a polyhedron with a cylinder
In-Reply-To: <1453596310661-15854.post@n5.nabble.com>
References: <1453582047666-15850.post@n5.nabble.com>
	<56A3E95F.6020406@jonbondy.com>
	<1032185895.328782.1453590844377.JavaMail.yahoo@mail.yahoo.com>
	<1453596310661-15854.post@n5.nabble.com>
Message-ID: <CAEEmnrPzJFKOmL8h34rhbNOCYYy7A6o2e5fqRHwmbWhF-V5w_A@mail.gmail.com>

It is perfectly valid to make objects with polyhedron if you happen to know
all the vertices. It is faster to render than CSG but harder to program.
The reason it doesn't work in this case is because the polyhedron is non
manifold. It has T junctions at the inside front of the wedge. I.e. a
vertex that meets an edge instead of other vertices. That creates a hole in
the mesh topologically, although you can't see it because it has zero area.



The solution is simply to add two extra vertices to the inner bottom.

       [12,10,6,8,11,14],//inner bottom


?

On 24 January 2016 at 00:45, Neon22 <mschafer at wireframe.biz> wrote:

> Its apparent you have used the method of trying to construct a complex
> polygon. This is fairly unusual approach in OpenSCAD, which is designed to
> construct objects by boolean ops on simple primitives. It is a common
> approach in polygonal modellers.
>
> I'd suggest a different approach where you considered how the object could
> be made if you had a pile of blocks, cylinders and spheres and could union
> them together or intersect, subtract(difference) them from each other to
> make your desired shape.
>
> E.g.
> module _wedge_cut(X,Y,Z) {
>         angle = atan(Z/Y*0.5);
>         translate([-Delta/2,0,Z/2])
>         rotate([angle,0,0])
>                 cube(size=[X+Delta, Y*1.4, Z]);
> }
>
> Delta = 0.1;
> module wedge(X,Y,Z) {
>         difference() {
>                 // cube
>                 cube(size = [X, Y, Z]);
>                 // remove top
>                 _wedge_cut(X,Y,Z);
>                 // remove bottom
>                 translate([0,0,Z])
>                 mirror([0,0,1])
>                         _wedge_cut(X,Y,Z);
>         }
> }
>
> difference() {
>         // primary wedge
>         wedge(width, length, height);
>         // subtract interior
>         translate([wall_thickness,0,wall_thickness*2+Delta])
>                 wedge(width-wall_thickness*2, length-wall_thickness*2,
> height-wall_thickness*2);
>         // subtract tube
>         #translate([-Delta/2,(length-motor_offset_from_rear),(height/2)])
>         rotate([0,90,0])
>                 cylinder(h = width+Delta, r = motor_hole_radius);
> }
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Unable-to-difference-a-polyhedron-with-a-cylinder-tp15850p15854.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160124/b4f38315/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: nonm.png
Type: image/png
Size: 6489 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160124/b4f38315/attachment.png>

From c.buhtz at posteo.jp  Sun Jan 24 06:19:58 2016
From: c.buhtz at posteo.jp (c.buhtz at posteo.jp)
Date: Sun, 24 Jan 2016 12:19:58 +0100
Subject: [OpenSCAD] which formats does OpenSCAD support?
Message-ID: <3ppBgv5HhGz5vN0@dovecot03.posteo.de>

Hi,
I am interested in that model
<http://www.3dcontentcentral.de/secure/download-model.aspx?catalogid=171&id=587075>.

The download section offers a lot of file formates but nothing like
"OpenSCAD". So I think about which one I should use here to reuse that
model in OpenSCAD.

I don't want to modify it. I just want to use it as a placeholder to
build my own model around it.

thank you for help
-- 
GnuPGP-Key ID 0751A8EC
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160124/3c01af64/attachment.asc>

From rudolf at parkinbot.com  Sun Jan 24 06:24:13 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Sun, 24 Jan 2016 04:24:13 -0700 (MST)
Subject: [OpenSCAD] Parametric gear pump design
In-Reply-To: <1453606061305-15859.post@n5.nabble.com>
References: <1453511272878-15823.post@n5.nabble.com>
	<1453526772677-15826.post@n5.nabble.com>
	<1453559801303-15842.post@n5.nabble.com>
	<1149564172.209662.1453563076560.JavaMail.yahoo@mail.yahoo.com>
	<1453564171526-15845.post@n5.nabble.com>
	<1453596639287-15855.post@n5.nabble.com>
	<1038670973.340054.1453597512834.JavaMail.yahoo@mail.yahoo.com>
	<1453599890835-15857.post@n5.nabble.com>
	<711085528.342800.1453600747585.JavaMail.yahoo@mail.yahoo.com>
	<1453606061305-15859.post@n5.nabble.com>
Message-ID: <1453634653494-15863.post@n5.nabble.com>

Sounds interesting. 
I've also done some gear pump designs which head towards a heart pump for
simulation of aortic flows. One of it uses a pair of herringbone gears which
I easily designed with my gears.scad library
http://www.thingiverse.com/thing:636119

You, I guess, want to be able to control a small amount of flow in a linear
way. Therefore sealing will play an important role. It might be a good idea
to use a pair of prefactored gears like from an old laserprinter and to just
design a housing around them ...  

- Rudolf


richard_d wrote
> My goal is to pump melted wax so that I can draw on fabric as in Batik
> art.  





--
View this message in context: http://forum.openscad.org/Parametric-gear-pump-design-tp15823p15863.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From fred_dot_u at yahoo.com  Sun Jan 24 06:29:02 2016
From: fred_dot_u at yahoo.com (fred)
Date: Sun, 24 Jan 2016 11:29:02 +0000 (UTC)
Subject: [OpenSCAD] which formats does OpenSCAD support?
In-Reply-To: <3ppBgv5HhGz5vN0@dovecot03.posteo.de>
References: <3ppBgv5HhGz5vN0@dovecot03.posteo.de>
Message-ID: <188713169.425961.1453634942946.JavaMail.yahoo@mail.yahoo.com>

If one of the formats is .STL, there is an STL to OpenSCAD converter or two on Thingiverse. The output is a series of joined polygons, a huge amount of code for the more complex models, but it may do as you need.

 

    On Sunday, January 24, 2016 6:21 AM, "c.buhtz at posteo.jp" <c.buhtz at posteo.jp> wrote:
 

 Hi,
I am interested in that model
<http://www.3dcontentcentral.de/secure/download-model.aspx?catalogid=171&id=587075>.

The download section offers a lot of file formates but nothing like
"OpenSCAD". So I think about which one I should use here to reuse that
model in OpenSCAD.

I don't want to modify it. I just want to use it as a placeholder to
build my own model around it.

thank you for help
-- 
GnuPGP-Key ID 0751A8EC
_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


   
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160124/137dcce4/attachment.html>

From chrisjfarrell at sky.com  Sun Jan 24 06:42:44 2016
From: chrisjfarrell at sky.com (chrisjfarrell)
Date: Sun, 24 Jan 2016 04:42:44 -0700 (MST)
Subject: [OpenSCAD] Unable to difference a polyhedron with a cylinder
In-Reply-To: <CAEEmnrPzJFKOmL8h34rhbNOCYYy7A6o2e5fqRHwmbWhF-V5w_A@mail.gmail.com>
References: <1453582047666-15850.post@n5.nabble.com>
	<56A3E95F.6020406@jonbondy.com>
	<1032185895.328782.1453590844377.JavaMail.yahoo@mail.yahoo.com>
	<1453596310661-15854.post@n5.nabble.com>
	<CAEEmnrPzJFKOmL8h34rhbNOCYYy7A6o2e5fqRHwmbWhF-V5w_A@mail.gmail.com>
Message-ID: <1453635764015-15865.post@n5.nabble.com>

Thanks guys. I did consider using cubes etc to build it up, but thought it
would be easier with a polyhedron - that may have been a mistake.

I thought there was something wrong at the front wedge, but for the life of
me couldn't see it. I'm currently reinstalling my computer OS, so will give
your suggestion a go once it's back.

Cheers
Chris



--
View this message in context: http://forum.openscad.org/Unable-to-difference-a-polyhedron-with-a-cylinder-tp15850p15865.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Sun Jan 24 06:54:58 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 24 Jan 2016 11:54:58 +0000
Subject: [OpenSCAD] which formats does OpenSCAD support?
In-Reply-To: <3ppBgv5HhGz5vN0@dovecot03.posteo.de>
References: <3ppBgv5HhGz5vN0@dovecot03.posteo.de>
Message-ID: <CAEEmnrMZSxskHwNWbbt1g6k2bC8jpehCORGxfSh8rHLNHaAaPg@mail.gmail.com>

STL is the only 3D format you can import into OpenScad.

On 24 January 2016 at 11:19, <c.buhtz at posteo.jp> wrote:

> Hi,
> I am interested in that model
> <
> http://www.3dcontentcentral.de/secure/download-model.aspx?catalogid=171&id=587075
> >.
>
> The download section offers a lot of file formates but nothing like
> "OpenSCAD". So I think about which one I should use here to reuse that
> model in OpenSCAD.
>
> I don't want to modify it. I just want to use it as a placeholder to
> build my own model around it.
>
> thank you for help
> --
> GnuPGP-Key ID 0751A8EC
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160124/c5507bd9/attachment.html>

From c.buhtz at posteo.jp  Sun Jan 24 08:36:07 2016
From: c.buhtz at posteo.jp (c.buhtz at posteo.jp)
Date: Sun, 24 Jan 2016 14:36:07 +0100
Subject: [OpenSCAD] gettin centimeter
Message-ID: <3ppFjK5zGDz5vMp@dovecot03.posteo.de>

Hi,
I used this model as STL in the current 2015.3 OpenSCAD.
<http://www.3dcontentcentral.de/secure/download-model.aspx?catalogid=171&id=587075>

I want to know how big (in centimeter) my model or parts of it are when
I would print them out with a 3d-printer or a CEC-machine.

I found "View/Show Scale Markers". But I don't know which the measure
unit is here and how I can modify that.

background of my question:
 I want to build a case for my Pi2 (the model) including a 2.5" HDD.
 So I have to deal with real existing objects and need to put them into
 the model in the correct scale.
-- 
GnuPGP-Key ID 0751A8EC


From c.buhtz at posteo.jp  Sun Jan 24 08:56:55 2016
From: c.buhtz at posteo.jp (c.buhtz at posteo.jp)
Date: Sun, 24 Jan 2016 14:56:55 +0100
Subject: [OpenSCAD] gettin centimeter
In-Reply-To: <3ppFjK5zGDz5vMp@dovecot03.posteo.de>
References: <3ppFjK5zGDz5vMp@dovecot03.posteo.de>
Message-ID: <3ppG9P2ZDRz5vNC@dovecot03.posteo.de>

On 2016-01-24 14:36 <c.buhtz at posteo.jp> wrote:
> I found "View/Show Scale Markers". But I don't know which the measure
> unit is here and how I can modify that.

The problem for me is here that the scale marker only viewed on the
axes. I would like to have a ruler I to use everywhere in the model.
-- 
GnuPGP-Key ID 0751A8EC


From nop.head at gmail.com  Sun Jan 24 09:10:01 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 24 Jan 2016 14:10:01 +0000
Subject: [OpenSCAD] gettin centimeter
In-Reply-To: <3ppG9P2ZDRz5vNC@dovecot03.posteo.de>
References: <3ppFjK5zGDz5vMp@dovecot03.posteo.de>
	<3ppG9P2ZDRz5vNC@dovecot03.posteo.de>
Message-ID: <CAEEmnrOof-PWYaVqRU0dFGbzatj+HiBF-twG4MOubGKs34sJ5w@mail.gmail.com>

I can't see any of the models you link to because I am not a member of the
site.

The easiest way to measure dimensions is to use Netfabb studio, which is
free.

On 24 January 2016 at 13:56, <c.buhtz at posteo.jp> wrote:

> On 2016-01-24 14:36 <c.buhtz at posteo.jp> wrote:
> > I found "View/Show Scale Markers". But I don't know which the measure
> > unit is here and how I can modify that.
>
> The problem for me is here that the scale marker only viewed on the
> axes. I would like to have a ruler I to use everywhere in the model.
> --
> GnuPGP-Key ID 0751A8EC
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160124/54aa0b35/attachment.html>

From nop.head at gmail.com  Sun Jan 24 09:11:49 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 24 Jan 2016 14:11:49 +0000
Subject: [OpenSCAD] gettin centimeter
In-Reply-To: <CAEEmnrOof-PWYaVqRU0dFGbzatj+HiBF-twG4MOubGKs34sJ5w@mail.gmail.com>
References: <3ppFjK5zGDz5vMp@dovecot03.posteo.de>
	<3ppG9P2ZDRz5vNC@dovecot03.posteo.de>
	<CAEEmnrOof-PWYaVqRU0dFGbzatj+HiBF-twG4MOubGKs34sJ5w@mail.gmail.com>
Message-ID: <CAEEmnrOhV7v1WcerW7JvYN5XiZYJf135x6Bh9iHMvKM+eaOLRQ@mail.gmail.com>

OpenScad is unit less but the convention for 3D printing is 1 unit is 1mm.

On 24 January 2016 at 14:10, nop head <nop.head at gmail.com> wrote:

> I can't see any of the models you link to because I am not a member of the
> site.
>
> The easiest way to measure dimensions is to use Netfabb studio, which is
> free.
>
> On 24 January 2016 at 13:56, <c.buhtz at posteo.jp> wrote:
>
>> On 2016-01-24 14:36 <c.buhtz at posteo.jp> wrote:
>> > I found "View/Show Scale Markers". But I don't know which the measure
>> > unit is here and how I can modify that.
>>
>> The problem for me is here that the scale marker only viewed on the
>> axes. I would like to have a ruler I to use everywhere in the model.
>> --
>> GnuPGP-Key ID 0751A8EC
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160124/036fa5ba/attachment.html>

From thomas at bornhaupt.de  Sun Jan 24 09:57:57 2016
From: thomas at bornhaupt.de (KoenigDickBauch)
Date: Sun, 24 Jan 2016 07:57:57 -0700 (MST)
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <1453547961408-15833.post@n5.nabble.com>
References: <1453467556876-15783.post@n5.nabble.com>
	<56A23A6A.9020800@bornhaupt.de>
	<1453547961408-15833.post@n5.nabble.com>
Message-ID: <1453647477135-15871.post@n5.nabble.com>

Hi Trygon,

could you please give me the parameter for mencoder or ffmpeg?

best regards
Thomas



--
View this message in context: http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-tp15783p15871.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From hypher at gmail.com  Sun Jan 24 14:29:55 2016
From: hypher at gmail.com (Yona Appletree)
Date: Sun, 24 Jan 2016 11:29:55 -0800
Subject: [OpenSCAD] which formats does OpenSCAD support?
In-Reply-To: <CAEEmnrMZSxskHwNWbbt1g6k2bC8jpehCORGxfSh8rHLNHaAaPg@mail.gmail.com>
References: <3ppBgv5HhGz5vN0@dovecot03.posteo.de>
	<CAEEmnrMZSxskHwNWbbt1g6k2bC8jpehCORGxfSh8rHLNHaAaPg@mail.gmail.com>
Message-ID: <56A52633.6070608@gmail.com>

FreeCAD can be very useful in cases like this. You can import most 
formats into it, use it to simplify things, and then export as STL for 
importing into OpenSCAD.


> nop head <mailto:nop.head at gmail.com>
> January 24, 2016 at 03:54
> STL is the only 3D format you can import into OpenScad.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> c.buhtz at posteo.jp <mailto:c.buhtz at posteo.jp>
> January 24, 2016 at 03:19
> Hi,
> I am interested in that model
> <http://www.3dcontentcentral.de/secure/download-model.aspx?catalogid=171&id=587075>.
>
> The download section offers a lot of file formates but nothing like
> "OpenSCAD". So I think about which one I should use here to reuse that
> model in OpenSCAD.
>
> I don't want to modify it. I just want to use it as a placeholder to
> build my own model around it.
>
> thank you for help
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160124/297933fb/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: postbox-contact.jpg
Type: image/jpeg
Size: 1266 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160124/297933fb/attachment.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: compose-unknown-contact.jpg
Type: image/jpeg
Size: 770 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160124/297933fb/attachment-0001.jpg>

From rl.ward at bigpond.com  Sun Jan 24 16:55:45 2016
From: rl.ward at bigpond.com (Rob Ward)
Date: Mon, 25 Jan 2016 08:55:45 +1100
Subject: [OpenSCAD] Parametric gear pump design
In-Reply-To: <1453634653494-15863.post@n5.nabble.com>
References: <1453511272878-15823.post@n5.nabble.com>
	<1453526772677-15826.post@n5.nabble.com>
	<1453559801303-15842.post@n5.nabble.com>
	<1149564172.209662.1453563076560.JavaMail.yahoo@mail.yahoo.com>
	<1453564171526-15845.post@n5.nabble.com>
	<1453596639287-15855.post@n5.nabble.com>
	<1038670973.340054.1453597512834.JavaMail.yahoo@mail.yahoo.com>
	<1453599890835-15857.post@n5.nabble.com>
	<711085528.342800.1453600747585.JavaMail.yahoo@mail.yahoo.com>
	<1453606061305-15859.post@n5.nabble.com>
	<1453634653494-15863.post@n5.nabble.com>
Message-ID: <9D630738-1ACC-4C6A-8762-F66CBDBF5B77@bigpond.com>

Won't another factor be keeping the pump's gear mass and housing above the melting point of the wax, requiring a heated jacket of some sort as well? So maybe it will require two pumps? One for wax and one for a heated water jacket?

A Peristaltic pump maybe an option for the wax as it is 'seamless', the silicon tube should handle 60+ degrees ok and the pump could be submerged and the motor held out of the heated bath.

Using a stepper to drive the peristaltic mechanism could also give quite good, precise delivery. I would think there are 3-D printer designs for peristaltic mechanisms to consider this option. You could design your flow rate/control around a chosen silicon tube diameter?

Rob


On 24 January 2016 10:24:13 PM AEDT, Parkinbot <rudolf at parkinbot.com> wrote:
>Sounds interesting. 
>I've also done some gear pump designs which head towards a heart pump
>for
>simulation of aortic flows. One of it uses a pair of herringbone gears
>which
>I easily designed with my gears.scad library
>http://www.thingiverse.com/thing:636119
>
>You, I guess, want to be able to control a small amount of flow in a
>linear
>way. Therefore sealing will play an important role. It might be a good
>idea
>to use a pair of prefactored gears like from an old laserprinter and to
>just
>design a housing around them ...  
>
>- Rudolf
>
>
>richard_d wrote
>> My goal is to pump melted wax so that I can draw on fabric as in
>Batik
>> art.  
>
>
>
>
>
>--
>View this message in context:
>http://forum.openscad.org/Parametric-gear-pump-design-tp15823p15863.html
>Sent from the OpenSCAD mailing list archive at Nabble.com.
>
>_______________________________________________
>OpenSCAD mailing list
>Discuss at lists.openscad.org
>http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

-- 
Sent from my Android device with K-9 Mail. Please excuse my brevity.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160125/a8ae8e8e/attachment.html>

From mschafer at wireframe.biz  Sun Jan 24 18:16:40 2016
From: mschafer at wireframe.biz (Neon22)
Date: Sun, 24 Jan 2016 16:16:40 -0700 (MST)
Subject: [OpenSCAD] Parametric gear pump design
In-Reply-To: <1453606061305-15859.post@n5.nabble.com>
References: <1453511272878-15823.post@n5.nabble.com>
	<1453526772677-15826.post@n5.nabble.com>
	<1453559801303-15842.post@n5.nabble.com>
	<1149564172.209662.1453563076560.JavaMail.yahoo@mail.yahoo.com>
	<1453564171526-15845.post@n5.nabble.com>
	<1453596639287-15855.post@n5.nabble.com>
	<1038670973.340054.1453597512834.JavaMail.yahoo@mail.yahoo.com>
	<1453599890835-15857.post@n5.nabble.com>
	<711085528.342800.1453600747585.JavaMail.yahoo@mail.yahoo.com>
	<1453606061305-15859.post@n5.nabble.com>
Message-ID: <1453677400144-15874.post@n5.nabble.com>

Pumping melted wax for batik presents some problems as well as some positive
aspects.
- You only need to lay the wax down for absorption by the fabric, so exact
dispensing of a volume is probably not as critical as for plastic
deposition.
- But the wax will melt at a temperature depending on the wax you're using,
beeswax, paraffin, microcrystalline. 
(Probably you are using paraffin as it is cheapest ?
 Melting point is between 46 and 68 ?C (115 and 154 ?F) depending on
formulation.)

So you'll either need a pump design that:
- can be pumped clear, 
- or a way to melt the wax in the head so that a cold pump can be rewarmed
and work without damage.
- It will probably also need to be easy to take apart when warm, and clean.

The roots style pump might work but the wax is widely distributed in the
housing and you need good sealed bearings to prevent leakage.
The moineau (positive displacement pump) would be good but is hard to make.
Probably the best for your app is the peristaltic style pumps.
These do suffer from pulsing but the fabric absorption will probably
mitigate this and your flow rates are probably low enough to not make this a
big problem.

The tube which contains the wax, can be pumped (mostly) clear at the end of
a run, and can be enveloped in heat using a warm water jacket as well.
A stepper motor can drive the flow reasonably precisely for your
application, especially if geared down (you need a lot of force).

A design could be:
- Horizontally mounted with wax entry from reservoir above with a side entry
tube and similar side exit at bottom.
- A water jacket around the entire pump which can be continuously fed with
hot water to maintain the wax temp (and the wax reservoir above).
- When the wax is visually melted in the top reservoir then the printer is
ready to go. A cap on the output would prevent dripping while heating.
- Silicon tubing is good to 200C so is ideal for wax and peristaltic flow.
- When finished make sure to pump the reservoir out and clear the tubing. So
add a dump tank position on the printer.
- Failure of the heating does not require dismantling, just reheating to
clear.
- But detecting a loss of water temp should stop the printer, to avoid gear
failure when the wax solidifies.

Designs:
The pulsing is reduced by having more chambers. You need a tubing pump. See
here for design considerations:
- https://en.wikipedia.org/wiki/Peristaltic_pump
- http://www.coleparmer.com/TechLibraryArticle/579

You need a jacketed design but at least openscad can help you here. By using
the difference() function from a larger volume you can make an outer casing
to act as a water jacket.
There are a number of designs on thingiverse under peristaltic but many are
not parametric.
You will need a strong stepper motor and/or gearing reduction to add torque. 
A stepper driving a planetary gearbox driving the pump might be ideal for
space purposes.
To start with:
- http://www.thingiverse.com/thing:8964
- http://www.thingiverse.com/thing:454702
non scad
- http://www.thingiverse.com/thing:8652
- http://www.thingiverse.com/thing:254956

Good luck...




--
View this message in context: http://forum.openscad.org/Parametric-gear-pump-design-tp15823p15874.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Sun Jan 24 18:37:48 2016
From: mschafer at wireframe.biz (Neon22)
Date: Sun, 24 Jan 2016 16:37:48 -0700 (MST)
Subject: [OpenSCAD] gettin centimeter
In-Reply-To: <3ppFjK5zGDz5vMp@dovecot03.posteo.de>
References: <3ppFjK5zGDz5vMp@dovecot03.posteo.de>
Message-ID: <1453678668636-15875.post@n5.nabble.com>

Typically you can load() the stl into OpenSCAD and then try to replicate
parts of it using the openSCAD language. Visually testing against the stl
file at each stage.

As nophead states the "usual" apporach is that one unit in openSCAD = 1 mm.

If you want a dimensioned drawing than you can work away at your model using
this library:
- https://github.com/sidorof/dimlines
- http://www.cannymachines.com/entries/9/openscad_dimensioned_drawings
- alas nothing comes without effort



--
View this message in context: http://forum.openscad.org/gettin-centimeter-tp15867p15875.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrew at plumb.org  Sun Jan 24 20:03:52 2016
From: andrew at plumb.org (Andrew Plumb)
Date: Sun, 24 Jan 2016 20:03:52 -0500
Subject: [OpenSCAD] Trick to getting "cd tests; cmake .;
	make" to run with new files with coal dependencies?
Message-ID: <6BBBD180-3BEA-4AE2-A375-73D80876C14F@plumb.org>

Hey Everyone,

Subject asks it all.

Working on this: https://github.com/clothbot/openscad/tree/read_issue1324 <https://github.com/clothbot/openscad/tree/read_issue1324>

?I can?t seem to get the existing ./tests to run, let alone add new ones for my experimental CGAL ?pointset()? and ?skin_surface()? primitives and ?read_xyz()? function support.  I start getting errors like the following at make-time:

?snip?

In file included from /Volumes/CaseSensitive/ClothBotDesigns/Projects/clothbot/github/clothbot/openscad/openscad/src/primitives-cgal.cc:27:
In file included from /Volumes/CaseSensitive/ClothBotDesigns/Projects/clothbot/github/clothbot/openscad/openscad/tests/../src/module.h:3:
In file included from /opt/local/libexec/llvm-3.7/bin/../include/c++/v1/string:439:
In file included from /opt/local/libexec/llvm-3.7/bin/../include/c++/v1/algorithm:627:
In file included from /opt/local/libexec/llvm-3.7/bin/../include/c++/v1/utility:157:
/opt/local/libexec/llvm-3.7/bin/../include/c++/v1/__tuple:266:60: error: no member named 'value' in 'std::__1::is_convertible<const CGAL::Point_3<CGAL::Epick> &, CGAL::Point_3<CGAL::Epick> >'
                               is_convertible<_Tp0, _Up0>::value &&
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
/opt/local/libexec/llvm-3.7/bin/../include/c++/v1/__tuple:278:12: note: in instantiation of template class 'std::__1::__tuple_convertible_imp<std::__1::__tuple_types<const CGAL::Point_3<CGAL::Epick> &, const CGAL::Vector_3<CGAL::Epick> &>, std::__1::__tuple_types<CGAL::Point_3<CGAL::Epick>, CGAL::Vector_3<CGAL::Epick> > >' requested here
  : public __tuple_convertible_imp<
           ^
/opt/local/libexec/llvm-3.7/bin/../include/c++/v1/__tuple:291:14: note: in instantiation of template class 'std::__1::__tuple_convertible_apply<true, const std::__1::pair<CGAL::Point_3<CGAL::Epick>, CGAL::Vector_3<CGAL::Epick> > &, std::__1::pair<CGAL::Point_3<CGAL::Epick>, CGAL::Vector_3<CGAL::Epick> > >' requested here
    : public __tuple_convertible_apply<tuple_size<typename remove_reference<_Tp>::type>::value ==
             
?end-snip?

Thoughts? Suggestions?

Andrew.

--

"The future is already here.  It's just not very evenly distributed" -- William Gibson

Me: http://clothbot.com/wiki/ <http://clothbot.com/wiki/>



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160124/60eb57bc/attachment.html>

From andrew at plumb.org  Sun Jan 24 20:31:20 2016
From: andrew at plumb.org (Andrew Plumb)
Date: Sun, 24 Jan 2016 20:31:20 -0500
Subject: [OpenSCAD] Trick to getting "cd tests; cmake .;
	make" to run with new files with CGAL dependencies?
In-Reply-To: <6BBBD180-3BEA-4AE2-A375-73D80876C14F@plumb.org>
References: <6BBBD180-3BEA-4AE2-A375-73D80876C14F@plumb.org>
Message-ID: <9BF66DBE-8B1D-485A-AB2B-123E560BEDE1@plumb.org>

Darn autocorrect!  CGAL dependencies, not ?coal? dependencies.

> On Jan 24, 2016, at 8:03 PM, Andrew Plumb <andrew at plumb.org> wrote:
> 
> Hey Everyone,
> 
> Subject asks it all.
> 
> Working on this: https://github.com/clothbot/openscad/tree/read_issue1324 <https://github.com/clothbot/openscad/tree/read_issue1324>
> 
> ?I can?t seem to get the existing ./tests to run, let alone add new ones for my experimental CGAL ?pointset()? and ?skin_surface()? primitives and ?read_xyz()? function support.  I start getting errors like the following at make-time:
> 
> ?snip?
> 
> In file included from /Volumes/CaseSensitive/ClothBotDesigns/Projects/clothbot/github/clothbot/openscad/openscad/src/primitives-cgal.cc <http://primitives-cgal.cc/>:27:
> In file included from /Volumes/CaseSensitive/ClothBotDesigns/Projects/clothbot/github/clothbot/openscad/openscad/tests/../src/module.h:3:
> In file included from /opt/local/libexec/llvm-3.7/bin/../include/c++/v1/string:439:
> In file included from /opt/local/libexec/llvm-3.7/bin/../include/c++/v1/algorithm:627:
> In file included from /opt/local/libexec/llvm-3.7/bin/../include/c++/v1/utility:157:
> /opt/local/libexec/llvm-3.7/bin/../include/c++/v1/__tuple:266:60: error: no member named 'value' in 'std::__1::is_convertible<const CGAL::Point_3<CGAL::Epick> &, CGAL::Point_3<CGAL::Epick> >'
>                                is_convertible<_Tp0, _Up0>::value &&
>                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
> /opt/local/libexec/llvm-3.7/bin/../include/c++/v1/__tuple:278:12: note: in instantiation of template class 'std::__1::__tuple_convertible_imp<std::__1::__tuple_types<const CGAL::Point_3<CGAL::Epick> &, const CGAL::Vector_3<CGAL::Epick> &>, std::__1::__tuple_types<CGAL::Point_3<CGAL::Epick>, CGAL::Vector_3<CGAL::Epick> > >' requested here
>   : public __tuple_convertible_imp<
>            ^
> /opt/local/libexec/llvm-3.7/bin/../include/c++/v1/__tuple:291:14: note: in instantiation of template class 'std::__1::__tuple_convertible_apply<true, const std::__1::pair<CGAL::Point_3<CGAL::Epick>, CGAL::Vector_3<CGAL::Epick> > &, std::__1::pair<CGAL::Point_3<CGAL::Epick>, CGAL::Vector_3<CGAL::Epick> > >' requested here
>     : public __tuple_convertible_apply<tuple_size<typename remove_reference<_Tp>::type>::value ==
>              
> ?end-snip?
> 
> Thoughts? Suggestions?
> 
> Andrew.
> 
> --
> 
> "The future is already here.  It's just not very evenly distributed" -- William Gibson
> 
> Me: http://clothbot.com/wiki/ <http://clothbot.com/wiki/>
> 
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

--

"The future is already here.  It's just not very evenly distributed" -- William Gibson

Me: http://clothbot.com/wiki/ <http://clothbot.com/wiki/>



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160124/19282f74/attachment.html>

From marius at kintel.net  Sun Jan 24 21:06:06 2016
From: marius at kintel.net (Marius Kintel)
Date: Sun, 24 Jan 2016 21:06:06 -0500
Subject: [OpenSCAD] Trick to getting "cd tests; cmake .;
	make" to run with new files with coal dependencies?
In-Reply-To: <6BBBD180-3BEA-4AE2-A375-73D80876C14F@plumb.org>
References: <6BBBD180-3BEA-4AE2-A375-73D80876C14F@plumb.org>
Message-ID: <51822E05-2BBF-4A09-A78B-ACC1AE4D0852@kintel.net>

> On Jan 24, 2016, at 20:03 PM, Andrew Plumb <andrew at plumb.org> wrote:
> 
> 
> ?I can?t seem to get the existing ./tests to run, let alone add new ones for my experimental CGAL ?pointset()? and ?skin_surface()? primitives and ?read_xyz()? function support.  I start getting errors like the following at make-time:
> 
Some ideas/questions:
o you say you didn?t get existing tests to run, but your errors are using your own branch
o Why are you using clang from /opt/local/libexec? Which compiler is this?
o Note: You don?t need to run ?make? in tests to run the majority of the tests (you only need the main OpenSCAD binary compiled with the normal build system).
o How did you install the dependencies?

 -Marius



From oz.at.michael at gmail.com  Sun Jan 24 22:00:21 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sun, 24 Jan 2016 20:00:21 -0700 (MST)
Subject: [OpenSCAD] Minimizing torsion sweep for closed paths
In-Reply-To: <1453487330140-15813.post@n5.nabble.com>
References: <1453487330140-15813.post@n5.nabble.com>
Message-ID: <1453690821531-15880.post@n5.nabble.com>

Bump - didn't make it to the list.

Ronaldo wrote
> I have been playing with sweep.scad to render some simple torus knots:
> 
> use &lt;scad-utils/transformations.scad&gt;
> use &lt;scad-utils/shapes.scad&gt;
> use &lt;scad-utils/linalg.scad&gt;
> use &lt;scad-utils/transformations.scad&gt;
> use &lt;scad-utils/lists.scad&gt;
> use 
> <sweep.scad>
>   
> 
> // geometric data
>   n = 10;   // cord section discretization
>   d = 20;   // cord section radius
>   m = 30 ;  // torus discretization
>   R = 400;  // torus major radius
>   r = 150;  // torus minor radius
> 
> torus_knot(1,9);
> 
> module torus_knot(p, q) {
>   function knot(phi) = [ (r*cos(q*phi) + R)*cos(p*phi),
>                          (r*cos(q*phi) + R)*sin(p*phi),
>                           r*sin(q*phi) ];
>   function section() = [ for(i=[0: 360/n: 360]) [d*cos(i), d*sin(i)] ];     
>   k = max(p,q)*m;
>   path = [ for (i=[0:k]) knot(360*(i/k)) ];
>   path_transforms = construct_transform_path(path, closed);
>   sweep(section(), path_transforms,true);
> }
> 
> At first, for some values of p and q, there was some very wild torsions
> in the shape of the cord. I happily found a nice patch to sweep.scad
> posted by Oskar that constructs torsion minimizing sweep rotations
> (see
> http://forum.openscad.org/Twisty-problem-with-scad-utils-quot-sweep-quot-td9775.html)
> With that patch, the horrible torsions had gone.
> 
> However, a small but noticeable torsion remained at the junction between
> the start and end
> of the cord. I had dug into the sweep.scad code and found that there is a
> relative rotation
> between the end and start sections which is not compensated by the
> minimizing torsion
> function. Besides, the closed path solution of the sweep library leaves a
> "knee" in
> the end-start point due to the difference between the starting and ending
> tangents. 
> So, I recoded the patch Oskar posted trying to overcome both flaws.
> 
>   function construct_torsion_minimizing_rotations(tangents) =
>       [ for (i = [0:len(tangents)-2])
>           rotate_from_to(tangents[i],tangents[i+1])
>       ];
> 
>   function accumulate_rotations(rotations,acc_=[]) = let(i = len(acc_))
>         i ==  len(rotations) ? acc_ :
>         accumulate_rotations(rotations,
>                 i == 0 ? [rotations[0]] : concat(acc_, [ rotations[i] *
> acc_[i-1] ])
>         );
>         
>   function rotationZ(ang) =
>                        [[  cos(ang), sin(ang), 0],
>                         [ -sin(ang), cos(ang), 0],
>                         [         0,        0, 1]];
> 
>   function tangent_path(path, i, closed) =
>         i == 0 ?
>           closed ?
>             unit(path[1]-path[len(path)-2]):
>             unit(path[1] - path[0]) :
>           (i == len(path)-1 ?
>             closed ?
>               unit(path[1]-path[len(path)-2]):
>               unit(path[i] - path[i-1]) :
>             // 0 < i < len(path)-1
>             unit(path[i+1]-path[i-1]));
> 
>   function construct_transform_path(path,closed=false) =
>     let(
>       l               = len(path),
>       tangents        = [ for (i=[0:l-1]) tangent_path(path, i, closed)],
>       local_rotations =
>          
> construct_torsion_minimizing_rotations(concat([[0,0,1]],tangents)),
>       rotations       = accumulate_rotations(concat(local_rotations)),
>       v1 = rotations[0]*[1,0,0],
>       v2 = rotations[l-1]*[1,0,0],
>       ang = acos(v1*v2)* ((v1[1]-v2[1]) > 0? -1: 1), // torsion angle at
> the end
>       rots = [ if (closed) for(j=[1:l]) rotationZ(ang*j/(l-1)) ]
>      )
>       closed?
>       [ for (i = [0:l-1]) construct_rt(rotations[i] * rots[i], path[i]) ]:
>       [ for (i = [0:l-1]) construct_rt(rotations[i], path[i]) ];
> 
> The code is far from efficient but serves to test a concept.
> 
> Its main changes are:
> 1. tangent_path() has a third parameter to treat adequately closed paths.
> 2. construct_transform_path() has also a closed parameter, calculates
> the total rotation at the end of the path and compensates that rotation
> in small steps at each path point for closed paths.





-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Minimizing-torsion-sweep-for-closed-paths-tp15813p15880.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sun Jan 24 22:09:31 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sun, 24 Jan 2016 20:09:31 -0700 (MST)
Subject: [OpenSCAD] Vertex arrays?
In-Reply-To: <1453683428612-15876.post@n5.nabble.com>
References: <1453683428612-15876.post@n5.nabble.com>
Message-ID: <1453691371113-15881.post@n5.nabble.com>

Your post is still flagged as "This post has NOT been accepted by the mailing
list yet", so nobody gets it unless they look. 
You need to subscribe to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.

I've included your post below for others to see now.


Lord Asriel wrote
> Hello. I regularly use the polyhedron function coupled with for-generates
> to make complex shapes. When going for high quality, the speed and
> resources become a problem.
> 
> Since triangles tesellate at such a way that each vertex is used 6 times,
> it would be better if I could actually make a large array of vertices, and
> the just read the memory instead of calculating each vertex 6 or even 3
> times. Many times I've swapped to (manually) porting my openscad code to c
> to do exactly that, export an stl, and then load it on openscad to see it.
> But it is tiresome, and a pity for such a great program. 
> 
> Anyone got any ideas that I might have overlooked?
> 
> By the way, big thanks for letting variables be set outside of assign()s!





-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Vertex-arrays-tp15876p15881.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrew at plumb.org  Sun Jan 24 23:03:50 2016
From: andrew at plumb.org (Andrew Plumb)
Date: Sun, 24 Jan 2016 23:03:50 -0500
Subject: [OpenSCAD] Trick to getting "cd tests; cmake .;
	make" to run with new files with CGAL dependencies?
In-Reply-To: <51822E05-2BBF-4A09-A78B-ACC1AE4D0852@kintel.net>
References: <6BBBD180-3BEA-4AE2-A375-73D80876C14F@plumb.org>
	<51822E05-2BBF-4A09-A78B-ACC1AE4D0852@kintel.net>
Message-ID: <CB647CDF-DC71-44C7-A610-01F068200B42@plumb.org>


> On Jan 24, 2016, at 9:06 PM, Marius Kintel <marius at kintel.net> wrote:
> 
>> On Jan 24, 2016, at 20:03 PM, Andrew Plumb <andrew at plumb.org> wrote:
>> 
>> 
>> ?I can?t seem to get the existing ./tests to run, let alone add new ones for my experimental CGAL ?pointset()? and ?skin_surface()? primitives and ?read_xyz()? function support.  I start getting errors like the following at make-time:
>> 
> Some ideas/questions:
> o you say you didn?t get existing tests to run, but your errors are using your own branch
> o Why are you using clang from /opt/local/libexec? Which compiler is this?
> o Note: You don?t need to run ?make? in tests to run the majority of the tests (you only need the main OpenSCAD binary compiled with the normal build system).
> o How did you install the dependencies?
> 
> -Marius


Ah good, that gives me some things to try.

- I installed dependencies via the ?source setenv_mac-qt5.csh; ./scripts/macosx-build-dependencies? and didn?t have any trouble building and running OpenSCAD.app

- To clarify, yes I was able to build OpenSCAD.app and ?cd tests;cmake .;make? from the master branch, i.e. without my mods.

- After switching git branches back to my mods, the errors (re)appeared; they are specific to my additions, but limited in scope to the ./tests. OpenSCAD.app itself was building+running fine via qmake;make.

- I had been using ?mp-gcc5? via macports for something else a while back. Forgot about that; I?ve done a ?sudo port select gcc none? to try with Xcode(7) /usr/bin/gcc defaults next.

On a related note, when I first tried building the tests, it wouldn?t work because I only had Xcode 7 installed, which only has MacOSX10.11.sdk; ./tests cmake was looking for MacOSX10.10.sdk.  I downloaded and installed latest/last Xcode6 and added links to the MacOSX10.10.sdk and MacOSX10.9.sdk to satisfy those dependencies:

cd /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs
ln -s /Applications/Xcode6.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk
ln -s /Applications/Xcode6.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk

I?ve started building ../libraries again from scratch, using Xcode7 default /usr/bin/gcc.  For reference:

?snip?

ClothBotDesigns:openscad clothbot$ which gcc
/usr/bin/gcc
ClothBotDesigns:openscad clothbot$ gcc -v
Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/usr/include/c++/4.2.1
Apple LLVM version 7.0.0 (clang-700.1.76)
Target: x86_64-apple-darwin15.3.0
Thread model: posix

ClothBotDesigns:openscad clothbot$ which cmake
/opt/local/bin/cmake
ClothBotDesigns:openscad clothbot$ cmake -version
cmake version 3.4.2

CMake suite maintained and supported by Kitware (kitware.com/cmake).

?end-snip?

I know cmake is a fickle beast though, so it won?t surprise me if/when I have to do ?something special? to get it running.

Andrew.

--

"The future is already here.  It's just not very evenly distributed" -- William Gibson

Me: http://clothbot.com/wiki/ <http://clothbot.com/wiki/>



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160124/c4332f43/attachment.html>

From marius at kintel.net  Mon Jan 25 00:59:59 2016
From: marius at kintel.net (Marius Kintel)
Date: Mon, 25 Jan 2016 00:59:59 -0500
Subject: [OpenSCAD] Trick to getting "cd tests; cmake .;
	make" to run with new files with CGAL dependencies?
In-Reply-To: <CB647CDF-DC71-44C7-A610-01F068200B42@plumb.org>
References: <6BBBD180-3BEA-4AE2-A375-73D80876C14F@plumb.org>
	<51822E05-2BBF-4A09-A78B-ACC1AE4D0852@kintel.net>
	<CB647CDF-DC71-44C7-A610-01F068200B42@plumb.org>
Message-ID: <AF500D20-54B4-4062-A3B7-C01EDE7565EC@kintel.net>

> On Jan 24, 2016, at 23:03 PM, Andrew Plumb <andrew at plumb.org> wrote:
> 
> - After switching git branches back to my mods, the errors (re)appeared; they are specific to my additions, but limited in scope to the ./tests. OpenSCAD.app itself was building+running fine via qmake;make.
> 
This sounds a bit like you?re building the tests with a different compiler or c++ lib than the main binary.
Perhaps you had an old compiled version there which cmake cached?
?rm CMakeCache.txt' + rebuild usually fixes that

> On a related note, when I first tried building the tests, it wouldn?t work because I only had Xcode 7 installed, which only has MacOSX10.11.sdk; ./tests cmake was looking for MacOSX10.10.sdk.  
The cmake build looks for the SDK for which it was configured. Another indicator of the above suspicion.

> I?ve started building ../libraries again from scratch, using Xcode7 default /usr/bin/gcc.  For reference:
> 
Note: Xcode doesn?t use gcc by default, but clang. The gcc shipping with Xcode is ancient and I wouldn?t use it for anything.

C++ is a bit tricky, especially on Mac, since there are two C++ libraries which are not binary compatible with each other. Care must be taken that all C++ dependencies are build using the same library (see -stdlib=libstdc++ vs. -stdlib=libc++). We have some code in our build systems for choosing the correct one (by inspecting the boost library).
If you in addition installed additional compilers, that problem might compound : /

 -Marius



From thomas at bornhaupt.de  Mon Jan 25 02:32:33 2016
From: thomas at bornhaupt.de (KoenigDickBauch)
Date: Mon, 25 Jan 2016 00:32:33 -0700 (MST)
Subject: [OpenSCAD] Image Size by Animate
Message-ID: <1453707153859-15884.post@n5.nabble.com>

Hi,

how can is generate images with a known size. 1024/768 or other. Resize the
OpenScad window to get the correct image size, is not the best way.

Regards
Thomas



--
View this message in context: http://forum.openscad.org/Image-Size-by-Animate-tp15884.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Mon Jan 25 02:48:43 2016
From: nop.head at gmail.com (nop head)
Date: Mon, 25 Jan 2016 07:48:43 +0000
Subject: [OpenSCAD] Image Size by Animate
In-Reply-To: <1453707153859-15884.post@n5.nabble.com>
References: <1453707153859-15884.post@n5.nabble.com>
Message-ID: <CAEEmnrN=+vXWsKsoUNg+Mvrn3DYEu+PGSfqvKQTYtBTz21N0Ug@mail.gmail.com>

It needs another $variable in addition to $vpt, $vpr and $vpd. Perhaps $vps
= [1024, 768] or $vpw = 1024, $vph = 768.

On 25 January 2016 at 07:32, KoenigDickBauch <thomas at bornhaupt.de> wrote:

> Hi,
>
> how can is generate images with a known size. 1024/768 or other. Resize the
> OpenScad window to get the correct image size, is not the best way.
>
> Regards
> Thomas
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Image-Size-by-Animate-tp15884.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160125/64ac7768/attachment.html>

From Torsten.Paul at gmx.de  Mon Jan 25 07:30:36 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 25 Jan 2016 13:30:36 +0100
Subject: [OpenSCAD] Image Size by Animate
In-Reply-To: <CAEEmnrN=+vXWsKsoUNg+Mvrn3DYEu+PGSfqvKQTYtBTz21N0Ug@mail.gmail.com>
References: <1453707153859-15884.post@n5.nabble.com>,
	<CAEEmnrN=+vXWsKsoUNg+Mvrn3DYEu+PGSfqvKQTYtBTz21N0Ug@mail.gmail.com>
Message-ID: <trinity-3bc93de3-cb71-4404-9ce6-f9a750210aaa-1453725036703@3capp-gmx-bs43>

> On 25 January 2016 at 07:32, KoenigDickBauch <thomas at bornhaupt.de> wrote:Hi,
> > how can is generate images with a known size. 1024/768 or other. Resize the
> > OpenScad window to get the correct image size, is not the best way.
> >
Yes, it would be very useful to have the picture / animation size independent
from the viewport. Right now that's not easily possible as both are just
grabbing the viewport buffer. I guess for allowing different sizes, we need
to render to an offscreen buffer and export that. That's doable, but a bit
more than just a simple change.
I guess in the meantime the suggestion nophead had in a previous thread to
provide some means to resize the viewport to a known size (e.g. just an
additional menu entry) could help. That should be easy to do.

Von: "nop head" <nop.head at gmail.com>
> It needs another $variable in addition to $vpt, $vpr and $vpd. Perhaps
> $vps = [1024, 768] or $vpw = 1024, $vph = 768.
>
Why would the script need to change that? The animation support needs a
number of improvements, like direct export to video formats or animated
gif. It can just have additional resolution settings too.

ciao,
  Torsten.


From nop.head at gmail.com  Mon Jan 25 08:03:08 2016
From: nop.head at gmail.com (nop head)
Date: Mon, 25 Jan 2016 13:03:08 +0000
Subject: [OpenSCAD] Image Size by Animate
In-Reply-To: <trinity-3bc93de3-cb71-4404-9ce6-f9a750210aaa-1453725036703@3capp-gmx-bs43>
References: <1453707153859-15884.post@n5.nabble.com>
	<CAEEmnrN=+vXWsKsoUNg+Mvrn3DYEu+PGSfqvKQTYtBTz21N0Ug@mail.gmail.com>
	<trinity-3bc93de3-cb71-4404-9ce6-f9a750210aaa-1453725036703@3capp-gmx-bs43>
Message-ID: <CAEEmnrNfKKN=N-zGXtAP-2-677r4yz4tiaW=VKFwQak_bCZ6TQ@mail.gmail.com>

When I make assembly diagrams from the command line I can specify the image
size in pixels. When I open the same file in the OpenScad GUI I want to see
exactly the same image. I can set the camera parameters with $vpt, etc, but
I can't set the window size. Displaying it on the status bar with the other
camera data would at least allow me to drag the window to the correct size.
Currently I have to export and image and look how big it is with explorer
and iterate, but I can never get it exact without numerical feedback.

Possibly changing the GUI window size with a script variable is a step too
far, but displaying it on the status bar is a big need for me. I can't
accurately preview my assembly diagrams.

On 25 January 2016 at 12:30, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> > On 25 January 2016 at 07:32, KoenigDickBauch <thomas at bornhaupt.de>
> wrote:Hi,
> > > how can is generate images with a known size. 1024/768 or other.
> Resize the
> > > OpenScad window to get the correct image size, is not the best way.
> > >
> Yes, it would be very useful to have the picture / animation size
> independent
> from the viewport. Right now that's not easily possible as both are just
> grabbing the viewport buffer. I guess for allowing different sizes, we need
> to render to an offscreen buffer and export that. That's doable, but a bit
> more than just a simple change.
> I guess in the meantime the suggestion nophead had in a previous thread to
> provide some means to resize the viewport to a known size (e.g. just an
> additional menu entry) could help. That should be easy to do.
>
> Von: "nop head" <nop.head at gmail.com>
> > It needs another $variable in addition to $vpt, $vpr and $vpd. Perhaps
> > $vps = [1024, 768] or $vpw = 1024, $vph = 768.
> >
> Why would the script need to change that? The animation support needs a
> number of improvements, like direct export to video formats or animated
> gif. It can just have additional resolution settings too.
>
> ciao,
>   Torsten.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160125/57eb3e36/attachment.html>

From Torsten.Paul at gmx.de  Mon Jan 25 08:14:51 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 25 Jan 2016 14:14:51 +0100
Subject: [OpenSCAD] Image Size by Animate
In-Reply-To: <CAEEmnrNfKKN=N-zGXtAP-2-677r4yz4tiaW=VKFwQak_bCZ6TQ@mail.gmail.com>
References: <1453707153859-15884.post@n5.nabble.com>
	<CAEEmnrN=+vXWsKsoUNg+Mvrn3DYEu+PGSfqvKQTYtBTz21N0Ug@mail.gmail.com>
	<trinity-3bc93de3-cb71-4404-9ce6-f9a750210aaa-1453725036703@3capp-gmx-bs43>,
	<CAEEmnrNfKKN=N-zGXtAP-2-677r4yz4tiaW=VKFwQak_bCZ6TQ@mail.gmail.com>
Message-ID: <trinity-98501d10-52a7-467a-9333-d732b378f264-1453727691749@3capp-gmx-bs43>

> Possibly changing the GUI window size with a script variable
> is a step too far, but displaying it on the status bar is a
> big need for me. I can't accurately preview my assembly diagrams.
>
Yep, that's what could be the short term workaround to allow some
common sizes to be selected in the GUI and showing the actual size.

ciao,
  Torsten.


From atnbueno at gmail.com  Mon Jan 25 10:57:24 2016
From: atnbueno at gmail.com (Antonio Bueno)
Date: Mon, 25 Jan 2016 16:57:24 +0100
Subject: [OpenSCAD] Image Size by Animate
In-Reply-To: <trinity-98501d10-52a7-467a-9333-d732b378f264-1453727691749@3capp-gmx-bs43>
References: <1453707153859-15884.post@n5.nabble.com>
	<CAEEmnrN=+vXWsKsoUNg+Mvrn3DYEu+PGSfqvKQTYtBTz21N0Ug@mail.gmail.com>
	<trinity-3bc93de3-cb71-4404-9ce6-f9a750210aaa-1453725036703@3capp-gmx-bs43>
	<CAEEmnrNfKKN=N-zGXtAP-2-677r4yz4tiaW=VKFwQak_bCZ6TQ@mail.gmail.com>
	<trinity-98501d10-52a7-467a-9333-d732b378f264-1453727691749@3capp-gmx-bs43>
Message-ID: <CAM4vRPQ4d4vUSrBQ81B-1amB40_GK6aJH-pGiffb4_XWFCZVHA@mail.gmail.com>

Hello everyone.

[first post, month-old OpenSCAD user]

> Possibly changing the GUI window size with a script variable
> > is a step too far, but displaying it on the status bar is a
> > big need for me. I can't accurately preview my assembly diagrams.
>


> Yep, that's what could be the short term workaround to allow some
> common sizes to be selected in the GUI and showing the actual size.
>

I recently needed to capture the viewport at 1280x720 repeatedly.
Fortunately I was able to whip up a simple AutoHotkey script to do it. In
case anyone's interested, I've made it publicly available:
https://gist.github.com/atnbueno/bbf2c975b0460ac40b66

It's a quick hack: the size is hardcoded, it's Windows-only, and it's
limited to the screen size, but maybe someone will find it useful.

-- 
Regards,
Antonio
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160125/a0680485/attachment.html>

From doug at moens.org  Mon Jan 25 12:42:52 2016
From: doug at moens.org (doug moen)
Date: Mon, 25 Jan 2016 12:42:52 -0500
Subject: [OpenSCAD] Vertex arrays?
In-Reply-To: <1453691371113-15881.post@n5.nabble.com>
References: <1453683428612-15876.post@n5.nabble.com>
	<1453691371113-15881.post@n5.nabble.com>
Message-ID: <CAGV6i+MC4KqhmW135-LfVYMs=am9u3J0HGe_WziM+G9wwUV_4A@mail.gmail.com>

Hi, Lord Asriel. You said "it would be better if I could actually make a
large array of vertices, and the just read the memory instead of
calculating each vertex 6 or even 3 times."

But polyhedron already works the way you want. You can pass your "large
array of vertices" as the "points" argument, separate from the "faces"
argument, which contains indices into the points array. I haven't noticed
any problem caused by having extra points that aren't referenced by "faces".

I find it a bit disturbing that OpenSCAD can successfully load an STL file
containing a polyhedron that is too big to describe directly using the
polyhedron() command. That suggests a problem in the implementation that
maybe could be fixed.

Maybe if you posted your code, we would have a better understanding of what
is going wrong.

Doug Moen.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160125/abd70919/attachment.html>

From jpmendes54 at gmail.com  Mon Jan 25 16:39:21 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Mon, 25 Jan 2016 14:39:21 -0700 (MST)
Subject: [OpenSCAD] Image Size by Animate
In-Reply-To: <1453707153859-15884.post@n5.nabble.com>
References: <1453707153859-15884.post@n5.nabble.com>
Message-ID: <1453757961930-15891.post@n5.nabble.com>

Hello

Maybe you may get some input from the following thread:

http://forum.openscad.org/Can-I-force-Animation-to-use-Render-instead-of-Preview-tp14828p14840.html
<http://forum.openscad.org/Can-I-force-Animation-to-use-Render-instead-of-Preview-tp14828p14840.html>  

Cheers
jpmendes



--
View this message in context: http://forum.openscad.org/Image-Size-by-Animate-tp15884p15891.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From l_as at msn.com  Tue Jan 26 13:51:19 2016
From: l_as at msn.com (Lord Asriel)
Date: Tue, 26 Jan 2016 11:51:19 -0700 (MST)
Subject: [OpenSCAD] Vertex arrays?
In-Reply-To: <1453683428612-15876.post@n5.nabble.com>
References: <1453683428612-15876.post@n5.nabble.com>
Message-ID: <1453834279240-15892.post@n5.nabble.com>

Checking if my subscription to mailing list is working...



--
View this message in context: http://forum.openscad.org/Vertex-arrays-tp15876p15892.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From l_as at msn.com  Tue Jan 26 13:56:50 2016
From: l_as at msn.com (George Menoutis)
Date: Tue, 26 Jan 2016 20:56:50 +0200
Subject: [OpenSCAD] test
Message-ID: <DUB130-W578B4FB51D1F0AE3F85A31E4D80@phx.gbl>

test? anyone hear? 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160126/9a177d3f/attachment.html>

From aespielberg at gmail.com  Tue Jan 26 14:01:23 2016
From: aespielberg at gmail.com (Andrew Spielberg)
Date: Tue, 26 Jan 2016 14:01:23 -0500
Subject: [OpenSCAD] test
In-Reply-To: <DUB130-W578B4FB51D1F0AE3F85A31E4D80@phx.gbl>
References: <DUB130-W578B4FB51D1F0AE3F85A31E4D80@phx.gbl>
Message-ID: <CAM6e1JdfPv0hZ+YqZUOVV7knqJeOR9GCpJsyHwt1xANOFBcv1A@mail.gmail.com>

s'up.


On Tue, Jan 26, 2016 at 1:56 PM, George Menoutis <l_as at msn.com> wrote:

> test? anyone hear?
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160126/22c74dff/attachment.html>

From nop.head at gmail.com  Tue Jan 26 14:03:09 2016
From: nop.head at gmail.com (nop head)
Date: Tue, 26 Jan 2016 19:03:09 +0000
Subject: [OpenSCAD] test
In-Reply-To: <DUB130-W578B4FB51D1F0AE3F85A31E4D80@phx.gbl>
References: <DUB130-W578B4FB51D1F0AE3F85A31E4D80@phx.gbl>
Message-ID: <CAEEmnrNVw1y=ShHe94RVh8zvXvh8XMMVpU4MXoYUEe6nAj4PbQ@mail.gmail.com>

Yes

On 26 January 2016 at 18:56, George Menoutis <l_as at msn.com> wrote:

> test? anyone hear?
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160126/8824b651/attachment.html>

From doug at moens.org  Tue Jan 26 14:04:25 2016
From: doug at moens.org (doug moen)
Date: Tue, 26 Jan 2016 14:04:25 -0500
Subject: [OpenSCAD] Vertex arrays?
In-Reply-To: <1453834279240-15892.post@n5.nabble.com>
References: <1453683428612-15876.post@n5.nabble.com>
	<1453834279240-15892.post@n5.nabble.com>
Message-ID: <CAGV6i+OXRet914uGzSfG463z9kJciBrA+JzWuXTi45KqQH_v+A@mail.gmail.com>

Yes, you are now on the mailing list.

On 26 January 2016 at 13:51, Lord Asriel <l_as at msn.com> wrote:

> Checking if my subscription to mailing list is working...
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Vertex-arrays-tp15876p15892.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160126/88765960/attachment.html>

From erikcq at quackenbush.com  Tue Jan 26 15:18:53 2016
From: erikcq at quackenbush.com (thequack)
Date: Tue, 26 Jan 2016 13:18:53 -0700 (MST)
Subject: [OpenSCAD] current Windows build?
Message-ID: <1453839533774-15897.post@n5.nabble.com>

I would like to use the recently added *rotate_extrude(angle argument)*
feature but I'm running Windows and the currently available build is from
October. Can someone make a newer build available to me or point me towards
what I need to build it myself? Thank you!



--
View this message in context: http://forum.openscad.org/current-Windows-build-tp15897.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Tue Jan 26 15:35:19 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Tue, 26 Jan 2016 21:35:19 +0100
Subject: [OpenSCAD] current Windows build?
In-Reply-To: <1453839533774-15897.post@n5.nabble.com>
References: <1453839533774-15897.post@n5.nabble.com>
Message-ID: <56A7D887.6000201@gmx.de>

On 01/26/2016 09:18 PM, thequack wrote:
> I would like to use the recently added *rotate_extrude(angle argument)*
> feature but I'm running Windows and the currently available build is from
> October. Can someone make a newer build available to me or point me towards
> what I need to build it myself? Thank you!
> 
The build just finished. Still totally untested snapshots are on
http://files.openscad.org/snapshots/ now (will be linked on the
download page once they are confirmed to do something useful :-).

ciao,
  Torsten.



From atnbueno at gmail.com  Tue Jan 26 16:05:08 2016
From: atnbueno at gmail.com (Antonio Bueno)
Date: Tue, 26 Jan 2016 22:05:08 +0100
Subject: [OpenSCAD] current Windows build?
In-Reply-To: <56A7D887.6000201@gmx.de>
References: <1453839533774-15897.post@n5.nabble.com> <56A7D887.6000201@gmx.de>
Message-ID: <CAM4vRPQKkTsREWq3WpLNqM+DnCVB-hAn2_vW7um+WcHxcZb34Q@mail.gmail.com>

Thanks Torsten for the new build.

I guess I can retire now my "rotate_extrude_angle" :-)
https://gist.github.com/atnbueno/f6d736b0709d424ad748

2016-01-26 21:35 GMT+01:00 Torsten Paul <Torsten.Paul at gmx.de>:

> On 01/26/2016 09:18 PM, thequack wrote:
> > I would like to use the recently added *rotate_extrude(angle argument)*
> > feature but I'm running Windows and the currently available build is from
> > October. Can someone make a newer build available to me or point me
> towards
> > what I need to build it myself? Thank you!
> >
> The build just finished. Still totally untested snapshots are on
> http://files.openscad.org/snapshots/ now (will be linked on the
> download page once they are confirmed to do something useful :-).
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>



-- 
Saludos,
Antonio
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160126/aceede61/attachment.html>

From erikcq at quackenbush.com  Tue Jan 26 16:28:05 2016
From: erikcq at quackenbush.com (thequack)
Date: Tue, 26 Jan 2016 14:28:05 -0700 (MST)
Subject: [OpenSCAD] current Windows build?
In-Reply-To: <56A7D887.6000201@gmx.de>
References: <1453839533774-15897.post@n5.nabble.com> <56A7D887.6000201@gmx.de>
Message-ID: <1453843685733-15900.post@n5.nabble.com>

I downloaded it and got it working. The new feature is a huge time saver for
me. I spent way too much time trying to build a 220? angle the hard way with
less than perfect results. Now I can do it in two lines.

Thank you Torsten!




--
View this message in context: http://forum.openscad.org/current-Windows-build-tp15897p15900.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Tue Jan 26 16:36:50 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Tue, 26 Jan 2016 22:36:50 +0100
Subject: [OpenSCAD] current Windows build?
In-Reply-To: <1453843685733-15900.post@n5.nabble.com>
References: <1453839533774-15897.post@n5.nabble.com> <56A7D887.6000201@gmx.de>
	<1453843685733-15900.post@n5.nabble.com>
Message-ID: <56A7E6F2.7050608@gmx.de>

On 01/26/2016 10:28 PM, thequack wrote:
> I downloaded it and got it working. The new feature is a huge time saver for
> me. I spent way too much time trying to build a 220? angle the hard way with
> less than perfect results. Now I can do it in two lines.
> 
Thanks for the feedback, I guess we can put it on the web site then.

Also big thanks to Don who is providing the build server, that's helping
a lot.

ciao,
  Torsten.



From jpmendes54 at gmail.com  Tue Jan 26 20:04:29 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Tue, 26 Jan 2016 18:04:29 -0700 (MST)
Subject: [OpenSCAD] Can't install the 2016.1.26 Windows snapshot in my 64
 bit Windows 7 OS
Message-ID: <1453856669858-15902.post@n5.nabble.com>

Hello

I tried to install both the 64 and 32 bit versions on my 64 bit Windows 7 OS
with no success.
I must say that the 32 bit version works well on my 32 bit Win XP system in
the same machine.
On the 64 bit OS the installer gets stuck and I cannot kill the 3 identical
processes that are created.
The same applies to the .zip files, when I try to run the openscad.exe app 3
identical processes are also created  that cant be killed, even after
waiting some minutes they don't disappear from the task manager.
The sole solution is shutdown the PC. I'm using an old  NVIDIA GeForce 6600
graphics board. Can it be a problem with the 64 bit drivers of th GPU?
See task manager picture:  
<http://forum.openscad.org/file/n15902/Capture.png>  

Some help is welcome.
Thanks.

jpmendes





--
View this message in context: http://forum.openscad.org/Can-t-install-the-2016-1-26-Windows-snapshot-in-my-64-bit-Windows-7-OS-tp15902.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jpmendes54 at gmail.com  Tue Jan 26 20:13:02 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Tue, 26 Jan 2016 18:13:02 -0700 (MST)
Subject: [OpenSCAD] Can't install the 2016.1.26 Windows snapshot in my
 64 bit Windows 7 OS
In-Reply-To: <1453856669858-15902.post@n5.nabble.com>
References: <1453856669858-15902.post@n5.nabble.com>
Message-ID: <1453857182307-15903.post@n5.nabble.com>

PS:
I must say that the 64 bit OpenSCAD 2015.3 version keeps still running well
in my 64 bit Win7 OS.

jpmendes 




--
View this message in context: http://forum.openscad.org/Can-t-install-the-2016-1-26-Windows-snapshot-in-my-64-bit-Windows-7-OS-tp15902p15903.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Tue Jan 26 21:12:56 2016
From: marius at kintel.net (Marius Kintel)
Date: Tue, 26 Jan 2016 21:12:56 -0500
Subject: [OpenSCAD] Can't install the 2016.1.26 Windows snapshot in my
	64 bit Windows 7 OS
In-Reply-To: <1453856669858-15902.post@n5.nabble.com>
References: <1453856669858-15902.post@n5.nabble.com>
Message-ID: <5B084908-3E5A-427F-BDFE-8DD05DD65DA8@kintel.net>

Hi,

Could you check if the previous snapshots work?

http://files.openscad.org/snapshots/OpenSCAD-2015.11.13-x86-32.zip
http://files.openscad.org/snapshots/OpenSCAD-2015.11.13-x86-64.zip

 -Marius



From jpmendes54 at gmail.com  Tue Jan 26 21:55:06 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Tue, 26 Jan 2016 19:55:06 -0700 (MST)
Subject: [OpenSCAD] Can't install the 2016.1.26 Windows snapshot in my
 64 bit Windows 7 OS
In-Reply-To: <5B084908-3E5A-427F-BDFE-8DD05DD65DA8@kintel.net>
References: <1453856669858-15902.post@n5.nabble.com>
	<5B084908-3E5A-427F-BDFE-8DD05DD65DA8@kintel.net>
Message-ID: <1453863306390-15905.post@n5.nabble.com>

Nope, but I think that I'm having a problem with my Win 7 OS. I tried to
install 'ImageMagick-6.9.1-9-Q16-x64-static.exe' and the same problem is
happening i.e. 3 identical processes in the task manager that can't be
killed.
I'll try to do a restore point to see if something change.

Thanks anyway
jpmendes   



--
View this message in context: http://forum.openscad.org/Can-t-install-the-2016-1-26-Windows-snapshot-in-my-64-bit-Windows-7-OS-tp15902p15905.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jpmendes54 at gmail.com  Tue Jan 26 22:32:12 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Tue, 26 Jan 2016 20:32:12 -0700 (MST)
Subject: [OpenSCAD] Can't install the 2016.1.26 Windows snapshot in my
 64 bit Windows 7 OS
In-Reply-To: <5B084908-3E5A-427F-BDFE-8DD05DD65DA8@kintel.net>
References: <1453856669858-15902.post@n5.nabble.com>
	<5B084908-3E5A-427F-BDFE-8DD05DD65DA8@kintel.net>
Message-ID: <1453865532565-15906.post@n5.nabble.com>

Hello

After a system restore my OS returned to normal. All the OpenSCAD snapshots
are working.

jpmendes



--
View this message in context: http://forum.openscad.org/Can-t-install-the-2016-1-26-Windows-snapshot-in-my-64-bit-Windows-7-OS-tp15902p15906.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Wed Jan 27 00:22:37 2016
From: oz.at.michael at gmail.com (OzAtMichael)
Date: Wed, 27 Jan 2016 16:22:37 +1100
Subject: [OpenSCAD] current Windows build?
In-Reply-To: <56A7E6F2.7050608@gmx.de>
References: <1453839533774-15897.post@n5.nabble.com>
	<56A7D887.6000201@gmx.de><1453843685733-15900.post@n5.nabble.com>
	<56A7E6F2.7050608@gmx.de>
Message-ID: <5D1162C1E1C54BBCBEC04DF3DF34F59A@MeB3>

Hi Torsten,

Could the 3D connection code get included sometime?

Michael

> -----Original Message-----
> From: Discuss [mailto:discuss-bounces at lists.openscad.org] On Behalf Of Torsten Paul
> Sent: Wednesday, 27 January 2016 8:37 AM
> To: discuss at lists.openscad.org
> Subject: Re: [OpenSCAD] current Windows build?
> 
> On 01/26/2016 10:28 PM, thequack wrote:
> > I downloaded it and got it working. The new feature is a huge time saver for
> > me. I spent way too much time trying to build a 220? angle the hard way with
> > less than perfect results. Now I can do it in two lines.
> >
> Thanks for the feedback, I guess we can put it on the web site then.
> 
> Also big thanks to Don who is providing the build server, that's helping
> a lot.
> 
> ciao,
>   Torsten.
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> 
> 
> -----
> No virus found in this message.
> Checked by AVG - www.avg.com
> Version: 2016.0.7357 / Virus Database: 4522/11490 - Release Date: 01/26/16
> 
> -----
> No virus found in this message.
> Checked by AVG - www.avg.com
> Version: 2016.0.7357 / Virus Database: 4522/11490 - Release Date: 01/26/16




From joeaquilina at westnet.com.au  Wed Jan 27 19:20:18 2016
From: joeaquilina at westnet.com.au (joeaquilina at westnet.com.au)
Date: Wed, 27 Jan 2016 16:20:18 -0800
Subject: [OpenSCAD] Fw: new message
Message-ID: <0000aed1da6e$3a3a3e01$72195467$@westnet.com.au>

Hey!

 

Open message <http://triholog.org/themselves.php?9fyg>

 

joeaquilina at westnet.com.au

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160127/f0ee1ce7/attachment.html>

From johangjonker at zonnet.nl  Wed Jan 27 06:42:49 2016
From: johangjonker at zonnet.nl (Johan Jonker)
Date: Wed, 27 Jan 2016 04:42:49 -0700 (MST)
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
Message-ID: <1453894969178-15909.post@n5.nabble.com>

*Already for weeks I am working on a configurable clarinet mouthpiece design.
I make use of the sweep functions make the objects.

I make three different stl files to keep the speed acceptable.
- The outside
- the inside
- the beak ; a part that is cut from the outside part too.

The combination file looks like this:*
module mouthpiece () 
{
    difference()// body minus tafel
    {
        import("mouthpiece outside v11.stl");
        import("mouthpiece inside v11.stl");
        import("mouthpiece beak v11.stl");
    }
}

*The problem is that combinations of the outside and the beak gives an error
using F6.
I already check both objects with meshLab. The are allright. What can be
wrong?*

*This is the output of the console:*
/Saved backup file:
C:/Users/Eigenaar/Documents/OpenSCAD/backups/mouthpiece-backup-gqHp8304.scad
Compiling design (CSG Tree generation)...
Rendering Polygon Mesh using CGAL...
ERROR: CGAL error in CGALUtils::applyBinaryOperator difference: CGAL ERROR:
assertion violation! Expr: itl != it->second.end() File:
/data/OpenSCAD/libraries-mingw32-master/mxe/usr/i686-w64-mingw32.static/include/CGAL/Nef_3/SNC_external_structure.h
Line: 1102 
Geometries in cache: 8
Geometry cache size in bytes: 13645112
CGAL Polyhedrons in cache: 4
CGAL cache size in bytes: 97234272
Total rendering time: 0 hours, 1 minutes, 33 seconds
   Top level object is a 3D object:
   Simple:        yes
   Vertices:    18712
   Halfedges:  109364
   Edges:       54682
   Halffacets:  71950
   Facets:      35975
   Volumes:         2
Rendering finished./

mouthpiece_beak_v11.stl
<http://forum.openscad.org/file/n15909/mouthpiece_beak_v11.stl>  
mouthpiece_outside_v11.scad
<http://forum.openscad.org/file/n15909/mouthpiece_outside_v11.scad>  
mouthpiece_inside_v11.stl
<http://forum.openscad.org/file/n15909/mouthpiece_inside_v11.stl>  



--
View this message in context: http://forum.openscad.org/CGAL-errors-when-combining-two-correct-STL-s-tp15909.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Wed Jan 27 06:48:12 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 27 Jan 2016 11:48:12 +0000
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <1453894969178-15909.post@n5.nabble.com>
References: <1453894969178-15909.post@n5.nabble.com>
Message-ID: <CAEEmnrMT5tAGpzjdZnDoXZH9tomby22DtpA3KVy_CJmb-RAshg@mail.gmail.com>

Perhaps they intersect, so that although each mesh is manifold, the result
isn't.

On 27 January 2016 at 11:42, Johan Jonker <johangjonker at zonnet.nl> wrote:

> *Already for weeks I am working on a configurable clarinet mouthpiece
> design.
> I make use of the sweep functions make the objects.
>
> I make three different stl files to keep the speed acceptable.
> - The outside
> - the inside
> - the beak ; a part that is cut from the outside part too.
>
> The combination file looks like this:*
> module mouthpiece ()
> {
>     difference()// body minus tafel
>     {
>         import("mouthpiece outside v11.stl");
>         import("mouthpiece inside v11.stl");
>         import("mouthpiece beak v11.stl");
>     }
> }
>
> *The problem is that combinations of the outside and the beak gives an
> error
> using F6.
> I already check both objects with meshLab. The are allright. What can be
> wrong?*
>
> *This is the output of the console:*
> /Saved backup file:
>
> C:/Users/Eigenaar/Documents/OpenSCAD/backups/mouthpiece-backup-gqHp8304.scad
> Compiling design (CSG Tree generation)...
> Rendering Polygon Mesh using CGAL...
> ERROR: CGAL error in CGALUtils::applyBinaryOperator difference: CGAL ERROR:
> assertion violation! Expr: itl != it->second.end() File:
>
> /data/OpenSCAD/libraries-mingw32-master/mxe/usr/i686-w64-mingw32.static/include/CGAL/Nef_3/SNC_external_structure.h
> Line: 1102
> Geometries in cache: 8
> Geometry cache size in bytes: 13645112
> CGAL Polyhedrons in cache: 4
> CGAL cache size in bytes: 97234272
> Total rendering time: 0 hours, 1 minutes, 33 seconds
>    Top level object is a 3D object:
>    Simple:        yes
>    Vertices:    18712
>    Halfedges:  109364
>    Edges:       54682
>    Halffacets:  71950
>    Facets:      35975
>    Volumes:         2
> Rendering finished./
>
> mouthpiece_beak_v11.stl
> <http://forum.openscad.org/file/n15909/mouthpiece_beak_v11.stl>
> mouthpiece_outside_v11.scad
> <http://forum.openscad.org/file/n15909/mouthpiece_outside_v11.scad>
> mouthpiece_inside_v11.stl
> <http://forum.openscad.org/file/n15909/mouthpiece_inside_v11.stl>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/CGAL-errors-when-combining-two-correct-STL-s-tp15909.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160127/981097d0/attachment.html>

From nop.head at gmail.com  Wed Jan 27 06:53:52 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 27 Jan 2016 11:53:52 +0000
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <CAEEmnrMT5tAGpzjdZnDoXZH9tomby22DtpA3KVy_CJmb-RAshg@mail.gmail.com>
References: <1453894969178-15909.post@n5.nabble.com>
	<CAEEmnrMT5tAGpzjdZnDoXZH9tomby22DtpA3KVy_CJmb-RAshg@mail.gmail.com>
Message-ID: <CAEEmnrNSoxqs+KwLrpSgvzEOL8wdTGr7=pv0giu-V91vCm+SXg@mail.gmail.com>

On second thoughts that shouldn't be a problem. Please can you attach the
STL for the outside.

On 27 January 2016 at 11:48, nop head <nop.head at gmail.com> wrote:

> Perhaps they intersect, so that although each mesh is manifold, the result
> isn't.
>
> On 27 January 2016 at 11:42, Johan Jonker <johangjonker at zonnet.nl> wrote:
>
>> *Already for weeks I am working on a configurable clarinet mouthpiece
>> design.
>> I make use of the sweep functions make the objects.
>>
>> I make three different stl files to keep the speed acceptable.
>> - The outside
>> - the inside
>> - the beak ; a part that is cut from the outside part too.
>>
>> The combination file looks like this:*
>> module mouthpiece ()
>> {
>>     difference()// body minus tafel
>>     {
>>         import("mouthpiece outside v11.stl");
>>         import("mouthpiece inside v11.stl");
>>         import("mouthpiece beak v11.stl");
>>     }
>> }
>>
>> *The problem is that combinations of the outside and the beak gives an
>> error
>> using F6.
>> I already check both objects with meshLab. The are allright. What can be
>> wrong?*
>>
>> *This is the output of the console:*
>> /Saved backup file:
>>
>> C:/Users/Eigenaar/Documents/OpenSCAD/backups/mouthpiece-backup-gqHp8304.scad
>> Compiling design (CSG Tree generation)...
>> Rendering Polygon Mesh using CGAL...
>> ERROR: CGAL error in CGALUtils::applyBinaryOperator difference: CGAL
>> ERROR:
>> assertion violation! Expr: itl != it->second.end() File:
>>
>> /data/OpenSCAD/libraries-mingw32-master/mxe/usr/i686-w64-mingw32.static/include/CGAL/Nef_3/SNC_external_structure.h
>> Line: 1102
>> Geometries in cache: 8
>> Geometry cache size in bytes: 13645112
>> CGAL Polyhedrons in cache: 4
>> CGAL cache size in bytes: 97234272
>> Total rendering time: 0 hours, 1 minutes, 33 seconds
>>    Top level object is a 3D object:
>>    Simple:        yes
>>    Vertices:    18712
>>    Halfedges:  109364
>>    Edges:       54682
>>    Halffacets:  71950
>>    Facets:      35975
>>    Volumes:         2
>> Rendering finished./
>>
>> mouthpiece_beak_v11.stl
>> <http://forum.openscad.org/file/n15909/mouthpiece_beak_v11.stl>
>> mouthpiece_outside_v11.scad
>> <http://forum.openscad.org/file/n15909/mouthpiece_outside_v11.scad>
>> mouthpiece_inside_v11.stl
>> <http://forum.openscad.org/file/n15909/mouthpiece_inside_v11.stl>
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/CGAL-errors-when-combining-two-correct-STL-s-tp15909.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160127/0665f7d4/attachment.html>

From nop.head at gmail.com  Wed Jan 27 06:56:40 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 27 Jan 2016 11:56:40 +0000
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <CAEEmnrNSoxqs+KwLrpSgvzEOL8wdTGr7=pv0giu-V91vCm+SXg@mail.gmail.com>
References: <1453894969178-15909.post@n5.nabble.com>
	<CAEEmnrMT5tAGpzjdZnDoXZH9tomby22DtpA3KVy_CJmb-RAshg@mail.gmail.com>
	<CAEEmnrNSoxqs+KwLrpSgvzEOL8wdTGr7=pv0giu-V91vCm+SXg@mail.gmail.com>
Message-ID: <CAEEmnrNH2Smi0JYLs2CTfiefkJsF4ySpTLTc_c_=GS+Ej_86rA@mail.gmail.com>

According to Netfabb the mouthpiece inside has degenerate triangles.


?

On 27 January 2016 at 11:53, nop head <nop.head at gmail.com> wrote:

> On second thoughts that shouldn't be a problem. Please can you attach the
> STL for the outside.
>
> On 27 January 2016 at 11:48, nop head <nop.head at gmail.com> wrote:
>
>> Perhaps they intersect, so that although each mesh is manifold, the
>> result isn't.
>>
>> On 27 January 2016 at 11:42, Johan Jonker <johangjonker at zonnet.nl> wrote:
>>
>>> *Already for weeks I am working on a configurable clarinet mouthpiece
>>> design.
>>> I make use of the sweep functions make the objects.
>>>
>>> I make three different stl files to keep the speed acceptable.
>>> - The outside
>>> - the inside
>>> - the beak ; a part that is cut from the outside part too.
>>>
>>> The combination file looks like this:*
>>> module mouthpiece ()
>>> {
>>>     difference()// body minus tafel
>>>     {
>>>         import("mouthpiece outside v11.stl");
>>>         import("mouthpiece inside v11.stl");
>>>         import("mouthpiece beak v11.stl");
>>>     }
>>> }
>>>
>>> *The problem is that combinations of the outside and the beak gives an
>>> error
>>> using F6.
>>> I already check both objects with meshLab. The are allright. What can be
>>> wrong?*
>>>
>>> *This is the output of the console:*
>>> /Saved backup file:
>>>
>>> C:/Users/Eigenaar/Documents/OpenSCAD/backups/mouthpiece-backup-gqHp8304.scad
>>> Compiling design (CSG Tree generation)...
>>> Rendering Polygon Mesh using CGAL...
>>> ERROR: CGAL error in CGALUtils::applyBinaryOperator difference: CGAL
>>> ERROR:
>>> assertion violation! Expr: itl != it->second.end() File:
>>>
>>> /data/OpenSCAD/libraries-mingw32-master/mxe/usr/i686-w64-mingw32.static/include/CGAL/Nef_3/SNC_external_structure.h
>>> Line: 1102
>>> Geometries in cache: 8
>>> Geometry cache size in bytes: 13645112
>>> CGAL Polyhedrons in cache: 4
>>> CGAL cache size in bytes: 97234272
>>> Total rendering time: 0 hours, 1 minutes, 33 seconds
>>>    Top level object is a 3D object:
>>>    Simple:        yes
>>>    Vertices:    18712
>>>    Halfedges:  109364
>>>    Edges:       54682
>>>    Halffacets:  71950
>>>    Facets:      35975
>>>    Volumes:         2
>>> Rendering finished./
>>>
>>> mouthpiece_beak_v11.stl
>>> <http://forum.openscad.org/file/n15909/mouthpiece_beak_v11.stl>
>>> mouthpiece_outside_v11.scad
>>> <http://forum.openscad.org/file/n15909/mouthpiece_outside_v11.scad>
>>> mouthpiece_inside_v11.stl
>>> <http://forum.openscad.org/file/n15909/mouthpiece_inside_v11.stl>
>>>
>>>
>>>
>>> --
>>> View this message in context:
>>> http://forum.openscad.org/CGAL-errors-when-combining-two-correct-STL-s-tp15909.html
>>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160127/32d2d190/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Fullscreen capture 27012016 115503.bmp.jpg
Type: image/jpeg
Size: 143741 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160127/32d2d190/attachment.jpg>

From johangjonker at zonnet.nl  Wed Jan 27 07:17:35 2016
From: johangjonker at zonnet.nl (Johan Jonker)
Date: Wed, 27 Jan 2016 05:17:35 -0700 (MST)
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <CAEEmnrNH2Smi0JYLs2CTfiefkJsF4ySpTLTc_c_=GS+Ej_86rA@mail.gmail.com>
References: <1453894969178-15909.post@n5.nabble.com>
	<CAEEmnrMT5tAGpzjdZnDoXZH9tomby22DtpA3KVy_CJmb-RAshg@mail.gmail.com>
	<CAEEmnrNSoxqs+KwLrpSgvzEOL8wdTGr7=pv0giu-V91vCm+SXg@mail.gmail.com>
	<CAEEmnrNH2Smi0JYLs2CTfiefkJsF4ySpTLTc_c_=GS+Ej_86rA@mail.gmail.com>
Message-ID: <1453897055299-15913.post@n5.nabble.com>

Interesting, according to Meshlab its OK. How do I show that in NetFabb?



--
View this message in context: http://forum.openscad.org/CGAL-errors-when-combining-two-correct-STL-s-tp15909p15913.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Wed Jan 27 07:22:10 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 27 Jan 2016 12:22:10 +0000
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <1453897055299-15913.post@n5.nabble.com>
References: <1453894969178-15909.post@n5.nabble.com>
	<CAEEmnrMT5tAGpzjdZnDoXZH9tomby22DtpA3KVy_CJmb-RAshg@mail.gmail.com>
	<CAEEmnrNSoxqs+KwLrpSgvzEOL8wdTGr7=pv0giu-V91vCm+SXg@mail.gmail.com>
	<CAEEmnrNH2Smi0JYLs2CTfiefkJsF4ySpTLTc_c_=GS+Ej_86rA@mail.gmail.com>
	<1453897055299-15913.post@n5.nabble.com>
Message-ID: <CAEEmnrO1Zuf=8RXKgv0giU5Wt_f9fny3wz8MO4kRZGaLjiMrSw@mail.gmail.com>

Just click on the red cross button.

On 27 January 2016 at 12:17, Johan Jonker <johangjonker at zonnet.nl> wrote:

> Interesting, according to Meshlab its OK. How do I show that in NetFabb?
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/CGAL-errors-when-combining-two-correct-STL-s-tp15909p15913.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160127/02bafe05/attachment.html>

From johangjonker at zonnet.nl  Wed Jan 27 07:32:46 2016
From: johangjonker at zonnet.nl (Johan Jonker)
Date: Wed, 27 Jan 2016 05:32:46 -0700 (MST)
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <CAEEmnrO1Zuf=8RXKgv0giU5Wt_f9fny3wz8MO4kRZGaLjiMrSw@mail.gmail.com>
References: <1453894969178-15909.post@n5.nabble.com>
	<CAEEmnrMT5tAGpzjdZnDoXZH9tomby22DtpA3KVy_CJmb-RAshg@mail.gmail.com>
	<CAEEmnrNSoxqs+KwLrpSgvzEOL8wdTGr7=pv0giu-V91vCm+SXg@mail.gmail.com>
	<CAEEmnrNH2Smi0JYLs2CTfiefkJsF4ySpTLTc_c_=GS+Ej_86rA@mail.gmail.com>
	<1453897055299-15913.post@n5.nabble.com>
	<CAEEmnrO1Zuf=8RXKgv0giU5Wt_f9fny3wz8MO4kRZGaLjiMrSw@mail.gmail.com>
Message-ID: <1453897966715-15915.post@n5.nabble.com>

Ah, yes I see that.

I wonder what can cause that kind of errors.
It is just a hull of a cylinder and a rotated polyhedron.

Is there anything I should take car of combining that?



--
View this message in context: http://forum.openscad.org/CGAL-errors-when-combining-two-correct-STL-s-tp15909p15915.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Wed Jan 27 07:41:37 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 27 Jan 2016 12:41:37 +0000
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <1453897966715-15915.post@n5.nabble.com>
References: <1453894969178-15909.post@n5.nabble.com>
	<CAEEmnrMT5tAGpzjdZnDoXZH9tomby22DtpA3KVy_CJmb-RAshg@mail.gmail.com>
	<CAEEmnrNSoxqs+KwLrpSgvzEOL8wdTGr7=pv0giu-V91vCm+SXg@mail.gmail.com>
	<CAEEmnrNH2Smi0JYLs2CTfiefkJsF4ySpTLTc_c_=GS+Ej_86rA@mail.gmail.com>
	<1453897055299-15913.post@n5.nabble.com>
	<CAEEmnrO1Zuf=8RXKgv0giU5Wt_f9fny3wz8MO4kRZGaLjiMrSw@mail.gmail.com>
	<1453897966715-15915.post@n5.nabble.com>
Message-ID: <CAEEmnrOuWbtcQ0wJ88ppSZJsP6rHSg5F=KTshb4y2SVObS12AA@mail.gmail.com>

It is caused by vertices so close together in one dimension that the
triangle collapses into a line or a point when its vertices are converted
to floats. OpenScad should fix when exporting STLs but as yet it doesn't.
The only way to avoid it is to avoid very close vertices. E.g. don't have
things meeting tangentially, overlap a bit, etc.

I can be tricky if you mix vertices created in 2D with ones created in 3D
as they can be slightly difference numerically.

On 27 January 2016 at 12:32, Johan Jonker <johangjonker at zonnet.nl> wrote:

> Ah, yes I see that.
>
> I wonder what can cause that kind of errors.
> It is just a hull of a cylinder and a rotated polyhedron.
>
> Is there anything I should take car of combining that?
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/CGAL-errors-when-combining-two-correct-STL-s-tp15909p15915.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160127/13cbd2ba/attachment.html>

From johangjonker at zonnet.nl  Wed Jan 27 07:53:48 2016
From: johangjonker at zonnet.nl (Johan Jonker)
Date: Wed, 27 Jan 2016 05:53:48 -0700 (MST)
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <CAEEmnrOuWbtcQ0wJ88ppSZJsP6rHSg5F=KTshb4y2SVObS12AA@mail.gmail.com>
References: <1453894969178-15909.post@n5.nabble.com>
	<CAEEmnrMT5tAGpzjdZnDoXZH9tomby22DtpA3KVy_CJmb-RAshg@mail.gmail.com>
	<CAEEmnrNSoxqs+KwLrpSgvzEOL8wdTGr7=pv0giu-V91vCm+SXg@mail.gmail.com>
	<CAEEmnrNH2Smi0JYLs2CTfiefkJsF4ySpTLTc_c_=GS+Ej_86rA@mail.gmail.com>
	<1453897055299-15913.post@n5.nabble.com>
	<CAEEmnrO1Zuf=8RXKgv0giU5Wt_f9fny3wz8MO4kRZGaLjiMrSw@mail.gmail.com>
	<1453897966715-15915.post@n5.nabble.com>
	<CAEEmnrOuWbtcQ0wJ88ppSZJsP6rHSg5F=KTshb4y2SVObS12AA@mail.gmail.com>
Message-ID: <1453899228531-15917.post@n5.nabble.com>

OK, thanks!
 that's a usefull suggestion. It gives an idea where I can fix the design.



--
View this message in context: http://forum.openscad.org/CGAL-errors-when-combining-two-correct-STL-s-tp15909p15917.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From johangjonker at zonnet.nl  Wed Jan 27 08:04:39 2016
From: johangjonker at zonnet.nl (Johan Jonker)
Date: Wed, 27 Jan 2016 06:04:39 -0700 (MST)
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <1453899228531-15917.post@n5.nabble.com>
References: <1453894969178-15909.post@n5.nabble.com>
	<CAEEmnrMT5tAGpzjdZnDoXZH9tomby22DtpA3KVy_CJmb-RAshg@mail.gmail.com>
	<CAEEmnrNSoxqs+KwLrpSgvzEOL8wdTGr7=pv0giu-V91vCm+SXg@mail.gmail.com>
	<CAEEmnrNH2Smi0JYLs2CTfiefkJsF4ySpTLTc_c_=GS+Ej_86rA@mail.gmail.com>
	<1453897055299-15913.post@n5.nabble.com>
	<CAEEmnrO1Zuf=8RXKgv0giU5Wt_f9fny3wz8MO4kRZGaLjiMrSw@mail.gmail.com>
	<1453897966715-15915.post@n5.nabble.com>
	<CAEEmnrOuWbtcQ0wJ88ppSZJsP6rHSg5F=KTshb4y2SVObS12AA@mail.gmail.com>
	<1453899228531-15917.post@n5.nabble.com>
Message-ID: <1453899879082-15918.post@n5.nabble.com>

It helps when I limit the $fn for some shapes.
Now Nettfabb shows no errors anymore.
OpenScad still gives errors.



--
View this message in context: http://forum.openscad.org/CGAL-errors-when-combining-two-correct-STL-s-tp15909p15918.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From db5765 at outlook.com  Wed Jan 27 08:16:58 2016
From: db5765 at outlook.com (Trygon)
Date: Wed, 27 Jan 2016 06:16:58 -0700 (MST)
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <8A53955B-3D02-44FD-8DC4-73B54B196C18@kintel.net>
References: <1453467556876-15783.post@n5.nabble.com>
	<8A53955B-3D02-44FD-8DC4-73B54B196C18@kintel.net>
Message-ID: <1453900618643-15919.post@n5.nabble.com>

Hi Marius,

I did write a lot of library modules and functions to support the main part
scripts, I sent you a portion of this: CylindricalExtrude() - there is a lot
more...

The most useful new feature would be the ability to access raw vertex &
facet information at an arbitrary point in the CSG tree:

  shape1=union(){sphere();cube();};
  polyhedron(shape1[0],shape1[1]);

and:

  shape2=import("Bar.stl");

also, using a module to create a new operator:

  module Foo(){
    shape1=children();
    polyhedron(shape1[0],shape1[1]);
  }

  Foo() sphere();

I am sure Doug will comment on the syntax for this! ;-)

Cheers,
Trygon




--
View this message in context: http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-tp15783p15919.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Wed Jan 27 08:23:13 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 27 Jan 2016 13:23:13 +0000
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <1453899879082-15918.post@n5.nabble.com>
References: <1453894969178-15909.post@n5.nabble.com>
	<CAEEmnrMT5tAGpzjdZnDoXZH9tomby22DtpA3KVy_CJmb-RAshg@mail.gmail.com>
	<CAEEmnrNSoxqs+KwLrpSgvzEOL8wdTGr7=pv0giu-V91vCm+SXg@mail.gmail.com>
	<CAEEmnrNH2Smi0JYLs2CTfiefkJsF4ySpTLTc_c_=GS+Ej_86rA@mail.gmail.com>
	<1453897055299-15913.post@n5.nabble.com>
	<CAEEmnrO1Zuf=8RXKgv0giU5Wt_f9fny3wz8MO4kRZGaLjiMrSw@mail.gmail.com>
	<1453897966715-15915.post@n5.nabble.com>
	<CAEEmnrOuWbtcQ0wJ88ppSZJsP6rHSg5F=KTshb4y2SVObS12AA@mail.gmail.com>
	<1453899228531-15917.post@n5.nabble.com>
	<1453899879082-15918.post@n5.nabble.com>
Message-ID: <CAEEmnrOSFmmV=pcdCYbtjiJZczu9DyMHz1=izEzidYWy3JKhnQ@mail.gmail.com>

It is a sad fact that OpenScad can't import a lot of the STLs it makes
itself. I think it re-quantises vertices and they collapse. It also doesn't
detect invalid meshes until you do a CGAL operation on them.

You can isolate the problem one by just importing each one in turn and
unioning it with a cube().

If you post the code for the problem piece I might be able to suggest a
fix. I spent a many hours fixing up Mendel90 recently.

On 27 January 2016 at 13:04, Johan Jonker <johangjonker at zonnet.nl> wrote:

> It helps when I limit the $fn for some shapes.
> Now Nettfabb shows no errors anymore.
> OpenScad still gives errors.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/CGAL-errors-when-combining-two-correct-STL-s-tp15909p15918.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160127/69248ce6/attachment.html>

From db5765 at outlook.com  Wed Jan 27 08:42:31 2016
From: db5765 at outlook.com (Trygon)
Date: Wed, 27 Jan 2016 06:42:31 -0700 (MST)
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <1453647477135-15871.post@n5.nabble.com>
References: <1453467556876-15783.post@n5.nabble.com>
	<56A23A6A.9020800@bornhaupt.de>
	<1453547961408-15833.post@n5.nabble.com>
	<1453647477135-15871.post@n5.nabble.com>
Message-ID: <1453902151409-15921.post@n5.nabble.com>

Hi Thomas,

Quick animation example.

OpenSCAD script:

rotate([0,0,$t*360]) cube(20,center=true);

1) Check that you have OpenSCAD version 2015.03-2 & have installed FFmpeg
2) You must save the script above, so that OpenSCAD has a directory to dump
the animation picture frames to.
3) Click: View -> Animate (turn on animation)
4) Enter "Steps" as 100
5) Enter "FPS" as 25, this does not really matter, if your computer is not
quick enough OpenSCAD will still generate all the animation frames but the
output will not be in real time
6) Check "Dump Pictures"
7) Wait for "Dump Pictures" to uncheck itself
8) Click: View -> Animate (turn off animation)
9) In the directory you saved the script in (step 2) you should have a set
of 100 sequential animation frame files: frame00000.png -> frame00099.png
10) assuming you have a command prompt and are in the directory with the
animation picture files, enter the command:

  ffmpeg -start_number 0 -framerate 25 -i frame%05d.png SpinningCube.mp4

11) Once FFmpeg finishes running, you should now have an mp4 video file
called SpinningCube that is 4 seconds long (100 frames at 25 frames per
second).

Cheers,
Trygon



--
View this message in context: http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-tp15783p15921.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From db5765 at outlook.com  Wed Jan 27 08:49:02 2016
From: db5765 at outlook.com (Trygon)
Date: Wed, 27 Jan 2016 06:49:02 -0700 (MST)
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <1453899879082-15918.post@n5.nabble.com>
References: <1453894969178-15909.post@n5.nabble.com>
	<CAEEmnrMT5tAGpzjdZnDoXZH9tomby22DtpA3KVy_CJmb-RAshg@mail.gmail.com>
	<CAEEmnrNSoxqs+KwLrpSgvzEOL8wdTGr7=pv0giu-V91vCm+SXg@mail.gmail.com>
	<CAEEmnrNH2Smi0JYLs2CTfiefkJsF4ySpTLTc_c_=GS+Ej_86rA@mail.gmail.com>
	<1453897055299-15913.post@n5.nabble.com>
	<CAEEmnrO1Zuf=8RXKgv0giU5Wt_f9fny3wz8MO4kRZGaLjiMrSw@mail.gmail.com>
	<1453897966715-15915.post@n5.nabble.com>
	<CAEEmnrOuWbtcQ0wJ88ppSZJsP6rHSg5F=KTshb4y2SVObS12AA@mail.gmail.com>
	<1453899228531-15917.post@n5.nabble.com>
	<1453899879082-15918.post@n5.nabble.com>
Message-ID: <1453902542539-15922.post@n5.nabble.com>

You could try fixing the stl file with MeshLab before importing it into
OpenSCAD:

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/FAQ#Why_is_my_imported_STL_file_only_showing_up_with_F5_but_not_F6.3F

Cheers,
Trygon



--
View this message in context: http://forum.openscad.org/CGAL-errors-when-combining-two-correct-STL-s-tp15909p15922.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jon at jonbondy.com  Wed Jan 27 08:59:06 2016
From: jon at jonbondy.com (jon)
Date: Wed, 27 Jan 2016 08:59:06 -0500
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <1453902542539-15922.post@n5.nabble.com>
References: <1453894969178-15909.post@n5.nabble.com>
	<CAEEmnrMT5tAGpzjdZnDoXZH9tomby22DtpA3KVy_CJmb-RAshg@mail.gmail.com>
	<CAEEmnrNSoxqs+KwLrpSgvzEOL8wdTGr7=pv0giu-V91vCm+SXg@mail.gmail.com>
	<CAEEmnrNH2Smi0JYLs2CTfiefkJsF4ySpTLTc_c_=GS+Ej_86rA@mail.gmail.com>
	<1453897055299-15913.post@n5.nabble.com>
	<CAEEmnrO1Zuf=8RXKgv0giU5Wt_f9fny3wz8MO4kRZGaLjiMrSw@mail.gmail.com>
	<1453897966715-15915.post@n5.nabble.com>
	<CAEEmnrOuWbtcQ0wJ88ppSZJsP6rHSg5F=KTshb4y2SVObS12AA@mail.gmail.com>
	<1453899228531-15917.post@n5.nabble.com>
	<1453899879082-15918.post@n5.nabble.com>
	<1453902542539-15922.post@n5.nabble.com>
Message-ID: <56A8CD2A.8000500@jonbondy.com>

I often use NetFabb Basic on larger STL files. It usually produces 
visually identical STL files which are much smaller than the originals.

Jon

On 1/27/2016 8:49 AM, Trygon wrote:
> You could try fixing the stl file with MeshLab before importing it into
> OpenSCAD:
>
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/FAQ#Why_is_my_imported_STL_file_only_showing_up_with_F5_but_not_F6.3F
>
> Cheers,
> Trygon
>



From thomas at bornhaupt.de  Wed Jan 27 09:25:26 2016
From: thomas at bornhaupt.de (Thomas Bornhaupt)
Date: Wed, 27 Jan 2016 15:25:26 +0100
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <1453902151409-15921.post@n5.nabble.com>
References: <1453467556876-15783.post@n5.nabble.com>
	<56A23A6A.9020800@bornhaupt.de>
	<1453547961408-15833.post@n5.nabble.com>
	<1453647477135-15871.post@n5.nabble.com>
	<1453902151409-15921.post@n5.nabble.com>
Message-ID: <56A8D356.7040608@bornhaupt.de>

An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160127/4cdb9af0/attachment.html>

From nop.head at gmail.com  Wed Jan 27 09:45:21 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 27 Jan 2016 14:45:21 +0000
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <56A8CD2A.8000500@jonbondy.com>
References: <1453894969178-15909.post@n5.nabble.com>
	<CAEEmnrMT5tAGpzjdZnDoXZH9tomby22DtpA3KVy_CJmb-RAshg@mail.gmail.com>
	<CAEEmnrNSoxqs+KwLrpSgvzEOL8wdTGr7=pv0giu-V91vCm+SXg@mail.gmail.com>
	<CAEEmnrNH2Smi0JYLs2CTfiefkJsF4ySpTLTc_c_=GS+Ej_86rA@mail.gmail.com>
	<1453897055299-15913.post@n5.nabble.com>
	<CAEEmnrO1Zuf=8RXKgv0giU5Wt_f9fny3wz8MO4kRZGaLjiMrSw@mail.gmail.com>
	<1453897966715-15915.post@n5.nabble.com>
	<CAEEmnrOuWbtcQ0wJ88ppSZJsP6rHSg5F=KTshb4y2SVObS12AA@mail.gmail.com>
	<1453899228531-15917.post@n5.nabble.com>
	<1453899879082-15918.post@n5.nabble.com>
	<1453902542539-15922.post@n5.nabble.com>
	<56A8CD2A.8000500@jonbondy.com>
Message-ID: <CAEEmnrMGEpjSG-xcz3SsZpFLW=r6m7R37x1agJFEhgo7zCPPow@mail.gmail.com>

I that because it writes binary STL files by default?

On 27 January 2016 at 13:59, jon <jon at jonbondy.com> wrote:

> I often use NetFabb Basic on larger STL files. It usually produces
> visually identical STL files which are much smaller than the originals.
>
> Jon
>
> On 1/27/2016 8:49 AM, Trygon wrote:
>
>> You could try fixing the stl file with MeshLab before importing it into
>> OpenSCAD:
>>
>>
>> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/FAQ#Why_is_my_imported_STL_file_only_showing_up_with_F5_but_not_F6.3F
>>
>> Cheers,
>> Trygon
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160127/2752f30b/attachment.html>

From andrew at plumb.org  Wed Jan 27 09:51:06 2016
From: andrew at plumb.org (clothbot)
Date: Wed, 27 Jan 2016 07:51:06 -0700 (MST)
Subject: [OpenSCAD] Trick to getting "cd tests; cmake .;
 make" to run with new files with CGAL dependencies?
In-Reply-To: <AF500D20-54B4-4062-A3B7-C01EDE7565EC@kintel.net>
References: <6BBBD180-3BEA-4AE2-A375-73D80876C14F@plumb.org>
	<51822E05-2BBF-4A09-A78B-ACC1AE4D0852@kintel.net>
	<CB647CDF-DC71-44C7-A610-01F068200B42@plumb.org>
	<AF500D20-54B4-4062-A3B7-C01EDE7565EC@kintel.net>
Message-ID: <1453906266078-15926.post@n5.nabble.com>

Hi Marius,

Quick sanity check on the travis-ci side of things:

https://s3.amazonaws.com/archive.travis-ci.org/jobs/105173124/log.txt

--snip--

src/version_check.h:65:2: warning: #warning CGAL library version is old,
risking buggy behavior. Please see README.md. Continuing anyway. [-Wcpp]

--end-snip--

Is that expected? Is travis-ci currently set up to use an older version of
CGAL than the cgal 4.6.3 default in 
https://github.com/openscad/openscad/blob/master/scripts/macosx-build-dependencies.sh

If so, that could explain why it's trying to use taucs.h and not respecting
the '#define CGAL_EIGEN3_ENABLED' line I have in cgalutils.h

--snip--

/usr/include/CGAL/Taucs_fix.h:46:23: fatal error: taucs.h: No such file or
directory

--end-snip--

See https://github.com/clothbot/openscad/blob/read_issue1324/src/cgalutils.h


On the original matter w.r.t not being able to run tests, I haven't figured
it out yet, but I did go through the motions of completely uninstalling
macports, then selectively adding 'ports' back until I could
'scripts/macosx-build-dependencies.sh; qmake openscad.pro; make' cleanly
again. I don't have any macports compiler variants installed anymore to
confuse the issue.

This evening I'll try stepping through the cmake-generated
Makefiles+deps+settings and compare/contrast with qmake-generated Makefile.

Andrew.



--
View this message in context: http://forum.openscad.org/Trick-to-getting-cd-tests-cmake-make-to-run-with-new-files-with-coal-dependencies-tp15877p15926.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Wed Jan 27 10:03:37 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Wed, 27 Jan 2016 16:03:37 +0100
Subject: [OpenSCAD] Trick to getting "cd tests; cmake .;
 make" to run with new files with CGAL dependencies?
In-Reply-To: <1453906266078-15926.post@n5.nabble.com>
References: <6BBBD180-3BEA-4AE2-A375-73D80876C14F@plumb.org>
	<51822E05-2BBF-4A09-A78B-ACC1AE4D0852@kintel.net>
	<CB647CDF-DC71-44C7-A610-01F068200B42@plumb.org>
	<AF500D20-54B4-4062-A3B7-C01EDE7565EC@kintel.net>,
	<1453906266078-15926.post@n5.nabble.com>
Message-ID: <trinity-17c2d975-57df-4516-b771-022570b27375-1453907017867@3capp-gmx-bs54>

Von:?clothbot <andrew at plumb.org>
> --snip--
> 
> src/version_check.h:65:2: warning: #warning CGAL library version is old,
> risking buggy behavior. Please see README.md. Continuing anyway. [-Wcpp]
> 
> --end-snip--
> 
> Is that expected? Is travis-ci currently set up to use an older version of
> CGAL than the cgal 4.6.3 default in
>
Expected yes, wanted no.

Travis-CI still runs on Ubuntu 12.04 which is creating all sorts of issues
and https://github.com/travis-ci/travis-ci/issues/2046 (migration to 14.04)
is still open while 16.04LTS is almost there. Well it's a free service and
hugely useful, still it would make our life much easier if they'd go to
at least 14.04 as this provides a reasonable list of dependencies without
adding external stuff.

I guess one option would be to see if we can get a newer CGAL compiled
for Ubuntu 12.04 and integrate that in the meantime.

ciao,
  Torsten.


From arnholm at arnholm.org  Wed Jan 27 10:11:21 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Wed, 27 Jan 2016 16:11:21 +0100
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <CAEEmnrOSFmmV=pcdCYbtjiJZczu9DyMHz1=izEzidYWy3JKhnQ@mail.gmail.com>
References: <1453894969178-15909.post@n5.nabble.com>
	<CAEEmnrMT5tAGpzjdZnDoXZH9tomby22DtpA3KVy_CJmb-RAshg@mail.gmail.com>
	<CAEEmnrNSoxqs+KwLrpSgvzEOL8wdTGr7=pv0giu-V91vCm+SXg@mail.gmail.com>
	<CAEEmnrNH2Smi0JYLs2CTfiefkJsF4ySpTLTc_c_=GS+Ej_86rA@mail.gmail.com>
	<1453897055299-15913.post@n5.nabble.com>
	<CAEEmnrO1Zuf=8RXKgv0giU5Wt_f9fny3wz8MO4kRZGaLjiMrSw@mail.gmail.com>
	<1453897966715-15915.post@n5.nabble.com>
	<CAEEmnrOuWbtcQ0wJ88ppSZJsP6rHSg5F=KTshb4y2SVObS12AA@mail.gmail.com>
	<1453899228531-15917.post@n5.nabble.com>
	<1453899879082-15918.post@n5.nabble.com>
	<CAEEmnrOSFmmV=pcdCYbtjiJZczu9DyMHz1=izEzidYWy3JKhnQ@mail.gmail.com>
Message-ID: <56A8DE19.9060802@arnholm.org>

On 27. jan. 2016 14:23, nop head wrote:
> It is a sad fact that OpenScad can't import a lot of the STLs it makes
> itself. I think it re-quantises vertices and they collapse. It also
> doesn't detect invalid meshes until you do a CGAL operation on them.

Regardless of how OpenSCAD treats the STL files on import (it probably 
could be improved), it shows that STL is the wrong format for 
intermediate storage of parts when the intention is re-import for assembly.

Why is it the wrong format? Because STL files do not contain any 
topology at all, so when you import the STL for further use in boolean 
operations, the topology must be guessed and reconstructed using unsafe 
coordinate comparisons. It is inefficient and bound to fail in many 
cases, and it does. By 'fail' I mean the reconstructed topology is not 
exactly the same as the original.

A better solution for this purpose would probably be to store one or 
more computed polyhedrons to a file (assuming one takes an approach 
native to OpenSCAD). The idea would be to allow such polyhedron files to 
be re-imported as an alternative to STL. It would guarantee that the 
imported object is the same as the exported object, it would be more 
compact since each vertex is mentioned only once, and it would be faster 
to process because no vertex matching would have to be done. You could 
think of it as ready made 'parts' files that needs to be imported into 
openscad as in the original mouthpiece example, just using a different 
format for intermediate storage.

If you don't want to introduce another format for this purpose, perhaps 
AMF could serve the same purpose, although the present (2015.03-2) 
implementation of AMF export does not seem to separate between 
independent bodies. I just tested it with a model containing several 
bodies and they were written to AMF as a single <object>. For AMF to 
work as intermediate format the way I described, each <object> on AMF 
would have to be a valid polyhedron. AMF is an XML format so you could 
perhaps add a property to the object type to indicate it is indeed a 
polyhedron:
<object id="0" type="polyhedron">

Just my thoughts.

Carsten Arnholm













From andrew at plumb.org  Wed Jan 27 10:25:39 2016
From: andrew at plumb.org (clothbot)
Date: Wed, 27 Jan 2016 08:25:39 -0700 (MST)
Subject: [OpenSCAD] Trick to getting "cd tests; cmake .;
 make" to run with new files with CGAL dependencies?
In-Reply-To: <trinity-17c2d975-57df-4516-b771-022570b27375-1453907017867@3capp-gmx-bs54>
References: <6BBBD180-3BEA-4AE2-A375-73D80876C14F@plumb.org>
	<51822E05-2BBF-4A09-A78B-ACC1AE4D0852@kintel.net>
	<CB647CDF-DC71-44C7-A610-01F068200B42@plumb.org>
	<AF500D20-54B4-4062-A3B7-C01EDE7565EC@kintel.net>
	<1453906266078-15926.post@n5.nabble.com>
	<trinity-17c2d975-57df-4516-b771-022570b27375-1453907017867@3capp-gmx-bs54>
Message-ID: <1453908339247-15929.post@n5.nabble.com>

tp3 wrote
> Von:?clothbot &lt;

> andrew@

> &gt;
>> --snip--
>> 
>> src/version_check.h:65:2: warning: #warning CGAL library version is old,
>> risking buggy behavior. Please see README.md. Continuing anyway. [-Wcpp]
>> 
>> --end-snip--
>> 
>> Is that expected? Is travis-ci currently set up to use an older version
>> of
>> CGAL than the cgal 4.6.3 default in
>>
> Expected yes, wanted no.
> 
> Travis-CI still runs on Ubuntu 12.04 which is creating all sorts of issues
> and https://github.com/travis-ci/travis-ci/issues/2046 (migration to
> 14.04)
> is still open while 16.04LTS is almost there. Well it's a free service and
> hugely useful, still it would make our life much easier if they'd go to
> at least 14.04 as this provides a reasonable list of dependencies without
> adding external stuff.
> 
> I guess one option would be to see if we can get a newer CGAL compiled
> for Ubuntu 12.04 and integrate that in the meantime.
> 
> ciao,
>   Torsten.

Looks like Ubuntu 12.04 is equivalent to Debian Wheezy aka Debian 7:

http://www.cgal.org/FAQ.html#debian_packages

http://askubuntu.com/questions/445487/which-ubuntu-version-is-equivalent-to-debian-squeeze/445496

https://www.debian.org/releases/

...and I see cgal 4.6.1 / deb7 packages listed here:

http://debian.cgal.org/archive/

...so it looks theoretically possible to at least get to 4.6.1.  As always,
devil's in the details.

Andrew.



--
View this message in context: http://forum.openscad.org/Trick-to-getting-cd-tests-cmake-make-to-run-with-new-files-with-coal-dependencies-tp15877p15929.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Wed Jan 27 10:34:18 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 27 Jan 2016 15:34:18 +0000
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <56A8DE19.9060802@arnholm.org>
References: <1453894969178-15909.post@n5.nabble.com>
	<CAEEmnrMT5tAGpzjdZnDoXZH9tomby22DtpA3KVy_CJmb-RAshg@mail.gmail.com>
	<CAEEmnrNSoxqs+KwLrpSgvzEOL8wdTGr7=pv0giu-V91vCm+SXg@mail.gmail.com>
	<CAEEmnrNH2Smi0JYLs2CTfiefkJsF4ySpTLTc_c_=GS+Ej_86rA@mail.gmail.com>
	<1453897055299-15913.post@n5.nabble.com>
	<CAEEmnrO1Zuf=8RXKgv0giU5Wt_f9fny3wz8MO4kRZGaLjiMrSw@mail.gmail.com>
	<1453897966715-15915.post@n5.nabble.com>
	<CAEEmnrOuWbtcQ0wJ88ppSZJsP6rHSg5F=KTshb4y2SVObS12AA@mail.gmail.com>
	<1453899228531-15917.post@n5.nabble.com>
	<1453899879082-15918.post@n5.nabble.com>
	<CAEEmnrOSFmmV=pcdCYbtjiJZczu9DyMHz1=izEzidYWy3JKhnQ@mail.gmail.com>
	<56A8DE19.9060802@arnholm.org>
Message-ID: <CAEEmnrOvg2LOre6NX_pJRsPEQHYw7m7UO=jDO_JddDFC3itf-w@mail.gmail.com>

However deficient STL is, it is still possible to use it to represent 2
manifold meshes unambiguously, although it is very easy to make broken
ones. It is safe to compare vertex values as long as it has been written
correctly. I.e. topologically distinct vertices must have different
numerical values in the file representation and all vertices that are
equivalent must have exactly the same file representation.

The only reasons OpenScad can't import some of its own STLs and a lot of
perfectly good ones from other systems too is because it reduces the
precision of vertices without correcting the topological consequences. I
don't think AMF will help in this respect. You can't simply truncate from
higher precision to float or snap vertices to a grid without running the
risk of corrupting the topology.

On 27 January 2016 at 15:11, Carsten Arnholm <arnholm at arnholm.org> wrote:

> On 27. jan. 2016 14:23, nop head wrote:
>
>> It is a sad fact that OpenScad can't import a lot of the STLs it makes
>> itself. I think it re-quantises vertices and they collapse. It also
>> doesn't detect invalid meshes until you do a CGAL operation on them.
>>
>
> Regardless of how OpenSCAD treats the STL files on import (it probably
> could be improved), it shows that STL is the wrong format for intermediate
> storage of parts when the intention is re-import for assembly.
>
> Why is it the wrong format? Because STL files do not contain any topology
> at all, so when you import the STL for further use in boolean operations,
> the topology must be guessed and reconstructed using unsafe coordinate
> comparisons. It is inefficient and bound to fail in many cases, and it
> does. By 'fail' I mean the reconstructed topology is not exactly the same
> as the original.
>
> A better solution for this purpose would probably be to store one or more
> computed polyhedrons to a file (assuming one takes an approach native to
> OpenSCAD). The idea would be to allow such polyhedron files to be
> re-imported as an alternative to STL. It would guarantee that the imported
> object is the same as the exported object, it would be more compact since
> each vertex is mentioned only once, and it would be faster to process
> because no vertex matching would have to be done. You could think of it as
> ready made 'parts' files that needs to be imported into openscad as in the
> original mouthpiece example, just using a different format for intermediate
> storage.
>
> If you don't want to introduce another format for this purpose, perhaps
> AMF could serve the same purpose, although the present (2015.03-2)
> implementation of AMF export does not seem to separate between independent
> bodies. I just tested it with a model containing several bodies and they
> were written to AMF as a single <object>. For AMF to work as intermediate
> format the way I described, each <object> on AMF would have to be a valid
> polyhedron. AMF is an XML format so you could perhaps add a property to the
> object type to indicate it is indeed a polyhedron:
> <object id="0" type="polyhedron">
>
> Just my thoughts.
>
> Carsten Arnholm
>
>
>
>
>
>
>
>
>
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160127/f75f4b0b/attachment.html>

From db5765 at outlook.com  Wed Jan 27 10:51:31 2016
From: db5765 at outlook.com (Trygon)
Date: Wed, 27 Jan 2016 08:51:31 -0700 (MST)
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <56A8D356.7040608@bornhaupt.de>
References: <1453467556876-15783.post@n5.nabble.com>
	<56A23A6A.9020800@bornhaupt.de>
	<1453547961408-15833.post@n5.nabble.com>
	<1453647477135-15871.post@n5.nabble.com>
	<1453902151409-15921.post@n5.nabble.com>
	<56A8D356.7040608@bornhaupt.de>
Message-ID: <1453909891162-15931.post@n5.nabble.com>

Setting the pixel format to yuv420p does ensure better compatibility with
older video players, I specify the libx264 encoder first before requesting a
particular pixel format from it:
-c:v libx264 -pix_fmt yuv420p
I am not sure if this is necessary, but it avoids FFmpeg guessing wrongly.

-r sets the output frame rate
-framerate sets the input frame rate
I was told that it is better to set the input frame rate with images (since
there is no frame rate information, unlike an input video) and the output
will then default to the same (unless you also specify -r !)

Cheers,
Trygon




--
View this message in context: http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-tp15783p15931.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Wed Jan 27 10:54:50 2016
From: marius at kintel.net (Marius Kintel)
Date: Wed, 27 Jan 2016 10:54:50 -0500
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <CAEEmnrOvg2LOre6NX_pJRsPEQHYw7m7UO=jDO_JddDFC3itf-w@mail.gmail.com>
References: <1453894969178-15909.post@n5.nabble.com>
	<CAEEmnrMT5tAGpzjdZnDoXZH9tomby22DtpA3KVy_CJmb-RAshg@mail.gmail.com>
	<CAEEmnrNSoxqs+KwLrpSgvzEOL8wdTGr7=pv0giu-V91vCm+SXg@mail.gmail.com>
	<CAEEmnrNH2Smi0JYLs2CTfiefkJsF4ySpTLTc_c_=GS+Ej_86rA@mail.gmail.com>
	<1453897055299-15913.post@n5.nabble.com>
	<CAEEmnrO1Zuf=8RXKgv0giU5Wt_f9fny3wz8MO4kRZGaLjiMrSw@mail.gmail.com>
	<1453897966715-15915.post@n5.nabble.com>
	<CAEEmnrOuWbtcQ0wJ88ppSZJsP6rHSg5F=KTshb4y2SVObS12AA@mail.gmail.com>
	<1453899228531-15917.post@n5.nabble.com>
	<1453899879082-15918.post@n5.nabble.com>
	<CAEEmnrOSFmmV=pcdCYbtjiJZczu9DyMHz1=izEzidYWy3JKhnQ@mail.gmail.com>
	<56A8DE19.9060802@arnholm.org>
	<CAEEmnrOvg2LOre6NX_pJRsPEQHYw7m7UO=jDO_JddDFC3itf-w@mail.gmail.com>
Message-ID: <43A55BF6-4529-401F-8BAA-78F6953771AF@kintel.net>

> On Jan 27, 2016, at 10:34 AM, nop head <nop.head at gmail.com> wrote:
> 
> The only reasons OpenScad can't import some of its own STLs and a lot of perfectly good ones from other systems too is because it reduces the precision of vertices without correcting the topological consequences.

In addition: Zero area triangles is a perfectly valid in a manifold topology, but CGAL cannot handle that since it computes normal vectors in isolation and zero area gives no useful normal vector.

 -Marius



From marius at kintel.net  Wed Jan 27 10:57:45 2016
From: marius at kintel.net (Marius Kintel)
Date: Wed, 27 Jan 2016 10:57:45 -0500
Subject: [OpenSCAD] Trick to getting "cd tests; cmake .;
	make" to run with new files with CGAL dependencies?
In-Reply-To: <1453906266078-15926.post@n5.nabble.com>
References: <6BBBD180-3BEA-4AE2-A375-73D80876C14F@plumb.org>
	<51822E05-2BBF-4A09-A78B-ACC1AE4D0852@kintel.net>
	<CB647CDF-DC71-44C7-A610-01F068200B42@plumb.org>
	<AF500D20-54B4-4062-A3B7-C01EDE7565EC@kintel.net>
	<1453906266078-15926.post@n5.nabble.com>
Message-ID: <E83BDC85-A00E-4187-9456-355BC2C04E8F@kintel.net>

> On Jan 27, 2016, at 09:51 AM, clothbot <andrew at plumb.org> wrote:
> 
> On the original matter w.r.t not being able to run tests, I haven't figured
> it out yet, but I did go through the motions of completely uninstalling
> macports, then selectively adding 'ports' back until I could
> 'scripts/macosx-build-dependencies.sh; qmake openscad.pro; make' cleanly
> again. I don't have any macports compiler variants installed anymore to
> confuse the issue.
> 
> This evening I'll try stepping through the cmake-generated
> Makefiles+deps+settings and compare/contrast with qmake-generated Makefile.
> 
Also keep in mind that both qmake and cmake caches some configuration info. That may mess something up.
..and if you?re on Mac, remember to 'source setenv_mac-qt5.sh' to point the build system to yourself-built dependencies.

If you do this, external software shouldn?t influence your build, but there might be bugs. It?s just hard to reproduce without access to the computer in question..

 -Marius



From arnholm at arnholm.org  Wed Jan 27 11:00:56 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Wed, 27 Jan 2016 17:00:56 +0100
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <CAEEmnrOvg2LOre6NX_pJRsPEQHYw7m7UO=jDO_JddDFC3itf-w@mail.gmail.com>
References: <1453894969178-15909.post@n5.nabble.com>
	<CAEEmnrMT5tAGpzjdZnDoXZH9tomby22DtpA3KVy_CJmb-RAshg@mail.gmail.com>
	<CAEEmnrNSoxqs+KwLrpSgvzEOL8wdTGr7=pv0giu-V91vCm+SXg@mail.gmail.com>
	<CAEEmnrNH2Smi0JYLs2CTfiefkJsF4ySpTLTc_c_=GS+Ej_86rA@mail.gmail.com>
	<1453897055299-15913.post@n5.nabble.com>
	<CAEEmnrO1Zuf=8RXKgv0giU5Wt_f9fny3wz8MO4kRZGaLjiMrSw@mail.gmail.com>
	<1453897966715-15915.post@n5.nabble.com>
	<CAEEmnrOuWbtcQ0wJ88ppSZJsP6rHSg5F=KTshb4y2SVObS12AA@mail.gmail.com>
	<1453899228531-15917.post@n5.nabble.com>
	<1453899879082-15918.post@n5.nabble.com>
	<CAEEmnrOSFmmV=pcdCYbtjiJZczu9DyMHz1=izEzidYWy3JKhnQ@mail.gmail.com>
	<56A8DE19.9060802@arnholm.org>
	<CAEEmnrOvg2LOre6NX_pJRsPEQHYw7m7UO=jDO_JddDFC3itf-w@mail.gmail.com>
Message-ID: <56A8E9B8.3070600@arnholm.org>

On 27. jan. 2016 16:34, nop head wrote:
> However deficient STL is, it is still possible to use it to represent 2
> manifold meshes unambiguously, although it is very easy to make broken
> ones. It is safe to compare vertex values as long as it has been written
> correctly. I.e. topologically distinct vertices must have different
> numerical values in the file representation and all vertices that are
> equivalent must have exactly the same file representation.
>
> The only reasons OpenScad can't import some of its own STLs and a lot of
> perfectly good ones from other systems too is because it reduces the
> precision of vertices without correcting the topological consequences. I
> don't think AMF will help in this respect. You can't simply truncate
> from higher precision to float or snap vertices to a grid without
> running the risk of corrupting the topology.

It appears I didn't manage to communicate properly. I have been doing 
similar stuff in other areas and my experience is that a coordinate 
based approach will often fail in preserving the original topology. 
Maybe you are unlucky and end up with a valid topology describing 
something different than the original intent, or alternatively it 
becomes invalid. Wrong in both cases.

Yes, topologically distinct vertices must have different numerical 
values when using STL. But since vertices are repeated you don't have 
any guarantee that what should be one and the same vertex ends up with 
numerically identical values in all repetitions. There could be many 
reasons for this and you have to apply some tolerance on import, 
creating its own set of issues.

Another thing is that there is no guarantee that an STL file even had a 
valid topology in the first place, i.e. face corners ending between 
vertices of another face. Or you might end up in that situation because 
the wrong tolerance approach was applied.

My point is that this is really impossible to get right in all cases and 
the solution is not to try, because there are simple and safe 
alternatives which store the topology. AMF was just a suggestion since 
it already exists in OpenSCAD, a native polyhedron format would perhaps 
be better for openscad.

No, coordinate precision is irrelevant wrt. restoring the topology when 
you represent the vertices separately as in AMF and other formats. The 
topology is explicitly stated separately from the vertices and no 
guessing/interpretation is required.

Carsten Arnholm
http://arnholm.org/





From nop.head at gmail.com  Wed Jan 27 11:12:06 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 27 Jan 2016 16:12:06 +0000
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <43A55BF6-4529-401F-8BAA-78F6953771AF@kintel.net>
References: <1453894969178-15909.post@n5.nabble.com>
	<CAEEmnrMT5tAGpzjdZnDoXZH9tomby22DtpA3KVy_CJmb-RAshg@mail.gmail.com>
	<CAEEmnrNSoxqs+KwLrpSgvzEOL8wdTGr7=pv0giu-V91vCm+SXg@mail.gmail.com>
	<CAEEmnrNH2Smi0JYLs2CTfiefkJsF4ySpTLTc_c_=GS+Ej_86rA@mail.gmail.com>
	<1453897055299-15913.post@n5.nabble.com>
	<CAEEmnrO1Zuf=8RXKgv0giU5Wt_f9fny3wz8MO4kRZGaLjiMrSw@mail.gmail.com>
	<1453897966715-15915.post@n5.nabble.com>
	<CAEEmnrOuWbtcQ0wJ88ppSZJsP6rHSg5F=KTshb4y2SVObS12AA@mail.gmail.com>
	<1453899228531-15917.post@n5.nabble.com>
	<1453899879082-15918.post@n5.nabble.com>
	<CAEEmnrOSFmmV=pcdCYbtjiJZczu9DyMHz1=izEzidYWy3JKhnQ@mail.gmail.com>
	<56A8DE19.9060802@arnholm.org>
	<CAEEmnrOvg2LOre6NX_pJRsPEQHYw7m7UO=jDO_JddDFC3itf-w@mail.gmail.com>
	<43A55BF6-4529-401F-8BAA-78F6953771AF@kintel.net>
Message-ID: <CAEEmnrNftE62HncKJWZri3eT-kC4QuxuefCBsK_jjJixojrmqw@mail.gmail.com>

Yes they are still manifold but they cause other programs problems for the
same reason so should be removed.

On 27 January 2016 at 15:54, Marius Kintel <marius at kintel.net> wrote:

> > On Jan 27, 2016, at 10:34 AM, nop head <nop.head at gmail.com> wrote:
> >
> > The only reasons OpenScad can't import some of its own STLs and a lot of
> perfectly good ones from other systems too is because it reduces the
> precision of vertices without correcting the topological consequences.
>
> In addition: Zero area triangles is a perfectly valid in a manifold
> topology, but CGAL cannot handle that since it computes normal vectors in
> isolation and zero area gives no useful normal vector.
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160127/486c1b2d/attachment.html>

From nop.head at gmail.com  Wed Jan 27 11:18:27 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 27 Jan 2016 16:18:27 +0000
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <56A8E9B8.3070600@arnholm.org>
References: <1453894969178-15909.post@n5.nabble.com>
	<CAEEmnrMT5tAGpzjdZnDoXZH9tomby22DtpA3KVy_CJmb-RAshg@mail.gmail.com>
	<CAEEmnrNSoxqs+KwLrpSgvzEOL8wdTGr7=pv0giu-V91vCm+SXg@mail.gmail.com>
	<CAEEmnrNH2Smi0JYLs2CTfiefkJsF4ySpTLTc_c_=GS+Ej_86rA@mail.gmail.com>
	<1453897055299-15913.post@n5.nabble.com>
	<CAEEmnrO1Zuf=8RXKgv0giU5Wt_f9fny3wz8MO4kRZGaLjiMrSw@mail.gmail.com>
	<1453897966715-15915.post@n5.nabble.com>
	<CAEEmnrOuWbtcQ0wJ88ppSZJsP6rHSg5F=KTshb4y2SVObS12AA@mail.gmail.com>
	<1453899228531-15917.post@n5.nabble.com>
	<1453899879082-15918.post@n5.nabble.com>
	<CAEEmnrOSFmmV=pcdCYbtjiJZczu9DyMHz1=izEzidYWy3JKhnQ@mail.gmail.com>
	<56A8DE19.9060802@arnholm.org>
	<CAEEmnrOvg2LOre6NX_pJRsPEQHYw7m7UO=jDO_JddDFC3itf-w@mail.gmail.com>
	<56A8E9B8.3070600@arnholm.org>
Message-ID: <CAEEmnrOFXXMXz2j0HR4MFNMDmJFKz2WWhSC_qnx5aYxpgbS5QQ@mail.gmail.com>

> Yes, topologically distinct vertices must have different numerical values
> when using STL. But since vertices are repeated you don't have any
> guarantee that what should be one and the same vertex ends up with
> numerically identical values in all repetitions.


At the time OpenScad writes the STL it knows the topology, so there is no
reason why it can't write every repetition of a vertex with an identical
numerical value and ensure all non identical values are distinct.

Yes you can't guaranteed an STL from another program is valid but can
guarantee to write valid ones and be able to read ones that are valid.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160127/0de22286/attachment.html>

From andrew at plumb.org  Wed Jan 27 11:19:25 2016
From: andrew at plumb.org (clothbot)
Date: Wed, 27 Jan 2016 09:19:25 -0700 (MST)
Subject: [OpenSCAD] Trick to getting "cd tests; cmake .;
 make" to run with new files with CGAL dependencies?
In-Reply-To: <E83BDC85-A00E-4187-9456-355BC2C04E8F@kintel.net>
References: <6BBBD180-3BEA-4AE2-A375-73D80876C14F@plumb.org>
	<51822E05-2BBF-4A09-A78B-ACC1AE4D0852@kintel.net>
	<CB647CDF-DC71-44C7-A610-01F068200B42@plumb.org>
	<AF500D20-54B4-4062-A3B7-C01EDE7565EC@kintel.net>
	<1453906266078-15926.post@n5.nabble.com>
	<E83BDC85-A00E-4187-9456-355BC2C04E8F@kintel.net>
Message-ID: <1453911565875-15936.post@n5.nabble.com>

kintel wrote
>> On Jan 27, 2016, at 09:51 AM, clothbot &lt;

> andrew@

> &gt; wrote:
>> 
>> On the original matter w.r.t not being able to run tests, I haven't
>> figured
>> it out yet, but I did go through the motions of completely uninstalling
>> macports, then selectively adding 'ports' back until I could
>> 'scripts/macosx-build-dependencies.sh; qmake openscad.pro; make' cleanly
>> again. I don't have any macports compiler variants installed anymore to
>> confuse the issue.
>> 
>> This evening I'll try stepping through the cmake-generated
>> Makefiles+deps+settings and compare/contrast with qmake-generated
>> Makefile.
>> 
> Also keep in mind that both qmake and cmake caches some configuration
> info. That may mess something up.
> ..and if you?re on Mac, remember to 'source setenv_mac-qt5.sh' to point
> the build system to yourself-built dependencies.
> 
> If you do this, external software shouldn?t influence your build, but
> there might be bugs. It?s just hard to reproduce without access to the
> computer in question..
> 
>  -Marius

Yeah, agreed on the limitations without console access.  I'm sharing the
update more for the searchable archive than anything else, in case someone
runs into the same/similar issues in future. :-)

I have things sufficiently parred down that the initial 'qmake;make' won't
succeed without explicitly sourcing setenv_mac-qt5.sh, and am in the habit
of shutting down my Terminal.app periodically to flush out any memory it may
have accumulated.

...It could be something as simple as needing to tweak
https://github.com/clothbot/openscad/blob/read_issue1324/tests/cgalcachetest.cc
with some extra header additions to properly resolve the new CGAL features
I'm using. To be determined...

Andrew.



--
View this message in context: http://forum.openscad.org/Trick-to-getting-cd-tests-cmake-make-to-run-with-new-files-with-coal-dependencies-tp15877p15936.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Wed Jan 27 11:23:41 2016
From: marius at kintel.net (Marius Kintel)
Date: Wed, 27 Jan 2016 11:23:41 -0500
Subject: [OpenSCAD] Trick to getting "cd tests; cmake .;
	make" to run with new files with CGAL dependencies?
In-Reply-To: <1453911565875-15936.post@n5.nabble.com>
References: <6BBBD180-3BEA-4AE2-A375-73D80876C14F@plumb.org>
	<51822E05-2BBF-4A09-A78B-ACC1AE4D0852@kintel.net>
	<CB647CDF-DC71-44C7-A610-01F068200B42@plumb.org>
	<AF500D20-54B4-4062-A3B7-C01EDE7565EC@kintel.net>
	<1453906266078-15926.post@n5.nabble.com>
	<E83BDC85-A00E-4187-9456-355BC2C04E8F@kintel.net>
	<1453911565875-15936.post@n5.nabble.com>
Message-ID: <C7293CB1-6077-4CB9-A157-F07273490634@kintel.net>

> On Jan 27, 2016, at 11:19 AM, clothbot <andrew at plumb.org> wrote:
> 
> I have things sufficiently parred down that the initial 'qmake;make' won't
> succeed without explicitly sourcing setenv_mac-qt5.sh, and am in the habit
> of shutting down my Terminal.app periodically to flush out any memory it may
> have accumulated.
> 
Also be adviced that we?re currently in the process of merging a bunch of refactoring to master, including patches to both OpenSCAD and the build system to move to C++11. That may trip things up short-term, but will make things better longer term :)

 -Marius



From arnholm at arnholm.org  Wed Jan 27 11:23:46 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Wed, 27 Jan 2016 17:23:46 +0100
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <CAEEmnrOFXXMXz2j0HR4MFNMDmJFKz2WWhSC_qnx5aYxpgbS5QQ@mail.gmail.com>
References: <1453894969178-15909.post@n5.nabble.com>
	<CAEEmnrMT5tAGpzjdZnDoXZH9tomby22DtpA3KVy_CJmb-RAshg@mail.gmail.com>
	<CAEEmnrNSoxqs+KwLrpSgvzEOL8wdTGr7=pv0giu-V91vCm+SXg@mail.gmail.com>
	<CAEEmnrNH2Smi0JYLs2CTfiefkJsF4ySpTLTc_c_=GS+Ej_86rA@mail.gmail.com>
	<1453897055299-15913.post@n5.nabble.com>
	<CAEEmnrO1Zuf=8RXKgv0giU5Wt_f9fny3wz8MO4kRZGaLjiMrSw@mail.gmail.com>
	<1453897966715-15915.post@n5.nabble.com>
	<CAEEmnrOuWbtcQ0wJ88ppSZJsP6rHSg5F=KTshb4y2SVObS12AA@mail.gmail.com>
	<1453899228531-15917.post@n5.nabble.com>
	<1453899879082-15918.post@n5.nabble.com>
	<CAEEmnrOSFmmV=pcdCYbtjiJZczu9DyMHz1=izEzidYWy3JKhnQ@mail.gmail.com>
	<56A8DE19.9060802@arnholm.org>
	<CAEEmnrOvg2LOre6NX_pJRsPEQHYw7m7UO=jDO_JddDFC3itf-w@mail.gmail.com>
	<56A8E9B8.3070600@arnholm.org>
	<CAEEmnrOFXXMXz2j0HR4MFNMDmJFKz2WWhSC_qnx5aYxpgbS5QQ@mail.gmail.com>
Message-ID: <56A8EF12.5040101@arnholm.org>

On 27. jan. 2016 17:18, nop head wrote:
> Yes you can't guaranteed an STL from another program is valid but can
> guarantee to write valid ones and be able to read ones that are valid.

 From what I said before it is clear this is not a sufficient requirement.

Anyway, I just shared some thoughts, you are of course free to ignore them.

Carsten Arnholm
http://arnholm.org



From johangjonker at zonnet.nl  Wed Jan 27 11:37:22 2016
From: johangjonker at zonnet.nl (Johan Jonker)
Date: Wed, 27 Jan 2016 09:37:22 -0700 (MST)
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <1453894969178-15909.post@n5.nabble.com>
References: <1453894969178-15909.post@n5.nabble.com>
Message-ID: <1453912642832-15940.post@n5.nabble.com>

thanks for discussing my problem. 
It is still not solved. I get the idea that I am doing things that openscad
is not suitable for?

Mayby good to explain what I am doing.
<http://forum.openscad.org/file/n15940/mp.jpg> 

The picture shows the mouthpiece outside.
The mouthpiece is build in the following parts:
- the tenon, the cylindrical part, in the pictures shown on the top
- - this is simply made by a stack of cylinders
- the body, this is a cylinder for tenon to top of which the diameter is a
complex function. So I made this using Nspline and sweep functions. This has
to be quite accurate, so I use 40 steps for the Nspline and 120 for the
circles.
-- the flat part on the left picture is called the table. The last part of
it is curved. 
I made several version of this one. The previous one was a separte object
that I subtracted from the body.
-- the curve top on the right pciture is called the beak. 
I made it from two cylinders that are substracted using the difference
functions. Then rotated and then with the difference function cut from the
body.

It works using F5 but takes quite long when I increase the accuracy.
It often refused to render using F6 giving all the known fault codes.
I can use correction using Meshlab but they don't work always.

So the question is: is Openscad the right tool to design this?



--
View this message in context: http://forum.openscad.org/CGAL-errors-when-combining-two-correct-STL-s-tp15909p15940.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jon at jonbondy.com  Wed Jan 27 11:48:01 2016
From: jon at jonbondy.com (jon)
Date: Wed, 27 Jan 2016 11:48:01 -0500
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <1453912642832-15940.post@n5.nabble.com>
References: <1453894969178-15909.post@n5.nabble.com>
	<1453912642832-15940.post@n5.nabble.com>
Message-ID: <56A8F4C1.80307@jonbondy.com>

Have you considered creating these 3 parts as a single OpenSCAD 
operation, rather than as 3 separate ones?  Is the issue that they each 
take a long time to calculate, so you are trying to pre-compute some of 
them to save time?  Perhaps we can help you optimize some of the code so 
that re-calculating each one is more tolerable.

Jon

On 1/27/2016 11:37 AM, Johan Jonker wrote:
> thanks for discussing my problem.
> It is still not solved. I get the idea that I am doing things that openscad
> is not suitable for?
>
> Mayby good to explain what I am doing.
> <http://forum.openscad.org/file/n15940/mp.jpg>
>
> The picture shows the mouthpiece outside.
> The mouthpiece is build in the following parts:
> - the tenon, the cylindrical part, in the pictures shown on the top
> - - this is simply made by a stack of cylinders
> - the body, this is a cylinder for tenon to top of which the diameter is a
> complex function. So I made this using Nspline and sweep functions. This has
> to be quite accurate, so I use 40 steps for the Nspline and 120 for the
> circles.
> -- the flat part on the left picture is called the table. The last part of
> it is curved.
> I made several version of this one. The previous one was a separte object
> that I subtracted from the body.
> -- the curve top on the right pciture is called the beak.
> I made it from two cylinders that are substracted using the difference
> functions. Then rotated and then with the difference function cut from the
> body.
>
> It works using F5 but takes quite long when I increase the accuracy.
> It often refused to render using F6 giving all the known fault codes.
> I can use correction using Meshlab but they don't work always.
>
> So the question is: is Openscad the right tool to design this?
>
>
>
> --
> View this message in context: http://forum.openscad.org/CGAL-errors-when-combining-two-correct-STL-s-tp15909p15940.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
> -----
> No virus found in this message.
> Checked by AVG - www.avg.com
> Version: 2016.0.7357 / Virus Database: 4522/11495 - Release Date: 01/27/16
>
>



From nop.head at gmail.com  Wed Jan 27 11:56:13 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 27 Jan 2016 16:56:13 +0000
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <1453912642832-15940.post@n5.nabble.com>
References: <1453894969178-15909.post@n5.nabble.com>
	<1453912642832-15940.post@n5.nabble.com>
Message-ID: <CAEEmnrM5NOvdAZkYp=bG6A506sz3c-_V5es9BwXVkZSy6XDR+g@mail.gmail.com>

It isn't a good tool for reading STL files. If you create all the geometry
in OpenScad and then write an STL it should be fine.

On 27 January 2016 at 16:37, Johan Jonker <johangjonker at zonnet.nl> wrote:

> thanks for discussing my problem.
> It is still not solved. I get the idea that I am doing things that openscad
> is not suitable for?
>
> Mayby good to explain what I am doing.
> <http://forum.openscad.org/file/n15940/mp.jpg>
>
> The picture shows the mouthpiece outside.
> The mouthpiece is build in the following parts:
> - the tenon, the cylindrical part, in the pictures shown on the top
> - - this is simply made by a stack of cylinders
> - the body, this is a cylinder for tenon to top of which the diameter is a
> complex function. So I made this using Nspline and sweep functions. This
> has
> to be quite accurate, so I use 40 steps for the Nspline and 120 for the
> circles.
> -- the flat part on the left picture is called the table. The last part of
> it is curved.
> I made several version of this one. The previous one was a separte object
> that I subtracted from the body.
> -- the curve top on the right pciture is called the beak.
> I made it from two cylinders that are substracted using the difference
> functions. Then rotated and then with the difference function cut from the
> body.
>
> It works using F5 but takes quite long when I increase the accuracy.
> It often refused to render using F6 giving all the known fault codes.
> I can use correction using Meshlab but they don't work always.
>
> So the question is: is Openscad the right tool to design this?
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/CGAL-errors-when-combining-two-correct-STL-s-tp15909p15940.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160127/cca41ec3/attachment.html>

From marius at kintel.net  Wed Jan 27 12:02:34 2016
From: marius at kintel.net (Marius Kintel)
Date: Wed, 27 Jan 2016 12:02:34 -0500
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <CAEEmnrM5NOvdAZkYp=bG6A506sz3c-_V5es9BwXVkZSy6XDR+g@mail.gmail.com>
References: <1453894969178-15909.post@n5.nabble.com>
	<1453912642832-15940.post@n5.nabble.com>
	<CAEEmnrM5NOvdAZkYp=bG6A506sz3c-_V5es9BwXVkZSy6XDR+g@mail.gmail.com>
Message-ID: <AC19264A-7217-47B9-A375-A1F655F79DB6@kintel.net>

I agree with this.
Also, we?ll eventually get this fixed, so the future will be brighter :)

 -Marius

> On Jan 27, 2016, at 11:56 AM, nop head <nop.head at gmail.com> wrote:
> 
> It isn't a good tool for reading STL files. If you create all the geometry in OpenScad and then write an STL it should be fine.
> 



From andrew at plumb.org  Wed Jan 27 12:18:18 2016
From: andrew at plumb.org (clothbot)
Date: Wed, 27 Jan 2016 10:18:18 -0700 (MST)
Subject: [OpenSCAD] Trick to getting "cd tests; cmake .;
 make" to run with new files with CGAL dependencies?
In-Reply-To: <C7293CB1-6077-4CB9-A157-F07273490634@kintel.net>
References: <6BBBD180-3BEA-4AE2-A375-73D80876C14F@plumb.org>
	<51822E05-2BBF-4A09-A78B-ACC1AE4D0852@kintel.net>
	<CB647CDF-DC71-44C7-A610-01F068200B42@plumb.org>
	<AF500D20-54B4-4062-A3B7-C01EDE7565EC@kintel.net>
	<1453906266078-15926.post@n5.nabble.com>
	<E83BDC85-A00E-4187-9456-355BC2C04E8F@kintel.net>
	<1453911565875-15936.post@n5.nabble.com>
	<C7293CB1-6077-4CB9-A157-F07273490634@kintel.net>
Message-ID: <1453915098560-15944.post@n5.nabble.com>

kintel wrote
> Also be adviced that we?re currently in the process of merging a bunch of
> refactoring to master, including patches to both OpenSCAD and the build
> system to move to C++11. That may trip things up short-term, but will make
> things better longer term :)

Yeah, I noticed those travis-ci runs failing too. ;-)

It's been an interesting exercise, giving me ideas for how to pull more
mind-bending CGAL features into OpenSCAD, e.g. Alpha shapes:
http://doc.cgal.org/latest/Alpha_shapes_3/index.html#Chapter_3D_Alpha_Shapes

Andrew.



--
View this message in context: http://forum.openscad.org/Trick-to-getting-cd-tests-cmake-make-to-run-with-new-files-with-coal-dependencies-tp15877p15944.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From johangjonker at zonnet.nl  Wed Jan 27 12:51:24 2016
From: johangjonker at zonnet.nl (Johan Jonker)
Date: Wed, 27 Jan 2016 10:51:24 -0700 (MST)
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <1453912642832-15940.post@n5.nabble.com>
References: <1453894969178-15909.post@n5.nabble.com>
	<1453912642832-15940.post@n5.nabble.com>
Message-ID: <1453917084457-15945.post@n5.nabble.com>

I tried to do the outside in one STL. But that results in errors.

It would be great when you can help me. But it is quite complex.
Here are the main files. I suppose the libraries are known.

mp_parameters.scad
<http://forum.openscad.org/file/n15945/mp_parameters.scad>  
mouthpiece_outside_v11.scad
<http://forum.openscad.org/file/n15945/mouthpiece_outside_v11.scad>  



--
View this message in context: http://forum.openscad.org/CGAL-errors-when-combining-two-correct-STL-s-tp15909p15945.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From johangjonker at zonnet.nl  Wed Jan 27 14:26:43 2016
From: johangjonker at zonnet.nl (Johan Jonker)
Date: Wed, 27 Jan 2016 12:26:43 -0700 (MST)
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <1453917084457-15945.post@n5.nabble.com>
References: <1453894969178-15909.post@n5.nabble.com>
	<1453912642832-15940.post@n5.nabble.com>
	<1453917084457-15945.post@n5.nabble.com>
Message-ID: <1453922803515-15946.post@n5.nabble.com>

In the program I tried to reduce calculation time by making the shapes that
are subtracted from the main body as small as possible. In an earlier
version the beak shape were two cylinders and I modified that into on
quarter of these. That appears to be a more complex function.
I put it back to the cylindrical version again. Now this part renders with
F6 and $fn=80.
<http://forum.openscad.org/file/n15946/mp.jpg> 

Now I'll try to add the inside in the same scad.



--
View this message in context: http://forum.openscad.org/CGAL-errors-when-combining-two-correct-STL-s-tp15909p15946.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From fractorr at gmail.com  Wed Jan 27 14:48:23 2016
From: fractorr at gmail.com (fractorr)
Date: Wed, 27 Jan 2016 12:48:23 -0700 (MST)
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <1453909891162-15931.post@n5.nabble.com>
References: <1453467556876-15783.post@n5.nabble.com>
	<56A23A6A.9020800@bornhaupt.de>
	<1453547961408-15833.post@n5.nabble.com>
	<1453647477135-15871.post@n5.nabble.com>
	<1453902151409-15921.post@n5.nabble.com>
	<56A8D356.7040608@bornhaupt.de>
	<1453909891162-15931.post@n5.nabble.com>
Message-ID: <1453924103516-15947.post@n5.nabble.com>

FFMPeg is pretty cool, I was able to create a video from several animations
(25) captured from Open SCAD and stitch them altogether to make one video. 
Not nearly as bad ass as your video but it worked well for what I was after.




--
View this message in context: http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-tp15783p15947.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rl.ward at bigpond.com  Wed Jan 27 15:00:05 2016
From: rl.ward at bigpond.com (Rob Ward)
Date: Thu, 28 Jan 2016 07:00:05 +1100
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <56A8DE19.9060802@arnholm.org>
References: <1453894969178-15909.post@n5.nabble.com>
	<CAEEmnrMT5tAGpzjdZnDoXZH9tomby22DtpA3KVy_CJmb-RAshg@mail.gmail.com>
	<CAEEmnrNSoxqs+KwLrpSgvzEOL8wdTGr7=pv0giu-V91vCm+SXg@mail.gmail.com>
	<CAEEmnrNH2Smi0JYLs2CTfiefkJsF4ySpTLTc_c_=GS+Ej_86rA@mail.gmail.com>
	<1453897055299-15913.post@n5.nabble.com>
	<CAEEmnrO1Zuf=8RXKgv0giU5Wt_f9fny3wz8MO4kRZGaLjiMrSw@mail.gmail.com>
	<1453897966715-15915.post@n5.nabble.com>
	<CAEEmnrOuWbtcQ0wJ88ppSZJsP6rHSg5F=KTshb4y2SVObS12AA@mail.gmail.com>
	<1453899228531-15917.post@n5.nabble.com>
	<1453899879082-15918.post@n5.nabble.com>
	<CAEEmnrOSFmmV=pcdCYbtjiJZczu9DyMHz1=izEzidYWy3JKhnQ@mail.gmail.com>
	<56A8DE19.9060802@arnholm.org>
Message-ID: <3C72B57B-5823-464E-8E26-435C49358889@bigpond.com>

Isn't this a very good argument for the idea of an openSCAD format cache of objects, and the ability to programatically  load/save individuals shapes from a list of shapes? These two concepts have been discussed at length in other threads and deserve consideration as a valuable in house feature if not of universal use to the 3-D community as a whole? Or have I oversimplified it all?

On 28 January 2016 2:11:21 AM AEDT, Carsten Arnholm <arnholm at arnholm.org> wrote:
>On 27. jan. 2016 14:23, nop head wrote:
>> It is a sad fact that OpenScad can't import a lot of the STLs it
>makes
>> itself. I think it re-quantises vertices and they collapse. It also
>> doesn't detect invalid meshes until you do a CGAL operation on them.
>
>Regardless of how OpenSCAD treats the STL files on import (it probably 
>could be improved), it shows that STL is the wrong format for 
>intermediate storage of parts when the intention is re-import for
>assembly.
>
>Why is it the wrong format? Because STL files do not contain any 
>topology at all, so when you import the STL for further use in boolean 
>operations, the topology must be guessed and reconstructed using unsafe
>
>coordinate comparisons. It is inefficient and bound to fail in many 
>cases, and it does. By 'fail' I mean the reconstructed topology is not 
>exactly the same as the original.
>
>A better solution for this purpose would probably be to store one or 
>more computed polyhedrons to a file (assuming one takes an approach 
>native to OpenSCAD). The idea would be to allow such polyhedron files
>to 
>be re-imported as an alternative to STL. It would guarantee that the 
>imported object is the same as the exported object, it would be more 
>compact since each vertex is mentioned only once, and it would be
>faster 
>to process because no vertex matching would have to be done. You could 
>think of it as ready made 'parts' files that needs to be imported into 
>openscad as in the original mouthpiece example, just using a different 
>format for intermediate storage.
>
>If you don't want to introduce another format for this purpose, perhaps
>
>AMF could serve the same purpose, although the present (2015.03-2) 
>implementation of AMF export does not seem to separate between 
>independent bodies. I just tested it with a model containing several 
>bodies and they were written to AMF as a single <object>. For AMF to 
>work as intermediate format the way I described, each <object> on AMF 
>would have to be a valid polyhedron. AMF is an XML format so you could 
>perhaps add a property to the object type to indicate it is indeed a 
>polyhedron:
><object id="0" type="polyhedron">
>
>Just my thoughts.
>
>Carsten Arnholm
>
>
>
>
>
>
>
>
>
>
>
>
>_______________________________________________
>OpenSCAD mailing list
>Discuss at lists.openscad.org
>http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

-- 
Sent from my Android device with K-9 Mail. Please excuse my brevity.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160128/7166a9d7/attachment.html>

From johangjonker at zonnet.nl  Wed Jan 27 15:05:30 2016
From: johangjonker at zonnet.nl (Johan Jonker)
Date: Wed, 27 Jan 2016 13:05:30 -0700 (MST)
Subject: [OpenSCAD] CGAL errors when combining two correct STL's
In-Reply-To: <1453922803515-15946.post@n5.nabble.com>
References: <1453894969178-15909.post@n5.nabble.com>
	<1453912642832-15940.post@n5.nabble.com>
	<1453917084457-15945.post@n5.nabble.com>
	<1453922803515-15946.post@n5.nabble.com>
Message-ID: <1453925130582-15949.post@n5.nabble.com>

Yes, rendered with f6 and $fn=120 in 3 minutes.
Thanks for helping me out.
Conclusion: better a simple structure than a smalll structure?

<http://forum.openscad.org/file/n15949/mp.png> 



--
View this message in context: http://forum.openscad.org/CGAL-errors-when-combining-two-correct-STL-s-tp15909p15949.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From stempeldergeschichte at googlemail.com  Wed Jan 27 17:01:16 2016
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Wed, 27 Jan 2016 23:01:16 +0100
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <1453924103516-15947.post@n5.nabble.com>
References: <1453467556876-15783.post@n5.nabble.com>
	<56A23A6A.9020800@bornhaupt.de>
	<1453547961408-15833.post@n5.nabble.com>
	<1453647477135-15871.post@n5.nabble.com>
	<1453902151409-15921.post@n5.nabble.com>
	<56A8D356.7040608@bornhaupt.de>
	<1453909891162-15931.post@n5.nabble.com>
	<1453924103516-15947.post@n5.nabble.com>
Message-ID: <CAJgOqAC7jxcu2XdX3N639iKO6OJ9ro+7gjdFDsGii8gZeGprhg@mail.gmail.com>

It would be cool to put your video and, if your willing, your code up, as
an exaple on the OpenSCAD website.

2016-01-27 20:48 GMT+01:00 fractorr <fractorr at gmail.com>:

> FFMPeg is pretty cool, I was able to create a video from several animations
> (25) captured from Open SCAD and stitch them altogether to make one video.
> Not nearly as bad ass as your video but it worked well for what I was
> after.
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-tp15783p15947.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160127/2fa3208f/attachment.html>

From rl.ward at bigpond.com  Wed Jan 27 18:56:42 2016
From: rl.ward at bigpond.com (Rob Ward)
Date: Thu, 28 Jan 2016 10:56:42 +1100
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <CAJgOqAC7jxcu2XdX3N639iKO6OJ9ro+7gjdFDsGii8gZeGprhg@mail.gmail.com>
References: <1453467556876-15783.post@n5.nabble.com>
	<56A23A6A.9020800@bornhaupt.de>
	<1453547961408-15833.post@n5.nabble.com>
	<1453647477135-15871.post@n5.nabble.com>
	<1453902151409-15921.post@n5.nabble.com>
	<56A8D356.7040608@bornhaupt.de>
	<1453909891162-15931.post@n5.nabble.com>
	<1453924103516-15947.post@n5.nabble.com>
	<CAJgOqAC7jxcu2XdX3N639iKO6OJ9ro+7gjdFDsGii8gZeGprhg@mail.gmail.com>
Message-ID: <3D2095F9-5EDB-40D7-800F-86693D9CDD62@bigpond.com>

I second that, it is rather inspiring.

On 28 January 2016 9:01:16 AM AEDT, Peter Falke <stempeldergeschichte at googlemail.com> wrote:
>It would be cool to put your video and, if your willing, your code up,
>as
>an exaple on the OpenSCAD website.
>
>2016-01-27 20:48 GMT+01:00 fractorr <fractorr at gmail.com>:
>
>> FFMPeg is pretty cool, I was able to create a video from several
>animations
>> (25) captured from Open SCAD and stitch them altogether to make one
>video.
>> Not nearly as bad ass as your video but it worked well for what I was
>> after.
>>
>>
>>
>>
>> --
>> View this message in context:
>>
>http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-tp15783p15947.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
>------------------------------------------------------------------------
>
>_______________________________________________
>OpenSCAD mailing list
>Discuss at lists.openscad.org
>http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

-- 
Sent from my Android device with K-9 Mail. Please excuse my brevity.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160128/a2456221/attachment.html>

From fractorr at gmail.com  Thu Jan 28 01:48:23 2016
From: fractorr at gmail.com (Trevor Orr)
Date: Wed, 27 Jan 2016 22:48:23 -0800
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <3D2095F9-5EDB-40D7-800F-86693D9CDD62@bigpond.com>
References: <1453467556876-15783.post@n5.nabble.com>
	<56A23A6A.9020800@bornhaupt.de>
	<1453547961408-15833.post@n5.nabble.com>
	<1453647477135-15871.post@n5.nabble.com>
	<1453902151409-15921.post@n5.nabble.com>
	<56A8D356.7040608@bornhaupt.de>
	<1453909891162-15931.post@n5.nabble.com>
	<1453924103516-15947.post@n5.nabble.com>
	<CAJgOqAC7jxcu2XdX3N639iKO6OJ9ro+7gjdFDsGii8gZeGprhg@mail.gmail.com>
	<3D2095F9-5EDB-40D7-800F-86693D9CDD62@bigpond.com>
Message-ID: <CAJc0q46xKyT9x7LcVgUiCPs0f_96ztN34u6LZM0EoEyKZHc4kQ@mail.gmail.com>

If I was to put my video and code up as an example on the OpenSCAD site
where would I put it?  And please remember, what I have is not nearly as
cool as Trygon's and the code to do this may not be the best way to do it
but what I came up with works.  But maybe if someone looks at it they can
make suggestion on ways to make it better or easier to do. Once I had the
animation steps completed in OpenSCAD dumping the frames and creating the
separate videos and then merging them together only took about 30 minutes.

On Wed, Jan 27, 2016 at 3:56 PM, Rob Ward <rl.ward at bigpond.com> wrote:

> I second that, it is rather inspiring.
>
>
> On 28 January 2016 9:01:16 AM AEDT, Peter Falke <
> stempeldergeschichte at googlemail.com> wrote:
>>
>> It would be cool to put your video and, if your willing, your code up, as
>> an exaple on the OpenSCAD website.
>>
>> 2016-01-27 20:48 GMT+01:00 fractorr <fractorr at gmail.com>:
>>
>>> FFMPeg is pretty cool, I was able to create a video from several
>>> animations
>>> (25) captured from Open SCAD and stitch them altogether to make one
>>> video.
>>> Not nearly as bad ass as your video but it worked well for what I was
>>> after.
>>>
>>>
>>>
>>>
>>> --
>>> View this message in context:
>>> http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-tp15783p15947.html
>>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>
>> ------------------------------
>>
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
> --
> Sent from my Android device with K-9 Mail. Please excuse my brevity.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160127/3fe0e0af/attachment.html>

From tim.thawkins at gmail.com  Thu Jan 28 01:57:20 2016
From: tim.thawkins at gmail.com (Tim Hawkins)
Date: Thu, 28 Jan 2016 14:57:20 +0800
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <CAJc0q46xKyT9x7LcVgUiCPs0f_96ztN34u6LZM0EoEyKZHc4kQ@mail.gmail.com>
References: <1453467556876-15783.post@n5.nabble.com>
	<56A23A6A.9020800@bornhaupt.de>
	<1453547961408-15833.post@n5.nabble.com>
	<1453647477135-15871.post@n5.nabble.com>
	<1453902151409-15921.post@n5.nabble.com>
	<56A8D356.7040608@bornhaupt.de>
	<1453909891162-15931.post@n5.nabble.com>
	<1453924103516-15947.post@n5.nabble.com>
	<CAJgOqAC7jxcu2XdX3N639iKO6OJ9ro+7gjdFDsGii8gZeGprhg@mail.gmail.com>
	<3D2095F9-5EDB-40D7-800F-86693D9CDD62@bigpond.com>
	<CAJc0q46xKyT9x7LcVgUiCPs0f_96ztN34u6LZM0EoEyKZHc4kQ@mail.gmail.com>
Message-ID: <CAEbsasQUQ6yE21LGAnQU01hKUShrz7iCr=bovDeqJxqLB5B4YQ@mail.gmail.com>

You could put it on github, and then link to it, that way you will be able
to update it and have multiple contributers to improving it, a sort of nano
open source project.

Put the sample video on youtube where it can be linked to, put the
refferences to the video, github repo and the openscad site url into the
video description on youtube, and into the README.md file on github.
On Jan 28, 2016 2:49 PM, "Trevor Orr" <fractorr at gmail.com> wrote:

> If I was to put my video and code up as an example on the OpenSCAD site
> where would I put it?  And please remember, what I have is not nearly as
> cool as Trygon's and the code to do this may not be the best way to do it
> but what I came up with works.  But maybe if someone looks at it they can
> make suggestion on ways to make it better or easier to do. Once I had the
> animation steps completed in OpenSCAD dumping the frames and creating the
> separate videos and then merging them together only took about 30 minutes.
>
> On Wed, Jan 27, 2016 at 3:56 PM, Rob Ward <rl.ward at bigpond.com> wrote:
>
>> I second that, it is rather inspiring.
>>
>>
>> On 28 January 2016 9:01:16 AM AEDT, Peter Falke <
>> stempeldergeschichte at googlemail.com> wrote:
>>>
>>> It would be cool to put your video and, if your willing, your code up,
>>> as an exaple on the OpenSCAD website.
>>>
>>> 2016-01-27 20:48 GMT+01:00 fractorr <fractorr at gmail.com>:
>>>
>>>> FFMPeg is pretty cool, I was able to create a video from several
>>>> animations
>>>> (25) captured from Open SCAD and stitch them altogether to make one
>>>> video.
>>>> Not nearly as bad ass as your video but it worked well for what I was
>>>> after.
>>>>
>>>>
>>>>
>>>>
>>>> --
>>>> View this message in context:
>>>> http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-tp15783p15947.html
>>>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>
>>> ------------------------------
>>>
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>> --
>> Sent from my Android device with K-9 Mail. Please excuse my brevity.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160128/ec9f3b77/attachment.html>

From l_as at msn.com  Thu Jan 28 06:55:07 2016
From: l_as at msn.com (Lord Asriel)
Date: Thu, 28 Jan 2016 04:55:07 -0700 (MST)
Subject: [OpenSCAD] Vertex arrays?
In-Reply-To: <CAGV6i+MC4KqhmW135-LfVYMs=am9u3J0HGe_WziM+G9wwUV_4A@mail.gmail.com>
References: <1453683428612-15876.post@n5.nabble.com>
	<1453691371113-15881.post@n5.nabble.com>
	<CAGV6i+MC4KqhmW135-LfVYMs=am9u3J0HGe_WziM+G9wwUV_4A@mail.gmail.com>
Message-ID: <1453982107155-15954.post@n5.nabble.com>

Indeed the polyhedron functionality is satisfying. The point is, how can I
*make* a large vertex array to pass it. Like, 1000 elements. Or, even
better, of x elements, where x is a variable.

I here provide a code to see a simplified example of what I'm doing.
Severely increasing phi_n means a severe increase in faces:

phi_n=50;
function foobar(phi) = 2+cos(phi);
dphi=360/phi_n;

for(phi=[0:dphi:360-dphi])
{
curr=[foobar(phi)*cos(phi),foobar(phi)*sin(phi),5]; //current
next=[foobar(phi+dphi)*cos(phi+dphi),foobar(phi+dphi)*sin(phi+dphi),5];
bottom=[0,0,0];
top=[0,0,10];

polyhedron(
    points=[bottom,curr,next,top],
    faces=[[0,1,2],[3,2,1]]
);
}




--
View this message in context: http://forum.openscad.org/Vertex-arrays-tp15876p15954.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Thu Jan 28 07:01:11 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Thu, 28 Jan 2016 13:01:11 +0100
Subject: [OpenSCAD] Vertex arrays?
In-Reply-To: <1453982107155-15954.post@n5.nabble.com>
References: <1453683428612-15876.post@n5.nabble.com>
	<1453691371113-15881.post@n5.nabble.com>
	<CAGV6i+MC4KqhmW135-LfVYMs=am9u3J0HGe_WziM+G9wwUV_4A@mail.gmail.com>
	<1453982107155-15954.post@n5.nabble.com>
Message-ID: <56AA0307.1050703@gmx.de>

On 01/28/2016 12:55 PM, Lord Asriel wrote:
> Indeed the polyhedron functionality is satisfying. The point is, how can I
> *make* a large vertex array to pass it. Like, 1000 elements. Or, even
> better, of x elements, where x is a variable.
> 
See the manual for a simple example generating 2D vertices for an ellipse

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/List_Comprehensions#Generating_vertices_for_a_polygon

More complex example generating a polyhedron:

https://github.com/openscad/list-comprehension-demos/blob/master/3d-function.scad

ciao,
  Torsten.



From jon at jonbondy.com  Thu Jan 28 07:10:06 2016
From: jon at jonbondy.com (jon)
Date: Thu, 28 Jan 2016 07:10:06 -0500
Subject: [OpenSCAD] Vertex arrays?
In-Reply-To: <56AA0307.1050703@gmx.de>
References: <1453683428612-15876.post@n5.nabble.com>
	<1453691371113-15881.post@n5.nabble.com>
	<CAGV6i+MC4KqhmW135-LfVYMs=am9u3J0HGe_WziM+G9wwUV_4A@mail.gmail.com>
	<1453982107155-15954.post@n5.nabble.com> <56AA0307.1050703@gmx.de>
Message-ID: <56AA051E.7060200@jonbondy.com>

I see some kinds of questions come up repeatedly, or rather, some kinds 
of answers come up repeatedly.

The documentation (when I last saw it) was oriented around the 
facilities available in the language.  cube().  difference().

Do we need a section that says "if you need to do something like this, 
here are the techniques to consider"?

Jon

On 1/28/2016 7:01 AM, Torsten Paul wrote:
> On 01/28/2016 12:55 PM, Lord Asriel wrote:
>> Indeed the polyhedron functionality is satisfying. The point is, how can I
>> *make* a large vertex array to pass it. Like, 1000 elements. Or, even
>> better, of x elements, where x is a variable.
>>
> See the manual for a simple example generating 2D vertices for an ellipse
>
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/List_Comprehensions#Generating_vertices_for_a_polygon
>
> More complex example generating a polyhedron:
>
> https://github.com/openscad/list-comprehension-demos/blob/master/3d-function.scad
>
> ciao,
>    Torsten.
>
>



From arnholm at arnholm.org  Thu Jan 28 07:44:35 2016
From: arnholm at arnholm.org (arnholm at arnholm.org)
Date: Thu, 28 Jan 2016 13:44:35 +0100
Subject: [OpenSCAD] =?utf-8?q?Vertex_arrays=3F?=
In-Reply-To: <1453982107155-15954.post@n5.nabble.com>
References: <1453683428612-15876.post@n5.nabble.com>
	<1453691371113-15881.post@n5.nabble.com>
	<CAGV6i+MC4KqhmW135-LfVYMs=am9u3J0HGe_WziM+G9wwUV_4A@mail.gmail.com>
	<1453982107155-15954.post@n5.nabble.com>
Message-ID: <4aab8e297b8cb537a0e128d0f03a5fca@arnholm.org>

On 2016-01-28 12:55, Lord Asriel wrote:
> Indeed the polyhedron functionality is satisfying. The point is, how 
> can I
> *make* a large vertex array to pass it. Like, 1000 elements. Or, even
> better, of x elements, where x is a variable.
> 
> I here provide a code to see a simplified example of what I'm doing.
> Severely increasing phi_n means a severe increase in faces:
> 
> phi_n=50;
> function foobar(phi) = 2+cos(phi);
> dphi=360/phi_n;
> 
> for(phi=[0:dphi:360-dphi])
> {
> curr=[foobar(phi)*cos(phi),foobar(phi)*sin(phi),5]; //current
> next=[foobar(phi+dphi)*cos(phi+dphi),foobar(phi+dphi)*sin(phi+dphi),5];
> bottom=[0,0,0];
> top=[0,0,10];
> 
> polyhedron(
>     points=[bottom,curr,next,top],
>     faces=[[0,1,2],[3,2,1]]
> );
> }

That is a relevant practical question and a good example of why language 
syntax can be an issue. It may be of interest to you that AngelScript 
CSG recently got a dedicated IDE that makes making such models simpler ( 
http://arnholm.org/angelscript-csg-ide/ ). I just used it to rewrite 
your example, using dynamically generated arrays for points, faces and 
polyhedra:


// AngelScript CSG code follows

const double pi = 4.0*atan(1.0);
double to_rad(double deg) { return pi*deg/180.0; } // from degrees to 
radians

double foobar(double phi) { return  2+cos(phi); }

shape@ main_shape()
{
    double phi_n=50;
    double dphi_deg=360/phi_n;
    double dphi=to_rad(dphi_deg);

    solid@[] polyhedra;
    for(double phi_deg=0; phi_deg<360-dphi_deg; phi_deg+=dphi_deg){
       double phi = to_rad(phi_deg);
       pos3d@[] points;
       
points.push_back(pos3d(foobar(phi)*cos(phi),foobar(phi)*sin(phi),5)); 
//current
       
points.push_back(pos3d(foobar(phi+dphi)*cos(phi+dphi),foobar(phi+dphi)*sin(phi+dphi),5));
       points.push_back(pos3d(0,0,0));
       points.push_back(pos3d(0,0,10));

       pface@[] faces;
       faces.push_back(pface(0,1,2));
       faces.push_back(pface(1,0,3)); // bugfix? was [3,2,1]
       polyhedra.push_back(polyhedron(points,faces));
    }
    return union3d(polyhedra);
}

void main()
{  // main() receives the finished model and exports it.
    shape@ obj = main_shape();
    obj.write_csg(GetOutputFullPath('.csg')); // OpenSCAD .csg file, ref. 
www.openscad.org
}

If the image attachment gets through, it shows your model in OpenSCAD, 
via the generated .csg file. As you can see, I suspect the vertex 
indices were wrong in the second face in the loop. The generated code 
seems to generate a valid object.

However the code you wrote seems to define invalid polyhedra (not 
closed). So a more correct solution is to generate all the vertices and 
all the faces in two arrays and create a single polyhedron at the end 
(with no union). I just kept the structure as you had it to show the 
similarity.

Kind regards
Carsten Arnholm
-------------- next part --------------
A non-text attachment was scrubbed...
Name: asriel.png
Type: image/png
Size: 9392 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160128/8fb2f341/attachment.png>

From l_as at msn.com  Thu Jan 28 09:41:14 2016
From: l_as at msn.com (Lord Asriel)
Date: Thu, 28 Jan 2016 07:41:14 -0700 (MST)
Subject: [OpenSCAD] Vertex arrays?
In-Reply-To: <56AA051E.7060200@jonbondy.com>
References: <1453683428612-15876.post@n5.nabble.com>
	<1453691371113-15881.post@n5.nabble.com>
	<CAGV6i+MC4KqhmW135-LfVYMs=am9u3J0HGe_WziM+G9wwUV_4A@mail.gmail.com>
	<1453982107155-15954.post@n5.nabble.com>
	<56AA0307.1050703@gmx.de> <56AA051E.7060200@jonbondy.com>
Message-ID: <1453992074426-15958.post@n5.nabble.com>

I checked the 3d example out.
Before discussing if it is an answer or not, let me state that it is
difficult to understand. This list thing feels very simplar to prolog-which
is a serious headache. Making tools user-unfriendly doesn't seem very good
practice. Mildly agreesive answering implying not investing time to read
around seems misplaced to me.

Now that scad file's main idea, if I do get it, is to create point as
list[listx[],listy[](,listz[])]?
Why would that produce the needed [[x1,y1,z1],[x2,y2,z2]....] and not
[[x1,x2...],[y1,y2...]0?

And I don't know where to find scad-utils/lists.scad



--
View this message in context: http://forum.openscad.org/Vertex-arrays-tp15876p15958.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Thu Jan 28 09:49:00 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Thu, 28 Jan 2016 15:49:00 +0100
Subject: [OpenSCAD] Vertex arrays?
In-Reply-To: <1453992074426-15958.post@n5.nabble.com>
References: <1453683428612-15876.post@n5.nabble.com>
	<1453691371113-15881.post@n5.nabble.com>
	<CAGV6i+MC4KqhmW135-LfVYMs=am9u3J0HGe_WziM+G9wwUV_4A@mail.gmail.com>
	<1453982107155-15954.post@n5.nabble.com> <56AA0307.1050703@gmx.de>
	<56AA051E.7060200@jonbondy.com>
	<1453992074426-15958.post@n5.nabble.com>
Message-ID: <56AA2A5C.2040707@gmx.de>

A more specific example...

This needs the development version which allows multiple list
generators in a single expression.
With the release version, it would need to use concat() to
collect the multiple lists into a single one.

phi_n = 50;

function foobar(phi) = 2 + cos(phi);
function point(phi) = [ foobar(phi) * cos(phi), foobar(phi) * sin(phi), 5 ];

points = [
	for (i = [0:phi_n - 1]) point(i * 360 / phi_n),
	[0, 0, 0],
	[0, 0, 10],
];
	
faces = [
	for (i = [0:phi_n - 1]) [ phi_n, i, (i + 1) % phi_n],
	for (i = [0:phi_n - 1]) [ phi_n + 1, (i + 1) % phi_n, i]
];

polyhedron(points, faces);

I don't see a huge syntax issue actually. Generating polyhedrons
directly is not going to be the easiest thing, regardless of the
actual syntax used.
I think the example above is as simple as it gets for this
specific model.

ciao,
  Torsten.



From richard.mortimer at bell.net  Thu Jan 28 11:20:46 2016
From: richard.mortimer at bell.net (richard_d)
Date: Thu, 28 Jan 2016 09:20:46 -0700 (MST)
Subject: [OpenSCAD] Parametric gear pump design
In-Reply-To: <1453677400144-15874.post@n5.nabble.com>
References: <1453526772677-15826.post@n5.nabble.com>
	<1453559801303-15842.post@n5.nabble.com>
	<1149564172.209662.1453563076560.JavaMail.yahoo@mail.yahoo.com>
	<1453564171526-15845.post@n5.nabble.com>
	<1453596639287-15855.post@n5.nabble.com>
	<1038670973.340054.1453597512834.JavaMail.yahoo@mail.yahoo.com>
	<1453599890835-15857.post@n5.nabble.com>
	<711085528.342800.1453600747585.JavaMail.yahoo@mail.yahoo.com>
	<1453606061305-15859.post@n5.nabble.com>
	<1453677400144-15874.post@n5.nabble.com>
Message-ID: <1453998046898-15960.post@n5.nabble.com>

Thank you all for your interesting posts.  As I noted in my second post of
the 23rd, I was considering a gear pump system like Nick Seidl's that can be
heated.  He designed it for molten chocolate so I only need to heat the
system another twenty or so degrees higher.  I am presently looking at
various nylons to use for the build and have come to realize that shrinkage
is going to be an issue with nylon. If these problems look too daunting, I
was considering an alternative where I adapted a metal syringe (Wilton
dessert decorator) to RichRap's paste extruder.  I could wrap the syringe
with a heated sheet. Dripping will happen but can be contained.  Again,
thanks for reading.



--
View this message in context: http://forum.openscad.org/Parametric-gear-pump-design-tp15823p15960.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Thu Jan 28 15:00:13 2016
From: doug at moens.org (doug moen)
Date: Thu, 28 Jan 2016 15:00:13 -0500
Subject: [OpenSCAD] Vertex arrays?
In-Reply-To: <56AA2A5C.2040707@gmx.de>
References: <1453683428612-15876.post@n5.nabble.com>
	<1453691371113-15881.post@n5.nabble.com>
	<CAGV6i+MC4KqhmW135-LfVYMs=am9u3J0HGe_WziM+G9wwUV_4A@mail.gmail.com>
	<1453982107155-15954.post@n5.nabble.com> <56AA0307.1050703@gmx.de>
	<56AA051E.7060200@jonbondy.com>
	<1453992074426-15958.post@n5.nabble.com> <56AA2A5C.2040707@gmx.de>
Message-ID: <CAGV6i+P2ZNYt4nZHo8_fcRRigMZ3Tx7j5-Bf448n_NZodD9qUw@mail.gmail.com>

Thanks for the sample code, Torsten. I haven't tried the new list syntax
yet.

I agree, that is really nice and clean looking code. Evidence we are
heading in the right direction.

On Thursday, 28 January 2016, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> A more specific example...
>
> This needs the development version which allows multiple list
> generators in a single expression.
> With the release version, it would need to use concat() to
> collect the multiple lists into a single one.
>
> phi_n = 50;
>
> function foobar(phi) = 2 + cos(phi);
> function point(phi) = [ foobar(phi) * cos(phi), foobar(phi) * sin(phi), 5
> ];
>
> points = [
>         for (i = [0:phi_n - 1]) point(i * 360 / phi_n),
>         [0, 0, 0],
>         [0, 0, 10],
> ];
>
> faces = [
>         for (i = [0:phi_n - 1]) [ phi_n, i, (i + 1) % phi_n],
>         for (i = [0:phi_n - 1]) [ phi_n + 1, (i + 1) % phi_n, i]
> ];
>
> polyhedron(points, faces);
>
> I don't see a huge syntax issue actually. Generating polyhedrons
> directly is not going to be the easiest thing, regardless of the
> actual syntax used.
> I think the example above is as simple as it gets for this
> specific model.
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org <javascript:;>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160128/f13103d2/attachment.html>

From runsun at gmail.com  Thu Jan 28 15:54:47 2016
From: runsun at gmail.com (runsun)
Date: Thu, 28 Jan 2016 13:54:47 -0700 (MST)
Subject: [OpenSCAD] Script parameterization with "In-Doc UI" in SynWrite
In-Reply-To: <1453253900725-15776.post@n5.nabble.com>
References: <1453252907034-15774.post@n5.nabble.com>
	<1453252952874-15775.post@n5.nabble.com>
	<1453253900725-15776.post@n5.nabble.com>
Message-ID: <1454014487493-15963.post@n5.nabble.com>

My adventure on using the SynWrite editor for OpenSCAD carries a huge step
further. The idea of "in-doc ui" developed previously is abandoned (because
it requires extra typing on the script). The new approach is called
"Click-Change", with that it's now possible to do some amazing script
parameterization with mouse clicks. See the video  on youtube
<https://www.youtube.com/watch?v=rNkvXI-PQsU&feature=youtu.be>   if the
animated gif below doesn't work:

<http://forum.openscad.org/file/n15963/output.gif> 

Note that there is no keyboard entry at all during the entire process. 









-----

$  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ), runscad.py( 1 , 2 , git ), synwrite( 1 , 2 );  $ tips: hash( 1 , 2 ), sweep , var( 1 , 2 ), lerp , animGif , precision( 1 , 2 ), xl-control 





--
View this message in context: http://forum.openscad.org/Script-parameterization-with-In-Doc-UI-in-SynWrite-tp15774p15963.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From db5765 at outlook.com  Thu Jan 28 15:53:56 2016
From: db5765 at outlook.com (Trygon)
Date: Thu, 28 Jan 2016 13:53:56 -0700 (MST)
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <CAJgOqAC7jxcu2XdX3N639iKO6OJ9ro+7gjdFDsGii8gZeGprhg@mail.gmail.com>
References: <1453467556876-15783.post@n5.nabble.com>
	<56A23A6A.9020800@bornhaupt.de>
	<1453547961408-15833.post@n5.nabble.com>
	<1453647477135-15871.post@n5.nabble.com>
	<1453902151409-15921.post@n5.nabble.com>
	<56A8D356.7040608@bornhaupt.de>
	<1453909891162-15931.post@n5.nabble.com>
	<1453924103516-15947.post@n5.nabble.com>
	<CAJgOqAC7jxcu2XdX3N639iKO6OJ9ro+7gjdFDsGii8gZeGprhg@mail.gmail.com>
Message-ID: <1454014436084-15962.post@n5.nabble.com>

Peter,

You are more than welcome to embed the video on the OpenSCAD website if you
want to.

The code is not very pretty in many places and lacking in comments, so I
don't think that posting it as an example is a good idea at present. It is
also dependent on a number of libraries that I have written and that just
adds to the issues.

Cheers,
Trygon




--
View this message in context: http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-tp15783p15962.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From fractorr at gmail.com  Thu Jan 28 16:49:38 2016
From: fractorr at gmail.com (fractorr)
Date: Thu, 28 Jan 2016 14:49:38 -0700 (MST)
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <1454014436084-15962.post@n5.nabble.com>
References: <1453467556876-15783.post@n5.nabble.com>
	<56A23A6A.9020800@bornhaupt.de>
	<1453547961408-15833.post@n5.nabble.com>
	<1453647477135-15871.post@n5.nabble.com>
	<1453902151409-15921.post@n5.nabble.com>
	<56A8D356.7040608@bornhaupt.de>
	<1453909891162-15931.post@n5.nabble.com>
	<1453924103516-15947.post@n5.nabble.com>
	<CAJgOqAC7jxcu2XdX3N639iKO6OJ9ro+7gjdFDsGii8gZeGprhg@mail.gmail.com>
	<1454014436084-15962.post@n5.nabble.com>
Message-ID: <1454017778711-15964.post@n5.nabble.com>

Here is my first attempt at using the animation feature in OpenSCAD.  Nothing
fancy, just me trying to figure out how to do multiple animations to create
one big animation.

https://youtu.be/PqcUOKnN2P8 <https://youtu.be/PqcUOKnN2P8>  




--
View this message in context: http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-tp15783p15964.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Thu Jan 28 17:32:22 2016
From: mschafer at wireframe.biz (Neon22)
Date: Thu, 28 Jan 2016 15:32:22 -0700 (MST)
Subject: [OpenSCAD] Parametric gear pump design
In-Reply-To: <1453998046898-15960.post@n5.nabble.com>
References: <1453559801303-15842.post@n5.nabble.com>
	<1149564172.209662.1453563076560.JavaMail.yahoo@mail.yahoo.com>
	<1453564171526-15845.post@n5.nabble.com>
	<1453596639287-15855.post@n5.nabble.com>
	<1038670973.340054.1453597512834.JavaMail.yahoo@mail.yahoo.com>
	<1453599890835-15857.post@n5.nabble.com>
	<711085528.342800.1453600747585.JavaMail.yahoo@mail.yahoo.com>
	<1453606061305-15859.post@n5.nabble.com>
	<1453677400144-15874.post@n5.nabble.com>
	<1453998046898-15960.post@n5.nabble.com>
Message-ID: <1454020342492-15965.post@n5.nabble.com>

I can't find Nick Seidl. Your second post is to a Vincent Li design.
If Nylon is not suitable - consider PET or PC
E.g. 
- https://www.matterhackers.com/3d-printer-filament-compare
-
http://3dprintingfromscratch.com/common/3d-printer-filament-types-overview/#pett



--
View this message in context: http://forum.openscad.org/Parametric-gear-pump-design-tp15823p15965.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrew at plumb.org  Thu Jan 28 18:22:27 2016
From: andrew at plumb.org (Andrew Plumb)
Date: Thu, 28 Jan 2016 18:22:27 -0500
Subject: [OpenSCAD] Trick to getting "cd tests; cmake .;
	make" to run with new files with CGAL dependencies?
In-Reply-To: <C7293CB1-6077-4CB9-A157-F07273490634@kintel.net>
References: <6BBBD180-3BEA-4AE2-A375-73D80876C14F@plumb.org>
	<51822E05-2BBF-4A09-A78B-ACC1AE4D0852@kintel.net>
	<CB647CDF-DC71-44C7-A610-01F068200B42@plumb.org>
	<AF500D20-54B4-4062-A3B7-C01EDE7565EC@kintel.net>
	<1453906266078-15926.post@n5.nabble.com>
	<E83BDC85-A00E-4187-9456-355BC2C04E8F@kintel.net>
	<1453911565875-15936.post@n5.nabble.com>
	<C7293CB1-6077-4CB9-A157-F07273490634@kintel.net>
Message-ID: <48CB1FF2-CB9F-42B3-9F72-35AB756DC4DD@plumb.org>


> On Jan 27, 2016, at 11:23 AM, Marius Kintel <marius at kintel.net> wrote:
> Also be adviced that we?re currently in the process of merging a bunch of refactoring to master, including patches to both OpenSCAD and the build system to move to C++11. That may trip things up short-term, but will make things better longer term :)
> 
> -Marius
> 

Hi Marius,

Just a heads-up, you might need to pull this particular CGAL patch into the master stream sooner for c++11 compatibility:

https://github.com/clothbot/openscad/blob/b30add9920cfc525b35daa98db1d9b27779d40fd/scripts/macosx-build-dependencies.sh <https://github.com/clothbot/openscad/blob/b30add9920cfc525b35daa98db1d9b27779d40fd/scripts/macosx-build-dependencies.sh>

https://github.com/clothbot/openscad/blob/b30add9920cfc525b35daa98db1d9b27779d40fd/patches/CGAL-clang-bugfix-561.patch <https://github.com/clothbot/openscad/blob/b30add9920cfc525b35daa98db1d9b27779d40fd/patches/CGAL-clang-bugfix-561.patch>

It?s a known issue that was fixed recently in CGAL 4.8:

https://github.com/CGAL/cgal/pull/561 <https://github.com/CGAL/cgal/pull/561>

Andrew.

--

"The future is already here.  It's just not very evenly distributed" -- William Gibson

Me: http://clothbot.com/wiki/ <http://clothbot.com/wiki/>



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160128/de0d60ee/attachment.html>

From marius at kintel.net  Fri Jan 29 00:22:13 2016
From: marius at kintel.net (Marius Kintel)
Date: Fri, 29 Jan 2016 00:22:13 -0500
Subject: [OpenSCAD] Trick to getting "cd tests; cmake .;
	make" to run with new files with CGAL dependencies?
In-Reply-To: <48CB1FF2-CB9F-42B3-9F72-35AB756DC4DD@plumb.org>
References: <6BBBD180-3BEA-4AE2-A375-73D80876C14F@plumb.org>
	<51822E05-2BBF-4A09-A78B-ACC1AE4D0852@kintel.net>
	<CB647CDF-DC71-44C7-A610-01F068200B42@plumb.org>
	<AF500D20-54B4-4062-A3B7-C01EDE7565EC@kintel.net>
	<1453906266078-15926.post@n5.nabble.com>
	<E83BDC85-A00E-4187-9456-355BC2C04E8F@kintel.net>
	<1453911565875-15936.post@n5.nabble.com>
	<C7293CB1-6077-4CB9-A157-F07273490634@kintel.net>
	<48CB1FF2-CB9F-42B3-9F72-35AB756DC4DD@plumb.org>
Message-ID: <0AD0C21A-7A99-4A1F-913E-F31112976B5D@kintel.net>

> On Jan 28, 2016, at 18:22 PM, Andrew Plumb <andrew at plumb.org> wrote:
> 
> Just a heads-up, you might need to pull this particular CGAL patch into the master stream sooner for c++11 compatibility:
> 
Thanks!
I don?t think this affects us a the moment though, and it may take a long time before we can rely on such fixes being available in mainstream distros, unless they backport this to older CGAL versions, which means we may need to patch OpenSCAD rather than CGAL to get this to work.

..although with the recent use of bleeding edge CGAL features we may need a different solution after all.. 

 -Marius

From bioinformatics at gringene.org  Fri Jan 29 05:06:20 2016
From: bioinformatics at gringene.org (David Eccles (gringer))
Date: Fri, 29 Jan 2016 03:06:20 -0700 (MST)
Subject: [OpenSCAD] Vertex arrays?
In-Reply-To: <CAGV6i+P2ZNYt4nZHo8_fcRRigMZ3Tx7j5-Bf448n_NZodD9qUw@mail.gmail.com>
References: <1453683428612-15876.post@n5.nabble.com>
	<1453691371113-15881.post@n5.nabble.com>
	<CAGV6i+MC4KqhmW135-LfVYMs=am9u3J0HGe_WziM+G9wwUV_4A@mail.gmail.com>
	<1453982107155-15954.post@n5.nabble.com>
	<56AA0307.1050703@gmx.de> <56AA051E.7060200@jonbondy.com>
	<1453992074426-15958.post@n5.nabble.com> <56AA2A5C.2040707@gmx.de>
	<CAGV6i+P2ZNYt4nZHo8_fcRRigMZ3Tx7j5-Bf448n_NZodD9qUw@mail.gmail.com>
Message-ID: <1454061980365-15969.post@n5.nabble.com>

OpenSCAD, like Prolog, is a declarative language. In Prolog, rules return
true or false, whereas in OpenSCAD, modules return a 3D object. It takes a
bit of mind twisting to get into the swing of declarative programming, but
I've learnt to stop worrying and love the recursion.

As an example, my path extrusion script generates a polyhedron formed by
translating and rotating a polygon along a path in three-dimensional space.
Here's a double helix, created as a polyhedron with about 180 defined
points. Modifying the number of slices of 't' for the point and path
function can result in this quite quickly exceeding 1000 points without any
change in code:

use <path_extrude.scad>;
pi=3.14159;
for(shift = [0, 360/15]){
    myPoints = [ for(t = [0:72:359]) [cos(t),sin(t)] ];
    myPath = [ for(t = [0:10:359]) [
        (10+1.212*pi*sin(5*t))*cos(t+shift),
        (10+1.212*pi*sin(5*t))*sin(t+shift),
        1.212*pi*cos(5*t)
        ] ];
    path_extrude(points=myPoints, path=myPath, merge=true);
}

I've included an image with an 18-point circle and 180-point path for
demonstration.

<http://forum.openscad.org/file/n15969/pathextrude_double_helix_3240.png> 

The backend of the path_extrude function is 4kb of code, which is fairly
lightweight when compared to things that it can replace. It uses list
comprehensions to simplify the code, but I can achieve the same thing by
defining a function to generate recursive vectors (see my EllerSCAD maze
generator for an example of that). I use a recursive function to first
generate the point array:

module path_extrude(points, path, pos=0, merge=false, trimEnds=false,
extruded=[]){
    if((len(points) > 0) && (len(path) > 0)){
        if(len(extruded) >= (len(path))){
            // extrusion is finished, so construct the object
            //echo(extruded);
            makeExtrudedPoly(extruded, merge=merge, trimEnds=trimEnds);
        } else {
            // generate points from rotating polygon
            if(merge || (pos < (len(path) - 1))){
                if((pos == 0) && (!merge)) {
                    newPts = myRotate(rToS(path[1] - path[0]),
                        points);
                    path_extrude(points=points, path=path, pos=pos+1, 
                        merge=merge, trimEnds=trimEnds,
                        extruded=concat(extruded, [add(newPts,path[pos])]));
                } else {
                    newPts = myRotate(rToS(path[(pos+1) % len(path)] 
                        - path[(pos+len(path)-1) % len(path)]),
                        points);
                    path_extrude(points=points, path=path, pos=pos+1,
                        merge=merge, trimEnds=trimEnds,
                        extruded=concat(extruded, [add(newPts,path[pos])]));
                }
            } else {
                newPts = myRotate(rToS(path[pos] - path[pos-1]),
                    points);
                path_extrude(points=points, path=path, pos=pos+1,
                    merge=merge, trimEnds=trimEnds,
                    extruded=concat(extruded, [add(newPts,path[pos])]));
            }
        }
    }
}


And then another recursive function to generate the polyhedron definition
using the point array. Because each polygon unit has the same number of
points at each position in the 3D path, I can define the joining
quadrilaterals (not necessarily planar) without too much effort:

module makeExtrudedPoly(ex, merge=false, trimEnds=false){
    ps = flatten(ex);
    pp = len(ex[1]); // points in one polygon
    tp = len(ex[1]) * len(ex); // total number of points
    if(!merge && !trimEnds){
        polyhedron(points=ps, faces=concat(
            [[for (i = [pp-1  : -1 :    0]) i]],
            [[for (i = [tp-pp :  1 : tp-1]) i]],
            [for (pt=[0:(len(ex)-2)])
                for(i = [0:pp-1]) phFace(pp,tp,i,pt*pp)],
            [])
        );
    } else if(trimEnds) {
        polyhedron(points=ps, faces=concat(
            [[for (i = [pp*2-1  : -1 :    pp]) i]],
            [[for (i = [tp-pp*2 :  1 : tp-pp-1]) i]],
            [for (pt=[1:(len(ex)-3)])
                for(i = [0:pp-1]) phFace(pp,tp,i,pt*pp)]));
    } else {
        polyhedron(points=ps, faces=
            [for (pt=[0:(len(ex)-1)])
                for(i = [0:pp-1]) phFace(pp,tp,i,pt*pp)]);
    }
}

Hopefully you can see that the majority of the code is spent dealing with
corner cases (i.e. what to do at the ends of the path), rather than the
bread and butter of the algorithm. The remainder of the code is made up from
helper functions to make the code a bit more succinct. OpenSCAD can do a lot
of this stuff *natively*, but only on actual objects (as far as I can tell)
and not on numerical matrices:

// rotation matrix implementation
// OpenSCAD seems to do this slightly different from Wikipedia
// c.f. https://en.wikipedia.org/wiki/Rotation_matrix#Basic_rotations
function rot2Mat(rotVec, axis) =
    (len(rotVec) == 2) ?
        rot2Mat([rotVec[0], rotVec[1], 0], axis) :
    (axis == "x") ?
        [[1,              0,               0],
         [0, cos(rotVec[0]),  sin(rotVec[0])],
         [0, sin(rotVec[0]), -cos(rotVec[0])]] :
    (axis == "y") ?
        [[ cos(rotVec[1]), 0, sin(rotVec[1])],
         [              0, 1,              0],
         [-sin(rotVec[1]), 0, cos(rotVec[1])]] :
    (axis == "z") ?
        [[ cos(rotVec[2]), sin(rotVec[2]), 0],
         [-sin(rotVec[2]), cos(rotVec[2]), 0],
         [0,              0,               1]] : undef;

// convert point to 3D by setting Z to zero (if not present)
function c3D(tPoints) = 
    (len(tPoints[0]) < 3) ?
        tPoints * [[1,0,0],[0,1,0]] :
        tPoints;

// rotate [2D] points using a specificed XYZ rotation vector
function myRotate(rotation, points) =
    c3D(points) * rot2Mat(rotation, "x")
           * rot2Mat(rotation, "y")
           * rot2Mat(rotation, "z");    
    
// Determine spherical rotation for cartesian coordinates
function rToS(pt) = 
    [-acos((pt[2]) / norm(pt)), 
	 0, 
	 -atan2(pt[0],pt[1])];

// Generate a line between two points in 3D space [only used for debugging
this code]
module line3D(p1,p2){
  translate((p1+p2)/2)
    rotate(rToS(p1-p2))
       cylinder(r=1, h=norm(p1-p2), center = true, $fn = 3);
}

// Flattens an array down one level (removing the enclosing array)
function flatten(pointArray, done=0, res=[]) =
    (done == len(pointArray)) ?
        res :
        flatten(pointArray=pointArray, done=done+1, 
            res=concat(res,pointArray[done]));

// Creates a polyhedron face
function phFace(pp, tp, base, add=0) =
    [base + add, (base+1) % pp + add,
     (((base+1) % pp) + pp + add) % tp, (base + pp + add) % tp];

function add(vecArg, scArg, res=[]) = 
    (len(res) >= len(vecArg)) ?
        res :
        add(vecArg, scArg, res=concat(res,[vecArg[len(res)]+scArg]));

The code is a little slow, but I don't yet have any need to optimise it
further because it is sufficiently fast for the things I have been using it
for. See it in action here:

http://www.thingiverse.com/thing:186660



--
View this message in context: http://forum.openscad.org/Vertex-arrays-tp15876p15969.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrew at plumb.org  Fri Jan 29 09:54:59 2016
From: andrew at plumb.org (clothbot)
Date: Fri, 29 Jan 2016 07:54:59 -0700 (MST)
Subject: [OpenSCAD] Trick to getting "cd tests; cmake .;
 make" to run with new files with CGAL dependencies?
In-Reply-To: <0AD0C21A-7A99-4A1F-913E-F31112976B5D@kintel.net>
References: <6BBBD180-3BEA-4AE2-A375-73D80876C14F@plumb.org>
	<51822E05-2BBF-4A09-A78B-ACC1AE4D0852@kintel.net>
	<CB647CDF-DC71-44C7-A610-01F068200B42@plumb.org>
	<AF500D20-54B4-4062-A3B7-C01EDE7565EC@kintel.net>
	<1453906266078-15926.post@n5.nabble.com>
	<E83BDC85-A00E-4187-9456-355BC2C04E8F@kintel.net>
	<1453911565875-15936.post@n5.nabble.com>
	<C7293CB1-6077-4CB9-A157-F07273490634@kintel.net>
	<48CB1FF2-CB9F-42B3-9F72-35AB756DC4DD@plumb.org>
	<0AD0C21A-7A99-4A1F-913E-F31112976B5D@kintel.net>
Message-ID: <1454079299325-15970.post@n5.nabble.com>

kintel wrote
>> On Jan 28, 2016, at 18:22 PM, Andrew Plumb &lt;

> andrew@

> &gt; wrote:
>> 
>> Just a heads-up, you might need to pull this particular CGAL patch into
>> the master stream sooner for c++11 compatibility:
>> 
> Thanks!
> I don?t think this affects us a the moment though, and it may take a long
> time before we can rely on such fixes being available in mainstream
> distros, unless they backport this to older CGAL versions, which means we
> may need to patch OpenSCAD rather than CGAL to get this to work.
> 
> ..although with the recent use of bleeding edge CGAL features we may need
> a different solution after all.. 

Yeah, I'll see if I can get the non-pointset-mesh-generation stuff working
without the patch.  That would be useful sooner for things like fixing
imported STL and non-manifold polyhedron() creations.

Andrew.




--
View this message in context: http://forum.openscad.org/Trick-to-getting-cd-tests-cmake-make-to-run-with-new-files-with-coal-dependencies-tp15877p15970.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From db5765 at outlook.com  Fri Jan 29 10:10:34 2016
From: db5765 at outlook.com (Trygon)
Date: Fri, 29 Jan 2016 08:10:34 -0700 (MST)
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <1454017778711-15964.post@n5.nabble.com>
References: <56A23A6A.9020800@bornhaupt.de>
	<1453547961408-15833.post@n5.nabble.com>
	<1453647477135-15871.post@n5.nabble.com>
	<1453902151409-15921.post@n5.nabble.com>
	<56A8D356.7040608@bornhaupt.de>
	<1453909891162-15931.post@n5.nabble.com>
	<1453924103516-15947.post@n5.nabble.com>
	<CAJgOqAC7jxcu2XdX3N639iKO6OJ9ro+7gjdFDsGii8gZeGprhg@mail.gmail.com>
	<1454014436084-15962.post@n5.nabble.com>
	<1454017778711-15964.post@n5.nabble.com>
Message-ID: <1454080234700-15971.post@n5.nabble.com>

A few more tips on using FFmpeg:

1) In some scripting languages (you will soon get bored typing in FFmpeg
commmand options) % is a special character and has to be included by
escaping it using a preceeding % so:
  -i frame%05d.png     on the command line becomes:
  -i frame%%05d.png    within a script

2) If you want a particular video resolution, you can set up the OpenSCAD
window so that it is too large and then crop the images using FFmpeg:
  -vf crop=1280:720

3) The -y option stops FFmpeg asking before overwriting the output file,
useful while iteratively perfecting a video sequence:

  ffmpeg -y -start_number 0 -framerate 25 -i frame%05d.png -vf crop=1280:720
-c:v libx264 -pix_fmt yuv420p segment1.mp4

4) To glue (concatenate) a set of video segments together, first create a
file with the list of segments, in this example the file is called
"GlueList.txt":

  # concatenation file list:
  file 'segment1.mp4'
  file 'segment2.mp4'
  file 'segment3.mp4'

The following command glues the segments specified in "GlueList.txt" into a
video called "MyVideo", video (& audio) is copied without re-encoding:

  ffmpeg -f concat -i GlueList.txt -c copy MyVideo.mp4

Cheers,
Trygon




--
View this message in context: http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-tp15783p15971.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From fractorr at gmail.com  Fri Jan 29 10:45:56 2016
From: fractorr at gmail.com (fractorr)
Date: Fri, 29 Jan 2016 08:45:56 -0700 (MST)
Subject: [OpenSCAD] Product Video produced with OpenSCAD
In-Reply-To: <1454080234700-15971.post@n5.nabble.com>
References: <1453547961408-15833.post@n5.nabble.com>
	<1453647477135-15871.post@n5.nabble.com>
	<1453902151409-15921.post@n5.nabble.com>
	<56A8D356.7040608@bornhaupt.de>
	<1453909891162-15931.post@n5.nabble.com>
	<1453924103516-15947.post@n5.nabble.com>
	<CAJgOqAC7jxcu2XdX3N639iKO6OJ9ro+7gjdFDsGii8gZeGprhg@mail.gmail.com>
	<1454014436084-15962.post@n5.nabble.com>
	<1454017778711-15964.post@n5.nabble.com>
	<1454080234700-15971.post@n5.nabble.com>
Message-ID: <1454082356556-15972.post@n5.nabble.com>

Not sure how everyone else does animations with multiple sequences but this
is what I came up with.

Step #1. I create sub directories for each step, so if there is 25 steps I
create 25 sub directories (step-01 through step-25).

Step #2. I turn on animation, enter in my values, I used 30 for FPS and 25
for Steps.

Step #3. I click Dump Pictures.  When dump pictures unchecks I move all of
the frames into the appropriate sub directory.

Step #4. I then change the variable step from 2 to 3 and repeat Step #3
until all 25 animations have been dumped.

I then use ffmpeg to combine all the frames into single mp4 files and then
concatenate all 25 mp4 files into one larger mp4.


When this runs part1() is called  and moves the part for the duration of the
animation and then when the animation is completed it draws it into its
final position and then calls the next part module: part2() and the process
is repeated.  When the variable step is at say 3 then modules part1() and
part2() only draw the object in the final position and the step3() module
does it's animation.

I would like to hear feedback on this process, if there is any easier way to
do this I would love to hear but being a newbie to OpenSCAD this is what I
came up with.  As far as I could find there are not run time variables so I
could not figure out a way to have one module to do the animation that would
just accept a bunch of parameters.



Inch = 25.4;
function i2m(inches) = inches * Inch;


step = 2;

part1();


module rectangle() {
	import("rectangle.stl");
}


module part1() {
	translate([i2m(0), 0, 0])
		rotate([0, 0, 0])
			rectangle();
	
	part2();
}


module part2() {
	if (i2m(1.5-($t*4)) > 0 && step==2) {
		translate([i2m(3.0-($t*4)), 0, 0])
			rotate([0, 0, 0])
				rectangle();
	} else if (step >= 2){
		translate([i2m(1.5), 0, 0])
			rotate([0, 0, 0])
				rectangle();
		
		part3();
	}
}


module part3() {
	if (i2m(1.5-($t*4)) > 0 && step==3) {
		translate([i2m(4.5-($t*4)), 0, 0])
			rotate([0, 0, 0])
				rectangle();
	} else if (step >= 3){
		translate([i2m(3.0), 0, 0])
			rotate([0, 0, 0])
				rectangle();
		
		part4();
	}
}




--
View this message in context: http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-tp15783p15972.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jpmendes54 at gmail.com  Fri Jan 29 11:25:12 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Fri, 29 Jan 2016 09:25:12 -0700 (MST)
Subject: [OpenSCAD] Can't install the 2016.1.26 Windows snapshot in my
 64 bit Windows 7 OS
In-Reply-To: <5B084908-3E5A-427F-BDFE-8DD05DD65DA8@kintel.net>
References: <1453856669858-15902.post@n5.nabble.com>
	<5B084908-3E5A-427F-BDFE-8DD05DD65DA8@kintel.net>
Message-ID: <1454084712292-15973.post@n5.nabble.com>

Hello

Sorry about returning to the subject again but something strange is
happening with the latest OpenSCAD snapshots for the 64 bit Windows 7 OS.
I will resume the facts:

1 - Some days ago I tried to install without success the latest snapshots
(both from installer and from .zip).  This happened after a bunch of windows
updates.

2 - I ran a system restore to restore from a previous date before the
updates and all went to normal with the OpenSCAD snapshots.
 
3 - Windows again installed the updates and all went wrong again. Although
installed, the OpenSCAD app creates 3 process and hangs. Killing the
explorer task brings down one process, the other two remain and can't be
killed.

4 - I tried to install the snapshots on my son's PC a 6 core machine running
also the 64 bit Win 7 OS that already had received the last Windows updates
and couldn't install the snapshots again.  

5 - In my Son's PC, I stopped the Avast antivirus and all went back to
normal. I got OpenSCAD snapshot installed an executed. After restarting the
Avast I still kept executing the app. However if I shutdown the machine  the
problem returns and I have to stop the antivirus to get the app running.

6 - Same symptoms apply to my machine also.

Conclusion: Some problem exist that is related with Avast, latest windows
updates, and last OpenSCAD snapshots. This problems doesn't  happen with the
2015.3.2 version. 

If someone is running an updated Windows 7 64 bit OS + Avast antivirus 2015
please report your experience.

Thanks.

jpmendes



--
View this message in context: http://forum.openscad.org/Can-t-install-the-2016-1-26-Windows-snapshot-in-my-64-bit-Windows-7-OS-tp15902p15973.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sat Jan 30 00:32:25 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 29 Jan 2016 22:32:25 -0700 (MST)
Subject: [OpenSCAD] Can't install the 2016.1.26 Windows snapshot in my
 64 bit Windows 7 OS
In-Reply-To: <1454084712292-15973.post@n5.nabble.com>
References: <1453856669858-15902.post@n5.nabble.com>
	<5B084908-3E5A-427F-BDFE-8DD05DD65DA8@kintel.net>
	<1454084712292-15973.post@n5.nabble.com>
Message-ID: <1454131945621-15974.post@n5.nabble.com>

Sorry, not Avast, but just confirming the 64 bit snapshot on 64 bit Win 7
works fine here with AVG. Both zip & installer.



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Can-t-install-the-2016-1-26-Windows-snapshot-in-my-64-bit-Windows-7-OS-tp15902p15974.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Sat Jan 30 00:51:48 2016
From: marius at kintel.net (Marius Kintel)
Date: Sat, 30 Jan 2016 00:51:48 -0500
Subject: [OpenSCAD] Can't install the 2016.1.26 Windows snapshot in my
	64 bit Windows 7 OS
In-Reply-To: <1454084712292-15973.post@n5.nabble.com>
References: <1453856669858-15902.post@n5.nabble.com>
	<5B084908-3E5A-427F-BDFE-8DD05DD65DA8@kintel.net>
	<1454084712292-15973.post@n5.nabble.com>
Message-ID: <A6C27AF0-DA29-4223-9A78-E82730426A7D@kintel.net>

Hey,

We?ve had reports in the past that Avast is treating OpenSCAD badly, perhaps because we don?t have a digital signature and we access the Windows registry.
In Avast, it?s possible to whitelist an application. Could you try that and see if that improves things?
If that works, I?d say you've found a bug in Avast. If not, let?s try to dig deeper.

 -Marius



From mschafer at wireframe.biz  Sat Jan 30 07:45:43 2016
From: mschafer at wireframe.biz (Neon22)
Date: Sat, 30 Jan 2016 05:45:43 -0700 (MST)
Subject: [OpenSCAD] Number of segments in rotate_extrude ?
In-Reply-To: <1454032112272-15967.post@n5.nabble.com>
References: <1454032112272-15967.post@n5.nabble.com>
Message-ID: <1454157943003-15976.post@n5.nabble.com>

screenshot looks lik ethe $fn is in the import. won't work there.
check out the cheatsheet (IDE help)
Suggest you make it a global var or put it in rotate_extrude as an argument.

E.g. 
$fn = 200; // as a global



--
View this message in context: http://forum.openscad.org/Number-of-segments-in-rotate-extrude-tp15967p15976.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From gurdulu66 at gmail.com  Sat Jan 30 08:07:44 2016
From: gurdulu66 at gmail.com (wood)
Date: Sat, 30 Jan 2016 06:07:44 -0700 (MST)
Subject: [OpenSCAD] next generation 3D printers
Message-ID: <1454159264651-15977.post@n5.nabble.com>

Hi.
A started Openscade 2 weeks ago. Needed to make renderings.
While browsing 3D's for Linux I played with Openscad 
for a couple of hours with my little doughter. 
I tought it was amazing (in another life I was a Unix ANSI C programmer)
but not what I needed to make renderings.
Downloded some 3D for Linux and started with SweetHome3D.
Nice rendering but no way to create new 3D objects.  But while stressing
myself 
passing from triyng to fly with supersonic spatial ship (Blender GUI) to 
dragging and dropping (mouse kills), thinking that I must learn pyton 
I had a flash and tryed OpenScad angain. Fantastic. 
Had a kitchen (forniture) 3D model with just "cube" and "translate".
Imported in Sweethome and wow (had to use FreeCad [.stl to .obj]!
Perfect. I now know that most of the Openscade users use it for 3D printing 
but I had no idea at the time (At the beginnig I tought that photos 
of piece of plastic where renderings .. not real objects!).
When I found that Openscade is an imperative programming (I read 
wikipedia about) I just started to use Bash scripts (It would be better in C 
but I was just making a try).
Using Openscade means that you are, more or less, a programmer so what is
the point of complainig about missing functionality (math, logic, variable,
function) of
an imperative programming language (that's was I tought). Just produce 
the imperative sequence with the right instrument for you. 
Choose the language that has what you need.  
It very easy. You do all the numerical and logical things in Bash (C, Python
...)
and produce a .scad file ...[I am sure most of You has done this].

something like [in Bash]:
define -i H
let H=1200
.... [definition and initialisation of all the variables]
echo "// Inserisco Cubo"        > myfile.scad
echo "cube([$H,$L,$W]);"    >> myfile.scad
echo "cube[$H,$L,$W]"       >> Misure.txt
exit 0

Of course I had some problems when triyng to realize the renderings 
that other users had done in my missunderstunding (the photos of real
objects!).
Did not know nothing of 3D in general so it took me a while to realize 
that it was not what Openscade was made for (Colors and texture).
I am pretty sure that Openscade is perfect for "sane" interior design.
I realize artigianal wood forniture (de facto I am the 3D printer, the way 
the most of You use Openscade) and renderings from architects 
are a pain (wondeful to see for the client but
no idea of how to make it).  The scripts I started with Bash are very poor
but
produce not only a 3D models (to look at) but also all the mesures of the
pieces of the forniture (remember, I am the 3D printer!). Fantastic.
But what about matirials, texture, colors (Ok is just rapresentation but,
if you dont show you dont sell).
First I tought that it was just my problem (Openscade is for 3D printing not
for 
interior design) and I did not want to complain and ask the Openscade team
to 
understand my needs. Then, browsing the forum, I read about next generation
3D 
printers, that probably will be able to use more matirials and add finitures
(know 
nothing about 3D printing until 2 weeks ago). 
At the moment I have to read a little more about .obj .3DS ... just to have
an idea.

But I guess there must be someone else out there 
(mybe thinking about next generation 3D printers) that is interested in
solving 
the same issue.
saluti
wood



wood 





--
View this message in context: http://forum.openscad.org/next-generation-3D-printers-tp15977.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jon at jonbondy.com  Sat Jan 30 08:38:42 2016
From: jon at jonbondy.com (jon)
Date: Sat, 30 Jan 2016 08:38:42 -0500
Subject: [OpenSCAD] Vertex arrays?
In-Reply-To: <1454061980365-15969.post@n5.nabble.com>
References: <1453683428612-15876.post@n5.nabble.com>
	<1453691371113-15881.post@n5.nabble.com>
	<CAGV6i+MC4KqhmW135-LfVYMs=am9u3J0HGe_WziM+G9wwUV_4A@mail.gmail.com>
	<1453982107155-15954.post@n5.nabble.com> <56AA0307.1050703@gmx.de>
	<56AA051E.7060200@jonbondy.com>
	<1453992074426-15958.post@n5.nabble.com> <56AA2A5C.2040707@gmx.de>
	<CAGV6i+P2ZNYt4nZHo8_fcRRigMZ3Tx7j5-Bf448n_NZodD9qUw@mail.gmail.com>
	<1454061980365-15969.post@n5.nabble.com>
Message-ID: <56ACBCE2.3090209@jonbondy.com>

What a great explanation!  I wish content like this was embedded as 
comments in the source code!!

Jon

On 1/29/2016 5:06 AM, David Eccles (gringer) wrote:
> OpenSCAD, like Prolog, is a declarative language. In Prolog, rules return
> true or false, whereas in OpenSCAD, modules return a 3D object. It takes a
> bit of mind twisting to get into the swing of declarative programming, but
> I've learnt to stop worrying and love the recursion.
>
> As an example, my path extrusion script generates a polyhedron formed by
> translating and rotating a polygon along a path in three-dimensional space.
> Here's a double helix, created as a polyhedron with about 180 defined
> points. Modifying the number of slices of 't' for the point and path
> function can result in this quite quickly exceeding 1000 points without any
> change in code:
>
> use <path_extrude.scad>;
> pi=3.14159;
> for(shift = [0, 360/15]){
>      myPoints = [ for(t = [0:72:359]) [cos(t),sin(t)] ];
>      myPath = [ for(t = [0:10:359]) [
>          (10+1.212*pi*sin(5*t))*cos(t+shift),
>          (10+1.212*pi*sin(5*t))*sin(t+shift),
>          1.212*pi*cos(5*t)
>          ] ];
>      path_extrude(points=myPoints, path=myPath, merge=true);
> }
>
> I've included an image with an 18-point circle and 180-point path for
> demonstration.
>
> <http://forum.openscad.org/file/n15969/pathextrude_double_helix_3240.png>
>
> The backend of the path_extrude function is 4kb of code, which is fairly
> lightweight when compared to things that it can replace. It uses list
> comprehensions to simplify the code, but I can achieve the same thing by
> defining a function to generate recursive vectors (see my EllerSCAD maze
> generator for an example of that). I use a recursive function to first
> generate the point array:
>
> module path_extrude(points, path, pos=0, merge=false, trimEnds=false,
> extruded=[]){
>      if((len(points) > 0) && (len(path) > 0)){
>          if(len(extruded) >= (len(path))){
>              // extrusion is finished, so construct the object
>              //echo(extruded);
>              makeExtrudedPoly(extruded, merge=merge, trimEnds=trimEnds);
>          } else {
>              // generate points from rotating polygon
>              if(merge || (pos < (len(path) - 1))){
>                  if((pos == 0) && (!merge)) {
>                      newPts = myRotate(rToS(path[1] - path[0]),
>                          points);
>                      path_extrude(points=points, path=path, pos=pos+1,
>                          merge=merge, trimEnds=trimEnds,
>                          extruded=concat(extruded, [add(newPts,path[pos])]));
>                  } else {
>                      newPts = myRotate(rToS(path[(pos+1) % len(path)]
>                          - path[(pos+len(path)-1) % len(path)]),
>                          points);
>                      path_extrude(points=points, path=path, pos=pos+1,
>                          merge=merge, trimEnds=trimEnds,
>                          extruded=concat(extruded, [add(newPts,path[pos])]));
>                  }
>              } else {
>                  newPts = myRotate(rToS(path[pos] - path[pos-1]),
>                      points);
>                  path_extrude(points=points, path=path, pos=pos+1,
>                      merge=merge, trimEnds=trimEnds,
>                      extruded=concat(extruded, [add(newPts,path[pos])]));
>              }
>          }
>      }
> }
>
>
> And then another recursive function to generate the polyhedron definition
> using the point array. Because each polygon unit has the same number of
> points at each position in the 3D path, I can define the joining
> quadrilaterals (not necessarily planar) without too much effort:
>
> module makeExtrudedPoly(ex, merge=false, trimEnds=false){
>      ps = flatten(ex);
>      pp = len(ex[1]); // points in one polygon
>      tp = len(ex[1]) * len(ex); // total number of points
>      if(!merge && !trimEnds){
>          polyhedron(points=ps, faces=concat(
>              [[for (i = [pp-1  : -1 :    0]) i]],
>              [[for (i = [tp-pp :  1 : tp-1]) i]],
>              [for (pt=[0:(len(ex)-2)])
>                  for(i = [0:pp-1]) phFace(pp,tp,i,pt*pp)],
>              [])
>          );
>      } else if(trimEnds) {
>          polyhedron(points=ps, faces=concat(
>              [[for (i = [pp*2-1  : -1 :    pp]) i]],
>              [[for (i = [tp-pp*2 :  1 : tp-pp-1]) i]],
>              [for (pt=[1:(len(ex)-3)])
>                  for(i = [0:pp-1]) phFace(pp,tp,i,pt*pp)]));
>      } else {
>          polyhedron(points=ps, faces=
>              [for (pt=[0:(len(ex)-1)])
>                  for(i = [0:pp-1]) phFace(pp,tp,i,pt*pp)]);
>      }
> }
>
> Hopefully you can see that the majority of the code is spent dealing with
> corner cases (i.e. what to do at the ends of the path), rather than the
> bread and butter of the algorithm. The remainder of the code is made up from
> helper functions to make the code a bit more succinct. OpenSCAD can do a lot
> of this stuff *natively*, but only on actual objects (as far as I can tell)
> and not on numerical matrices:
>
> // rotation matrix implementation
> // OpenSCAD seems to do this slightly different from Wikipedia
> // c.f. https://en.wikipedia.org/wiki/Rotation_matrix#Basic_rotations
> function rot2Mat(rotVec, axis) =
>      (len(rotVec) == 2) ?
>          rot2Mat([rotVec[0], rotVec[1], 0], axis) :
>      (axis == "x") ?
>          [[1,              0,               0],
>           [0, cos(rotVec[0]),  sin(rotVec[0])],
>           [0, sin(rotVec[0]), -cos(rotVec[0])]] :
>      (axis == "y") ?
>          [[ cos(rotVec[1]), 0, sin(rotVec[1])],
>           [              0, 1,              0],
>           [-sin(rotVec[1]), 0, cos(rotVec[1])]] :
>      (axis == "z") ?
>          [[ cos(rotVec[2]), sin(rotVec[2]), 0],
>           [-sin(rotVec[2]), cos(rotVec[2]), 0],
>           [0,              0,               1]] : undef;
>
> // convert point to 3D by setting Z to zero (if not present)
> function c3D(tPoints) =
>      (len(tPoints[0]) < 3) ?
>          tPoints * [[1,0,0],[0,1,0]] :
>          tPoints;
>
> // rotate [2D] points using a specificed XYZ rotation vector
> function myRotate(rotation, points) =
>      c3D(points) * rot2Mat(rotation, "x")
>             * rot2Mat(rotation, "y")
>             * rot2Mat(rotation, "z");
>      
> // Determine spherical rotation for cartesian coordinates
> function rToS(pt) =
>      [-acos((pt[2]) / norm(pt)),
> 	 0,
> 	 -atan2(pt[0],pt[1])];
>
> // Generate a line between two points in 3D space [only used for debugging
> this code]
> module line3D(p1,p2){
>    translate((p1+p2)/2)
>      rotate(rToS(p1-p2))
>         cylinder(r=1, h=norm(p1-p2), center = true, $fn = 3);
> }
>
> // Flattens an array down one level (removing the enclosing array)
> function flatten(pointArray, done=0, res=[]) =
>      (done == len(pointArray)) ?
>          res :
>          flatten(pointArray=pointArray, done=done+1,
>              res=concat(res,pointArray[done]));
>
> // Creates a polyhedron face
> function phFace(pp, tp, base, add=0) =
>      [base + add, (base+1) % pp + add,
>       (((base+1) % pp) + pp + add) % tp, (base + pp + add) % tp];
>
> function add(vecArg, scArg, res=[]) =
>      (len(res) >= len(vecArg)) ?
>          res :
>          add(vecArg, scArg, res=concat(res,[vecArg[len(res)]+scArg]));
>
> The code is a little slow, but I don't yet have any need to optimise it
> further because it is sufficiently fast for the things I have been using it
> for. See it in action here:
>
> http://www.thingiverse.com/thing:186660
>
>
>
> --
> View this message in context: http://forum.openscad.org/Vertex-arrays-tp15876p15969.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
> -----
> No virus found in this message.
> Checked by AVG - www.avg.com
> Version: 2016.0.7357 / Virus Database: 4522/11507 - Release Date: 01/28/16
>
>



From luke.albers at gmail.com  Sat Jan 30 09:04:50 2016
From: luke.albers at gmail.com (lalbers)
Date: Sat, 30 Jan 2016 07:04:50 -0700 (MST)
Subject: [OpenSCAD] dxf and stl import/rendering issue
Message-ID: <1454162690678-15979.post@n5.nabble.com>

Hey everyone, I am building a model of a plasma table using hiwin linear
rails and bearings.

Hiwin provides CAD files of their stuff, so I grabbed a dxf of the front
profile of the rail I am using and
extruded it in OpenSCAD to my desired length.  This works fine.

I also grabbed an STL of the bearing block (its a more complex shape than
the rail - cant linear extrude), which by itself imports fine.

When I try to render both of these items at the same time, I only see the
rail and get this error in the console:

Rendering Polygon Mesh using CGAL...
ERROR: CGAL error in CGAL_Nef_polyhedron3(): CGAL ERROR: assertion
violation! Expr: pe_prev->is_border() ||
!internal::Plane_constructor::get_plane(pe_prev->facet(),pe_prev->facet()->plane()).is_degenerate()
File:
/opt/mxe/usr/x86_64-w64-mingw32.static/include/CGAL/Nef_3/polyhedron_3_to_nef_3.h
Line: 251 
ERROR: CGAL error in CGAL_Nef_polyhedron3(): CGAL ERROR: assertion
violation! Expr: pe_prev->is_border() ||
!internal::Plane_constructor::get_plane(pe_prev->facet(),pe_prev->facet()->plane()).is_degenerate()
File:
/opt/mxe/usr/x86_64-w64-mingw32.static/include/CGAL/Nef_3/polyhedron_3_to_nef_3.h
Line: 251 


Any suggestions?
Thanks



--
View this message in context: http://forum.openscad.org/dxf-and-stl-import-rendering-issue-tp15979.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From charlie at carols62.com  Sat Jan 30 09:39:18 2016
From: charlie at carols62.com (cbernhardt)
Date: Sat, 30 Jan 2016 07:39:18 -0700 (MST)
Subject: [OpenSCAD] Number of segments in rotate_extrude ?
In-Reply-To: <1454157943003-15976.post@n5.nabble.com>
References: <1454032112272-15967.post@n5.nabble.com>
	<1454157943003-15976.post@n5.nabble.com>
Message-ID: <1454164758992-15980.post@n5.nabble.com>

You are correct, as I discovered last night. Operator Error.
Thanks,
Charles



--
View this message in context: http://forum.openscad.org/Number-of-segments-in-rotate-extrude-tp15967p15980.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jpmendes54 at gmail.com  Sat Jan 30 10:11:28 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Sat, 30 Jan 2016 08:11:28 -0700 (MST)
Subject: [OpenSCAD] Can't install the 2016.1.26 Windows snapshot in my
 64 bit Windows 7 OS
In-Reply-To: <A6C27AF0-DA29-4223-9A78-E82730426A7D@kintel.net>
References: <1453856669858-15902.post@n5.nabble.com>
	<5B084908-3E5A-427F-BDFE-8DD05DD65DA8@kintel.net>
	<1454084712292-15973.post@n5.nabble.com>
	<A6C27AF0-DA29-4223-9A78-E82730426A7D@kintel.net>
Message-ID: <1454166688408-15981.post@n5.nabble.com>

Hi Kintel

You are wright, thanks a lot for your suggestion. After excluding the
OpenSCAD dir from Avast verification all is working well.

Cheers
jpmendes


 



--
View this message in context: http://forum.openscad.org/Can-t-install-the-2016-1-26-Windows-snapshot-in-my-64-bit-Windows-7-OS-tp15902p15981.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Sat Jan 30 12:59:55 2016
From: doug at moens.org (doug moen)
Date: Sat, 30 Jan 2016 12:59:55 -0500
Subject: [OpenSCAD] next generation 3D printers
In-Reply-To: <1454159264651-15977.post@n5.nabble.com>
References: <1454159264651-15977.post@n5.nabble.com>
Message-ID: <CAGV6i+PBC9q=8LT8NrOBVZExBTSrBvEDmcPqM0GvUgCqUbDfvw@mail.gmail.com>

Here are some steps to supporting multiple materials and colours in
OpenSCAD.

Step 0. With most consumer-grade 3D printers, the best you can do is create
multiple STL files, one for each colour or material. Each STL file is
imported into the slicer and associated with a different print head. This
is all that OpenSCAD supports today (ie, OpenSCAD has no knowledge of
multiple materials & colours in the exported model).

Step 1. The AMF file format supports multi-part models, where each part can
represent a different colour or material. This is more convenient: your
multi-colour, multi-material model is represented by a single file, instead
of a collection of STL files. Cura and Slic3r can read multi-part AMF files
(and convert them to GCode for controlling your printer). Step 1 is to
extend OpenSCAD so that it can export multi-part AMF files.

There is a recent forum thread where we discuss adding new syntax to tag
different parts of the CSG tree as belonging to different components of a
multi-part model. If we design and implement this feature correctly, then
you could create a single scad file that specifies a multi-part model, and
export it as either multiple STL files, or as a single AMF file.
http://forum.openscad.org/export-function-td15428.html

Step 2. Extend OpenSCAD so that it can *import* multi-part AMF files.
Generalize the concept of a "shape" so that a shape can have 2 or more
disjoint regions consisting of different materials or colours, and
generalize the CSG operators to cope with this.

Last year, we had a forum discussion about this, and bobc prototyped an
extension to OpenSCAD to support multi-colour models.
http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-td12667i20.html#a12867

Step 3. Full colour 3D printing exists, which allows you to print
near-photo-realistic colour models, with potentially millions of colours.
Shapeways supports full colour printing. The "disjoint region" model of
multiple colours from step 2 isn't really suitable for representing
continous colour gradations. Texture mapping is one approach, and is good
enough for Shapeways colour prints, but all it does is apply colour to the
surface of a model. It doesn't allow you to specify continuous material
gradations within the interior of a model (something that's possible with a
3D Systems polyjet printer). For that, you need a volumetric description of
the model. OpenSCAD currently describes models using a boundary
representation. With a functional representation, functions of the form
f[x,y,z] map each point in 3-space onto different properties of the object,
including geometry, colour and material. The volumetric approach is the
only one that fully supports the underlying capabilities of 3D printers. I
think OpenSCAD needs to eventually support a hybrid of functional and
boundary representations.

On 30 January 2016 at 08:07, wood <gurdulu66 at gmail.com> wrote:

> Hi.
> A started Openscade 2 weeks ago. Needed to make renderings.
> While browsing 3D's for Linux I played with Openscad
> for a couple of hours with my little doughter.
> I tought it was amazing (in another life I was a Unix ANSI C programmer)
> but not what I needed to make renderings.
> Downloded some 3D for Linux and started with SweetHome3D.
> Nice rendering but no way to create new 3D objects.  But while stressing
> myself
> passing from triyng to fly with supersonic spatial ship (Blender GUI) to
> dragging and dropping (mouse kills), thinking that I must learn pyton
> I had a flash and tryed OpenScad angain. Fantastic.
> Had a kitchen (forniture) 3D model with just "cube" and "translate".
> Imported in Sweethome and wow (had to use FreeCad [.stl to .obj]!
> Perfect. I now know that most of the Openscade users use it for 3D printing
> but I had no idea at the time (At the beginnig I tought that photos
> of piece of plastic where renderings .. not real objects!).
> When I found that Openscade is an imperative programming (I read
> wikipedia about) I just started to use Bash scripts (It would be better in
> C
> but I was just making a try).
> Using Openscade means that you are, more or less, a programmer so what is
> the point of complainig about missing functionality (math, logic, variable,
> function) of
> an imperative programming language (that's was I tought). Just produce
> the imperative sequence with the right instrument for you.
> Choose the language that has what you need.
> It very easy. You do all the numerical and logical things in Bash (C,
> Python
> ...)
> and produce a .scad file ...[I am sure most of You has done this].
>
> something like [in Bash]:
> define -i H
> let H=1200
> .... [definition and initialisation of all the variables]
> echo "// Inserisco Cubo"        > myfile.scad
> echo "cube([$H,$L,$W]);"    >> myfile.scad
> echo "cube[$H,$L,$W]"       >> Misure.txt
> exit 0
>
> Of course I had some problems when triyng to realize the renderings
> that other users had done in my missunderstunding (the photos of real
> objects!).
> Did not know nothing of 3D in general so it took me a while to realize
> that it was not what Openscade was made for (Colors and texture).
> I am pretty sure that Openscade is perfect for "sane" interior design.
> I realize artigianal wood forniture (de facto I am the 3D printer, the way
> the most of You use Openscade) and renderings from architects
> are a pain (wondeful to see for the client but
> no idea of how to make it).  The scripts I started with Bash are very poor
> but
> produce not only a 3D models (to look at) but also all the mesures of the
> pieces of the forniture (remember, I am the 3D printer!). Fantastic.
> But what about matirials, texture, colors (Ok is just rapresentation but,
> if you dont show you dont sell).
> First I tought that it was just my problem (Openscade is for 3D printing
> not
> for
> interior design) and I did not want to complain and ask the Openscade team
> to
> understand my needs. Then, browsing the forum, I read about next generation
> 3D
> printers, that probably will be able to use more matirials and add
> finitures
> (know
> nothing about 3D printing until 2 weeks ago).
> At the moment I have to read a little more about .obj .3DS ... just to have
> an idea.
>
> But I guess there must be someone else out there
> (mybe thinking about next generation 3D printers) that is interested in
> solving
> the same issue.
> saluti
> wood
>
>
>
> wood
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/next-generation-3D-printers-tp15977.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160130/1def94af/attachment.html>

From oz.at.michael at gmail.com  Sat Jan 30 15:36:37 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 30 Jan 2016 13:36:37 -0700 (MST)
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <1454162690678-15979.post@n5.nabble.com>
References: <1454162690678-15979.post@n5.nabble.com>
Message-ID: <1454186197963-15983.post@n5.nabble.com>

It helps if you can share your code. Also point to the STL & DXF.

Looks likely the STL has degenerate faces, you can check if with  Netfabb
Basic <http://www.netfabb.com/downloadcenter.php?basic=1>  .



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/dxf-and-stl-import-rendering-issue-tp15979p15983.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From johangjonker at zonnet.nl  Sat Jan 30 15:44:35 2016
From: johangjonker at zonnet.nl (Johan Jonker)
Date: Sat, 30 Jan 2016 13:44:35 -0700 (MST)
Subject: [OpenSCAD] aren't global arrays possible?
Message-ID: <1454186675160-15984.post@n5.nabble.com>

It get an error on this attempt to use a global array.
Is it not possible to use a global array in a function?
Is there another way to use the interpolation in a function?

/A_table = [
[ 0, 0.01*h_tip],
[0.1, 0.12*h_tip],
[0.2, 0.24*h_tip],
[0.3, 0.28*h_tip],
[0.4, 0.32*h_tip],
[0.5, 0.4*h_tip],
[0.6, 0.45*h_tip],
[0.7, 0.52*h_tip],
[0.8, 0.64*h_tip],
[0.9, 0.77*h_tip],
[1,1*h_tip]
];
B_table = nSpline(A_table,1000);

function tip(procent) = 
B_table[round(procent*10)][1]*h_tip;/





--
View this message in context: http://forum.openscad.org/aren-t-global-arrays-possible-tp15984.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sat Jan 30 15:58:30 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 30 Jan 2016 13:58:30 -0700 (MST)
Subject: [OpenSCAD] aren't global arrays possible?
In-Reply-To: <1454186675160-15984.post@n5.nabble.com>
References: <1454186675160-15984.post@n5.nabble.com>
Message-ID: <1454187510043-15985.post@n5.nabble.com>

Should work, what error message? (I have not looked at nSpline)



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/aren-t-global-arrays-possible-tp15984p15985.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From johangjonker at zonnet.nl  Sat Jan 30 16:47:14 2016
From: johangjonker at zonnet.nl (Johan Jonker)
Date: Sat, 30 Jan 2016 14:47:14 -0700 (MST)
Subject: [OpenSCAD] aren't global arrays possible?
In-Reply-To: <1454187510043-15985.post@n5.nabble.com>
References: <1454186675160-15984.post@n5.nabble.com>
	<1454187510043-15985.post@n5.nabble.com>
Message-ID: <1454190434130-15986.post@n5.nabble.com>

unknown variable



--
View this message in context: http://forum.openscad.org/aren-t-global-arrays-possible-tp15984p15986.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Sat Jan 30 17:17:31 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Sat, 30 Jan 2016 23:17:31 +0100
Subject: [OpenSCAD] aren't global arrays possible?
In-Reply-To: <1454190434130-15986.post@n5.nabble.com>
References: <1454186675160-15984.post@n5.nabble.com>
	<1454187510043-15985.post@n5.nabble.com>
	<1454190434130-15986.post@n5.nabble.com>
Message-ID: <56AD367B.4010207@arnholm.org>

On 30. jan. 2016 22:47, Johan Jonker wrote:
> unknown variable

 From your script it is quite clear the unknown variable is 'h_tip', it 
isn't defined, but used.

Also the function nSpline is undefined as written.

Carsten Arnholm



From oz.at.michael at gmail.com  Sat Jan 30 17:27:44 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 30 Jan 2016 15:27:44 -0700 (MST)
Subject: [OpenSCAD] aren't global arrays possible?
In-Reply-To: <1454190434130-15986.post@n5.nabble.com>
References: <1454186675160-15984.post@n5.nabble.com>
	<1454187510043-15985.post@n5.nabble.com>
	<1454190434130-15986.post@n5.nabble.com>
Message-ID: <1454192864584-15988.post@n5.nabble.com>

This works for me

use <splines.scad>
h_tip=1;
A_table = [
[ 0, 0.01*h_tip],
[0.1, 0.12*h_tip],
[0.2, 0.24*h_tip],
[0.3, 0.28*h_tip],
[0.4, 0.32*h_tip],
[0.5, 0.4*h_tip],
[0.6, 0.45*h_tip],
[0.7, 0.52*h_tip],
[0.8, 0.64*h_tip],
[0.9, 0.77*h_tip],
[1,1*h_tip]
];
echo(A_table=A_table);
B_table = nSpline(A_table,1000);
echo(B_table=B_table);
function tip(procent) =
B_table[round(procent*10)][1]*h_tip;

I suspect a typo in your code?



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/aren-t-global-arrays-possible-tp15984p15988.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From johangjonker at zonnet.nl  Sun Jan 31 07:47:02 2016
From: johangjonker at zonnet.nl (Johan Jonker)
Date: Sun, 31 Jan 2016 05:47:02 -0700 (MST)
Subject: [OpenSCAD] aren't global arrays possible?
In-Reply-To: <1454192864584-15988.post@n5.nabble.com>
References: <1454186675160-15984.post@n5.nabble.com>
	<1454187510043-15985.post@n5.nabble.com>
	<1454190434130-15986.post@n5.nabble.com>
	<1454192864584-15988.post@n5.nabble.com>
Message-ID: <1454244422392-15989.post@n5.nabble.com>

Strange, when I paste your codes in an empty file, there is not problem.
When I paste the code on the top of file with modules and functions it
reports errors:

/Saved backup file: C:/Users/Eigenaar/Documents/OpenSCAD/backups/mouthpiece
outside v12-backup-gqHp6640.scad
Compiling design (CSG Tree generation)...
WARNING: Ignoring unknown variable 'B_table'. 
WARNING: Ignoring unknown variable 'B_table'. 
ECHO: "lchamber", 39, 45.7074, 2.4, 45.7666, 15.6531
ECHO: "chamber", 6.00436, 6.10407, 2.9133, 5.76755, 17.0867, 15.6531,
6.17938/

But it computes the tables and echoes them as expected.



--
View this message in context: http://forum.openscad.org/aren-t-global-arrays-possible-tp15984p15989.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From luke.albers at gmail.com  Sun Jan 31 08:57:41 2016
From: luke.albers at gmail.com (lalbers)
Date: Sun, 31 Jan 2016 06:57:41 -0700 (MST)
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <1454186197963-15983.post@n5.nabble.com>
References: <1454162690678-15979.post@n5.nabble.com>
	<1454186197963-15983.post@n5.nabble.com>
Message-ID: <1454248661598-15990.post@n5.nabble.com>

Thank you for your reply.

I ran the analysis in netfabb and I don't notice any problems - I may be
missing something though.

I put all of the files for this, including a netfab screenshot here:

http://files.albersllc.com/cad/

this code is essentially what I have uploaded in the .scad file and has the
same issue:

import("HGH20CA_Z0_C_SS_1.stl");
translate([0,0,20])
    rotate([90,0,0]) 
        linear_extrude(height = 1500, center = true)
            import (file = "HGR20_rail_front.dxf");





--
View this message in context: http://forum.openscad.org/dxf-and-stl-import-rendering-issue-tp15979p15990.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jdawgaz at gmail.com  Sun Jan 31 10:06:29 2016
From: jdawgaz at gmail.com (Jerry Davis)
Date: Sun, 31 Jan 2016 08:06:29 -0700
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <1454248661598-15990.post@n5.nabble.com>
References: <1454162690678-15979.post@n5.nabble.com>
	<1454186197963-15983.post@n5.nabble.com>
	<1454248661598-15990.post@n5.nabble.com>
Message-ID: <CAMyDR6L9mO+HWXweFu_fkxk3==au5cA+G1u-wRVCUSusxKfSYg@mail.gmail.com>

running osx 2015.12.02 and see more than the rail.
no errors.

is this what I am supposed to see?



--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson

On Sun, Jan 31, 2016 at 6:57 AM, lalbers <luke.albers at gmail.com> wrote:

> Thank you for your reply.
>
> I ran the analysis in netfabb and I don't notice any problems - I may be
> missing something though.
>
> I put all of the files for this, including a netfab screenshot here:
>
> http://files.albersllc.com/cad/
>
> this code is essentially what I have uploaded in the .scad file and has the
> same issue:
>
> import("HGH20CA_Z0_C_SS_1.stl");
> translate([0,0,20])
>     rotate([90,0,0])
>         linear_extrude(height = 1500, center = true)
>             import (file = "HGR20_rail_front.dxf");
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/dxf-and-stl-import-rendering-issue-tp15979p15990.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160131/35d1e79d/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: linear_rail.png
Type: image/png
Size: 16691 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160131/35d1e79d/attachment.png>

From jpmendes54 at gmail.com  Sun Jan 31 11:18:30 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Sun, 31 Jan 2016 09:18:30 -0700 (MST)
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <1454248661598-15990.post@n5.nabble.com>
References: <1454162690678-15979.post@n5.nabble.com>
	<1454186197963-15983.post@n5.nabble.com>
	<1454248661598-15990.post@n5.nabble.com>
Message-ID: <1454257110793-15992.post@n5.nabble.com>

Hello

To me it seems this is a bug in OpenSCAD. When each part is exported as stl
one at a time and then imported it works well. In my opinion this is one
more reason to have an export() from the script, functionality.

jpmendes



--
View this message in context: http://forum.openscad.org/dxf-and-stl-import-rendering-issue-tp15979p15992.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jpmendes54 at gmail.com  Sun Jan 31 11:24:13 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Sun, 31 Jan 2016 09:24:13 -0700 (MST)
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <1454257110793-15992.post@n5.nabble.com>
References: <1454162690678-15979.post@n5.nabble.com>
	<1454186197963-15983.post@n5.nabble.com>
	<1454248661598-15990.post@n5.nabble.com>
	<1454257110793-15992.post@n5.nabble.com>
Message-ID: <1454257453198-15993.post@n5.nabble.com>

Hi

Forget my previous message. I made some mistake during my tests. When
importing both .stl the same errors occur.
Sorry for this.

jpmendes 



--
View this message in context: http://forum.openscad.org/dxf-and-stl-import-rendering-issue-tp15979p15993.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Sun Jan 31 11:58:23 2016
From: runsun at gmail.com (runsun)
Date: Sun, 31 Jan 2016 09:58:23 -0700 (MST)
Subject: [OpenSCAD] aren't global arrays possible?
In-Reply-To: <1454244422392-15989.post@n5.nabble.com>
References: <1454186675160-15984.post@n5.nabble.com>
	<1454187510043-15985.post@n5.nabble.com>
	<1454190434130-15986.post@n5.nabble.com>
	<1454192864584-15988.post@n5.nabble.com>
	<1454244422392-15989.post@n5.nabble.com>
Message-ID: <1454259503586-15994.post@n5.nabble.com>

Johan Jonker wrote
> Strange, when I paste your codes in an empty file, there is no problem.
> When I paste the code on the top of file with modules and functions it
> reports errors:

This is one thing about OpenScad that troubles users in debugging. See the
following and refer to my  earlier post
<http://forum.openscad.org/Ignoring-unknown-variable-issue-tp13156p13321.html>  
for more detailed explanation:

runsun wrote
> whenever you see : 
> 
>    WARNING: Ignoring unknown variable X 
> 
> It could be one of the following two conditions : 
> 
> 1) A=X but X is not defined in any place prior to that line, 
>     means the issue is on X; 
> 
> 2) A=X but A is already defined prior to that line, before 
>     X is defined.   
> 
> In case 1), the issue is on X, but in 2), A is the problem. 
> 
> So besides checking if X is pre-defined, remember to also 
> check if A is pre-defined. 





-----

$  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ), runscad.py( 1 , 2 , git ), synwrite( 1 , 2 );  $ tips: hash( 1 , 2 ), sweep , var( 1 , 2 ), lerp , animGif , prodVid , precision( 1 , 2 ), xl-control 





--
View this message in context: http://forum.openscad.org/aren-t-global-arrays-possible-tp15984p15994.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From luke.albers at gmail.com  Sun Jan 31 12:10:06 2016
From: luke.albers at gmail.com (lalbers)
Date: Sun, 31 Jan 2016 10:10:06 -0700 (MST)
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <CAMyDR6L9mO+HWXweFu_fkxk3==au5cA+G1u-wRVCUSusxKfSYg@mail.gmail.com>
References: <1454162690678-15979.post@n5.nabble.com>
	<1454186197963-15983.post@n5.nabble.com>
	<1454248661598-15990.post@n5.nabble.com>
	<CAMyDR6L9mO+HWXweFu_fkxk3==au5cA+G1u-wRVCUSusxKfSYg@mail.gmail.com>
Message-ID: <1454260206888-15995.post@n5.nabble.com>

That is what I expect to see (I hadn't got to the point where I could
position the bearing block on the rail yet but those are the parts)  - When
I get a chance maybe I will try on my girlfriend's mac to see if that makes
a difference.



--
View this message in context: http://forum.openscad.org/dxf-and-stl-import-rendering-issue-tp15979p15995.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jpmendes54 at gmail.com  Sun Jan 31 13:19:14 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Sun, 31 Jan 2016 11:19:14 -0700 (MST)
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <1454260206888-15995.post@n5.nabble.com>
References: <1454162690678-15979.post@n5.nabble.com>
	<1454186197963-15983.post@n5.nabble.com>
	<1454248661598-15990.post@n5.nabble.com>
	<CAMyDR6L9mO+HWXweFu_fkxk3==au5cA+G1u-wRVCUSusxKfSYg@mail.gmail.com>
	<1454260206888-15995.post@n5.nabble.com>
Message-ID: <1454264354336-15996.post@n5.nabble.com>

Hi

Meshlab doesn't report errors, however Kisslicer does. See pictures:
<http://forum.openscad.org/file/n15996/Capture.png>  
<http://forum.openscad.org/file/n15996/Capture3.png> 

After repairing the model using the online 
https://modelrepair.azurewebsites.net/
<https://modelrepair.azurewebsites.net/>   service
Meshlab start reporting some errors:

<http://forum.openscad.org/file/n15996/Capture4.png> 

Cheers
jpmendes



--
View this message in context: http://forum.openscad.org/dxf-and-stl-import-rendering-issue-tp15979p15996.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From luke.albers at gmail.com  Sun Jan 31 13:25:56 2016
From: luke.albers at gmail.com (lalbers)
Date: Sun, 31 Jan 2016 11:25:56 -0700 (MST)
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <1454264354336-15996.post@n5.nabble.com>
References: <1454162690678-15979.post@n5.nabble.com>
	<1454186197963-15983.post@n5.nabble.com>
	<1454248661598-15990.post@n5.nabble.com>
	<CAMyDR6L9mO+HWXweFu_fkxk3==au5cA+G1u-wRVCUSusxKfSYg@mail.gmail.com>
	<1454260206888-15995.post@n5.nabble.com>
	<1454264354336-15996.post@n5.nabble.com>
Message-ID: <1454264756151-15997.post@n5.nabble.com>

Thanks!!  I downloaded kisslicer and just opened and then saved the .stl from
there, using that file all is well.

I really appreciate all of you looking into this



--
View this message in context: http://forum.openscad.org/dxf-and-stl-import-rendering-issue-tp15979p15997.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From charlie at carols62.com  Sun Jan 31 13:33:25 2016
From: charlie at carols62.com (cbernhardt)
Date: Sun, 31 Jan 2016 11:33:25 -0700 (MST)
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <1454162690678-15979.post@n5.nabble.com>
References: <1454162690678-15979.post@n5.nabble.com>
Message-ID: <1454265205613-15998.post@n5.nabble.com>

I wrote a program in AutoCad (older version 14) that reads and draws STL
files. The triangle faces are colored according to the Z value of the normal
vectors.   Triangles with a normal vector value of z=0.0 are RED, z=1.0 are
yellow, z>0.0 are green, z<0.0 are cyan, and z=-1.0 are blue. In the AutoCad
rendering of your STL file there are some faces on the end of your model and
also in some of the holes that appear to be not exactly vertical, although I
doubt that is the cause of your error message.
<http://forum.openscad.org/file/n15998/HGH20CA_Z0_C_SS_1.jpg> 



--
View this message in context: http://forum.openscad.org/dxf-and-stl-import-rendering-issue-tp15979p15998.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From luke.albers at gmail.com  Sun Jan 31 13:34:02 2016
From: luke.albers at gmail.com (lalbers)
Date: Sun, 31 Jan 2016 11:34:02 -0700 (MST)
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <1454264354336-15996.post@n5.nabble.com>
References: <1454162690678-15979.post@n5.nabble.com>
	<1454186197963-15983.post@n5.nabble.com>
	<1454248661598-15990.post@n5.nabble.com>
	<CAMyDR6L9mO+HWXweFu_fkxk3==au5cA+G1u-wRVCUSusxKfSYg@mail.gmail.com>
	<1454260206888-15995.post@n5.nabble.com>
	<1454264354336-15996.post@n5.nabble.com>
Message-ID: <1454265242051-15999.post@n5.nabble.com>

I spoke too soon - I get both rendered together as long as the rail is
vertical, when I try to position the bearing on the rail I get:

Rendering Polygon Mesh using CGAL...
ERROR: CGAL error in CGALUtils::applyBinaryOperator union: CGAL ERROR:
assertion violation! Expr: target(s1).vertex()==target(s2).vertex() File:
/opt/mxe/usr/x86_64-w64-mingw32.static/include/CGAL/Nef_3/SNC_FM_decorator.h
Line: 218 


I also tried getting the intersection of the STL with a cube that was bigger
than it but it didn't help.





--
View this message in context: http://forum.openscad.org/dxf-and-stl-import-rendering-issue-tp15979p15999.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From paul at sehorne.org  Sun Jan 31 14:42:24 2016
From: paul at sehorne.org (Paul F. Sehorne)
Date: Sun, 31 Jan 2016 13:42:24 -0600
Subject: [OpenSCAD] OpenSCAD IF statement not working
Message-ID: <56AE63A0.7070306@sehorne.org>

Why does OpenSCAD <http://www.openscad.org>version 2015.03echo "0" for 
the code fragment below? Instead of the expected "5".

x=0;
part="test";
if (part=="test") {x=5;}
echo (x);

Thanks,
-- 
*Paul*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160131/40c8c0b4/attachment.html>

From nop.head at gmail.com  Sun Jan 31 14:53:21 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 31 Jan 2016 19:53:21 +0000
Subject: [OpenSCAD] OpenSCAD IF statement not working
In-Reply-To: <56AE63A0.7070306@sehorne.org>
References: <56AE63A0.7070306@sehorne.org>
Message-ID: <CAEEmnrP4MBfMDFyyLT5tv-nJ_kZ6Ob_knfBAzLzfVQqhF8MPOg@mail.gmail.com>

Because the x in {x = 5;} is a new x that masks the global one inside the
braces.

if (part=="test") {x=5; echo(x);}

will echo 5 but I expect what you actually want is this:

part="test";
x = (part=="test") ? 5 : 0;
echo (x);



On 31 January 2016 at 19:42, Paul F. Sehorne <paul at sehorne.org> wrote:

> Why does OpenSCAD <http://www.openscad.org> version 2015.03 echo "0" for
> the code fragment below? Instead of the expected "5".
>
> x=0;
> part="test";
> if (part=="test") {x=5;}
> echo (x);
>
> Thanks,
> --
> *Paul*
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160131/895af8f4/attachment.html>

From fred_dot_u at yahoo.com  Sun Jan 31 14:58:46 2016
From: fred_dot_u at yahoo.com (fred)
Date: Sun, 31 Jan 2016 19:58:46 +0000 (UTC)
Subject: [OpenSCAD] OpenSCAD IF statement not working
In-Reply-To: <CAEEmnrP4MBfMDFyyLT5tv-nJ_kZ6Ob_knfBAzLzfVQqhF8MPOg@mail.gmail.com>
References: <CAEEmnrP4MBfMDFyyLT5tv-nJ_kZ6Ob_knfBAzLzfVQqhF8MPOg@mail.gmail.com>
Message-ID: <808396790.3079413.1454270326697.JavaMail.yahoo@mail.yahoo.com>

I had to swap 
? 5 : 0to read? 0 : 5to make it work.
 

    On Sunday, January 31, 2016 2:54 PM, nop head <nop.head at gmail.com> wrote:
 

 Because the x in {x = 5;} is a new x that masks the global one inside the braces.

if (part=="test") {x=5; echo(x);}

will echo 5 but I expect what you actually want is this:

part="test";
x = (part=="test") ? 5 : 0;
echo (x);



On 31 January 2016 at 19:42, Paul F. Sehorne <paul at sehorne.org> wrote:

  Why does OpenSCAD version 2015.03  echo "0" for the code fragment below? Instead of the expected "5".? 
 
 x=0;
 part="test";
 if (part=="test") {x=5;}
 echo (x);
 
 Thanks,
 -- 
 Paul 
_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org




_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160131/dceb865b/attachment.html>

From nop.head at gmail.com  Sun Jan 31 15:02:09 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 31 Jan 2016 20:02:09 +0000
Subject: [OpenSCAD] OpenSCAD IF statement not working
In-Reply-To: <808396790.3079413.1454270326697.JavaMail.yahoo@mail.yahoo.com>
References: <CAEEmnrP4MBfMDFyyLT5tv-nJ_kZ6Ob_knfBAzLzfVQqhF8MPOg@mail.gmail.com>
	<808396790.3079413.1454270326697.JavaMail.yahoo@mail.yahoo.com>
Message-ID: <CAEEmnrMF_OkeMtsdgXrJLNeT8sqRTTw5H9f6mx1ac95T3845dw@mail.gmail.com>

If you do that it will print 0 instead of 5. The OP wanted 5.

On 31 January 2016 at 19:58, fred <fred_dot_u at yahoo.com> wrote:

> I had to swap
> ? 5 : 0
> to read
> ? 0 : 5
> to make it work.
>
>
> On Sunday, January 31, 2016 2:54 PM, nop head <nop.head at gmail.com> wrote:
>
>
> Because the x in {x = 5;} is a new x that masks the global one inside the
> braces.
>
> if (part=="test") {x=5; echo(x);}
>
> will echo 5 but I expect what you actually want is this:
>
> part="test";
> x = (part=="test") ? 5 : 0;
> echo (x);
>
>
>
> On 31 January 2016 at 19:42, Paul F. Sehorne <paul at sehorne.org> wrote:
>
> Why does OpenSCAD version 2015.03 echo "0" for the code fragment below?
> Instead of the expected "5".
>
> x=0;
> part="test";
> if (part=="test") {x=5;}
> echo (x);
>
> Thanks,
> --
> *Paul*
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160131/649febf9/attachment.html>

From oz.at.michael at gmail.com  Sun Jan 31 17:40:49 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sun, 31 Jan 2016 15:40:49 -0700 (MST)
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <1454265242051-15999.post@n5.nabble.com>
References: <1454162690678-15979.post@n5.nabble.com>
	<1454186197963-15983.post@n5.nabble.com>
	<1454248661598-15990.post@n5.nabble.com>
	<CAMyDR6L9mO+HWXweFu_fkxk3==au5cA+G1u-wRVCUSusxKfSYg@mail.gmail.com>
	<1454260206888-15995.post@n5.nabble.com>
	<1454264354336-15996.post@n5.nabble.com>
	<1454265242051-15999.post@n5.nabble.com>
Message-ID: <1454280049987-16004.post@n5.nabble.com>

CGAL is not called all the time in rendering, when t needs to do a boolean it
will be called, hence why each separately is OK.

The carriage STL is bad, it has self intersections
<http://forum.openscad.org/file/n16004/td15979.jpg> 

Netfabb cloud doesn't fix all of them
<http://forum.openscad.org/file/n16004/td15979_fixed_1.jpg> 

A second fix, got the four on the main body, but didn't fix the ones on the
nipple, neither did a third fix.

Meshlab shows
<http://forum.openscad.org/file/n16004/td15979_meshlab2.jpg> 

Needs fixing...



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/dxf-and-stl-import-rendering-issue-tp15979p16004.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sun Jan 31 18:11:29 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sun, 31 Jan 2016 16:11:29 -0700 (MST)
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <1454280049987-16004.post@n5.nabble.com>
References: <1454162690678-15979.post@n5.nabble.com>
	<1454186197963-15983.post@n5.nabble.com>
	<1454248661598-15990.post@n5.nabble.com>
	<CAMyDR6L9mO+HWXweFu_fkxk3==au5cA+G1u-wRVCUSusxKfSYg@mail.gmail.com>
	<1454260206888-15995.post@n5.nabble.com>
	<1454264354336-15996.post@n5.nabble.com>
	<1454265242051-15999.post@n5.nabble.com>
	<1454280049987-16004.post@n5.nabble.com>
Message-ID: <1454281889592-16005.post@n5.nabble.com>

Note that when dealing with STLs it is also good to have a look in
View/Thrown-together
You see strange things, pointing to issues.

Original STL:
<http://forum.openscad.org/file/n16005/Thrown_together.jpg> 



-----
Newly minted Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/dxf-and-stl-import-rendering-issue-tp15979p16005.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From luke.albers at gmail.com  Sun Jan 31 18:28:56 2016
From: luke.albers at gmail.com (lalbers)
Date: Sun, 31 Jan 2016 16:28:56 -0700 (MST)
Subject: [OpenSCAD] dxf and stl import/rendering issue
In-Reply-To: <1454281889592-16005.post@n5.nabble.com>
References: <1454162690678-15979.post@n5.nabble.com>
	<1454186197963-15983.post@n5.nabble.com>
	<1454248661598-15990.post@n5.nabble.com>
	<CAMyDR6L9mO+HWXweFu_fkxk3==au5cA+G1u-wRVCUSusxKfSYg@mail.gmail.com>
	<1454260206888-15995.post@n5.nabble.com>
	<1454264354336-15996.post@n5.nabble.com>
	<1454265242051-15999.post@n5.nabble.com>
	<1454280049987-16004.post@n5.nabble.com>
	<1454281889592-16005.post@n5.nabble.com>
Message-ID: <1454282936430-16006.post@n5.nabble.com>

Thank you very much.  I'm new to all this - just downloaded meshlab and will
see if i can figure out how to fix this STL file.  I don't really need the
zerk fitting on the carriage but it looks cool so if I can save it I will.

I'm curious how the guy with the mac managed to get this to work in openSCAD
without repairing the model 



--
View this message in context: http://forum.openscad.org/dxf-and-stl-import-rendering-issue-tp15979p16006.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


