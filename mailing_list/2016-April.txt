From rcmpersiano at gmail.com  Fri Apr  1 01:03:47 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Fri, 1 Apr 2016 02:03:47 -0300
Subject: [OpenSCAD] Newbie with rotation problem
In-Reply-To: <1459476305077-16876.post@n5.nabble.com>
References: <1459468039500-16873.post@n5.nabble.com>
	<1459476305077-16876.post@n5.nabble.com>
Message-ID: <CA+i9EaCDUDxH8q0prCp9pr0xfBiewVZ9rb2uQcn5GCwe8m9q6Q@mail.gmail.com>

Or:

cylinder(r1=10,r2=0,h=10,$fn=4);
scale([1,1,-1]) cylinder(r1=10,r2=0,h=10,$fn=4);

2016-03-31 23:05 GMT-03:00 Wim ten Brink <openscad at wimtenbrink.nl>:

> Okay, dumb question... There are three axis, thus making 6 points where the
> cube can go through an axis. But the cube has 8 corners so it will never
> touch the axis with all sides...
> So, how to create a shape that does have all corners on an axis? Oh,
> well...
> This is what I was actually looking for:
>
>
> > hull(){
> >   translate([10, 0, 0]) sphere(1);
> >   translate([-10, 0, 0]) sphere(1);
> >   translate([0, 10, 0]) sphere(1);
> >   translate([0, -10, 0]) sphere(1);
> >   translate([0, 0, 10]) sphere(1);
> >   translate([0, 0, -10]) sphere(1);
> > }
>
> Problem solved.
>
>
>
> -----
> With kind regards,
> Wim,
> W.A. ten Brink
> --
> View this message in context:
> http://forum.openscad.org/Newbie-with-rotation-problem-tp16873p16876.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160401/13ba213e/attachment.html>

From macdarren at mac.com  Fri Apr  1 02:02:26 2016
From: macdarren at mac.com (macdarren)
Date: Thu, 31 Mar 2016 23:02:26 -0700 (MST)
Subject: [OpenSCAD] Newbie with rotation problem
In-Reply-To: <CA+i9EaCDUDxH8q0prCp9pr0xfBiewVZ9rb2uQcn5GCwe8m9q6Q@mail.gmail.com>
References: <1459468039500-16873.post@n5.nabble.com>
	<1459476305077-16876.post@n5.nabble.com>
	<CA+i9EaCDUDxH8q0prCp9pr0xfBiewVZ9rb2uQcn5GCwe8m9q6Q@mail.gmail.com>
Message-ID: <1459490546223-16878.post@n5.nabble.com>

Now that is an interesting use of a negative 'scale' never thought to use it
like that...




--
View this message in context: http://forum.openscad.org/Newbie-with-rotation-problem-tp16873p16878.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Fri Apr  1 03:23:10 2016
From: nop.head at gmail.com (nop head)
Date: Fri, 1 Apr 2016 08:23:10 +0100
Subject: [OpenSCAD] Newbie with rotation problem
In-Reply-To: <1459490546223-16878.post@n5.nabble.com>
References: <1459468039500-16873.post@n5.nabble.com>
	<1459476305077-16876.post@n5.nabble.com>
	<CA+i9EaCDUDxH8q0prCp9pr0xfBiewVZ9rb2uQcn5GCwe8m9q6Q@mail.gmail.com>
	<1459490546223-16878.post@n5.nabble.com>
Message-ID: <CAEEmnrNzeSYtLaDkscg=PQJ3br5CpTgctK++QZO8Giesr5QpyQ@mail.gmail.com>

cylinder(r1=10,r2=0,h=10,$fn=4);
mirror([0,0,-1]) cylinder(r1=10,r2=0,h=10,$fn=4);


Is more readable I think.

On 1 April 2016 at 07:02, macdarren <macdarren at mac.com> wrote:

> Now that is an interesting use of a negative 'scale' never thought to use
> it
> like that...
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Newbie-with-rotation-problem-tp16873p16878.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160401/7f67d148/attachment.html>

From openscad at wimtenbrink.nl  Fri Apr  1 04:24:14 2016
From: openscad at wimtenbrink.nl (Wim ten Brink)
Date: Fri, 1 Apr 2016 01:24:14 -0700 (MST)
Subject: [OpenSCAD] Newbie with rotation problem
In-Reply-To: <CA+i9EaCDUDxH8q0prCp9pr0xfBiewVZ9rb2uQcn5GCwe8m9q6Q@mail.gmail.com>
References: <1459468039500-16873.post@n5.nabble.com>
	<1459476305077-16876.post@n5.nabble.com>
	<CA+i9EaCDUDxH8q0prCp9pr0xfBiewVZ9rb2uQcn5GCwe8m9q6Q@mail.gmail.com>
Message-ID: <1459499054224-16880.post@n5.nabble.com>

Nice! Never considered that option. Normally, I expect round objects with
cylinders. :)

Still like my own, though, since I actually want those rounded edges. But
this is something to remember.



-----
With kind regards,
Wim,
W.A. ten Brink
--
View this message in context: http://forum.openscad.org/Newbie-with-rotation-problem-tp16873p16880.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Fri Apr  1 06:19:53 2016
From: doug at moens.org (doug moen)
Date: Fri, 1 Apr 2016 06:19:53 -0400
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459456808622-16865.post@n5.nabble.com>
References: <1459290781849-16803.post@n5.nabble.com>
	<1459304450276-16808.post@n5.nabble.com>
	<1459367132624-16827.post@n5.nabble.com>
	<1459376204643-16832.post@n5.nabble.com>
	<1459387896644-16837.post@n5.nabble.com>
	<1459445142947-16852.post@n5.nabble.com>
	<1459445876965-16853.post@n5.nabble.com>
	<1459449279317-16859.post@n5.nabble.com>
	<1459453686023-16863.post@n5.nabble.com>
	<3DD3E413-9968-4392-B234-BA7B15DEBBDE@gmail.com>
	<1459456808622-16865.post@n5.nabble.com>
Message-ID: <CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>

Parkinbot wrote:

> OpenSCAD is not well enough equipped for implementing iterative solutions.
> You have random read access
> to vector elements, but a random write forces you to do a full copy of the
> whole structure. You can't break a for loop, have no while loop, can't even
> sum up anything within a for loop - the only way: do it recusively. The
> full
> curse of functional programming :-)
>

Thanks for pointing this out. General purpose functional languages have a
better set of control structures, and can efficiently update a single
element of an array. It would be reasonable to add array update to
OpenSCAD. We just need a good syntax. I'll think about this.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160401/1bcac349/attachment.html>

From nop.head at gmail.com  Fri Apr  1 06:31:26 2016
From: nop.head at gmail.com (nop head)
Date: Fri, 1 Apr 2016 11:31:26 +0100
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
References: <1459290781849-16803.post@n5.nabble.com>
	<1459304450276-16808.post@n5.nabble.com>
	<1459367132624-16827.post@n5.nabble.com>
	<1459376204643-16832.post@n5.nabble.com>
	<1459387896644-16837.post@n5.nabble.com>
	<1459445142947-16852.post@n5.nabble.com>
	<1459445876965-16853.post@n5.nabble.com>
	<1459449279317-16859.post@n5.nabble.com>
	<1459453686023-16863.post@n5.nabble.com>
	<3DD3E413-9968-4392-B234-BA7B15DEBBDE@gmail.com>
	<1459456808622-16865.post@n5.nabble.com>
	<CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
Message-ID: <CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>

How do you update an array element without mutable data?

On 1 April 2016 at 11:19, doug moen <doug at moens.org> wrote:

> Parkinbot wrote:
>
>> OpenSCAD is not well enough equipped for implementing iterative
>> solutions. You have random read access
>> to vector elements, but a random write forces you to do a full copy of the
>> whole structure. You can't break a for loop, have no while loop, can't
>> even
>> sum up anything within a for loop - the only way: do it recusively. The
>> full
>> curse of functional programming :-)
>>
>
> Thanks for pointing this out. General purpose functional languages have a
> better set of control structures, and can efficiently update a single
> element of an array. It would be reasonable to add array update to
> OpenSCAD. We just need a good syntax. I'll think about this.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160401/1a882154/attachment.html>

From nageswararao.dasari at outlook.com  Fri Apr  1 06:33:18 2016
From: nageswararao.dasari at outlook.com (Nageswara rao)
Date: Fri, 1 Apr 2016 03:33:18 -0700 (MST)
Subject: [OpenSCAD] How to write a texture to a face(Solid ) in a
	geometric model
In-Reply-To: <1459388911725-16838.post@n5.nabble.com>
References: <1458886676252-16718.post@n5.nabble.com>
	<1459014497788-16734.post@n5.nabble.com>
	<1459057099123-16744.post@n5.nabble.com>
	<1459166106987-16758.post@n5.nabble.com>
	<1459210288006-16779.post@n5.nabble.com>
	<1459214600222-16785.post@n5.nabble.com>
	<1459259381922-16793.post@n5.nabble.com>
	<1459297290586-16805.post@n5.nabble.com>
	<1459359105797-16825.post@n5.nabble.com>
	<1459388911725-16838.post@n5.nabble.com>
Message-ID: <1459506798880-16883.post@n5.nabble.com>

The STL mode surface is not flat.is it possible in openscad to wrap(2d
polygon) on uneven 3d surface.? Can anyone provide a solution?



--
View this message in context: http://forum.openscad.org/How-to-write-a-texture-to-a-face-Solid-in-a-geometric-model-tp16718p16883.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrew at plumb.org  Fri Apr  1 06:45:38 2016
From: andrew at plumb.org (Andrew Plumb)
Date: Fri, 1 Apr 2016 06:45:38 -0400
Subject: [OpenSCAD] How to write a texture to a face(Solid ) in a
	geometric model
In-Reply-To: <1459506798880-16883.post@n5.nabble.com>
References: <1458886676252-16718.post@n5.nabble.com>
	<1459014497788-16734.post@n5.nabble.com>
	<1459057099123-16744.post@n5.nabble.com>
	<1459166106987-16758.post@n5.nabble.com>
	<1459210288006-16779.post@n5.nabble.com>
	<1459214600222-16785.post@n5.nabble.com>
	<1459259381922-16793.post@n5.nabble.com>
	<1459297290586-16805.post@n5.nabble.com>
	<1459359105797-16825.post@n5.nabble.com>
	<1459388911725-16838.post@n5.nabble.com>
	<1459506798880-16883.post@n5.nabble.com>
Message-ID: <C5BCCF4D-7E74-4EAF-91B8-5882E63822C8@plumb.org>

While not truly wrapping/mapping it onto the surface, you can geometrically generate a masking shape to selectively intersect with other geometry:

https://github.com/clothbot/ClothBotCreations/blob/master/utilities/directed_minkowski.scad <https://github.com/clothbot/ClothBotCreations/blob/master/utilities/directed_minkowski.scad>

https://github.com/clothbot/ClothBotCreations/blob/master/utilities/directed_minkowski_grid.png <https://github.com/clothbot/ClothBotCreations/blob/master/utilities/directed_minkowski_grid.png>

In a nutshell, you use minkowski() to grow your target shape by a simple centered cube or sphere, intersect that with your mapping geometry, then union the intersection with the original object.

My little ?directed_minkowski? example is one way to control which ?side? the mapping happens, so you don?t get mirrored shape on the back-side.

Andrew.


> On Apr 1, 2016, at 6:33 AM, Nageswara rao <nageswararao.dasari at outlook.com> wrote:
> 
> The STL mode surface is not flat.is it possible in openscad to wrap(2d
> polygon) on uneven 3d surface.? Can anyone provide a solution?
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/How-to-write-a-texture-to-a-face-Solid-in-a-geometric-model-tp16718p16883.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

--

"The future is already here.  It's just not very evenly distributed" -- William Gibson

Me: http://clothbot.com/wiki/ <http://clothbot.com/wiki/>



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160401/8c013a3c/attachment.html>

From doug at moens.org  Fri Apr  1 06:52:04 2016
From: doug at moens.org (doug moen)
Date: Fri, 1 Apr 2016 06:52:04 -0400
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
References: <1459290781849-16803.post@n5.nabble.com>
	<1459304450276-16808.post@n5.nabble.com>
	<1459367132624-16827.post@n5.nabble.com>
	<1459376204643-16832.post@n5.nabble.com>
	<1459387896644-16837.post@n5.nabble.com>
	<1459445142947-16852.post@n5.nabble.com>
	<1459445876965-16853.post@n5.nabble.com>
	<1459449279317-16859.post@n5.nabble.com>
	<1459453686023-16863.post@n5.nabble.com>
	<3DD3E413-9968-4392-B234-BA7B15DEBBDE@gmail.com>
	<1459456808622-16865.post@n5.nabble.com>
	<CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
Message-ID: <CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>

Abstractly, we could provide a function upd(a,i,x) where a is an array, i
is an index, and x is the new value to store in a[i]. The result is a copy
of a in which a[i] is set to x.

There are various ways to implement this efficiently. There is a field of
study called "functional data structures" which provides solutions. In the
OpenSCAD implementation, values are reference counted. A simple approach is
to check if a has a reference count of 1: If so, we destructively update a,
and return it. If not, we return a copy of a with element i changed to x.
That would be good enough.

On 1 April 2016 at 06:31, nop head <nop.head at gmail.com> wrote:

> How do you update an array element without mutable data?
>
> On 1 April 2016 at 11:19, doug moen <doug at moens.org> wrote:
>
>> Parkinbot wrote:
>>
>>> OpenSCAD is not well enough equipped for implementing iterative
>>> solutions. You have random read access
>>> to vector elements, but a random write forces you to do a full copy of
>>> the
>>> whole structure. You can't break a for loop, have no while loop, can't
>>> even
>>> sum up anything within a for loop - the only way: do it recusively. The
>>> full
>>> curse of functional programming :-)
>>>
>>
>> Thanks for pointing this out. General purpose functional languages have a
>> better set of control structures, and can efficiently update a single
>> element of an array. It would be reasonable to add array update to
>> OpenSCAD. We just need a good syntax. I'll think about this.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160401/8a1a0951/attachment.html>

From nop.head at gmail.com  Fri Apr  1 07:15:14 2016
From: nop.head at gmail.com (nop head)
Date: Fri, 1 Apr 2016 12:15:14 +0100
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
References: <1459290781849-16803.post@n5.nabble.com>
	<1459304450276-16808.post@n5.nabble.com>
	<1459367132624-16827.post@n5.nabble.com>
	<1459376204643-16832.post@n5.nabble.com>
	<1459387896644-16837.post@n5.nabble.com>
	<1459445142947-16852.post@n5.nabble.com>
	<1459445876965-16853.post@n5.nabble.com>
	<1459449279317-16859.post@n5.nabble.com>
	<1459453686023-16863.post@n5.nabble.com>
	<3DD3E413-9968-4392-B234-BA7B15DEBBDE@gmail.com>
	<1459456808622-16865.post@n5.nabble.com>
	<CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
Message-ID: <CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>

I see, so fine to mutate variables as long as no other references exist.

Unless it is a literal or a temporary expression result, won't it always be
bound to at least a local variable?

When calling a function and passing a variable as an argument you would
need look ahead and see that the variable was not used again and then
decrement the reference count artificially early.

On 1 April 2016 at 11:52, doug moen <doug at moens.org> wrote:

> Abstractly, we could provide a function upd(a,i,x) where a is an array, i
> is an index, and x is the new value to store in a[i]. The result is a copy
> of a in which a[i] is set to x.
>
> There are various ways to implement this efficiently. There is a field of
> study called "functional data structures" which provides solutions. In the
> OpenSCAD implementation, values are reference counted. A simple approach is
> to check if a has a reference count of 1: If so, we destructively update a,
> and return it. If not, we return a copy of a with element i changed to x.
> That would be good enough.
>
> On 1 April 2016 at 06:31, nop head <nop.head at gmail.com> wrote:
>
>> How do you update an array element without mutable data?
>>
>> On 1 April 2016 at 11:19, doug moen <doug at moens.org> wrote:
>>
>>> Parkinbot wrote:
>>>
>>>> OpenSCAD is not well enough equipped for implementing iterative
>>>> solutions. You have random read access
>>>> to vector elements, but a random write forces you to do a full copy of
>>>> the
>>>> whole structure. You can't break a for loop, have no while loop, can't
>>>> even
>>>> sum up anything within a for loop - the only way: do it recusively. The
>>>> full
>>>> curse of functional programming :-)
>>>>
>>>
>>> Thanks for pointing this out. General purpose functional languages have
>>> a better set of control structures, and can efficiently update a single
>>> element of an array. It would be reasonable to add array update to
>>> OpenSCAD. We just need a good syntax. I'll think about this.
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160401/e5b3a866/attachment.html>

From rudolf at parkinbot.com  Fri Apr  1 08:15:31 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 1 Apr 2016 05:15:31 -0700 (MST)
Subject: [OpenSCAD] How to write a texture to a face(Solid ) in a
	geometric model
In-Reply-To: <1459506798880-16883.post@n5.nabble.com>
References: <1459014497788-16734.post@n5.nabble.com>
	<1459057099123-16744.post@n5.nabble.com>
	<1459166106987-16758.post@n5.nabble.com>
	<1459210288006-16779.post@n5.nabble.com>
	<1459214600222-16785.post@n5.nabble.com>
	<1459259381922-16793.post@n5.nabble.com>
	<1459297290586-16805.post@n5.nabble.com>
	<1459359105797-16825.post@n5.nabble.com>
	<1459388911725-16838.post@n5.nabble.com>
	<1459506798880-16883.post@n5.nabble.com>
Message-ID: <1459512931393-16887.post@n5.nabble.com>

There is no (trivial) solution for that. OpenSCAD is not equipped for this
and the task is NOT just a snip with two fingers. 

You better switch to Blender, 3s Max or a product that supports texturing
first hand. 




--
View this message in context: http://forum.openscad.org/How-to-write-a-texture-to-a-face-Solid-in-a-geometric-model-tp16718p16887.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Fri Apr  1 08:57:31 2016
From: doug at moens.org (doug moen)
Date: Fri, 1 Apr 2016 08:57:31 -0400
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
References: <1459290781849-16803.post@n5.nabble.com>
	<1459304450276-16808.post@n5.nabble.com>
	<1459367132624-16827.post@n5.nabble.com>
	<1459376204643-16832.post@n5.nabble.com>
	<1459387896644-16837.post@n5.nabble.com>
	<1459445142947-16852.post@n5.nabble.com>
	<1459445876965-16853.post@n5.nabble.com>
	<1459449279317-16859.post@n5.nabble.com>
	<1459453686023-16863.post@n5.nabble.com>
	<3DD3E413-9968-4392-B234-BA7B15DEBBDE@gmail.com>
	<1459456808622-16865.post@n5.nabble.com>
	<CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
Message-ID: <CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>

@nop.head: Yes, those are good points. Testing if a variable isn't
referenced again is a standard operation in an optimizing compiler. It
could also be used to optimize away unnecessary reference count
manipulations in function calls. If you are calling f(x), and there are no
further references to x, then you could eliminate an increment of x's
reference count when f is called, and a decrement of x's reference count
after f returns. These optimizations would be easier to implement if we had
a compiler.



On 1 April 2016 at 07:15, nop head <nop.head at gmail.com> wrote:

> I see, so fine to mutate variables as long as no other references exist.
>
> Unless it is a literal or a temporary expression result, won't it always
> be bound to at least a local variable?
>
> When calling a function and passing a variable as an argument you would
> need look ahead and see that the variable was not used again and then
> decrement the reference count artificially early.
>
> On 1 April 2016 at 11:52, doug moen <doug at moens.org> wrote:
>
>> Abstractly, we could provide a function upd(a,i,x) where a is an array, i
>> is an index, and x is the new value to store in a[i]. The result is a copy
>> of a in which a[i] is set to x.
>>
>> There are various ways to implement this efficiently. There is a field of
>> study called "functional data structures" which provides solutions. In the
>> OpenSCAD implementation, values are reference counted. A simple approach is
>> to check if a has a reference count of 1: If so, we destructively update a,
>> and return it. If not, we return a copy of a with element i changed to x.
>> That would be good enough.
>>
>> On 1 April 2016 at 06:31, nop head <nop.head at gmail.com> wrote:
>>
>>> How do you update an array element without mutable data?
>>>
>>> On 1 April 2016 at 11:19, doug moen <doug at moens.org> wrote:
>>>
>>>> Parkinbot wrote:
>>>>
>>>>> OpenSCAD is not well enough equipped for implementing iterative
>>>>> solutions. You have random read access
>>>>> to vector elements, but a random write forces you to do a full copy of
>>>>> the
>>>>> whole structure. You can't break a for loop, have no while loop, can't
>>>>> even
>>>>> sum up anything within a for loop - the only way: do it recusively.
>>>>> The full
>>>>> curse of functional programming :-)
>>>>>
>>>>
>>>> Thanks for pointing this out. General purpose functional languages have
>>>> a better set of control structures, and can efficiently update a single
>>>> element of an array. It would be reasonable to add array update to
>>>> OpenSCAD. We just need a good syntax. I'll think about this.
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160401/a641ea39/attachment.html>

From rudolf at parkinbot.com  Fri Apr  1 10:37:41 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 1 Apr 2016 07:37:41 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
References: <1459445876965-16853.post@n5.nabble.com>
	<1459449279317-16859.post@n5.nabble.com>
	<1459453686023-16863.post@n5.nabble.com>
	<3DD3E413-9968-4392-B234-BA7B15DEBBDE@gmail.com>
	<1459456808622-16865.post@n5.nabble.com>
	<CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
Message-ID: <1459521461909-16889.post@n5.nabble.com>

Would it be such an offense to the functional paradigma of OpenSCAD, which I
guess makes a lot of sense for CSG, but not at all for number crunching, to
allow value altering for local variables within function scope? 





--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16889.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Fri Apr  1 14:47:32 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Fri, 1 Apr 2016 15:47:32 -0300
Subject: [OpenSCAD] Newbie with rotation problem
In-Reply-To: <1459499054224-16880.post@n5.nabble.com>
References: <1459468039500-16873.post@n5.nabble.com>
	<1459476305077-16876.post@n5.nabble.com>
	<CA+i9EaCDUDxH8q0prCp9pr0xfBiewVZ9rb2uQcn5GCwe8m9q6Q@mail.gmail.com>
	<1459499054224-16880.post@n5.nabble.com>
Message-ID: <CA+i9EaD4fsAr-LG0-DWa_VbaozeFXztsEGoe8LG+04Gje37raA@mail.gmail.com>

Rounded

hull() {
   sphere(1);
    union() {
   cylinder(r1=10,r2=0,h=10,$fn=4);
   mirror([0,0,-1]) cylinder(r1=10,r2=0,h=10,$fn=4);
  }
}

2016-04-01 5:24 GMT-03:00 Wim ten Brink <openscad at wimtenbrink.nl>:

> Nice! Never considered that option. Normally, I expect round objects with
> cylinders. :)
>
> Still like my own, though, since I actually want those rounded edges. But
> this is something to remember.
>
>
>
> -----
> With kind regards,
> Wim,
> W.A. ten Brink
> --
> View this message in context:
> http://forum.openscad.org/Newbie-with-rotation-problem-tp16873p16880.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160401/f24e6d28/attachment.html>

From jpmendes54 at gmail.com  Fri Apr  1 15:10:19 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Fri, 1 Apr 2016 12:10:19 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459521461909-16889.post@n5.nabble.com>
References: <1459449279317-16859.post@n5.nabble.com>
	<1459453686023-16863.post@n5.nabble.com>
	<3DD3E413-9968-4392-B234-BA7B15DEBBDE@gmail.com>
	<1459456808622-16865.post@n5.nabble.com>
	<CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
Message-ID: <1459537819457-16892.post@n5.nabble.com>

My vote is in favor. OpenSCAD is a bit more than geometry and topology. In
animation for instance, to produce in an easy way good animated sequences we
need to make state machines and record events.
I know this is not the object of the language, but why not extend it to
facilitate and stimulate creativity. Most of users are not MScs or Phds
searching for the optimal way to produce great geometrical creations. Of 
course this aspect is important as it is related with the main goal of the
language. However the popularity of the language in which users have a
fundamental role would be augmented if some new language tools could
facilitate their expression.  As an example, some  contributors offer great
libraries that most of us can't use because the most common of us don't
understand it and in it's majority, documentation is scarse. OpenSCAD is
becoming more popular and one of it's strengths is the easy way one can
express some creativity at its own level of knowledge.

jpmendes


  



--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16892.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Fri Apr  1 15:11:53 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Fri, 1 Apr 2016 12:11:53 -0700 (MST)
Subject: [OpenSCAD] Newbie with rotation problem
In-Reply-To: <CA+i9EaD4fsAr-LG0-DWa_VbaozeFXztsEGoe8LG+04Gje37raA@mail.gmail.com>
References: <1459468039500-16873.post@n5.nabble.com>
	<1459476305077-16876.post@n5.nabble.com>
	<CA+i9EaCDUDxH8q0prCp9pr0xfBiewVZ9rb2uQcn5GCwe8m9q6Q@mail.gmail.com>
	<1459499054224-16880.post@n5.nabble.com>
	<CA+i9EaD4fsAr-LG0-DWa_VbaozeFXztsEGoe8LG+04Gje37raA@mail.gmail.com>
Message-ID: <1459537913730-16893.post@n5.nabble.com>

Sorry. That is what I mean:

minkowski() {
    sphere(1);
    union() {
      cylinder(r1=10,r2=0,h=10,$fn=4);
      mirror([0,0,-1]) cylinder(r1=10,r2=0,h=10,$fn=4);
    }
}



--
View this message in context: http://forum.openscad.org/Newbie-with-rotation-problem-tp16873p16893.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From macdarren at mac.com  Fri Apr  1 15:14:39 2016
From: macdarren at mac.com (macdarren)
Date: Fri, 1 Apr 2016 12:14:39 -0700 (MST)
Subject: [OpenSCAD] Newbie with rotation problem
In-Reply-To: <CA+i9EaD4fsAr-LG0-DWa_VbaozeFXztsEGoe8LG+04Gje37raA@mail.gmail.com>
References: <1459468039500-16873.post@n5.nabble.com>
	<1459476305077-16876.post@n5.nabble.com>
	<CA+i9EaCDUDxH8q0prCp9pr0xfBiewVZ9rb2uQcn5GCwe8m9q6Q@mail.gmail.com>
	<1459499054224-16880.post@n5.nabble.com>
	<CA+i9EaD4fsAr-LG0-DWa_VbaozeFXztsEGoe8LG+04Gje37raA@mail.gmail.com>
Message-ID: <1459538079219-16894.post@n5.nabble.com>

huh...that last doesn't work for me at all...I can kinda round part of the
primary object if I translate the sphere out to the coroner of the object
but still it only rounds part of it...

I admit I don't know much about full, so maybe there is some way to make it
work over the entire thing.
To my mind I would need a sphere at each vertex.

maybe minkowski() instead of hull()?




--
View this message in context: http://forum.openscad.org/Newbie-with-rotation-problem-tp16873p16894.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Fri Apr  1 15:31:29 2016
From: nop.head at gmail.com (nop head)
Date: Fri, 1 Apr 2016 20:31:29 +0100
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459537819457-16892.post@n5.nabble.com>
References: <1459449279317-16859.post@n5.nabble.com>
	<1459453686023-16863.post@n5.nabble.com>
	<3DD3E413-9968-4392-B234-BA7B15DEBBDE@gmail.com>
	<1459456808622-16865.post@n5.nabble.com>
	<CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
Message-ID: <CAEEmnrNchi5uCVj4YtYV6GLztgxid_77NH_6DLUCni0jnyg5sQ@mail.gmail.com>

You don't need state to produce animation sequences. I once designed an
animation system that had to synchronise across lots of adjacent machines
that were connected to their left and right neighbours. From that they
could decide where they were and in the row, how long the row was and the
most left one passed a time variable up stream. From that any arbitrary
animation sequence were run. You simply have to divide down the time
variable to work out what state you are in if your animation has states.

If you want to write in a procedural language why not use the Python
binding, or the C++ binding, or Angel script, etc.

On 1 April 2016 at 20:10, jpmendes <jpmendes54 at gmail.com> wrote:

> My vote is in favor. OpenSCAD is a bit more than geometry and topology. In
> animation for instance, to produce in an easy way good animated sequences
> we
> need to make state machines and record events.
> I know this is not the object of the language, but why not extend it to
> facilitate and stimulate creativity. Most of users are not MScs or Phds
> searching for the optimal way to produce great geometrical creations. Of
> course this aspect is important as it is related with the main goal of the
> language. However the popularity of the language in which users have a
> fundamental role would be augmented if some new language tools could
> facilitate their expression.  As an example, some  contributors offer great
> libraries that most of us can't use because the most common of us don't
> understand it and in it's majority, documentation is scarse. OpenSCAD is
> becoming more popular and one of it's strengths is the easy way one can
> express some creativity at its own level of knowledge.
>
> jpmendes
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16892.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160401/b49ebd26/attachment.html>

From arnholm at arnholm.org  Fri Apr  1 15:45:08 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Fri, 1 Apr 2016 21:45:08 +0200
Subject: [OpenSCAD] Newbie with rotation problem
In-Reply-To: <1459537913730-16893.post@n5.nabble.com>
References: <1459468039500-16873.post@n5.nabble.com>
	<1459476305077-16876.post@n5.nabble.com>
	<CA+i9EaCDUDxH8q0prCp9pr0xfBiewVZ9rb2uQcn5GCwe8m9q6Q@mail.gmail.com>
	<1459499054224-16880.post@n5.nabble.com>
	<CA+i9EaD4fsAr-LG0-DWa_VbaozeFXztsEGoe8LG+04Gje37raA@mail.gmail.com>
	<1459537913730-16893.post@n5.nabble.com>
Message-ID: <56FECFC4.1090502@arnholm.org>

On 01. april 2016 21:11, Ronaldo wrote:
> Sorry. That is what I mean:
>
> minkowski() {
>      sphere(1);
>      union() {
>        cylinder(r1=10,r2=0,h=10,$fn=4);
>        mirror([0,0,-1]) cylinder(r1=10,r2=0,h=10,$fn=4);
>      }
> }

Interesting ... so minkowski does not really care about the 
specification of the object type (cylinder), only the discretized result.

It appears to me to be a major hack to use cylinder to specify a cone 
which becomes a pyramid and then use minkowski on that....

Carsten Arnholm



From jpmendes54 at gmail.com  Fri Apr  1 16:15:45 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Fri, 1 Apr 2016 13:15:45 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <CAEEmnrNchi5uCVj4YtYV6GLztgxid_77NH_6DLUCni0jnyg5sQ@mail.gmail.com>
References: <3DD3E413-9968-4392-B234-BA7B15DEBBDE@gmail.com>
	<1459456808622-16865.post@n5.nabble.com>
	<CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<CAEEmnrNchi5uCVj4YtYV6GLztgxid_77NH_6DLUCni0jnyg5sQ@mail.gmail.com>
Message-ID: <1459541745786-16897.post@n5.nabble.com>

Although strictly not necessary it helps a lot. Specially if we want to keep
track of object mutual interference. Maybe a mathematician can describe a
path for objects interfering with each other and predict the time for the
occurrences, but it is much simpler to record those events. As this is an
off topic let's stop for now. Thanks for the suggestion I will think more
about it.

jpmendes






--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16897.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Fri Apr  1 16:19:05 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Fri, 1 Apr 2016 13:19:05 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459537819457-16892.post@n5.nabble.com>
References: <1459453686023-16863.post@n5.nabble.com>
	<3DD3E413-9968-4392-B234-BA7B15DEBBDE@gmail.com>
	<1459456808622-16865.post@n5.nabble.com>
	<CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
Message-ID: <1459541945769-16898.post@n5.nabble.com>

I think I have a full functional implementation of a O(n^3) ear-cutting
method to triangulate 2D simple polygon. I addopted the data structure
Parkinbot suggested to output the triangles as lists of the indices in the
array of vertices. The code is relatively simple:


> // *************  2D triangulation of a polygon  ********************
> // triangulate the 2D polygon lp
> function triangulate(lp) = triangs(build_data(lp));
>          
> function triangs(lsp) = // traiangulate structured 2D polygon
>   len(lsp) <= 3 ?
>     [ [ind(lsp[0]), ind(lsp[1]), ind(lsp[2])] ]: 
>     let( ear = any_ear(lsp), l = len(lsp) ) 
>     ear== undef? [] : // case S is a non-simple polygon
>     concat( [ [ ind(lsp[(ear+l-1)%l]), ind(lsp[ear]), ind(lsp[(ear+1)%l])
> ] ],
>             triangs(exclude_vertex(ear, lsp)) );
>          
> // small data structure to preserve original indexing of points        
> function build_data(lp) = [ for(i=[0:len(lp)-1]) [ i, lp[i] ] ];
> function ind(sp) = sp[0];
> function vtx(sp) = sp[1];
> 
> function exclude_vertex(k,lsp) = 
>     concat( k<=0?          []: [for(i=[0  :k-1])       lsp[i] ] ,
>             k>=len(lsp)-1? []: [for(i=[k+1:len(lsp)-1]) lsp[i] ] );
>               
> // find the index of the best ear according to inner angle criterium
> function any_ear(lsp) =  
>      let( l    = len(lsp) )
>      [ for(j=[0:l-1]) if( is_ear(j, lsp) ) j ] [0];
>        
> // false if vtx(lsp[k1]) not convex or 
> // any other point of lsp is inside the triangle
> function is_ear(k1,lsp) = 
>    let( l = len(lsp), k0 = (k1+l-1)%l, k2 = (k1+1)%l )
>    !is_left(vtx(lsp[k1]), vtx(lsp[k0]), vtx(lsp[k2])) // vtx(lsp[k1]) is
> convex
>    && void( [ for(i=[0:l-1])          // and other vertices are outside
>                 if( (i!=k0) && (i!=k1) && (i!=k2)  && 
>                    is_left(vtx(lsp[k0]), vtx(lsp[k1]), vtx(lsp[i]))  && 
>                    is_left(vtx(lsp[k1]), vtx(lsp[k2]), vtx(lsp[i]))  && 
>                    is_left(vtx(lsp[k2]), vtx(lsp[k0]), vtx(lsp[i])))  1 ]
> ) ; 
> // true if vtx(sp3) is at left or is colinear to the vector
> vtx(sp2)-vtx(sp1) 
>                 
> function is_left(a, b, c) = 
>     (b[0] - a[0])*(c[1] - a[1]) - (b[1] - a[1])*(c[0] - a[0]) <= 0 ;
> 
> function void(lst) = len(lst)==0 ;

For almost planar closed polygonals in the 3D space, I do a plane fitting to
the vertices, project them into the plane and define a local 2D coordinate
system before the triangulation. This process is entirely independent of the
triangulation above:


> // ******* plane fitting and projection ***************
> function project_poly(lp3D) =
>     let( leigen     = least_square_transform_3(lp3D),
>          pm         = leigen[0],  // mean point
>          eigenv     = leigen[1],  // eigenvectors
>          projection = [ eigenv[0], eigenv[1] ], // projection transform
>          lproj2D    = [ for(i=[0:len(lp3D)-1]) projection*(lp3D[i]-pm) ] ) 
>     is_CCW(lproj2D) ? 
>         lproj2D*[ [-1,0],[0,1] ] : 
>         lproj2D;
> 
> // check whether the orientation induced by projection is CCW    
> function is_CCW(lp) = 
>     let( bd = bounds(lp),
>          im = index_min(bd) ) // the index of the smaller index in bd
>         ( bd[im]       <= bd[(im+1)%4] ) 
>      && ( bd[(im+1)%4] <= bd[(im+2)%4] ) 
>      && ( bd[(im+2)%4] <= bd[(im+3)%4] ) ;
>          
> // indices of extreme points of p
> function bounds(lp) = 
>     let( indminX = index_min( lp*[ 1, 0]), indmaxX = index_min( lp*[-1,
> 0]),
>          indminY = index_min( lp*[ 0, 1]), indmaxY = index_min( lp*[
> 0,-1]) )
>     [ indminX, indminY, indmaxX, indmaxY ]; // this order is essential
>     
> // the index of the smaller value in the list l
> function index_min(l) = let( minv = min(l) )
>   [ for(i=[0:len(l)-1]) if ( l[i] == minv ) i ][0];

As you can see, the CCW orientation of the vertices is ensured by a well
chosen projection. The data fitting relies on the
least_square_transform_3(). That function returns the three pairs of
eigenvalue/eigenvector of the covariance matrix of the points. As those
functions may be used by other applications, I kept them in a file with
other linear algebra stuffs. This file may be retrived bellow:

linear_algebra.scad
<http://forum.openscad.org/file/n16898/linear_algebra.scad>  

To improve the time complexity of the method for triangulation of the simple
polygon, we need to find an ear in constant time. There is solutions to that
but it requires more sophisticated data structure. I will not do it now, may
be later. Now I will return to the application that demanded the
triangulation.




--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16898.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Fri Apr  1 16:51:12 2016
From: nop.head at gmail.com (nop head)
Date: Fri, 1 Apr 2016 21:51:12 +0100
Subject: [OpenSCAD] Newbie with rotation problem
In-Reply-To: <56FECFC4.1090502@arnholm.org>
References: <1459468039500-16873.post@n5.nabble.com>
	<1459476305077-16876.post@n5.nabble.com>
	<CA+i9EaCDUDxH8q0prCp9pr0xfBiewVZ9rb2uQcn5GCwe8m9q6Q@mail.gmail.com>
	<1459499054224-16880.post@n5.nabble.com>
	<CA+i9EaD4fsAr-LG0-DWa_VbaozeFXztsEGoe8LG+04Gje37raA@mail.gmail.com>
	<1459537913730-16893.post@n5.nabble.com>
	<56FECFC4.1090502@arnholm.org>
Message-ID: <CAEEmnrPOs=DgPs0DiBHK=AxqN+B8VTAkjSbvHErFne3dmFoi9w@mail.gmail.com>

There are no true spheres, cylinders, circles or curves in OpenScad once
the renderings starts. All the geometry is represented by polygons and
polyhedra.

On 1 April 2016 at 20:45, Carsten Arnholm <arnholm at arnholm.org> wrote:

> On 01. april 2016 21:11, Ronaldo wrote:
>
>> Sorry. That is what I mean:
>>
>> minkowski() {
>>      sphere(1);
>>      union() {
>>        cylinder(r1=10,r2=0,h=10,$fn=4);
>>        mirror([0,0,-1]) cylinder(r1=10,r2=0,h=10,$fn=4);
>>      }
>> }
>>
>
> Interesting ... so minkowski does not really care about the specification
> of the object type (cylinder), only the discretized result.
>
> It appears to me to be a major hack to use cylinder to specify a cone
> which becomes a pyramid and then use minkowski on that....
>
> Carsten Arnholm
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160401/011b5574/attachment.html>

From rudolf at parkinbot.com  Fri Apr  1 17:12:04 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 1 Apr 2016 14:12:04 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459541945769-16898.post@n5.nabble.com>
References: <3DD3E413-9968-4392-B234-BA7B15DEBBDE@gmail.com>
	<1459456808622-16865.post@n5.nabble.com>
	<CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
Message-ID: <1459545124023-16900.post@n5.nabble.com>

Ronaldo, if you are interested, this is my implementation of the subdivision
algorithm. 
This time I combined cycle and split to avoid an extra copy. 
I works as expected, but not on all generated polygons. I suspect, now is
not the generator, but the algorithm freaking out on rare occasions. Don't
have the time, to find out the reason, without a debugging facility. I
testet the predicates and functions and gave some test code for them. 
Maybe four eyes see more than two ... 


> N = 19;
> p = randpolyg(N); // too easy to be perfect
> q = triag_div(p);
> for (i=[0:len(q)-1]) color([i,i,i]/(N)) polygon(q[i]); translate([0,
> 0,-1]) polygon(p);
> 
> // testing of the subfunctions
> echo(is_left([0,0], [1,1], [2,3])); // true
> echo(is_left([0,0], [1,1], [3,1])); // false
> echo(is_in([[0,0], [1,1], [4,3]], [2,2])); // false
> echo(is_in([[0,0], [1,1], [4,3]], [1.1,1])); // true
> echo(split([1,2,3,4]));    //        [[1, 2, 3], [3, 4, 1]]
> echo(split([1,2,3,4], 1)); //+cycle  [[2, 3, 4], [4, 1, 2]]
> echo(split([1,2,3,4,5]));       // [[1, 2, 3], [3, 4, 5, 1]]
> echo(split([1,2,3,4,5, 6]));    // [[1, 2, 3, 4], [4, 5, 6, 1]]
> 
> 
> // generate a randomized CW polygon 
> function randpolyg(N=10) = [for (i=[0:360/N:359.9])
>    let (rnd = rands(5,10,2)) [rnd[0]*sin(i), rnd[1]*cos(i)]];
> 
> // the main algorithm
> function triag_div(S, cycle=0) =
>   len(S)==3? [S]:  
>       let(A = split(S, cycle))
>         is_division(A) ? 
>           concat(
>              triag_div(A[0]),
>              triag_div(A[1]))
>           :triag_div(S, cycle+1); 
> 
> // split a polygon in the middle after cycling
> function split(S, cycle=0) = let (n=len(S), cut=floor(n/2))
>   [[for(i=[0:cut]) S[(i+cycle)%n]], [for(i=[cut:n]) S[(i+cycle)%n]]];
> 
> // true, if all points of first set outside of second set 
> //      and all points of second set outside of first set
> function is_division(A) = 
>      let (res1 = [for(i=[1:len(A[0])-2]) if(is_in(A[1], A[0][i])) 1])
>      let (res2 = [for(i=[1:len(A[1])-2]) if(is_in(A[0], A[1][i])) 1])
>     res1==[] && res2==[];
> 
> // true if p is in A
> function is_in(A, p) = let(n=len(A)) let(res = 
>      [for(i=[0:n-1]) if(is_left(A[i], A[(i+1)%n], p)) 1])
>        res==[]; 
> 
> // true if c is left of a--->b
> function is_left(a, b, c) = 
>     (b[0] - a[0])*(c[1] - a[1]) - (b[1] - a[1])*(c[0] - a[0]) > 0; 





--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16900.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From simonhowarth at sanuti.com  Fri Apr  1 18:20:54 2016
From: simonhowarth at sanuti.com (Simon Howarth)
Date: Fri, 1 Apr 2016 15:20:54 -0700 (MST)
Subject: [OpenSCAD] Involute curves...oops
In-Reply-To: <1459537571847-16891.post@n5.nabble.com>
References: <1459537571847-16891.post@n5.nabble.com>
Message-ID: <1459549254778-16902.post@n5.nabble.com>

there is an error in the y function which should be multiplied by r as in the
x function!



--
View this message in context: http://forum.openscad.org/Involute-curves-tp16891p16902.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From openscad at wimtenbrink.nl  Fri Apr  1 18:51:56 2016
From: openscad at wimtenbrink.nl (Wim ten Brink)
Date: Fri, 1 Apr 2016 15:51:56 -0700 (MST)
Subject: [OpenSCAD] Newbie with rotation problem
In-Reply-To: <1459538079219-16894.post@n5.nabble.com>
References: <1459468039500-16873.post@n5.nabble.com>
	<1459476305077-16876.post@n5.nabble.com>
	<CA+i9EaCDUDxH8q0prCp9pr0xfBiewVZ9rb2uQcn5GCwe8m9q6Q@mail.gmail.com>
	<1459499054224-16880.post@n5.nabble.com>
	<CA+i9EaD4fsAr-LG0-DWa_VbaozeFXztsEGoe8LG+04Gje37raA@mail.gmail.com>
	<1459538079219-16894.post@n5.nabble.com>
Message-ID: <1459551116071-16903.post@n5.nabble.com>

I generally use $fn=100; as the first line in my projects, setting it at a
global level. With hull(), it then gives a nice, round shape. The minkowski
version also gives a good-looking result but when I subtract them from one
another by using:

> $fn=100;
> radius=10;
> difference(){
>     hull(){
>         translate([radius-1, 0, 0]) sphere(1);
>         translate([-radius-1, 0, 0]) sphere(1);
>         translate([0, radius-1, 0]) sphere(1);
>         translate([0, -radius-1, 0]) sphere(1);
>         translate([0, 0, radius-1]) sphere(1);
>         translate([0, 0, -radius-1]) sphere(1);
>     }
>     minkowski() { 
>         sphere(1); 
>         union() { 
>           cylinder(r1=radius, r2=0, h=radius, $fn=4); 
>           mirror([0,0,-1]) cylinder(r1=radius, r2=0, h=radius, $fn=4); 
>         } 
>     }
> }

Then it seems the minkowski version is a bit wrong. The hull version touches
the axes at exactly 10 but the minkowski is too long on the negative sides.
Thus, the minkowski version doesn't seem to have the same length sides.
(The hull version needs radius-1 because the spheres also take space, and
they have a radius of 1. Total makes the exact radius.



-----
With kind regards,
Wim,
W.A. ten Brink
--
View this message in context: http://forum.openscad.org/Newbie-with-rotation-problem-tp16873p16903.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From openscad at wimtenbrink.nl  Fri Apr  1 18:54:26 2016
From: openscad at wimtenbrink.nl (Wim ten Brink)
Date: Fri, 1 Apr 2016 15:54:26 -0700 (MST)
Subject: [OpenSCAD] Newbie with rotation problem
In-Reply-To: <1459551116071-16903.post@n5.nabble.com>
References: <1459468039500-16873.post@n5.nabble.com>
	<1459476305077-16876.post@n5.nabble.com>
	<CA+i9EaCDUDxH8q0prCp9pr0xfBiewVZ9rb2uQcn5GCwe8m9q6Q@mail.gmail.com>
	<1459499054224-16880.post@n5.nabble.com>
	<CA+i9EaD4fsAr-LG0-DWa_VbaozeFXztsEGoe8LG+04Gje37raA@mail.gmail.com>
	<1459538079219-16894.post@n5.nabble.com>
	<1459551116071-16903.post@n5.nabble.com>
Message-ID: <1459551266737-16904.post@n5.nabble.com>

Oops, one minus needs to be a +. :)



-----
With kind regards,
Wim,
W.A. ten Brink
--
View this message in context: http://forum.openscad.org/Newbie-with-rotation-problem-tp16873p16904.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jpmendes54 at gmail.com  Sat Apr  2 12:05:09 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Sat, 2 Apr 2016 09:05:09 -0700 (MST)
Subject: [OpenSCAD] Centering for import
In-Reply-To: <CAJfGV90B1AYO5jjYSsnybfoOCWFs_uZRqH3H3v9Z_0nEFf164A@mail.gmail.com>
References: <CAJfGV90B1AYO5jjYSsnybfoOCWFs_uZRqH3H3v9Z_0nEFf164A@mail.gmail.com>
Message-ID: <1459613109051-16906.post@n5.nabble.com>

I agree partially. KisSlicer for instance does it automatically. The pro
version allows to export the STLs centered and sometimes I use this feature.
However one can export the STLs having in mind, for future use, their
original locations. Imagine that you want to export some objects and then
import them for processing speed reasons. Maybe this is not a good practice
but is possible to occur. Backward compatibility is an issue. So my proposal
would be to create an import option like the one already available for cubes
an cylinders "center=true". Calculating calculating the center of an
irregular object may not be trivial, and probably in the end we will need to
perform some translations and rotations on it to fulfill our initial
conditions. Although handy,  I think this may be not a priority feature.

jpmendes




--
View this message in context: http://forum.openscad.org/Centering-for-import-tp16901p16906.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Sat Apr  2 14:21:47 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Sat, 2 Apr 2016 11:21:47 -0700 (MST)
Subject: [OpenSCAD] Newbie with rotation problem
In-Reply-To: <CAEEmnrPOs=DgPs0DiBHK=AxqN+B8VTAkjSbvHErFne3dmFoi9w@mail.gmail.com>
References: <1459468039500-16873.post@n5.nabble.com>
	<1459476305077-16876.post@n5.nabble.com>
	<CA+i9EaCDUDxH8q0prCp9pr0xfBiewVZ9rb2uQcn5GCwe8m9q6Q@mail.gmail.com>
	<1459499054224-16880.post@n5.nabble.com>
	<CA+i9EaD4fsAr-LG0-DWa_VbaozeFXztsEGoe8LG+04Gje37raA@mail.gmail.com>
	<1459537913730-16893.post@n5.nabble.com>
	<56FECFC4.1090502@arnholm.org>
	<CAEEmnrPOs=DgPs0DiBHK=AxqN+B8VTAkjSbvHErFne3dmFoi9w@mail.gmail.com>
Message-ID: <1459621307704-16907.post@n5.nabble.com>

nophead wrote
> There are no true spheres, cylinders, circles or curves in OpenScad once
> the renderings starts. All the geometry is represented by polygons and
> polyhedra.

This is a quiz :) The following image is the preview of translated
primitives. No boolean operations, no rotation, neither scale nor mirror.
How to get them?

<http://forum.openscad.org/file/n16907/primitives.png> 



--
View this message in context: http://forum.openscad.org/Newbie-with-rotation-problem-tp16873p16907.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From fred_dot_u at yahoo.com  Sat Apr  2 14:26:26 2016
From: fred_dot_u at yahoo.com (fred_dot_u)
Date: Sat, 2 Apr 2016 11:26:26 -0700 (MST)
Subject: [OpenSCAD] Newbie with rotation problem
In-Reply-To: <1459621307704-16907.post@n5.nabble.com>
References: <1459468039500-16873.post@n5.nabble.com>
	<1459476305077-16876.post@n5.nabble.com>
	<CA+i9EaCDUDxH8q0prCp9pr0xfBiewVZ9rb2uQcn5GCwe8m9q6Q@mail.gmail.com>
	<1459499054224-16880.post@n5.nabble.com>
	<CA+i9EaD4fsAr-LG0-DWa_VbaozeFXztsEGoe8LG+04Gje37raA@mail.gmail.com>
	<1459537913730-16893.post@n5.nabble.com>
	<56FECFC4.1090502@arnholm.org>
	<CAEEmnrPOs=DgPs0DiBHK=AxqN+B8VTAkjSbvHErFne3dmFoi9w@mail.gmail.com>
	<1459621307704-16907.post@n5.nabble.com>
Message-ID: <1459621586653-16908.post@n5.nabble.com>

It would appear that a good part of the answer to your question lies here:

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Primitive_Solids

Some of the answer involves low values of $fn along with cylinders of
different r1 and r2 values.

Do you already know the answers and this is a true quiz, or are you seeking
a solution?



--
View this message in context: http://forum.openscad.org/Newbie-with-rotation-problem-tp16873p16908.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Sat Apr  2 14:27:53 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Sat, 2 Apr 2016 11:27:53 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459545124023-16900.post@n5.nabble.com>
References: <1459456808622-16865.post@n5.nabble.com>
	<CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459545124023-16900.post@n5.nabble.com>
Message-ID: <1459621673695-16909.post@n5.nabble.com>

Thank you, Parkinbot. Your code looks nice. I will comment it tomorrow.



--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16909.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Sat Apr  2 14:44:54 2016
From: doug at moens.org (doug moen)
Date: Sat, 2 Apr 2016 14:44:54 -0400
Subject: [OpenSCAD] Centering for import
In-Reply-To: <1459613109051-16906.post@n5.nabble.com>
References: <CAJfGV90B1AYO5jjYSsnybfoOCWFs_uZRqH3H3v9Z_0nEFf164A@mail.gmail.com>
	<1459613109051-16906.post@n5.nabble.com>
Message-ID: <CAGV6i+NoiHvm6XAMHEAbXR60Zj2UF2eDdtpQT2yJ+n5VjspOrQ@mail.gmail.com>

There is an old feature request that discusses adding a centre= option to
import():
https://github.com/openscad/openscad/issues/586

There is a new feature request under construction for a more general
align() operator:
https://github.com/openscad/openscad/issues/1610

For example,
    align("centre") import("foo.scad")
will centre the model on all axes, like a sphere.

    align(x="centre", y="centre", z="above") import()
will centre on the X and Y axes, above Z=0, like a cylinder.

    align("above") import()
will place the model in the +X,+Y,+Z octant, like a cube.

The centre is considered to be the centre of the bounding box: no fancy
heuristics.

Doug.

On Saturday, 2 April 2016, jpmendes <jpmendes54 at gmail.com> wrote:

> I agree partially. KisSlicer for instance does it automatically. The pro
> version allows to export the STLs centered and sometimes I use this
> feature.
> However one can export the STLs having in mind, for future use, their
> original locations. Imagine that you want to export some objects and then
> import them for processing speed reasons. Maybe this is not a good practice
> but is possible to occur. Backward compatibility is an issue. So my
> proposal
> would be to create an import option like the one already available for
> cubes
> an cylinders "center=true". Calculating calculating the center of an
> irregular object may not be trivial, and probably in the end we will need
> to
> perform some translations and rotations on it to fulfill our initial
> conditions. Although handy,  I think this may be not a priority feature.
>
> jpmendes
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Centering-for-import-tp16901p16906.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org <javascript:;>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160402/a4c74406/attachment.html>

From doug at moens.org  Sat Apr  2 14:57:39 2016
From: doug at moens.org (doug moen)
Date: Sat, 2 Apr 2016 14:57:39 -0400
Subject: [OpenSCAD] Newbie with rotation problem
In-Reply-To: <1459621307704-16907.post@n5.nabble.com>
References: <1459468039500-16873.post@n5.nabble.com>
	<1459476305077-16876.post@n5.nabble.com>
	<CA+i9EaCDUDxH8q0prCp9pr0xfBiewVZ9rb2uQcn5GCwe8m9q6Q@mail.gmail.com>
	<1459499054224-16880.post@n5.nabble.com>
	<CA+i9EaD4fsAr-LG0-DWa_VbaozeFXztsEGoe8LG+04Gje37raA@mail.gmail.com>
	<1459537913730-16893.post@n5.nabble.com>
	<56FECFC4.1090502@arnholm.org>
	<CAEEmnrPOs=DgPs0DiBHK=AxqN+B8VTAkjSbvHErFne3dmFoi9w@mail.gmail.com>
	<1459621307704-16907.post@n5.nabble.com>
Message-ID: <CAGV6i+MFs8gg9ZfzBi7MrBUx9+UcGf3W9qof+Cb1F0wQB_TGQg@mail.gmail.com>

The second from the left is a sphere.
All the rest could be done using cylinder.
The middle could be a cube.
The second from right could be a sphere.

See how OpenSCAD has warped me? When I first started using OpenSCAD, I was
really annoyed by all of this. I wanted sphere to always produce a sphere,
cylinder to always produce a cylinder, etc.

I am still in favour of adding prism(), pyramid() and cone(), even though
you would normally do those using cylinder().

On 2 April 2016 at 14:21, Ronaldo <rcmpersiano at gmail.com> wrote:

> nophead wrote
> > There are no true spheres, cylinders, circles or curves in OpenScad once
> > the renderings starts. All the geometry is represented by polygons and
> > polyhedra.
>
> This is a quiz :) The following image is the preview of translated
> primitives. No boolean operations, no rotation, neither scale nor mirror.
> How to get them?
>
> <http://forum.openscad.org/file/n16907/primitives.png>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Newbie-with-rotation-problem-tp16873p16907.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160402/80eded5a/attachment.html>

From R.E.Wolff at BitWizard.nl  Sat Apr  2 15:58:49 2016
From: R.E.Wolff at BitWizard.nl (Rogier Wolff)
Date: Sat, 2 Apr 2016 21:58:49 +0200
Subject: [OpenSCAD] Newbie with rotation problem
In-Reply-To: <CAGV6i+MFs8gg9ZfzBi7MrBUx9+UcGf3W9qof+Cb1F0wQB_TGQg@mail.gmail.com>
References: <1459468039500-16873.post@n5.nabble.com>
	<1459476305077-16876.post@n5.nabble.com>
	<CA+i9EaCDUDxH8q0prCp9pr0xfBiewVZ9rb2uQcn5GCwe8m9q6Q@mail.gmail.com>
	<1459499054224-16880.post@n5.nabble.com>
	<CA+i9EaD4fsAr-LG0-DWa_VbaozeFXztsEGoe8LG+04Gje37raA@mail.gmail.com>
	<1459537913730-16893.post@n5.nabble.com>
	<56FECFC4.1090502@arnholm.org>
	<CAEEmnrPOs=DgPs0DiBHK=AxqN+B8VTAkjSbvHErFne3dmFoi9w@mail.gmail.com>
	<1459621307704-16907.post@n5.nabble.com>
	<CAGV6i+MFs8gg9ZfzBi7MrBUx9+UcGf3W9qof+Cb1F0wQB_TGQg@mail.gmail.com>
Message-ID: <20160402195848.GF31230@BitWizard.nl>

On Sat, Apr 02, 2016 at 02:57:39PM -0400, doug moen wrote:
> See how OpenSCAD has warped me? When I first started using OpenSCAD, I was
> really annoyed by all of this. I wanted sphere to always produce a sphere,
> cylinder to always produce a cylinder, etc.

IMHO, it is fine if openscad has to "simplify" cylinders to extruded
polygons. However, in writing code, it would be best to assume that
the implementation reserves the right to use the simplification OR
BETTER. 

That means that the triangular prism could suddenly upgrade to a
perfect cylinder if say the output format directly supports cylinders.

But alas, it has become customary to exploit the defects of the
implementation so that now there is no way back.

> I am still in favour of adding prism(), pyramid() and cone(), even though
> you would normally do those using cylinder().

Those would, be oneliner modules, right? There is a "system" library
now, so it could be added there, right?

	Roger. 

-- 
** R.E.Wolff at BitWizard.nl ** http://www.BitWizard.nl/ ** +31-15-2600998 **
**    Delftechpark 26 2628 XH  Delft, The Netherlands. KVK: 27239233    **
*-- BitWizard writes Linux device drivers for any device you may have! --*
The plan was simple, like my brother-in-law Phil. But unlike
Phil, this plan just might work.


From rcmpersiano at gmail.com  Sat Apr  2 16:08:12 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Sat, 2 Apr 2016 13:08:12 -0700 (MST)
Subject: [OpenSCAD] Newbie with rotation problem
In-Reply-To: <1459621586653-16908.post@n5.nabble.com>
References: <1459468039500-16873.post@n5.nabble.com>
	<1459476305077-16876.post@n5.nabble.com>
	<CA+i9EaCDUDxH8q0prCp9pr0xfBiewVZ9rb2uQcn5GCwe8m9q6Q@mail.gmail.com>
	<1459499054224-16880.post@n5.nabble.com>
	<CA+i9EaD4fsAr-LG0-DWa_VbaozeFXztsEGoe8LG+04Gje37raA@mail.gmail.com>
	<1459537913730-16893.post@n5.nabble.com>
	<56FECFC4.1090502@arnholm.org>
	<CAEEmnrPOs=DgPs0DiBHK=AxqN+B8VTAkjSbvHErFne3dmFoi9w@mail.gmail.com>
	<1459621307704-16907.post@n5.nabble.com>
	<1459621586653-16908.post@n5.nabble.com>
Message-ID: <1459627692050-16913.post@n5.nabble.com>

fred_dot_u wrote
> It would appear that a good part of the answer to your question lies here:
> 
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Primitive_Solids
> 
> Some of the answer involves low values of $fn along with cylinders of
> different r1 and r2 values.
> 
> Do you already know the answers and this is a true quiz, or are you
> seeking a solution?

You are right. I generated the image so it is really a quiz.



--
View this message in context: http://forum.openscad.org/Newbie-with-rotation-problem-tp16873p16913.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Sat Apr  2 16:10:38 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Sat, 2 Apr 2016 13:10:38 -0700 (MST)
Subject: [OpenSCAD] Newbie with rotation problem
In-Reply-To: <CAGV6i+MFs8gg9ZfzBi7MrBUx9+UcGf3W9qof+Cb1F0wQB_TGQg@mail.gmail.com>
References: <1459468039500-16873.post@n5.nabble.com>
	<1459476305077-16876.post@n5.nabble.com>
	<CA+i9EaCDUDxH8q0prCp9pr0xfBiewVZ9rb2uQcn5GCwe8m9q6Q@mail.gmail.com>
	<1459499054224-16880.post@n5.nabble.com>
	<CA+i9EaD4fsAr-LG0-DWa_VbaozeFXztsEGoe8LG+04Gje37raA@mail.gmail.com>
	<1459537913730-16893.post@n5.nabble.com>
	<56FECFC4.1090502@arnholm.org>
	<CAEEmnrPOs=DgPs0DiBHK=AxqN+B8VTAkjSbvHErFne3dmFoi9w@mail.gmail.com>
	<1459621307704-16907.post@n5.nabble.com>
	<CAGV6i+MFs8gg9ZfzBi7MrBUx9+UcGf3W9qof+Cb1F0wQB_TGQg@mail.gmail.com>
Message-ID: <1459627838667-16914.post@n5.nabble.com>

doug.moen wrote
> The second from the left is a sphere.
> All the rest could be done using cylinder.
> The middle could be a cube.
> The second from right could be a sphere.

Right.
Right.
Wrong.
Right.



--
View this message in context: http://forum.openscad.org/Newbie-with-rotation-problem-tp16873p16914.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Sat Apr  2 17:33:49 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Sat, 2 Apr 2016 18:33:49 -0300
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459621673695-16909.post@n5.nabble.com>
References: <1459456808622-16865.post@n5.nabble.com>
	<CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459545124023-16900.post@n5.nabble.com>
	<1459621673695-16909.post@n5.nabble.com>
Message-ID: <CA+i9EaAOmkOwav2OCF25kSrpqGiRCncab3YBqzEtCxyBAy+HHA@mail.gmail.com>

Parkinbot, please try your subdivision algorithm with this polygon

N = 19;

pre_seed = 5528; //-1; // if pre_seed <0 a random seed is generated
seed = pre_seed<0 ? floor(rands(0,10000,1)[0]): pre_seed;
echo(seed=seed);
// generate a randomized CW polygon
function randpolyg(N=10) = let( rnd = rands(5,10,2*N+1,seed) )
[for (i=[0:360/N:359.9]) [rnd[2*i*N/360]*sin(i), rnd[2*i*N/360+1]*cos(i)]];
p = randpolyg(N); // too easy to be perfect


2016-04-02 15:27 GMT-03:00 Ronaldo <rcmpersiano at gmail.com>:

> Thank you, Parkinbot. Your code looks nice. I will comment it tomorrow.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16909.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160402/9011c404/attachment.html>

From oz.at.michael at gmail.com  Sat Apr  2 17:53:26 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 2 Apr 2016 14:53:26 -0700 (MST)
Subject: [OpenSCAD] Centering for import
In-Reply-To: <CAJfGV90B1AYO5jjYSsnybfoOCWFs_uZRqH3H3v9Z_0nEFf164A@mail.gmail.com>
References: <CAJfGV90B1AYO5jjYSsnybfoOCWFs_uZRqH3H3v9Z_0nEFf164A@mail.gmail.com>
Message-ID: <1459634006544-16916.post@n5.nabble.com>

ptolonen wrote
> Currently there is no way to measure and calculate translation to center
> the imported  3D-model or drawing.

To help manually do this you use View/View_All and turn on
View/Show_Scale_Markers.



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Centering-for-import-tp16901p16916.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jpmendes54 at gmail.com  Sat Apr  2 19:01:28 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Sat, 2 Apr 2016 16:01:28 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <CA+i9EaAOmkOwav2OCF25kSrpqGiRCncab3YBqzEtCxyBAy+HHA@mail.gmail.com>
References: <CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459545124023-16900.post@n5.nabble.com>
	<1459621673695-16909.post@n5.nabble.com>
	<CA+i9EaAOmkOwav2OCF25kSrpqGiRCncab3YBqzEtCxyBAy+HHA@mail.gmail.com>
Message-ID: <1459638088941-16917.post@n5.nabble.com>


This is not my area, but maybe you guys interested in tessellation can take
a look at "Wings 3D" sources. Wings 3D is written in Erlang also a
functional language, perhaps some algorithms maybe easily adapted to
OpenSCAD by some experienced developer. I downloaded the sources just for
curiosity and the code seems to be well structured. A specific module on
tessellation exists with some interesting comments. BTW Synwrite has a
lexter for Erlang.

jpmendes




--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16917.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Sat Apr  2 19:05:37 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Sat, 2 Apr 2016 16:05:37 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <CA+i9EaAOmkOwav2OCF25kSrpqGiRCncab3YBqzEtCxyBAy+HHA@mail.gmail.com>
References: <CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459545124023-16900.post@n5.nabble.com>
	<1459621673695-16909.post@n5.nabble.com>
	<CA+i9EaAOmkOwav2OCF25kSrpqGiRCncab3YBqzEtCxyBAy+HHA@mail.gmail.com>
Message-ID: <1459638337576-16918.post@n5.nabble.com>

Meanwhile I know, what is problem. The code's logic is fine, but the
is_division() predicate is too weak. It can fail on certain non-convex
partitions. I think I'll have to give it new try.  





--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16918.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Sat Apr  2 20:54:56 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Sat, 2 Apr 2016 21:54:56 -0300
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459638337576-16918.post@n5.nabble.com>
References: <CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459545124023-16900.post@n5.nabble.com>
	<1459621673695-16909.post@n5.nabble.com>
	<CA+i9EaAOmkOwav2OCF25kSrpqGiRCncab3YBqzEtCxyBAy+HHA@mail.gmail.com>
	<1459638337576-16918.post@n5.nabble.com>
Message-ID: <CA+i9EaCHwQV2KfiAVCP2td_KcpRf9NnY8jJt3FwbeGOpXKeSvQ@mail.gmail.com>

I have noticed that. Besides, your main algoritm assumes that, for any
simple polygon, there is a diagonal from some p[i] to p[i+floor(n/2)] for
some i. This is not true in general.

2016-04-02 20:05 GMT-03:00 Parkinbot <rudolf at parkinbot.com>:

> Meanwhile I know, what is problem. The code's logic is fine, but the
> is_division() predicate is too weak. It can fail on certain non-convex
> partitions. I think I'll have to give it new try.
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16918.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160402/24e5fd09/attachment.html>

From rudolf at parkinbot.com  Sat Apr  2 22:32:55 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Sat, 2 Apr 2016 19:32:55 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <CA+i9EaCHwQV2KfiAVCP2td_KcpRf9NnY8jJt3FwbeGOpXKeSvQ@mail.gmail.com>
References: <CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459545124023-16900.post@n5.nabble.com>
	<1459621673695-16909.post@n5.nabble.com>
	<CA+i9EaAOmkOwav2OCF25kSrpqGiRCncab3YBqzEtCxyBAy+HHA@mail.gmail.com>
	<1459638337576-16918.post@n5.nabble.com>
	<CA+i9EaCHwQV2KfiAVCP2td_KcpRf9NnY8jJt3FwbeGOpXKeSvQ@mail.gmail.com>
Message-ID: <1459650775278-16920.post@n5.nabble.com>

You are right. I planned to include a randomized cutting scheme, but as the
algorithm was not traceble for me anymore, I thought it was a bad idea to
put another randomness on top of it. 

So my new idea is to check the subdivision line AB against all other lines
PQ built by two subsequent points (with P,Q<>A,B of course). If they
intersect, the polygon APBQ will be convex in a CW or CCW sense. This is
easy to test with is_left()

Being short of time in the next days, I might implement it in Matlab next
weekend. With a debugger one can effectively trace recursions.



--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16920.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Sat Apr  2 22:59:42 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Sat, 2 Apr 2016 19:59:42 -0700 (MST)
Subject: [OpenSCAD] Centering for import
In-Reply-To: <CAGV6i+NoiHvm6XAMHEAbXR60Zj2UF2eDdtpQT2yJ+n5VjspOrQ@mail.gmail.com>
References: <CAJfGV90B1AYO5jjYSsnybfoOCWFs_uZRqH3H3v9Z_0nEFf164A@mail.gmail.com>
	<1459613109051-16906.post@n5.nabble.com>
	<CAGV6i+NoiHvm6XAMHEAbXR60Zj2UF2eDdtpQT2yJ+n5VjspOrQ@mail.gmail.com>
Message-ID: <1459652382235-16921.post@n5.nabble.com>

It might be also a good idea to automatically fit it into a given
boundingbox. This would be as good as querying the size (which is currently
not possible for fomal reasons).


> align(x=100, y=100, z=100, center = true) import(); 






--
View this message in context: http://forum.openscad.org/Centering-for-import-tp16901p16921.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrew at plumb.org  Sat Apr  2 23:37:41 2016
From: andrew at plumb.org (Andrew Plumb)
Date: Sat, 2 Apr 2016 23:37:41 -0400
Subject: [OpenSCAD] Centering for import
In-Reply-To: <1459652382235-16921.post@n5.nabble.com>
References: <CAJfGV90B1AYO5jjYSsnybfoOCWFs_uZRqH3H3v9Z_0nEFf164A@mail.gmail.com>
	<1459613109051-16906.post@n5.nabble.com>
	<CAGV6i+NoiHvm6XAMHEAbXR60Zj2UF2eDdtpQT2yJ+n5VjspOrQ@mail.gmail.com>
	<1459652382235-16921.post@n5.nabble.com>
Message-ID: <068A20B6-83FA-45BA-AD2D-58A111F23F69@plumb.org>

See the existing ?resize()? operator:

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Transformations#resize <https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Transformations#resize>

Very handy for things like fitting a piece of text() to a given x-size, independent of ?size=10? parameter value, for example:

resize([20,0,0],auto=[true,true,false]) linear_extrude(height=1) text("Hello, World!",halign="center",valign="center");
#cube([20,4,1],center=true);

?which amusingly enough highlights a case where align() would be useful. The ?centered? text appears to be shifted slightly to the left, as it doesn?t overlap the 20x4x1 cube exactly at the x=[-10,10] bounds.  (Mac OSX build version 2016.03.26 (git 8308bd7))

Andrew.

> On Apr 2, 2016, at 10:59 PM, Parkinbot <rudolf at parkinbot.com> wrote:
> 
> It might be also a good idea to automatically fit it into a given
> boundingbox. This would be as good as querying the size (which is currently
> not possible for fomal reasons).
> 
> 
>> align(x=100, y=100, z=100, center = true) import(); 
> 
> 
> 
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/Centering-for-import-tp16901p16921.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

--

"The future is already here.  It's just not very evenly distributed" -- William Gibson

Me: http://clothbot.com/wiki/ <http://clothbot.com/wiki/>



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160402/ed18ffe4/attachment.html>

From rudolf at parkinbot.com  Sun Apr  3 08:33:03 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Sun, 3 Apr 2016 05:33:03 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459541945769-16898.post@n5.nabble.com>
References: <3DD3E413-9968-4392-B234-BA7B15DEBBDE@gmail.com>
	<1459456808622-16865.post@n5.nabble.com>
	<CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
Message-ID: <1459686783443-16923.post@n5.nabble.com>

Ronaldo wrote
> I think I have a full functional implementation of a O(n^3) ear-cutting
> method to triangulate 2D simple polygon. I addopted the data structure
> Parkinbot suggested to output the triangles as lists of the indices in the
> array of vertices. The code is relatively simple:

yeah, nice! Much more interative. 

Two annotations:
1. As you collect the set of all ears in one cycle, isn't it that you test
the ears already within the set again and again? Avoiding this might bring
you closer to O(n?) :-) 

2. I would suspect that approximating the best plane is not much safer than
using a suboptimal plane, as long as you don't have a criteria assuring that
the projection to this best (or any other) plane will be homomorph. Indeed
you easily can construct polygons, that don't project homomorph to the best
plane, but to a suboptimal plane. Also Eigenvector calculation takes time.
Projecting the polygon to xy, yz, zx planes and ranking the point triples
defining the largest areas within those projections in 3D, might be a good
and fast heuristics, until you give this criteria. 



--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16923.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Sun Apr  3 09:00:52 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Sun, 3 Apr 2016 06:00:52 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <CAEEmnrNchi5uCVj4YtYV6GLztgxid_77NH_6DLUCni0jnyg5sQ@mail.gmail.com>
References: <3DD3E413-9968-4392-B234-BA7B15DEBBDE@gmail.com>
	<1459456808622-16865.post@n5.nabble.com>
	<CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<CAEEmnrNchi5uCVj4YtYV6GLztgxid_77NH_6DLUCni0jnyg5sQ@mail.gmail.com>
Message-ID: <1459688452069-16924.post@n5.nabble.com>

nophead wrote
> If you want to write in a procedural language why not use the Python
> binding, or the C++ binding, or Angel script, etc.

If you want us all to write in a functional language, why not offer at least
an echo() function primitive which outputs a value to console while
returning it unchanged. 


> function myfunction(a) = let(x=echo(f(a,i))) // inspect this value
>    g(x); // calculation some other value from it
>   
> function f(a,i) = i;// ... some function
> function g(x) = x;// ... some other function
> 
> function echo(x) = x;  // side effect to console

Also a break-function breaking a for-loop would not be incompatible.
Unbreakable for-loops are in fact foreach-loops and could be offered
additionally. 


> function myfunction(a) = [for(i=[n-1]) if (mypredicate(a,i))
> break(fn(a,i))] ; 
>   
> function myfunction1(A) = [foreach (a in A) fn(a)];






--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16924.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sun Apr  3 09:54:03 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 3 Apr 2016 15:54:03 +0200
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459688452069-16924.post@n5.nabble.com>
References: <3DD3E413-9968-4392-B234-BA7B15DEBBDE@gmail.com>
	<1459456808622-16865.post@n5.nabble.com>
	<CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<CAEEmnrNchi5uCVj4YtYV6GLztgxid_77NH_6DLUCni0jnyg5sQ@mail.gmail.com>
	<1459688452069-16924.post@n5.nabble.com>
Message-ID: <5701207B.8040000@gmx.de>

On 04/03/2016 03:00 PM, Parkinbot wrote:
> If you want us all to write in a functional language, why not offer
> at least an echo() function primitive which outputs a value to console
> while returning it unchanged.
> 
This is already sitting in the pull request queue. Mainly
the backward compatibility needs to be clarified:

https://github.com/openscad/openscad/pull/1587

> Also a break-function breaking a for-loop would not be incompatible.
> Unbreakable for-loops are in fact foreach-loops and could be offered
> additionally. 
> 
That should be possible with the C++ style for loops which are
in the dev version as experimental feature, see

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/WIP

ciao,
  Torsten.



From doug at moens.org  Sun Apr  3 10:20:47 2016
From: doug at moens.org (doug moen)
Date: Sun, 3 Apr 2016 10:20:47 -0400
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459688452069-16924.post@n5.nabble.com>
References: <3DD3E413-9968-4392-B234-BA7B15DEBBDE@gmail.com>
	<1459456808622-16865.post@n5.nabble.com>
	<CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<CAEEmnrNchi5uCVj4YtYV6GLztgxid_77NH_6DLUCni0jnyg5sQ@mail.gmail.com>
	<1459688452069-16924.post@n5.nabble.com>
Message-ID: <CAGV6i+PLy8e3bx14kDRDSG9812rzMi62uSTVxNX-rz_w9A+TYg@mail.gmail.com>

Torsten has a recently active pull request which extends echo() to work
inside functions. The same pull also adds assert().

https://github.com/openscad/openscad/pull/1587

On Sunday, 3 April 2016, Parkinbot <rudolf at parkinbot.com> wrote:

> why not offer at least
> an echo() function primitive which outputs a value to console while
> returning it unchanged.
>
>
> > function myfunction(a) = let(x=echo(f(a,i))) // inspect this value
> >    g(x); // calculation some other value from it
> >
> > function f(a,i) = i;// ... some function
> > function g(x) = x;// ... some other function
> >
> > function echo(x) = x;  // side effect to console
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160403/febd43e7/attachment.html>

From rudolf at parkinbot.com  Sun Apr  3 10:43:04 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Sun, 3 Apr 2016 07:43:04 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <5701207B.8040000@gmx.de>
References: <CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<CAEEmnrNchi5uCVj4YtYV6GLztgxid_77NH_6DLUCni0jnyg5sQ@mail.gmail.com>
	<1459688452069-16924.post@n5.nabble.com> <5701207B.8040000@gmx.de>
Message-ID: <1459694584779-16927.post@n5.nabble.com>

that is good news. Not exactly, what I meant, but I see a progress. 

"each" is flattening a list. "foreach" would be a loop type. 

the "echo" function seems to do much more, I had ever expected. But I doubt,
it is a good idea to allow it introducing new variables living in outer
scope. An output expression should not be allowed to have side effects on or
be vulnerable by surrounding code, as in most cases it might be used
temporarly for debugging only.


> a = 3;
> b = 6;
> d = 9,   // will be superseeded by echo
> t6 = echo(c = 2, d = c + 9) a*b*c*d;
> echo(t6 = t6);
> ... 
> d = 10;  // this anywhere in subsequent code, will superseed the output of
> echo
> t7 = echo(d=t6+a) d; // this one will win and have a side effect on the
> first echo output.





--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16927.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sun Apr  3 10:47:35 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 3 Apr 2016 16:47:35 +0200
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459694584779-16927.post@n5.nabble.com>
References: <CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<CAEEmnrNchi5uCVj4YtYV6GLztgxid_77NH_6DLUCni0jnyg5sQ@mail.gmail.com>
	<1459688452069-16924.post@n5.nabble.com> <5701207B.8040000@gmx.de>
	<1459694584779-16927.post@n5.nabble.com>
Message-ID: <57012D07.7020701@gmx.de>

On 04/03/2016 04:43 PM, Parkinbot wrote:

> the "echo" function seems to do much more, I had ever expected. But I doubt,
> it is a good idea to allow it introducing new variables living in outer
> scope. An output expression should not be allowed to have side effects on or
> be vulnerable by surrounding code, as in most cases it might be used
> temporarly for debugging only.
> 
> 
If you use the variables defined in the echo() call, just replace it
with let() and you'll get the same behavior without the output.

ciao,
  Torsten.



From Torsten.Paul at gmx.de  Sun Apr  3 11:00:45 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 3 Apr 2016 17:00:45 +0200
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <57012D07.7020701@gmx.de>
References: <CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<CAEEmnrNchi5uCVj4YtYV6GLztgxid_77NH_6DLUCni0jnyg5sQ@mail.gmail.com>
	<1459688452069-16924.post@n5.nabble.com> <5701207B.8040000@gmx.de>
	<1459694584779-16927.post@n5.nabble.com> <57012D07.7020701@gmx.de>
Message-ID: <5701301D.2090802@gmx.de>

On 04/03/2016 04:47 PM, Torsten Paul wrote:
> On 04/03/2016 04:43 PM, Parkinbot wrote:
> 
>> the "echo" function seems to do much more, I had ever expected. But I doubt,
>> it is a good idea to allow it introducing new variables living in outer
>> scope. An output expression should not be allowed to have side effects on or
>> be vulnerable by surrounding code, as in most cases it might be used
>> temporarly for debugging only.
>>
>>
> If you use the variables defined in the echo() call, just replace it
> with let() and you'll get the same behavior without the output.
> 
Well, that said, there's still the backward compatibility issue to
solve which is mainly that the new stuff should use sequential
assignment where the existing statement level echo() uses parallel
assignment.

So we might end up creating a new function with a different name
that could have the same behavior for both statement and function
level.
In that case we could have something like...

  print(name = "x", value = x);

...which might open wishes for the next can of worms: formatting!!1!

ciao,
  Torsten.



From doug at moens.org  Sun Apr  3 11:36:13 2016
From: doug at moens.org (doug moen)
Date: Sun, 3 Apr 2016 11:36:13 -0400
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459694584779-16927.post@n5.nabble.com>
References: <CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<CAEEmnrNchi5uCVj4YtYV6GLztgxid_77NH_6DLUCni0jnyg5sQ@mail.gmail.com>
	<1459688452069-16924.post@n5.nabble.com> <5701207B.8040000@gmx.de>
	<1459694584779-16927.post@n5.nabble.com>
Message-ID: <CAGV6i+Pb3YsJp4nTuyTmLrdBeVVXModRmnxpQt0nSrX0+3c=zg@mail.gmail.com>

I agree with Parkinbot. echo(stuff) expr should not introduce local
variable bindings into expr.

The idea behind this particular syntax is that you can take an existing
function definition,
  f(x) =
     expr;
and you can temporarily introduce an echo for debugging, without
rearranging the code:
  f(x) =
    echo(stuff)
    expr;
Once you are done debugging, you can delete the echo, or you can comment it
out for later use:
  f(x) =
    // echo(stuff)
    expr;

echo() is a debugging mechanism. Commenting out an echo() should not change
the meaning of the code.

Doug.

On 3 April 2016 at 10:43, Parkinbot <rudolf at parkinbot.com> wrote:

> that is good news. Not exactly, what I meant, but I see a progress.
>
> "each" is flattening a list. "foreach" would be a loop type.
>
> the "echo" function seems to do much more, I had ever expected. But I
> doubt,
> it is a good idea to allow it introducing new variables living in outer
> scope. An output expression should not be allowed to have side effects on
> or
> be vulnerable by surrounding code, as in most cases it might be used
> temporarly for debugging only.
>
>
> > a = 3;
> > b = 6;
> > d = 9,   // will be superseeded by echo
> > t6 = echo(c = 2, d = c + 9) a*b*c*d;
> > echo(t6 = t6);
> > ...
> > d = 10;  // this anywhere in subsequent code, will superseed the output
> of
> > echo
> > t7 = echo(d=t6+a) d; // this one will win and have a side effect on the
> > first echo output.
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16927.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160403/d81a27a8/attachment.html>

From Torsten.Paul at gmx.de  Sun Apr  3 11:40:55 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 3 Apr 2016 17:40:55 +0200
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <CAGV6i+Pb3YsJp4nTuyTmLrdBeVVXModRmnxpQt0nSrX0+3c=zg@mail.gmail.com>
References: <CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<CAEEmnrNchi5uCVj4YtYV6GLztgxid_77NH_6DLUCni0jnyg5sQ@mail.gmail.com>
	<1459688452069-16924.post@n5.nabble.com> <5701207B.8040000@gmx.de>
	<1459694584779-16927.post@n5.nabble.com>
	<CAGV6i+Pb3YsJp4nTuyTmLrdBeVVXModRmnxpQt0nSrX0+3c=zg@mail.gmail.com>
Message-ID: <57013987.9070909@gmx.de>

On 04/03/2016 05:36 PM, doug moen wrote:
> echo() is a debugging mechanism. Commenting out an echo() should
> not change the meaning of the code.
>
Well, we can't have echo() then. Any ideas for a good name (which
would then be available as both statement and function and likely
also deprecate the existing echo()).

When we at that, we can also change/remove the existing "ECHO:"
prefix.

Also I'm going to strongly suggest that there will be no
accidental HTML handling as it currently happens due to the
console being able to render that.

ciao,
  Torsten.



From doug at moens.org  Sun Apr  3 11:59:40 2016
From: doug at moens.org (doug moen)
Date: Sun, 3 Apr 2016 11:59:40 -0400
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <57013987.9070909@gmx.de>
References: <CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<CAEEmnrNchi5uCVj4YtYV6GLztgxid_77NH_6DLUCni0jnyg5sQ@mail.gmail.com>
	<1459688452069-16924.post@n5.nabble.com> <5701207B.8040000@gmx.de>
	<1459694584779-16927.post@n5.nabble.com>
	<CAGV6i+Pb3YsJp4nTuyTmLrdBeVVXModRmnxpQt0nSrX0+3c=zg@mail.gmail.com>
	<57013987.9070909@gmx.de>
Message-ID: <CAGV6i+Nh6m1Ximg=sq3EjTAOH5ZvGtjZZtNEUQqPjR707L5evQ@mail.gmail.com>

>
> > echo() is a debugging mechanism. Commenting out an echo() should
> > not change the meaning of the code.
> >
> Well, we can't have echo() then. Any ideas for a good name (which
> would then be available as both statement and function and likely
> also deprecate the existing echo()).


I don't understand your comment. The new echo expression is not yet present
in any released version, so changing the behaviour at this point will not
break backward compatibility. The existing echo statement in the release
version doesn't introduce local variable bindings.

So I don't understand why echo would need to be renamed.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160403/81b70d50/attachment.html>

From nop.head at gmail.com  Sun Apr  3 12:01:41 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 3 Apr 2016 17:01:41 +0100
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <57013987.9070909@gmx.de>
References: <CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<CAEEmnrNchi5uCVj4YtYV6GLztgxid_77NH_6DLUCni0jnyg5sQ@mail.gmail.com>
	<1459688452069-16924.post@n5.nabble.com> <5701207B.8040000@gmx.de>
	<1459694584779-16927.post@n5.nabble.com>
	<CAGV6i+Pb3YsJp4nTuyTmLrdBeVVXModRmnxpQt0nSrX0+3c=zg@mail.gmail.com>
	<57013987.9070909@gmx.de>
Message-ID: <CAEEmnrM5pq7tR3UODPbdSMiacL_aaWfKGKjYPmvcgfAkp+a=xw@mail.gmail.com>

Please don't get rid of echo and "ECHO:". I use that to extract meta data
for years while there are endless arguments as to how to do that.

On 3 April 2016 at 16:40, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 04/03/2016 05:36 PM, doug moen wrote:
> > echo() is a debugging mechanism. Commenting out an echo() should
> > not change the meaning of the code.
> >
> Well, we can't have echo() then. Any ideas for a good name (which
> would then be available as both statement and function and likely
> also deprecate the existing echo()).
>
> When we at that, we can also change/remove the existing "ECHO:"
> prefix.
>
> Also I'm going to strongly suggest that there will be no
> accidental HTML handling as it currently happens due to the
> console being able to render that.
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160403/8899be28/attachment.html>

From Torsten.Paul at gmx.de  Sun Apr  3 12:07:39 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 3 Apr 2016 18:07:39 +0200
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <CAGV6i+Nh6m1Ximg=sq3EjTAOH5ZvGtjZZtNEUQqPjR707L5evQ@mail.gmail.com>
References: <CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<CAEEmnrNchi5uCVj4YtYV6GLztgxid_77NH_6DLUCni0jnyg5sQ@mail.gmail.com>
	<1459688452069-16924.post@n5.nabble.com> <5701207B.8040000@gmx.de>
	<1459694584779-16927.post@n5.nabble.com>
	<CAGV6i+Pb3YsJp4nTuyTmLrdBeVVXModRmnxpQt0nSrX0+3c=zg@mail.gmail.com>
	<57013987.9070909@gmx.de>
	<CAGV6i+Nh6m1Ximg=sq3EjTAOH5ZvGtjZZtNEUQqPjR707L5evQ@mail.gmail.com>
Message-ID: <57013FCB.7070800@gmx.de>

On 04/03/2016 05:59 PM, doug moen wrote:
> I don't understand your comment. The new echo expression
> is not yet present in any released version, so changing
> the behaviour at this point will not break backward compatibility.
> The existing echo statement in the release version doesn't
> introduce local variable bindings.
> 
We certainly don't want to have statement level and function
level echo() that behave totally different. But moving into
the direction of unifying functions and modules, it would
make lots of sense to have one way for the debug output that
works for both.

> So I don't understand why echo would need to be renamed.
>
I'm not talking about renaming the existing statement level
echo(). That would stay exactly as it is now.

ciao,
  Torsten.


From runsun at gmail.com  Sun Apr  3 13:58:27 2016
From: runsun at gmail.com (runsun)
Date: Sun, 3 Apr 2016 10:58:27 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <CAEEmnrM5pq7tR3UODPbdSMiacL_aaWfKGKjYPmvcgfAkp+a=xw@mail.gmail.com>
References: <CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<CAEEmnrNchi5uCVj4YtYV6GLztgxid_77NH_6DLUCni0jnyg5sQ@mail.gmail.com>
	<1459688452069-16924.post@n5.nabble.com> <5701207B.8040000@gmx.de>
	<1459694584779-16927.post@n5.nabble.com>
	<CAGV6i+Pb3YsJp4nTuyTmLrdBeVVXModRmnxpQt0nSrX0+3c=zg@mail.gmail.com>
	<57013987.9070909@gmx.de>
	<CAEEmnrM5pq7tR3UODPbdSMiacL_aaWfKGKjYPmvcgfAkp+a=xw@mail.gmail.com>
Message-ID: <1459706307096-16935.post@n5.nabble.com>

nophead wrote
> Please don't get rid of echo and "ECHO:". I use that to extract meta data
> for years while there are endless arguments as to how to do that.

As I mentioned in an  earlier post
<http://forum.openscad.org/In-console-documentation-td8219.html>   that the
display of "ECHO:" gives me headache when I work on the in-console doc. 

Maybe it'd be a good idea to have an option so user can disable the display
of "ECHO:" on the document basis ? Something like a special comment as a
directive:

// # DISPLAY_ECHO = 0 

It'd be then possible to turn it off in a file that you don't need it. 




-----

$  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ), runscad.py( 1 , 2 , git ), synwrite( 1 , 2 );  $ tips: hash( 1 , 2 ), matrix( 1 , 2 ),sweep( 1 , 2 ), var( 1 , 2 ), lerp , animation ( gif , prodVid ), precision( 1 , 2 ), xl-control , type , rounded polygon , chfont 






--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16935.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Sun Apr  3 14:07:03 2016
From: nop.head at gmail.com (nop head)
Date: Sun, 3 Apr 2016 19:07:03 +0100
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459706307096-16935.post@n5.nabble.com>
References: <CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<CAEEmnrNchi5uCVj4YtYV6GLztgxid_77NH_6DLUCni0jnyg5sQ@mail.gmail.com>
	<1459688452069-16924.post@n5.nabble.com> <5701207B.8040000@gmx.de>
	<1459694584779-16927.post@n5.nabble.com>
	<CAGV6i+Pb3YsJp4nTuyTmLrdBeVVXModRmnxpQt0nSrX0+3c=zg@mail.gmail.com>
	<57013987.9070909@gmx.de>
	<CAEEmnrM5pq7tR3UODPbdSMiacL_aaWfKGKjYPmvcgfAkp+a=xw@mail.gmail.com>
	<1459706307096-16935.post@n5.nabble.com>
Message-ID: <CAEEmnrPCBdfq5UxF5ejLV-157dX9kGSaPeeeiKGeNK5qitiwog@mail.gmail.com>

Thinking about I I could add "BOM:" to my echo statements to avoid relying
on ECHO:.

On 3 April 2016 at 18:58, runsun <runsun at gmail.com> wrote:

> nophead wrote
> > Please don't get rid of echo and "ECHO:". I use that to extract meta data
> > for years while there are endless arguments as to how to do that.
>
> As I mentioned in an  earlier post
> <http://forum.openscad.org/In-console-documentation-td8219.html>   that
> the
> display of "ECHO:" gives me headache when I work on the in-console doc.
>
> Maybe it'd be a good idea to have an option so user can disable the display
> of "ECHO:" on the document basis ? Something like a special comment as a
> directive:
>
> // # DISPLAY_ECHO = 0
>
> It'd be then possible to turn it off in a file that you don't need it.
>
>
>
>
> -----
>
> $  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ),
> runscad.py( 1 , 2 , git ), synwrite( 1 , 2 );  $ tips: hash( 1 , 2 ),
> matrix( 1 , 2 ),sweep( 1 , 2 ), var( 1 , 2 ), lerp , animation ( gif ,
> prodVid ), precision( 1 , 2 ), xl-control , type , rounded polygon , chfont
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16935.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160403/323d262d/attachment.html>

From andrew at plumb.org  Sun Apr  3 14:21:09 2016
From: andrew at plumb.org (Andrew Plumb)
Date: Sun, 3 Apr 2016 14:21:09 -0400
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <CAEEmnrPCBdfq5UxF5ejLV-157dX9kGSaPeeeiKGeNK5qitiwog@mail.gmail.com>
References: <CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<CAEEmnrNchi5uCVj4YtYV6GLztgxid_77NH_6DLUCni0jnyg5sQ@mail.gmail.com>
	<1459688452069-16924.post@n5.nabble.com> <5701207B.8040000@gmx.de>
	<1459694584779-16927.post@n5.nabble.com>
	<CAGV6i+Pb3YsJp4nTuyTmLrdBeVVXModRmnxpQt0nSrX0+3c=zg@mail.gmail.com>
	<57013987.9070909@gmx.de>
	<CAEEmnrM5pq7tR3UODPbdSMiacL_aaWfKGKjYPmvcgfAkp+a=xw@mail.gmail.com>
	<1459706307096-16935.post@n5.nabble.com>
	<CAEEmnrPCBdfq5UxF5ejLV-157dX9kGSaPeeeiKGeNK5qitiwog@mail.gmail.com>
Message-ID: <B0A89B8A-3B7E-4719-A54D-968909E3F817@plumb.org>

I?ve often found myself wishing for standard-issue printf() support, e.g. ?printf(?BOM: item %s, qty %d\n?, item_name, item_qty);?

> On Apr 3, 2016, at 2:07 PM, nop head <nop.head at gmail.com> wrote:
> 
> Thinking about I I could add "BOM:" to my echo statements to avoid relying on ECHO:.
> 
> On 3 April 2016 at 18:58, runsun <runsun at gmail.com <mailto:runsun at gmail.com>> wrote:
> nophead wrote
> > Please don't get rid of echo and "ECHO:". I use that to extract meta data
> > for years while there are endless arguments as to how to do that.
> 
> As I mentioned in an  earlier post
> <http://forum.openscad.org/In-console-documentation-td8219.html <http://forum.openscad.org/In-console-documentation-td8219.html>>   that the
> display of "ECHO:" gives me headache when I work on the in-console doc.
> 
> Maybe it'd be a good idea to have an option so user can disable the display
> of "ECHO:" on the document basis ? Something like a special comment as a
> directive:
> 
> // # DISPLAY_ECHO = 0
> 
> It'd be then possible to turn it off in a file that you don't need it.
> 
> 
> 
> 
> -----
> 
> $  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ), runscad.py( 1 , 2 , git ), synwrite( 1 , 2 );  $ tips: hash( 1 , 2 ), matrix( 1 , 2 ),sweep( 1 , 2 ), var( 1 , 2 ), lerp , animation ( gif , prodVid ), precision( 1 , 2 ), xl-control , type , rounded polygon , chfont
> 
> 
> 
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16935.html <http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16935.html>
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org <http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org>
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

--

"The future is already here.  It's just not very evenly distributed" -- William Gibson

Me: http://clothbot.com/wiki/ <http://clothbot.com/wiki/>



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160403/47bf8670/attachment.html>

From doug at moens.org  Sun Apr  3 14:22:24 2016
From: doug at moens.org (doug moen)
Date: Sun, 3 Apr 2016 14:22:24 -0400
Subject: [OpenSCAD]  Simple polygon triangulation
In-Reply-To: <57013FCB.7070800@gmx.de>
References: <CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<CAEEmnrNchi5uCVj4YtYV6GLztgxid_77NH_6DLUCni0jnyg5sQ@mail.gmail.com>
	<1459688452069-16924.post@n5.nabble.com> <5701207B.8040000@gmx.de>
	<1459694584779-16927.post@n5.nabble.com>
	<CAGV6i+Pb3YsJp4nTuyTmLrdBeVVXModRmnxpQt0nSrX0+3c=zg@mail.gmail.com>
	<57013987.9070909@gmx.de>
	<CAGV6i+Nh6m1Ximg=sq3EjTAOH5ZvGtjZZtNEUQqPjR707L5evQ@mail.gmail.com>
	<57013FCB.7070800@gmx.de>
Message-ID: <CAGV6i+N+yRiB4qBrHpX5sriYW7mO7dwnUrORsFu3R_zfXNY+Ug@mail.gmail.com>

Torsten:

> We certainly don't want to have statement level and function
> level echo() that behave totally different. But moving into
> the direction of unifying functions and modules, it would
> make lots of sense to have one way for the debug output that
> works for both.


For consistency and backward compatibility, what I suggest is:

At the statement level,
   echo(args);
is a statement that does whatever it does now. In other words, no change.

At the expression level,
   echo(args) expr
is an expression that echoes whatever 'echo(args);' echoes as a statement,
then returns the result of evaluating expr, without introducing local
variable bindings into expr.

At the list comprehension level,
   echo(args) generator
is a generator that echoes whatever 'echo(args);' echoes, then runs
'generator' to create list elements, without introducing local variable
bindings into 'generator'.

For consistency with the expression and generator form of echo, we can also
support
   echo(args) statement
as a statement.

This is just a conservative extension to echo() so you can put debug
statements anywhere. It's doesn't improve the output of echo() in any way.
That's a more ambitious and controversial project that would require more
discussion and a new name (to preserve backward compatibility).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160403/0b84b968/attachment.html>

From Torsten.Paul at gmx.de  Sun Apr  3 14:35:47 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 3 Apr 2016 20:35:47 +0200
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <CAGV6i+N+yRiB4qBrHpX5sriYW7mO7dwnUrORsFu3R_zfXNY+Ug@mail.gmail.com>
References: <CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<CAEEmnrNchi5uCVj4YtYV6GLztgxid_77NH_6DLUCni0jnyg5sQ@mail.gmail.com>
	<1459688452069-16924.post@n5.nabble.com> <5701207B.8040000@gmx.de>
	<1459694584779-16927.post@n5.nabble.com>
	<CAGV6i+Pb3YsJp4nTuyTmLrdBeVVXModRmnxpQt0nSrX0+3c=zg@mail.gmail.com>
	<57013987.9070909@gmx.de>
	<CAGV6i+Nh6m1Ximg=sq3EjTAOH5ZvGtjZZtNEUQqPjR707L5evQ@mail.gmail.com>
	<57013FCB.7070800@gmx.de>
	<CAGV6i+N+yRiB4qBrHpX5sriYW7mO7dwnUrORsFu3R_zfXNY+Ug@mail.gmail.com>
Message-ID: <57016283.7030304@gmx.de>

On 04/03/2016 08:22 PM, doug moen wrote:
> For consistency and backward compatibility, what I suggest is:
> 
Why introduce something we know is already deprecated when it's
written? Considering the very limited amount of dev time available,
I'm not a huge fan of that.

ciao,
  Torsten.



From rcmpersiano at gmail.com  Sun Apr  3 18:55:56 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Sun, 3 Apr 2016 15:55:56 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459686783443-16923.post@n5.nabble.com>
References: <1459456808622-16865.post@n5.nabble.com>
	<CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
Message-ID: <1459724156082-16940.post@n5.nabble.com>

Parkinbot wrote
> 1. As you collect the set of all ears in one cycle, isn't it that you test
> the ears already within the set again and again? Avoiding this might bring
> you closer to O(n?) :-) 

You are right. However, to reduce the time complexity there we will need to
organize the information in adequate data structures and this may be very
complex. I devise a simple data structure that may cut the time spent in ear
tests since the test is done just once per ear. But I will return now to my
Bezier stuff to finish it before implement that idea. If you want to try, I
can tell you how. But I don't believe it will reduce the time complexity to
O(n^2). 


Parkinbot wrote
> 2. I would suspect that approximating the best plane is not much safer
> than using a suboptimal plane, as long as you don't have a criteria
> assuring that the projection to this best (or any other) plane will be
> homomorph. Indeed you easily can construct polygons, that don't project
> homomorph to the best plane, but to a suboptimal plane. Also Eigenvector
> calculation takes time. Projecting the polygon to xy, yz, zx planes and
> ranking the point triples defining the largest areas within those
> projections in 3D, might be a good and fast heuristics, until you give
> this criteria.

For any two plane adjustment methods, it is possible to devise a set of
points for which anyone of them fail. Even with almost planar points. And
certainly for points following a knot path, any method will fail.

I have evaluated the time spent by the method I implemented. First, time is
linear for up to 4000 points. For more than that, I got a stack overflow in
a recursive list processing function. For 4000 points, the eigenvalue method
spent about 0.5 sec in my outdated machine. That is fine to me (the
evaluation, not the machine :-) ).

Regarding the stack overflow: the function in question is a simple summation
of the elements of a list. OpenSCAD has only lists as data structure.
However, the set of list processing functions is a bare minimum. And
recursion is the only way to implement some functions in OpenSCAD. It is
elegant but the stack ... I would expect that OpenSCAD had other list
processing functions like: head, tail, sub_list, sum_list, invert, sort,
remove_sub_list, etc. Yes, they may be coded in user space but len and
lookup as well. And they are much more useful then lookup.




--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16940.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sun Apr  3 19:17:24 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 4 Apr 2016 01:17:24 +0200
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459724156082-16940.post@n5.nabble.com>
References: <1459456808622-16865.post@n5.nabble.com>
	<CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com>
Message-ID: <5701A484.5090409@gmx.de>

On 04/04/2016 12:55 AM, Ronaldo wrote:
> I have evaluated the time spent by the method I implemented.
> First, time is linear for up to 4000 points. For more than
> that, I got a stack overflow in a recursive list processing
> function.
>
OpenSCAD can do simple tail recursion elimination, so if the
function is matching the simple "cond ? result : recurse()"
it will not be limited by stack (there's still a loop limit
but that's much higher... a million, I think?).


// no tail recursion elimination possible, on my system
// that runs out of stack at list length of about 11000.
function sum(l, idx = 0) = idx >= len(l)
    ? 0
    : l[idx] + sum(l, idx + 1);

echo(sum([each [1 : 10000]]));


// with tail recursion elimination, half a million loops
// take a second or two, but will not crash due to stack
// limit.
function sum_tr(l, idx = 0, ret = 0) =  idx >= len(l)
    ? ret
    : sum_tr(l, idx + 1, ret + l[idx]);

echo(sum_tr([each [1 : 500000]]));


ciao,
  Torsten.



From rcmpersiano at gmail.com  Sun Apr  3 20:34:02 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Sun, 3 Apr 2016 17:34:02 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <5701A484.5090409@gmx.de>
References: <CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
Message-ID: <1459730042650-16942.post@n5.nabble.com>

Nice tip, Tolsten! (Except that "each" is not available for all yet :) )

My sum_list was a bit more general than yours:

    function sum_list0(p, from=0, to) = 
       let(til = (to==undef) ? len(p)-1 : to )
       from==til ? 
          p[til] : 
          sum_list0( p, from+1, til );

So I tried to adhere to your tip with:

    function sum_list1(p, from=0, to, sum=0) = 
       let(til = (to==undef) ? len(p)-1 : to )
       from>til? 
          sum : 
          sum_list1( p, from+1, til, sum + p[from] );

No success. No tail recursion was done. So I changed it to:

    function sum_list2(p, from=0, to, sum=0) = 
       from>( (to==undef) ? len(p)-1 : to ) ? 
          sum : 
          sum_list2( p, from+1, ( (to==undef) ? len(p)-1 : to ), sum+p[from]
);
    
And this doesn't work at all: it returns 1 if to is given and 0 otherwise !
Why???

I finally got the correct result with:

    function sum_list3( p, from=0, to ) = 
        __sum_list(p, from, (to==undef) ? len(p)-1 : to, 0 );

    function __sum_list( p, from, to, sum ) = 
       (from>to) ? 
          sum : 
          __sum_list( p, from+1, to, sum+p[from] );
    
Very tricky!




--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16942.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sun Apr  3 20:45:40 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 4 Apr 2016 02:45:40 +0200
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459730042650-16942.post@n5.nabble.com>
References: <CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459730042650-16942.post@n5.nabble.com>
Message-ID: <5701B934.7070506@gmx.de>

On 04/04/2016 02:34 AM, Ronaldo wrote:
>     function sum_list0(p, from=0, to) = 
>        let(til = (to==undef) ? len(p)-1 : to )
>        from==til ? 
>           p[til] : 
>           sum_list0( p, from+1, til );
> 
Hmm, right, the tail recursion handling is very basic and
does not consider let(). I think that should be possible
and would be a useful extension.

ciao,
  Torsten.




From rcmpersiano at gmail.com  Sun Apr  3 21:49:19 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Sun, 3 Apr 2016 18:49:19 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459730042650-16942.post@n5.nabble.com>
References: <CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459730042650-16942.post@n5.nabble.com>
Message-ID: <1459734559820-16944.post@n5.nabble.com>

The bad news first: my previous sum_list worked with any uniform list of
numbers, vectors or even matrices. The tail recursion version no! You have
to know the list element type to initialize the sum. :(

The good news: with the tail recursion version of sum_list for vectors, the
least square fitting became a lot faster! With 10000 points, it takes 0.28
sec : 4.5 times less than the previous version.

Thank you again, Tolsten!



--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16944.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Sun Apr  3 21:52:33 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Sun, 3 Apr 2016 18:52:33 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <5701B934.7070506@gmx.de>
References: <CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459730042650-16942.post@n5.nabble.com> <5701B934.7070506@gmx.de>
Message-ID: <1459734753575-16945.post@n5.nabble.com>

Sorry, Torsten. I think I need new glasses...

Do you know why sum_list2 doesn't work at all?



--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16945.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sun Apr  3 22:12:34 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 4 Apr 2016 04:12:34 +0200
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459734753575-16945.post@n5.nabble.com>
References: <CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459730042650-16942.post@n5.nabble.com> <5701B934.7070506@gmx.de>
	<1459734753575-16945.post@n5.nabble.com>
Message-ID: <5701CD92.2000608@gmx.de>

On 04/04/2016 03:52 AM, Ronaldo wrote:
> Do you know why sum_list2 doesn't work at all?
> 
Not work how? Those examples looks fine to me:

function sum_list2(p, from=0, to, sum=0) =
    from > ( (to==undef) ? len(p)-1 : to ) ?
        sum :
        sum_list2( p, from+1, ( (to==undef) ? len(p)-1 : to ), sum+p[from]);

echo(sum_list2([1,2,3,4,5,6,7,8,9,10]));
ECHO: 55

echo(sum_list2([1,2,3,4,5,6,7,8,9,10], 2));
ECHO: 52

echo(sum_list2([1,2,3,4,5,6,7,8,9,10], 2, 6));
ECHO: 25

ciao,
  Torsten.



From doug at moens.org  Sun Apr  3 23:06:16 2016
From: doug at moens.org (doug moen)
Date: Sun, 3 Apr 2016 23:06:16 -0400
Subject: [OpenSCAD]  Simple polygon triangulation
In-Reply-To: <57016283.7030304@gmx.de>
References: <CAGV6i+NQt3pBY0xX_NmLj-7HQBVU9d33OzWL1Z1kzcgRGAou3Q@mail.gmail.com>
	<CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<CAEEmnrNchi5uCVj4YtYV6GLztgxid_77NH_6DLUCni0jnyg5sQ@mail.gmail.com>
	<1459688452069-16924.post@n5.nabble.com> <5701207B.8040000@gmx.de>
	<1459694584779-16927.post@n5.nabble.com>
	<CAGV6i+Pb3YsJp4nTuyTmLrdBeVVXModRmnxpQt0nSrX0+3c=zg@mail.gmail.com>
	<57013987.9070909@gmx.de>
	<CAGV6i+Nh6m1Ximg=sq3EjTAOH5ZvGtjZZtNEUQqPjR707L5evQ@mail.gmail.com>
	<57013FCB.7070800@gmx.de>
	<CAGV6i+N+yRiB4qBrHpX5sriYW7mO7dwnUrORsFu3R_zfXNY+Ug@mail.gmail.com>
	<57016283.7030304@gmx.de>
Message-ID: <CAGV6i+Mh4CmK+us4nLvAKBtTnnJGOJTw=grM_J=BdrE8jwz8ug@mail.gmail.com>

@torsten: There are two use cases for echo(). One is debugging, which is
the 99% use case. The other is stuff like BOM, or runsun's in-console
documentation, which is the 1% use case. I think these two use cases are
sufficiently different that they need different interfaces.

For debugging, we should keep the existing echo() interface. It takes a
list of values, and prints each value as unambiguous source code. It's
simple and easy to use for the common case of printing out some values in
the program.

For debugging, echo() needs to work in every evaluation context, which is
why we are talking about making it work in functions and list
comprehensions. It needs to print a string value as a string literal, and
there are some bugs in this that need to be fixed: within a string literal,
print \ as \\, print " as \", and don't interpret HTML.

For the other 1% use case, the requirement is for 100% control over what
gets printed, and maybe some support for fancy formatting options. Runsun's
in-console documentation needs HTML support, while I assume that BOM needs
HTML turned off.

For the 1% use case, let's introduce another command called print(). It
takes a list of arguments, and outputs them as strings using the same
conversion as the str() function. No commas are printed between arguments,
and the "ECHO: " prefix is not printed. An optional keyword argument,
html=true, enables HTML. No other keyword arguments are accepted, for now.

To do fancy formatting in print(), we'll rely on some auxiliary functions
that convert values into strings in different ways, rather than hard-wiring
formatting features into print() itself. It's better and more flexible to
keep print() orthogonal to formatting. This design is inspired by Python; I
think this aspect of Python is well designed. So here are two auxiliary
formatting functions, repr() and fmt():
   repr(val)
     convert val into a string, which is the source code for reproducing
the value. Like repr() in Python.
   repr(arg1,arg2,...)
      convert the argument list into a string, in exactly the same way that
echo() converts its arguments for printing (but there is no ECHO: prefix)
   fmt(printf_format_string, [val1,val2,...])
      format a list of values into a string using a printf-like format
string. Similar to the % operator in Python. The %r format converts the
value like repr(), while the %s format converts the argument like str().

repr() is useful for duplicating the behaviour of echo() within print(). Eg,
  echo(a,b,c) <=> print("ECHO: ",repr(a,b,c))

The repr() function would need to be implemented in C++, since it has a
variable # of positional and keyword arguments, but fmt() could be
implemented directly in OpenSCAD. Additional formatting functions may be
invented and coded in OpenSCAD. Since print() is a 1% use case, it's
reasonable to keep print() simple and to leave the fancy formatting to
library functions, rather than code everything in C++. Printf-style
formatting in particular is something that can be endlessly elaborated, so
I'd rather keep that in a library to facilitate development.

print() needs to be available as a module (called in statement context).
For BOM and in-console documentation, it doesn't need to be callable from
expressions or list comprehensions. It might not be needed in those
contexts.

Now let's consider which of these might be deprecated in the future.

OpenSCAD is a declarative language. In a declarative language, order of
evaluation doesn't matter. We have discussed using 3 techniques: parallel
evaluation, lazy evaluation, and cacheing, to speed up evaluation in a
future version of the evaluator. These techniques change the order of
evaluation, change the number of times a given expression or statement is
evaluated, and make evaluation order hard or impossible to predict.

Since echo() is used for debugging, it needs to expose the order of
evaluation, whatever that happens to be.

The print() command is used for BOM, which requires determinism and
predictability in what gets printed. So maybe the use of print() disables
optimizations, which is inappropriate for echo(). Or, more likely, we might
not be able to guarantee print() determinism in a future version of the
evaluator. So print() might eventually be deprecated, or restricted to only
being used for debugging. By this time, we should have better ways to do
BOM, eg as described in the OpenSCAD2 proposal.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160403/171254d4/attachment.html>

From rcmpersiano at gmail.com  Sun Apr  3 23:33:51 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Sun, 3 Apr 2016 20:33:51 -0700 (MST)
Subject: [OpenSCAD] Newbie with rotation problem
In-Reply-To: <1459627838667-16914.post@n5.nabble.com>
References: <1459476305077-16876.post@n5.nabble.com>
	<CA+i9EaCDUDxH8q0prCp9pr0xfBiewVZ9rb2uQcn5GCwe8m9q6Q@mail.gmail.com>
	<1459499054224-16880.post@n5.nabble.com>
	<CA+i9EaD4fsAr-LG0-DWa_VbaozeFXztsEGoe8LG+04Gje37raA@mail.gmail.com>
	<1459537913730-16893.post@n5.nabble.com>
	<56FECFC4.1090502@arnholm.org>
	<CAEEmnrPOs=DgPs0DiBHK=AxqN+B8VTAkjSbvHErFne3dmFoi9w@mail.gmail.com>
	<1459621307704-16907.post@n5.nabble.com>
	<CAGV6i+MFs8gg9ZfzBi7MrBUx9+UcGf3W9qof+Cb1F0wQB_TGQg@mail.gmail.com>
	<1459627838667-16914.post@n5.nabble.com>
Message-ID: <1459740831976-16948.post@n5.nabble.com>

The quiz answer:

translate([-40,0,0]) cylinder(r1=20,r2=0,h=25,$fn=3);
translate([0,0,13]) sphere(15,$fa=180);
translate([35,0,0]) cylinder(r=10*sqrt(2),h=20,$fn=4);
translate([70,0,10]) sphere(15,$fn=3);
translate([105,0,9]) sphere(15,$fn=4);

Although I used spheres in the last two, the same result could be made with
cylinder as dough pointed out.
But, the middle one could be not be made by a cube. Why? Cubes are  aligned
with the axis and cylinder starts the base discretization at the x axis.
Well, there were no axis in the image. Yes, but there are two clues of their
directions: the other cylinders and the frame! The frame were made by very
elongated cubes:

translate([-60,-35,-10]) cube([190,0.5,0.5]); 
translate([130,-35,-10]) cube([0.5, 70,0.5]); 
translate([-60, 35,-10]) cube([190,0.5,0.5]); 
translate([-60,-35,-10]) cube([0.5, 70,0.5]); 

translate([-60,-35,30]) cube([190,0.5,0.5]); 
translate([130,-35,30]) cube([0.5, 70,0.5]); 
translate([-60, 35,30]) cube([190,0.5,0.5]); 
translate([-60,-35,30]) cube([0.5, 70,0.5]); 

translate([-60,-35,-10]) cube([0.5, 0.5,40]); 
translate([130, 35,-10]) cube([0.5, 0.5,40]); 
translate([-60, 35,-10]) cube([0.5, 0.5,40]); 
translate([130,-35,-10]) cube([0.5, 0.5,40]); 

so they are aligned with the axis. I could not made them with cylinders
without rotations or scale.

To redeem myself, here is something useful. I have been using those "lines"
a lot to display drawings of polygonals (curves) and meshes for debugging my
surface designs. I even have a module for this:

// p0, p1 points in 3D, thickness number, dots boolean
module line(p0, p1, thickness=1, dots=false) {
  
  function transpose_3_to_4(m) = 
        [ [m[0][0],m[1][0],m[2][0],0],
          [m[0][1],m[1][1],m[2][1],0],
          [m[0][2],m[1][2],m[2][2],0],
          [0, 0, 0, 1] ];
  
  function unit(v) = v/norm(v);

  function rotate_Z_to(t) = 
      let( t2 = unit(t),
           v2 = t2 + [0,0,1],
           d  = v2 * v2,
           d2 = d<1e-6? 1: d,
           r2 = unit([1,0,0] - (2/d2) * v2[0] * v2) , 
           c2 = unit(cross(r2, t2)))
     transpose_3_to_4([ r2, c2, t2 ]); 
  
  if (dots) {
    translate(p0)
      cube(thickness, center=true);
  } else {
    w = p1-p0;
    if (norm(w)>1e-3) {
      translate(p0)
        multmatrix(rotate_Z_to(w))
            cylinder(d=thickness, h=norm(w), $fn=4);
    }
  }
}

I could have used cube instead of cylinder in that module. If you draw a lot
of polygonals with that, render may expend a lot of time to calculate their
tiny intersection. I use it just for preview.



--
View this message in context: http://forum.openscad.org/Newbie-with-rotation-problem-tp16873p16948.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Mon Apr  4 07:03:22 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Mon, 4 Apr 2016 04:03:22 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <CAGV6i+Mh4CmK+us4nLvAKBtTnnJGOJTw=grM_J=BdrE8jwz8ug@mail.gmail.com>
References: <1459688452069-16924.post@n5.nabble.com> <5701207B.8040000@gmx.de>
	<1459694584779-16927.post@n5.nabble.com>
	<CAGV6i+Pb3YsJp4nTuyTmLrdBeVVXModRmnxpQt0nSrX0+3c=zg@mail.gmail.com>
	<57013987.9070909@gmx.de>
	<CAGV6i+Nh6m1Ximg=sq3EjTAOH5ZvGtjZZtNEUQqPjR707L5evQ@mail.gmail.com>
	<57013FCB.7070800@gmx.de>
	<CAGV6i+N+yRiB4qBrHpX5sriYW7mO7dwnUrORsFu3R_zfXNY+Ug@mail.gmail.com>
	<57016283.7030304@gmx.de>
	<CAGV6i+Mh4CmK+us4nLvAKBtTnnJGOJTw=grM_J=BdrE8jwz8ug@mail.gmail.com>
Message-ID: <1459767802220-16950.post@n5.nabble.com>

@doug 
good points. Additionally it might be a good idea to direct the output of a
print(), or why not call it output(), to a new window e.g. called "output"
using C++ libraries' built-in support for this.
If html/xml output will be addressed one day, this separation would avoid a
lot of confusion by design and relieve people from writing their own parsers
to post process OpenSCAD output.




--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16950.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Mon Apr  4 09:59:17 2016
From: runsun at gmail.com (runsun)
Date: Mon, 4 Apr 2016 06:59:17 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459767802220-16950.post@n5.nabble.com>
References: <5701207B.8040000@gmx.de> <1459694584779-16927.post@n5.nabble.com>
	<CAGV6i+Pb3YsJp4nTuyTmLrdBeVVXModRmnxpQt0nSrX0+3c=zg@mail.gmail.com>
	<57013987.9070909@gmx.de>
	<CAGV6i+Nh6m1Ximg=sq3EjTAOH5ZvGtjZZtNEUQqPjR707L5evQ@mail.gmail.com>
	<57013FCB.7070800@gmx.de>
	<CAGV6i+N+yRiB4qBrHpX5sriYW7mO7dwnUrORsFu3R_zfXNY+Ug@mail.gmail.com>
	<57016283.7030304@gmx.de>
	<CAGV6i+Mh4CmK+us4nLvAKBtTnnJGOJTw=grM_J=BdrE8jwz8ug@mail.gmail.com>
	<1459767802220-16950.post@n5.nabble.com>
Message-ID: <1459778357849-16951.post@n5.nabble.com>

Parkinbot wrote
> @doug 
> good points. Additionally it might be a good idea to direct the output of
> a print(), or why not call it output(), to a new window e.g. called
> "output" using C++ libraries' built-in support for this.
> If html/xml output will be addressed one day, this separation would avoid
> a lot of confusion by design and relieve people from writing their own
> parsers to post process OpenSCAD output.

Separated console and output is what the SynWrite editor has. 

Furthermore, a file-based directive can be implanted to direct the output of
current file to a file:

//# SAVE_OUTPUT = <file_path>

Or console:

//# SAVE_CONSOLE_OUTPUT = <file_path>






-----

$  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ), runscad.py( 1 , 2 , git ), synwrite( 1 , 2 );  $ tips: hash( 1 , 2 ), matrix( 1 , 2 ),sweep( 1 , 2 ), var( 1 , 2 ), lerp , animation ( gif , prodVid ), precision( 1 , 2 ), xl-control , type , rounded polygon , chfont 






--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16951.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Mon Apr  4 10:16:49 2016
From: runsun at gmail.com (runsun)
Date: Mon, 4 Apr 2016 07:16:49 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459730042650-16942.post@n5.nabble.com>
References: <CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459730042650-16942.post@n5.nabble.com>
Message-ID: <1459779409628-16952.post@n5.nabble.com>

Ronaldo wrote
>     function sum_list0(p, from=0, to) = 
>        let(til = (to==undef) ? len(p)-1 : to )
>        from==til ? 
>           p[til] : 
>           sum_list0( p, from+1, til );

This one doesn't work AT ALL, 'cos it didn't actually sum up things:

a=[3,4,5,6];
echo( sum_list0(a)) ==> 6 

Ronaldo wrote
>     function sum_list1(p, from=0, to, sum=0) = 
>        let(til = (to==undef) ? len(p)-1 : to )
>        from>til? 
>           sum : 
>           sum_list1( p, from+1, til, sum + p[from] );
> No success. No tail recursion was done. 

This one looks like a tail recursion to me, and seems to be working:

a=[3,4,5,6];
echo( sum_list1(a)); ==> 18

Ronaldo wrote
>     function sum_list2(p, from=0, to, sum=0) = 
>        from>( (to==undef) ? len(p)-1 : to ) ? 
>           sum : 
>           sum_list2( p, from+1, ( (to==undef) ? len(p)-1 : to ),
> sum+p[from] );
>     
> And this doesn't work at all: it returns 1 if to is given and 0 otherwise
> ! Why???

This one works in my computer:

a=[3,4,5,6];
echo( sum_list2(a)); ==> 18
echo( sum_list2(a, to=2)); ==> 12






-----

$  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ), runscad.py( 1 , 2 , git ), synwrite( 1 , 2 );  $ tips: hash( 1 , 2 ), matrix( 1 , 2 ),sweep( 1 , 2 ), var( 1 , 2 ), lerp , animation ( gif , prodVid ), precision( 1 , 2 ), xl-control , type , rounded polygon , chfont 






--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16952.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jpmendes54 at gmail.com  Mon Apr  4 10:30:14 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Mon, 4 Apr 2016 07:30:14 -0700 (MST)
Subject: [OpenSCAD] angel and rotation
In-Reply-To: <1459754915979-16949.post@n5.nabble.com>
References: <1459754915979-16949.post@n5.nabble.com>
Message-ID: <1459780214102-16953.post@n5.nabble.com>

Try

 alpha=atan(hgt/width); 

jpmendes



--
View this message in context: http://forum.openscad.org/angel-and-rotation-tp16949p16953.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Mon Apr  4 10:30:51 2016
From: runsun at gmail.com (runsun)
Date: Mon, 4 Apr 2016 07:30:51 -0700 (MST)
Subject: [OpenSCAD] angel and rotation
In-Reply-To: <1459754915979-16949.post@n5.nabble.com>
References: <1459754915979-16949.post@n5.nabble.com>
Message-ID: <1459780251362-16954.post@n5.nabble.com>

stefan_p wrote
>     alpha=asin((height) / (width));

alpha= asin( height / c );



-----

$  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ), runscad.py( 1 , 2 , git ), synwrite( 1 , 2 );  $ tips: hash( 1 , 2 ), matrix( 1 , 2 ),sweep( 1 , 2 ), var( 1 , 2 ), lerp , animation ( gif , prodVid ), precision( 1 , 2 ), xl-control , type , rounded polygon , chfont 






--
View this message in context: http://forum.openscad.org/angel-and-rotation-tp16949p16954.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Mon Apr  4 10:33:14 2016
From: runsun at gmail.com (runsun)
Date: Mon, 4 Apr 2016 07:33:14 -0700 (MST)
Subject: [OpenSCAD] angel and rotation
In-Reply-To: <1459780214102-16953.post@n5.nabble.com>
References: <1459754915979-16949.post@n5.nabble.com>
	<1459780214102-16953.post@n5.nabble.com>
Message-ID: <1459780394846-16956.post@n5.nabble.com>

yes, atan(h/w) works, too. Or maybe even better:

alpha= atan2( h, w);



-----

$  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ), runscad.py( 1 , 2 , git ), synwrite( 1 , 2 );  $ tips: hash( 1 , 2 ), matrix( 1 , 2 ),sweep( 1 , 2 ), var( 1 , 2 ), lerp , animation ( gif , prodVid ), precision( 1 , 2 ), xl-control , type , rounded polygon , chfont 






--
View this message in context: http://forum.openscad.org/angel-and-rotation-tp16949p16956.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Mon Apr  4 10:56:42 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 4 Apr 2016 16:56:42 +0200
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459778357849-16951.post@n5.nabble.com>
References: <5701207B.8040000@gmx.de> <1459694584779-16927.post@n5.nabble.com>
	<CAGV6i+Pb3YsJp4nTuyTmLrdBeVVXModRmnxpQt0nSrX0+3c=zg@mail.gmail.com>
	<57013987.9070909@gmx.de>
	<CAGV6i+Nh6m1Ximg=sq3EjTAOH5ZvGtjZZtNEUQqPjR707L5evQ@mail.gmail.com>
	<57013FCB.7070800@gmx.de>
	<CAGV6i+N+yRiB4qBrHpX5sriYW7mO7dwnUrORsFu3R_zfXNY+Ug@mail.gmail.com>
	<57016283.7030304@gmx.de>
	<CAGV6i+Mh4CmK+us4nLvAKBtTnnJGOJTw=grM_J=BdrE8jwz8ug@mail.gmail.com>
	<1459767802220-16950.post@n5.nabble.com>
	<1459778357849-16951.post@n5.nabble.com>
Message-ID: <570280AA.9010500@gmx.de>

On 04/04/2016 03:59 PM, runsun wrote:
> Furthermore, a file-based directive can be implanted to direct
> the output of current file to a file:
> 
I don't think that belongs into the script. That's inherently
not portable to other systems. While probably not very relevant
anymore, just think of a user working on Windows with user
partition as D: sending the files over to someone who has
the D: drive as DVD writer. We certainly don't want to log
directly to DVD ;).

There could be a GUI option and/or a "save console content"
maybe.

ciao,
  Torsten.



From jpmendes54 at gmail.com  Mon Apr  4 11:04:14 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Mon, 4 Apr 2016 08:04:14 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459778357849-16951.post@n5.nabble.com>
References: <1459694584779-16927.post@n5.nabble.com>
	<CAGV6i+Pb3YsJp4nTuyTmLrdBeVVXModRmnxpQt0nSrX0+3c=zg@mail.gmail.com>
	<57013987.9070909@gmx.de>
	<CAGV6i+Nh6m1Ximg=sq3EjTAOH5ZvGtjZZtNEUQqPjR707L5evQ@mail.gmail.com>
	<57013FCB.7070800@gmx.de>
	<CAGV6i+N+yRiB4qBrHpX5sriYW7mO7dwnUrORsFu3R_zfXNY+Ug@mail.gmail.com>
	<57016283.7030304@gmx.de>
	<CAGV6i+Mh4CmK+us4nLvAKBtTnnJGOJTw=grM_J=BdrE8jwz8ug@mail.gmail.com>
	<1459767802220-16950.post@n5.nabble.com>
	<1459778357849-16951.post@n5.nabble.com>
Message-ID: <1459782254941-16958.post@n5.nabble.com>

Output should be persistent until user decision (file), or buffer full
(console). 

jpmendes



--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16958.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Mon Apr  4 11:17:44 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Mon, 4 Apr 2016 08:17:44 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459779409628-16952.post@n5.nabble.com>
References: <CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459730042650-16942.post@n5.nabble.com>
	<1459779409628-16952.post@n5.nabble.com>
Message-ID: <1459783064295-16959.post@n5.nabble.com>

runsun wrote
> 
> Ronaldo wrote
>>     function sum_list0(p, from=0, to) = 
>>        let(til = (to==undef) ? len(p)-1 : to )
>>        from==til ? 
>>           p[til] : 
>>           sum_list0( p, from+1, til );
> This one doesn't work AT ALL, 'cos it didn't actually sum up things:

Ops, a transcription mistake. The correct one:

 function sum_list0(p, from=0, to) =
        let(til = (to==undef) ? len(p)-1 : to )
        from==til ?
           p[til] :
           p[from] + sum_list0( p, from+1, til );


runsun wrote
> 
> Ronaldo wrote
>>     function sum_list1(p, from=0, to, sum=0) = 
>>        let(til = (to==undef) ? len(p)-1 : to )
>>        from>til? 
>>           sum : 
>>           sum_list1( p, from+1, til, sum + p[from] );
>> No success. No tail recursion was done. 
> This one looks like a tail recursion to me, and seems to be working:

To see it is not, compare:

echo(sum_list1([ for(i=[1:1000]) for(j=[1:1000]) 1 ]));

with:

echo(sum_list3([ for(i=[1:1000]) for(j=[1:1000]) 1 ]));

or:

echo(sum_list2([ for(i=[1:1000]) for(j=[1:1000]) 1 ]));


runsun wrote
> This one works in my computer:
> 
> a=[3,4,5,6];
> echo( sum_list2(a)); ==> 18
> echo( sum_list2(a, to=2)); ==> 12

In mine too, sorry. And here the tail recursion works as well.




--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16959.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Mon Apr  4 11:30:12 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Mon, 4 Apr 2016 08:30:12 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459734559820-16944.post@n5.nabble.com>
References: <CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459730042650-16942.post@n5.nabble.com>
	<1459734559820-16944.post@n5.nabble.com>
Message-ID: <1459783812637-16960.post@n5.nabble.com>

Ronaldo wrote
> The bad news first: my previous sum_list worked with any uniform list of
> numbers, vectors or even matrices. The tail recursion version no! You have
> to know the list element type to initialize the sum. :(

Yes, but it is possible to add vectors and matrix with sum_list2 if we
initialize correctly the sum in the call :

echo(sum_list2([ for(i=[1:100]) for(j=[1:100]) [ 1, 2] ],  sum=[0,0]));
  
echo(sum_list2([ for(i=[1:100]) for(j=[1:100]) [ [ 1, 2], [0,1] ] ],sum=[
[0,0], [0,0] ]));
  





--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16960.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Mon Apr  4 12:43:15 2016
From: runsun at gmail.com (runsun)
Date: Mon, 4 Apr 2016 09:43:15 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459783064295-16959.post@n5.nabble.com>
References: <CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459730042650-16942.post@n5.nabble.com>
	<1459779409628-16952.post@n5.nabble.com>
	<1459783064295-16959.post@n5.nabble.com>
Message-ID: <1459788195332-16961.post@n5.nabble.com>

Ronaldo wrote
> To see it is not, compare:
> echo(sum_list1([ for(i=[1:1000]) for(j=[1:1000]) 1 ]));
> with:
> echo(sum_list3([ for(i=[1:1000]) for(j=[1:1000]) 1 ]));
> or:
> echo(sum_list2([ for(i=[1:1000]) for(j=[1:1000]) 1 ]));

Before making comparison, let me make sure I am not wrong about something:
how do you decide if it's a tail recursion ?

I look at the code and see it fits the definition of tail recursion. From my
understanding, the result doesn't matter. Maybe my approach is wrong ?




-----

$  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ), runscad.py( 1 , 2 , git ), synwrite( 1 , 2 );  $ tips: hash( 1 , 2 ), matrix( 1 , 2 ),sweep( 1 , 2 ), var( 1 , 2 ), lerp , animation ( gif , prodVid ), precision( 1 , 2 ), xl-control , type , rounded polygon , chfont 






--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16961.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Mon Apr  4 12:51:26 2016
From: doug at moens.org (doug moen)
Date: Mon, 4 Apr 2016 12:51:26 -0400
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459788195332-16961.post@n5.nabble.com>
References: <CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459730042650-16942.post@n5.nabble.com>
	<1459779409628-16952.post@n5.nabble.com>
	<1459783064295-16959.post@n5.nabble.com>
	<1459788195332-16961.post@n5.nabble.com>
Message-ID: <CAGV6i+N8ZPOCO9aMBUsXZkWB85LtFC7n0AtgXR08Uq4i1YEHGg@mail.gmail.com>

The OpenSCAD implementation only supports a limited subset of tail
recursion. The body of the function f() must match the pattern c ? a : b,
where a or b is a call to f(). Adding a let() to the beginning of that
breaks the pattern.

We can extend this a bit, but full support for tail recursion elimination
will require a significant redesign of the evaluator.

On 4 April 2016 at 12:43, runsun <runsun at gmail.com> wrote:

> Ronaldo wrote
> > To see it is not, compare:
> > echo(sum_list1([ for(i=[1:1000]) for(j=[1:1000]) 1 ]));
> > with:
> > echo(sum_list3([ for(i=[1:1000]) for(j=[1:1000]) 1 ]));
> > or:
> > echo(sum_list2([ for(i=[1:1000]) for(j=[1:1000]) 1 ]));
>
> Before making comparison, let me make sure I am not wrong about something:
> how do you decide if it's a tail recursion ?
>
> I look at the code and see it fits the definition of tail recursion. From
> my
> understanding, the result doesn't matter. Maybe my approach is wrong ?
>
>
>
>
> -----
>
> $  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ),
> runscad.py( 1 , 2 , git ), synwrite( 1 , 2 );  $ tips: hash( 1 , 2 ),
> matrix( 1 , 2 ),sweep( 1 , 2 ), var( 1 , 2 ), lerp , animation ( gif ,
> prodVid ), precision( 1 , 2 ), xl-control , type , rounded polygon , chfont
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16961.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160404/c4d33b8c/attachment.html>

From runsun at gmail.com  Mon Apr  4 13:25:24 2016
From: runsun at gmail.com (runsun)
Date: Mon, 4 Apr 2016 10:25:24 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <CAGV6i+N8ZPOCO9aMBUsXZkWB85LtFC7n0AtgXR08Uq4i1YEHGg@mail.gmail.com>
References: <1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459730042650-16942.post@n5.nabble.com>
	<1459779409628-16952.post@n5.nabble.com>
	<1459783064295-16959.post@n5.nabble.com>
	<1459788195332-16961.post@n5.nabble.com>
	<CAGV6i+N8ZPOCO9aMBUsXZkWB85LtFC7n0AtgXR08Uq4i1YEHGg@mail.gmail.com>
Message-ID: <1459790724502-16963.post@n5.nabble.com>

doug.moen wrote
> The OpenSCAD implementation only supports a limited subset of tail
> recursion. The body of the function f() must match the pattern c ? a : b,
> where a or b is a call to f(). Adding a let() to the beginning of that
> breaks the pattern.

Arrrhhh thx for that. I didn't recall seeing this explanation anywhere. Lots
and LOTS of my code are recursions that I thought are recursions but with
let(). Maybe it'd be a good idea to document this.




-----

$  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ), runscad.py( 1 , 2 , git ), synwrite( 1 , 2 );  $ tips: hash( 1 , 2 ), matrix( 1 , 2 ),sweep( 1 , 2 ), var( 1 , 2 ), lerp , animation ( gif , prodVid ), precision( 1 , 2 ), xl-control , type , rounded polygon , chfont 






--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16963.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From coltoiu.matei at gmail.com  Mon Apr  4 16:09:03 2016
From: coltoiu.matei at gmail.com (rav0r)
Date: Mon, 4 Apr 2016 13:09:03 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <c287afd36a948b4f4caac6b503b27f44@arnholm.org>
References: <1458772628432-16696.post@n5.nabble.com>
	<1458870106340-16717.post@n5.nabble.com>
	<c287afd36a948b4f4caac6b503b27f44@arnholm.org>
Message-ID: <1459800543763-16964.post@n5.nabble.com>

It did work, I came up with this idea, but it takes days to render. Will try
out the other versions.



--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p16964.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Mon Apr  4 17:36:39 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Mon, 4 Apr 2016 23:36:39 +0200
Subject: [OpenSCAD] AMF export (and import)
Message-ID: <5702DE67.1070407@arnholm.org>

I have done a couple of tests of AMF export from OpenSCAD, and find that 
it appears to work ok.

A minor issue is that OpenSCAD AMF files are written with an extra blank 
line after every line with data and some of the tags are located in odd 
places. However, this still works with most XML parsers as it does with 
mine. It could be made to appear more finished though, by removing the 
blank lines.

When testing the AMF files in netfabb basic, the ones I checked seem to 
be ok.

An interesting thing is that in an unreleased test version of 
AngelScript CSG, one can do export and import of AMF. Here is an import 
example:

  solid@ thing = polyhedron(filepath:"nut_and_bolt.amf");

This will import the first object in the AMF file. Alternatively, if 
there are more objects, for example a nut (id 0) and a bolt (id 1):

  solid@ nut  = polyhedron(filepath:"nut_and_bolt.amf",id:0);
  solid@ bolt = polyhedron(filepath:"nut_and_bolt.amf",id:1);

I was able to import OpenSCAD AMFs this way. I think it would be nice to 
have similar capabilities in OpenSCAD, for example to import the nut:

  import(file="nut_and_bolt.amf", id=1);

Importing AMF is easier and safer than STL, since it contains ready made 
polyhedrons with no need to compare coordinates.

Carsten Arnholm



From rcmpersiano at gmail.com  Mon Apr  4 17:45:42 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Mon, 4 Apr 2016 18:45:42 -0300
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1459800543763-16964.post@n5.nabble.com>
References: <1458772628432-16696.post@n5.nabble.com>
	<1458870106340-16717.post@n5.nabble.com>
	<c287afd36a948b4f4caac6b503b27f44@arnholm.org>
	<1459800543763-16964.post@n5.nabble.com>
Message-ID: <CA+i9EaCcmQujRvC5Q-h_KNt=saOofpqJgqczQ-UbPz=Mp1fNCA@mail.gmail.com>

All depends on the complexity of your starting model and the slice width.
If you could share your model we could suggest other alternatives. For
instance, if your model has only vertical throughout holes, you would get a
little time gain doing the differences after modulation. Anyway, please
share your final solution. I am interested in it.

2016-04-04 17:09 GMT-03:00 rav0r <coltoiu.matei at gmail.com>:

> It did work, I came up with this idea, but it takes days to render. Will
> try
> out the other versions.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p16964.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160404/bbdeea75/attachment.html>

From Torsten.Paul at gmx.de  Mon Apr  4 17:54:07 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 4 Apr 2016 23:54:07 +0200
Subject: [OpenSCAD] AMF export (and import)
In-Reply-To: <5702DE67.1070407@arnholm.org>
References: <5702DE67.1070407@arnholm.org>
Message-ID: <5702E27F.2070708@gmx.de>

On 04/04/2016 11:36 PM, Carsten Arnholm wrote:
> I was able to import OpenSCAD AMFs this way. I think it would be nice to have
> similar capabilities in OpenSCAD.
>
The pull request for that is a bit stuck behind the SVG import as both
use the same library setup. I guess we have to untangle that or finally
decide how to go on with the SVG import.

Importing the objects separately is a good point, not sure how to
do that in a nice way yet. DXF has something similar with layers.

ciao,
  Torsten.



From doug at moens.org  Mon Apr  4 19:58:38 2016
From: doug at moens.org (doug moen)
Date: Mon, 4 Apr 2016 19:58:38 -0400
Subject: [OpenSCAD] AMF export (and import)
In-Reply-To: <5702DE67.1070407@arnholm.org>
References: <5702DE67.1070407@arnholm.org>
Message-ID: <CAGV6i+P-U25sXX5_YyROkTQ3XZdRHDdmit_H82WiPPx=t6HQnw@mail.gmail.com>

Hi Carsten. I've been thinking about AMF import, over here:
https://github.com/openscad/openscad/issues/1608

My plan is to import all of the objects in an AMF file, preserving the
object ids as "part names". An AMF object can contain multiple volumes,
labelled with different materials and colors, and those will be kept
distinct as well.
    import("nut_and_bolt.amf")

You can select an individual part by name using
    select_part("1") import("nut_and_bolt.amf")

I haven't documented select_part() yet, but it enables a number of
interesting programming idioms.

This also works for multiple layers in a DXF file.

Doug.

On 4 April 2016 at 17:36, Carsten Arnholm <arnholm at arnholm.org> wrote:

> I have done a couple of tests of AMF export from OpenSCAD, and find that
> it appears to work ok.
>
> A minor issue is that OpenSCAD AMF files are written with an extra blank
> line after every line with data and some of the tags are located in odd
> places. However, this still works with most XML parsers as it does with
> mine. It could be made to appear more finished though, by removing the
> blank lines.
>
> When testing the AMF files in netfabb basic, the ones I checked seem to be
> ok.
>
> An interesting thing is that in an unreleased test version of AngelScript
> CSG, one can do export and import of AMF. Here is an import example:
>
>  solid@ thing = polyhedron(filepath:"nut_and_bolt.amf");
>
> This will import the first object in the AMF file. Alternatively, if there
> are more objects, for example a nut (id 0) and a bolt (id 1):
>
>  solid@ nut  = polyhedron(filepath:"nut_and_bolt.amf",id:0);
>  solid@ bolt = polyhedron(filepath:"nut_and_bolt.amf",id:1);
>
> I was able to import OpenSCAD AMFs this way. I think it would be nice to
> have similar capabilities in OpenSCAD, for example to import the nut:
>
>  import(file="nut_and_bolt.amf", id=1);
>
> Importing AMF is easier and safer than STL, since it contains ready made
> polyhedrons with no need to compare coordinates.
>
> Carsten Arnholm
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160404/b34f8337/attachment.html>

From arnholm at arnholm.org  Tue Apr  5 04:51:25 2016
From: arnholm at arnholm.org (arnholm at arnholm.org)
Date: Tue, 05 Apr 2016 10:51:25 +0200
Subject: [OpenSCAD] AMF export (and import)
In-Reply-To: <CAGV6i+P-U25sXX5_YyROkTQ3XZdRHDdmit_H82WiPPx=t6HQnw@mail.gmail.com>
References: <5702DE67.1070407@arnholm.org>
	<CAGV6i+P-U25sXX5_YyROkTQ3XZdRHDdmit_H82WiPPx=t6HQnw@mail.gmail.com>
Message-ID: <2fc100b4b33d04bf8b665b2757b133d5@arnholm.org>

Hi Doug,

Thanks for the reference, interesting (long) discussions. Good to see 
that AMF is "on the table". You are right that the issue of different 
materials (I see color as mostly a property of material) will come up 
this way. The select_part("1") import("nut_and_bolt.amf"); syntax looks 
like it is doing much the same as in my AngelScript implementation, so 
that looks quite nice.

A useful thing would be if one could make a multi part model, export it 
as AMF and successfully "round trip" it between OpenSCAD and for example 
AngelScript CSG. Practical interoperability between applications is 
important, and better AMF support would help in this regard.

@Torsten: I saw your comment earlier. I don't know SVG in much detail, 
but from what I have seen it appears that SVG and AMF are rather 
different animals and I would suggest treating them separately, and pick 
the lowest hanging fruit first (AMF).

Carsten Arnholm


On 2016-04-05 01:58, doug moen wrote:
> Hi Carsten. I've been thinking about AMF import, over here:
> https://github.com/openscad/openscad/issues/1608 [2]
> 
> My plan is to import all of the objects in an AMF file, preserving the
> object ids as "part names". An AMF object can contain multiple
> volumes, labelled with different materials and colors, and those will
> be kept distinct as well.
>     import("nut_and_bolt.amf")
> 
> You can select an individual part by name using
>     select_part("1") import("nut_and_bolt.amf")
> 
> I haven't documented select_part() yet, but it enables a number of
> interesting programming idioms.
> 
> This also works for multiple layers in a DXF file.
> 
> Doug.



From Torsten.Paul at gmx.de  Tue Apr  5 08:53:20 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Tue, 5 Apr 2016 14:53:20 +0200
Subject: [OpenSCAD] AMF export (and import)
In-Reply-To: <2fc100b4b33d04bf8b665b2757b133d5@arnholm.org>
References: <5702DE67.1070407@arnholm.org>
	<CAGV6i+P-U25sXX5_YyROkTQ3XZdRHDdmit_H82WiPPx=t6HQnw@mail.gmail.com>
	<2fc100b4b33d04bf8b665b2757b133d5@arnholm.org>
Message-ID: <5703B540.5060802@gmx.de>

On 04/05/2016 10:51 AM, arnholm at arnholm.org wrote:
> @Torsten: I saw your comment earlier. I don't know SVG in
> much detail, but from what I have seen it appears that SVG
> and AMF are rather different animals and I would suggest
> treating them separately, and pick the lowest hanging fruit
> first (AMF).
>
Yeah, it's basically all the build system stuff they share,
otherwise there's not much relation.

Although there's another option for import/export and that's
3MF. It can collect a number of plus points over AMF, mainly
open and freely accessible specification and now also a
working library that is usable on multiple platforms. The
interaction regarding changes/bugfixes was not brilliant,
but my simple build system patch got in and the libzip issue
on Linux about reading files generated on Windows is now also
closed.

ciao,
  Torsten.



From s3030150 at icloud.com  Tue Apr  5 17:05:59 2016
From: s3030150 at icloud.com (s3030150)
Date: Tue, 5 Apr 2016 14:05:59 -0700 (MST)
Subject: [OpenSCAD] weird rotate around 2 axis
Message-ID: <1459890359282-16972.post@n5.nabble.com>

Hello,

I'm new to OpenSCAD and I have a little problem with Rotate. rotating around
2 axis does not work properly for me. see the source in screenshots please.
I typed all objects manually to prevent any mistake in modules

here is what I want to achieve
<http://forum.openscad.org/file/n16972/openscad2.png> 

here is what I get
<http://forum.openscad.org/file/n16972/openscad.png> 


the difference is in the style how I use the rotate function. 

rotate(a=45,v=[1,1,0]) - this rotates object improperly
rotate([45,45,0]) - this rotates object improperly
rotate(a=1,v=[45,45,0]) - this rotates object properly but i cannot use it
because the X and Y angles are not the same in my project

could please somebody explain the difference in these three examples? maybe
they are totally different or should not be used like this. thank you!




--
View this message in context: http://forum.openscad.org/weird-rotate-around-2-axis-tp16972.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From hypher at gmail.com  Tue Apr  5 18:00:12 2016
From: hypher at gmail.com (Yona Appletree)
Date: Tue, 05 Apr 2016 15:00:12 -0700
Subject: [OpenSCAD] weird rotate around 2 axis
In-Reply-To: <1459890359282-16972.post@n5.nabble.com>
References: <1459890359282-16972.post@n5.nabble.com>
Message-ID: <5704356C.5080705@gmail.com>

Hello and welcome to using OpenSCAD!

Rotation is a pain point for many newcomers and it can certainly be 
unintuitive. I don't have time to go too far into the details, and there 
are many tutorials online, but here's a little food for thought:

You can think of the standard rotate([rx,ry,rz]) command as expanding to 
rotate([0,0,rz]) rotate([0,ry,0]) rotate([rx,0,0]).

The order of rotation matters. The rotate command first rotates around 
X, then Y, then Z. If you want the rotations in a different order, use 
multiple rotate commands.

Try playing around with this to see what I mean:
rx = 20;
ry = 30;
rz = 50;
color("white") rotate([0,0,rz]) rotate([0,ry,0]) rotate([rx,0,0]) 
translate([20,0,0]) cube(2, true);
color("blue") rotate([rx,ry,rz]) translate([20,0,0]) cube(2, true);
color("red") rotate([rz,ry,rx]) translate([20,0,0]) cube(2, true);


The reason your rotate(a=45,v=[1,1,0]) example works is because you are 
specifically rotating around the axis defined by x=1,y=1,z=0.
To help visualize this, try the following:

// The axis of rotation
v = [10,10,0];

// Do the rotation
for(t=[0:30:359])
     rotate(t, v) translate([10,0,0]) color(t==0?"green":"blue") cube(2, 
true);

// Visualize the plane
color("red") hull() {
     sphere(.25);
     translate(v) sphere(.25, true);
}

It should look like this:



Note: My understanding of all this isn't perfect, so forgive me if I've 
made a mistake here. If anyone else has corrections, please chime in :)

~ Yona

> s3030150 <mailto:s3030150 at icloud.com>
> April 5, 2016 at 14:05
> Hello,
>
> I'm new to OpenSCAD and I have a little problem with Rotate. rotating 
> around
> 2 axis does not work properly for me. see the source in screenshots 
> please.
> I typed all objects manually to prevent any mistake in modules
>
> here is what I want to achieve
> <http://forum.openscad.org/file/n16972/openscad2.png>
>
> here is what I get
> <http://forum.openscad.org/file/n16972/openscad.png>
>
>
> the difference is in the style how I use the rotate function.
>
> rotate(a=45,v=[1,1,0]) - this rotates object improperly
> rotate([45,45,0]) - this rotates object improperly
> rotate(a=1,v=[45,45,0]) - this rotates object properly but i cannot use it
> because the X and Y angles are not the same in my project
>
> could please somebody explain the difference in these three examples? 
> maybe
> they are totally different or should not be used like this. thank you!
>
>
>
>
> --
> View this message in context: 
> http://forum.openscad.org/weird-rotate-around-2-axis-tp16972.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160405/19a7b646/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image.png
Type: image/png
Size: 34992 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160405/19a7b646/attachment.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: compose-unknown-contact.jpg
Type: image/jpeg
Size: 770 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160405/19a7b646/attachment.jpg>

From rcmpersiano at gmail.com  Tue Apr  5 18:10:20 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Tue, 5 Apr 2016 15:10:20 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <5701A484.5090409@gmx.de>
References: <CAEEmnrP+-RqFmHVDaj7nM32p+-mUY9HtYmSPKnCvbv4MJtZASA@mail.gmail.com>
	<CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
Message-ID: <1459894220854-16974.post@n5.nabble.com>

As mentioned by Parkinbot somewhere in this thread, one annoying aspect of
the OpenSCAD language is the non-existence of a loop escape - something like
the break in C. For instance, if you have to do some test in a list like:

> function test(l) = [ for(i=[0:len(l)-1]) if (some_test_fail(l,i)) 0 ]==[];

there is no way to exit the loop test as soon as a fail is detected. I found
a way to escape using tail recursion. For the above case, it would be:

> function test(l,i=0) = 
>     (i==len(l)) || some_test_fail(l,i)) ?
>         i==len(l) :
>         test(l,i+1);

If two nested loops are needed, we define one recursion for each:

> function passed_for_all(n, i=0) = 
>     (i==n) || ! passed_for_i(n, i, (i+1)) ? 
>         i==n : 
>         passed_for_all(n, (i+1));
> 
> function passed_for_i(n, i, j) = 
>     (j==n) || some_test_fail(i, (i+1)) ? 
>         j==n : 
>         passed_for_i(n, i, (j+1));

That last example is just a skeleton to show the principle, where n defines
the number of "iterations" of i and j.
The very surprising aspect is that the recursive solution, even if all inner
tests returns false, is faster than the iterative one. In my machine,
passed_iter(2500) expends 33sec while the recursive version
passed_for_all(2500) expends 27sec . This is a bonus to the escape from a
loop.



--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16974.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Tue Apr  5 18:53:45 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Tue, 5 Apr 2016 15:53:45 -0700 (MST)
Subject: [OpenSCAD] Creating a 3D model from "openprop" output data
In-Reply-To: <1459845304488-16969.post@n5.nabble.com>
References: <1398547599679-7751.post@n5.nabble.com>
	<1407397671080-9248.post@n5.nabble.com>
	<1459845304488-16969.post@n5.nabble.com>
Message-ID: <1459896825536-16975.post@n5.nabble.com>

@thecaptain & @dislect,

Welcome to the forum. Your post is still flagged as "This post has NOT been
accepted by the mailing list yet", so nobody gets it unless they look. 
You need to subscribe to the  mailing list
<http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1>  ,
and respond to the registration email.





-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Creating-a-3D-model-from-openprop-output-data-tp7751p16975.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From s3030150 at icloud.com  Wed Apr  6 03:11:19 2016
From: s3030150 at icloud.com (s3030150)
Date: Wed, 6 Apr 2016 00:11:19 -0700 (MST)
Subject: [OpenSCAD] weird rotate around 2 axis
In-Reply-To: <5704356C.5080705@gmail.com>
References: <1459890359282-16972.post@n5.nabble.com>
	<5704356C.5080705@gmail.com>
Message-ID: <1459926679523-16979.post@n5.nabble.com>

Hi Hypher,

thanks for the explanation, now I finally got it. So I need to create axis
by defining a vector and then tilt the object on the surface defined by
0,0,0 and the new axis. 


this is what helped to explain
*The reason your rotate(a=45,v=[1,1,0]) example works is because you are
specifically rotating around the axis defined by x=1,y=1,z=0.*


BIG THANKS!!!



--
View this message in context: http://forum.openscad.org/weird-rotate-around-2-axis-tp16972p16979.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Wed Apr  6 05:48:25 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Wed, 6 Apr 2016 02:48:25 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459894220854-16974.post@n5.nabble.com>
References: <CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459894220854-16974.post@n5.nabble.com>
Message-ID: <1459936105309-16980.post@n5.nabble.com>

Thanks for addressing this aspect again. Let me annote that the semantics of 


> function test(l,i=0) =
>     (i==len(l)) || some_test_fail(l,i)) ?
>         i==len(l) :
>         test(l,i+1); 

is not unique from the perspective of a functional language. In general,
there is no reliable evaluation sequence of an OR expression. To avoid
calling some_test() for len(l)==i accidently, which might crash or slow down
your code, you'd prefer to write:


> function test(l,i=0) =
>     (i>=len(l)) ? 
>         false:
>         some_test_fail(l,i)) ? 
>           false:
>           test(l,i+1); 

I suppose you tweeked your is_ear() test with this pattern.




--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16980.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From gwadej at anomaly.org  Wed Apr  6 08:25:20 2016
From: gwadej at anomaly.org (G. Wade Johnson)
Date: Wed, 6 Apr 2016 07:25:20 -0500
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459936105309-16980.post@n5.nabble.com>
References: <CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459894220854-16974.post@n5.nabble.com>
	<1459936105309-16980.post@n5.nabble.com>
Message-ID: <20160406072520.775f5a3e@cygnus>

On Wed, 6 Apr 2016 02:48:25 -0700 (MST)
Parkinbot <rudolf at parkinbot.com> wrote:

> Thanks for addressing this aspect again. Let me annote that the
> semantics of 
> 
> 
> > function test(l,i=0) =
> >     (i==len(l)) || some_test_fail(l,i)) ?
> >         i==len(l) :
> >         test(l,i+1); 
> 
> is not unique from the perspective of a functional language. In
> general, there is no reliable evaluation sequence of an OR
> expression. To avoid calling some_test() for len(l)==i accidently,
> which might crash or slow down your code, you'd prefer to write:

That's a surprising thing to say. Every C-derived language I've worked
in has had the same evaluation sequence for OR, based on short-cut
semantics. By this definition, left-hand term is evaluated and only if
it is false is the right hand side evaluated.

I would agree that mathematically it doesn't matter. In every
programming language I've checked, this has been the order.

G. Wade

> 
> > function test(l,i=0) =
> >     (i>=len(l)) ? 
> >         false:
> >         some_test_fail(l,i)) ? 
> >           false:
> >           test(l,i+1); 
> 
> I suppose you tweeked your is_ear() test with this pattern.
> 
> 
> 
> 
> --
> View this message in context:
> http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16980.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


-- 
I'm pretty sure it's been declared dead at least once, which is usually
a requirement for a technology to be production grade stable.
                                                    -- Matt S. Trout


From rcmpersiano at gmail.com  Wed Apr  6 11:06:17 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Wed, 6 Apr 2016 08:06:17 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459936105309-16980.post@n5.nabble.com>
References: <CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459894220854-16974.post@n5.nabble.com>
	<1459936105309-16980.post@n5.nabble.com>
Message-ID: <1459955177154-16982.post@n5.nabble.com>

Parkinbot wrote
> Let me annote that the semantics of 
>> function test(l,i=0) =
>>     (i==len(l)) || some_test_fail(l,i)) ?
>>         i==len(l) :
>>         test(l,i+1); 
> is not unique from the perspective of a functional language. 

I considered that. However, as OpenSCAD language has no mutable state, I
think there is no harm calling some_test_fail() with improper arguments. The
undef value that may be returned is dealed as false by the boolean operator.
So no need to overcharge the code with one more conditional expression.


Parkinbot wrote
> I suppose you tweeked your is_ear() test with this pattern.

You might be referring to any_ear() :

> function any_ear(lsp) =
>       let( l    = len(lsp) )
>       [ for(j=[0:l-1]) if( is_ear(j, lsp) ) j ] [0];

Yes, it can benefit from tail recursion/escape with the code:

>  function any_ear(lsp, j=0) =
>     (j==len(lsp)) ?
>          undef :
>          is_ear(j,lsp) ?
>               j :
>               any_ear(lsp,j+1);
> 
> // or simply:
>  function any_ear(lsp, j=0) =
>     (j==len(lsp)) || is_ear(j,lsp) ?
>               j :
>               any_ear(lsp,j+1);

But what bothers me yet are functions like the exclude_vertex():

>  function exclude_vertex(k,lsp) =
>      concat( k<=0?          []: [for(i=[0  :k-1])       lsp[i] ] ,
>              k>=len(lsp)-1? []: [for(i=[k+1:len(lsp)-1]) lsp[i] ] );

which would be simpler, and possibly faster, with more list processing
function in the language:

> function exclude_vertex(k,lsp) =
>      concat(sub_list(0, k-1, lsp ), sub_list(k+1, len(lsp)-1, lsp) );






--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16982.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Wed Apr  6 12:36:07 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Wed, 6 Apr 2016 09:36:07 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459955177154-16982.post@n5.nabble.com>
References: <CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459894220854-16974.post@n5.nabble.com>
	<1459936105309-16980.post@n5.nabble.com>
	<1459955177154-16982.post@n5.nabble.com>
Message-ID: <1459960567177-16983.post@n5.nabble.com>

To put my simple polygon triangulation in use, I need to check before whether
the polygon is in fact simple and warn the user otherwise. I wrote a simple
version of a simple polygon check. I thought it would be O(n^2) for there is
two nested loops of constant time edge-edge intersection tests. However, my
time tests have shown a much greater order, even bigger than O(n^3). I
attached the code with the hope that someone could  show me the mistake of
my time analysis.

simple_polygon_test.scad
<http://forum.openscad.org/file/n16983/simple_polygon_test.scad>  



--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16983.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From coltoiu.matei at gmail.com  Wed Apr  6 12:37:25 2016
From: coltoiu.matei at gmail.com (rav0r)
Date: Wed, 6 Apr 2016 09:37:25 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <CA+i9EaCcmQujRvC5Q-h_KNt=saOofpqJgqczQ-UbPz=Mp1fNCA@mail.gmail.com>
References: <1458772628432-16696.post@n5.nabble.com>
	<1458870106340-16717.post@n5.nabble.com>
	<c287afd36a948b4f4caac6b503b27f44@arnholm.org>
	<1459800543763-16964.post@n5.nabble.com>
	<CA+i9EaCcmQujRvC5Q-h_KNt=saOofpqJgqczQ-UbPz=Mp1fNCA@mail.gmail.com>
Message-ID: <1459960645480-16984.post@n5.nabble.com>

It's a frame with a grid, about 250mm long, 80 mm wide and 5 bars
(longtitudinal) plus 3 cross bars. Openscad is the only application that can
work without issues in regard to "full" stl's, not only facets. 



--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p16984.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Wed Apr  6 12:50:42 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Wed, 6 Apr 2016 09:50:42 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1459960645480-16984.post@n5.nabble.com>
References: <1458772628432-16696.post@n5.nabble.com>
	<1458870106340-16717.post@n5.nabble.com>
	<c287afd36a948b4f4caac6b503b27f44@arnholm.org>
	<1459800543763-16964.post@n5.nabble.com>
	<CA+i9EaCcmQujRvC5Q-h_KNt=saOofpqJgqczQ-UbPz=Mp1fNCA@mail.gmail.com>
	<1459960645480-16984.post@n5.nabble.com>
Message-ID: <1459961442267-16985.post@n5.nabble.com>

I would take a very different approach for your problem. I would "modulate"
the center lines of each bar, sweep each with the bar section and union
everything. A sweep module may be found in:

https://github.com/openscad/list-comprehension-demos
<https://github.com/openscad/list-comprehension-demos>  

Take the sweep-path.scad as an example. And ask for help if you need.



--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p16985.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Wed Apr  6 13:01:18 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Wed, 6 Apr 2016 10:01:18 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1459961442267-16985.post@n5.nabble.com>
References: <1458772628432-16696.post@n5.nabble.com>
	<1458870106340-16717.post@n5.nabble.com>
	<c287afd36a948b4f4caac6b503b27f44@arnholm.org>
	<1459800543763-16964.post@n5.nabble.com>
	<CA+i9EaCcmQujRvC5Q-h_KNt=saOofpqJgqczQ-UbPz=Mp1fNCA@mail.gmail.com>
	<1459960645480-16984.post@n5.nabble.com>
	<1459961442267-16985.post@n5.nabble.com>
Message-ID: <1459962078476-16986.post@n5.nabble.com>

You will need also

https://github.com/OskarLinde/scad-utils
<https://github.com/OskarLinde/scad-utils>  



--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p16986.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From coltoiu.matei at gmail.com  Wed Apr  6 13:08:11 2016
From: coltoiu.matei at gmail.com (rav0r)
Date: Wed, 6 Apr 2016 10:08:11 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1459961442267-16985.post@n5.nabble.com>
References: <1458772628432-16696.post@n5.nabble.com>
	<1458870106340-16717.post@n5.nabble.com>
	<c287afd36a948b4f4caac6b503b27f44@arnholm.org>
	<1459800543763-16964.post@n5.nabble.com>
	<CA+i9EaCcmQujRvC5Q-h_KNt=saOofpqJgqczQ-UbPz=Mp1fNCA@mail.gmail.com>
	<1459960645480-16984.post@n5.nabble.com>
	<1459961442267-16985.post@n5.nabble.com>
Message-ID: <1459962491677-16987.post@n5.nabble.com>

That is easier said than done, but the frame has an irregular shape. I could,
of course use this module http://www.thingiverse.com/thing:210099 for the
extrusion but I need all the grid's elements to have a specific bevel and 3D
orientation. I guess the whole job is harder than I thought, though, for a
core 2 duo cpu. Probably an i7 would do just fine.



--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p16987.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Wed Apr  6 13:33:07 2016
From: doug at moens.org (doug moen)
Date: Wed, 6 Apr 2016 13:33:07 -0400
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <20160406072520.775f5a3e@cygnus>
References: <CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459894220854-16974.post@n5.nabble.com>
	<1459936105309-16980.post@n5.nabble.com>
	<20160406072520.775f5a3e@cygnus>
Message-ID: <CAGV6i+Mu3XwesjeydyyjBoEecuMkd4hC0BqYRgR=nQUWvxRx4Q@mail.gmail.com>

In OpenSCAD, 'x || y' has shortcut evaluation semantics. y is not evaluated
if x is true.

Similarly, 'x && y' has shortcut evaluation semantics. y is not evaluated
if x is false.

This matters not just for performance, but also because functions can abort
if passed bad arguments. So you may want to write 'in_range(x) && f(x)' in
some cases, testing that x is in range before calling f (so that f doesn't
abort on the argument x).

Currently this happens due to recursion and iteration limits, but OpenSCAD
is adding an assert() expression so that you can explicitly test for bad
function arguments and abort with a message that's useful for debugging.
There is an 'assert' expression in the pipeline, in a recent pull request
from Torsten.

So we have two features that compromise mathematical purity: shortcut
evaluation, and partial functions (functions which abort when passed a bad
argument). As a result, the || and && operators are not fully commutative.

But, all of the general purpose pure functional programming languages make
the same compromise, which I think is necessary for practical reasons.

On 6 April 2016 at 08:25, G. Wade Johnson <gwadej at anomaly.org> wrote:

> On Wed, 6 Apr 2016 02:48:25 -0700 (MST)
> Parkinbot <rudolf at parkinbot.com> wrote:
>
> > Thanks for addressing this aspect again. Let me annote that the
> > semantics of
> >
> >
> > > function test(l,i=0) =
> > >     (i==len(l)) || some_test_fail(l,i)) ?
> > >         i==len(l) :
> > >         test(l,i+1);
> >
> > is not unique from the perspective of a functional language. In
> > general, there is no reliable evaluation sequence of an OR
> > expression. To avoid calling some_test() for len(l)==i accidently,
> > which might crash or slow down your code, you'd prefer to write:
>
> That's a surprising thing to say. Every C-derived language I've worked
> in has had the same evaluation sequence for OR, based on short-cut
> semantics. By this definition, left-hand term is evaluated and only if
> it is false is the right hand side evaluated.
>
> I would agree that mathematically it doesn't matter. In every
> programming language I've checked, this has been the order.
>
> G. Wade
>
> >
> > > function test(l,i=0) =
> > >     (i>=len(l)) ?
> > >         false:
> > >         some_test_fail(l,i)) ?
> > >           false:
> > >           test(l,i+1);
> >
> > I suppose you tweeked your is_ear() test with this pattern.
> >
> >
> >
> >
> > --
> > View this message in context:
> >
> http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16980.html
> > Sent from the OpenSCAD mailing list archive at Nabble.com.
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> --
> I'm pretty sure it's been declared dead at least once, which is usually
> a requirement for a technology to be production grade stable.
>                                                     -- Matt S. Trout
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160406/cafdc1bb/attachment.html>

From rcmpersiano at gmail.com  Wed Apr  6 13:52:15 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Wed, 6 Apr 2016 14:52:15 -0300
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1459962491677-16987.post@n5.nabble.com>
References: <1458772628432-16696.post@n5.nabble.com>
	<1458870106340-16717.post@n5.nabble.com>
	<c287afd36a948b4f4caac6b503b27f44@arnholm.org>
	<1459800543763-16964.post@n5.nabble.com>
	<CA+i9EaCcmQujRvC5Q-h_KNt=saOofpqJgqczQ-UbPz=Mp1fNCA@mail.gmail.com>
	<1459960645480-16984.post@n5.nabble.com>
	<1459961442267-16985.post@n5.nabble.com>
	<1459962491677-16987.post@n5.nabble.com>
Message-ID: <CA+i9EaDe0CEm67iyMX4rULX1nf3vL8+QL19JdR1u0Vq6f3UdEg@mail.gmail.com>

Do you have an image of the frame?

2016-04-06 14:08 GMT-03:00 rav0r <coltoiu.matei at gmail.com>:

> That is easier said than done, but the frame has an irregular shape. I
> could,
> of course use this module http://www.thingiverse.com/thing:210099 for the
> extrusion but I need all the grid's elements to have a specific bevel and
> 3D
> orientation. I guess the whole job is harder than I thought, though, for a
> core 2 duo cpu. Probably an i7 would do just fine.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p16987.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160406/96f15e7e/attachment.html>

From lenbok at gmail.com  Wed Apr  6 14:45:38 2016
From: lenbok at gmail.com (Len Trigg)
Date: Thu, 7 Apr 2016 06:45:38 +1200
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <CAGV6i+Mu3XwesjeydyyjBoEecuMkd4hC0BqYRgR=nQUWvxRx4Q@mail.gmail.com>
References: <CAGV6i+OLaNa0eev0M9m-YQwgNWTo6Jq1KxKL5g-Wk3WbHac-+w@mail.gmail.com>
	<CAEEmnrMJ-LCbPaZitUoctqfR+UZrA-rkPv9uv_UUz6W5RJet9A@mail.gmail.com>
	<CAGV6i+N31YD4eYPQt+d1Q3hJrhnvpLc63K1YazJ-oYhk8EnBhw@mail.gmail.com>
	<1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459894220854-16974.post@n5.nabble.com>
	<1459936105309-16980.post@n5.nabble.com>
	<20160406072520.775f5a3e@cygnus>
	<CAGV6i+Mu3XwesjeydyyjBoEecuMkd4hC0BqYRgR=nQUWvxRx4Q@mail.gmail.com>
Message-ID: <CAOGVwe=wgRT51LFMyZqnVb6mYqy6Z_4-mEtUR_zODKs9AggjLA@mail.gmail.com>

https://en.wikipedia.org/wiki/Short-circuit_evaluation#Support_in_common_programming_languages
has a nice table of the languages that support short-circuit evaluation vs
"eager" evaluation of boolean operations. Many support both types of
evaluation but the majority just use short-circuit evaluation.

Cheers,
Len.


On 7 April 2016 at 05:33, doug moen <doug at moens.org> wrote:

> In OpenSCAD, 'x || y' has shortcut evaluation semantics. y is not
> evaluated if x is true.
>
> Similarly, 'x && y' has shortcut evaluation semantics. y is not evaluated
> if x is false.
>
> This matters not just for performance, but also because functions can
> abort if passed bad arguments. So you may want to write 'in_range(x) &&
> f(x)' in some cases, testing that x is in range before calling f (so that f
> doesn't abort on the argument x).
>
> Currently this happens due to recursion and iteration limits, but OpenSCAD
> is adding an assert() expression so that you can explicitly test for bad
> function arguments and abort with a message that's useful for debugging.
> There is an 'assert' expression in the pipeline, in a recent pull request
> from Torsten.
>
> So we have two features that compromise mathematical purity: shortcut
> evaluation, and partial functions (functions which abort when passed a bad
> argument). As a result, the || and && operators are not fully commutative.
>
> But, all of the general purpose pure functional programming languages make
> the same compromise, which I think is necessary for practical reasons.
>
> On 6 April 2016 at 08:25, G. Wade Johnson <gwadej at anomaly.org> wrote:
>
>> On Wed, 6 Apr 2016 02:48:25 -0700 (MST)
>> Parkinbot <rudolf at parkinbot.com> wrote:
>>
>> > Thanks for addressing this aspect again. Let me annote that the
>> > semantics of
>> >
>> >
>> > > function test(l,i=0) =
>> > >     (i==len(l)) || some_test_fail(l,i)) ?
>> > >         i==len(l) :
>> > >         test(l,i+1);
>> >
>> > is not unique from the perspective of a functional language. In
>> > general, there is no reliable evaluation sequence of an OR
>> > expression. To avoid calling some_test() for len(l)==i accidently,
>> > which might crash or slow down your code, you'd prefer to write:
>>
>> That's a surprising thing to say. Every C-derived language I've worked
>> in has had the same evaluation sequence for OR, based on short-cut
>> semantics. By this definition, left-hand term is evaluated and only if
>> it is false is the right hand side evaluated.
>>
>> I would agree that mathematically it doesn't matter. In every
>> programming language I've checked, this has been the order.
>>
>> G. Wade
>>
>> >
>> > > function test(l,i=0) =
>> > >     (i>=len(l)) ?
>> > >         false:
>> > >         some_test_fail(l,i)) ?
>> > >           false:
>> > >           test(l,i+1);
>> >
>> > I suppose you tweeked your is_ear() test with this pattern.
>> >
>> >
>> >
>> >
>> > --
>> > View this message in context:
>> >
>> http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16980.html
>> > Sent from the OpenSCAD mailing list archive at Nabble.com.
>> >
>> > _______________________________________________
>> > OpenSCAD mailing list
>> > Discuss at lists.openscad.org
>> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>> --
>> I'm pretty sure it's been declared dead at least once, which is usually
>> a requirement for a technology to be production grade stable.
>>                                                     -- Matt S. Trout
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160407/3a130a62/attachment.html>

From rudolf at parkinbot.com  Wed Apr  6 14:57:37 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Wed, 6 Apr 2016 11:57:37 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <CAGV6i+Mu3XwesjeydyyjBoEecuMkd4hC0BqYRgR=nQUWvxRx4Q@mail.gmail.com>
References: <1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459894220854-16974.post@n5.nabble.com>
	<1459936105309-16980.post@n5.nabble.com>
	<20160406072520.775f5a3e@cygnus>
	<CAGV6i+Mu3XwesjeydyyjBoEecuMkd4hC0BqYRgR=nQUWvxRx4Q@mail.gmail.com>
Message-ID: <1459969057577-16991.post@n5.nabble.com>

doug.moen wrote
> In OpenSCAD, 'x || y' has shortcut evaluation semantics. y is not
> evaluated
> if x is true.

I know that, and it is easy to test out. Shortcut evaluation is common (but
misleading semantics with many caveats) in procedural languages. In a
functional language such an assumption about implementation is not allowed,
as it can break code, when automatically parallelized. Think about a
multithreaded version of OpenSCAD, which I hope will be available sooner or
later ;-) 

So why not implement a mighty pattern like a 'breaking for-loop' immediately
with neutral semantics.




--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16991.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Wed Apr  6 15:19:57 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Wed, 6 Apr 2016 21:19:57 +0200
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459969057577-16991.post@n5.nabble.com>
References: <1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459894220854-16974.post@n5.nabble.com>
	<1459936105309-16980.post@n5.nabble.com>
	<20160406072520.775f5a3e@cygnus>
	<CAGV6i+Mu3XwesjeydyyjBoEecuMkd4hC0BqYRgR=nQUWvxRx4Q@mail.gmail.com>
	<1459969057577-16991.post@n5.nabble.com>
Message-ID: <5705615D.4050503@gmx.de>

On 04/06/2016 08:57 PM, Parkinbot wrote:
> So why not implement a mighty pattern like a 'breaking for-loop'
> immediately with neutral semantics.
> 
Did you have a look at the c-style for loop? As mentioned before,
I think that should allow breaking the loop based on a condition
for most cases.

Looking at the commit history that should be available in all
dev snapshots (merged 2016-01-26). It needs to be enabled in the
Preferences->Features.

echo([ for (a = 0;a < 10 && rands(0, 1, 1)[0] > 0.2;a = a + 1) a ]);

ciao,
  Torsten.



From tim at auriga.com  Wed Apr  6 16:53:21 2016
From: tim at auriga.com (Shaporev, Timur)
Date: Wed, 6 Apr 2016 20:53:21 +0000
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459969057577-16991.post@n5.nabble.com>
References: <1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459894220854-16974.post@n5.nabble.com>
	<1459936105309-16980.post@n5.nabble.com>	<20160406072520.775f5a3e@cygnus>
	<CAGV6i+Mu3XwesjeydyyjBoEecuMkd4hC0BqYRgR=nQUWvxRx4Q@mail.gmail.com>,
	<1459969057577-16991.post@n5.nabble.com>
Message-ID: <724A02CD730E604F85F09BD6883428AB25BBD476@HQ-MS1.office.auriga.msk>

Do you mean Lisp is not really functional language? :-)
________________________________________
From: Discuss [discuss-bounces at lists.openscad.org] on behalf of Parkinbot [rudolf at parkinbot.com]
Sent: 06 April 2016 21:57
To: discuss at lists.openscad.org
Subject: Re: [OpenSCAD] Simple polygon triangulation

doug.moen wrote
> In OpenSCAD, 'x || y' has shortcut evaluation semantics. y is not
> evaluated
> if x is true.

I know that, and it is easy to test out. Shortcut evaluation is common (but
misleading semantics with many caveats) in procedural languages. In a
functional language such an assumption about implementation is not allowed,
as it can break code, when automatically parallelized. Think about a
multithreaded version of OpenSCAD, which I hope will be available sooner or
later ;-)

So why not implement a mighty pattern like a 'breaking for-loop' immediately
with neutral semantics.




--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16991.html
Sent from the OpenSCAD mailing list archive at Nabble.com.

_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


From rudolf at parkinbot.com  Wed Apr  6 17:35:31 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Wed, 6 Apr 2016 14:35:31 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <5705615D.4050503@gmx.de>
References: <1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459894220854-16974.post@n5.nabble.com>
	<1459936105309-16980.post@n5.nabble.com>
	<20160406072520.775f5a3e@cygnus>
	<CAGV6i+Mu3XwesjeydyyjBoEecuMkd4hC0BqYRgR=nQUWvxRx4Q@mail.gmail.com>
	<1459969057577-16991.post@n5.nabble.com> <5705615D.4050503@gmx.de>
Message-ID: <1459978531842-16994.post@n5.nabble.com>

Ah yes, thanks, I got that and was happy about it. 
The comment you cited was just an answer to the tail-recursive scheme of
Ronaldo. 

The thread is holding to many themes now - so confusion grows. 


tp3 wrote
> Did you have a look at the c-style for loop? As mentioned before,
> I think that should allow breaking the loop based on a condition
> for most cases.
> 
> Looking at the commit history that should be available in all
> dev snapshots (merged 2016-01-26). It needs to be enabled in the
> Preferences->Features.
> 
> echo([ for (a = 0;a < 10 && rands(0, 1, 1)[0] > 0.2;a = a + 1) a ]);





--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16994.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From hypher at gmail.com  Wed Apr  6 18:50:30 2016
From: hypher at gmail.com (Hypher)
Date: Wed, 6 Apr 2016 15:50:30 -0700 (MST)
Subject: [OpenSCAD] An HSV / HSB to RGB Color function in OpenSCAD
In-Reply-To: <1459904743617-16976.post@n5.nabble.com>
References: <1412404947956-9835.post@n5.nabble.com>
	<1459904743617-16976.post@n5.nabble.com>
Message-ID: <570592A8.1010503@gmail.com>

Jayod,

Great to hear you find the function useful. BlocksCAD is great and I 
really appreciate it bringing non-coders to parametric modeling.

With this message, I hereby release the original function in this thread 
into the public domain, relinquishing any copyright claim I might have, 
to the extent legally possible.

So, you're free to use the code anywhere you like. You're welcome to 
link back to this thread for credit. You can attribute to "Yona 
Appletree (Hypher)" if you like as well.

Best,

Yona

jayod [via OpenSCAD] wrote:
> Jayod,
>
> Great to hear you find the function useful. BlocksCAD is great and I 
> really appreciate it bringing non-coders to parametric modeling.
>
> With this message, I hereby release the original function in this 
> thread into the public domain, relinquishing any copyright claim I 
> might have, to the extent legally possible.
>
> So, you're free to use the code anywhere you like. You're welcome to 
> link back to this thread for credit. You can attribute to "Yona 
> Appletree (Hypher)" if you like as well.
>
> Best,
>
> Yona




--
View this message in context: http://forum.openscad.org/An-HSV-HSB-to-RGB-Color-function-in-OpenSCAD-tp9835p16995.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160406/afd20cab/attachment.html>

From rudolf at parkinbot.com  Wed Apr  6 19:41:45 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Wed, 6 Apr 2016 16:41:45 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459960567177-16983.post@n5.nabble.com>
References: <1459521461909-16889.post@n5.nabble.com>
	<1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459894220854-16974.post@n5.nabble.com>
	<1459936105309-16980.post@n5.nabble.com>
	<1459955177154-16982.post@n5.nabble.com>
	<1459960567177-16983.post@n5.nabble.com>
Message-ID: <1459986105850-16996.post@n5.nabble.com>

Ronaldo, this code is hard to understand and indeed not at all as simple as
it could be - so it would find 'false' when applied to itself ;-) 

A simple polygon is not self-intersecting. So, if there are no two lines
that intersect, the predicate will find a 'true'. I guess this is, what you
are testing. 

It was easier for me to implement it, to also get acquainted with the new
breakable C style for-loop, Thorsten had pointed out. The code is fully
iterative and in my tests I found the expected O(n?) behavior. 

The idea is (as already mentioned in an earlier answer), that if two lines
AB and CD intersect, the polygon ACBD will be convex in a CW or CCW sense.
This is linearly tested by the function is_intersecting(), which simply
recurres to is_left(). The rest is just a double breaking for-loop around
this convexity test.  


> P = test_polygon(N,M, 30, 15, 60); 
> 
> polygon(P); 
> echo(is_simple(P)); 
> 
> // true if polygon S is simple
> function is_simple(S) =
>   let(n=len(S)) 
>      n<4?true:
>      n==4?is_intersecting(S, 0, 2) || is_intersecting(S, 1, 3):
>      let (res = [for(i=0; i
> &lt;
> n-2 &amp;&amp; is_simpleline(S, i); i=i+1) 1])
>      len(res)==n-2; 
> 
> // true if segment S[a]S[a+1] is not intersecting any other segment in S
> function is_simpleline(S, a) = 
>   let(n=len(S))
>   let(res = [for(i=a+2; i&lt;a+n-2 &amp;&amp; !is_intersecting(S, a%n,
> i%n); i=i+1) 1])
>   len(res)==n-4; 
> 
> // true, if lines S[a]S[a+1] and S[b]S[b+1] intersect, convexity test
> function is_intersecting(S, a, b) = 
>   let(n=len(S), P=[S[a%n], S[b%n], S[(a+1)%n], S[(b+1)%n]])
>   let (sum = [for(i=[0:3]) if (is_left(P[i%4], P[(i+1)%4], P[(i+2)%4]))
> 1])
>   len(sum) == 4 || len(sum) == 0; 
>          
> // true if c is left of a---
> &gt;
> b
> function is_left(a, b, c) = (b[0] - a[0])*(c[1] - a[1]) - (b[1] -
> a[1])*(c[0] - a[0]) > 0; 





--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16996.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Fri Apr  8 00:34:43 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Thu, 7 Apr 2016 21:34:43 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1459986105850-16996.post@n5.nabble.com>
References: <1459537819457-16892.post@n5.nabble.com>
	<1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459894220854-16974.post@n5.nabble.com>
	<1459936105309-16980.post@n5.nabble.com>
	<1459955177154-16982.post@n5.nabble.com>
	<1459960567177-16983.post@n5.nabble.com>
	<1459986105850-16996.post@n5.nabble.com>
Message-ID: <1460090083737-16997.post@n5.nabble.com>

Parkinbot wrote
> Ronaldo, this code is hard to understand and indeed not at all as simple
> as it could be - so it would find 'false' when applied to itself ;-) 

You are right, my code is a lot more complex than yours. And it is not easy
to follow. But there is a reason for that. And it is simple. :)

Your code use loop escapes when it finds two intersecting polygon edges.
But, if the polygon is simple, each pair of edges will be tested with the
time consuming function is_intersecting(). So the worst case for your method
is a simple polygon which is, by the way, my most common case.

I included a lot of previous simple tests before the hard part
is_intersecting() is called. The sorted data structure the code builds is
intended to allow the elimination of far away edges without lengthy
geometrical tests. 

As yours, my algorithm is O(n^2). It has exactly the same loops. However, I
am able to escape the loops eventually before all pairs is considered even
with simple polygons. Comparing times: my method takes 60sec in my machine
to approve as simple the test case with 1000 vertices; your method took
107sec. It is not a good advantage.

I found two reasons for my code is so slow. First, I was not exploring the
full potential of the data structure. But I found a very simple test that
speed up the method a lot. And I found also that the implementation of
quicksort I use is far from efficient. And, as it is not tail-recursive, it
generates a stack overflow for more than 2000 records.

So, I seached for other sorting methods which would allow tail recursion.
And I could code a version of the merge sort where the merge process is
tail-recursive. I tested it with arrays of 20000 elements without stack
overflow. And it is very fast, sorting a random array of 20000 elements in
32sec.

With this sorting method and a best elimination rule in the simple polygon
test, my method got a new life. It is able to identify a simple polygon
(from my test case) with 8000 edges in 15sec. A huge gain!

If you or anyone is interested in this new version, I can make it available
here. I will discuss my experience with the implementation of the sorting
methods in another thread.

I am sure there are methods a lot better and with a lower order. But any of
them would need a very complex implementation even in C. So, code complexity
sometimes is favorable.




--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16997.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Fri Apr  8 04:24:52 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 8 Apr 2016 01:24:52 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1460090083737-16997.post@n5.nabble.com>
References: <1459541945769-16898.post@n5.nabble.com>
	<1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459894220854-16974.post@n5.nabble.com>
	<1459936105309-16980.post@n5.nabble.com>
	<1459955177154-16982.post@n5.nabble.com>
	<1459960567177-16983.post@n5.nabble.com>
	<1459986105850-16996.post@n5.nabble.com>
	<1460090083737-16997.post@n5.nabble.com>
Message-ID: <1460103892603-16998.post@n5.nabble.com>


> I thought it would be O(n^2) for there is two nested loops of constant
> time edge-edge intersection tests. However, my time tests have shown a
> much greater order, even bigger than O(n^3).

>From this, I thought you are trying to find a O(n^2) version of a general
is_simple test. 

But what you write now, sounds interesting. I still haven't fully understood
the short cutting idea behind your code and how it takes advantage of
quicksort in general. Or does it just show its advantages to the subset of
polynoms you are considering for, and you are exploiting a know structural
feature?

To learn from your approach would you elaborate on its ideas? 





--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16998.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Fri Apr  8 07:17:34 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 8 Apr 2016 04:17:34 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1460103892603-16998.post@n5.nabble.com>
References: <1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459894220854-16974.post@n5.nabble.com>
	<1459936105309-16980.post@n5.nabble.com>
	<1459955177154-16982.post@n5.nabble.com>
	<1459960567177-16983.post@n5.nabble.com>
	<1459986105850-16996.post@n5.nabble.com>
	<1460090083737-16997.post@n5.nabble.com>
	<1460103892603-16998.post@n5.nabble.com>
Message-ID: <1460114254304-16999.post@n5.nabble.com>

Still don't see the application of quicksort, but I guess a subdivision
scheme would be faster than the 'dumb' approach I presented.  

A subdivsion approach for is_simple() would be: 
1. calc the bounding box and split that recursively with respect to its
larger size. (If that fails one can subdivide with respect to the smaller
size - for optimization.)
2. For each divison you keep track of the points within. 
3. Recursion ends, if the enlarged box containing also the neighbors of the
points within the set can't be subdivided any more. This means:
   a) a box contains a single point (i.e. one point and its two neighbors
are to be regarded), 
   b) the subdivision scheme does not reduce the number of points any more.
4. now check each box containing more than 1 points for intersections using
is_simple() from the 'dumb' approach. 

I think this could apply well to your problem and guess it would expect it
to be something like O(n log n)



--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p16999.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Fri Apr  8 10:49:01 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Fri, 8 Apr 2016 07:49:01 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1460103892603-16998.post@n5.nabble.com>
References: <1459686783443-16923.post@n5.nabble.com>
	<1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459894220854-16974.post@n5.nabble.com>
	<1459936105309-16980.post@n5.nabble.com>
	<1459955177154-16982.post@n5.nabble.com>
	<1459960567177-16983.post@n5.nabble.com>
	<1459986105850-16996.post@n5.nabble.com>
	<1460090083737-16997.post@n5.nabble.com>
	<1460103892603-16998.post@n5.nabble.com>
Message-ID: <1460126941503-17000.post@n5.nabble.com>

I think the time performance was worst than O(n^2) due to the quicksort
implementation, not the method itself.

Now the shortcut of the new version: I collect the polygon edges (pairs of
vertices) in a list sorted from left to right (x coordinate) and parse the
list from left. When comparing two edges for intersection, I first check if
the second edge is to the right of the rightest extreme of the first edge.
If so, I can avoid the geometrical test of the second edge and all the
following edges in the list because they are sorted. Some special care
should be taken when the two edges are subsequent in the polygon border: if
it pass the previous test we may disregard it; if not we must check if they
aren't collinear and overlapping. Another small detail: if two subsequent
vertices are coincident (this may happens in practice!) the method may give
a false negative. This case should be deal with before sorting.

That is my last version of the method:

simple_polygon_test.scad
<http://forum.openscad.org/file/n17000/simple_polygon_test.scad>  

I hope it is more diggestible :)




--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p17000.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Fri Apr  8 11:02:13 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Fri, 8 Apr 2016 08:02:13 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1460114254304-16999.post@n5.nabble.com>
References: <1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459894220854-16974.post@n5.nabble.com>
	<1459936105309-16980.post@n5.nabble.com>
	<1459955177154-16982.post@n5.nabble.com>
	<1459960567177-16983.post@n5.nabble.com>
	<1459986105850-16996.post@n5.nabble.com>
	<1460090083737-16997.post@n5.nabble.com>
	<1460103892603-16998.post@n5.nabble.com>
	<1460114254304-16999.post@n5.nabble.com>
Message-ID: <1460127733558-17001.post@n5.nabble.com>

How do you imagine the subdivision would deal with a big edge crossing the
cloud of the others (intersecting or not) ? This seems to be a bad case for
my method.

Will you be able to write a subdivision method without the support of a tree
data structure?

If tree data structure is not a burden for you, consider the Shamos method,
it is O(n log n).

http://euro.ecom.cmu.edu/people/faculty/mshamos/1976GeometricIntersection.pdf
<http://euro.ecom.cmu.edu/people/faculty/mshamos/1976GeometricIntersection.pdf>  



--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p17001.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Fri Apr  8 12:57:23 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 8 Apr 2016 09:57:23 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1460127733558-17001.post@n5.nabble.com>
References: <5701A484.5090409@gmx.de> <1459894220854-16974.post@n5.nabble.com>
	<1459936105309-16980.post@n5.nabble.com>
	<1459955177154-16982.post@n5.nabble.com>
	<1459960567177-16983.post@n5.nabble.com>
	<1459986105850-16996.post@n5.nabble.com>
	<1460090083737-16997.post@n5.nabble.com>
	<1460103892603-16998.post@n5.nabble.com>
	<1460114254304-16999.post@n5.nabble.com>
	<1460127733558-17001.post@n5.nabble.com>
Message-ID: <1460134643700-17002.post@n5.nabble.com>

There is always a worst case. I guess, sorting only in x dimension will give
you trouble with structures extending in y direction, while some oszillation
in x direction occurs. 

Having a diagonal edge will indeed reduce the speed of the my subdivision
approach to O(n?). Thanks for pointing this out. 
I guess, one can analyze this worst case when the two suggested subdivisons
have failed and the set is still too large for the 'dumb' test, using either
a) the longest edge as subdivision axis then ending up with two (worst case)
equally sized boxes containing reduced sets
or b) scale the bounding box by sqrt(2) and rotate the point set around its
middle point by 45?. 

But this is optimization stuff and follows the 20/80 rule: It makes a code
faster on the last 20% of the cases, with 80% of the time expended for dev. 

I'll have a look into the paper ... thanks for the link. I found for me, its
good have some own thoughts, *before* going into the literature, to better
understand the nature of a problem. 

Recursion has many disadvantages, but one advantage: You don't have to pay
for tree structures (remember the indexing). In practice it is always faster
to use an idexing scheme, but in OpenSCAD you depend on lists anyway. So
structured values just being passed through are copied by reference, which
is as fast as using indices - indeed it is indexing. 




--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p17002.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Fri Apr  8 15:42:34 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Fri, 8 Apr 2016 12:42:34 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1460126941503-17000.post@n5.nabble.com>
References: <1459724156082-16940.post@n5.nabble.com> <5701A484.5090409@gmx.de>
	<1459894220854-16974.post@n5.nabble.com>
	<1459936105309-16980.post@n5.nabble.com>
	<1459955177154-16982.post@n5.nabble.com>
	<1459960567177-16983.post@n5.nabble.com>
	<1459986105850-16996.post@n5.nabble.com>
	<1460090083737-16997.post@n5.nabble.com>
	<1460103892603-16998.post@n5.nabble.com>
	<1460126941503-17000.post@n5.nabble.com>
Message-ID: <1460144554421-17003.post@n5.nabble.com>

A more readable code of the merge sort:

merge_sort2.scad <http://forum.openscad.org/file/n17003/merge_sort2.scad>  



--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p17003.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From coltoiu.matei at gmail.com  Sat Apr  9 10:12:57 2016
From: coltoiu.matei at gmail.com (rav0r)
Date: Sat, 9 Apr 2016 07:12:57 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <CA+i9EaDe0CEm67iyMX4rULX1nf3vL8+QL19JdR1u0Vq6f3UdEg@mail.gmail.com>
References: <1458772628432-16696.post@n5.nabble.com>
	<1458870106340-16717.post@n5.nabble.com>
	<c287afd36a948b4f4caac6b503b27f44@arnholm.org>
	<1459800543763-16964.post@n5.nabble.com>
	<CA+i9EaCcmQujRvC5Q-h_KNt=saOofpqJgqczQ-UbPz=Mp1fNCA@mail.gmail.com>
	<1459960645480-16984.post@n5.nabble.com>
	<1459961442267-16985.post@n5.nabble.com>
	<1459962491677-16987.post@n5.nabble.com>
	<CA+i9EaDe0CEm67iyMX4rULX1nf3vL8+QL19JdR1u0Vq6f3UdEg@mail.gmail.com>
Message-ID: <1460211177053-17004.post@n5.nabble.com>

Rendering Polygon Mesh using CGAL...
WARNING: CGAL Evaluator: Root node didn't fit into cache
PolySets in cache: 9
PolySet cache size in bytes: 221448
CGAL Polyhedrons in cache: 597
CGAL cache size in bytes: 104854928
   Top level object is a 3D object:
   Simple:        yes
   Vertices:   175957
   Halfedges:  529502
   Edges:      264751
   Halffacets: 191240
   Facets:      95620
   Volumes:      3420
Total rendering time: 20 hours, 48 minutes, 39 seconds
Rendering finished.

In reality, it took 3 times that much as it says. 
<http://forum.openscad.org/file/n17004/scad.jpg> 



--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17004.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Sat Apr  9 10:53:46 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Sat, 9 Apr 2016 11:53:46 -0300
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1460211177053-17004.post@n5.nabble.com>
References: <1458772628432-16696.post@n5.nabble.com>
	<1458870106340-16717.post@n5.nabble.com>
	<c287afd36a948b4f4caac6b503b27f44@arnholm.org>
	<1459800543763-16964.post@n5.nabble.com>
	<CA+i9EaCcmQujRvC5Q-h_KNt=saOofpqJgqczQ-UbPz=Mp1fNCA@mail.gmail.com>
	<1459960645480-16984.post@n5.nabble.com>
	<1459961442267-16985.post@n5.nabble.com>
	<1459962491677-16987.post@n5.nabble.com>
	<CA+i9EaDe0CEm67iyMX4rULX1nf3vL8+QL19JdR1u0Vq6f3UdEg@mail.gmail.com>
	<1460211177053-17004.post@n5.nabble.com>
Message-ID: <CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>

Well, it is a lot of rendering time indeed for an object so simple. And
because of its simplicity, the slicing approach doesn't seem to be the
best. Do you need a so fine slicing? You have more than 1000 slices!

What OpenSCAD version are you using? "Let" was not recognized by your
version!
I am sure you would have a huge benefit from using sweep. But certainly it
would not work with older versions like yours. You will need the last
official version.
Would you share the code of your grid frame?

2016-04-09 11:12 GMT-03:00 rav0r <coltoiu.matei at gmail.com>:

> Rendering Polygon Mesh using CGAL...
> WARNING: CGAL Evaluator: Root node didn't fit into cache
> PolySets in cache: 9
> PolySet cache size in bytes: 221448
> CGAL Polyhedrons in cache: 597
> CGAL cache size in bytes: 104854928
>    Top level object is a 3D object:
>    Simple:        yes
>    Vertices:   175957
>    Halfedges:  529502
>    Edges:      264751
>    Halffacets: 191240
>    Facets:      95620
>    Volumes:      3420
> Total rendering time: 20 hours, 48 minutes, 39 seconds
> Rendering finished.
>
> In reality, it took 3 times that much as it says.
> <http://forum.openscad.org/file/n17004/scad.jpg>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17004.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160409/7baf4a3c/attachment.html>

From runsun at gmail.com  Sat Apr  9 12:13:33 2016
From: runsun at gmail.com (runsun)
Date: Sat, 9 Apr 2016 09:13:33 -0700 (MST)
Subject: [OpenSCAD] weird rotate around 2 axis
In-Reply-To: <1459890359282-16972.post@n5.nabble.com>
References: <1459890359282-16972.post@n5.nabble.com>
Message-ID: <1460218413098-17006.post@n5.nabble.com>

s3030150 wrote
> rotate(a=45,v=[1,1,0]) - this rotates object improperly
> rotate([45,45,0]) - this rotates object improperly
> rotate(a=1,v=[45,45,0]) - this rotates object properly but i cannot use it
> because the X and Y angles are not the same in my project

v is the axis of rotation, so the following v settings are the same:

   v= [1,1,0] 
   v= [45,45,0]
   v= [100,100,0]

They all mean a line on the xy plane, from [0,0,0] and divides xy plane by
equal halves. It'd be 45-degree to the x-axis and 45-degree to y.

So your first style is basically the same as the 3rd one, except they rotate
by different angles --- rotate the 3rd one 45 times would be the same as
rotate the 1st one once. 

The second one rotates about x by 45, then rotate about y by 45. 



-----

$  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ), runscad.py( 1 , 2 , git ), synwrite( 1 , 2 );  $ tips: hash( 1 , 2 ), matrix( 1 , 2 ),sweep( 1 , 2 ), var( 1 , 2 ), lerp , animation ( gif , prodVid ), precision( 1 , 2 ), xl-control , type , rounded polygon , chfont , tailRecur ( 2 )




--
View this message in context: http://forum.openscad.org/weird-rotate-around-2-axis-tp16972p17006.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Sat Apr  9 13:18:35 2016
From: doug at moens.org (doug moen)
Date: Sat, 9 Apr 2016 13:18:35 -0400
Subject: [OpenSCAD] weird rotate around 2 axis
In-Reply-To: <1460218413098-17006.post@n5.nabble.com>
References: <1459890359282-16972.post@n5.nabble.com>
	<1460218413098-17006.post@n5.nabble.com>
Message-ID: <CAGV6i+Pwy3PxzsznW9Ada=LTrVcWU7PKFXYuMhQFqC6wtH7wbQ@mail.gmail.com>

I now have a better understanding of rotate() after reading this thread,
and doing some research.

If you compose two rotations, the result is always another rotation.
http://www.mathoman.com/en/index.php/1537-axis-and-angle-of-the-composition-of-two-rotations

As Hypher has pointed out, the order in which you compose rotations
matters. Composition is not commutative.

As far as I can tell,
   rotate([x,y,z])
specifies a rotation about some arbitrary axis by (in a way) specifying the
x, y and z components of the rotation. But it's not as clean as that,
because there are lots of different ways to specify a 3D rotation using 3
angles, and none of them are intuitive to me. Also, the order in which the
x,y,z rotations are applied is significant: the 3 numbers aren't orthogonal
in the way that Euclidean [x,y,z] coordinates are orthogonal. So this
interface is quite arbitrary.

The Euler theorum states that you can describe any 3D rotation using 3
angles, which are called Euler angles.
http://mathworld.wolfram.com/EulerAngles.html

There are apparently many different conventions for specifying Euler
angles. I found a Python package that gives you a choice between 24
different conventions.

In summary, the rotate([x,y,z]) interface is tricky to understand. I
haven't worked through the math to come up with a way to predict what the
resulting axis of rotation is.

On 9 April 2016 at 12:13, runsun <runsun at gmail.com> wrote:

> s3030150 wrote
> > rotate(a=45,v=[1,1,0]) - this rotates object improperly
> > rotate([45,45,0]) - this rotates object improperly
> > rotate(a=1,v=[45,45,0]) - this rotates object properly but i cannot use
> it
> > because the X and Y angles are not the same in my project
>
> v is the axis of rotation, so the following v settings are the same:
>
>    v= [1,1,0]
>    v= [45,45,0]
>    v= [100,100,0]
>
> They all mean a line on the xy plane, from [0,0,0] and divides xy plane by
> equal halves. It'd be 45-degree to the x-axis and 45-degree to y.
>
> So your first style is basically the same as the 3rd one, except they
> rotate
> by different angles --- rotate the 3rd one 45 times would be the same as
> rotate the 1st one once.
>
> The second one rotates about x by 45, then rotate about y by 45.
>
>
>
> -----
>
> $  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ),
> runscad.py( 1 , 2 , git ), synwrite( 1 , 2 );  $ tips: hash( 1 , 2 ),
> matrix( 1 , 2 ),sweep( 1 , 2 ), var( 1 , 2 ), lerp , animation ( gif ,
> prodVid ), precision( 1 , 2 ), xl-control , type , rounded polygon , chfont
> , tailRecur ( 2 )
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/weird-rotate-around-2-axis-tp16972p17006.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160409/586e68f0/attachment.html>

From arnholm at arnholm.org  Sat Apr  9 14:17:11 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Sat, 9 Apr 2016 20:17:11 +0200
Subject: [OpenSCAD] weird rotate around 2 axis
In-Reply-To: <CAGV6i+Pwy3PxzsznW9Ada=LTrVcWU7PKFXYuMhQFqC6wtH7wbQ@mail.gmail.com>
References: <1459890359282-16972.post@n5.nabble.com>
	<1460218413098-17006.post@n5.nabble.com>
	<CAGV6i+Pwy3PxzsznW9Ada=LTrVcWU7PKFXYuMhQFqC6wtH7wbQ@mail.gmail.com>
Message-ID: <57094727.8000708@arnholm.org>

On 09. april 2016 19:18, doug moen wrote:
> In summary, the rotate([x,y,z]) interface is tricky to understand. I
> haven't worked through the math to come up with a way to predict what
> the resulting axis of rotation is.

In my opinion the interface is not usable if you consider the values 
angles around the global axes as you explained. the only practical way 
to use it is to apply one value at a time and leave the others zero.

To rotate e.g. 30 degrees around Y followed by 60 degrees around X, you 
need to do
    rotate([60,0,0]) rotate([0,30,0]) cube([10,20,30]);

The above is not at all the same as
    rotate([60,30,0]) cube([10,20,30]);

For this reason I introduced a different interface in AngelScript CSG 
where there are rotate_x(angle), rotate_y(angle), rotate_z(angle) operators.

There is however, one scenario where the OpenSCAD rotate syntax makes a 
lot of sense: when you rotate around some arbitrary axis. For example to 
rotate 60 degrees around the axis [x,y]=[1,1]

    rotate(a=60,v=[1,1]) cube([10,20,30]);

This format makes sense and can be extended to 3d, but in practice I 
guess it isn't much used.

Carsten Arnholm


From lboyd at frontiernet.net  Sat Apr  9 15:19:25 2016
From: lboyd at frontiernet.net (L Boyd)
Date: Sat, 9 Apr 2016 12:19:25 -0700 (MST)
Subject: [OpenSCAD] weird rotate around 2 axis
In-Reply-To: <57094727.8000708@arnholm.org>
References: <1459890359282-16972.post@n5.nabble.com>
	<1460218413098-17006.post@n5.nabble.com>
	<CAGV6i+Pwy3PxzsznW9Ada=LTrVcWU7PKFXYuMhQFqC6wtH7wbQ@mail.gmail.com>
	<57094727.8000708@arnholm.org>
Message-ID: <1460229565633-17010.post@n5.nabble.com>

When using rotate with x,y & z angles,  OpenSCAD first rotates about the x
axis.
The result is then rotated about the y axis.
Finally, this result is rotated about the z axis.

for example:
 rotate([60,30,0]) cube([10,20,30]); is equivalent to:

 rotate([0,30,0])  rotate([60,0,0])  cube([10,20,30]); 
 which is equivalent to:

 rotate([0,30,0]) { rotate([60,0,0]) { cube([10,20,30]); }}
since the rotate nearest to cube is performed first.



-----
Larry
--
View this message in context: http://forum.openscad.org/weird-rotate-around-2-axis-tp16972p17010.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Sat Apr  9 15:21:30 2016
From: nop.head at gmail.com (nop head)
Date: Sat, 9 Apr 2016 20:21:30 +0100
Subject: [OpenSCAD] weird rotate around 2 axis
In-Reply-To: <57094727.8000708@arnholm.org>
References: <1459890359282-16972.post@n5.nabble.com>
	<1460218413098-17006.post@n5.nabble.com>
	<CAGV6i+Pwy3PxzsznW9Ada=LTrVcWU7PKFXYuMhQFqC6wtH7wbQ@mail.gmail.com>
	<57094727.8000708@arnholm.org>
Message-ID: <CAEEmnrMuUypOSx98dP3sV=dwOfb2qu1gnKN1L2j_6yJTtC=+aw@mail.gmail.com>

>In my opinion the interface is not usable if you consider the values
angles around the global axes as you explained. the only practical way to
use it is to apply one value at a time and leave the others zero.

In my experience most objects get rotated by +/-90 or 180 around one of
more of the global axes, so I can always pick and order that is x,y,z and
use a single rotate([x, y, z]). Nearly always one of those is 0. It is rare
that I need to split it into two rotates because I want a different order.

On 9 April 2016 at 19:17, Carsten Arnholm <arnholm at arnholm.org> wrote:

> On 09. april 2016 19:18, doug moen wrote:
>
>> In summary, the rotate([x,y,z]) interface is tricky to understand. I
>> haven't worked through the math to come up with a way to predict what
>> the resulting axis of rotation is.
>>
>
> In my opinion the interface is not usable if you consider the values
> angles around the global axes as you explained. the only practical way to
> use it is to apply one value at a time and leave the others zero.
>
> To rotate e.g. 30 degrees around Y followed by 60 degrees around X, you
> need to do
>    rotate([60,0,0]) rotate([0,30,0]) cube([10,20,30]);
>
> The above is not at all the same as
>    rotate([60,30,0]) cube([10,20,30]);
>
> For this reason I introduced a different interface in AngelScript CSG
> where there are rotate_x(angle), rotate_y(angle), rotate_z(angle) operators.
>
> There is however, one scenario where the OpenSCAD rotate syntax makes a
> lot of sense: when you rotate around some arbitrary axis. For example to
> rotate 60 degrees around the axis [x,y]=[1,1]
>
>    rotate(a=60,v=[1,1]) cube([10,20,30]);
>
> This format makes sense and can be extended to 3d, but in practice I guess
> it isn't much used.
>
> Carsten Arnholm
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160409/f723c733/attachment.html>

From doug at moens.org  Sat Apr  9 16:05:27 2016
From: doug at moens.org (doug moen)
Date: Sat, 9 Apr 2016 16:05:27 -0400
Subject: [OpenSCAD] weird rotate around 2 axis
In-Reply-To: <57094727.8000708@arnholm.org>
References: <1459890359282-16972.post@n5.nabble.com>
	<1460218413098-17006.post@n5.nabble.com>
	<CAGV6i+Pwy3PxzsznW9Ada=LTrVcWU7PKFXYuMhQFqC6wtH7wbQ@mail.gmail.com>
	<57094727.8000708@arnholm.org>
Message-ID: <CAGV6i+No+CpfrGBSowFRfC4wUaL=Qi7R3WSEp6ci7r+yDCke0Q@mail.gmail.com>

Carsten said:
>In my opinion the interface is not usable if you consider the values angles
>around the global axes as you explained. the only practical way to use it
is
>to apply one value at a time and leave the others zero.
>
>For this reason I introduced a different interface in AngelScript CSG where
>there are rotate_x(angle), rotate_y(angle), rotate_z(angle) operators.

If you define the basis vectors
  X = [1,0,0];
  Y = [0,1,0];
  Z = [0,0,1];
then
  rotate([a,0,0]) is rotate(a,X)
  rotate([0,a,0]) is rotate(a,Y)
  rotate([0,0,a]) is rotate(a,Z)

That's a more flexible alternative to rotate_x(), rotate_y(), rotate_z().

The same arguments would work with mirror(), which takes a vector argument:
  mirror(X) -- reflect through the origin along the X axis
  mirror(Y)
  mirror(Z)

On 9 April 2016 at 14:17, Carsten Arnholm <arnholm at arnholm.org> wrote:

> On 09. april 2016 19:18, doug moen wrote:
>
>> In summary, the rotate([x,y,z]) interface is tricky to understand. I
>> haven't worked through the math to come up with a way to predict what
>> the resulting axis of rotation is.
>>
>
> In my opinion the interface is not usable if you consider the values
> angles around the global axes as you explained. the only practical way to
> use it is to apply one value at a time and leave the others zero.
>
> To rotate e.g. 30 degrees around Y followed by 60 degrees around X, you
> need to do
>    rotate([60,0,0]) rotate([0,30,0]) cube([10,20,30]);
>
> The above is not at all the same as
>    rotate([60,30,0]) cube([10,20,30]);
>
> For this reason I introduced a different interface in AngelScript CSG
> where there are rotate_x(angle), rotate_y(angle), rotate_z(angle) operators.
>
> There is however, one scenario where the OpenSCAD rotate syntax makes a
> lot of sense: when you rotate around some arbitrary axis. For example to
> rotate 60 degrees around the axis [x,y]=[1,1]
>
>    rotate(a=60,v=[1,1]) cube([10,20,30]);
>
> This format makes sense and can be extended to 3d, but in practice I guess
> it isn't much used.
>
> Carsten Arnholm
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160409/a65b5d64/attachment.html>

From arnholm at arnholm.org  Sat Apr  9 16:18:35 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Sat, 9 Apr 2016 22:18:35 +0200
Subject: [OpenSCAD] weird rotate around 2 axis
In-Reply-To: <CAGV6i+No+CpfrGBSowFRfC4wUaL=Qi7R3WSEp6ci7r+yDCke0Q@mail.gmail.com>
References: <1459890359282-16972.post@n5.nabble.com>
	<1460218413098-17006.post@n5.nabble.com>
	<CAGV6i+Pwy3PxzsznW9Ada=LTrVcWU7PKFXYuMhQFqC6wtH7wbQ@mail.gmail.com>
	<57094727.8000708@arnholm.org>
	<CAGV6i+No+CpfrGBSowFRfC4wUaL=Qi7R3WSEp6ci7r+yDCke0Q@mail.gmail.com>
Message-ID: <5709639B.3050508@arnholm.org>

On 09. april 2016 22:05, doug moen wrote:
> The same arguments would work with mirror(), which takes a vector argument:
>    mirror(X) -- reflect through the origin along the X axis
>    mirror(Y)
>    mirror(Z)

I don't think so.

Regarding mirror transformations, the more interesting thing is that it 
unnecessarily restricted to perform mirroring only through the origin. 
Mirroring through an arbitrary point is useful.

Carsten Arnholm



From coltoiu.matei at gmail.com  Sat Apr  9 17:38:35 2016
From: coltoiu.matei at gmail.com (rav0r)
Date: Sat, 9 Apr 2016 14:38:35 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>
References: <1458870106340-16717.post@n5.nabble.com>
	<c287afd36a948b4f4caac6b503b27f44@arnholm.org>
	<1459800543763-16964.post@n5.nabble.com>
	<CA+i9EaCcmQujRvC5Q-h_KNt=saOofpqJgqczQ-UbPz=Mp1fNCA@mail.gmail.com>
	<1459960645480-16984.post@n5.nabble.com>
	<1459961442267-16985.post@n5.nabble.com>
	<1459962491677-16987.post@n5.nabble.com>
	<CA+i9EaDe0CEm67iyMX4rULX1nf3vL8+QL19JdR1u0Vq6f3UdEg@mail.gmail.com>
	<1460211177053-17004.post@n5.nabble.com>
	<CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>
Message-ID: <1460237915202-17014.post@n5.nabble.com>

//bevel

use <bevel_extrude.scad>




module grila() {
union() {
//grid
translate ([0,0,0]){
bevel_extrude(height=10,bevel_depth=6,$fn=16)import("rama_pct.dxf");
}

//horizontal
translate ([0,0,0]){
bevel_extrude(height=10,bevel_depth=6,$fn=16)import("rama_oriz_1.dxf");
}

translate ([0,0,0]){
bevel_extrude(height=10,bevel_depth=6,$fn=16)import("rama_oriz_2.dxf");
}

translate ([0,0,0]){
bevel_extrude(height=10,bevel_depth=6,$fn=16)import("rama_oriz_3.dxf");
}

translate ([0,0,0]){
bevel_extrude(height=10,bevel_depth=6,$fn=16)import("rama_oriz_4.dxf");
}

translate ([0,0,0]){
bevel_extrude(height=10,bevel_depth=6,$fn=16)import("rama_oriz_5.dxf");
}

//vertical
translate ([0,0,0]){
linear_extrude(height=3) 
import("rama_vert.dxf");
}
}
}

grila();



--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17014.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Sat Apr  9 18:30:05 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Sat, 9 Apr 2016 19:30:05 -0300
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1460237915202-17014.post@n5.nabble.com>
References: <1458870106340-16717.post@n5.nabble.com>
	<c287afd36a948b4f4caac6b503b27f44@arnholm.org>
	<1459800543763-16964.post@n5.nabble.com>
	<CA+i9EaCcmQujRvC5Q-h_KNt=saOofpqJgqczQ-UbPz=Mp1fNCA@mail.gmail.com>
	<1459960645480-16984.post@n5.nabble.com>
	<1459961442267-16985.post@n5.nabble.com>
	<1459962491677-16987.post@n5.nabble.com>
	<CA+i9EaDe0CEm67iyMX4rULX1nf3vL8+QL19JdR1u0Vq6f3UdEg@mail.gmail.com>
	<1460211177053-17004.post@n5.nabble.com>
	<CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>
	<1460237915202-17014.post@n5.nabble.com>
Message-ID: <CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>

I can't reproduce your model without the dxf files.
Do you have images of your them?

2016-04-09 18:38 GMT-03:00 rav0r <coltoiu.matei at gmail.com>:

> //bevel
>
> use <bevel_extrude.scad>
>
>
>
>
> module grila() {
> union() {
> //grid
> translate ([0,0,0]){
> bevel_extrude(height=10,bevel_depth=6,$fn=16)import("rama_pct.dxf");
> }
>
> //horizontal
> translate ([0,0,0]){
> bevel_extrude(height=10,bevel_depth=6,$fn=16)import("rama_oriz_1.dxf");
> }
>
> translate ([0,0,0]){
> bevel_extrude(height=10,bevel_depth=6,$fn=16)import("rama_oriz_2.dxf");
> }
>
> translate ([0,0,0]){
> bevel_extrude(height=10,bevel_depth=6,$fn=16)import("rama_oriz_3.dxf");
> }
>
> translate ([0,0,0]){
> bevel_extrude(height=10,bevel_depth=6,$fn=16)import("rama_oriz_4.dxf");
> }
>
> translate ([0,0,0]){
> bevel_extrude(height=10,bevel_depth=6,$fn=16)import("rama_oriz_5.dxf");
> }
>
> //vertical
> translate ([0,0,0]){
> linear_extrude(height=3)
> import("rama_vert.dxf");
> }
> }
> }
>
> grila();
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17014.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160409/e68c4686/attachment.html>

From rudolf at parkinbot.com  Sat Apr  9 18:42:42 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Sat, 9 Apr 2016 15:42:42 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1460144554421-17003.post@n5.nabble.com>
References: <5701A484.5090409@gmx.de> <1459894220854-16974.post@n5.nabble.com>
	<1459936105309-16980.post@n5.nabble.com>
	<1459955177154-16982.post@n5.nabble.com>
	<1459960567177-16983.post@n5.nabble.com>
	<1459986105850-16996.post@n5.nabble.com>
	<1460090083737-16997.post@n5.nabble.com>
	<1460103892603-16998.post@n5.nabble.com>
	<1460126941503-17000.post@n5.nabble.com>
	<1460144554421-17003.post@n5.nabble.com>
Message-ID: <1460241762411-17016.post@n5.nabble.com>

I had a look into the paper. The core trick that accelerates the algorithm
from O(n?) to O(n log n) is the use of a balanced tree. Therefore, O(n?) is
all what you can gain for this problems from programming with OpenSCAD now. 
BTW all that stuff (like is_simple, is_convex, triangulation, intersection
and union) is for sure build-in with OpenSCAD. Why not do feature requests
for native wrapper functions?  



--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p17016.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Sat Apr  9 19:15:27 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Sat, 9 Apr 2016 20:15:27 -0300
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1460241762411-17016.post@n5.nabble.com>
References: <5701A484.5090409@gmx.de> <1459894220854-16974.post@n5.nabble.com>
	<1459936105309-16980.post@n5.nabble.com>
	<1459955177154-16982.post@n5.nabble.com>
	<1459960567177-16983.post@n5.nabble.com>
	<1459986105850-16996.post@n5.nabble.com>
	<1460090083737-16997.post@n5.nabble.com>
	<1460103892603-16998.post@n5.nabble.com>
	<1460126941503-17000.post@n5.nabble.com>
	<1460144554421-17003.post@n5.nabble.com>
	<1460241762411-17016.post@n5.nabble.com>
Message-ID: <CA+i9EaCcxTB_Xk=oJ=B28jfZtxw7fb4JYn0t5zky=FR-YDK4wg@mail.gmail.com>

Well, that is nice suggestion. However, I never had done a feature request
before and I don't know how. But the first thing I would like to know is
what kernels of CGAL are linked to OpensSCAD. I may have other requests
depending on them.

2016-04-09 19:42 GMT-03:00 Parkinbot <rudolf at parkinbot.com>:

> I had a look into the paper. The core trick that accelerates the algorithm
> from O(n?) to O(n log n) is the use of a balanced tree. Therefore, O(n?) is
> all what you can gain for this problems from programming with OpenSCAD now.
> BTW all that stuff (like is_simple, is_convex, triangulation, intersection
> and union) is for sure build-in with OpenSCAD. Why not do feature requests
> for native wrapper functions?
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Simple-polygon-triangulation-tp16755p17016.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160409/16d32295/attachment.html>

From rudolf at parkinbot.com  Sun Apr 10 04:50:12 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Sun, 10 Apr 2016 01:50:12 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <CA+i9EaCcxTB_Xk=oJ=B28jfZtxw7fb4JYn0t5zky=FR-YDK4wg@mail.gmail.com>
References: <1459936105309-16980.post@n5.nabble.com>
	<1459955177154-16982.post@n5.nabble.com>
	<1459960567177-16983.post@n5.nabble.com>
	<1459986105850-16996.post@n5.nabble.com>
	<1460090083737-16997.post@n5.nabble.com>
	<1460103892603-16998.post@n5.nabble.com>
	<1460126941503-17000.post@n5.nabble.com>
	<1460144554421-17003.post@n5.nabble.com>
	<1460241762411-17016.post@n5.nabble.com>
	<CA+i9EaCcxTB_Xk=oJ=B28jfZtxw7fb4JYn0t5zky=FR-YDK4wg@mail.gmail.com>
Message-ID: <1460278212199-17018.post@n5.nabble.com>

This thread is to too long and to specialized now for this. Better open a new
one and give a titel like "feature request ... "



--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p17018.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Sun Apr 10 06:50:51 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Sun, 10 Apr 2016 12:50:51 +0200
Subject: [OpenSCAD] weird rotate around 2 axis
In-Reply-To: <5709639B.3050508@arnholm.org>
References: <1459890359282-16972.post@n5.nabble.com>
	<1460218413098-17006.post@n5.nabble.com>
	<CAGV6i+Pwy3PxzsznW9Ada=LTrVcWU7PKFXYuMhQFqC6wtH7wbQ@mail.gmail.com>
	<57094727.8000708@arnholm.org>
	<CAGV6i+No+CpfrGBSowFRfC4wUaL=Qi7R3WSEp6ci7r+yDCke0Q@mail.gmail.com>
	<5709639B.3050508@arnholm.org>
Message-ID: <570A300B.7020109@arnholm.org>

On 09. april 2016 22:18, Carsten Arnholm wrote:
> Regarding mirror transformations, the more interesting thing is that it
> is unnecessarily restricted to perform mirroring only through the origin.
> Mirroring through an arbitrary point is useful.

This restriction applied to AngelScript CSG as well, but it is easily 
removed. An OpenSCAD trivial base case serves as an example:

    module sph1() { translate([0,100,0])sphere(30); }
    sph1();
    mirror([1,1,0])sph1();

As the manual says, it "Mirrors the child element on a plane through the 
origin". However, restricting the mirror plane to go through the origin 
only is unnecessary.

A couple of AngelScript CSG snippets of the same case follow. First, the 
same "OpenSCAD-style mirroring" around origin:

    solid@ sph1 = translate(0,100,0)*sphere(30);
    solid@ sph2 = mirror(1,1,0)*sph1;

second, same as above, just using explicit vector argument for the 
mirror normal, the mirror plane point still defaults to origin:

    solid@ sph2 = mirror(vec3d(1,1,0))*sph1;

third, same plane normal, but using mirror plane point different from 
origin:

    solid@ sph2 = mirror(vec3d(1,1,0),pos3d(100,100,0))*sph1;

The third case obviously gives a different result than the two first 
cases, sph2 ends up at x=100,y=200. This is a useful and practical 
scenario that I think isn't quite as easily expressed in OpenSCAD, so it 
might be something to consider.

Carsten Arnholm



From blue.cube at seznam.cz  Sun Apr 10 07:51:07 2016
From: blue.cube at seznam.cz (Kuba Marek)
Date: Sun, 10 Apr 2016 13:51:07 +0200
Subject: [OpenSCAD] Rounding(?) problem with polygon()
Message-ID: <20160410135107.208834d9@duskwalker2>

Hi,
I'm trying to make a parametric NACA 4digit airfoil shape using
polygon(). I have a function that gives me Y coordinate for every X,
and I'm calculating a vector of X, Y coordinates using a list
comprehension.

My problem is that when I select the X spacing too narrow, the
resulting polygon looks like it's skipping some points -- the lower the
stepping, the more points lost.

MWE is attached to this mail. The step size 0.0035 was chosen so that
the problem is visible enough. With step size 0.05 it still looks OK,
lower than that the problem starts to appear with increasing severity.

To verify that the vector fed as an input to the polygons the correct,
the example also renders spheres at positions of the control points.

When I scale the positions in the vector (set scale variable to 100
int the example), the problem disappears.

Is this intended, or a bug?

I'm using OpenSCAD 2015.03, built from source with Gentoo ebuild.

Kuba Marek
-------------- next part --------------
A non-text attachment was scrubbed...
Name: polygon_problem_mwe.scad
Type: application/octet-stream
Size: 388 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160410/79800718/attachment.scad>

From rcmpersiano at gmail.com  Sun Apr 10 11:23:42 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Sun, 10 Apr 2016 12:23:42 -0300
Subject: [OpenSCAD] Rounding(?) problem with polygon()
In-Reply-To: <20160410135107.208834d9@duskwalker2>
References: <20160410135107.208834d9@duskwalker2>
Message-ID: <CA+i9EaBsEhH4tzNNtDd5kLHK0LXvfdB-ACZPeLo5pXgpQgPtXQ@mail.gmail.com>

See if you get better results with this:

extra_scale = 100; // increase if needed
step = 0.0035;
scale = 100*extra_scale;

top = [for(x = [0:step:1]) scale * [x,
                                    0.12 * naca_thickness(x)]];

scale(1/extra_scale ) polygon(points=top);

scale(1/extra_scale ) %for(p = top) translate([p[0], p[1], 0]) sphere(scale
* 0.005);

2016-04-10 8:51 GMT-03:00 Kuba Marek <blue.cube at seznam.cz>:

> Hi,
> I'm trying to make a parametric NACA 4digit airfoil shape using
> polygon(). I have a function that gives me Y coordinate for every X,
> and I'm calculating a vector of X, Y coordinates using a list
> comprehension.
>
> My problem is that when I select the X spacing too narrow, the
> resulting polygon looks like it's skipping some points -- the lower the
> stepping, the more points lost.
>
> MWE is attached to this mail. The step size 0.0035 was chosen so that
> the problem is visible enough. With step size 0.05 it still looks OK,
> lower than that the problem starts to appear with increasing severity.
>
> To verify that the vector fed as an input to the polygons the correct,
> the example also renders spheres at positions of the control points.
>
> When I scale the positions in the vector (set scale variable to 100
> int the example), the problem disappears.
>
> Is this intended, or a bug?
>
> I'm using OpenSCAD 2015.03, built from source with Gentoo ebuild.
>
> Kuba Marek
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160410/47bc7bb9/attachment.html>

From doug at moens.org  Sun Apr 10 12:01:21 2016
From: doug at moens.org (doug moen)
Date: Sun, 10 Apr 2016 12:01:21 -0400
Subject: [OpenSCAD] Rounding(?) problem with polygon()
In-Reply-To: <20160410135107.208834d9@duskwalker2>
References: <20160410135107.208834d9@duskwalker2>
Message-ID: <CAGV6i+NL=uOnOO2q8vAFBB6-psdR53GAKyPmLHRO0he20zDjjA@mail.gmail.com>

This is a known bug, and scaling up is the workaround.

https://github.com/openscad/openscad/issues/999

On 10 April 2016 at 07:51, Kuba Marek <blue.cube at seznam.cz> wrote:

> Hi,
> I'm trying to make a parametric NACA 4digit airfoil shape using
> polygon(). I have a function that gives me Y coordinate for every X,
> and I'm calculating a vector of X, Y coordinates using a list
> comprehension.
>
> My problem is that when I select the X spacing too narrow, the
> resulting polygon looks like it's skipping some points -- the lower the
> stepping, the more points lost.
>
> MWE is attached to this mail. The step size 0.0035 was chosen so that
> the problem is visible enough. With step size 0.05 it still looks OK,
> lower than that the problem starts to appear with increasing severity.
>
> To verify that the vector fed as an input to the polygons the correct,
> the example also renders spheres at positions of the control points.
>
> When I scale the positions in the vector (set scale variable to 100
> int the example), the problem disappears.
>
> Is this intended, or a bug?
>
> I'm using OpenSCAD 2015.03, built from source with Gentoo ebuild.
>
> Kuba Marek
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160410/914e0c1a/attachment.html>

From marius at kintel.net  Sun Apr 10 12:02:23 2016
From: marius at kintel.net (Marius Kintel)
Date: Sun, 10 Apr 2016 12:02:23 -0400
Subject: [OpenSCAD] Rounding(?) problem with polygon()
In-Reply-To: <20160410135107.208834d9@duskwalker2>
References: <20160410135107.208834d9@duskwalker2>
Message-ID: <4EE9E686-F998-4AB8-87CF-65355A647661@kintel.net>

On Apr 10, 2016, at 07:51 AM, Kuba Marek <blue.cube at seznam.cz> wrote:
> 
> When I scale the positions in the vector (set scale variable to 100
> int the example), the problem disappears.
> 
> Is this intended, or a bug?
> 
This is a known bug: https://github.com/openscad/openscad/issues/999

 -Marius



From doug at moens.org  Sun Apr 10 12:22:18 2016
From: doug at moens.org (doug moen)
Date: Sun, 10 Apr 2016 12:22:18 -0400
Subject: [OpenSCAD] weird rotate around 2 axis
In-Reply-To: <5709639B.3050508@arnholm.org>
References: <1459890359282-16972.post@n5.nabble.com>
	<1460218413098-17006.post@n5.nabble.com>
	<CAGV6i+Pwy3PxzsznW9Ada=LTrVcWU7PKFXYuMhQFqC6wtH7wbQ@mail.gmail.com>
	<57094727.8000708@arnholm.org>
	<CAGV6i+No+CpfrGBSowFRfC4wUaL=Qi7R3WSEp6ci7r+yDCke0Q@mail.gmail.com>
	<5709639B.3050508@arnholm.org>
Message-ID: <CAGV6i+PQn1pY_wt5n6kfxT1AuZVfcwSNvtSR_qUfoT2gQ3KbyQ@mail.gmail.com>

Carsten said: "Regarding mirror transformations, the more interesting thing
is that it unnecessarily restricted to perform mirroring only through the
origin. Mirroring through an arbitrary point is useful."

This is equally true for rotate, scale and shear transformations. If a
shape has its own local origin, then often you want to transform it
relative to its local origin.

In OpenSCAD, the standard idiom for transforming relative to a shape's
local origin is:
   translate(origin) rotate(R) translate(-origin) shape

In OpenSCAD2, transformations will be values, so it will be possible to
encapsulate this idiom using a function:

   at(origin,transform)(shape) =
       translate(origin) transform translate(-origin) shape;

   at(origin, rotate(R)) shape

On 9 April 2016 at 16:18, Carsten Arnholm <arnholm at arnholm.org> wrote:

> On 09. april 2016 22:05, doug moen wrote:
>
>> The same arguments would work with mirror(), which takes a vector
>> argument:
>>    mirror(X) -- reflect through the origin along the X axis
>>    mirror(Y)
>>    mirror(Z)
>>
>
> I don't think so.
>
> Regarding mirror transformations, the more interesting thing is that it
> unnecessarily restricted to perform mirroring only through the origin.
> Mirroring through an arbitrary point is useful.
>
>
> Carsten Arnholm
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160410/a2b4bb97/attachment.html>

From blue.cube at seznam.cz  Sun Apr 10 12:30:59 2016
From: blue.cube at seznam.cz (Kuba Marek)
Date: Sun, 10 Apr 2016 18:30:59 +0200
Subject: [OpenSCAD] Rounding(?) problem with polygon()
In-Reply-To: <CA+i9EaBsEhH4tzNNtDd5kLHK0LXvfdB-ACZPeLo5pXgpQgPtXQ@mail.gmail.com>
References: <20160410135107.208834d9@duskwalker2>
	<CA+i9EaBsEhH4tzNNtDd5kLHK0LXvfdB-ACZPeLo5pXgpQgPtXQ@mail.gmail.com>
Message-ID: <20160410183059.6eb7c4b1@duskwalker2>

Weird that I didn't find that bug report :-)
Thanks for your answers, the scaling workaround works well enough.

> See if you get better results with this:
> 
> extra_scale = 100; // increase if needed
> step = 0.0035;
> scale = 100*extra_scale;
> 
> top = [for(x = [0:step:1]) scale * [x,
>                                     0.12 * naca_thickness(x)]];
> 
> scale(1/extra_scale ) polygon(points=top);
> 
> scale(1/extra_scale ) %for(p = top) translate([p[0], p[1], 0])
> sphere(scale
> * 0.005);
> 
> 2016-04-10 8:51 GMT-03:00 Kuba Marek <blue.cube at seznam.cz>:
> 
> > Hi,
> > I'm trying to make a parametric NACA 4digit airfoil shape using
> > polygon(). I have a function that gives me Y coordinate for every X,
> > and I'm calculating a vector of X, Y coordinates using a list
> > comprehension.
> >
> > My problem is that when I select the X spacing too narrow, the
> > resulting polygon looks like it's skipping some points -- the lower
> > the stepping, the more points lost.
> >
> > MWE is attached to this mail. The step size 0.0035 was chosen so
> > that the problem is visible enough. With step size 0.05 it still
> > looks OK, lower than that the problem starts to appear with
> > increasing severity.
> >
> > To verify that the vector fed as an input to the polygons the
> > correct, the example also renders spheres at positions of the
> > control points.
> >
> > When I scale the positions in the vector (set scale variable to 100
> > int the example), the problem disappears.
> >
> > Is this intended, or a bug?
> >
> > I'm using OpenSCAD 2015.03, built from source with Gentoo ebuild.
> >
> > Kuba Marek
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> >
> >  


From vector76 at gmail.com  Sun Apr 10 12:53:09 2016
From: vector76 at gmail.com (Jamie_K)
Date: Sun, 10 Apr 2016 09:53:09 -0700 (MST)
Subject: [OpenSCAD] CGAL ERROR: assertion violation
Message-ID: <1460307189671-17026.post@n5.nabble.com>

I've tried searching google for any hints but nothing productive.  The full
assertion is:
ERROR: CGAL error in CGAL_Nef_polyhedron3(): CGAL ERROR: assertion
violation! Expr: pe_prev->is_border() ||
!internal::Plane_constructor::get_plane(pe_prev->facet(),pe_prev->facet()->plane()).is_degenerate()
File:
/opt/mxe/usr/x86_64-w64-mingw32.static/include/CGAL/Nef_3/polyhedron_3_to_nef_3.h
Line: 251

This is with version 2016.01.26 on win64.

The entire file is this:

difference() {
  import("robot_draft_front.stl");
  
  translate([-20, 0.1, -30])
  cube([40, 35, 60]);
}

where robot_draft_front.stl was generated by OpenSCAD.

For the background, the goal is to take a model and use a minkowski sum to
add a draft angle such that a mold can be made for casting the object. 
Beginning with the model, a minkowski sum is calculated with a fairly narrow
cone

minkowski() {
  import("robot_nomarks_3000.stl");

  rotate([-90, 0, 0])
  cylinder(r1=0, r2=3, h=20);
}

This takes a while to compute, but I let it do its thing and then I save as
robot_draft_front.stl so that it doesn't have to recalculate the minkowski. 
The resulting stl can be loaded and rendered alone just fine, but when using
difference() to remove the back side of the object, the object appears
correct in preview but rendering generates an error.

I am guessing that the outcome of the minkowski sum contains a subtle error
that is propagating to the stl file, and that the second step of loading and
intersecting is not the true problem.  But that's just a guess.

The original object "robot_nomarks_3000.stl" I've put here:
https://www.dropbox.com/s/8tkphayu33z8sod/Robot_nomarks_3000.stl?dl=0

The resulting object "robot_draft_front.stl" I've put here:
https://www.dropbox.com/s/k998y45ah4bfj56/robot_draft_front.stl?dl=0

I'd be interested to hear any suggestions or whether this is something that
should be fixed.

-Jamie




--
View this message in context: http://forum.openscad.org/CGAL-ERROR-assertion-violation-tp17026.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Sun Apr 10 13:17:44 2016
From: doug at moens.org (doug moen)
Date: Sun, 10 Apr 2016 13:17:44 -0400
Subject: [OpenSCAD] CGAL ERROR: assertion violation
In-Reply-To: <1460307189671-17026.post@n5.nabble.com>
References: <1460307189671-17026.post@n5.nabble.com>
Message-ID: <CAGV6i+MyLdz-J9WPyVfvCjogg_UHrDTXt3KsNZoBYoQ1j+F20Q@mail.gmail.com>

This looks like a known bug, or pair of bugs.

1. OpenSCAD sometimes exports bad STL files (the mesh is not 2-manifold).

2. The import() module doesn't tell you when it imports a bad STL file. In
this circumstance, the mesh will be displayed correctly in the preview
window (since this operation displays each triangle independently, and
doesn't rely on correct connectivity between the triangles). You only get
an error when you perform a CSG operation on the bad mesh.

On 10 April 2016 at 12:53, Jamie_K <vector76 at gmail.com> wrote:

> I've tried searching google for any hints but nothing productive.  The full
> assertion is:
> ERROR: CGAL error in CGAL_Nef_polyhedron3(): CGAL ERROR: assertion
> violation! Expr: pe_prev->is_border() ||
>
> !internal::Plane_constructor::get_plane(pe_prev->facet(),pe_prev->facet()->plane()).is_degenerate()
> File:
>
> /opt/mxe/usr/x86_64-w64-mingw32.static/include/CGAL/Nef_3/polyhedron_3_to_nef_3.h
> Line: 251
>
> This is with version 2016.01.26 on win64.
>
> The entire file is this:
>
> difference() {
>   import("robot_draft_front.stl");
>
>   translate([-20, 0.1, -30])
>   cube([40, 35, 60]);
> }
>
> where robot_draft_front.stl was generated by OpenSCAD.
>
> For the background, the goal is to take a model and use a minkowski sum to
> add a draft angle such that a mold can be made for casting the object.
> Beginning with the model, a minkowski sum is calculated with a fairly
> narrow
> cone
>
> minkowski() {
>   import("robot_nomarks_3000.stl");
>
>   rotate([-90, 0, 0])
>   cylinder(r1=0, r2=3, h=20);
> }
>
> This takes a while to compute, but I let it do its thing and then I save as
> robot_draft_front.stl so that it doesn't have to recalculate the minkowski.
> The resulting stl can be loaded and rendered alone just fine, but when
> using
> difference() to remove the back side of the object, the object appears
> correct in preview but rendering generates an error.
>
> I am guessing that the outcome of the minkowski sum contains a subtle error
> that is propagating to the stl file, and that the second step of loading
> and
> intersecting is not the true problem.  But that's just a guess.
>
> The original object "robot_nomarks_3000.stl" I've put here:
> https://www.dropbox.com/s/8tkphayu33z8sod/Robot_nomarks_3000.stl?dl=0
>
> The resulting object "robot_draft_front.stl" I've put here:
> https://www.dropbox.com/s/k998y45ah4bfj56/robot_draft_front.stl?dl=0
>
> I'd be interested to hear any suggestions or whether this is something that
> should be fixed.
>
> -Jamie
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/CGAL-ERROR-assertion-violation-tp17026.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160410/5590024c/attachment.html>

From arnholm at arnholm.org  Sun Apr 10 14:23:27 2016
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Sun, 10 Apr 2016 20:23:27 +0200
Subject: [OpenSCAD] weird rotate around 2 axis
In-Reply-To: <CAGV6i+PQn1pY_wt5n6kfxT1AuZVfcwSNvtSR_qUfoT2gQ3KbyQ@mail.gmail.com>
References: <1459890359282-16972.post@n5.nabble.com>
	<1460218413098-17006.post@n5.nabble.com>
	<CAGV6i+Pwy3PxzsznW9Ada=LTrVcWU7PKFXYuMhQFqC6wtH7wbQ@mail.gmail.com>
	<57094727.8000708@arnholm.org>
	<CAGV6i+No+CpfrGBSowFRfC4wUaL=Qi7R3WSEp6ci7r+yDCke0Q@mail.gmail.com>
	<5709639B.3050508@arnholm.org>
	<CAGV6i+PQn1pY_wt5n6kfxT1AuZVfcwSNvtSR_qUfoT2gQ3KbyQ@mail.gmail.com>
Message-ID: <570A9A1F.9020204@arnholm.org>

On 10. april 2016 18:22, doug moen wrote:
> In OpenSCAD, the standard idiom for transforming relative to a shape's
> local origin is:
>     translate(origin) rotate(R) translate(-origin) shape

For rotate, yes you must do that, if rotation around the shape local 
origin is what you want, or if you want to rotate around some other point.

For a mirror plane through an arbitrary point, both the the location of 
the mirror plane and the shape matters. The position specified with 
mirror transformation isn't a local transformation origin though, it is 
any point in the mirror plane, there are infinitely many such points for 
the same transformation.

Using my previous example
    solid@ sph1 = translate(0,100,0)*sphere(30);

The following gives identical mirror transformations, using different 
points in the same mirror plane:
    solid@ sph2 = mirror(vec3d(1,1,0),pos3d(100,100,0))*sph1;
    solid@ sph3 = mirror(vec3d(1,1,0),pos3d(0,200,0))*sph1;
    solid@ sph4 = mirror(vec3d(1,1,0),pos3d(-100,300,0))*sph1;

> In OpenSCAD2, transformations will be values, so it will be possible to
> encapsulate this idiom using a function:
>
>     at(origin,transform)(shape) =
>         translate(origin) transform translate(-origin) shape;
>
>     at(origin, rotate(R)) shape

I am not quite sure how your OpenSCAD2 idiom will handle this case. 
Perhaps it will work the same. Building it into the mirror 
transformation directly is relatively straightforward and the standard 
method I have encountered elsewhere, so it seems natural to me.

Carsten Arnholm


From rcmpersiano at gmail.com  Sun Apr 10 14:37:50 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Sun, 10 Apr 2016 15:37:50 -0300
Subject: [OpenSCAD] Rounding(?) problem with polygon()
In-Reply-To: <20160410183059.6eb7c4b1@duskwalker2>
References: <20160410135107.208834d9@duskwalker2>
	<CA+i9EaBsEhH4tzNNtDd5kLHK0LXvfdB-ACZPeLo5pXgpQgPtXQ@mail.gmail.com>
	<20160410183059.6eb7c4b1@duskwalker2>
Message-ID: <CA+i9EaBwXNVQTrzLvjQ1gjo-55sNz-0Xas9FXcD8hLcYBxxzSA@mail.gmail.com>

Besides, observe that the Naca profile has a very fast variation of the
tangent near x=0 and which varies slowly to the right. You may consider a
varying discretization on sampling x, starting with a fine discretization
for low x and enlaging it for greater x.

2016-04-10 13:30 GMT-03:00 Kuba Marek <blue.cube at seznam.cz>:

> Weird that I didn't find that bug report :-)
> Thanks for your answers, the scaling workaround works well enough.
>
> > See if you get better results with this:
> >
> > extra_scale = 100; // increase if needed
> > step = 0.0035;
> > scale = 100*extra_scale;
> >
> > top = [for(x = [0:step:1]) scale * [x,
> >                                     0.12 * naca_thickness(x)]];
> >
> > scale(1/extra_scale ) polygon(points=top);
> >
> > scale(1/extra_scale ) %for(p = top) translate([p[0], p[1], 0])
> > sphere(scale
> > * 0.005);
> >
> > 2016-04-10 8:51 GMT-03:00 Kuba Marek <blue.cube at seznam.cz>:
> >
> > > Hi,
> > > I'm trying to make a parametric NACA 4digit airfoil shape using
> > > polygon(). I have a function that gives me Y coordinate for every X,
> > > and I'm calculating a vector of X, Y coordinates using a list
> > > comprehension.
> > >
> > > My problem is that when I select the X spacing too narrow, the
> > > resulting polygon looks like it's skipping some points -- the lower
> > > the stepping, the more points lost.
> > >
> > > MWE is attached to this mail. The step size 0.0035 was chosen so
> > > that the problem is visible enough. With step size 0.05 it still
> > > looks OK, lower than that the problem starts to appear with
> > > increasing severity.
> > >
> > > To verify that the vector fed as an input to the polygons the
> > > correct, the example also renders spheres at positions of the
> > > control points.
> > >
> > > When I scale the positions in the vector (set scale variable to 100
> > > int the example), the problem disappears.
> > >
> > > Is this intended, or a bug?
> > >
> > > I'm using OpenSCAD 2015.03, built from source with Gentoo ebuild.
> > >
> > > Kuba Marek
> > > _______________________________________________
> > > OpenSCAD mailing list
> > > Discuss at lists.openscad.org
> > > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> > >
> > >
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160410/8f14572f/attachment.html>

From doug at moens.org  Sun Apr 10 15:51:30 2016
From: doug at moens.org (doug moen)
Date: Sun, 10 Apr 2016 15:51:30 -0400
Subject: [OpenSCAD] weird rotate around 2 axis
In-Reply-To: <570A9A1F.9020204@arnholm.org>
References: <1459890359282-16972.post@n5.nabble.com>
	<1460218413098-17006.post@n5.nabble.com>
	<CAGV6i+Pwy3PxzsznW9Ada=LTrVcWU7PKFXYuMhQFqC6wtH7wbQ@mail.gmail.com>
	<57094727.8000708@arnholm.org>
	<CAGV6i+No+CpfrGBSowFRfC4wUaL=Qi7R3WSEp6ci7r+yDCke0Q@mail.gmail.com>
	<5709639B.3050508@arnholm.org>
	<CAGV6i+PQn1pY_wt5n6kfxT1AuZVfcwSNvtSR_qUfoT2gQ3KbyQ@mail.gmail.com>
	<570A9A1F.9020204@arnholm.org>
Message-ID: <CAGV6i+MDgSDCF73nJ-rh=vkYpH-AG6VU-45dkKnSCsqbWx9PwA@mail.gmail.com>

Yes, I understand why your interface to mirror() could be considered more
natural.

But it's still true that in OpenSCAD, you use
   translate(origin) mirror(vec) translate(-origin) shape
to mirror a shape using a reflection plane passing through 'origin'. It
will often be the case that the 'origin' will be located relative to the
shape being reflected.

On 10 April 2016 at 14:23, Carsten Arnholm <arnholm at arnholm.org> wrote:

> On 10. april 2016 18:22, doug moen wrote:
>
>> In OpenSCAD, the standard idiom for transforming relative to a shape's
>> local origin is:
>>     translate(origin) rotate(R) translate(-origin) shape
>>
>
> For rotate, yes you must do that, if rotation around the shape local
> origin is what you want, or if you want to rotate around some other point.
>
> For a mirror plane through an arbitrary point, both the the location of
> the mirror plane and the shape matters. The position specified with mirror
> transformation isn't a local transformation origin though, it is any point
> in the mirror plane, there are infinitely many such points for the same
> transformation.
>
> Using my previous example
>    solid@ sph1 = translate(0,100,0)*sphere(30);
>
> The following gives identical mirror transformations, using different
> points in the same mirror plane:
>    solid@ sph2 = mirror(vec3d(1,1,0),pos3d(100,100,0))*sph1;
>    solid@ sph3 = mirror(vec3d(1,1,0),pos3d(0,200,0))*sph1;
>    solid@ sph4 = mirror(vec3d(1,1,0),pos3d(-100,300,0))*sph1;
>
> In OpenSCAD2, transformations will be values, so it will be possible to
>> encapsulate this idiom using a function:
>>
>>     at(origin,transform)(shape) =
>>         translate(origin) transform translate(-origin) shape;
>>
>>     at(origin, rotate(R)) shape
>>
>
> I am not quite sure how your OpenSCAD2 idiom will handle this case.
> Perhaps it will work the same. Building it into the mirror transformation
> directly is relatively straightforward and the standard method I have
> encountered elsewhere, so it seems natural to me.
>
>
> Carsten Arnholm
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160410/338030b6/attachment.html>

From marius at kintel.net  Sun Apr 10 16:15:09 2016
From: marius at kintel.net (Marius Kintel)
Date: Sun, 10 Apr 2016 16:15:09 -0400
Subject: [OpenSCAD] CGAL ERROR: assertion violation
In-Reply-To: <1460307189671-17026.post@n5.nabble.com>
References: <1460307189671-17026.post@n5.nabble.com>
Message-ID: <B84F81BA-93E0-4EE7-ADFC-9C4978D92DB3@kintel.net>

On Apr 10, 2016, at 12:53 PM, Jamie_K <vector76 at gmail.com> wrote:
> 
> [?]
>  import("robot_draft_front.stl");
> [?]
> where robot_draft_front.stl was generated by OpenSCAD.
> 
This looks like the following common issue:
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/FAQ#Why_is_my_imported_STL_file_only_showing_up_with_F5_but_not_F6.3F

 -Marius

From rudolf at parkinbot.com  Sun Apr 10 16:45:48 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Sun, 10 Apr 2016 13:45:48 -0700 (MST)
Subject: [OpenSCAD] Rounding(?) problem with polygon()
In-Reply-To: <20160410183059.6eb7c4b1@duskwalker2>
References: <20160410135107.208834d9@duskwalker2>
	<CA+i9EaBsEhH4tzNNtDd5kLHK0LXvfdB-ACZPeLo5pXgpQgPtXQ@mail.gmail.com>
	<20160410183059.6eb7c4b1@duskwalker2>
Message-ID: <1460321148773-17032.post@n5.nabble.com>

You might want to have a look into this NACA-library: 
http://www.thingiverse.com/thing:898554



--
View this message in context: http://forum.openscad.org/Rounding-problem-with-polygon-tp17020p17032.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Sun Apr 10 17:26:47 2016
From: mschafer at wireframe.biz (Neon22)
Date: Sun, 10 Apr 2016 14:26:47 -0700 (MST)
Subject: [OpenSCAD] Rounding(?) problem with polygon()
In-Reply-To: <20160410135107.208834d9@duskwalker2>
References: <20160410135107.208834d9@duskwalker2>
Message-ID: <1460323607608-17033.post@n5.nabble.com>

It would be great if you extended the existing NACA library with some more of
the NACA algorithms/codes.



--
View this message in context: http://forum.openscad.org/Rounding-problem-with-polygon-tp17020p17033.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From blue.cube at seznam.cz  Sun Apr 10 17:39:12 2016
From: blue.cube at seznam.cz (Kuba Marek)
Date: Sun, 10 Apr 2016 23:39:12 +0200
Subject: [OpenSCAD] Rounding(?) problem with polygon()
In-Reply-To: <CA+i9EaBwXNVQTrzLvjQ1gjo-55sNz-0Xas9FXcD8hLcYBxxzSA@mail.gmail.com>
References: <20160410135107.208834d9@duskwalker2>
	<CA+i9EaBsEhH4tzNNtDd5kLHK0LXvfdB-ACZPeLo5pXgpQgPtXQ@mail.gmail.com>
	<20160410183059.6eb7c4b1@duskwalker2>
	<CA+i9EaBwXNVQTrzLvjQ1gjo-55sNz-0Xas9FXcD8hLcYBxxzSA@mail.gmail.com>
Message-ID: <20160410233912.6e562ba1@duskwalker2>

Yes, that was the plan after I get the rest of my project working :-)

> Besides, observe that the Naca profile has a very fast variation of
> the tangent near x=0 and which varies slowly to the right. You may
> consider a varying discretization on sampling x, starting with a fine
> discretization for low x and enlaging it for greater x.
> 
> 2016-04-10 13:30 GMT-03:00 Kuba Marek <blue.cube at seznam.cz>:
> 
> > Weird that I didn't find that bug report :-)
> > Thanks for your answers, the scaling workaround works well enough.
> >  
> > > See if you get better results with this:
> > >
> > > extra_scale = 100; // increase if needed
> > > step = 0.0035;
> > > scale = 100*extra_scale;
> > >
> > > top = [for(x = [0:step:1]) scale * [x,
> > >                                     0.12 * naca_thickness(x)]];
> > >
> > > scale(1/extra_scale ) polygon(points=top);
> > >
> > > scale(1/extra_scale ) %for(p = top) translate([p[0], p[1], 0])
> > > sphere(scale
> > > * 0.005);
> > >
> > > 2016-04-10 8:51 GMT-03:00 Kuba Marek <blue.cube at seznam.cz>:
> > >  
> > > > Hi,
> > > > I'm trying to make a parametric NACA 4digit airfoil shape using
> > > > polygon(). I have a function that gives me Y coordinate for
> > > > every X, and I'm calculating a vector of X, Y coordinates using
> > > > a list comprehension.
> > > >
> > > > My problem is that when I select the X spacing too narrow, the
> > > > resulting polygon looks like it's skipping some points -- the
> > > > lower the stepping, the more points lost.
> > > >
> > > > MWE is attached to this mail. The step size 0.0035 was chosen so
> > > > that the problem is visible enough. With step size 0.05 it still
> > > > looks OK, lower than that the problem starts to appear with
> > > > increasing severity.
> > > >
> > > > To verify that the vector fed as an input to the polygons the
> > > > correct, the example also renders spheres at positions of the
> > > > control points.
> > > >
> > > > When I scale the positions in the vector (set scale variable to
> > > > 100 int the example), the problem disappears.
> > > >
> > > > Is this intended, or a bug?
> > > >
> > > > I'm using OpenSCAD 2015.03, built from source with Gentoo
> > > > ebuild.
> > > >
> > > > Kuba Marek
> > > > _______________________________________________
> > > > OpenSCAD mailing list
> > > > Discuss at lists.openscad.org
> > > > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> > > >
> > > >  
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> >  


From blue.cube at seznam.cz  Sun Apr 10 17:45:00 2016
From: blue.cube at seznam.cz (Kuba Marek)
Date: Sun, 10 Apr 2016 23:45:00 +0200
Subject: [OpenSCAD] Rounding(?) problem with polygon()
In-Reply-To: <1460323607608-17033.post@n5.nabble.com>
References: <20160410135107.208834d9@duskwalker2>
	<1460323607608-17033.post@n5.nabble.com>
Message-ID: <20160410234500.4a574349@duskwalker2>

I'd like to do that, but what I have is a new implementation rather than
an extension :-)
So far it can do all 4 digit codes (based on wikipedia) with
regular discretization in X axis and output to a list or polygon.
Is there a way I can make a pull request to the thingieverse?
Anyway I'm planning to put my code up on github sometime soon.

> It would be great if you extended the existing NACA library with some
> more of the NACA algorithms/codes.
> 
> 
> 
> --
> View this message in context:
> http://forum.openscad.org/Rounding-problem-with-polygon-tp17020p17033.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


From oz.at.michael at gmail.com  Sun Apr 10 21:55:32 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sun, 10 Apr 2016 18:55:32 -0700 (MST)
Subject: [OpenSCAD] CGAL ERROR: assertion violation
In-Reply-To: <B84F81BA-93E0-4EE7-ADFC-9C4978D92DB3@kintel.net>
References: <1460307189671-17026.post@n5.nabble.com>
	<B84F81BA-93E0-4EE7-ADFC-9C4978D92DB3@kintel.net>
Message-ID: <1460339732246-17036.post@n5.nabble.com>

kintel wrote
> This looks like the following common issue:
> https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/FAQ#Why_is_my_imported_STL_file_only_showing_up_with_F5_but_not_F6.3F

Yes, but OpenSCAD generated the bad .stl file.
The original .stl is valid, the minkowski() causes both degenerate faces,
and, in a version I did testing to see if it is the small size rounding
error issue, at scale(100) - both the imported .stl and the cone -  also
made holes (7 volumes 8 holes, fewer degen faces).

When I scaled each to 10,000 and then down 0.0001, the stl had no holes, but
still degen faces.



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/CGAL-ERROR-assertion-violation-tp17026p17036.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Sun Apr 10 22:07:39 2016
From: marius at kintel.net (Marius Kintel)
Date: Sun, 10 Apr 2016 22:07:39 -0400
Subject: [OpenSCAD] CGAL ERROR: assertion violation
In-Reply-To: <1460339732246-17036.post@n5.nabble.com>
References: <1460307189671-17026.post@n5.nabble.com>
	<B84F81BA-93E0-4EE7-ADFC-9C4978D92DB3@kintel.net>
	<1460339732246-17036.post@n5.nabble.com>
Message-ID: <815FF6FB-6228-47FA-B7C3-0BE6A9EDD839@kintel.net>

> On Apr 10, 2016, at 21:55 PM, MichaelAtOz <oz.at.michael at gmail.com> wrote:
> 
> Yes, but OpenSCAD generated the bad .stl file.

This is two separate issues:
1) When downsampling from the internal representation used by CGAL into doubles or floats, we lose precision and this can cause mesh degeneracies, including so-called T-vertices.
2) When importing STL files into OpenSCAD, we?re unable to process certain degenerate meshes (typically T-vertices)

It?s possible to fix both these. 2) is probably more appropriate as such STL files can appear other places, but it wouldn?t hurt to also output cleaner meshes.

 -Marius





From david-openscad at mythic.beasts.org  Mon Apr 11 05:19:44 2016
From: david-openscad at mythic.beasts.org (daveshorts)
Date: Mon, 11 Apr 2016 02:19:44 -0700 (MST)
Subject: [OpenSCAD] Extruded polygons missing in F6 render view
Message-ID: <1460366384970-17038.post@n5.nabble.com>

I am trying to build an openscad based 3D output format for a python based
design library I use for milling and laser cutter. I am going via
solidpython

I am basically extruding a 2D design and doing boolean operations on it.

The results look great with F5 but various holes are missing with F6

Here are a series of holes generated by extruding polygons only differing in
radius (and number of sides)

Rendered with F5
<http://forum.openscad.org/file/n17038/scadf5.jpg> 

Rendered with F6
<http://forum.openscad.org/file/n17038/scadf6.jpg> 

If I increase the resolution of the circles they are missing in a
deterministic but very random way, so holes, 2,3, 7 an 8 are missing.

I am using a build of the github from yesterday, on ubuntu 14.04

I don't think it is exactly this rounding bug
https://github.com/openscad/openscad/issues/999
because I have tried scaling everything up by a factor of 1000 and it makes
no difference

I have tried rendering the same polygons using solidpython's  extrude which
produces a polyhedron which interestingly has exactly the same bug and the
same missing holes for a given set of polygons.

I have tried rounding the values to different levels of precision in the
verticies which makes no difference

The z values are not round numbers in an attempt avoid coplanar issues later
on

any ideas of how to solve the problem or a workaround? 

   thanks

The code I am using:
/difference() {
	translate(v = [0, 0, -9.0000000000]) {
		linear_extrude(center = false, height = 9.0000000000) {
			polygon(paths = [[0, 1, 2, 3, 4]], points = [[-200.0000000000,
-200.0000000000], [-200.0000000000, 200.0000000000], [200.0000000000,
200.0000000000], [200.0000000000, -200.0000000000], [-200.0000000000,
-200.0000000000]]);
		}
	}
	translate(v = [0, 0, -2.0010000000]) {
		linear_extrude(center = false, height = 3.0020000000) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]], points =
[[-140.7070000000, -189.2930000000], [-140.0000000000, -189.0000000000],
[-140.0000000000, -189.0000000000], [-139.2930000000, -189.2930000000],
[-139.0000000000, -190.0000000000], [-139.0000000000, -190.0000000000],
[-139.2930000000, -190.7070000000], [-140.0000000000, -191.0000000000],
[-140.0000000000, -191.0000000000], [-140.7070000000, -190.7070000000],
[-141.0000000000, -190.0000000000], [-141.0000000000, -190.0000000000],
[-140.7070000000, -189.2930000000]]);
		}
	}
	translate(v = [0, 0, -2.0020000000]) {
		linear_extrude(center = false, height = 3.0040000000) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]], points =
[[-141.4140000000, -185.5860000000], [-140.0000000000, -185.0000000000],
[-140.0000000000, -185.0000000000], [-138.5860000000, -185.5860000000],
[-138.0000000000, -187.0000000000], [-138.0000000000, -187.0000000000],
[-138.5860000000, -188.4140000000], [-140.0000000000, -189.0000000000],
[-140.0000000000, -189.0000000000], [-141.4140000000, -188.4140000000],
[-142.0000000000, -187.0000000000], [-142.0000000000, -187.0000000000],
[-141.4140000000, -185.5860000000]]);
		}
	}
	translate(v = [0, 0, -2.0030000000]) {
		linear_extrude(center = false, height = 3.0060000000) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]], points =
[[-142.1210000000, -178.8790000000], [-140.0000000000, -178.0000000000],
[-140.0000000000, -178.0000000000], [-137.8790000000, -178.8790000000],
[-137.0000000000, -181.0000000000], [-137.0000000000, -181.0000000000],
[-137.8790000000, -183.1210000000], [-140.0000000000, -184.0000000000],
[-140.0000000000, -184.0000000000], [-142.1210000000, -183.1210000000],
[-143.0000000000, -181.0000000000], [-143.0000000000, -181.0000000000],
[-142.1210000000, -178.8790000000]]);
		}
	}
	translate(v = [0, 0, -2.0040000000]) {
		linear_extrude(center = false, height = 3.0080000000) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]], points =
[[-142.8280000000, -169.1720000000], [-140.0000000000, -168.0000000000],
[-140.0000000000, -168.0000000000], [-137.1720000000, -169.1720000000],
[-136.0000000000, -172.0000000000], [-136.0000000000, -172.0000000000],
[-137.1720000000, -174.8280000000], [-140.0000000000, -176.0000000000],
[-140.0000000000, -176.0000000000], [-142.8280000000, -174.8280000000],
[-144.0000000000, -172.0000000000], [-144.0000000000, -172.0000000000],
[-142.8280000000, -169.1720000000]]);
		}
	}
	translate(v = [0, 0, -2.0050000000]) {
		linear_extrude(center = false, height = 3.0100000000) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]], points =
[[-143.5360000000, -156.4640000000], [-140.0000000000, -155.0000000000],
[-140.0000000000, -155.0000000000], [-136.4640000000, -156.4640000000],
[-135.0000000000, -160.0000000000], [-135.0000000000, -160.0000000000],
[-136.4640000000, -163.5360000000], [-140.0000000000, -165.0000000000],
[-140.0000000000, -165.0000000000], [-143.5360000000, -163.5360000000],
[-145.0000000000, -160.0000000000], [-145.0000000000, -160.0000000000],
[-143.5360000000, -156.4640000000]]);
		}
	}
	translate(v = [0, 0, -2.0060000000]) {
		linear_extrude(center = false, height = 3.0120000000) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]], points =
[[-144.2430000000, -140.7570000000], [-140.0000000000, -139.0000000000],
[-140.0000000000, -139.0000000000], [-135.7570000000, -140.7570000000],
[-134.0000000000, -145.0000000000], [-134.0000000000, -145.0000000000],
[-135.7570000000, -149.2430000000], [-140.0000000000, -151.0000000000],
[-140.0000000000, -151.0000000000], [-144.2430000000, -149.2430000000],
[-146.0000000000, -145.0000000000], [-146.0000000000, -145.0000000000],
[-144.2430000000, -140.7570000000]]);
		}
	}
	translate(v = [0, 0, -2.0070000000]) {
		linear_extrude(center = false, height = 3.0140000000) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]], points =
[[-144.9500000000, -122.0500000000], [-140.0000000000, -120.0000000000],
[-140.0000000000, -120.0000000000], [-135.0500000000, -122.0500000000],
[-133.0000000000, -127.0000000000], [-133.0000000000, -127.0000000000],
[-135.0500000000, -131.9500000000], [-140.0000000000, -134.0000000000],
[-140.0000000000, -134.0000000000], [-144.9500000000, -131.9500000000],
[-147.0000000000, -127.0000000000], [-147.0000000000, -127.0000000000],
[-144.9500000000, -122.0500000000]]);
		}
	}
	translate(v = [0, 0, -2.0080000000]) {
		linear_extrude(center = false, height = 3.0160000000) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]], points =
[[-145.6570000000, -100.3430000000], [-140.0000000000, -98.0000000000],
[-140.0000000000, -98.0000000000], [-134.3430000000, -100.3430000000],
[-132.0000000000, -106.0000000000], [-132.0000000000, -106.0000000000],
[-134.3430000000, -111.6570000000], [-140.0000000000, -114.0000000000],
[-140.0000000000, -114.0000000000], [-145.6570000000, -111.6570000000],
[-148.0000000000, -106.0000000000], [-148.0000000000, -106.0000000000],
[-145.6570000000, -100.3430000000]]);
		}
	}
	translate(v = [0, 0, -2.0090000000]) {
		linear_extrude(center = false, height = 3.0180000000) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]], points =
[[-146.3640000000, -75.6360000000], [-140.0000000000, -73.0000000000],
[-140.0000000000, -73.0000000000], [-133.6360000000, -75.6360000000],
[-131.0000000000, -82.0000000000], [-131.0000000000, -82.0000000000],
[-133.6360000000, -88.3640000000], [-140.0000000000, -91.0000000000],
[-140.0000000000, -91.0000000000], [-146.3640000000, -88.3640000000],
[-149.0000000000, -82.0000000000], [-149.0000000000, -82.0000000000],
[-146.3640000000, -75.6360000000]]);
		}
	}
	translate(v = [0, 0, -2.0100000000]) {
		linear_extrude(center = false, height = 3.0200000000) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]], points =
[[-147.0710000000, -47.9290000000], [-140.0000000000, -45.0000000000],
[-140.0000000000, -45.0000000000], [-132.9290000000, -47.9290000000],
[-130.0000000000, -55.0000000000], [-130.0000000000, -55.0000000000],
[-132.9290000000, -62.0710000000], [-140.0000000000, -65.0000000000],
[-140.0000000000, -65.0000000000], [-147.0710000000, -62.0710000000],
[-150.0000000000, -55.0000000000], [-150.0000000000, -55.0000000000],
[-147.0710000000, -47.9290000000]]);
		}
	}
	translate(v = [0, 0, -2.0110000000]) {
		linear_extrude(center = false, height = 3.0220000000) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]], points =
[[-148.1390000000, -17.6010000000], [-141.0450000000, -14.0500000000],
[-140.0000000000, -14.0000000000], [-132.6010000000, -16.8610000000],
[-129.0500000000, -23.9550000000], [-129.0000000000, -25.0000000000],
[-131.8610000000, -32.3990000000], [-138.9550000000, -35.9500000000],
[-140.0000000000, -36.0000000000], [-147.3990000000, -33.1390000000],
[-150.9500000000, -26.0450000000], [-151.0000000000, -25.0000000000],
[-148.1390000000, -17.6010000000]]);
		}
	}
	translate(v = [0, 0, -2.0120000000]) {
		linear_extrude(center = false, height = 3.0240000000) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]], points =
[[-149.2190000000, 15.6820000000], [-142.1640000000, 19.8030000000],
[-140.0000000000, 20.0000000000], [-132.3180000000, 17.2190000000],
[-128.1970000000, 10.1640000000], [-128.0000000000, 8.0000000000],
[-130.7810000000, 0.3180000000], [-137.8360000000, -3.8030000000],
[-140.0000000000, -4.0000000000], [-147.6820000000, -1.2190000000],
[-151.8030000000, 5.8360000000], [-152.0000000000, 8.0000000000],
[-149.2190000000, 15.6820000000]]);
		}
	}
	translate(v = [0, 0, -2.0130000000]) {
		linear_extrude(center = false, height = 3.0260000000) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]], points =
[[-150.3040000000, 51.9260000000], [-143.3350000000, 56.5650000000],
[-140.0000000000, 57.0000000000], [-132.0740000000, 54.3040000000],
[-127.4350000000, 47.3350000000], [-127.0000000000, 44.0000000000],
[-129.6960000000, 36.0740000000], [-136.6650000000, 31.4350000000],
[-140.0000000000, 31.0000000000], [-147.9260000000, 33.6960000000],
[-152.5650000000, 40.6650000000], [-153.0000000000, 44.0000000000],
[-150.3040000000, 51.9260000000]]);
		}
	}
	translate(v = [0, 0, -2.0140000000]) {
		linear_extrude(center = false, height = 3.0280000000) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
16]], points = [[-151.3920000000, 91.1370000000], [-144.5410000000,
96.2430000000], [-135.9970000000, 96.4160000000], [-140.0000000000,
97.0000000000], [-131.8630000000, 94.3920000000], [-126.7570000000,
87.5410000000], [-126.5840000000, 78.9970000000], [-126.0000000000,
83.0000000000], [-128.6080000000, 74.8630000000], [-135.4590000000,
69.7570000000], [-144.0030000000, 69.5840000000], [-140.0000000000,
69.0000000000], [-148.1370000000, 71.6080000000], [-153.2430000000,
78.4590000000], [-153.4160000000, 87.0030000000], [-154.0000000000,
83.0000000000], [-151.3920000000, 91.1370000000]]);
		}
	}
	translate(v = [0, 0, -2.0150000000]) {
		linear_extrude(center = false, height = 3.0300000000) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
16]], points = [[-152.4810000000, 133.3210000000], [-145.7690000000,
138.8460000000], [-137.1200000000, 139.7210000000], [-140.0000000000,
140.0000000000], [-131.6790000000, 137.4810000000], [-126.1540000000,
130.7690000000], [-125.2790000000, 122.1200000000], [-125.0000000000,
125.0000000000], [-127.5190000000, 116.6790000000], [-134.2310000000,
111.1540000000], [-142.8800000000, 110.2790000000], [-140.0000000000,
110.0000000000], [-148.3210000000, 112.5190000000], [-153.8460000000,
119.2310000000], [-154.7210000000, 127.8800000000], [-155.0000000000,
125.0000000000], [-152.4810000000, 133.3210000000]]);
		}
	}
	translate(v = [0, 0, -2.0160000000]) {
		linear_extrude(center = false, height = 3.0320000000) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
16]], points = [[-153.5680000000, 178.4800000000], [-147.0110000000,
184.3820000000], [-138.3230000000, 185.9120000000], [-140.0000000000,
186.0000000000], [-131.5200000000, 183.5680000000], [-125.6180000000,
177.0110000000], [-124.0880000000, 168.3230000000], [-124.0000000000,
170.0000000000], [-126.4320000000, 161.5200000000], [-132.9890000000,
155.6180000000], [-141.6770000000, 154.0880000000], [-140.0000000000,
154.0000000000], [-148.4800000000, 156.4320000000], [-154.3820000000,
162.9890000000], [-155.9120000000, 171.6770000000], [-156.0000000000,
170.0000000000], [-153.5680000000, 178.4800000000]]);
		}
	}
	translate(v = [0, 0, -2.0170000000]) {
		linear_extrude(center = false, height = 3.0340000000) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
16]], points = [[-154.6530000000, 226.6190000000], [-148.2600000000,
232.8590000000], [-139.5860000000, 234.9950000000], [-140.0000000000,
235.0000000000], [-131.3810000000, 232.6530000000], [-125.1410000000,
226.2600000000], [-123.0050000000, 217.5860000000], [-123.0000000000,
218.0000000000], [-125.3470000000, 209.3810000000], [-131.7400000000,
203.1410000000], [-140.4140000000, 201.0050000000], [-140.0000000000,
201.0000000000], [-148.6190000000, 203.3470000000], [-154.8590000000,
209.7400000000], [-156.9950000000, 218.4140000000], [-157.0000000000,
218.0000000000], [-154.6530000000, 226.6190000000]]);
		}
	}
	translate(v = [0, 0, -2.0180000000]) {
		linear_extrude(center = false, height = 3.0360000000) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
16]], points = [[-155.7350000000, 277.7420000000], [-149.5090000000,
284.2830000000], [-140.8910000000, 286.9780000000], [-140.0000000000,
287.0000000000], [-131.2580000000, 284.7350000000], [-124.7170000000,
278.5090000000], [-122.0220000000, 269.8910000000], [-122.0000000000,
269.0000000000], [-124.2650000000, 260.2580000000], [-130.4910000000,
253.7170000000], [-139.1090000000, 251.0220000000], [-140.0000000000,
251.0000000000], [-148.7420000000, 253.2650000000], [-155.2830000000,
259.4910000000], [-157.9780000000, 268.1090000000], [-158.0000000000,
269.0000000000], [-155.7350000000, 277.7420000000]]);
		}
	}
	translate(v = [0, 0, -2.0190000000]) {
		linear_extrude(center = false, height = 3.0380000000) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
16]], points = [[-156.8130000000, 331.8490000000], [-150.7570000000,
338.6620000000], [-142.2250000000, 341.8690000000], [-140.0000000000,
342.0000000000], [-131.1510000000, 339.8130000000], [-124.3380000000,
333.7570000000], [-121.1310000000, 325.2250000000], [-121.0000000000,
323.0000000000], [-123.1870000000, 314.1510000000], [-129.2430000000,
307.3380000000], [-137.7750000000, 304.1310000000], [-140.0000000000,
304.0000000000], [-148.8490000000, 306.1870000000], [-155.6620000000,
312.2430000000], [-158.8690000000, 320.7750000000], [-159.0000000000,
323.0000000000], [-156.8130000000, 331.8490000000]]);
		}
	}
}
/



--
View this message in context: http://forum.openscad.org/Extruded-polygons-missing-in-F6-render-view-tp17038.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Mon Apr 11 13:46:50 2016
From: nop.head at gmail.com (nop head)
Date: Mon, 11 Apr 2016 18:46:50 +0100
Subject: [OpenSCAD] Extruded polygons missing in F6 render view
In-Reply-To: <1460366384970-17038.post@n5.nabble.com>
References: <1460366384970-17038.post@n5.nabble.com>
Message-ID: <CAEEmnrOYBPoA9ZRdM_jF1o5cJ3xDMhKUS2bQtrQKakva0xOCrA@mail.gmail.com>

I think it is because some of your polygons have self intersections.


?

On 11 April 2016 at 10:19, daveshorts <david-openscad at mythic.beasts.org>
wrote:

> I am trying to build an openscad based 3D output format for a python based
> design library I use for milling and laser cutter. I am going via
> solidpython
>
> I am basically extruding a 2D design and doing boolean operations on it.
>
> The results look great with F5 but various holes are missing with F6
>
> Here are a series of holes generated by extruding polygons only differing
> in
> radius (and number of sides)
>
> Rendered with F5
> <http://forum.openscad.org/file/n17038/scadf5.jpg>
>
> Rendered with F6
> <http://forum.openscad.org/file/n17038/scadf6.jpg>
>
> If I increase the resolution of the circles they are missing in a
> deterministic but very random way, so holes, 2,3, 7 an 8 are missing.
>
> I am using a build of the github from yesterday, on ubuntu 14.04
>
> I don't think it is exactly this rounding bug
> https://github.com/openscad/openscad/issues/999
> because I have tried scaling everything up by a factor of 1000 and it makes
> no difference
>
> I have tried rendering the same polygons using solidpython's  extrude which
> produces a polyhedron which interestingly has exactly the same bug and the
> same missing holes for a given set of polygons.
>
> I have tried rounding the values to different levels of precision in the
> verticies which makes no difference
>
> The z values are not round numbers in an attempt avoid coplanar issues
> later
> on
>
> any ideas of how to solve the problem or a workaround?
>
>    thanks
>
> The code I am using:
> /difference() {
>         translate(v = [0, 0, -9.0000000000]) {
>                 linear_extrude(center = false, height = 9.0000000000) {
>                         polygon(paths = [[0, 1, 2, 3, 4]], points =
> [[-200.0000000000,
> -200.0000000000], [-200.0000000000, 200.0000000000], [200.0000000000,
> 200.0000000000], [200.0000000000, -200.0000000000], [-200.0000000000,
> -200.0000000000]]);
>                 }
>         }
>         translate(v = [0, 0, -2.0010000000]) {
>                 linear_extrude(center = false, height = 3.0020000000) {
>                         polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
> 10, 11, 12]], points =
> [[-140.7070000000, -189.2930000000], [-140.0000000000, -189.0000000000],
> [-140.0000000000, -189.0000000000], [-139.2930000000, -189.2930000000],
> [-139.0000000000, -190.0000000000], [-139.0000000000, -190.0000000000],
> [-139.2930000000, -190.7070000000], [-140.0000000000, -191.0000000000],
> [-140.0000000000, -191.0000000000], [-140.7070000000, -190.7070000000],
> [-141.0000000000, -190.0000000000], [-141.0000000000, -190.0000000000],
> [-140.7070000000, -189.2930000000]]);
>                 }
>         }
>         translate(v = [0, 0, -2.0020000000]) {
>                 linear_extrude(center = false, height = 3.0040000000) {
>                         polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
> 10, 11, 12]], points =
> [[-141.4140000000, -185.5860000000], [-140.0000000000, -185.0000000000],
> [-140.0000000000, -185.0000000000], [-138.5860000000, -185.5860000000],
> [-138.0000000000, -187.0000000000], [-138.0000000000, -187.0000000000],
> [-138.5860000000, -188.4140000000], [-140.0000000000, -189.0000000000],
> [-140.0000000000, -189.0000000000], [-141.4140000000, -188.4140000000],
> [-142.0000000000, -187.0000000000], [-142.0000000000, -187.0000000000],
> [-141.4140000000, -185.5860000000]]);
>                 }
>         }
>         translate(v = [0, 0, -2.0030000000]) {
>                 linear_extrude(center = false, height = 3.0060000000) {
>                         polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
> 10, 11, 12]], points =
> [[-142.1210000000, -178.8790000000], [-140.0000000000, -178.0000000000],
> [-140.0000000000, -178.0000000000], [-137.8790000000, -178.8790000000],
> [-137.0000000000, -181.0000000000], [-137.0000000000, -181.0000000000],
> [-137.8790000000, -183.1210000000], [-140.0000000000, -184.0000000000],
> [-140.0000000000, -184.0000000000], [-142.1210000000, -183.1210000000],
> [-143.0000000000, -181.0000000000], [-143.0000000000, -181.0000000000],
> [-142.1210000000, -178.8790000000]]);
>                 }
>         }
>         translate(v = [0, 0, -2.0040000000]) {
>                 linear_extrude(center = false, height = 3.0080000000) {
>                         polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
> 10, 11, 12]], points =
> [[-142.8280000000, -169.1720000000], [-140.0000000000, -168.0000000000],
> [-140.0000000000, -168.0000000000], [-137.1720000000, -169.1720000000],
> [-136.0000000000, -172.0000000000], [-136.0000000000, -172.0000000000],
> [-137.1720000000, -174.8280000000], [-140.0000000000, -176.0000000000],
> [-140.0000000000, -176.0000000000], [-142.8280000000, -174.8280000000],
> [-144.0000000000, -172.0000000000], [-144.0000000000, -172.0000000000],
> [-142.8280000000, -169.1720000000]]);
>                 }
>         }
>         translate(v = [0, 0, -2.0050000000]) {
>                 linear_extrude(center = false, height = 3.0100000000) {
>                         polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
> 10, 11, 12]], points =
> [[-143.5360000000, -156.4640000000], [-140.0000000000, -155.0000000000],
> [-140.0000000000, -155.0000000000], [-136.4640000000, -156.4640000000],
> [-135.0000000000, -160.0000000000], [-135.0000000000, -160.0000000000],
> [-136.4640000000, -163.5360000000], [-140.0000000000, -165.0000000000],
> [-140.0000000000, -165.0000000000], [-143.5360000000, -163.5360000000],
> [-145.0000000000, -160.0000000000], [-145.0000000000, -160.0000000000],
> [-143.5360000000, -156.4640000000]]);
>                 }
>         }
>         translate(v = [0, 0, -2.0060000000]) {
>                 linear_extrude(center = false, height = 3.0120000000) {
>                         polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
> 10, 11, 12]], points =
> [[-144.2430000000, -140.7570000000], [-140.0000000000, -139.0000000000],
> [-140.0000000000, -139.0000000000], [-135.7570000000, -140.7570000000],
> [-134.0000000000, -145.0000000000], [-134.0000000000, -145.0000000000],
> [-135.7570000000, -149.2430000000], [-140.0000000000, -151.0000000000],
> [-140.0000000000, -151.0000000000], [-144.2430000000, -149.2430000000],
> [-146.0000000000, -145.0000000000], [-146.0000000000, -145.0000000000],
> [-144.2430000000, -140.7570000000]]);
>                 }
>         }
>         translate(v = [0, 0, -2.0070000000]) {
>                 linear_extrude(center = false, height = 3.0140000000) {
>                         polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
> 10, 11, 12]], points =
> [[-144.9500000000, -122.0500000000], [-140.0000000000, -120.0000000000],
> [-140.0000000000, -120.0000000000], [-135.0500000000, -122.0500000000],
> [-133.0000000000, -127.0000000000], [-133.0000000000, -127.0000000000],
> [-135.0500000000, -131.9500000000], [-140.0000000000, -134.0000000000],
> [-140.0000000000, -134.0000000000], [-144.9500000000, -131.9500000000],
> [-147.0000000000, -127.0000000000], [-147.0000000000, -127.0000000000],
> [-144.9500000000, -122.0500000000]]);
>                 }
>         }
>         translate(v = [0, 0, -2.0080000000]) {
>                 linear_extrude(center = false, height = 3.0160000000) {
>                         polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
> 10, 11, 12]], points =
> [[-145.6570000000, -100.3430000000], [-140.0000000000, -98.0000000000],
> [-140.0000000000, -98.0000000000], [-134.3430000000, -100.3430000000],
> [-132.0000000000, -106.0000000000], [-132.0000000000, -106.0000000000],
> [-134.3430000000, -111.6570000000], [-140.0000000000, -114.0000000000],
> [-140.0000000000, -114.0000000000], [-145.6570000000, -111.6570000000],
> [-148.0000000000, -106.0000000000], [-148.0000000000, -106.0000000000],
> [-145.6570000000, -100.3430000000]]);
>                 }
>         }
>         translate(v = [0, 0, -2.0090000000]) {
>                 linear_extrude(center = false, height = 3.0180000000) {
>                         polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
> 10, 11, 12]], points =
> [[-146.3640000000, -75.6360000000], [-140.0000000000, -73.0000000000],
> [-140.0000000000, -73.0000000000], [-133.6360000000, -75.6360000000],
> [-131.0000000000, -82.0000000000], [-131.0000000000, -82.0000000000],
> [-133.6360000000, -88.3640000000], [-140.0000000000, -91.0000000000],
> [-140.0000000000, -91.0000000000], [-146.3640000000, -88.3640000000],
> [-149.0000000000, -82.0000000000], [-149.0000000000, -82.0000000000],
> [-146.3640000000, -75.6360000000]]);
>                 }
>         }
>         translate(v = [0, 0, -2.0100000000]) {
>                 linear_extrude(center = false, height = 3.0200000000) {
>                         polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
> 10, 11, 12]], points =
> [[-147.0710000000, -47.9290000000], [-140.0000000000, -45.0000000000],
> [-140.0000000000, -45.0000000000], [-132.9290000000, -47.9290000000],
> [-130.0000000000, -55.0000000000], [-130.0000000000, -55.0000000000],
> [-132.9290000000, -62.0710000000], [-140.0000000000, -65.0000000000],
> [-140.0000000000, -65.0000000000], [-147.0710000000, -62.0710000000],
> [-150.0000000000, -55.0000000000], [-150.0000000000, -55.0000000000],
> [-147.0710000000, -47.9290000000]]);
>                 }
>         }
>         translate(v = [0, 0, -2.0110000000]) {
>                 linear_extrude(center = false, height = 3.0220000000) {
>                         polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
> 10, 11, 12]], points =
> [[-148.1390000000, -17.6010000000], [-141.0450000000, -14.0500000000],
> [-140.0000000000, -14.0000000000], [-132.6010000000, -16.8610000000],
> [-129.0500000000, -23.9550000000], [-129.0000000000, -25.0000000000],
> [-131.8610000000, -32.3990000000], [-138.9550000000, -35.9500000000],
> [-140.0000000000, -36.0000000000], [-147.3990000000, -33.1390000000],
> [-150.9500000000, -26.0450000000], [-151.0000000000, -25.0000000000],
> [-148.1390000000, -17.6010000000]]);
>                 }
>         }
>         translate(v = [0, 0, -2.0120000000]) {
>                 linear_extrude(center = false, height = 3.0240000000) {
>                         polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
> 10, 11, 12]], points =
> [[-149.2190000000, 15.6820000000], [-142.1640000000, 19.8030000000],
> [-140.0000000000, 20.0000000000], [-132.3180000000, 17.2190000000],
> [-128.1970000000, 10.1640000000], [-128.0000000000, 8.0000000000],
> [-130.7810000000, 0.3180000000], [-137.8360000000, -3.8030000000],
> [-140.0000000000, -4.0000000000], [-147.6820000000, -1.2190000000],
> [-151.8030000000, 5.8360000000], [-152.0000000000, 8.0000000000],
> [-149.2190000000, 15.6820000000]]);
>                 }
>         }
>         translate(v = [0, 0, -2.0130000000]) {
>                 linear_extrude(center = false, height = 3.0260000000) {
>                         polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
> 10, 11, 12]], points =
> [[-150.3040000000, 51.9260000000], [-143.3350000000, 56.5650000000],
> [-140.0000000000, 57.0000000000], [-132.0740000000, 54.3040000000],
> [-127.4350000000, 47.3350000000], [-127.0000000000, 44.0000000000],
> [-129.6960000000, 36.0740000000], [-136.6650000000, 31.4350000000],
> [-140.0000000000, 31.0000000000], [-147.9260000000, 33.6960000000],
> [-152.5650000000, 40.6650000000], [-153.0000000000, 44.0000000000],
> [-150.3040000000, 51.9260000000]]);
>                 }
>         }
>         translate(v = [0, 0, -2.0140000000]) {
>                 linear_extrude(center = false, height = 3.0280000000) {
>                         polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
> 10, 11, 12, 13, 14, 15,
> 16]], points = [[-151.3920000000, 91.1370000000], [-144.5410000000,
> 96.2430000000], [-135.9970000000, 96.4160000000], [-140.0000000000,
> 97.0000000000], [-131.8630000000, 94.3920000000], [-126.7570000000,
> 87.5410000000], [-126.5840000000, 78.9970000000], [-126.0000000000,
> 83.0000000000], [-128.6080000000, 74.8630000000], [-135.4590000000,
> 69.7570000000], [-144.0030000000, 69.5840000000], [-140.0000000000,
> 69.0000000000], [-148.1370000000, 71.6080000000], [-153.2430000000,
> 78.4590000000], [-153.4160000000, 87.0030000000], [-154.0000000000,
> 83.0000000000], [-151.3920000000, 91.1370000000]]);
>                 }
>         }
>         translate(v = [0, 0, -2.0150000000]) {
>                 linear_extrude(center = false, height = 3.0300000000) {
>                         polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
> 10, 11, 12, 13, 14, 15,
> 16]], points = [[-152.4810000000, 133.3210000000], [-145.7690000000,
> 138.8460000000], [-137.1200000000, 139.7210000000], [-140.0000000000,
> 140.0000000000], [-131.6790000000, 137.4810000000], [-126.1540000000,
> 130.7690000000], [-125.2790000000, 122.1200000000], [-125.0000000000,
> 125.0000000000], [-127.5190000000, 116.6790000000], [-134.2310000000,
> 111.1540000000], [-142.8800000000, 110.2790000000], [-140.0000000000,
> 110.0000000000], [-148.3210000000, 112.5190000000], [-153.8460000000,
> 119.2310000000], [-154.7210000000, 127.8800000000], [-155.0000000000,
> 125.0000000000], [-152.4810000000, 133.3210000000]]);
>                 }
>         }
>         translate(v = [0, 0, -2.0160000000]) {
>                 linear_extrude(center = false, height = 3.0320000000) {
>                         polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
> 10, 11, 12, 13, 14, 15,
> 16]], points = [[-153.5680000000, 178.4800000000], [-147.0110000000,
> 184.3820000000], [-138.3230000000, 185.9120000000], [-140.0000000000,
> 186.0000000000], [-131.5200000000, 183.5680000000], [-125.6180000000,
> 177.0110000000], [-124.0880000000, 168.3230000000], [-124.0000000000,
> 170.0000000000], [-126.4320000000, 161.5200000000], [-132.9890000000,
> 155.6180000000], [-141.6770000000, 154.0880000000], [-140.0000000000,
> 154.0000000000], [-148.4800000000, 156.4320000000], [-154.3820000000,
> 162.9890000000], [-155.9120000000, 171.6770000000], [-156.0000000000,
> 170.0000000000], [-153.5680000000, 178.4800000000]]);
>                 }
>         }
>         translate(v = [0, 0, -2.0170000000]) {
>                 linear_extrude(center = false, height = 3.0340000000) {
>                         polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
> 10, 11, 12, 13, 14, 15,
> 16]], points = [[-154.6530000000, 226.6190000000], [-148.2600000000,
> 232.8590000000], [-139.5860000000, 234.9950000000], [-140.0000000000,
> 235.0000000000], [-131.3810000000, 232.6530000000], [-125.1410000000,
> 226.2600000000], [-123.0050000000, 217.5860000000], [-123.0000000000,
> 218.0000000000], [-125.3470000000, 209.3810000000], [-131.7400000000,
> 203.1410000000], [-140.4140000000, 201.0050000000], [-140.0000000000,
> 201.0000000000], [-148.6190000000, 203.3470000000], [-154.8590000000,
> 209.7400000000], [-156.9950000000, 218.4140000000], [-157.0000000000,
> 218.0000000000], [-154.6530000000, 226.6190000000]]);
>                 }
>         }
>         translate(v = [0, 0, -2.0180000000]) {
>                 linear_extrude(center = false, height = 3.0360000000) {
>                         polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
> 10, 11, 12, 13, 14, 15,
> 16]], points = [[-155.7350000000, 277.7420000000], [-149.5090000000,
> 284.2830000000], [-140.8910000000, 286.9780000000], [-140.0000000000,
> 287.0000000000], [-131.2580000000, 284.7350000000], [-124.7170000000,
> 278.5090000000], [-122.0220000000, 269.8910000000], [-122.0000000000,
> 269.0000000000], [-124.2650000000, 260.2580000000], [-130.4910000000,
> 253.7170000000], [-139.1090000000, 251.0220000000], [-140.0000000000,
> 251.0000000000], [-148.7420000000, 253.2650000000], [-155.2830000000,
> 259.4910000000], [-157.9780000000, 268.1090000000], [-158.0000000000,
> 269.0000000000], [-155.7350000000, 277.7420000000]]);
>                 }
>         }
>         translate(v = [0, 0, -2.0190000000]) {
>                 linear_extrude(center = false, height = 3.0380000000) {
>                         polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
> 10, 11, 12, 13, 14, 15,
> 16]], points = [[-156.8130000000, 331.8490000000], [-150.7570000000,
> 338.6620000000], [-142.2250000000, 341.8690000000], [-140.0000000000,
> 342.0000000000], [-131.1510000000, 339.8130000000], [-124.3380000000,
> 333.7570000000], [-121.1310000000, 325.2250000000], [-121.0000000000,
> 323.0000000000], [-123.1870000000, 314.1510000000], [-129.2430000000,
> 307.3380000000], [-137.7750000000, 304.1310000000], [-140.0000000000,
> 304.0000000000], [-148.8490000000, 306.1870000000], [-155.6620000000,
> 312.2430000000], [-158.8690000000, 320.7750000000], [-159.0000000000,
> 323.0000000000], [-156.8130000000, 331.8490000000]]);
>                 }
>         }
> }
> /
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Extruded-polygons-missing-in-F6-render-view-tp17038.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160411/198b1598/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: self_intersect.png
Type: image/png
Size: 10208 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160411/198b1598/attachment.png>

From rcmpersiano at gmail.com  Mon Apr 11 13:49:11 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Mon, 11 Apr 2016 10:49:11 -0700 (MST)
Subject: [OpenSCAD] Tail recursion
Message-ID: <1460396951444-17040.post@n5.nabble.com>

In  another thread
<http://forum.openscad.org/Simple-polygon-triangulation-tp16755.html>  ,
Torsten said:

> OpenSCAD can do simple tail recursion elimination, so if the
> function is matching the simple "cond ? result : recurse()"
> it will not be limited by stack (there's still a loop limit
> but that's much higher... a million, I think?).

However, not all recursive functions that match the model "cond ? result :
recurse()" are interpreted to tail recursion by OpenSCAD. For instance:

> function test_one(p,i) = (p[i]>=0);
>             // iteractive version
> function test_all_0(p) = [ for(i=[0:len(p)-1]) if( ! test_one(p,i) ) 0] ==
> [];
>            
> function test_all_1(p, i=0) =  // tail recursion
>     i >= len(p) || ! test_one(p,i) ?
>         i >= len(p) :
>         test_all_1(p, i+1);
>             
> function test_all_2(p, i=0) = // no tail recursion: overflow for
> len(p)>=8000
>     i >= len(p)? true : ! test_one(p,i) ?
>         false :
>         test_all_2(p, i+1);

So, the question is: which expressions cond are allowed in "cond ? result :
recurse()" to get tail recursion?



--
View this message in context: http://forum.openscad.org/Tail-recursion-tp17040.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Mon Apr 11 13:59:50 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 11 Apr 2016 19:59:50 +0200
Subject: [OpenSCAD] Tail recursion
In-Reply-To: <1460396951444-17040.post@n5.nabble.com>
References: <1460396951444-17040.post@n5.nabble.com>
Message-ID: <570BE616.9060207@gmx.de>

On 04/11/2016 07:49 PM, Ronaldo wrote:
            >> function test_all_2(p, i=0) = // no tail recursion: overflow for
>> len(p)>=8000
>>     i >= len(p)? true : ! test_one(p,i) ?
>>         false :
>>         test_all_2(p, i+1);
> 
> So, the question is: which expressions cond are allowed in "cond ? result :
> recurse()" to get tail recursion?
> 
Exactly those that match this pattern. The test_all_2() example
does not match, it has a second condition instead of the direct
recursive call.

ciao,
  Torsten.




From rcmpersiano at gmail.com  Mon Apr 11 14:11:07 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Mon, 11 Apr 2016 11:11:07 -0700 (MST)
Subject: [OpenSCAD] Tail recursion
In-Reply-To: <1460396951444-17040.post@n5.nabble.com>
References: <1460396951444-17040.post@n5.nabble.com>
Message-ID: <1460398267535-17042.post@n5.nabble.com>

Transcription mistake:  test_all_2 should be written as:

> function test_all_2(p, i=0) = 
>     i >= len(p)? true : ! test_one(p,i) ?
>         i >= len(p) :
>         test_all_2(p, i+1);

May be I got an answer to my own question. The following function seems to
be a tail recursion:

> function test_all_3(p, i=0) =  
>     ( i >= len(p)? true : ! test_one(p,i)  ) ?
>         i >= len(p) :
>         test_all_3(p, i+1);

A few parenthesis made the difference.



--
View this message in context: http://forum.openscad.org/Tail-recursion-tp17040p17042.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Mon Apr 11 14:14:28 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 11 Apr 2016 20:14:28 +0200
Subject: [OpenSCAD] Tail recursion
In-Reply-To: <1460398267535-17042.post@n5.nabble.com>
References: <1460396951444-17040.post@n5.nabble.com>
	<1460398267535-17042.post@n5.nabble.com>
Message-ID: <570BE984.4000504@gmx.de>

On 04/11/2016 08:11 PM, Ronaldo wrote:
> A few parenthesis made the difference.
> 
Indeed, as they change the top level expression to the
structure which is currently the only supported case
for tail recursion elimination.

If someone has pointers for how to implement better
solutions, please post those. Searching for this so
far mainly returns documentation about how to _use_
it.

ciao,
  Torsten.



From rcmpersiano at gmail.com  Mon Apr 11 16:08:52 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Mon, 11 Apr 2016 13:08:52 -0700 (MST)
Subject: [OpenSCAD] Quicksort
Message-ID: <1460405332300-17044.post@n5.nabble.com>

I am stuck. I got an implementation of quicksort as an example of list
comprehension in the manual:

> function quicksort(arr) = 
>   !(len(arr)>0) ? [] : 
>       let(  pivot   = arr[floor(len(arr)/2)],
>             lesser  = [ for (y = arr) if (y  < pivot) y ],
>             equal   = [ for (y = arr) if (y == pivot) y ],
>             greater = [ for (y = arr) if (y  > pivot) y ]
>       ) 
>       concat( quicksort(lesser), equal, quicksort(greater) );

It works well for very large random arrays and, in the worst case, for
arrays with length at least 3000 without stack overflow.
Usually the partitions of quicksort are in two subarrays. So I tweaked the
code to get:

> function quicksort1(arr) = 
>   !(len(arr)>0) ? [] : 
>       let( pivot   = arr[floor(len(arr)/2)],
>            lesser  = [ for (y = arr) if (y  <= pivot) y ],
>            greater = [ for (y = arr) if (y  >  pivot) y ]
>       ) 
>       concat( quicksort1(lesser), quicksort1(greater) );

where the partition "equal" is included in the partition "lesser".
The trouble is that this last version is not working: I get a stack overflow
for any non void array. And I don't see why.



--
View this message in context: http://forum.openscad.org/Quicksort-tp17044.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From experimentalist at aaawesome.co.uk  Mon Apr 11 17:04:21 2016
From: experimentalist at aaawesome.co.uk (Experimentalist)
Date: Mon, 11 Apr 2016 14:04:21 -0700 (MST)
Subject: [OpenSCAD] Easy way to get the area area of a polygon?
Message-ID: <1460408661624-17045.post@n5.nabble.com>

Hi

Since a polygon is essentially made up of triangles I presume this is not
too hard. Anyone got a solution? I don't want to waste valuable time
reinventing the wheel.

Thanks
Ex.



--
View this message in context: http://forum.openscad.org/Easy-way-to-get-the-area-area-of-a-polygon-tp17045.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From david-openscad at mythic.beasts.org  Mon Apr 11 17:14:13 2016
From: david-openscad at mythic.beasts.org (daveshorts)
Date: Mon, 11 Apr 2016 14:14:13 -0700 (MST)
Subject: [OpenSCAD] Extruded polygons missing in F6 render view
In-Reply-To: <CAEEmnrOYBPoA9ZRdM_jF1o5cJ3xDMhKUS2bQtrQKakva0xOCrA@mail.gmail.com>
References: <1460366384970-17038.post@n5.nabble.com>
	<CAEEmnrOYBPoA9ZRdM_jF1o5cJ3xDMhKUS2bQtrQKakva0xOCrA@mail.gmail.com>
Message-ID: <1460409253669-17046.post@n5.nabble.com>

Thankyou, as was probably predictable I was doing something stupid... I think
I even know what has caused that... May also explain why the cnc machine
occasionally slows down when cutting holes...
   cheers



--
View this message in context: http://forum.openscad.org/Extruded-polygons-missing-in-F6-render-view-tp17038p17046.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From blue.cube at seznam.cz  Mon Apr 11 17:15:25 2016
From: blue.cube at seznam.cz (Kuba Marek)
Date: Mon, 11 Apr 2016 23:15:25 +0200
Subject: [OpenSCAD] Quicksort
In-Reply-To: <1460405332300-17044.post@n5.nabble.com>
References: <1460405332300-17044.post@n5.nabble.com>
Message-ID: <20160411231525.5696127e@duskwalker2>

In the first implementation there is always at least one element that
gets taken away from the sorting (the pivot), so that you will always
finish.
In quicksort1 when the array has just 1 element it gets always selected
as pivot, always included in lesser and you get infinite recursion.


> I am stuck. I got an implementation of quicksort as an example of
> list
> comprehension in the manual:
> 
> > function quicksort(arr) =   
> >   !(len(arr)>0) ? [] :   
> >       let(  pivot   = arr[floor(len(arr)/2)],
> >             lesser  = [ for (y = arr) if (y  < pivot) y ],
> >             equal   = [ for (y = arr) if (y == pivot) y ],
> >             greater = [ for (y = arr) if (y  > pivot) y ]
> >       ) 
> >       concat( quicksort(lesser), equal, quicksort(greater) );  
> 
> It works well for very large random arrays and, in the worst case, for
> arrays with length at least 3000 without stack overflow.
> Usually the partitions of quicksort are in two subarrays. So I
> tweaked the code to get:
> 
> > function quicksort1(arr) =   
> >   !(len(arr)>0) ? [] :   
> >       let( pivot   = arr[floor(len(arr)/2)],
> >            lesser  = [ for (y = arr) if (y  <= pivot) y ],
> >            greater = [ for (y = arr) if (y  >  pivot) y ]
> >       ) 
> >       concat( quicksort1(lesser), quicksort1(greater) );  
> 
> where the partition "equal" is included in the partition "lesser".
> The trouble is that this last version is not working: I get a stack
> overflow for any non void array. And I don't see why.
> 
> 
> 
> --
> View this message in context:
> http://forum.openscad.org/Quicksort-tp17044.html Sent from the
> OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


From fred_dot_u at yahoo.com  Mon Apr 11 17:27:36 2016
From: fred_dot_u at yahoo.com (fred_dot_u)
Date: Mon, 11 Apr 2016 14:27:36 -0700 (MST)
Subject: [OpenSCAD] Easy way to get the area of a polygon?
In-Reply-To: <1460408661624-17045.post@n5.nabble.com>
References: <1460408661624-17045.post@n5.nabble.com>
Message-ID: <1460410056067-17048.post@n5.nabble.com>

I can't provide verification of this particular program, but it purports to
do as you require:

http://codecanyon.net/item/3d-surface-area-calculator/10457510
<http://codecanyon.net/item/3d-surface-area-calculator/10457510>  

At US$11.00 it would be a small gamble.



--
View this message in context: http://forum.openscad.org/Easy-way-to-get-the-area-of-a-polygon-tp17045p17048.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Mon Apr 11 21:35:21 2016
From: doug at moens.org (doug moen)
Date: Mon, 11 Apr 2016 21:35:21 -0400
Subject: [OpenSCAD] Tail recursion
In-Reply-To: <570BE984.4000504@gmx.de>
References: <1460396951444-17040.post@n5.nabble.com>
	<1460398267535-17042.post@n5.nabble.com> <570BE984.4000504@gmx.de>
Message-ID: <CAGV6i+POJRX+c_fKgz3kh=U=pmq3K7+GZDr0FTR0c2Ln+pg0-w@mail.gmail.com>

My plan for implementing tail recursion is to compile OpenSCAD into byte
codes, and write a byte code interpreter with an explicitly managed stack.
(Maybe separate data and control stacks.) This should run a lot faster than
the current parse tree interpreter.

While compiling the function 'g', if the compiler detects a tail call to a
user defined function 'f(x)', such that the value returned by 'f(x)' is
immediately returned as the result of 'g', then instead of emitting a CALL
instruction, it instead emits a TAIL_CALL instruction, which basically
fixes up the stack so that the activation record for 'g' is replaced by the
arguments to 'f', and then it jumps to 'f'. As a special case, if 'g'
recursively calls itself in tail position, that is also handled as a jump,
without any stack growth.

I don't know an easy way to implement generalized tail recursion
elimination for a parse tree interpreter. There is a technique called a
'trampoline' that might be applicable, but that's probably more trouble
than it is worth.

On 11 April 2016 at 14:14, Torsten Paul <Torsten.Paul at gmx.de> wrote:

> On 04/11/2016 08:11 PM, Ronaldo wrote:
> > A few parenthesis made the difference.
> >
> Indeed, as they change the top level expression to the
> structure which is currently the only supported case
> for tail recursion elimination.
>
> If someone has pointers for how to implement better
> solutions, please post those. Searching for this so
> far mainly returns documentation about how to _use_
> it.
>
> ciao,
>   Torsten.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160411/b918ed62/attachment.html>

From doug at moens.org  Mon Apr 11 21:38:57 2016
From: doug at moens.org (doug moen)
Date: Mon, 11 Apr 2016 21:38:57 -0400
Subject: [OpenSCAD] Tail recursion
In-Reply-To: <1460396951444-17040.post@n5.nabble.com>
References: <1460396951444-17040.post@n5.nabble.com>
Message-ID: <CAGV6i+NNDAySSZ+OnbC2e6DZ8CJe_W80ikiya8c1Cd2WUW69zQ@mail.gmail.com>

Ronaldo: test_all_2 does not match the pattern, because the body of the
function is

i >= len(p)
   ? true
    : (! test_one(p,i)
          ? false
          : test_all_2(p, i+1))

The body is X ? Y : Z where neither Y nor Z is a call to test_all_2. In
this case, Z is (! test_one(p,i)
          ? false
          : test_all_2(p, i+1)

On 11 April 2016 at 13:49, Ronaldo <rcmpersiano at gmail.com> wrote:

> In  another thread
> <http://forum.openscad.org/Simple-polygon-triangulation-tp16755.html>  ,
> Torsten said:
>
> > OpenSCAD can do simple tail recursion elimination, so if the
> > function is matching the simple "cond ? result : recurse()"
> > it will not be limited by stack (there's still a loop limit
> > but that's much higher... a million, I think?).
>
> However, not all recursive functions that match the model "cond ? result :
> recurse()" are interpreted to tail recursion by OpenSCAD. For instance:
>
> > function test_one(p,i) = (p[i]>=0);
> >             // iteractive version
> > function test_all_0(p) = [ for(i=[0:len(p)-1]) if( ! test_one(p,i) ) 0]
> ==
> > [];
> >
> > function test_all_1(p, i=0) =  // tail recursion
> >     i >= len(p) || ! test_one(p,i) ?
> >         i >= len(p) :
> >         test_all_1(p, i+1);
> >
> > function test_all_2(p, i=0) = // no tail recursion: overflow for
> > len(p)>=8000
> >     i >= len(p)? true : ! test_one(p,i) ?
> >         false :
> >         test_all_2(p, i+1);
>
> So, the question is: which expressions cond are allowed in "cond ? result :
> recurse()" to get tail recursion?
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Tail-recursion-tp17040.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160411/db92ccfe/attachment.html>

From rcmpersiano at gmail.com  Mon Apr 11 22:02:37 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Mon, 11 Apr 2016 19:02:37 -0700 (MST)
Subject: [OpenSCAD] Quicksort
In-Reply-To: <20160411231525.5696127e@duskwalker2>
References: <1460405332300-17044.post@n5.nabble.com>
	<20160411231525.5696127e@duskwalker2>
Message-ID: <1460426557812-17051.post@n5.nabble.com>

Bingo! Why I didn't see that? Well, I think I hadn't fully grasped quicksort
algorithm. :(

Meanwhile, I got a version of quicksort which seems to have the pattern of
tail recursion:

> function qs(arr, arr_out=[]) = 
>     !(len(arr)>0) ? 
>         arr_out : 
>         qs( arr     = high_part(arr), 
>             arr_out = concat(qs( low_part(arr), arr_out ),
> middle_part(arr)) );
> 
> function high_part  (arr) = [ for (y = arr) if (y >  pivot(arr)) y ];
> function middle_part(arr) = [ for (y = arr) if (y == pivot(arr)) y ];
> function low_part   (arr) = [ for (y = arr) if (y <  pivot(arr)) y ];
> function pivot      (arr) = arr[floor(len(arr)/2)];

I were able to sort a worst case array of length 5000 in 48sec with qs().
The previous quicksort() function fail with stack overflow for lengths
lesser than 4000. However, it is much slower: for a random array with 40000
values, qs() required 60 sec while quicksort() spent just 4sec. 



--
View this message in context: http://forum.openscad.org/Quicksort-tp17044p17051.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Mon Apr 11 22:13:29 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Mon, 11 Apr 2016 19:13:29 -0700 (MST)
Subject: [OpenSCAD] Tail recursion
In-Reply-To: <CAGV6i+NNDAySSZ+OnbC2e6DZ8CJe_W80ikiya8c1Cd2WUW69zQ@mail.gmail.com>
References: <1460396951444-17040.post@n5.nabble.com>
	<CAGV6i+NNDAySSZ+OnbC2e6DZ8CJe_W80ikiya8c1Cd2WUW69zQ@mail.gmail.com>
Message-ID: <1460427209580-17052.post@n5.nabble.com>

doug.moen wrote
> Ronaldo: test_all_2 does not match the pattern, because the body of the
> function is...

I understand that now. But I have another question. The code bellow is an
attempt to write a tail recursion version of quicksort. It seems to follow
the pattern you mentioned:

> function qs(arr, arr_out=[]) = 
>     !(len(arr)>0) ? 
>         arr_out : 
>         qs( arr     = high_part(arr), 
>             arr_out = concat(qs( low_part(arr), arr_out ),
> middle_part(arr)) );
> 
> function high_part  (arr) = [ for (y = arr) if (y >  pivot(arr)) y ];
> function middle_part(arr) = [ for (y = arr) if (y == pivot(arr)) y ];
> function low_part   (arr) = [ for (y = arr) if (y <  pivot(arr)) y ];
> function pivot      (arr) = arr[floor(len(arr)/2)];

However, I have two recursive calls in the last line of qs(). Is it really a
tail recursion? How evaluator deal with it?



--
View this message in context: http://forum.openscad.org/Tail-recursion-tp17040p17052.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Mon Apr 11 22:34:28 2016
From: doug at moens.org (doug moen)
Date: Mon, 11 Apr 2016 22:34:28 -0400
Subject: [OpenSCAD] Tail recursion
In-Reply-To: <1460427209580-17052.post@n5.nabble.com>
References: <1460396951444-17040.post@n5.nabble.com>
	<CAGV6i+NNDAySSZ+OnbC2e6DZ8CJe_W80ikiya8c1Cd2WUW69zQ@mail.gmail.com>
	<1460427209580-17052.post@n5.nabble.com>
Message-ID: <CAGV6i+NVdDaKAg6jChKPzhEusC5DyoRc9KWqWkELBd8xR6Qcgg@mail.gmail.com>

The innermost call to qs is not tail recursive, so the stack will grow
while evaluating nested calls to qs. Quicksort is inherently
non-tail-recursive in any language.

On 11 April 2016 at 22:13, Ronaldo <rcmpersiano at gmail.com> wrote:

> doug.moen wrote
> > Ronaldo: test_all_2 does not match the pattern, because the body of the
> > function is...
>
> I understand that now. But I have another question. The code bellow is an
> attempt to write a tail recursion version of quicksort. It seems to follow
> the pattern you mentioned:
>
> > function qs(arr, arr_out=[]) =
> >     !(len(arr)>0) ?
> >         arr_out :
> >         qs( arr     = high_part(arr),
> >             arr_out = concat(qs( low_part(arr), arr_out ),
> > middle_part(arr)) );
> >
> > function high_part  (arr) = [ for (y = arr) if (y >  pivot(arr)) y ];
> > function middle_part(arr) = [ for (y = arr) if (y == pivot(arr)) y ];
> > function low_part   (arr) = [ for (y = arr) if (y <  pivot(arr)) y ];
> > function pivot      (arr) = arr[floor(len(arr)/2)];
>
> However, I have two recursive calls in the last line of qs(). Is it really
> a
> tail recursion? How evaluator deal with it?
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Tail-recursion-tp17040p17052.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160411/63037547/attachment.html>

From doug at moens.org  Mon Apr 11 22:41:29 2016
From: doug at moens.org (doug moen)
Date: Mon, 11 Apr 2016 22:41:29 -0400
Subject: [OpenSCAD] Easy way to get the area area of a polygon?
In-Reply-To: <1460408661624-17045.post@n5.nabble.com>
References: <1460408661624-17045.post@n5.nabble.com>
Message-ID: <CAGV6i+Oi2hipFUXBp9GqK0M8GT0UANS7z5WWjsz=Fk5mmH-RfQ@mail.gmail.com>

Well, first you triangulate the polygon using the code posted to the recent
"Simple Polygon Triangulation" thread, then you add up the area of each
triangle?

On 11 April 2016 at 17:04, Experimentalist <experimentalist at aaawesome.co.uk>
wrote:

> Hi
>
> Since a polygon is essentially made up of triangles I presume this is not
> too hard. Anyone got a solution? I don't want to waste valuable time
> reinventing the wheel.
>
> Thanks
> Ex.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Easy-way-to-get-the-area-area-of-a-polygon-tp17045.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160411/e9b5d650/attachment.html>

From kennethrsloan at gmail.com  Mon Apr 11 23:01:59 2016
From: kennethrsloan at gmail.com (Kenneth Sloan)
Date: Mon, 11 Apr 2016 22:01:59 -0500
Subject: [OpenSCAD] Easy way to get the area area of a polygon?
In-Reply-To: <CAGV6i+Oi2hipFUXBp9GqK0M8GT0UANS7z5WWjsz=Fk5mmH-RfQ@mail.gmail.com>
References: <1460408661624-17045.post@n5.nabble.com>
	<CAGV6i+Oi2hipFUXBp9GqK0M8GT0UANS7z5WWjsz=Fk5mmH-RfQ@mail.gmail.com>
Message-ID: <3AF08362-ACF8-4119-81F6-7CC1330A3FDB@gmail.com>

It is absolutely NOT NECESSARY to triangulate in order to compute area.  You can walk the perimeter and compute the area of the polygon.  Google ?Newman?s Scheme?, or directly apply either Green?s Theorem or Stokes?s Theorem, depending on your training.

That was the short, enigmatic answer (Google is your friend).  The long answer is:

a) pick a point in the plane - any point.  Call it O. [Hint: [0,0] works best]
b) for each edge in the polygon, construct the triangle O,v[i], v[i+1 mod n]
    where n is the number of vertices and the numbering begins with 0
     and the edge goes from v[i] to v[i+1 mod n]
c) compute the SIGNED area of this triangle and accumulate the sum of the SIGNED areas
d) the total SIGNED area will give the area of the polygon and the SIGN will tell you 
   if the polygon is correctly oriented.

A quick and dirty first implementation might stop here.  To make it faster:

e) for extra credit, re-arrange the terms to eliminate O [that?s why I suggested that [0,0] works best].  You will arrive at a computation that looks something like:

     AREA = 0.5 * SUM(v[i] CROSS v[i+1 mod n])

where:
  the representation of the point v[i] is interpreted as a the representation of a 
    vector from O to v[i] (no, points and vectors are not the same, but SOME computations 
    can pretend that they are)
  vertices are numbered 0..n-1

I have a beautiful proof-by-diagram of this, but it does not fit in ASCII format.

If you want to do Volumes, substitute triangular faces of the polyhedron for the edges of the polygon.  Use the scalar triple product instead of cross product, and divide by 6 instead of 2.

Proof left as an exercise for the reader.

Green and Stokes showed that you can compute properties of the area by walking around the perimeter.   Their followers proved that one follows from the other, and vice versa.  Newman did the algebra and optimized the computation in the context of computer graphics.

Newman?s scheme dates to AT LEAST 1965.  Green and Stokes were much earlier.

--
Kenneth Sloan
KennethRSloan at gmail.com <mailto:KennethRSloan at gmail.com>
Vision is the art of seeing what is invisible to others.




> On Apr 11, 2016, at 21:41 , doug moen <doug at moens.org> wrote:
> 
> Well, first you triangulate the polygon using the code posted to the recent "Simple Polygon Triangulation" thread, then you add up the area of each triangle?
> 
> On 11 April 2016 at 17:04, Experimentalist <experimentalist at aaawesome.co.uk <mailto:experimentalist at aaawesome.co.uk>> wrote:
> Hi
> 
> Since a polygon is essentially made up of triangles I presume this is not
> too hard. Anyone got a solution? I don't want to waste valuable time
> reinventing the wheel.
> 
> Thanks
> Ex.
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/Easy-way-to-get-the-area-area-of-a-polygon-tp17045.html <http://forum.openscad.org/Easy-way-to-get-the-area-area-of-a-polygon-tp17045.html>
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org <http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org>
> 
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160411/bb89841e/attachment.html>

From rcmpersiano at gmail.com  Tue Apr 12 00:30:51 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Tue, 12 Apr 2016 01:30:51 -0300
Subject: [OpenSCAD] Easy way to get the area area of a polygon?
In-Reply-To: <3AF08362-ACF8-4119-81F6-7CC1330A3FDB@gmail.com>
References: <1460408661624-17045.post@n5.nabble.com>
	<CAGV6i+Oi2hipFUXBp9GqK0M8GT0UANS7z5WWjsz=Fk5mmH-RfQ@mail.gmail.com>
	<3AF08362-ACF8-4119-81F6-7CC1330A3FDB@gmail.com>
Message-ID: <CA+i9EaDLAi-n9J5K1dbdBdXS8xBCuCdgRyy1FZAqNppxak8Ltw@mail.gmail.com>

Nice solution! If I undertand it well the AREA evaluated by the expression
in e) is a vector. And the scalar area will be its norm.

2016-04-12 0:01 GMT-03:00 Kenneth Sloan <kennethrsloan at gmail.com>:

> It is absolutely NOT NECESSARY to triangulate in order to compute area.
> You can walk the perimeter and compute the area of the polygon.  Google
> ?Newman?s Scheme?, or directly apply either Green?s Theorem or Stokes?s
> Theorem, depending on your training.
>
> That was the short, enigmatic answer (Google is your friend).  The long
> answer is:
>
> a) pick a point in the plane - any point.  Call it O. [Hint: [0,0] works
> best]
> b) for each edge in the polygon, construct the triangle O,v[i], v[i+1 mod
> n]
>     where n is the number of vertices and the numbering begins with 0
>      and the edge goes from v[i] to v[i+1 mod n]
> c) compute the SIGNED area of this triangle and accumulate the sum of the
> SIGNED areas
> d) the total SIGNED area will give the area of the polygon and the SIGN
> will tell you
>    if the polygon is correctly oriented.
>
> A quick and dirty first implementation might stop here.  To make it faster:
>
> e) for extra credit, re-arrange the terms to eliminate O [that?s why I
> suggested that [0,0] works best].  You will arrive at a computation that
> looks something like:
>
>      AREA = 0.5 * SUM(v[i] CROSS v[i+1 mod n])
>
> where:
>   the representation of the point v[i] is interpreted as a the
> representation of a
>     vector from O to v[i] (no, points and vectors are not the same, but
> SOME computations
>     can pretend that they are)
>   vertices are numbered 0..n-1
>
> I have a beautiful proof-by-diagram of this, but it does not fit in ASCII
> format.
>
> If you want to do Volumes, substitute triangular faces of the polyhedron
> for the edges of the polygon.  Use the scalar triple product instead of
> cross product, and divide by 6 instead of 2.
>
> Proof left as an exercise for the reader.
>
> Green and Stokes showed that you can compute properties of the area by
> walking around the perimeter.   Their followers proved that one follows
> from the other, and vice versa.  Newman did the algebra and optimized the
> computation in the context of computer graphics.
>
> Newman?s scheme dates to AT LEAST 1965.  Green and Stokes were much
> earlier.
>
> --
> Kenneth Sloan
> KennethRSloan at gmail.com
> Vision is the art of seeing what is invisible to others.
>
>
>
>
> On Apr 11, 2016, at 21:41 , doug moen <doug at moens.org> wrote:
>
> Well, first you triangulate the polygon using the code posted to the
> recent "Simple Polygon Triangulation" thread, then you add up the area of
> each triangle?
>
> On 11 April 2016 at 17:04, Experimentalist <
> experimentalist at aaawesome.co.uk> wrote:
>
>> Hi
>>
>> Since a polygon is essentially made up of triangles I presume this is not
>> too hard. Anyone got a solution? I don't want to waste valuable time
>> reinventing the wheel.
>>
>> Thanks
>> Ex.
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/Easy-way-to-get-the-area-area-of-a-polygon-tp17045.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com
>> <http://nabble.com>.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160412/031667aa/attachment.html>

From kennethrsloan at gmail.com  Tue Apr 12 00:43:27 2016
From: kennethrsloan at gmail.com (Kenneth Sloan)
Date: Mon, 11 Apr 2016 23:43:27 -0500
Subject: [OpenSCAD] Easy way to get the area area of a polygon?
In-Reply-To: <CA+i9EaDLAi-n9J5K1dbdBdXS8xBCuCdgRyy1FZAqNppxak8Ltw@mail.gmail.com>
References: <1460408661624-17045.post@n5.nabble.com>
	<CAGV6i+Oi2hipFUXBp9GqK0M8GT0UANS7z5WWjsz=Fk5mmH-RfQ@mail.gmail.com>
	<3AF08362-ACF8-4119-81F6-7CC1330A3FDB@gmail.com>
	<CA+i9EaDLAi-n9J5K1dbdBdXS8xBCuCdgRyy1FZAqNppxak8Ltw@mail.gmail.com>
Message-ID: <6CEC3379-ACB9-4F74-B024-6233FA3C721A@gmail.com>

If the polygon is in a 2D plane, then the cross product produces a scalar.  (At least, that?s the lie they teach to engineers; you may prefer to think of it as a vector in the z direction).  If the polygon lies in 3-space (but, one hopes, is planar), then, yes - the cross product produces a vector.
 
The cross-product of two 3D vectors is a vector which has a length twice the area of the triangle defined by the two input vectors.  The direction of the cross product is the surface normal.

The accumulated sums of all the cross-products produced by creating triangles from O and the successive vertices of the polygon is thus a vector with a length twice the area of the polygon (if the polygon is planar) and a direction perpendicular to the plane.

For extra credit: what is the interpretation of the length and direction of the computed vector when the vertices of the ?polygon? do not lie in a plane?

Answer (I?m not cruel?): the direction is perpendicular to a ?best-fit? plane through the wrinkled ?polygon?, and the length is twice the area of the projection of the ?polygon? onto that best-fit plane.

So?if you have wrinkled polygons and you want the area of the wrinkled surface?then you *do* have to triangulate.  Question: in this case, is the answer unique?

--
Kenneth Sloan
KennethRSloan at gmail.com <mailto:KennethRSloan at gmail.com>
Vision is the art of seeing what is invisible to others.




> On Apr 11, 2016, at 23:30 , Ronaldo Persiano <rcmpersiano at gmail.com> wrote:
> 
> Nice solution! If I undertand it well the AREA evaluated by the expression in e) is a vector. And the scalar area will be its norm.
> 
> 2016-04-12 0:01 GMT-03:00 Kenneth Sloan <kennethrsloan at gmail.com <mailto:kennethrsloan at gmail.com>>:
> It is absolutely NOT NECESSARY to triangulate in order to compute area.  You can walk the perimeter and compute the area of the polygon.  Google ?Newman?s Scheme?, or directly apply either Green?s Theorem or Stokes?s Theorem, depending on your training.
> 
> That was the short, enigmatic answer (Google is your friend).  The long answer is:
> 
> a) pick a point in the plane - any point.  Call it O. [Hint: [0,0] works best]
> b) for each edge in the polygon, construct the triangle O,v[i], v[i+1 mod n]
>     where n is the number of vertices and the numbering begins with 0
>      and the edge goes from v[i] to v[i+1 mod n]
> c) compute the SIGNED area of this triangle and accumulate the sum of the SIGNED areas
> d) the total SIGNED area will give the area of the polygon and the SIGN will tell you 
>    if the polygon is correctly oriented.
> 
> A quick and dirty first implementation might stop here.  To make it faster:
> 
> e) for extra credit, re-arrange the terms to eliminate O [that?s why I suggested that [0,0] works best].  You will arrive at a computation that looks something like:
> 
>      AREA = 0.5 * SUM(v[i] CROSS v[i+1 mod n])
> 
> where:
>   the representation of the point v[i] is interpreted as a the representation of a 
>     vector from O to v[i] (no, points and vectors are not the same, but SOME computations 
>     can pretend that they are)
>   vertices are numbered 0..n-1
> 
> I have a beautiful proof-by-diagram of this, but it does not fit in ASCII format.
> 
> If you want to do Volumes, substitute triangular faces of the polyhedron for the edges of the polygon.  Use the scalar triple product instead of cross product, and divide by 6 instead of 2.
> 
> Proof left as an exercise for the reader.
> 
> Green and Stokes showed that you can compute properties of the area by walking around the perimeter.   Their followers proved that one follows from the other, and vice versa.  Newman did the algebra and optimized the computation in the context of computer graphics.
> 
> Newman?s scheme dates to AT LEAST 1965.  Green and Stokes were much earlier.
> 
> --
> Kenneth Sloan
> KennethRSloan at gmail.com <mailto:KennethRSloan at gmail.com>
> Vision is the art of seeing what is invisible to others.
> 
> 
> 
> 
>> On Apr 11, 2016, at 21:41 , doug moen <doug at moens.org <mailto:doug at moens.org>> wrote:
>> 
>> Well, first you triangulate the polygon using the code posted to the recent "Simple Polygon Triangulation" thread, then you add up the area of each triangle?
>> 
>> On 11 April 2016 at 17:04, Experimentalist <experimentalist at aaawesome.co.uk <mailto:experimentalist at aaawesome.co.uk>> wrote:
>> Hi
>> 
>> Since a polygon is essentially made up of triangles I presume this is not
>> too hard. Anyone got a solution? I don't want to waste valuable time
>> reinventing the wheel.
>> 
>> Thanks
>> Ex.
>> 
>> 
>> 
>> --
>> View this message in context: http://forum.openscad.org/Easy-way-to-get-the-area-area-of-a-polygon-tp17045.html <http://forum.openscad.org/Easy-way-to-get-the-area-area-of-a-polygon-tp17045.html>
>> Sent from the OpenSCAD mailing list archive at Nabble.com <http://nabble.com/>.
>> 
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org <http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org>
>> 
>> 
>> 
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org <http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org>
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org <http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org>
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160411/c0a1f4b5/attachment.html>

From rcmpersiano at gmail.com  Tue Apr 12 01:11:57 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Mon, 11 Apr 2016 22:11:57 -0700 (MST)
Subject: [OpenSCAD] Easy way to get the area area of a polygon?
In-Reply-To: <6CEC3379-ACB9-4F74-B024-6233FA3C721A@gmail.com>
References: <1460408661624-17045.post@n5.nabble.com>
	<CAGV6i+Oi2hipFUXBp9GqK0M8GT0UANS7z5WWjsz=Fk5mmH-RfQ@mail.gmail.com>
	<3AF08362-ACF8-4119-81F6-7CC1330A3FDB@gmail.com>
	<CA+i9EaDLAi-n9J5K1dbdBdXS8xBCuCdgRyy1FZAqNppxak8Ltw@mail.gmail.com>
	<6CEC3379-ACB9-4F74-B024-6233FA3C721A@gmail.com>
Message-ID: <1460437917335-17058.post@n5.nabble.com>

It should be noted that all this is true for simple polygons.

> function area(p) = abs( sum_list( [ for(i=[0:len(p)-1]) cross2D( p[i],
> p[(i+1)%len(p)] ) ] ) )/2;
>   
> function sum_list(v, i=0, sum=0) = i==len(v) ? sum : sum_list(v, i+1,
> sum+v[i] );
> 
> function cross2D(p, q) = p[0]*q[1] - p[1]*q[0]; 
> 
> 
> p = 10*[ [1,0], [2,0], [2,1], [1,1] ];
> q = 10*[ [1,20], [2,21], [2,20], [1,21] ];
> polygon(p);
> polygon(q);
> echo(area_p=area(p));
> echo(area_q=area(q));





--
View this message in context: http://forum.openscad.org/Easy-way-to-get-the-area-of-a-polygon-tp17045p17058.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Tue Apr 12 01:53:03 2016
From: marius at kintel.net (Marius Kintel)
Date: Tue, 12 Apr 2016 01:53:03 -0400
Subject: [OpenSCAD] Easy way to get the area area of a polygon?
In-Reply-To: <1460408661624-17045.post@n5.nabble.com>
References: <1460408661624-17045.post@n5.nabble.com>
Message-ID: <125ED6E0-72E3-407F-89FD-5725D76DEFBA@kintel.net>

There?s also the example that comes with OpenSCAD: https://github.com/openscad/openscad/blob/master/examples/Functions/polygon_areas.scad

 -Marius



From R.E.Wolff at BitWizard.nl  Tue Apr 12 02:47:37 2016
From: R.E.Wolff at BitWizard.nl (Rogier Wolff)
Date: Tue, 12 Apr 2016 08:47:37 +0200
Subject: [OpenSCAD] Tail recursion
In-Reply-To: <CAGV6i+NVdDaKAg6jChKPzhEusC5DyoRc9KWqWkELBd8xR6Qcgg@mail.gmail.com>
References: <1460396951444-17040.post@n5.nabble.com>
	<CAGV6i+NNDAySSZ+OnbC2e6DZ8CJe_W80ikiya8c1Cd2WUW69zQ@mail.gmail.com>
	<1460427209580-17052.post@n5.nabble.com>
	<CAGV6i+NVdDaKAg6jChKPzhEusC5DyoRc9KWqWkELBd8xR6Qcgg@mail.gmail.com>
Message-ID: <20160412064736.GB8819@BitWizard.nl>

On Mon, Apr 11, 2016 at 10:34:28PM -0400, doug moen wrote:
> The innermost call to qs is not tail recursive, so the stack will grow
> while evaluating nested calls to qs. Quicksort is inherently
> non-tail-recursive in any language.

Tail recursion does not always have to happen in the tail. 

It depends a bit on your definition of "tail recursion". But Tail
recursion can be said to happen when a function call is followed
immediately by a return-from-this-function. 

This can happen in the middle of a function. 

In the case of quicksort, there are two recursive calls to
quicksort. The first needs to allocate a stack frame, but the second
one can be optimized to a tail-recursion (i.e. jump (not call) to the
beginning of the function.)

In the implementation below, a concat operation needs to be done after
return from the second quicksort. That prevents tail-recursion. This
happens because the sort is not happening in-place.In a language where
it would happen in-place, like C quicksort can become tail-recursive.

	Roger. 


> 
> On 11 April 2016 at 22:13, Ronaldo <rcmpersiano at gmail.com> wrote:
> 
> > doug.moen wrote
> > > Ronaldo: test_all_2 does not match the pattern, because the body of the
> > > function is...
> >
> > I understand that now. But I have another question. The code bellow is an
> > attempt to write a tail recursion version of quicksort. It seems to follow
> > the pattern you mentioned:
> >
> > > function qs(arr, arr_out=[]) =
> > >     !(len(arr)>0) ?
> > >         arr_out :
> > >         qs( arr     = high_part(arr),
> > >             arr_out = concat(qs( low_part(arr), arr_out ),
> > > middle_part(arr)) );
> > >
> > > function high_part  (arr) = [ for (y = arr) if (y >  pivot(arr)) y ];
> > > function middle_part(arr) = [ for (y = arr) if (y == pivot(arr)) y ];
> > > function low_part   (arr) = [ for (y = arr) if (y <  pivot(arr)) y ];
> > > function pivot      (arr) = arr[floor(len(arr)/2)];
> >
> > However, I have two recursive calls in the last line of qs(). Is it really
> > a
> > tail recursion? How evaluator deal with it?
> >
> >
> >
> > --
> > View this message in context:
> > http://forum.openscad.org/Tail-recursion-tp17040p17052.html
> > Sent from the OpenSCAD mailing list archive at Nabble.com.
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> >
> >
> >

> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


-- 
** R.E.Wolff at BitWizard.nl ** http://www.BitWizard.nl/ ** +31-15-2600998 **
**    Delftechpark 26 2628 XH  Delft, The Netherlands. KVK: 27239233    **
*-- BitWizard writes Linux device drivers for any device you may have! --*
The plan was simple, like my brother-in-law Phil. But unlike
Phil, this plan just might work.


From rcmpersiano at gmail.com  Tue Apr 12 02:54:22 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Mon, 11 Apr 2016 23:54:22 -0700 (MST)
Subject: [OpenSCAD] Tail recursion
In-Reply-To: <CAGV6i+NVdDaKAg6jChKPzhEusC5DyoRc9KWqWkELBd8xR6Qcgg@mail.gmail.com>
References: <1460396951444-17040.post@n5.nabble.com>
	<CAGV6i+NNDAySSZ+OnbC2e6DZ8CJe_W80ikiya8c1Cd2WUW69zQ@mail.gmail.com>
	<1460427209580-17052.post@n5.nabble.com>
	<CAGV6i+NVdDaKAg6jChKPzhEusC5DyoRc9KWqWkELBd8xR6Qcgg@mail.gmail.com>
Message-ID: <1460444062800-17061.post@n5.nabble.com>

So, the code of qs() uses tail recursion for the higher part and regular
recursion for the lower one. This agrees with some quicksort schemes I found
where they use "while" iteration instead of one of the recursions. Usually
the method iterates over the smaller partition. In qs(), I replaced the
iteration by a tail recursion.

I don't see how to implement in OpenSCAD language the full scheme where the
iteration (or tail recursion) operates over the smaller partition. If a
let() was allowed in tail recursion... it might be possible.



--
View this message in context: http://forum.openscad.org/Tail-recursion-tp17040p17061.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From vector76 at gmail.com  Tue Apr 12 03:48:28 2016
From: vector76 at gmail.com (Jamie_K)
Date: Tue, 12 Apr 2016 00:48:28 -0700 (MST)
Subject: [OpenSCAD] New Algorithm for Spheres
In-Reply-To: <55B56BC6.5080601@gmail.com>
References: <bd8fd88eacdbfc5965659c0139cc6bbe@localhost>
	<CAGV6i+Od-Kyaj8ion+8s39Y3MUe-que2PRc4gN0+7zh+jFigCQ@mail.gmail.com>
	<3b5e7236b00799ff70c468fe037077bb@localhost>
	<CAGV6i+PgRa8fAoQhH3+B_tXGhrnYx7Obtd3bV9=AN0qCUdE2gA@mail.gmail.com>
	<55B56BC6.5080601@gmail.com>
Message-ID: <1460447308835-17062.post@n5.nabble.com>

Sorry for resurrecting an old post but I think it's relevant.  I've
constructed a geodesic equivalent to sphere() as a module in OpenSCAD.  The
algorithm is hardly original, recursively subdividing an icosahedron, but I
feel the implementation is relatively simple.  This code also respects $fn,
$fa, and $fs with the intent of being a drop-in replacement for those cases
when you want the geodesic sphere instead of the default.

Since subdivision always quadruples the number of facets and cuts edge
length in half, there is a fair bit of quantization when choosing the
subdivision level, but it's fairly straightforward: compute the log base 2
of the requested side length or angle compared to the icosahedron starting
point, and round up to the next integer so the subdivision will be at least
as fine as implied by $fn, or by the coarser of $fa, or $fs.

I've also put this on thinigverse here:
http://www.thingiverse.com/thing:1484333

I got started on this because Google didn't seem to find any easy-to-use
geodesics in OpenSCAD, and because it's fun!

-Jamie

<http://forum.openscad.org/file/n17062/geodesic_sphere.png> 





--
View this message in context: http://forum.openscad.org/New-Algorithm-for-Spheres-tp13306p17062.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From farnworthpatrick at gmail.com  Tue Apr 12 05:36:53 2016
From: farnworthpatrick at gmail.com (Entropic)
Date: Tue, 12 Apr 2016 02:36:53 -0700 (MST)
Subject: [OpenSCAD] Can't Render Code
Message-ID: <1460453813691-17063.post@n5.nabble.com>

casingWithParts.scad
<http://forum.openscad.org/file/n17063/casingWithParts.scad>  

I'm trying to render the piece of code that I have attached in order to
export it as an STL file, however when the bar at the bottom of the screen
reaches 993/1000 windows declares that openSCAD isn't responding. This code
does load when I preview it with F5, so why isn't it work. Can anyone help
solve this issue, or at least send me an STL version of this as I need it
for a school project. 

Thanks in advance,

Patrick



--
View this message in context: http://forum.openscad.org/Can-t-Render-Code-tp17063.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From fred_dot_u at yahoo.com  Tue Apr 12 05:44:01 2016
From: fred_dot_u at yahoo.com (fred_dot_u)
Date: Tue, 12 Apr 2016 02:44:01 -0700 (MST)
Subject: [OpenSCAD] Can't Render Code
In-Reply-To: <1460453813691-17063.post@n5.nabble.com>
References: <1460453813691-17063.post@n5.nabble.com>
Message-ID: <1460454241208-17064.post@n5.nabble.com>

With the link to the code you provided, I opened and rendered the model with
zero problems and quite quickly. The code uses external files, not provided,
so it's an incomplete resource at present. Consider to zip all the files
together for others and myself to peruse.



--
View this message in context: http://forum.openscad.org/Can-t-Render-Code-tp17063p17064.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From farnworthpatrick at gmail.com  Tue Apr 12 06:37:36 2016
From: farnworthpatrick at gmail.com (Entropic)
Date: Tue, 12 Apr 2016 03:37:36 -0700 (MST)
Subject: [OpenSCAD] Can't Render Code
In-Reply-To: <1460454241208-17064.post@n5.nabble.com>
References: <1460453813691-17063.post@n5.nabble.com>
	<1460454241208-17064.post@n5.nabble.com>
Message-ID: <1460457456576-17065.post@n5.nabble.com>

Of course, sorry I hadn't thought of that.



--
View this message in context: http://forum.openscad.org/Can-t-Render-Code-tp17063p17065.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From farnworthpatrick at gmail.com  Tue Apr 12 06:38:46 2016
From: farnworthpatrick at gmail.com (Entropic)
Date: Tue, 12 Apr 2016 03:38:46 -0700 (MST)
Subject: [OpenSCAD] Can't Render Code
In-Reply-To: <1460457456576-17065.post@n5.nabble.com>
References: <1460453813691-17063.post@n5.nabble.com>
	<1460454241208-17064.post@n5.nabble.com>
	<1460457456576-17065.post@n5.nabble.com>
Message-ID: <1460457526214-17066.post@n5.nabble.com>

Casing.zip <http://forum.openscad.org/file/n17066/Casing.zip>  
Here is a zip file.



--
View this message in context: http://forum.openscad.org/Can-t-Render-Code-tp17063p17066.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Tue Apr 12 06:39:06 2016
From: nop.head at gmail.com (nop head)
Date: Tue, 12 Apr 2016 11:39:06 +0100
Subject: [OpenSCAD] Quicksort
In-Reply-To: <1460426557812-17051.post@n5.nabble.com>
References: <1460405332300-17044.post@n5.nabble.com>
	<20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
Message-ID: <CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>

Interesting.

With 40000 random numbers I also get 4s with quicksort but qs takes 3
minutes 37 seconds for me.

I translated it into Python to try to see what the difference is, OpenScad
desperately needs echo() in functions!

import random
import time

def pivot(arr):
    return arr[int(len(arr)/2)]

def high_part(arr):
    p = pivot(arr)
    return [y for y in arr if y > p]

def middle_part(arr):
    p = pivot(arr)
    return [y for y in arr if y == p]

def low_part(arr):
    p = pivot(arr)
    return [y for y in arr if y < p]

def qs(arr, arr_out=[], n = 0):
    #print n, arr
    return arr_out if len(arr) == 0 else qs(high_part(arr),
qs(low_part(arr), arr_out, 2) + middle_part(arr), 1)

def quicksort(arr, n = 0):
    #print n, arr
    if  len(arr) == 0: return []
    pivot   = arr[int(len(arr)/2)]
    lesser  = [y for y in arr if y  < pivot]
    equal   = [y for y in arr if y == pivot]
    greater = [y for y in arr if y  > pivot]
    return quicksort(lesser, 2) + equal + quicksort(greater, 1)

list = [random.random() for x in xrange(40000)]

t0 = time.time()
qs(list)
t1 = time.time()
quicksort(list)
t2 = time.time()

print "qs:", round(t1 - t0, 3), "quicksort:", round(t2 - t1, 3)

There is also a big difference in timings: qs: 5.632 quicksort: 0.256

I hoisted the pivot calculations out of the loops and I did the same in the
openscad version with let but it made no difference.

If I add the commented out print statements and use a small array of
integers it prints exactly the same calls and intermediate results, so I
can't explain the big time difference. Perhaps there are more list copies
due to passing arr_out forward.


On 12 April 2016 at 03:02, Ronaldo <rcmpersiano at gmail.com> wrote:

> Bingo! Why I didn't see that? Well, I think I hadn't fully grasped
> quicksort
> algorithm. :(
>
> Meanwhile, I got a version of quicksort which seems to have the pattern of
> tail recursion:
>
> > function qs(arr, arr_out=[]) =
> >     !(len(arr)>0) ?
> >         arr_out :
> >         qs( arr     = high_part(arr),
> >             arr_out = concat(qs( low_part(arr), arr_out ),
> > middle_part(arr)) );
> >
> > function high_part  (arr) = [ for (y = arr) if (y >  pivot(arr)) y ];
> > function middle_part(arr) = [ for (y = arr) if (y == pivot(arr)) y ];
> > function low_part   (arr) = [ for (y = arr) if (y <  pivot(arr)) y ];
> > function pivot      (arr) = arr[floor(len(arr)/2)];
>
> I were able to sort a worst case array of length 5000 in 48sec with qs().
> The previous quicksort() function fail with stack overflow for lengths
> lesser than 4000. However, it is much slower: for a random array with 40000
> values, qs() required 60 sec while quicksort() spent just 4sec.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Quicksort-tp17044p17051.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160412/17232b4d/attachment.html>

From nop.head at gmail.com  Tue Apr 12 06:55:21 2016
From: nop.head at gmail.com (nop head)
Date: Tue, 12 Apr 2016 11:55:21 +0100
Subject: [OpenSCAD] Quicksort
In-Reply-To: <CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
References: <1460405332300-17044.post@n5.nabble.com>
	<20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
Message-ID: <CAEEmnrN2nWb1BNvh+5QJwYkVyO9AD-8kSUQKOwaA=0E=AE-n2g@mail.gmail.com>

Since middle_part is generally one number it seems that arr_out just
increases by one entry at a time, which is not very efficient for long
lists. I think quicksort wins because it is joining up bigger chunks.

On 12 April 2016 at 11:39, nop head <nop.head at gmail.com> wrote:

> Interesting.
>
> With 40000 random numbers I also get 4s with quicksort but qs takes 3
> minutes 37 seconds for me.
>
> I translated it into Python to try to see what the difference is, OpenScad
> desperately needs echo() in functions!
>
> import random
> import time
>
> def pivot(arr):
>     return arr[int(len(arr)/2)]
>
> def high_part(arr):
>     p = pivot(arr)
>     return [y for y in arr if y > p]
>
> def middle_part(arr):
>     p = pivot(arr)
>     return [y for y in arr if y == p]
>
> def low_part(arr):
>     p = pivot(arr)
>     return [y for y in arr if y < p]
>
> def qs(arr, arr_out=[], n = 0):
>     #print n, arr
>     return arr_out if len(arr) == 0 else qs(high_part(arr),
> qs(low_part(arr), arr_out, 2) + middle_part(arr), 1)
>
> def quicksort(arr, n = 0):
>     #print n, arr
>     if  len(arr) == 0: return []
>     pivot   = arr[int(len(arr)/2)]
>     lesser  = [y for y in arr if y  < pivot]
>     equal   = [y for y in arr if y == pivot]
>     greater = [y for y in arr if y  > pivot]
>     return quicksort(lesser, 2) + equal + quicksort(greater, 1)
>
> list = [random.random() for x in xrange(40000)]
>
> t0 = time.time()
> qs(list)
> t1 = time.time()
> quicksort(list)
> t2 = time.time()
>
> print "qs:", round(t1 - t0, 3), "quicksort:", round(t2 - t1, 3)
>
> There is also a big difference in timings: qs: 5.632 quicksort: 0.256
>
> I hoisted the pivot calculations out of the loops and I did the same in
> the openscad version with let but it made no difference.
>
> If I add the commented out print statements and use a small array of
> integers it prints exactly the same calls and intermediate results, so I
> can't explain the big time difference. Perhaps there are more list copies
> due to passing arr_out forward.
>
>
> On 12 April 2016 at 03:02, Ronaldo <rcmpersiano at gmail.com> wrote:
>
>> Bingo! Why I didn't see that? Well, I think I hadn't fully grasped
>> quicksort
>> algorithm. :(
>>
>> Meanwhile, I got a version of quicksort which seems to have the pattern of
>> tail recursion:
>>
>> > function qs(arr, arr_out=[]) =
>> >     !(len(arr)>0) ?
>> >         arr_out :
>> >         qs( arr     = high_part(arr),
>> >             arr_out = concat(qs( low_part(arr), arr_out ),
>> > middle_part(arr)) );
>> >
>> > function high_part  (arr) = [ for (y = arr) if (y >  pivot(arr)) y ];
>> > function middle_part(arr) = [ for (y = arr) if (y == pivot(arr)) y ];
>> > function low_part   (arr) = [ for (y = arr) if (y <  pivot(arr)) y ];
>> > function pivot      (arr) = arr[floor(len(arr)/2)];
>>
>> I were able to sort a worst case array of length 5000 in 48sec with qs().
>> The previous quicksort() function fail with stack overflow for lengths
>> lesser than 4000. However, it is much slower: for a random array with
>> 40000
>> values, qs() required 60 sec while quicksort() spent just 4sec.
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/Quicksort-tp17044p17051.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160412/4a4b57ae/attachment.html>

From doug at moens.org  Tue Apr 12 08:36:15 2016
From: doug at moens.org (doug moen)
Date: Tue, 12 Apr 2016 08:36:15 -0400
Subject: [OpenSCAD] Quicksort
In-Reply-To: <CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
References: <1460405332300-17044.post@n5.nabble.com>
	<20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
Message-ID: <CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>

In nophead's benchmark,
Python is 15.6 times faster for quicksort,
and 38.5 times faster for qs.

I attribute this to the fact that Python compiles to bytecode. We should be
able to get a 10x speedup pretty easily with a bytecode compiler, even
before doing much performance tuning. Note that Python is slow compared to
Javascript, which has insane amounts of performance optimization.

On 12 April 2016 at 06:39, nop head <nop.head at gmail.com> wrote:

> Interesting.
>
> With 40000 random numbers I also get 4s with quicksort but qs takes 3
> minutes 37 seconds for me.
>
> I translated it into Python to try to see what the difference is, OpenScad
> desperately needs echo() in functions!
>
> import random
> import time
>
> def pivot(arr):
>     return arr[int(len(arr)/2)]
>
> def high_part(arr):
>     p = pivot(arr)
>     return [y for y in arr if y > p]
>
> def middle_part(arr):
>     p = pivot(arr)
>     return [y for y in arr if y == p]
>
> def low_part(arr):
>     p = pivot(arr)
>     return [y for y in arr if y < p]
>
> def qs(arr, arr_out=[], n = 0):
>     #print n, arr
>     return arr_out if len(arr) == 0 else qs(high_part(arr),
> qs(low_part(arr), arr_out, 2) + middle_part(arr), 1)
>
> def quicksort(arr, n = 0):
>     #print n, arr
>     if  len(arr) == 0: return []
>     pivot   = arr[int(len(arr)/2)]
>     lesser  = [y for y in arr if y  < pivot]
>     equal   = [y for y in arr if y == pivot]
>     greater = [y for y in arr if y  > pivot]
>     return quicksort(lesser, 2) + equal + quicksort(greater, 1)
>
> list = [random.random() for x in xrange(40000)]
>
> t0 = time.time()
> qs(list)
> t1 = time.time()
> quicksort(list)
> t2 = time.time()
>
> print "qs:", round(t1 - t0, 3), "quicksort:", round(t2 - t1, 3)
>
> There is also a big difference in timings: qs: 5.632 quicksort: 0.256
>
> I hoisted the pivot calculations out of the loops and I did the same in
> the openscad version with let but it made no difference.
>
> If I add the commented out print statements and use a small array of
> integers it prints exactly the same calls and intermediate results, so I
> can't explain the big time difference. Perhaps there are more list copies
> due to passing arr_out forward.
>
>
> On 12 April 2016 at 03:02, Ronaldo <rcmpersiano at gmail.com> wrote:
>
>> Bingo! Why I didn't see that? Well, I think I hadn't fully grasped
>> quicksort
>> algorithm. :(
>>
>> Meanwhile, I got a version of quicksort which seems to have the pattern of
>> tail recursion:
>>
>> > function qs(arr, arr_out=[]) =
>> >     !(len(arr)>0) ?
>> >         arr_out :
>> >         qs( arr     = high_part(arr),
>> >             arr_out = concat(qs( low_part(arr), arr_out ),
>> > middle_part(arr)) );
>> >
>> > function high_part  (arr) = [ for (y = arr) if (y >  pivot(arr)) y ];
>> > function middle_part(arr) = [ for (y = arr) if (y == pivot(arr)) y ];
>> > function low_part   (arr) = [ for (y = arr) if (y <  pivot(arr)) y ];
>> > function pivot      (arr) = arr[floor(len(arr)/2)];
>>
>> I were able to sort a worst case array of length 5000 in 48sec with qs().
>> The previous quicksort() function fail with stack overflow for lengths
>> lesser than 4000. However, it is much slower: for a random array with
>> 40000
>> values, qs() required 60 sec while quicksort() spent just 4sec.
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/Quicksort-tp17044p17051.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160412/c79c5790/attachment.html>

From fred_dot_u at yahoo.com  Tue Apr 12 08:46:03 2016
From: fred_dot_u at yahoo.com (fred_dot_u)
Date: Tue, 12 Apr 2016 05:46:03 -0700 (MST)
Subject: [OpenSCAD] Can't Render Code
In-Reply-To: <1460457526214-17066.post@n5.nabble.com>
References: <1460453813691-17063.post@n5.nabble.com>
	<1460454241208-17064.post@n5.nabble.com>
	<1460457456576-17065.post@n5.nabble.com>
	<1460457526214-17066.post@n5.nabble.com>
Message-ID: <1460465163674-17070.post@n5.nabble.com>

My computer took about 30 seconds to render the object and provided a
non-manifold warning. I opened the STL in Meshmixer and the "inspector"
found no errors. Per your request, I've attached the STL file.


casingWithParts.stl
<http://forum.openscad.org/file/n17070/casingWithParts.stl>  



--
View this message in context: http://forum.openscad.org/Can-t-Render-Code-tp17063p17070.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Tue Apr 12 08:59:49 2016
From: arnholm at arnholm.org (arnholm at arnholm.org)
Date: Tue, 12 Apr 2016 14:59:49 +0200
Subject: [OpenSCAD] Can't Render Code
In-Reply-To: <1460465163674-17070.post@n5.nabble.com>
References: <1460453813691-17063.post@n5.nabble.com>
	<1460454241208-17064.post@n5.nabble.com>
	<1460457456576-17065.post@n5.nabble.com>
	<1460457526214-17066.post@n5.nabble.com>
	<1460465163674-17070.post@n5.nabble.com>
Message-ID: <e53e32e996fc6d39711d08d449e2d894@arnholm.org>

On 2016-04-12 14:46, fred_dot_u wrote:
> My computer took about 30 seconds to render the object and provided a
> non-manifold warning. I opened the STL in Meshmixer and the "inspector"
> found no errors. Per your request, I've attached the STL file.
> 
> 
> casingWithParts.stl
> <http://forum.openscad.org/file/n17070/casingWithParts.stl>

I just tried to export it to AMF using 2015.03-1, but this fails: 
"WARNING: Export failed, the object isn't a valid 2-manifold. AMF export 
finished."

I got a zero size AMF file. So the model seems to have issues before 
export.

Carsten Arnholm


From nop.head at gmail.com  Tue Apr 12 09:06:29 2016
From: nop.head at gmail.com (nop head)
Date: Tue, 12 Apr 2016 14:06:29 +0100
Subject: [OpenSCAD] Quicksort
In-Reply-To: <CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>
References: <1460405332300-17044.post@n5.nabble.com>
	<20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
	<CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>
Message-ID: <CAEEmnrOu0jF4-BzytOqes7S3dXHXiDmjNuOj+pvuUSqiYube8w@mail.gmail.com>

Yes but is it worth it as most of time the geometry generation is many
orders of magnitude slower? Why would one want to qsort 40000 numbers in an
OpenScad script anyway?

On 12 April 2016 at 13:36, doug moen <doug at moens.org> wrote:

> In nophead's benchmark,
> Python is 15.6 times faster for quicksort,
> and 38.5 times faster for qs.
>
> I attribute this to the fact that Python compiles to bytecode. We should
> be able to get a 10x speedup pretty easily with a bytecode compiler, even
> before doing much performance tuning. Note that Python is slow compared to
> Javascript, which has insane amounts of performance optimization.
>
> On 12 April 2016 at 06:39, nop head <nop.head at gmail.com> wrote:
>
>> Interesting.
>>
>> With 40000 random numbers I also get 4s with quicksort but qs takes 3
>> minutes 37 seconds for me.
>>
>> I translated it into Python to try to see what the difference is,
>> OpenScad desperately needs echo() in functions!
>>
>> import random
>> import time
>>
>> def pivot(arr):
>>     return arr[int(len(arr)/2)]
>>
>> def high_part(arr):
>>     p = pivot(arr)
>>     return [y for y in arr if y > p]
>>
>> def middle_part(arr):
>>     p = pivot(arr)
>>     return [y for y in arr if y == p]
>>
>> def low_part(arr):
>>     p = pivot(arr)
>>     return [y for y in arr if y < p]
>>
>> def qs(arr, arr_out=[], n = 0):
>>     #print n, arr
>>     return arr_out if len(arr) == 0 else qs(high_part(arr),
>> qs(low_part(arr), arr_out, 2) + middle_part(arr), 1)
>>
>> def quicksort(arr, n = 0):
>>     #print n, arr
>>     if  len(arr) == 0: return []
>>     pivot   = arr[int(len(arr)/2)]
>>     lesser  = [y for y in arr if y  < pivot]
>>     equal   = [y for y in arr if y == pivot]
>>     greater = [y for y in arr if y  > pivot]
>>     return quicksort(lesser, 2) + equal + quicksort(greater, 1)
>>
>> list = [random.random() for x in xrange(40000)]
>>
>> t0 = time.time()
>> qs(list)
>> t1 = time.time()
>> quicksort(list)
>> t2 = time.time()
>>
>> print "qs:", round(t1 - t0, 3), "quicksort:", round(t2 - t1, 3)
>>
>> There is also a big difference in timings: qs: 5.632 quicksort: 0.256
>>
>> I hoisted the pivot calculations out of the loops and I did the same in
>> the openscad version with let but it made no difference.
>>
>> If I add the commented out print statements and use a small array of
>> integers it prints exactly the same calls and intermediate results, so I
>> can't explain the big time difference. Perhaps there are more list copies
>> due to passing arr_out forward.
>>
>>
>> On 12 April 2016 at 03:02, Ronaldo <rcmpersiano at gmail.com> wrote:
>>
>>> Bingo! Why I didn't see that? Well, I think I hadn't fully grasped
>>> quicksort
>>> algorithm. :(
>>>
>>> Meanwhile, I got a version of quicksort which seems to have the pattern
>>> of
>>> tail recursion:
>>>
>>> > function qs(arr, arr_out=[]) =
>>> >     !(len(arr)>0) ?
>>> >         arr_out :
>>> >         qs( arr     = high_part(arr),
>>> >             arr_out = concat(qs( low_part(arr), arr_out ),
>>> > middle_part(arr)) );
>>> >
>>> > function high_part  (arr) = [ for (y = arr) if (y >  pivot(arr)) y ];
>>> > function middle_part(arr) = [ for (y = arr) if (y == pivot(arr)) y ];
>>> > function low_part   (arr) = [ for (y = arr) if (y <  pivot(arr)) y ];
>>> > function pivot      (arr) = arr[floor(len(arr)/2)];
>>>
>>> I were able to sort a worst case array of length 5000 in 48sec with qs().
>>> The previous quicksort() function fail with stack overflow for lengths
>>> lesser than 4000. However, it is much slower: for a random array with
>>> 40000
>>> values, qs() required 60 sec while quicksort() spent just 4sec.
>>>
>>>
>>>
>>> --
>>> View this message in context:
>>> http://forum.openscad.org/Quicksort-tp17044p17051.html
>>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160412/198898f5/attachment.html>

From doug at moens.org  Tue Apr 12 09:20:55 2016
From: doug at moens.org (doug moen)
Date: Tue, 12 Apr 2016 09:20:55 -0400
Subject: [OpenSCAD] Quicksort
In-Reply-To: <CAEEmnrOu0jF4-BzytOqes7S3dXHXiDmjNuOj+pvuUSqiYube8w@mail.gmail.com>
References: <1460405332300-17044.post@n5.nabble.com>
	<20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
	<CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>
	<CAEEmnrOu0jF4-BzytOqes7S3dXHXiDmjNuOj+pvuUSqiYube8w@mail.gmail.com>
Message-ID: <CAGV6i+P1VPD_36GKQ7P6LxruwOy86vifheLY7VTyJdsKr2qRtg@mail.gmail.com>

I dunno, why would anyone want to triangulate a polygon? I've been thinking
about performance issues while reading that thread. I agree that
triangulating a polygon is not the sort of task that OpenSCAD was designed
for.

I think that some of this is driven by the fact that OpenSCAD provides a
limited set of primitive shapes, and if you want to go beyond that, you
need to use polyhedron(). And if you really push the limits of what can be
expressed with polyhedron(), then you can get into requiring these complex
calculations.

I'd like to provide an easier way than polyhedron() for constructing
complex mathematically defined shapes. I think Functional Representation
would be a great thing to support. Of course, that opens up an even bigger
can of worms than simply speeding up the interpreter using a byte code
compiler.

On 12 April 2016 at 09:06, nop head <nop.head at gmail.com> wrote:

> Yes but is it worth it as most of time the geometry generation is many
> orders of magnitude slower? Why would one want to qsort 40000 numbers in an
> OpenScad script anyway?
>
> On 12 April 2016 at 13:36, doug moen <doug at moens.org> wrote:
>
>> In nophead's benchmark,
>> Python is 15.6 times faster for quicksort,
>> and 38.5 times faster for qs.
>>
>> I attribute this to the fact that Python compiles to bytecode. We should
>> be able to get a 10x speedup pretty easily with a bytecode compiler, even
>> before doing much performance tuning. Note that Python is slow compared to
>> Javascript, which has insane amounts of performance optimization.
>>
>> On 12 April 2016 at 06:39, nop head <nop.head at gmail.com> wrote:
>>
>>> Interesting.
>>>
>>> With 40000 random numbers I also get 4s with quicksort but qs takes 3
>>> minutes 37 seconds for me.
>>>
>>> I translated it into Python to try to see what the difference is,
>>> OpenScad desperately needs echo() in functions!
>>>
>>> import random
>>> import time
>>>
>>> def pivot(arr):
>>>     return arr[int(len(arr)/2)]
>>>
>>> def high_part(arr):
>>>     p = pivot(arr)
>>>     return [y for y in arr if y > p]
>>>
>>> def middle_part(arr):
>>>     p = pivot(arr)
>>>     return [y for y in arr if y == p]
>>>
>>> def low_part(arr):
>>>     p = pivot(arr)
>>>     return [y for y in arr if y < p]
>>>
>>> def qs(arr, arr_out=[], n = 0):
>>>     #print n, arr
>>>     return arr_out if len(arr) == 0 else qs(high_part(arr),
>>> qs(low_part(arr), arr_out, 2) + middle_part(arr), 1)
>>>
>>> def quicksort(arr, n = 0):
>>>     #print n, arr
>>>     if  len(arr) == 0: return []
>>>     pivot   = arr[int(len(arr)/2)]
>>>     lesser  = [y for y in arr if y  < pivot]
>>>     equal   = [y for y in arr if y == pivot]
>>>     greater = [y for y in arr if y  > pivot]
>>>     return quicksort(lesser, 2) + equal + quicksort(greater, 1)
>>>
>>> list = [random.random() for x in xrange(40000)]
>>>
>>> t0 = time.time()
>>> qs(list)
>>> t1 = time.time()
>>> quicksort(list)
>>> t2 = time.time()
>>>
>>> print "qs:", round(t1 - t0, 3), "quicksort:", round(t2 - t1, 3)
>>>
>>> There is also a big difference in timings: qs: 5.632 quicksort: 0.256
>>>
>>> I hoisted the pivot calculations out of the loops and I did the same in
>>> the openscad version with let but it made no difference.
>>>
>>> If I add the commented out print statements and use a small array of
>>> integers it prints exactly the same calls and intermediate results, so I
>>> can't explain the big time difference. Perhaps there are more list copies
>>> due to passing arr_out forward.
>>>
>>>
>>> On 12 April 2016 at 03:02, Ronaldo <rcmpersiano at gmail.com> wrote:
>>>
>>>> Bingo! Why I didn't see that? Well, I think I hadn't fully grasped
>>>> quicksort
>>>> algorithm. :(
>>>>
>>>> Meanwhile, I got a version of quicksort which seems to have the pattern
>>>> of
>>>> tail recursion:
>>>>
>>>> > function qs(arr, arr_out=[]) =
>>>> >     !(len(arr)>0) ?
>>>> >         arr_out :
>>>> >         qs( arr     = high_part(arr),
>>>> >             arr_out = concat(qs( low_part(arr), arr_out ),
>>>> > middle_part(arr)) );
>>>> >
>>>> > function high_part  (arr) = [ for (y = arr) if (y >  pivot(arr)) y ];
>>>> > function middle_part(arr) = [ for (y = arr) if (y == pivot(arr)) y ];
>>>> > function low_part   (arr) = [ for (y = arr) if (y <  pivot(arr)) y ];
>>>> > function pivot      (arr) = arr[floor(len(arr)/2)];
>>>>
>>>> I were able to sort a worst case array of length 5000 in 48sec with
>>>> qs().
>>>> The previous quicksort() function fail with stack overflow for lengths
>>>> lesser than 4000. However, it is much slower: for a random array with
>>>> 40000
>>>> values, qs() required 60 sec while quicksort() spent just 4sec.
>>>>
>>>>
>>>>
>>>> --
>>>> View this message in context:
>>>> http://forum.openscad.org/Quicksort-tp17044p17051.html
>>>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160412/437abb9b/attachment.html>

From fred_dot_u at yahoo.com  Tue Apr 12 09:38:29 2016
From: fred_dot_u at yahoo.com (fred_dot_u)
Date: Tue, 12 Apr 2016 06:38:29 -0700 (MST)
Subject: [OpenSCAD] Can't Render Code
In-Reply-To: <1460465163674-17070.post@n5.nabble.com>
References: <1460453813691-17063.post@n5.nabble.com>
	<1460454241208-17064.post@n5.nabble.com>
	<1460457456576-17065.post@n5.nabble.com>
	<1460457526214-17066.post@n5.nabble.com>
	<1460465163674-17070.post@n5.nabble.com>
Message-ID: <1460468309801-17074.post@n5.nabble.com>

I've loaded the STL file I generated into Meshmixer and it found no failures,
so I loaded it into Blender and used 3d printing option to repair
non-manifold objects. The brief report indicated that 8 edges needed
correction. That's the attached file. One of these should work for you.

casingWithParts_edgefix.stl
<http://forum.openscad.org/file/n17074/casingWithParts_edgefix.stl>  



--
View this message in context: http://forum.openscad.org/Can-t-Render-Code-tp17063p17074.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From farnworthpatrick at gmail.com  Tue Apr 12 10:04:30 2016
From: farnworthpatrick at gmail.com (Entropic)
Date: Tue, 12 Apr 2016 07:04:30 -0700 (MST)
Subject: [OpenSCAD] Can't Render Code
In-Reply-To: <1460468309801-17074.post@n5.nabble.com>
References: <1460453813691-17063.post@n5.nabble.com>
	<1460454241208-17064.post@n5.nabble.com>
	<1460457456576-17065.post@n5.nabble.com>
	<1460457526214-17066.post@n5.nabble.com>
	<1460465163674-17070.post@n5.nabble.com>
	<1460468309801-17074.post@n5.nabble.com>
Message-ID: <1460469870020-17075.post@n5.nabble.com>

Thank you so much for your help, I can finish the project now. I wonder why
my computer wouldn't do it. Thanks.



--
View this message in context: http://forum.openscad.org/Can-t-Render-Code-tp17063p17075.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Tue Apr 12 10:07:41 2016
From: nop.head at gmail.com (nop head)
Date: Tue, 12 Apr 2016 15:07:41 +0100
Subject: [OpenSCAD] Quicksort
In-Reply-To: <CAGV6i+P1VPD_36GKQ7P6LxruwOy86vifheLY7VTyJdsKr2qRtg@mail.gmail.com>
References: <1460405332300-17044.post@n5.nabble.com>
	<20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
	<CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>
	<CAEEmnrOu0jF4-BzytOqes7S3dXHXiDmjNuOj+pvuUSqiYube8w@mail.gmail.com>
	<CAGV6i+P1VPD_36GKQ7P6LxruwOy86vifheLY7VTyJdsKr2qRtg@mail.gmail.com>
Message-ID: <CAEEmnrNAnmQDCuvqoTO6ar_ch4CYhsN-dQMN_FGqg39hGGi5Nw@mail.gmail.com>

But polyhedron triangulates facets for you. Any why would you need 40000
vertices in a facet?


On 12 April 2016 at 14:20, doug moen <doug at moens.org> wrote:

> I dunno, why would anyone want to triangulate a polygon? I've been
> thinking about performance issues while reading that thread. I agree that
> triangulating a polygon is not the sort of task that OpenSCAD was designed
> for.
>
> I think that some of this is driven by the fact that OpenSCAD provides a
> limited set of primitive shapes, and if you want to go beyond that, you
> need to use polyhedron(). And if you really push the limits of what can be
> expressed with polyhedron(), then you can get into requiring these complex
> calculations.
>
> I'd like to provide an easier way than polyhedron() for constructing
> complex mathematically defined shapes. I think Functional Representation
> would be a great thing to support. Of course, that opens up an even bigger
> can of worms than simply speeding up the interpreter using a byte code
> compiler.
>
> On 12 April 2016 at 09:06, nop head <nop.head at gmail.com> wrote:
>
>> Yes but is it worth it as most of time the geometry generation is many
>> orders of magnitude slower? Why would one want to qsort 40000 numbers in an
>> OpenScad script anyway?
>>
>> On 12 April 2016 at 13:36, doug moen <doug at moens.org> wrote:
>>
>>> In nophead's benchmark,
>>> Python is 15.6 times faster for quicksort,
>>> and 38.5 times faster for qs.
>>>
>>> I attribute this to the fact that Python compiles to bytecode. We should
>>> be able to get a 10x speedup pretty easily with a bytecode compiler, even
>>> before doing much performance tuning. Note that Python is slow compared to
>>> Javascript, which has insane amounts of performance optimization.
>>>
>>> On 12 April 2016 at 06:39, nop head <nop.head at gmail.com> wrote:
>>>
>>>> Interesting.
>>>>
>>>> With 40000 random numbers I also get 4s with quicksort but qs takes 3
>>>> minutes 37 seconds for me.
>>>>
>>>> I translated it into Python to try to see what the difference is,
>>>> OpenScad desperately needs echo() in functions!
>>>>
>>>> import random
>>>> import time
>>>>
>>>> def pivot(arr):
>>>>     return arr[int(len(arr)/2)]
>>>>
>>>> def high_part(arr):
>>>>     p = pivot(arr)
>>>>     return [y for y in arr if y > p]
>>>>
>>>> def middle_part(arr):
>>>>     p = pivot(arr)
>>>>     return [y for y in arr if y == p]
>>>>
>>>> def low_part(arr):
>>>>     p = pivot(arr)
>>>>     return [y for y in arr if y < p]
>>>>
>>>> def qs(arr, arr_out=[], n = 0):
>>>>     #print n, arr
>>>>     return arr_out if len(arr) == 0 else qs(high_part(arr),
>>>> qs(low_part(arr), arr_out, 2) + middle_part(arr), 1)
>>>>
>>>> def quicksort(arr, n = 0):
>>>>     #print n, arr
>>>>     if  len(arr) == 0: return []
>>>>     pivot   = arr[int(len(arr)/2)]
>>>>     lesser  = [y for y in arr if y  < pivot]
>>>>     equal   = [y for y in arr if y == pivot]
>>>>     greater = [y for y in arr if y  > pivot]
>>>>     return quicksort(lesser, 2) + equal + quicksort(greater, 1)
>>>>
>>>> list = [random.random() for x in xrange(40000)]
>>>>
>>>> t0 = time.time()
>>>> qs(list)
>>>> t1 = time.time()
>>>> quicksort(list)
>>>> t2 = time.time()
>>>>
>>>> print "qs:", round(t1 - t0, 3), "quicksort:", round(t2 - t1, 3)
>>>>
>>>> There is also a big difference in timings: qs: 5.632 quicksort: 0.256
>>>>
>>>> I hoisted the pivot calculations out of the loops and I did the same in
>>>> the openscad version with let but it made no difference.
>>>>
>>>> If I add the commented out print statements and use a small array of
>>>> integers it prints exactly the same calls and intermediate results, so I
>>>> can't explain the big time difference. Perhaps there are more list copies
>>>> due to passing arr_out forward.
>>>>
>>>>
>>>> On 12 April 2016 at 03:02, Ronaldo <rcmpersiano at gmail.com> wrote:
>>>>
>>>>> Bingo! Why I didn't see that? Well, I think I hadn't fully grasped
>>>>> quicksort
>>>>> algorithm. :(
>>>>>
>>>>> Meanwhile, I got a version of quicksort which seems to have the
>>>>> pattern of
>>>>> tail recursion:
>>>>>
>>>>> > function qs(arr, arr_out=[]) =
>>>>> >     !(len(arr)>0) ?
>>>>> >         arr_out :
>>>>> >         qs( arr     = high_part(arr),
>>>>> >             arr_out = concat(qs( low_part(arr), arr_out ),
>>>>> > middle_part(arr)) );
>>>>> >
>>>>> > function high_part  (arr) = [ for (y = arr) if (y >  pivot(arr)) y ];
>>>>> > function middle_part(arr) = [ for (y = arr) if (y == pivot(arr)) y ];
>>>>> > function low_part   (arr) = [ for (y = arr) if (y <  pivot(arr)) y ];
>>>>> > function pivot      (arr) = arr[floor(len(arr)/2)];
>>>>>
>>>>> I were able to sort a worst case array of length 5000 in 48sec with
>>>>> qs().
>>>>> The previous quicksort() function fail with stack overflow for lengths
>>>>> lesser than 4000. However, it is much slower: for a random array with
>>>>> 40000
>>>>> values, qs() required 60 sec while quicksort() spent just 4sec.
>>>>>
>>>>>
>>>>>
>>>>> --
>>>>> View this message in context:
>>>>> http://forum.openscad.org/Quicksort-tp17044p17051.html
>>>>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>>>>
>>>>> _______________________________________________
>>>>> OpenSCAD mailing list
>>>>> Discuss at lists.openscad.org
>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160412/57af1d45/attachment.html>

From doug at moens.org  Tue Apr 12 10:09:58 2016
From: doug at moens.org (doug moen)
Date: Tue, 12 Apr 2016 10:09:58 -0400
Subject: [OpenSCAD] Easy way to get the area area of a polygon?
In-Reply-To: <3AF08362-ACF8-4119-81F6-7CC1330A3FDB@gmail.com>
References: <1460408661624-17045.post@n5.nabble.com>
	<CAGV6i+Oi2hipFUXBp9GqK0M8GT0UANS7z5WWjsz=Fk5mmH-RfQ@mail.gmail.com>
	<3AF08362-ACF8-4119-81F6-7CC1330A3FDB@gmail.com>
Message-ID: <CAGV6i+NCL2AqjUmL+3BssmE5OBDMQgS9vetnuVnA3iO6hkbGyg@mail.gmail.com>

Thanks, Kenneth. I translated your algorithm into this:

function area(vs) =
  let (n = len(vs))
  abs(0.5 * sum([for (i=[0:n-1]) cross(vs[i], vs[(i+1)%n])]));

function sum(v,i=0) =
  i < len(v) ? v[i] + sum(v,i+1) : 0;

I used abs() to convert the signed area into an absolute value, since the
polygon() module doesn't care about the winding order of the vertices.

This turns out to be the same as Marius's solution, except that it returns
an absolute value, and also, the division by 2 happens at the end, instead
of once for each vertex.

I ran some tests, and it mostly works as expected. Degenerate polygons work
(area==0).

Self-intersecting polygons do not work, which is inconsistent with the
polygon() primitive. So the area won't match what polygon() draws on the
screen in this case.

Here's that last test case:

//self intersecting quad
weird = [
  [0,0],
  [0,1],
  [1,0],
  [1,1],
];
echo(area(weird)); // 0
polygon(weird);

On 11 April 2016 at 23:01, Kenneth Sloan <kennethrsloan at gmail.com> wrote:

> It is absolutely NOT NECESSARY to triangulate in order to compute area.
> You can walk the perimeter and compute the area of the polygon.  Google
> ?Newman?s Scheme?, or directly apply either Green?s Theorem or Stokes?s
> Theorem, depending on your training.
>
> That was the short, enigmatic answer (Google is your friend).  The long
> answer is:
>
> a) pick a point in the plane - any point.  Call it O. [Hint: [0,0] works
> best]
> b) for each edge in the polygon, construct the triangle O,v[i], v[i+1 mod
> n]
>     where n is the number of vertices and the numbering begins with 0
>      and the edge goes from v[i] to v[i+1 mod n]
> c) compute the SIGNED area of this triangle and accumulate the sum of the
> SIGNED areas
> d) the total SIGNED area will give the area of the polygon and the SIGN
> will tell you
>    if the polygon is correctly oriented.
>
> A quick and dirty first implementation might stop here.  To make it faster:
>
> e) for extra credit, re-arrange the terms to eliminate O [that?s why I
> suggested that [0,0] works best].  You will arrive at a computation that
> looks something like:
>
>      AREA = 0.5 * SUM(v[i] CROSS v[i+1 mod n])
>
> where:
>   the representation of the point v[i] is interpreted as a the
> representation of a
>     vector from O to v[i] (no, points and vectors are not the same, but
> SOME computations
>     can pretend that they are)
>   vertices are numbered 0..n-1
>
> I have a beautiful proof-by-diagram of this, but it does not fit in ASCII
> format.
>
> If you want to do Volumes, substitute triangular faces of the polyhedron
> for the edges of the polygon.  Use the scalar triple product instead of
> cross product, and divide by 6 instead of 2.
>
> Proof left as an exercise for the reader.
>
> Green and Stokes showed that you can compute properties of the area by
> walking around the perimeter.   Their followers proved that one follows
> from the other, and vice versa.  Newman did the algebra and optimized the
> computation in the context of computer graphics.
>
> Newman?s scheme dates to AT LEAST 1965.  Green and Stokes were much
> earlier.
>
> --
> Kenneth Sloan
> KennethRSloan at gmail.com
> Vision is the art of seeing what is invisible to others.
>
>
>
>
> On Apr 11, 2016, at 21:41 , doug moen <doug at moens.org> wrote:
>
> Well, first you triangulate the polygon using the code posted to the
> recent "Simple Polygon Triangulation" thread, then you add up the area of
> each triangle?
>
> On 11 April 2016 at 17:04, Experimentalist <
> experimentalist at aaawesome.co.uk> wrote:
>
>> Hi
>>
>> Since a polygon is essentially made up of triangles I presume this is not
>> too hard. Anyone got a solution? I don't want to waste valuable time
>> reinventing the wheel.
>>
>> Thanks
>> Ex.
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/Easy-way-to-get-the-area-area-of-a-polygon-tp17045.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com
>> <http://nabble.com>.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160412/89ba8b7e/attachment.html>

From doug at moens.org  Tue Apr 12 10:38:09 2016
From: doug at moens.org (doug moen)
Date: Tue, 12 Apr 2016 10:38:09 -0400
Subject: [OpenSCAD] Quicksort
In-Reply-To: <CAEEmnrNAnmQDCuvqoTO6ar_ch4CYhsN-dQMN_FGqg39hGGi5Nw@mail.gmail.com>
References: <1460405332300-17044.post@n5.nabble.com>
	<20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
	<CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>
	<CAEEmnrOu0jF4-BzytOqes7S3dXHXiDmjNuOj+pvuUSqiYube8w@mail.gmail.com>
	<CAGV6i+P1VPD_36GKQ7P6LxruwOy86vifheLY7VTyJdsKr2qRtg@mail.gmail.com>
	<CAEEmnrNAnmQDCuvqoTO6ar_ch4CYhsN-dQMN_FGqg39hGGi5Nw@mail.gmail.com>
Message-ID: <CAGV6i+NrVtjmZ2R0aZBcF5fJtYP51BUrJePtNmKdxfd_F-hfkw@mail.gmail.com>

Only Ronaldo can explain why one would need quicksort and polygon
triangulation in OpenSCAD. He started both of those threads. Maybe he will
explain.

You might need 40,000 vertices in a polygon as an end cap for a tube,
either a really accurate circle, or some other shape. Fractal geometry is
another general reason for needing lots of vertices.

On 12 April 2016 at 10:07, nop head <nop.head at gmail.com> wrote:

> But polyhedron triangulates facets for you. Any why would you need 40000
> vertices in a facet?
>
>
> On 12 April 2016 at 14:20, doug moen <doug at moens.org> wrote:
>
>> I dunno, why would anyone want to triangulate a polygon? I've been
>> thinking about performance issues while reading that thread. I agree that
>> triangulating a polygon is not the sort of task that OpenSCAD was designed
>> for.
>>
>> I think that some of this is driven by the fact that OpenSCAD provides a
>> limited set of primitive shapes, and if you want to go beyond that, you
>> need to use polyhedron(). And if you really push the limits of what can be
>> expressed with polyhedron(), then you can get into requiring these complex
>> calculations.
>>
>> I'd like to provide an easier way than polyhedron() for constructing
>> complex mathematically defined shapes. I think Functional Representation
>> would be a great thing to support. Of course, that opens up an even bigger
>> can of worms than simply speeding up the interpreter using a byte code
>> compiler.
>>
>> On 12 April 2016 at 09:06, nop head <nop.head at gmail.com> wrote:
>>
>>> Yes but is it worth it as most of time the geometry generation is many
>>> orders of magnitude slower? Why would one want to qsort 40000 numbers in an
>>> OpenScad script anyway?
>>>
>>> On 12 April 2016 at 13:36, doug moen <doug at moens.org> wrote:
>>>
>>>> In nophead's benchmark,
>>>> Python is 15.6 times faster for quicksort,
>>>> and 38.5 times faster for qs.
>>>>
>>>> I attribute this to the fact that Python compiles to bytecode. We
>>>> should be able to get a 10x speedup pretty easily with a bytecode compiler,
>>>> even before doing much performance tuning. Note that Python is slow
>>>> compared to Javascript, which has insane amounts of performance
>>>> optimization.
>>>>
>>>> On 12 April 2016 at 06:39, nop head <nop.head at gmail.com> wrote:
>>>>
>>>>> Interesting.
>>>>>
>>>>> With 40000 random numbers I also get 4s with quicksort but qs takes 3
>>>>> minutes 37 seconds for me.
>>>>>
>>>>> I translated it into Python to try to see what the difference is,
>>>>> OpenScad desperately needs echo() in functions!
>>>>>
>>>>> import random
>>>>> import time
>>>>>
>>>>> def pivot(arr):
>>>>>     return arr[int(len(arr)/2)]
>>>>>
>>>>> def high_part(arr):
>>>>>     p = pivot(arr)
>>>>>     return [y for y in arr if y > p]
>>>>>
>>>>> def middle_part(arr):
>>>>>     p = pivot(arr)
>>>>>     return [y for y in arr if y == p]
>>>>>
>>>>> def low_part(arr):
>>>>>     p = pivot(arr)
>>>>>     return [y for y in arr if y < p]
>>>>>
>>>>> def qs(arr, arr_out=[], n = 0):
>>>>>     #print n, arr
>>>>>     return arr_out if len(arr) == 0 else qs(high_part(arr),
>>>>> qs(low_part(arr), arr_out, 2) + middle_part(arr), 1)
>>>>>
>>>>> def quicksort(arr, n = 0):
>>>>>     #print n, arr
>>>>>     if  len(arr) == 0: return []
>>>>>     pivot   = arr[int(len(arr)/2)]
>>>>>     lesser  = [y for y in arr if y  < pivot]
>>>>>     equal   = [y for y in arr if y == pivot]
>>>>>     greater = [y for y in arr if y  > pivot]
>>>>>     return quicksort(lesser, 2) + equal + quicksort(greater, 1)
>>>>>
>>>>> list = [random.random() for x in xrange(40000)]
>>>>>
>>>>> t0 = time.time()
>>>>> qs(list)
>>>>> t1 = time.time()
>>>>> quicksort(list)
>>>>> t2 = time.time()
>>>>>
>>>>> print "qs:", round(t1 - t0, 3), "quicksort:", round(t2 - t1, 3)
>>>>>
>>>>> There is also a big difference in timings: qs: 5.632 quicksort: 0.256
>>>>>
>>>>> I hoisted the pivot calculations out of the loops and I did the same
>>>>> in the openscad version with let but it made no difference.
>>>>>
>>>>> If I add the commented out print statements and use a small array of
>>>>> integers it prints exactly the same calls and intermediate results, so I
>>>>> can't explain the big time difference. Perhaps there are more list copies
>>>>> due to passing arr_out forward.
>>>>>
>>>>>
>>>>> On 12 April 2016 at 03:02, Ronaldo <rcmpersiano at gmail.com> wrote:
>>>>>
>>>>>> Bingo! Why I didn't see that? Well, I think I hadn't fully grasped
>>>>>> quicksort
>>>>>> algorithm. :(
>>>>>>
>>>>>> Meanwhile, I got a version of quicksort which seems to have the
>>>>>> pattern of
>>>>>> tail recursion:
>>>>>>
>>>>>> > function qs(arr, arr_out=[]) =
>>>>>> >     !(len(arr)>0) ?
>>>>>> >         arr_out :
>>>>>> >         qs( arr     = high_part(arr),
>>>>>> >             arr_out = concat(qs( low_part(arr), arr_out ),
>>>>>> > middle_part(arr)) );
>>>>>> >
>>>>>> > function high_part  (arr) = [ for (y = arr) if (y >  pivot(arr)) y
>>>>>> ];
>>>>>> > function middle_part(arr) = [ for (y = arr) if (y == pivot(arr)) y
>>>>>> ];
>>>>>> > function low_part   (arr) = [ for (y = arr) if (y <  pivot(arr)) y
>>>>>> ];
>>>>>> > function pivot      (arr) = arr[floor(len(arr)/2)];
>>>>>>
>>>>>> I were able to sort a worst case array of length 5000 in 48sec with
>>>>>> qs().
>>>>>> The previous quicksort() function fail with stack overflow for lengths
>>>>>> lesser than 4000. However, it is much slower: for a random array with
>>>>>> 40000
>>>>>> values, qs() required 60 sec while quicksort() spent just 4sec.
>>>>>>
>>>>>>
>>>>>>
>>>>>> --
>>>>>> View this message in context:
>>>>>> http://forum.openscad.org/Quicksort-tp17044p17051.html
>>>>>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>>>>>
>>>>>> _______________________________________________
>>>>>> OpenSCAD mailing list
>>>>>> Discuss at lists.openscad.org
>>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>>
>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> OpenSCAD mailing list
>>>>> Discuss at lists.openscad.org
>>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>>
>>>>>
>>>>
>>>> _______________________________________________
>>>> OpenSCAD mailing list
>>>> Discuss at lists.openscad.org
>>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>>
>>>>
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160412/f721e1c7/attachment.html>

From rcmpersiano at gmail.com  Tue Apr 12 10:44:51 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Tue, 12 Apr 2016 07:44:51 -0700 (MST)
Subject: [OpenSCAD] Quicksort
In-Reply-To: <CAEEmnrNAnmQDCuvqoTO6ar_ch4CYhsN-dQMN_FGqg39hGGi5Nw@mail.gmail.com>
References: <1460405332300-17044.post@n5.nabble.com>
	<20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
	<CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>
	<CAEEmnrOu0jF4-BzytOqes7S3dXHXiDmjNuOj+pvuUSqiYube8w@mail.gmail.com>
	<CAGV6i+P1VPD_36GKQ7P6LxruwOy86vifheLY7VTyJdsKr2qRtg@mail.gmail.com>
	<CAEEmnrNAnmQDCuvqoTO6ar_ch4CYhsN-dQMN_FGqg39hGGi5Nw@mail.gmail.com>
Message-ID: <1460472291358-17079.post@n5.nabble.com>

As far as I know, polyhedron faces isn't triangulated in rendering just in
preview. That is the main reason I searched for a polygon triangulation.
Apparently, when CGAL rejects a face as non-planar, OpenSCAD tries to
triangulate it: the alternative procedure. But sometimes this doesn't work
either.

I don't need to sort 40000 array values. I was only doing a time analysis to
compare different methods. Remember that the quicksort exemplified in the
manual, to be robust, should be restricted to handle vectors with 3000
elements. That is the limit for the worst (very unlikely) case, but you
never know.



--
View this message in context: http://forum.openscad.org/Quicksort-tp17044p17079.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Tue Apr 12 11:01:50 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Tue, 12 Apr 2016 08:01:50 -0700 (MST)
Subject: [OpenSCAD] Quicksort
In-Reply-To: <1460472291358-17079.post@n5.nabble.com>
References: <1460405332300-17044.post@n5.nabble.com>
	<20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
	<CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>
	<CAEEmnrOu0jF4-BzytOqes7S3dXHXiDmjNuOj+pvuUSqiYube8w@mail.gmail.com>
	<CAGV6i+P1VPD_36GKQ7P6LxruwOy86vifheLY7VTyJdsKr2qRtg@mail.gmail.com>
	<CAEEmnrNAnmQDCuvqoTO6ar_ch4CYhsN-dQMN_FGqg39hGGi5Nw@mail.gmail.com>
	<1460472291358-17079.post@n5.nabble.com>
Message-ID: <1460473310382-17080.post@n5.nabble.com>

As I said before in another thread, OpenSCAD should provide a good set of
list processing operators. And sorting is a very basic one. After all, lists
are the only available data structure in the language.

Besides, CGAL has lots of computational geometry methods and very very few
of them are accessible by the language. My dream is to have a general
OpenSCAD interface to CGAL library for people who wants to dig in the CGAL
world. 

To dough: I like F-rep too. It is a very general paradigm but it requires
some mathematical-oriented mind. I see no way to include F-rep without a
robust optimized kernel to support it. If CGAL is able to give that support,
it would a good path to pursuit.



--
View this message in context: http://forum.openscad.org/Quicksort-tp17044p17080.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Tue Apr 12 11:29:10 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Tue, 12 Apr 2016 08:29:10 -0700 (MST)
Subject: [OpenSCAD] Easy way to get the area area of a polygon?
In-Reply-To: <CAGV6i+NCL2AqjUmL+3BssmE5OBDMQgS9vetnuVnA3iO6hkbGyg@mail.gmail.com>
References: <1460408661624-17045.post@n5.nabble.com>
	<CAGV6i+Oi2hipFUXBp9GqK0M8GT0UANS7z5WWjsz=Fk5mmH-RfQ@mail.gmail.com>
	<3AF08362-ACF8-4119-81F6-7CC1330A3FDB@gmail.com>
	<CAGV6i+NCL2AqjUmL+3BssmE5OBDMQgS9vetnuVnA3iO6hkbGyg@mail.gmail.com>
Message-ID: <1460474950217-17081.post@n5.nabble.com>

doug.moen wrote
> Self-intersecting polygons do not work, which is inconsistent with the
> polygon() primitive. So the area won't match what polygon() draws on the
> screen in this case.

To calculate area or even to fill a self-intersecting polygons is ambiguous.
The drawing of a self-intersecting polygon done by primitive polygon() is
just one of the alternatives. Consider an extrusion of the polygon:

> p = [ [0,0], [7,0], [7,7], [3,7], [3,3], [10,3], [10,10], [0,10] ];
> polygon(p);

which has a hole in it. If you process that extrusion with slic3r and
Simplify3D you will get rather different results. Each one choose its own
interpretation of the hole of polygon(). Slic3r does preserve the hole,
Simplify3D fill it. And nobody can argue that one of them is wrong.



--
View this message in context: http://forum.openscad.org/Easy-way-to-get-the-area-of-a-polygon-tp17045p17081.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Tue Apr 12 12:29:07 2016
From: nop.head at gmail.com (nop head)
Date: Tue, 12 Apr 2016 17:29:07 +0100
Subject: [OpenSCAD] Quicksort
In-Reply-To: <1460473310382-17080.post@n5.nabble.com>
References: <1460405332300-17044.post@n5.nabble.com>
	<20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
	<CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>
	<CAEEmnrOu0jF4-BzytOqes7S3dXHXiDmjNuOj+pvuUSqiYube8w@mail.gmail.com>
	<CAGV6i+P1VPD_36GKQ7P6LxruwOy86vifheLY7VTyJdsKr2qRtg@mail.gmail.com>
	<CAEEmnrNAnmQDCuvqoTO6ar_ch4CYhsN-dQMN_FGqg39hGGi5Nw@mail.gmail.com>
	<1460472291358-17079.post@n5.nabble.com>
	<1460473310382-17080.post@n5.nabble.com>
Message-ID: <CAEEmnrMPri+qJeWsFAxN35s25eNvXQDLmct3CQdmOxyoV5cH9g@mail.gmail.com>

> As far as I know, polyhedron faces isn't triangulated in rendering just
in preview.

Yes CGAL maintains polygonal facets if they are planar but when you create
an STL file it gets triangulated at that point.

On 12 April 2016 at 16:01, Ronaldo <rcmpersiano at gmail.com> wrote:

> As I said before in another thread, OpenSCAD should provide a good set of
> list processing operators. And sorting is a very basic one. After all,
> lists
> are the only available data structure in the language.
>
> Besides, CGAL has lots of computational geometry methods and very very few
> of them are accessible by the language. My dream is to have a general
> OpenSCAD interface to CGAL library for people who wants to dig in the CGAL
> world.
>
> To dough: I like F-rep too. It is a very general paradigm but it requires
> some mathematical-oriented mind. I see no way to include F-rep without a
> robust optimized kernel to support it. If CGAL is able to give that
> support,
> it would a good path to pursuit.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Quicksort-tp17044p17080.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160412/454f9a0c/attachment.html>

From rudolf at parkinbot.com  Tue Apr 12 14:37:20 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Tue, 12 Apr 2016 11:37:20 -0700 (MST)
Subject: [OpenSCAD] Quicksort
In-Reply-To: <1460473310382-17080.post@n5.nabble.com>
References: <1460405332300-17044.post@n5.nabble.com>
	<20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
	<CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>
	<CAEEmnrOu0jF4-BzytOqes7S3dXHXiDmjNuOj+pvuUSqiYube8w@mail.gmail.com>
	<CAGV6i+P1VPD_36GKQ7P6LxruwOy86vifheLY7VTyJdsKr2qRtg@mail.gmail.com>
	<CAEEmnrNAnmQDCuvqoTO6ar_ch4CYhsN-dQMN_FGqg39hGGi5Nw@mail.gmail.com>
	<1460472291358-17079.post@n5.nabble.com>
	<1460473310382-17080.post@n5.nabble.com>
Message-ID: <1460486240459-17083.post@n5.nabble.com>

As I wrote in the other thread, quicksort alone will not speed up your code
from O(n?) to O(n log n). What you need, is a sorter operating over a
balanced tree. Thus: better "ask" for this. BUT: this approach needs
function pointers, as you will have to provide a predicate for general
sorting. So better wait for OpenSCAD2, use a richer programming language, or
try your luck and ask for an API ;-) 



--
View this message in context: http://forum.openscad.org/Quicksort-tp17044p17083.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From experimentalist at aaawesome.co.uk  Tue Apr 12 14:58:51 2016
From: experimentalist at aaawesome.co.uk (Experimentalist)
Date: Tue, 12 Apr 2016 11:58:51 -0700 (MST)
Subject: [OpenSCAD] Easy way to get the area of a polygon?
In-Reply-To: <1460408661624-17045.post@n5.nabble.com>
References: <1460408661624-17045.post@n5.nabble.com>
Message-ID: <1460487531673-17084.post@n5.nabble.com>

Hi

Thanks everyone for your answers, I shall play

Ex



--
View this message in context: http://forum.openscad.org/Easy-way-to-get-the-area-of-a-polygon-tp17045p17084.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Tue Apr 12 15:02:39 2016
From: doug at moens.org (doug moen)
Date: Tue, 12 Apr 2016 15:02:39 -0400
Subject: [OpenSCAD] Quicksort
In-Reply-To: <1460486240459-17083.post@n5.nabble.com>
References: <1460405332300-17044.post@n5.nabble.com>
	<20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
	<CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>
	<CAEEmnrOu0jF4-BzytOqes7S3dXHXiDmjNuOj+pvuUSqiYube8w@mail.gmail.com>
	<CAGV6i+P1VPD_36GKQ7P6LxruwOy86vifheLY7VTyJdsKr2qRtg@mail.gmail.com>
	<CAEEmnrNAnmQDCuvqoTO6ar_ch4CYhsN-dQMN_FGqg39hGGi5Nw@mail.gmail.com>
	<1460472291358-17079.post@n5.nabble.com>
	<1460473310382-17080.post@n5.nabble.com>
	<1460486240459-17083.post@n5.nabble.com>
Message-ID: <CAGV6i+O+FTgjAqmPgcVQQqTchk=0pnuX+TBS5kOiFd=nVTLNOw@mail.gmail.com>

Ronaldo wrote:
As far as I know, polyhedron faces isn't triangulated in rendering just in
preview. That is the main reason I searched for a polygon triangulation.
Apparently, when CGAL rejects a face as non-planar, OpenSCAD tries to
triangulate it: the alternative procedure. But sometimes this doesn't work
either.

Ronaldo, it sounds like you are writing your own polygon triangulation
software in order to work around a possible bug in polyhedron(). There is
some argument to polyhedron(), involving a non-planar face, that works in
preview, but doesn't work in rendering.

Can you describe the bug in more detail, maybe provide a failing test case?

On 12 April 2016 at 14:37, Parkinbot <rudolf at parkinbot.com> wrote:

> As I wrote in the other thread, quicksort alone will not speed up your code
> from O(n?) to O(n log n). What you need, is a sorter operating over a
> balanced tree. Thus: better "ask" for this. BUT: this approach needs
> function pointers, as you will have to provide a predicate for general
> sorting. So better wait for OpenSCAD2, use a richer programming language,
> or
> try your luck and ask for an API ;-)
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Quicksort-tp17044p17083.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160412/428658d0/attachment.html>

From rcmpersiano at gmail.com  Tue Apr 12 15:45:29 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Tue, 12 Apr 2016 12:45:29 -0700 (MST)
Subject: [OpenSCAD] Quicksort
In-Reply-To: <CAGV6i+O+FTgjAqmPgcVQQqTchk=0pnuX+TBS5kOiFd=nVTLNOw@mail.gmail.com>
References: <1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
	<CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>
	<CAEEmnrOu0jF4-BzytOqes7S3dXHXiDmjNuOj+pvuUSqiYube8w@mail.gmail.com>
	<CAGV6i+P1VPD_36GKQ7P6LxruwOy86vifheLY7VTyJdsKr2qRtg@mail.gmail.com>
	<CAEEmnrNAnmQDCuvqoTO6ar_ch4CYhsN-dQMN_FGqg39hGGi5Nw@mail.gmail.com>
	<1460472291358-17079.post@n5.nabble.com>
	<1460473310382-17080.post@n5.nabble.com>
	<1460486240459-17083.post@n5.nabble.com>
	<CAGV6i+O+FTgjAqmPgcVQQqTchk=0pnuX+TBS5kOiFd=nVTLNOw@mail.gmail.com>
Message-ID: <1460490329842-17086.post@n5.nabble.com>

doug.moen wrote
> Ronaldo, it sounds like you are writing your own polygon triangulation
> software in order to work around a possible bug in polyhedron(). There is
> some argument to polyhedron(), involving a non-planar face, that works in
> preview, but doesn't work in rendering.
> 
> Can you describe the bug in more detail, maybe provide a failing test
> case?

I don't have a failing test case anymore. I integrated the polygon
triangulation in my system and have no more the issues I had before.

I am working on a system that allows solid (sets with manifold boundaries)
modelling using polyhedron primitive with faces defined by Bezier patches
and planar (or almost) faces. It evolved very well but I faced now and then
with annoying messages by CGAL of non-planar faces. The analysis of the face
definition usually shown that the face was planar (for instance, all
vertices had the same x coordinate). Sometimes the alternate construction
solved the trouble. Sometimes not. So, I decided to write my own polygon
triangulation algorithm which unhappily is not good enough and took too much
of my time. The discussions on simple polygon test, plane fitting and
sorting, all came from that target. That is the story.

I have no way to say that I was facing a bug. I don't know what is being
considered for OpenSCAD2. But, it would be nice to have access to this sort
of geometrical methods that are in the core of CGAL. And a richer set of
list processing functions.





--
View this message in context: http://forum.openscad.org/Quicksort-tp17044p17086.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Tue Apr 12 15:50:46 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Tue, 12 Apr 2016 16:50:46 -0300
Subject: [OpenSCAD] New Algorithm for Spheres
In-Reply-To: <1460447308835-17062.post@n5.nabble.com>
References: <bd8fd88eacdbfc5965659c0139cc6bbe@localhost>
	<CAGV6i+Od-Kyaj8ion+8s39Y3MUe-que2PRc4gN0+7zh+jFigCQ@mail.gmail.com>
	<3b5e7236b00799ff70c468fe037077bb@localhost>
	<CAGV6i+PgRa8fAoQhH3+B_tXGhrnYx7Obtd3bV9=AN0qCUdE2gA@mail.gmail.com>
	<55B56BC6.5080601@gmail.com>
	<1460447308835-17062.post@n5.nabble.com>
Message-ID: <CA+i9EaDO6sKyECSztGA_Hx43EGpgAdDeS+i=s52xHxij=dNQtA@mail.gmail.com>

Nice work, Jamie. The look of a geodesic sphere is more pleasant then the
OpenSCAD primitive one. I will play with it some day.

2016-04-12 4:48 GMT-03:00 Jamie_K <vector76 at gmail.com>:

> Sorry for resurrecting an old post but I think it's relevant.  I've
> constructed a geodesic equivalent to sphere() as a module in OpenSCAD.  The
> algorithm is hardly original, recursively subdividing an icosahedron, but I
> feel the implementation is relatively simple.  This code also respects $fn,
> $fa, and $fs with the intent of being a drop-in replacement for those cases
> when you want the geodesic sphere instead of the default.
>
> Since subdivision always quadruples the number of facets and cuts edge
> length in half, there is a fair bit of quantization when choosing the
> subdivision level, but it's fairly straightforward: compute the log base 2
> of the requested side length or angle compared to the icosahedron starting
> point, and round up to the next integer so the subdivision will be at least
> as fine as implied by $fn, or by the coarser of $fa, or $fs.
>
> I've also put this on thinigverse here:
> http://www.thingiverse.com/thing:1484333
>
> I got started on this because Google didn't seem to find any easy-to-use
> geodesics in OpenSCAD, and because it's fun!
>
> -Jamie
>
> <http://forum.openscad.org/file/n17062/geodesic_sphere.png>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/New-Algorithm-for-Spheres-tp13306p17062.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160412/71c2ddcf/attachment.html>

From macdarren at mac.com  Tue Apr 12 17:24:28 2016
From: macdarren at mac.com (Darren DeVecchio)
Date: Tue, 12 Apr 2016 14:24:28 -0700
Subject: [OpenSCAD] Can't Render Code
In-Reply-To: <1460465163674-17070.post@n5.nabble.com>
References: <1460453813691-17063.post@n5.nabble.com>
	<1460454241208-17064.post@n5.nabble.com>
	<1460457456576-17065.post@n5.nabble.com>
	<1460457526214-17066.post@n5.nabble.com>
	<1460465163674-17070.post@n5.nabble.com>
Message-ID: <9F48FC28-D71E-42A1-AFB9-6930A5A8D9D2@mac.com>

What kinda of machine do you use that you render that in 30 seconds?
I have been wondering for a while when I see render times mentioned in the forum why my render times are so different sometimes REALLY SLOWER.

I have an 8 core 2.3Ghz, 16GB, SSD machine with an AMD Radeon of the same vintage?not the latest greatest but not generally old or slow.
however when I render things I see only one cpu in use?maybe there is a switch to enable more.

my render time on the OP zipped files is more like a minute?.I guess not THAT bad but faster would be better?:)
Is OpenSCAD multi core capable?if not then I guess it is probably my slower clock speed and slightly older CPU.


Darren

> On Apr 12, 2016, at 5:46 AM, fred_dot_u <fred_dot_u at yahoo.com> wrote:
> 
> My computer took about 30 seconds to render the object and provided a
> non-manifold warning. I opened the STL in Meshmixer and the "inspector"
> found no errors. Per your request, I've attached the STL file.
> 
> 
> casingWithParts.stl
> <http://forum.openscad.org/file/n17070/casingWithParts.stl>  
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/Can-t-Render-Code-tp17063p17070.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From doug at moens.org  Tue Apr 12 17:38:37 2016
From: doug at moens.org (doug moen)
Date: Tue, 12 Apr 2016 17:38:37 -0400
Subject: [OpenSCAD] Easy way to get the area area of a polygon?
In-Reply-To: <1460474950217-17081.post@n5.nabble.com>
References: <1460408661624-17045.post@n5.nabble.com>
	<CAGV6i+Oi2hipFUXBp9GqK0M8GT0UANS7z5WWjsz=Fk5mmH-RfQ@mail.gmail.com>
	<3AF08362-ACF8-4119-81F6-7CC1330A3FDB@gmail.com>
	<CAGV6i+NCL2AqjUmL+3BssmE5OBDMQgS9vetnuVnA3iO6hkbGyg@mail.gmail.com>
	<1460474950217-17081.post@n5.nabble.com>
Message-ID: <CAGV6i+OwM8MuJeuCN800qmkWyhGafoHzuhYGTx0DscLdR9oWOw@mail.gmail.com>

Ronaldo gave an example of an "ambiguous" model:
----
Consider an extrusion of the polygon:

> p = [ [0,0], [7,0], [7,7], [3,7], [3,3], [10,3], [10,10], [0,10] ];
> polygon(p);

which has a hole in it. If you process that extrusion with slic3r and
Simplify3D you will get rather different results. Each one choose its own
interpretation of the hole of polygon(). Slic3r does preserve the hole,
Simplify3D fill it.
----

We don't really like to tolerate ambiguity in interchange formats for 3D
objects. Ideally, everybody should interpret a given file the same way, or
report an error that the file is invalid.

Unfortunately, STL doesn't have a well defined interpretation. So what
OpenSCAD tries to do is give a warning message when exporting an ambiguous
STL file. In your example, there is no warning, and that is a bug. So I
reported it: https://github.com/openscad/openscad/issues/1621

In the case of AMF, the standard explicitly forbids self intersection. When
you try to export this model to AMF, you get a fatal error message on the
console. So that works.

In the case of 3MF, the standard explicitly supports self intersection, and
dictates that the Non-zero Winding Number Rule (aka Positive Fill Rule)
should be used to disambiguate. We don't support 3MF export yet, but if we
did, then this model would not be ambiguous.

Doug.

On 12 April 2016 at 11:29, Ronaldo <rcmpersiano at gmail.com> wrote:

> doug.moen wrote
> > Self-intersecting polygons do not work, which is inconsistent with the
> > polygon() primitive. So the area won't match what polygon() draws on the
> > screen in this case.
>
> To calculate area or even to fill a self-intersecting polygons is
> ambiguous.
> The drawing of a self-intersecting polygon done by primitive polygon() is
> just one of the alternatives. Consider an extrusion of the polygon:
>
> > p = [ [0,0], [7,0], [7,7], [3,7], [3,3], [10,3], [10,10], [0,10] ];
> > polygon(p);
>
> which has a hole in it. If you process that extrusion with slic3r and
> Simplify3D you will get rather different results. Each one choose its own
> interpretation of the hole of polygon(). Slic3r does preserve the hole,
> Simplify3D fill it. And nobody can argue that one of them is wrong.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Easy-way-to-get-the-area-of-a-polygon-tp17045p17081.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160412/6cc670b2/attachment.html>

From fred_dot_u at yahoo.com  Tue Apr 12 17:55:26 2016
From: fred_dot_u at yahoo.com (fred_dot_u)
Date: Tue, 12 Apr 2016 14:55:26 -0700 (MST)
Subject: [OpenSCAD] Can't Render Code
In-Reply-To: <9F48FC28-D71E-42A1-AFB9-6930A5A8D9D2@mac.com>
References: <1460453813691-17063.post@n5.nabble.com>
	<1460454241208-17064.post@n5.nabble.com>
	<1460457456576-17065.post@n5.nabble.com>
	<1460457526214-17066.post@n5.nabble.com>
	<1460465163674-17070.post@n5.nabble.com>
	<9F48FC28-D71E-42A1-AFB9-6930A5A8D9D2@mac.com>
Message-ID: <1460498126606-17090.post@n5.nabble.com>

Obviously, I did not pay attention when I rendered the model. Doing so again,
after closing and re-opening the program and .scad file, it reads as 9 to 12
seconds. Pursuant to your message, I also checked the task manager (Win 7)
and four of the eight cores are "working" with traces not quite half way up
the graph. Old machine here too, an Intel i7 with only 12 GB system ram and
a decent video card, although not up to Oculus Rift standards!



--
View this message in context: http://forum.openscad.org/Can-t-Render-Code-tp17063p17090.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From macdarren at mac.com  Tue Apr 12 18:39:24 2016
From: macdarren at mac.com (Darren DeVecchio)
Date: Tue, 12 Apr 2016 15:39:24 -0700
Subject: [OpenSCAD] Can't Render Code
In-Reply-To: <1460498126606-17090.post@n5.nabble.com>
References: <1460453813691-17063.post@n5.nabble.com>
	<1460454241208-17064.post@n5.nabble.com>
	<1460457456576-17065.post@n5.nabble.com>
	<1460457526214-17066.post@n5.nabble.com>
	<1460465163674-17070.post@n5.nabble.com>
	<9F48FC28-D71E-42A1-AFB9-6930A5A8D9D2@mac.com>
	<1460498126606-17090.post@n5.nabble.com>
Message-ID: <DC75E7C0-2F78-4424-854A-103A0ACFDFF8@mac.com>

Thanks Fred?.now my machine feels even slower?:)..I?d love 15 seconds.

If I can get more cores working maybe that would get me closer to your times.
My task manager shows only a single core but it is maxed out during the render.
I?ll have to research this a bit, maybe it is a bug or a feature I need to turn on.
Or maybe it has to do with the video card, I am not sure how much computing is done where.
I am no where near Oculus standards, my video was never top of the line and is 4+ years ancient.

Darren



> On Apr 12, 2016, at 2:55 PM, fred_dot_u <fred_dot_u at yahoo.com> wrote:
> 
> Obviously, I did not pay attention when I rendered the model. Doing so again,
> after closing and re-opening the program and .scad file, it reads as 9 to 12
> seconds. Pursuant to your message, I also checked the task manager (Win 7)
> and four of the eight cores are "working" with traces not quite half way up
> the graph. Old machine here too, an Intel i7 with only 12 GB system ram and
> a decent video card, although not up to Oculus Rift standards!
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/Can-t-Render-Code-tp17063p17090.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From nop.head at gmail.com  Tue Apr 12 18:53:18 2016
From: nop.head at gmail.com (nop head)
Date: Tue, 12 Apr 2016 23:53:18 +0100
Subject: [OpenSCAD] Can't Render Code
In-Reply-To: <DC75E7C0-2F78-4424-854A-103A0ACFDFF8@mac.com>
References: <1460453813691-17063.post@n5.nabble.com>
	<1460454241208-17064.post@n5.nabble.com>
	<1460457456576-17065.post@n5.nabble.com>
	<1460457526214-17066.post@n5.nabble.com>
	<1460465163674-17070.post@n5.nabble.com>
	<9F48FC28-D71E-42A1-AFB9-6930A5A8D9D2@mac.com>
	<1460498126606-17090.post@n5.nabble.com>
	<DC75E7C0-2F78-4424-854A-103A0ACFDFF8@mac.com>
Message-ID: <CAEEmnrO65DByp5B5iAVqXduV90yKzeinKujABvw7wD-V83DS9A@mail.gmail.com>

OpenScad currently never uses more than one core. The speed of your
graphics card only affects the F5 preview, not the F6 time.

On 12 April 2016 at 23:39, Darren DeVecchio <macdarren at mac.com> wrote:

> Thanks Fred?.now my machine feels even slower?:)..I?d love 15 seconds.
>
> If I can get more cores working maybe that would get me closer to your
> times.
> My task manager shows only a single core but it is maxed out during the
> render.
> I?ll have to research this a bit, maybe it is a bug or a feature I need to
> turn on.
> Or maybe it has to do with the video card, I am not sure how much
> computing is done where.
> I am no where near Oculus standards, my video was never top of the line
> and is 4+ years ancient.
>
> Darren
>
>
>
> > On Apr 12, 2016, at 2:55 PM, fred_dot_u <fred_dot_u at yahoo.com> wrote:
> >
> > Obviously, I did not pay attention when I rendered the model. Doing so
> again,
> > after closing and re-opening the program and .scad file, it reads as 9
> to 12
> > seconds. Pursuant to your message, I also checked the task manager (Win
> 7)
> > and four of the eight cores are "working" with traces not quite half way
> up
> > the graph. Old machine here too, an Intel i7 with only 12 GB system ram
> and
> > a decent video card, although not up to Oculus Rift standards!
> >
> >
> >
> > --
> > View this message in context:
> http://forum.openscad.org/Can-t-Render-Code-tp17063p17090.html
> > Sent from the OpenSCAD mailing list archive at Nabble.com.
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160412/cbd88e83/attachment.html>

From macdarren at mac.com  Tue Apr 12 19:00:18 2016
From: macdarren at mac.com (Darren DeVecchio)
Date: Tue, 12 Apr 2016 16:00:18 -0700
Subject: [OpenSCAD] Can't Render Code
In-Reply-To: <CAEEmnrO65DByp5B5iAVqXduV90yKzeinKujABvw7wD-V83DS9A@mail.gmail.com>
References: <1460453813691-17063.post@n5.nabble.com>
	<1460454241208-17064.post@n5.nabble.com>
	<1460457456576-17065.post@n5.nabble.com>
	<1460457526214-17066.post@n5.nabble.com>
	<1460465163674-17070.post@n5.nabble.com>
	<9F48FC28-D71E-42A1-AFB9-6930A5A8D9D2@mac.com>
	<1460498126606-17090.post@n5.nabble.com>
	<DC75E7C0-2F78-4424-854A-103A0ACFDFF8@mac.com>
	<CAEEmnrO65DByp5B5iAVqXduV90yKzeinKujABvw7wD-V83DS9A@mail.gmail.com>
Message-ID: <89EBB9D3-5D74-4444-A495-30B92BD64DCD@mac.com>

interesting?my previews are reasonably fast, it is the F6 render that is slow?and from what was said graphics card should not matter?
I wonder why I get slow render times?a freshly loaded app, with the model from the OP F5s in <1 second.
Renders take 40+ seconds?if it is mostly a CPU thing then maybe my slower clocked older CPU architecture is the issue.





From macdarren at mac.com  Tue Apr 12 20:16:22 2016
From: macdarren at mac.com (Darren DeVecchio)
Date: Tue, 12 Apr 2016 17:16:22 -0700
Subject: [OpenSCAD] Can't Render Code
In-Reply-To: <89EBB9D3-5D74-4444-A495-30B92BD64DCD@mac.com>
References: <1460453813691-17063.post@n5.nabble.com>
	<1460454241208-17064.post@n5.nabble.com>
	<1460457456576-17065.post@n5.nabble.com>
	<1460457526214-17066.post@n5.nabble.com>
	<1460465163674-17070.post@n5.nabble.com>
	<9F48FC28-D71E-42A1-AFB9-6930A5A8D9D2@mac.com>
	<1460498126606-17090.post@n5.nabble.com>
	<DC75E7C0-2F78-4424-854A-103A0ACFDFF8@mac.com>
	<CAEEmnrO65DByp5B5iAVqXduV90yKzeinKujABvw7wD-V83DS9A@mail.gmail.com>
	<89EBB9D3-5D74-4444-A495-30B92BD64DCD@mac.com>
Message-ID: <B1B9F8F0-D933-4213-9BF2-3AC333C545BC@mac.com>

For completeness I just rebooted and tried the render again and this time I had the INTEL Power Gadget open to see if maybe
the clock was running slow or not ?Turbo Boosting? but it jumps to the boosted clock rate of about 3Ghz when rendering, but it does
start at the lower ?inactive" rate for the first second?it was somewhat faster than my previous runs down to about 40 seconds.


Probably just time for a newer machine..if I really can?t wait all those seconds..but I am mostly a beginner and do simple models
along the lines of the OP so that short wait is not that big of a deal and I usually review the code and find a way to tweak it while I wait.




> On Apr 12, 2016, at 4:00 PM, Darren DeVecchio <macdarren at mac.com> wrote:
> 
> interesting?my previews are reasonably fast, it is the F6 render that is slow?and from what was said graphics card should not matter?
> I wonder why I get slow render times?a freshly loaded app, with the model from the OP F5s in <1 second.
> Renders take 40+ seconds?if it is mostly a CPU thing then maybe my slower clocked older CPU architecture is the issue.
> 
> 
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From will at featherfab.com  Tue Apr 12 20:37:28 2016
From: will at featherfab.com (wwatts)
Date: Tue, 12 Apr 2016 17:37:28 -0700 (MST)
Subject: [OpenSCAD] Creating a series of translated primitives from
	table/matrix
Message-ID: <1460507848793-17096.post@n5.nabble.com>

Hi all, 

I'm attempting create some semi-automated functionality in OpenSCAD. What I
would like to do is be able to read in a table of positional, size and type
(sphere etc) data created in another program and generate a single stl file
containing said objects. My suspicion is that I might have to use python to
get this to work, especially if I want to read in a csv or similar file to
get the data, but I figured someone here might have a solution for a more
native way to achieve this. I really appreciate any help you can give. 

Thanks,



--
View this message in context: http://forum.openscad.org/Creating-a-series-of-translated-primitives-from-table-matrix-tp17096.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Tue Apr 12 20:50:57 2016
From: doug at moens.org (doug moen)
Date: Tue, 12 Apr 2016 20:50:57 -0400
Subject: [OpenSCAD] Creating a series of translated primitives from
	table/matrix
In-Reply-To: <1460507848793-17096.post@n5.nabble.com>
References: <1460507848793-17096.post@n5.nabble.com>
Message-ID: <CAGV6i+PX92mrY6vfb1aaS0cq_Bg6PzbDG8yLkXXKm6FkcXSTTg@mail.gmail.com>

Use an external program (eg written in Python) to convert the parameter
table into an OpenSCAD script called 'parameters.scad' which contains a
sequence of parameter definitions of the form
  name = value;

Then use 'include <parameters.scad>' to read the parameters into another
OpenSCAD script which then uses the parameters to generate the geometry.

On 12 April 2016 at 20:37, wwatts <will at featherfab.com> wrote:

> Hi all,
>
> I'm attempting create some semi-automated functionality in OpenSCAD. What I
> would like to do is be able to read in a table of positional, size and type
> (sphere etc) data created in another program and generate a single stl file
> containing said objects. My suspicion is that I might have to use python to
> get this to work, especially if I want to read in a csv or similar file to
> get the data, but I figured someone here might have a solution for a more
> native way to achieve this. I really appreciate any help you can give.
>
> Thanks,
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Creating-a-series-of-translated-primitives-from-table-matrix-tp17096.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160412/9b7d674b/attachment.html>

From runsun at gmail.com  Wed Apr 13 09:43:27 2016
From: runsun at gmail.com (runsun)
Date: Wed, 13 Apr 2016 06:43:27 -0700 (MST)
Subject: [OpenSCAD] Can't Render Code
In-Reply-To: <B1B9F8F0-D933-4213-9BF2-3AC333C545BC@mac.com>
References: <1460454241208-17064.post@n5.nabble.com>
	<1460457456576-17065.post@n5.nabble.com>
	<1460457526214-17066.post@n5.nabble.com>
	<1460465163674-17070.post@n5.nabble.com>
	<9F48FC28-D71E-42A1-AFB9-6930A5A8D9D2@mac.com>
	<1460498126606-17090.post@n5.nabble.com>
	<DC75E7C0-2F78-4424-854A-103A0ACFDFF8@mac.com>
	<CAEEmnrO65DByp5B5iAVqXduV90yKzeinKujABvw7wD-V83DS9A@mail.gmail.com>
	<89EBB9D3-5D74-4444-A495-30B92BD64DCD@mac.com>
	<B1B9F8F0-D933-4213-9BF2-3AC333C545BC@mac.com>
Message-ID: <1460555007738-17098.post@n5.nabble.com>

macdarren wrote
> Probably just time for a newer machine..if I really can?t wait all those
> seconds..but I am mostly a beginner and do simple models
> along the lines of the OP so that short wait is not that big of a deal and
> I usually review the code and find a way to tweak it while I wait.

I recalled when I started learning OpenSCAD, I read a thread discussing
rendering time, in which people were talking about 15~20 hr time scale (they
went to bed and the next day it still running) and said that it's worth it.
Up to now I am still wondering if I read something wrong, but I guess that's
why we need preview. 

Btw, putting a render(){ your-object } where your-object is the one that you
already made (thus the OpenSCAD will use the cach) might help.




-----

$  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ), runscad.py( 1 , 2 , git ), synwrite( 1 , 2 ); &nbsp;&nbsp; $ tips: hash( 1 , 2 ), matrix( 1 , 2 ),sweep( 1 , 2 ), var( 1 , 2 ), lerp , animation ( gif , prodVid ), precision( 1 , 2 ), xl-control , type , rounded polygon , chfont , tailRecur ( 2, 3 ), isosphere , area 
--
View this message in context: http://forum.openscad.org/Can-t-Render-Code-tp17063p17098.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Wed Apr 13 11:11:28 2016
From: marius at kintel.net (Marius Kintel)
Date: Wed, 13 Apr 2016 11:11:28 -0400
Subject: [OpenSCAD] Quicksort
In-Reply-To: <1460473310382-17080.post@n5.nabble.com>
References: <1460405332300-17044.post@n5.nabble.com>
	<20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
	<CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>
	<CAEEmnrOu0jF4-BzytOqes7S3dXHXiDmjNuOj+pvuUSqiYube8w@mail.gmail.com>
	<CAGV6i+P1VPD_36GKQ7P6LxruwOy86vifheLY7VTyJdsKr2qRtg@mail.gmail.com>
	<CAEEmnrNAnmQDCuvqoTO6ar_ch4CYhsN-dQMN_FGqg39hGGi5Nw@mail.gmail.com>
	<1460472291358-17079.post@n5.nabble.com>
	<1460473310382-17080.post@n5.nabble.com>
Message-ID: <D671718F-7B84-46EE-8397-F75F63975B15@kintel.net>

> On Apr 12, 2016, at 11:01 AM, Ronaldo <rcmpersiano at gmail.com> wrote:
> 
> Besides, CGAL has lots of computational geometry methods and very very few
> of them are accessible by the language. My dream is to have a general
> OpenSCAD interface to CGAL library for people who wants to dig in the CGAL
> world. 
> 
Ronaldo,

Keep in mind that OpenSCAD isn?t primarily a wrapper around CGAL. We use it as a last resort to perform certain types of computational geometry operations. Due to severe performance challenges with CGAL, we?re actively looking for ways to reduce our dependency on CGAL.

To dig into the CGAL world, I would recommend using their officially supported SWIG bindings as a starting point.

 -Marius



From marius at kintel.net  Wed Apr 13 11:16:30 2016
From: marius at kintel.net (Marius Kintel)
Date: Wed, 13 Apr 2016 11:16:30 -0400
Subject: [OpenSCAD] Quicksort
In-Reply-To: <1460472291358-17079.post@n5.nabble.com>
References: <1460405332300-17044.post@n5.nabble.com>
	<20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
	<CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>
	<CAEEmnrOu0jF4-BzytOqes7S3dXHXiDmjNuOj+pvuUSqiYube8w@mail.gmail.com>
	<CAGV6i+P1VPD_36GKQ7P6LxruwOy86vifheLY7VTyJdsKr2qRtg@mail.gmail.com>
	<CAEEmnrNAnmQDCuvqoTO6ar_ch4CYhsN-dQMN_FGqg39hGGi5Nw@mail.gmail.com>
	<1460472291358-17079.post@n5.nabble.com>
Message-ID: <DACCCDF6-0743-424B-9758-8A0BB60A2721@kintel.net>

> On Apr 12, 2016, at 10:44 AM, Ronaldo <rcmpersiano at gmail.com> wrote:
> 
> Apparently, when CGAL rejects a face as non-planar, OpenSCAD tries to
> triangulate it: the alternative procedure. But sometimes this doesn't work
> either.
> 
?sometimes this doesn?t work? sounds like a bug.
CGAL frequently rejects polygons as non-planar, if those polygons were specified using floating point vertices. We have workarounds for that, but our workaround are only as good as our test cases. Any additional corner cases breaking this would be valuable input allowing us to be more robust.

As a side-note for anyone wondering: The polygon triangulator built into CGAL isn?t very robust and crashes on some of our test cases. We thus had to switch to a more robust implementation, currently libtess2, as mentioned earlier in this thread.

 -Marius



From marius at kintel.net  Wed Apr 13 11:20:14 2016
From: marius at kintel.net (Marius Kintel)
Date: Wed, 13 Apr 2016 11:20:14 -0400
Subject: [OpenSCAD] Can't Render Code
In-Reply-To: <1460469870020-17075.post@n5.nabble.com>
References: <1460453813691-17063.post@n5.nabble.com>
	<1460454241208-17064.post@n5.nabble.com>
	<1460457456576-17065.post@n5.nabble.com>
	<1460457526214-17066.post@n5.nabble.com>
	<1460465163674-17070.post@n5.nabble.com>
	<1460468309801-17074.post@n5.nabble.com>
	<1460469870020-17075.post@n5.nabble.com>
Message-ID: <A036ECA4-D8ED-4BA1-9905-92789332EC38@kintel.net>

> On Apr 12, 2016, at 10:04 AM, Entropic <farnworthpatrick at gmail.com> wrote:
> 
> Thank you so much for your help, I can finish the project now. I wonder why
> my computer wouldn't do it. Thanks.
> 
My guess is that you?re using an old version of OpenSCAD. The latest is 2015.03-2.

 -Marius



From doug at moens.org  Wed Apr 13 11:47:09 2016
From: doug at moens.org (doug moen)
Date: Wed, 13 Apr 2016 11:47:09 -0400
Subject: [OpenSCAD] Quicksort
In-Reply-To: <DACCCDF6-0743-424B-9758-8A0BB60A2721@kintel.net>
References: <1460405332300-17044.post@n5.nabble.com>
	<20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
	<CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>
	<CAEEmnrOu0jF4-BzytOqes7S3dXHXiDmjNuOj+pvuUSqiYube8w@mail.gmail.com>
	<CAGV6i+P1VPD_36GKQ7P6LxruwOy86vifheLY7VTyJdsKr2qRtg@mail.gmail.com>
	<CAEEmnrNAnmQDCuvqoTO6ar_ch4CYhsN-dQMN_FGqg39hGGi5Nw@mail.gmail.com>
	<1460472291358-17079.post@n5.nabble.com>
	<DACCCDF6-0743-424B-9758-8A0BB60A2721@kintel.net>
Message-ID: <CAGV6i+M_x99DmpbCAr=YpyBpMe4kHk_BQCzGc_-cOC6Su-RezQ@mail.gmail.com>

"CGAL frequently rejects polygons as non-planar, if those polygons were
specified using floating point vertices. We have workarounds for that, but
our workaround are only as good as our test cases."

I suggest that polyhedron() should automatically triangulate any face with
more than 3 vertices, since in this case floating point vertices are always
used.

On 13 April 2016 at 11:16, Marius Kintel <marius at kintel.net> wrote:

> > On Apr 12, 2016, at 10:44 AM, Ronaldo <rcmpersiano at gmail.com> wrote:
> >
> > Apparently, when CGAL rejects a face as non-planar, OpenSCAD tries to
> > triangulate it: the alternative procedure. But sometimes this doesn't
> work
> > either.
> >
> ?sometimes this doesn?t work? sounds like a bug.
> CGAL frequently rejects polygons as non-planar, if those polygons were
> specified using floating point vertices. We have workarounds for that, but
> our workaround are only as good as our test cases. Any additional corner
> cases breaking this would be valuable input allowing us to be more robust.
>
> As a side-note for anyone wondering: The polygon triangulator built into
> CGAL isn?t very robust and crashes on some of our test cases. We thus had
> to switch to a more robust implementation, currently libtess2, as mentioned
> earlier in this thread.
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160413/0f0ba5cc/attachment.html>

From jpmendes54 at gmail.com  Wed Apr 13 11:47:19 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Wed, 13 Apr 2016 08:47:19 -0700 (MST)
Subject: [OpenSCAD] Can't Render Code
In-Reply-To: <B1B9F8F0-D933-4213-9BF2-3AC333C545BC@mac.com>
References: <1460454241208-17064.post@n5.nabble.com>
	<1460457456576-17065.post@n5.nabble.com>
	<1460457526214-17066.post@n5.nabble.com>
	<1460465163674-17070.post@n5.nabble.com>
	<9F48FC28-D71E-42A1-AFB9-6930A5A8D9D2@mac.com>
	<1460498126606-17090.post@n5.nabble.com>
	<DC75E7C0-2F78-4424-854A-103A0ACFDFF8@mac.com>
	<CAEEmnrO65DByp5B5iAVqXduV90yKzeinKujABvw7wD-V83DS9A@mail.gmail.com>
	<89EBB9D3-5D74-4444-A495-30B92BD64DCD@mac.com>
	<B1B9F8F0-D933-4213-9BF2-3AC333C545BC@mac.com>
Message-ID: <1460562439855-17102.post@n5.nabble.com>

Just for the record...
On my humble 11 year old 2 core 4Gb machine it took 29 secs to render. I'm
using  OpenSCAD version 2016.01.26 on Windows 7 X64.
Maybe changing power management parameters of your machine may help a
little. With an utility called Prio is possible to assign a core to an app
and permanently assign priorities, maybe  you can use it to liberate a core
to more efficiently run OpenSCAD.

jpmendes



--
View this message in context: http://forum.openscad.org/Can-t-Render-Code-tp17063p17102.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Wed Apr 13 12:22:42 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Wed, 13 Apr 2016 09:22:42 -0700 (MST)
Subject: [OpenSCAD] Quicksort
In-Reply-To: <D671718F-7B84-46EE-8397-F75F63975B15@kintel.net>
References: <20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
	<CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>
	<CAEEmnrOu0jF4-BzytOqes7S3dXHXiDmjNuOj+pvuUSqiYube8w@mail.gmail.com>
	<CAGV6i+P1VPD_36GKQ7P6LxruwOy86vifheLY7VTyJdsKr2qRtg@mail.gmail.com>
	<CAEEmnrNAnmQDCuvqoTO6ar_ch4CYhsN-dQMN_FGqg39hGGi5Nw@mail.gmail.com>
	<1460472291358-17079.post@n5.nabble.com>
	<1460473310382-17080.post@n5.nabble.com>
	<D671718F-7B84-46EE-8397-F75F63975B15@kintel.net>
Message-ID: <1460564562691-17104.post@n5.nabble.com>

kintel wrote
> Keep in mind that OpenSCAD isn?t primarily a wrapper around CGAL. We use
> it as a last resort to perform certain types of computational geometry
> operations. Due to severe performance challenges with CGAL, we?re actively
> looking for ways to reduce our dependency on CGAL.
> To dig into the CGAL world, I would recommend using their officially
> supported SWIG bindings as a starting point.

Thank you for the clarification and reference. I imagined that. And it was
the reason why I did not submitted a feature request following a Parkinbot
suggestion. Anyway it was just a dream...:)






--
View this message in context: http://forum.openscad.org/Quicksort-tp17044p17104.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Wed Apr 13 12:33:29 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Wed, 13 Apr 2016 09:33:29 -0700 (MST)
Subject: [OpenSCAD] Quicksort
In-Reply-To: <CAGV6i+M_x99DmpbCAr=YpyBpMe4kHk_BQCzGc_-cOC6Su-RezQ@mail.gmail.com>
References: <20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
	<CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>
	<CAEEmnrOu0jF4-BzytOqes7S3dXHXiDmjNuOj+pvuUSqiYube8w@mail.gmail.com>
	<CAGV6i+P1VPD_36GKQ7P6LxruwOy86vifheLY7VTyJdsKr2qRtg@mail.gmail.com>
	<CAEEmnrNAnmQDCuvqoTO6ar_ch4CYhsN-dQMN_FGqg39hGGi5Nw@mail.gmail.com>
	<1460472291358-17079.post@n5.nabble.com>
	<DACCCDF6-0743-424B-9758-8A0BB60A2721@kintel.net>
	<CAGV6i+M_x99DmpbCAr=YpyBpMe4kHk_BQCzGc_-cOC6Su-RezQ@mail.gmail.com>
Message-ID: <1460565209313-17105.post@n5.nabble.com>

doug.moen wrote
> I suggest that polyhedron() should automatically triangulate any face with
> more than 3 vertices, since in this case floating point vertices are
> always
> used.

That would be nice. It is what I currently do in my code with the (not
robust) simple polygon triangulation I have written. However, as Sloan
suggested with a question in another thread, there is not a unique
triangulation for non-planar polygons. And worst, and to be fair, there is
no polygon well defined by a non-planar polygonal. 



--
View this message in context: http://forum.openscad.org/Quicksort-tp17044p17105.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Wed Apr 13 12:40:28 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Wed, 13 Apr 2016 09:40:28 -0700 (MST)
Subject: [OpenSCAD] Easy way to get the area area of a polygon?
In-Reply-To: <6CEC3379-ACB9-4F74-B024-6233FA3C721A@gmail.com>
References: <1460408661624-17045.post@n5.nabble.com>
	<CAGV6i+Oi2hipFUXBp9GqK0M8GT0UANS7z5WWjsz=Fk5mmH-RfQ@mail.gmail.com>
	<3AF08362-ACF8-4119-81F6-7CC1330A3FDB@gmail.com>
	<CA+i9EaDLAi-n9J5K1dbdBdXS8xBCuCdgRyy1FZAqNppxak8Ltw@mail.gmail.com>
	<6CEC3379-ACB9-4F74-B024-6233FA3C721A@gmail.com>
Message-ID: <1460565628218-17106.post@n5.nabble.com>

Kenneth Sloan wrote
> Answer (I?m not cruel?): the direction is perpendicular to a ?best-fit?
> plane through the wrinkled ?polygon?, and the length is twice the area of
> the projection of the ?polygon? onto that best-fit plane.
> 
> So?if you have wrinkled polygons and you want the area of the wrinkled
> surface?then you *do* have to triangulate.  Question: in this case, is the
> answer unique?

Is the "best-fit" you mentioned the least square one? Do you suggest any
simple criteria to evaluate how much a polygonal in 3D is non-planar? 



--
View this message in context: http://forum.openscad.org/Easy-way-to-get-the-area-of-a-polygon-tp17045p17106.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Wed Apr 13 12:56:41 2016
From: doug at moens.org (doug moen)
Date: Wed, 13 Apr 2016 12:56:41 -0400
Subject: [OpenSCAD] Quicksort
In-Reply-To: <1460565209313-17105.post@n5.nabble.com>
References: <20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
	<CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>
	<CAEEmnrOu0jF4-BzytOqes7S3dXHXiDmjNuOj+pvuUSqiYube8w@mail.gmail.com>
	<CAGV6i+P1VPD_36GKQ7P6LxruwOy86vifheLY7VTyJdsKr2qRtg@mail.gmail.com>
	<CAEEmnrNAnmQDCuvqoTO6ar_ch4CYhsN-dQMN_FGqg39hGGi5Nw@mail.gmail.com>
	<1460472291358-17079.post@n5.nabble.com>
	<DACCCDF6-0743-424B-9758-8A0BB60A2721@kintel.net>
	<CAGV6i+M_x99DmpbCAr=YpyBpMe4kHk_BQCzGc_-cOC6Su-RezQ@mail.gmail.com>
	<1460565209313-17105.post@n5.nabble.com>
Message-ID: <CAGV6i+NFff++_MnaEMbROQq-Pro4La4vz8kt+AEu2VpN2KbyXA@mail.gmail.com>

Ronaldo said "However, as Sloan
suggested with a question in another thread, there is not a unique
triangulation for non-planar polygons. And worst, and to be fair, there is
no polygon well defined by a non-planar polygonal."

The case we care most about is almost-planar polygons, which would be
planar except for floating point imprecision. In that case, the various
choices will be visually indistinguishable, I would guess. If the user
provides a seriously non-planar polygon (due to a bug in the user's code,
not due to floating point imprecision), then if we choose a bad
triangulation, the user can deal with the issue by fixing their code.

Also, it's possible to make a judgement that some triangulations are better
than others.

In the triangulation thread, somebody suggested to look at the Wings3D
triangulator.

https://github.com/dgud/wings/blob/master/src/wings_tesselation.erl

%%  Triangulates a quad, tries to make the triangulation so nice
%%  patterns emerges, or otherwise along the shortest diagonal, Then
%%  checking that normals for the triangles are consistent with the
%%  normal for the quad. Falls back to the general triangulator if
%%  normals are inconsistent (= concave or otherwise strange quad).

triangulate_quad(F, Vs, TriV0, FsSet0, #we{vp=Vtab}=We0) ->

I don't really understand the code, however, the comment indicates that you
can use normals, plus heuristics, to choose a nice triangulation.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160413/e1f17f8e/attachment.html>

From rcmpersiano at gmail.com  Wed Apr 13 13:16:42 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Wed, 13 Apr 2016 14:16:42 -0300
Subject: [OpenSCAD] Quicksort
In-Reply-To: <CAGV6i+NFff++_MnaEMbROQq-Pro4La4vz8kt+AEu2VpN2KbyXA@mail.gmail.com>
References: <20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
	<CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>
	<CAEEmnrOu0jF4-BzytOqes7S3dXHXiDmjNuOj+pvuUSqiYube8w@mail.gmail.com>
	<CAGV6i+P1VPD_36GKQ7P6LxruwOy86vifheLY7VTyJdsKr2qRtg@mail.gmail.com>
	<CAEEmnrNAnmQDCuvqoTO6ar_ch4CYhsN-dQMN_FGqg39hGGi5Nw@mail.gmail.com>
	<1460472291358-17079.post@n5.nabble.com>
	<DACCCDF6-0743-424B-9758-8A0BB60A2721@kintel.net>
	<CAGV6i+M_x99DmpbCAr=YpyBpMe4kHk_BQCzGc_-cOC6Su-RezQ@mail.gmail.com>
	<1460565209313-17105.post@n5.nabble.com>
	<CAGV6i+NFff++_MnaEMbROQq-Pro4La4vz8kt+AEu2VpN2KbyXA@mail.gmail.com>
Message-ID: <CA+i9EaCLtx6BA0uGjU_8rurwiry4wPy3Jhfnt=xiKBw69evXXA@mail.gmail.com>

The code you referred is intended to triangulate quads not a more general
polygonal. For quads, there is only two alternatives to check. That would
be nice for meshes.

2016-04-13 13:56 GMT-03:00 doug moen <doug at moens.org>:

> Ronaldo said "However, as Sloan
> suggested with a question in another thread, there is not a unique
> triangulation for non-planar polygons. And worst, and to be fair, there is
> no polygon well defined by a non-planar polygonal."
>
> The case we care most about is almost-planar polygons, which would be
> planar except for floating point imprecision. In that case, the various
> choices will be visually indistinguishable, I would guess. If the user
> provides a seriously non-planar polygon (due to a bug in the user's code,
> not due to floating point imprecision), then if we choose a bad
> triangulation, the user can deal with the issue by fixing their code.
>
> Also, it's possible to make a judgement that some triangulations are
> better than others.
>
> In the triangulation thread, somebody suggested to look at the Wings3D
> triangulator.
>
> https://github.com/dgud/wings/blob/master/src/wings_tesselation.erl
>
> %%  Triangulates a quad, tries to make the triangulation so nice
> %%  patterns emerges, or otherwise along the shortest diagonal, Then
> %%  checking that normals for the triangles are consistent with the
> %%  normal for the quad. Falls back to the general triangulator if
> %%  normals are inconsistent (= concave or otherwise strange quad).
>
> triangulate_quad(F, Vs, TriV0, FsSet0, #we{vp=Vtab}=We0) ->
>
> I don't really understand the code, however, the comment indicates that
> you can use normals, plus heuristics, to choose a nice triangulation.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160413/3121955c/attachment.html>

From marius at kintel.net  Wed Apr 13 13:41:48 2016
From: marius at kintel.net (Marius Kintel)
Date: Wed, 13 Apr 2016 13:41:48 -0400
Subject: [OpenSCAD] Quicksort
In-Reply-To: <CAGV6i+M_x99DmpbCAr=YpyBpMe4kHk_BQCzGc_-cOC6Su-RezQ@mail.gmail.com>
References: <1460405332300-17044.post@n5.nabble.com>
	<20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
	<CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>
	<CAEEmnrOu0jF4-BzytOqes7S3dXHXiDmjNuOj+pvuUSqiYube8w@mail.gmail.com>
	<CAGV6i+P1VPD_36GKQ7P6LxruwOy86vifheLY7VTyJdsKr2qRtg@mail.gmail.com>
	<CAEEmnrNAnmQDCuvqoTO6ar_ch4CYhsN-dQMN_FGqg39hGGi5Nw@mail.gmail.com>
	<1460472291358-17079.post@n5.nabble.com>
	<DACCCDF6-0743-424B-9758-8A0BB60A2721@kintel.net>
	<CAGV6i+M_x99DmpbCAr=YpyBpMe4kHk_BQCzGc_-cOC6Su-RezQ@mail.gmail.com>
Message-ID: <77054BE5-D987-49BC-916B-131BEF4E20C1@kintel.net>

> On Apr 13, 2016, at 11:47 AM, doug moen <doug at moens.org> wrote:
> 
> I suggest that polyhedron() should automatically triangulate any face with more than 3 vertices, since in this case floating point vertices are always used.
> 
We do have occasional reports from people who are dependent on quads generated by certain primitives being preserved into downstream software. This is kind of challenging due to the current planarity issues with CGAL. Not sure if this is a workflow we realistically can keep supporting though.

Another issue is that when triangulating all primitives, we get hit by some performance regressions due to CGAL performing significantly more work when processing the resulting geometry. Since we?re already struggling with performance, I decided to _not_ impose another performance hit when I last worked on that. I?m not 100% sure when CGAL performs the operation of merging planar areas into one polygon; perhaps we could manually trigger that.

 -Marius



From doug at moens.org  Wed Apr 13 13:54:35 2016
From: doug at moens.org (doug moen)
Date: Wed, 13 Apr 2016 13:54:35 -0400
Subject: [OpenSCAD] Quicksort
In-Reply-To: <77054BE5-D987-49BC-916B-131BEF4E20C1@kintel.net>
References: <1460405332300-17044.post@n5.nabble.com>
	<20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
	<CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>
	<CAEEmnrOu0jF4-BzytOqes7S3dXHXiDmjNuOj+pvuUSqiYube8w@mail.gmail.com>
	<CAGV6i+P1VPD_36GKQ7P6LxruwOy86vifheLY7VTyJdsKr2qRtg@mail.gmail.com>
	<CAEEmnrNAnmQDCuvqoTO6ar_ch4CYhsN-dQMN_FGqg39hGGi5Nw@mail.gmail.com>
	<1460472291358-17079.post@n5.nabble.com>
	<DACCCDF6-0743-424B-9758-8A0BB60A2721@kintel.net>
	<CAGV6i+M_x99DmpbCAr=YpyBpMe4kHk_BQCzGc_-cOC6Su-RezQ@mail.gmail.com>
	<77054BE5-D987-49BC-916B-131BEF4E20C1@kintel.net>
Message-ID: <CAGV6i+PsL0x3N-d140eXu6XvB=zSrAaMv3Wjj7P304-+VU-6=Q@mail.gmail.com>

Thanks, it makes sense that there would be a performance hit with extra
facets. And the issue with downstream quads did not occur to me. I guess
that OFF supports quads.

So that means, after converting the vertices to rational numbers, that each
face either is planar, or isn't. If it's planar, then CGAL won't have a
problem. If it isn't planar, then we must triangulate. This sounds simple,
but obviously there are hidden complexities or we wouldn't have this bug.

On 13 April 2016 at 13:41, Marius Kintel <marius at kintel.net> wrote:

> > On Apr 13, 2016, at 11:47 AM, doug moen <doug at moens.org> wrote:
> >
> > I suggest that polyhedron() should automatically triangulate any face
> with more than 3 vertices, since in this case floating point vertices are
> always used.
> >
> We do have occasional reports from people who are dependent on quads
> generated by certain primitives being preserved into downstream software.
> This is kind of challenging due to the current planarity issues with CGAL.
> Not sure if this is a workflow we realistically can keep supporting though.
>
> Another issue is that when triangulating all primitives, we get hit by
> some performance regressions due to CGAL performing significantly more work
> when processing the resulting geometry. Since we?re already struggling with
> performance, I decided to _not_ impose another performance hit when I last
> worked on that. I?m not 100% sure when CGAL performs the operation of
> merging planar areas into one polygon; perhaps we could manually trigger
> that.
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160413/bfc5bfb2/attachment.html>

From coltoiu.matei at gmail.com  Wed Apr 13 14:47:52 2016
From: coltoiu.matei at gmail.com (rav0r)
Date: Wed, 13 Apr 2016 11:47:52 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
References: <1459800543763-16964.post@n5.nabble.com>
	<CA+i9EaCcmQujRvC5Q-h_KNt=saOofpqJgqczQ-UbPz=Mp1fNCA@mail.gmail.com>
	<1459960645480-16984.post@n5.nabble.com>
	<1459961442267-16985.post@n5.nabble.com>
	<1459962491677-16987.post@n5.nabble.com>
	<CA+i9EaDe0CEm67iyMX4rULX1nf3vL8+QL19JdR1u0Vq6f3UdEg@mail.gmail.com>
	<1460211177053-17004.post@n5.nabble.com>
	<CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>
	<1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
Message-ID: <1460573272100-17111.post@n5.nabble.com>

https://drive.google.com/open?id=0BxF2sz0RGuRSejlvanZWNS1tTUk
<https://drive.google.com/open?id=0BxF2sz0RGuRSejlvanZWNS1tTUk>  



--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17111.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From kennethrsloan at gmail.com  Wed Apr 13 14:53:34 2016
From: kennethrsloan at gmail.com (Kenneth Sloan)
Date: Wed, 13 Apr 2016 13:53:34 -0500
Subject: [OpenSCAD] Tail recursion
In-Reply-To: <1460444062800-17061.post@n5.nabble.com>
References: <1460396951444-17040.post@n5.nabble.com>
	<CAGV6i+NNDAySSZ+OnbC2e6DZ8CJe_W80ikiya8c1Cd2WUW69zQ@mail.gmail.com>
	<1460427209580-17052.post@n5.nabble.com>
	<CAGV6i+NVdDaKAg6jChKPzhEusC5DyoRc9KWqWkELBd8xR6Qcgg@mail.gmail.com>
	<1460444062800-17061.post@n5.nabble.com>
Message-ID: <D1DD762A-7C81-46DA-8675-158B886CCA83@gmail.com>

You can do QuickSort without *any* recursion?but then you have to explicitly manage a stack for  bookkeeping purposes.

I would hesitate to call any function that uses two recursions to be ?tail-recursive?, but perhaps that?s a matter of taste.

Finally, the best environment for QuickSort is a language that has mutable arrays - in which case QuickSort can be done easily in-place.  Add in a stack data type, and you don?t need recursion.  Dig back into ancient texts (as in, the 1960?s) to find many examples.  I recall implementing it in assembler, without any language support for recursion.  In more modern times, it is convenient to present QuickSort in recursive form.  I?m not at all sure that it?s worthwhile to START with the recursive form and then hack away at it to remove recursions that are too expensive.  Better would be to use a language where recursion is NOT expensive.

If you are going to use recursion, and can?t do things in-place, then MergeSort is a better choice.  MergeSort canNOT be done in place.  Plus, MergeSort has better THEORETICAL properties (if not in practice) than QuickSort.

Finally, for many geometric operations, you may find that the list to be sorted is already ?almost sorted?.  In that case, InsertionSort may be faster than either MergeSort or QuickSort.  If you can write an efficient InsertionSort, you may find that it is the best choice for actual cases (as opposed to fully random test cases).

Well?one more? in a multi-threaded environment, MergeSort can be a disaster, because it may spawn many, many sub-threads.  QuickSort is better behaved in this respect.  InsertionSort gets no help whatsoever from multi-threading.

--
Kenneth Sloan
KennethRSloan at gmail.com
Vision is the art of seeing what is invisible to others.




> On Apr 12, 2016, at 01:54 , Ronaldo <rcmpersiano at gmail.com> wrote:
> 
> So, the code of qs() uses tail recursion for the higher part and regular
> recursion for the lower one. This agrees with some quicksort schemes I found
> where they use "while" iteration instead of one of the recursions. Usually
> the method iterates over the smaller partition. In qs(), I replaced the
> iteration by a tail recursion.
> 
> I don't see how to implement in OpenSCAD language the full scheme where the
> iteration (or tail recursion) operates over the smaller partition. If a
> let() was allowed in tail recursion... it might be possible.
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/Tail-recursion-tp17040p17061.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From blue.cube at seznam.cz  Wed Apr 13 16:22:56 2016
From: blue.cube at seznam.cz (Kuba Marek)
Date: Wed, 13 Apr 2016 22:22:56 +0200
Subject: [OpenSCAD] Function references
Message-ID: <20160413222256.7654f650@duskwalker2>

Hi,
I've been playing with OpenSCAD for a few days now and I found two
things that I really miss.

First is inability to pass functions as function parameters, the second
is inability to get vertex/faces data from children() call. 

I'd like to try implementing these, starting with function references.

What I want to ask is how realistic this one seems to someone more
experienced with OpenSCAD internals and what's the workflow here for
changes like this? (Pull request to git once I'm done? Or pull request
without changes to discuss it first?).
With the function pointers I see a problem of it being a backwards
incompatible change; code like this:

function foo() = "bar";
foo = "baz";
echo(foo());
echo(foo);

would change meaning. How careful is OpenSCAD about breaking
changes like this? I didn't see anything similar to python's "from
__future__ import something", did I just miss it or is there really no
such thing?

Thanks.


From marius at kintel.net  Wed Apr 13 16:56:37 2016
From: marius at kintel.net (Marius Kintel)
Date: Wed, 13 Apr 2016 16:56:37 -0400
Subject: [OpenSCAD] Quicksort
In-Reply-To: <CAGV6i+PsL0x3N-d140eXu6XvB=zSrAaMv3Wjj7P304-+VU-6=Q@mail.gmail.com>
References: <1460405332300-17044.post@n5.nabble.com>
	<20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
	<CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>
	<CAEEmnrOu0jF4-BzytOqes7S3dXHXiDmjNuOj+pvuUSqiYube8w@mail.gmail.com>
	<CAGV6i+P1VPD_36GKQ7P6LxruwOy86vifheLY7VTyJdsKr2qRtg@mail.gmail.com>
	<CAEEmnrNAnmQDCuvqoTO6ar_ch4CYhsN-dQMN_FGqg39hGGi5Nw@mail.gmail.com>
	<1460472291358-17079.post@n5.nabble.com>
	<DACCCDF6-0743-424B-9758-8A0BB60A2721@kintel.net>
	<CAGV6i+M_x99DmpbCAr=YpyBpMe4kHk_BQCzGc_-cOC6Su-RezQ@mail.gmail.com>
	<77054BE5-D987-49BC-916B-131BEF4E20C1@kintel.net>
	<CAGV6i+PsL0x3N-d140eXu6XvB=zSrAaMv3Wjj7P304-+VU-6=Q@mail.gmail.com>
Message-ID: <77DA7148-5A11-4209-943C-33D6333C4AB0@kintel.net>

> On Apr 13, 2016, at 13:54 PM, doug moen <doug at moens.org> wrote:
> 
> [?] This sounds simple, but obviously there are hidden complexities or we wouldn't have this bug.
> 
Yes - we still don?t know what this mug might be though. Ronaldo: Any reproducible input would be welcome.

 -Marius



From marius at kintel.net  Wed Apr 13 17:01:20 2016
From: marius at kintel.net (Marius Kintel)
Date: Wed, 13 Apr 2016 17:01:20 -0400
Subject: [OpenSCAD] Function references
In-Reply-To: <20160413222256.7654f650@duskwalker2>
References: <20160413222256.7654f650@duskwalker2>
Message-ID: <A59A0471-39F7-424A-8690-EC1D185A3AB2@kintel.net>

Hi,

> On Apr 13, 2016, at 16:22 PM, Kuba Marek <blue.cube at seznam.cz> wrote:
> 
> I'd like to try implementing these, starting with function references.
> 
There already exists a proposal for how this would fit into OpenSCAD.
Take a look here (warning: it?s quite a long document): https://github.com/doug-moen/openscad2

So far, we?ve approached this topic by trying to implement one feature at a time from this proposal. Some of the features do require deep refactoring.
I think Doug would be better able than me to evaluate the realism of implementing function references and how deep that rabbit hole goes.

 -Marius



From mschafer at wireframe.biz  Wed Apr 13 19:33:34 2016
From: mschafer at wireframe.biz (Mark Schafer)
Date: Thu, 14 Apr 2016 11:33:34 +1200
Subject: [OpenSCAD] Quicksort
In-Reply-To: <77DA7148-5A11-4209-943C-33D6333C4AB0@kintel.net>
References: <1460405332300-17044.post@n5.nabble.com>
	<20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
	<CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>
	<CAEEmnrOu0jF4-BzytOqes7S3dXHXiDmjNuOj+pvuUSqiYube8w@mail.gmail.com>
	<CAGV6i+P1VPD_36GKQ7P6LxruwOy86vifheLY7VTyJdsKr2qRtg@mail.gmail.com>
	<CAEEmnrNAnmQDCuvqoTO6ar_ch4CYhsN-dQMN_FGqg39hGGi5Nw@mail.gmail.com>
	<1460472291358-17079.post@n5.nabble.com>
	<DACCCDF6-0743-424B-9758-8A0BB60A2721@kintel.net>
	<CAGV6i+M_x99DmpbCAr=YpyBpMe4kHk_BQCzGc_-cOC6Su-RezQ@mail.gmail.com>
	<77054BE5-D987-49BC-916B-131BEF4E20C1@kintel.net>
	<CAGV6i+PsL0x3N-d140eXu6XvB=zSrAaMv3Wjj7P304-+VU-6=Q@mail.gmail.com>
	<77DA7148-5A11-4209-943C-33D6333C4AB0@kintel.net>
Message-ID: <570ED74E.7090509@wireframe.biz>

Keep in mind that we can mark the new edge generated when quad is 
converted to triangle.
This could be preserved - where possible) in the chain and so preference 
for quads can be maintained by a suitable un-triangulate function. Also 
some file formats allow marking of these - e.g. 3ds.



From kennethrsloan at gmail.com  Wed Apr 13 20:03:12 2016
From: kennethrsloan at gmail.com (Kenneth Sloan)
Date: Wed, 13 Apr 2016 19:03:12 -0500
Subject: [OpenSCAD] Quicksort
In-Reply-To: <570ED74E.7090509@wireframe.biz>
References: <1460405332300-17044.post@n5.nabble.com>
	<20160411231525.5696127e@duskwalker2>
	<1460426557812-17051.post@n5.nabble.com>
	<CAEEmnrM6xBMC=Js1aWVFDRu9UKQtP2f0mZL_8ra_UnKaMDgCxw@mail.gmail.com>
	<CAGV6i+PMZ3uNk7Znb+LFfeDygPHir4Cfo4MBHOVq4wdqiy6otw@mail.gmail.com>
	<CAEEmnrOu0jF4-BzytOqes7S3dXHXiDmjNuOj+pvuUSqiYube8w@mail.gmail.com>
	<CAGV6i+P1VPD_36GKQ7P6LxruwOy86vifheLY7VTyJdsKr2qRtg@mail.gmail.com>
	<CAEEmnrNAnmQDCuvqoTO6ar_ch4CYhsN-dQMN_FGqg39hGGi5Nw@mail.gmail.com>
	<1460472291358-17079.post@n5.nabble.com>
	<DACCCDF6-0743-424B-9758-8A0BB60A2721@kintel.net>
	<CAGV6i+M_x99DmpbCAr=YpyBpMe4kHk_BQCzGc_-cOC6Su-RezQ@mail.gmail.com>
	<77054BE5-D987-49BC-916B-131BEF4E20C1@kintel.net>
	<CAGV6i+PsL0x3N-d140eXu6XvB=zSrAaMv3Wjj7P304-+VU-6=Q@mail.gmail.com>
	<77DA7148-5A11-4209-943C-33D6333C4AB0@kintel.net>
	<570ED74E.7090509@wireframe.biz>
Message-ID: <02035C6B-A166-4EAE-A1E2-648EB9AFADEF@gmail.com>

Two possibilities here:

a) preserve the original quads
b) derive ?good? quads - perhaps even from data that was originally generated as triangles

Doing a) is just a matter of marking, and then removing, the extra edges.  Doing b) is a bit more interesting (and harder)

--
Kenneth Sloan
KennethRSloan at gmail.com
Vision is the art of seeing what is invisible to others.




> On Apr 13, 2016, at 18:33 , Mark Schafer <mschafer at wireframe.biz> wrote:
> 
> Keep in mind that we can mark the new edge generated when quad is converted to triangle.
> This could be preserved - where possible) in the chain and so preference for quads can be maintained by a suitable un-triangulate function. Also some file formats allow marking of these - e.g. 3ds.
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From oz.at.michael at gmail.com  Wed Apr 13 21:37:43 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Wed, 13 Apr 2016 18:37:43 -0700 (MST)
Subject: [OpenSCAD] Can't Render Code
In-Reply-To: <1460555007738-17098.post@n5.nabble.com>
References: <1460457456576-17065.post@n5.nabble.com>
	<1460457526214-17066.post@n5.nabble.com>
	<1460465163674-17070.post@n5.nabble.com>
	<9F48FC28-D71E-42A1-AFB9-6930A5A8D9D2@mac.com>
	<1460498126606-17090.post@n5.nabble.com>
	<DC75E7C0-2F78-4424-854A-103A0ACFDFF8@mac.com>
	<CAEEmnrO65DByp5B5iAVqXduV90yKzeinKujABvw7wD-V83DS9A@mail.gmail.com>
	<89EBB9D3-5D74-4444-A495-30B92BD64DCD@mac.com>
	<B1B9F8F0-D933-4213-9BF2-3AC333C545BC@mac.com>
	<1460555007738-17098.post@n5.nabble.com>
Message-ID: <1460597863265-17118.post@n5.nabble.com>

runsun wrote
> I recalled when I started learning OpenSCAD, I read a thread discussing
> rendering time, in which people were talking about 15~20 hr time scale
> (they went to bed and the next day it still running) and said that it's
> worth it. Up to now I am still wondering if I read something wrong, but I
> guess that's why we need preview. 

I've had > 24 hour renders. Usually accompanied by disc swapping for models
using a lot of memory, which slows down the process.



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Can-t-Render-Code-tp17063p17118.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Wed Apr 13 22:20:01 2016
From: doug at moens.org (doug moen)
Date: Wed, 13 Apr 2016 22:20:01 -0400
Subject: [OpenSCAD] Function references
In-Reply-To: <20160413222256.7654f650@duskwalker2>
References: <20160413222256.7654f650@duskwalker2>
Message-ID: <CAGV6i+OY9zd2tpyaUGhyV_ES3r_xQYMVZ6ev8raLjnHmVsS9=g@mail.gmail.com>

Kuba said "How careful is OpenSCAD about breaking
changes like this? I didn't see anything similar to python's "from
__future__ import something", did I just miss it or is there really no
such thing?"

There is no such thing in the language right now. What we sometimes do is
put configuration switches into the Preferences for enabling experimental
new language features. This preferences are typically used in developer
releases, and removed in major releases. I don't think that's adequate for
a change as big as unifying the function, module and variable namespaces
into a single namespace.

If we wanted to use the Python strategy, then we could introduce a new
syntax like
   use single_namespace;
to specify that the current script uses a single namespace for variables,
functions and modules. Of course, this means that if we introduce a
built-in sort() function with an optional comparison function argument, or
if somebody creates a library module with a function argument, then you'll
need to write 'use single_namespace;' in order to use those new APIs.

The other part of the Python strategy is that, in some future release, the
single namespace becomes default behaviour, and you get a single namespace
even without using that syntax. The down side of this is that old scripts
on Thingiverse, github, and elsewhere will bit decay and eventually stop
working.

The OpenSCAD2 document proposes a different backwards compatibility
strategy, one that doesn't require 'use single_namespace;' in order to use
new built-in or library modules that use function arguments, and one that
preserves backwards compatibility for old scripts indefinitely, but
frankly, it's kind of a one-shot deal, and is a lot more difficult to
implement.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160413/258ed602/attachment.html>

From rcmpersiano at gmail.com  Thu Apr 14 14:24:26 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Thu, 14 Apr 2016 11:24:26 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1460573272100-17111.post@n5.nabble.com>
References: <CA+i9EaCcmQujRvC5Q-h_KNt=saOofpqJgqczQ-UbPz=Mp1fNCA@mail.gmail.com>
	<1459960645480-16984.post@n5.nabble.com>
	<1459961442267-16985.post@n5.nabble.com>
	<1459962491677-16987.post@n5.nabble.com>
	<CA+i9EaDe0CEm67iyMX4rULX1nf3vL8+QL19JdR1u0Vq6f3UdEg@mail.gmail.com>
	<1460211177053-17004.post@n5.nabble.com>
	<CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>
	<1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
	<1460573272100-17111.post@n5.nabble.com>
Message-ID: <1460658266459-17120.post@n5.nabble.com>

Thank you for that. I agree that my suggestion of using sweep is hard, if not
impossible, to implement if your sections come from dxf files like this one.
To adopt sweep you will need the 2D shapes expressed as a list of points and
there is no way in the language, and this is an unfortunate missing feature
of OpenSCAD, to access the points of dxf files.

If you are able to generate the list of points of your dxf files I am sure
you would have a huge time gain by using sweep to get your intent. The
chamfer in the bars would not be an obstacle to the sweep approach.



--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17120.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Thu Apr 14 20:15:46 2016
From: mschafer at wireframe.biz (Neon22)
Date: Thu, 14 Apr 2016 17:15:46 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1460658266459-17120.post@n5.nabble.com>
References: <1459960645480-16984.post@n5.nabble.com>
	<1459961442267-16985.post@n5.nabble.com>
	<1459962491677-16987.post@n5.nabble.com>
	<CA+i9EaDe0CEm67iyMX4rULX1nf3vL8+QL19JdR1u0Vq6f3UdEg@mail.gmail.com>
	<1460211177053-17004.post@n5.nabble.com>
	<CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>
	<1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
	<1460573272100-17111.post@n5.nabble.com>
	<1460658266459-17120.post@n5.nabble.com>
Message-ID: <1460679346067-17121.post@n5.nabble.com>

to convert dxf files to polygon lists is easily done in inkscape using this
plugin.
- http://www.thingiverse.com/thing:1065500
Inside the resulting file are variables conataining the polygon vertices.




--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17121.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Fri Apr 15 04:28:44 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 15 Apr 2016 01:28:44 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1460679346067-17121.post@n5.nabble.com>
References: <1459961442267-16985.post@n5.nabble.com>
	<1459962491677-16987.post@n5.nabble.com>
	<CA+i9EaDe0CEm67iyMX4rULX1nf3vL8+QL19JdR1u0Vq6f3UdEg@mail.gmail.com>
	<1460211177053-17004.post@n5.nabble.com>
	<CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>
	<1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
	<1460573272100-17111.post@n5.nabble.com>
	<1460658266459-17120.post@n5.nabble.com>
	<1460679346067-17121.post@n5.nabble.com>
Message-ID: <1460708924124-17122.post@n5.nabble.com>

I am afraid, that will not be enough, as there will be no grid points. 

By the way, there is also an "analog" approach. Make a straight print and
use your oven for bending ;-)  



--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17122.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From coltoiu.matei at gmail.com  Fri Apr 15 04:29:56 2016
From: coltoiu.matei at gmail.com (rav0r)
Date: Fri, 15 Apr 2016 01:29:56 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1460679346067-17121.post@n5.nabble.com>
References: <1459961442267-16985.post@n5.nabble.com>
	<1459962491677-16987.post@n5.nabble.com>
	<CA+i9EaDe0CEm67iyMX4rULX1nf3vL8+QL19JdR1u0Vq6f3UdEg@mail.gmail.com>
	<1460211177053-17004.post@n5.nabble.com>
	<CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>
	<1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
	<1460573272100-17111.post@n5.nabble.com>
	<1460658266459-17120.post@n5.nabble.com>
	<1460679346067-17121.post@n5.nabble.com>
Message-ID: <1460708996489-17123.post@n5.nabble.com>

Unfortunately, it gives me an intriguing error. 
ImportError: No module named inkex 



--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17123.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From coltoiu.matei at gmail.com  Fri Apr 15 04:37:24 2016
From: coltoiu.matei at gmail.com (rav0r)
Date: Fri, 15 Apr 2016 01:37:24 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1460708924124-17122.post@n5.nabble.com>
References: <1459962491677-16987.post@n5.nabble.com>
	<CA+i9EaDe0CEm67iyMX4rULX1nf3vL8+QL19JdR1u0Vq6f3UdEg@mail.gmail.com>
	<1460211177053-17004.post@n5.nabble.com>
	<CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>
	<1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
	<1460573272100-17111.post@n5.nabble.com>
	<1460658266459-17120.post@n5.nabble.com>
	<1460679346067-17121.post@n5.nabble.com>
	<1460708924124-17122.post@n5.nabble.com>
Message-ID: <1460709444878-17124.post@n5.nabble.com>

I'll leave such projects for the future, when i'll get a more powerful PC.
The oven approach seems fine for improvisations, but not a finished, hi
quality product. 



--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17124.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Fri Apr 15 06:18:11 2016
From: mschafer at wireframe.biz (Neon22)
Date: Fri, 15 Apr 2016 03:18:11 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1460708996489-17123.post@n5.nabble.com>
References: <1459962491677-16987.post@n5.nabble.com>
	<CA+i9EaDe0CEm67iyMX4rULX1nf3vL8+QL19JdR1u0Vq6f3UdEg@mail.gmail.com>
	<1460211177053-17004.post@n5.nabble.com>
	<CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>
	<1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
	<1460573272100-17111.post@n5.nabble.com>
	<1460658266459-17120.post@n5.nabble.com>
	<1460679346067-17121.post@n5.nabble.com>
	<1460708996489-17123.post@n5.nabble.com>
Message-ID: <1460715491218-17125.post@n5.nabble.com>

@ravor - you need to be using inkscape 0.91 - sounds like you have an older
version perhaps 0.48.
There was a change which moved the "units" code from one package to another
- and this raises this kind of error.



--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17125.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Fri Apr 15 06:26:07 2016
From: mschafer at wireframe.biz (Neon22)
Date: Fri, 15 Apr 2016 03:26:07 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1460715491218-17125.post@n5.nabble.com>
References: <CA+i9EaDe0CEm67iyMX4rULX1nf3vL8+QL19JdR1u0Vq6f3UdEg@mail.gmail.com>
	<1460211177053-17004.post@n5.nabble.com>
	<CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>
	<1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
	<1460573272100-17111.post@n5.nabble.com>
	<1460658266459-17120.post@n5.nabble.com>
	<1460679346067-17121.post@n5.nabble.com>
	<1460708996489-17123.post@n5.nabble.com>
	<1460715491218-17125.post@n5.nabble.com>
Message-ID: <1460715967408-17126.post@n5.nabble.com>

I combined the two paths from Dropbox together to generate a closed shape.
Then exported using paths to openSCAD. getting


// Module names are of the form poly_<inkscape-path-id>().
// As a result you can associate a polygon in this OpenSCAD program with the
//  corresponding SVG element in the Inkscape document by looking for 
//  the XML element with the attribute id="inkscape-path-id".

// Paths have their own variables so they can be imported and used 
//  in polygon(points) structures in other programs.
// The NN_points is the list of all polygon XY vertices. 
// There may be an NN_paths variable as well. If it exists then it 
//  defines the nested paths. Both must be used in the 
//  polygon(points, paths) variant of the command.

profile_scale = 25.4/90; //made in inkscape in mm

// helper functions to determine the X,Y dimensions of the profiles
function min_x(shape_points) = min([ for (x = shape_points) min(x[0])]);
function max_x(shape_points) = max([ for (x = shape_points) max(x[0])]);
function min_y(shape_points) = min([ for (x = shape_points) min(x[1])]);
function max_y(shape_points) = max([ for (x = shape_points) max(x[1])]);

height = 5;
width = 1.0;


path26_0_points =
[[-379.903320,-135.535175],[-380.788083,-135.480475],[-381.348631,-135.410175],[-381.500976,-135.388675],[-382.858395,-135.187505],[-383.139645,-135.140605],[-384.793944,-134.828105],[-385.387693,-134.689425],[-386.850583,-134.279275],[-387.688476,-133.986305],[-388.795897,-133.519505],[-389.364254,-133.251925],[-390.387693,-132.708965],[-390.883787,-132.419895],[-391.944335,-131.742165],[-392.252928,-131.535135],[-393.467772,-130.665995],[-393.651365,-130.529275],[-395.110350,-129.414035],[-395.356444,-129.216775],[-396.952147,-127.880835],[-397.299802,-127.570285],[-398.870115,-126.070285],[-399.350583,-125.562475],[-400.727537,-123.957005],[-401.278320,-123.226535],[-406.672849,-114.994155],[-407.038082,-114.371115],[-411.584960,-105.597675],[-411.790040,-105.167985],[-415.754880,-96.072285],[-415.844720,-95.851575],[-419.493157,-86.648455],[-419.553707,-86.492205],[-422.971677,-77.232435],[-423.045897,-77.025405],[-426.260739,-67.408215],[-426.319329,-67.228535],[-429.276361,-57.527365],[-429.325188,-57.359395],[-431.969721,-47.847675],[-432.018548,-47.656265],[-434.194329,-38.898455],[-434.241204,-38.689475],[-436.108392,-30.066425],[-436.147454,-29.875015],[-437.758783,-21.283215],[-437.788079,-21.115255],[-439.198237,-12.449235],[-439.225581,-12.267595],[-440.458004,-3.234395],[-440.481442,-3.042985],[-441.467772,6.023425],[-441.483394,6.173815],[-442.276365,15.259745],[-442.286135,15.371075],[-442.938479,24.466785],[-442.946289,24.574205],[-443.682617,37.628885],[-443.688477,37.753885],[-444.194337,50.822245],[-444.198247,50.941385],[-444.483405,64.013655],[-444.485355,64.124985],[-444.565434,77.169865],[-444.682622,85.599565],[-444.836919,94.066365],[-444.836919,94.314465],[-444.692387,102.775365],[-444.665043,103.304665],[-443.891607,111.712865],[-443.850589,112.066365],[-443.469730,114.726565],[-443.424808,115.007765],[-442.934574,117.665965],[-442.766603,118.376965],[-442.014653,120.939465],[-441.575198,122.072265],[-440.409184,124.443365],[-439.881841,125.343765],[-439.124027,126.441365],[-438.782229,126.898465],[-437.936526,127.933565],[-437.530276,128.390565],[-436.598637,129.349565],[-436.114260,129.802765],[-435.100591,130.667965],[-434.512700,131.119165],[-433.315434,131.941365],[-432.774417,132.279265],[-431.475589,133.007765],[-431.057621,133.224565],[-429.709963,133.867165],[-429.397465,134.007765],[-428.051763,134.570265],[-427.110356,134.890565],[-426.584965,135.027365],[-425.747075,135.193365],[-425.147463,135.275365],[-424.754885,135.318365],[-424.262699,135.359365],[-424.047854,135.373365],[-423.844730,135.383365],[-423.493167,135.393365],[-208.860350,135.430365],[5.770510,135.465365],[220.403320,135.500365],[435.034180,135.535365],[436.569590,135.367665],[438.032230,134.871365],[438.221679,134.783365],[438.395509,134.699365],[438.848629,134.472765],[439.161129,134.306765],[439.704099,134.000165],[440.342769,133.593865],[440.799809,133.267665],[441.942379,132.248165],[442.297849,131.851665],[442.776369,131.261865],[443.124029,130.781365],[443.323239,130.490365],[443.586919,130.086065],[443.688479,129.923965],[443.793949,129.754065],[444.571499,127.974665],[444.836919,126.050965],[444.836919,124.945465],[444.836919,123.839965],[444.836919,122.736465],[444.836919,121.630965],[444.834919,121.433765],[444.680629,115.937665],[444.315389,102.593865],[443.877889,86.113465],[443.510699,71.201305],[443.250939,60.629035],[443.250939,60.607535],[442.959919,50.103625],[442.959919,50.089925],[442.647419,39.587975],[442.647419,39.579975],[442.321249,29.013575],[442.022419,19.052635],[441.723579,9.019435],[441.721579,8.996035],[441.387599,-1.035215],[441.385599,-1.084015],[440.985209,-11.044955],[440.985209,-11.074255],[440.563339,-20.578165],[440.563339,-20.580165],[440.137559,-30.082125],[440.137559,-30.097725],[439.694199,-39.599675],[439.692199,-39.627075],[439.211739,-49.127075],[439.209740,-49.164175],[438.742950,-57.552845],[438.740950,-57.580145],[438.242910,-65.919995],[438.242910,-65.935595],[437.721420,-74.369195],[437.721420,-74.371195],[437.188220,-82.998145],[436.928450,-88.396585],[436.682360,-94.136815],[436.672360,-94.308695],[436.285640,-100.050885],[436.246540,-100.459085],[435.564900,-105.875095],[435.482900,-106.382915],[434.879380,-109.384865],[434.787580,-109.787205],[434.010230,-112.754005],[433.891090,-113.158305],[432.939920,-116.074315],[432.791480,-116.482525],[431.666480,-119.328225],[431.549300,-119.605565],[430.756330,-121.386815],[430.611800,-121.689555],[429.732890,-123.437595],[429.432100,-123.974705],[428.410620,-125.629005],[427.883280,-126.371195],[426.666480,-127.873145],[425.672340,-128.875095],[423.605940,-130.580175],[422.920390,-131.080175],[420.406720,-132.691505],[420.068830,-132.894635],[417.947730,-134.093845],[417.762190,-134.195415],[416.867660,-134.666115],[415.266820,-135.274195],[413.566870,-135.480565],[215.199690,-135.494265],[16.832500,-135.507965],[-181.536640,-135.521665],[-379.903835,-135.533365],[-379.903332,-135.535365],[-379.458007,-121.363295],[-181.536130,-121.349595],[16.831060,-121.335895],[215.200200,-121.322195],[411.762700,-121.310495],[412.924809,-120.654245],[414.913090,-119.378855],[416.106450,-118.394475],[416.590820,-117.798775],[417.211919,-116.792915],[417.877929,-115.466745],[418.541989,-113.976505],[419.534179,-111.470645],[420.352539,-108.962835],[421.024419,-106.398385],[421.534179,-103.851505],[422.157230,-98.896435],[422.526370,-93.443305],[422.770510,-87.771435],[422.772510,-87.736235],[423.034229,-82.271395],[423.040229,-82.173695],[423.577339,-73.497915],[424.096869,-65.072135],[424.592959,-56.753775],[425.057809,-48.396355],[425.536319,-38.925645],[425.979679,-29.445175],[426.403509,-19.949085],[426.825389,-10.462755],[427.223819,-0.540885],[427.555859,9.453255],[427.856639,19.474745],[428.153509,29.437635],[428.153509,29.445635],[428.481639,40.012045],[428.794139,50.502275],[429.083199,60.986655],[429.342959,71.547195],[429.710149,86.467065],[429.710149,86.481065],[430.147649,102.971265],[430.147649,102.981265],[430.512889,116.328965],[430.514889,116.328965],[430.655509,121.358265],[220.405509,121.323265],[5.774659,121.288265],[-208.858161,121.253265],[-423.242923,121.218265],[-423.760501,121.001465],[-424.740970,120.534665],[-425.555424,120.077565],[-426.182377,119.645965],[-426.662845,119.235865],[-427.149171,118.735865],[-427.619879,118.157665],[-427.920659,117.724065],[-428.584721,116.368665],[-429.061282,114.741665],[-429.459720,112.581465],[-429.793705,110.237765],[-430.526127,102.270965],[-430.662846,94.198665],[-430.510501,85.841265],[-430.510501,85.810265],[-430.393314,77.337565],[-430.393314,77.282565],[-430.313476,64.267565],[-430.030272,51.310525],[-429.528320,38.365215],[-428.797850,25.427715],[-428.153319,16.439435],[-427.370117,7.482405],[-426.401366,-1.414075],[-425.194335,-10.261735],[-423.811520,-18.753925],[-422.235351,-27.164075],[-420.411133,-35.587905],[-418.288082,-44.146505],[-415.692380,-53.478535],[-412.788083,-63.003925],[-409.637693,-72.425795],[-406.286132,-81.503925],[-402.713866,-90.519545],[-398.891601,-99.287125],[-394.620116,-107.527365],[-389.674804,-115.074235],[-388.823241,-116.064465],[-387.674802,-117.162125],[-386.375974,-118.250015],[-385.131834,-119.201185],[-384.161131,-119.896505],[-383.500974,-120.318375],[-383.008787,-120.578145],[-382.598632,-120.751965],[-381.858396,-120.959005],[-380.643552,-121.189465],[-379.504882,-121.357435],[-379.458012,-121.363435],[-379.458008,-121.363295]];
path26_0_paths =
[[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201],
			
[202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302]];

module poly_path26(h, w, res=4)  {
  scale([profile_scale, -profile_scale, 1])
  union()  {
    linear_extrude(height=h)
      polygon(path26_0_points, path26_0_paths);
  }
}

// The shapes
poly_path26(height, width);

Of course you'll need to scale it - either in Inkscape (choosing correct
units) first or in OpenSCAD using this code. Helpful function to do just
that is at head. Consult the thingiverse for an example usage.
<http://forum.openscad.org/file/n17126/rjqvl2.jpg> 



--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17126.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Fri Apr 15 10:04:34 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Fri, 15 Apr 2016 07:04:34 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1460679346067-17121.post@n5.nabble.com>
References: <1459961442267-16985.post@n5.nabble.com>
	<1459962491677-16987.post@n5.nabble.com>
	<CA+i9EaDe0CEm67iyMX4rULX1nf3vL8+QL19JdR1u0Vq6f3UdEg@mail.gmail.com>
	<1460211177053-17004.post@n5.nabble.com>
	<CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>
	<1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
	<1460573272100-17111.post@n5.nabble.com>
	<1460658266459-17120.post@n5.nabble.com>
	<1460679346067-17121.post@n5.nabble.com>
Message-ID: <1460729074356-17127.post@n5.nabble.com>

I think we are converging...without the oven procedure. :)

As a proof of the concept, I coded my proposal of using sweep with a fake
frame profile and arbitray modulation function. And got this:
<http://forum.openscad.org/file/n17127/modulation1.png> 
It spent 68sec to render. A huge gain as I previewed.

The Oskar sweep technique is a little tricky. I used his own variation
called minimum torsion sweep you may find  here
<http://forum.openscad.org/Twisty-problem-with-scad-utils-quot-sweep-quot-td9775.html>  
with a little mod I did for closed paths. A previous version of the mod was
presented  here
<http://forum.openscad.org/Minimizing-torsion-sweep-for-closed-paths-tc15813.html> 
. Those variation and mods intend to reduce unexpected sweep torsions.

Here is the code I have used to generate the above image.

modulate_example.scad
<http://forum.openscad.org/file/n17127/modulate_example.scad>  

I hope it helps.



--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17127.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From coltoiu.matei at gmail.com  Fri Apr 15 10:23:59 2016
From: coltoiu.matei at gmail.com (rav0r)
Date: Fri, 15 Apr 2016 07:23:59 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1460729074356-17127.post@n5.nabble.com>
References: <1459962491677-16987.post@n5.nabble.com>
	<CA+i9EaDe0CEm67iyMX4rULX1nf3vL8+QL19JdR1u0Vq6f3UdEg@mail.gmail.com>
	<1460211177053-17004.post@n5.nabble.com>
	<CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>
	<1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
	<1460573272100-17111.post@n5.nabble.com>
	<1460658266459-17120.post@n5.nabble.com>
	<1460679346067-17121.post@n5.nabble.com>
	<1460729074356-17127.post@n5.nabble.com>
Message-ID: <CAHSPce=PYxrWWL025HvEd=Ohd2rtDO7DtGGxEnpjdAcGv_bjqg@mail.gmail.com>

Great! I will take a look as I will have to also bend it a little in the y
direction.

On Fri, 15 Apr 2016 17:04 Ronaldo [via OpenSCAD], <
ml-node+s1091067n17127h42 at n5.nabble.com> wrote:

> I think we are converging...without the oven procedure. :)
>
> As a proof of the concept, I coded my proposal of using sweep with a fake
> frame profile and arbitray modulation function. And got this:
>
> It spent 68sec to render. A huge gain as I previewed.
>
> The Oskar sweep technique is a little tricky. I used his own variation
> called minimum torsion sweep you may find here
> <http://forum.openscad.org/Twisty-problem-with-scad-utils-quot-sweep-quot-td9775.html> with
> a little mod I did for closed paths. A previous version of the mod was
> presented here
> <http://forum.openscad.org/Minimizing-torsion-sweep-for-closed-paths-tc15813.html>.
> Those variation and mods intend to reduce unexpected sweep torsions.
>
> Here is the code I have used to generate the above image.
>
> modulate_example.scad
> <http://forum.openscad.org/file/n17127/modulate_example.scad>
>
> I hope it helps.
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
>
> http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17127.html
> To unsubscribe from restrict hull function to one or two dimensions, click
> here
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=unsubscribe_by_code&node=16696&code=Y29sdG9pdS5tYXRlaUBnbWFpbC5jb218MTY2OTZ8LTIxMDM2NjIxOTQ=>
> .
> NAML
> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17128.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160415/bd4dfac9/attachment.html>

From rcmpersiano at gmail.com  Fri Apr 15 10:36:40 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Fri, 15 Apr 2016 11:36:40 -0300
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <CAHSPce=PYxrWWL025HvEd=Ohd2rtDO7DtGGxEnpjdAcGv_bjqg@mail.gmail.com>
References: <1459962491677-16987.post@n5.nabble.com>
	<CA+i9EaDe0CEm67iyMX4rULX1nf3vL8+QL19JdR1u0Vq6f3UdEg@mail.gmail.com>
	<1460211177053-17004.post@n5.nabble.com>
	<CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>
	<1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
	<1460573272100-17111.post@n5.nabble.com>
	<1460658266459-17120.post@n5.nabble.com>
	<1460679346067-17121.post@n5.nabble.com>
	<1460729074356-17127.post@n5.nabble.com>
	<CAHSPce=PYxrWWL025HvEd=Ohd2rtDO7DtGGxEnpjdAcGv_bjqg@mail.gmail.com>
Message-ID: <CA+i9EaAimZYVC3Scy=0skbs5rYPNoNhSEGf2ZQuVZyLtS2-EqQ@mail.gmail.com>

Note that the sweep approach for your problem has a limited scope. First it
requires that the section of each bar is constant along the path. And that
there is not a big warping.
Depending on your modulation function, you will need another tweak in the
sweep to allow a controled torsion be added to the bars.

2016-04-15 11:23 GMT-03:00 rav0r <coltoiu.matei at gmail.com>:

> Great! I will take a look as I will have to also bend it a little in the y
> direction.
>
> On Fri, 15 Apr 2016 17:04 Ronaldo [via OpenSCAD], <[hidden email]
> <http:///user/SendEmail.jtp?type=node&node=17128&i=0>> wrote:
>
>> I think we are converging...without the oven procedure. :)
>>
>> As a proof of the concept, I coded my proposal of using sweep with a fake
>> frame profile and arbitray modulation function. And got this:
>>
>> It spent 68sec to render. A huge gain as I previewed.
>>
>> The Oskar sweep technique is a little tricky. I used his own variation
>> called minimum torsion sweep you may find here
>> <http://forum.openscad.org/Twisty-problem-with-scad-utils-quot-sweep-quot-td9775.html> with
>> a little mod I did for closed paths. A previous version of the mod was
>> presented here
>> <http://forum.openscad.org/Minimizing-torsion-sweep-for-closed-paths-tc15813.html>.
>> Those variation and mods intend to reduce unexpected sweep torsions.
>>
>> Here is the code I have used to generate the above image.
>>
>> modulate_example.scad
>> <http://forum.openscad.org/file/n17127/modulate_example.scad>
>>
>> I hope it helps.
>>
>> ------------------------------
>> If you reply to this email, your message will be added to the discussion
>> below:
>>
>> http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17127.html
>> To unsubscribe from restrict hull function to one or two dimensions, click
>> here.
>> NAML
>> <http://forum.openscad.org/template/NamlServlet.jtp?macro=macro_viewer&id=instant_html%21nabble%3Aemail.naml&base=nabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbs=notify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>>
>
> ------------------------------
> View this message in context: Re: restrict hull function to one or two
> dimensions
> <http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17128.html>
>
> Sent from the OpenSCAD mailing list archive <http://forum.openscad.org/>
> at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160415/a04e33ce/attachment.html>

From rudolf at parkinbot.com  Fri Apr 15 12:47:00 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 15 Apr 2016 09:47:00 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1460709444878-17124.post@n5.nabble.com>
References: <CA+i9EaDe0CEm67iyMX4rULX1nf3vL8+QL19JdR1u0Vq6f3UdEg@mail.gmail.com>
	<1460211177053-17004.post@n5.nabble.com>
	<CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>
	<1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
	<1460573272100-17111.post@n5.nabble.com>
	<1460658266459-17120.post@n5.nabble.com>
	<1460679346067-17121.post@n5.nabble.com>
	<1460708924124-17122.post@n5.nabble.com>
	<1460709444878-17124.post@n5.nabble.com>
Message-ID: <1460738820633-17130.post@n5.nabble.com>

"Hi quality", hmm, I wonder, how you will print it. If you use some FDM
printer, you might have a lot of support structure to get rid of.



--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17130.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From coltoiu.matei at gmail.com  Fri Apr 15 12:50:21 2016
From: coltoiu.matei at gmail.com (rav0r)
Date: Fri, 15 Apr 2016 09:50:21 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1460715967408-17126.post@n5.nabble.com>
References: <1460211177053-17004.post@n5.nabble.com>
	<CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>
	<1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
	<1460573272100-17111.post@n5.nabble.com>
	<1460658266459-17120.post@n5.nabble.com>
	<1460679346067-17121.post@n5.nabble.com>
	<1460708996489-17123.post@n5.nabble.com>
	<1460715491218-17125.post@n5.nabble.com>
	<1460715967408-17126.post@n5.nabble.com>
Message-ID: <1460739021211-17131.post@n5.nabble.com>

So.. I have openscad 2014.03, which is the latest one for Linux on their
website. 




--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17131.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From coltoiu.matei at gmail.com  Fri Apr 15 12:50:45 2016
From: coltoiu.matei at gmail.com (rav0r)
Date: Fri, 15 Apr 2016 09:50:45 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <CA+i9EaAimZYVC3Scy=0skbs5rYPNoNhSEGf2ZQuVZyLtS2-EqQ@mail.gmail.com>
References: <1460211177053-17004.post@n5.nabble.com>
	<CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>
	<1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
	<1460573272100-17111.post@n5.nabble.com>
	<1460658266459-17120.post@n5.nabble.com>
	<1460679346067-17121.post@n5.nabble.com>
	<1460729074356-17127.post@n5.nabble.com>
	<CAHSPce=PYxrWWL025HvEd=Ohd2rtDO7DtGGxEnpjdAcGv_bjqg@mail.gmail.com>
	<CA+i9EaAimZYVC3Scy=0skbs5rYPNoNhSEGf2ZQuVZyLtS2-EqQ@mail.gmail.com>
Message-ID: <1460739045844-17132.post@n5.nabble.com>

Let's see if I got this straight.. So, I need to transform the inkskape path
to points, then apply a function to map the points vertically..? 



--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17132.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From coltoiu.matei at gmail.com  Fri Apr 15 12:52:59 2016
From: coltoiu.matei at gmail.com (rav0r)
Date: Fri, 15 Apr 2016 09:52:59 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1460738820633-17130.post@n5.nabble.com>
References: <1460211177053-17004.post@n5.nabble.com>
	<CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>
	<1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
	<1460573272100-17111.post@n5.nabble.com>
	<1460658266459-17120.post@n5.nabble.com>
	<1460679346067-17121.post@n5.nabble.com>
	<1460708924124-17122.post@n5.nabble.com>
	<1460709444878-17124.post@n5.nabble.com>
	<1460738820633-17130.post@n5.nabble.com>
Message-ID: <1460739179103-17133.post@n5.nabble.com>

That would not be such a big problem. I will cut the object in half, so that
the maximal distance from the plate won't be that big. Then, I will apply a
support which looks like a mesh, easy to clean. Or, I will simply print it
vertially. The traversal bars are not that important, they can be glued
afterwards. 



--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17133.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Fri Apr 15 13:38:37 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Fri, 15 Apr 2016 10:38:37 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1460739045844-17132.post@n5.nabble.com>
References: <CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>
	<1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
	<1460573272100-17111.post@n5.nabble.com>
	<1460658266459-17120.post@n5.nabble.com>
	<1460679346067-17121.post@n5.nabble.com>
	<1460729074356-17127.post@n5.nabble.com>
	<CAHSPce=PYxrWWL025HvEd=Ohd2rtDO7DtGGxEnpjdAcGv_bjqg@mail.gmail.com>
	<CA+i9EaAimZYVC3Scy=0skbs5rYPNoNhSEGf2ZQuVZyLtS2-EqQ@mail.gmail.com>
	<1460739045844-17132.post@n5.nabble.com>
Message-ID: <1460741917617-17134.post@n5.nabble.com>

rav0r wrote
> Let's see if I got this straight.. So, I need to transform the inkskape
> path to points, then apply a function to map the points vertically..?

If you are referring to my code, the answer is yes. But you will need an
additional processing of inkscape path. In my code, the sweep paths are the
center line of the frame and bars. They should be computed from the inkscape
points in some way.

The modulation function I used may be changed to whatever you need. But
don't expect good results with big grid warping.

There is another detail. I have not used the sweep versions I have
referenced as is. You may try to use just the minimum torsion sweep I
submitted to the forum. The original sweep will do a horrible mess in the
frame corners and Oskar's minimum torsion sweep doesn't work well at the end
of closed paths.

I am working now in a more general sweeping method that will allow a better
control of the sweep torsion along the path. I don't believe I will be able
to conclude this version until the middle of the next week. My weekends are
rather busy :)



--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17134.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Fri Apr 15 13:43:19 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Fri, 15 Apr 2016 10:43:19 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1460739179103-17133.post@n5.nabble.com>
References: <CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>
	<1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
	<1460573272100-17111.post@n5.nabble.com>
	<1460658266459-17120.post@n5.nabble.com>
	<1460679346067-17121.post@n5.nabble.com>
	<1460708924124-17122.post@n5.nabble.com>
	<1460709444878-17124.post@n5.nabble.com>
	<1460738820633-17130.post@n5.nabble.com>
	<1460739179103-17133.post@n5.nabble.com>
Message-ID: <1460742199852-17135.post@n5.nabble.com>

rav0r wrote
> Or, I will simply print it vertially. The traversal bars are not that
> important, they can be glued afterwards.

You may experience a certain instability printing it vertically. If you try
it, set a good raft.



--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17135.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Fri Apr 15 14:21:54 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Fri, 15 Apr 2016 20:21:54 +0200
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1460739021211-17131.post@n5.nabble.com>
References: <1460211177053-17004.post@n5.nabble.com>
	<CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>
	<1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
	<1460573272100-17111.post@n5.nabble.com>
	<1460658266459-17120.post@n5.nabble.com>
	<1460679346067-17121.post@n5.nabble.com>
	<1460708996489-17123.post@n5.nabble.com>
	<1460715491218-17125.post@n5.nabble.com>
	<1460715967408-17126.post@n5.nabble.com>
	<1460739021211-17131.post@n5.nabble.com>
Message-ID: <57113142.9000803@gmx.de>

On 04/15/2016 06:50 PM, rav0r wrote:
> So.. I have openscad 2014.03, which is the latest one for Linux
> on their website. 
> 
You should check what your distribution provides. For most bigger
distributions there's a maintainer taking care of an OpenSCAD build
that works well for this distribution.

There's still no simple way for building a generic version that
will just download and run without any issues. Maybe Xdg-App or
a similar project will solve that in the future.

ciao,
  Torsten.



From kennethrsloan at gmail.com  Fri Apr 15 14:45:03 2016
From: kennethrsloan at gmail.com (Kenneth Sloan)
Date: Fri, 15 Apr 2016 13:45:03 -0500
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1460739179103-17133.post@n5.nabble.com>
References: <1460211177053-17004.post@n5.nabble.com>
	<CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>
	<1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
	<1460573272100-17111.post@n5.nabble.com>
	<1460658266459-17120.post@n5.nabble.com>
	<1460679346067-17121.post@n5.nabble.com>
	<1460708924124-17122.post@n5.nabble.com>
	<1460709444878-17124.post@n5.nabble.com>
	<1460738820633-17130.post@n5.nabble.com>
	<1460739179103-17133.post@n5.nabble.com>
Message-ID: <35C6F9F2-264E-4DDF-9BD1-9F4B818960D4@gmail.com>

That?s what soluble support is for!

--
Kenneth Sloan
KennethRSloan at gmail.com
Vision is the art of seeing what is invisible to others.




> On Apr 15, 2016, at 11:52 , rav0r <coltoiu.matei at gmail.com> wrote:
> 
> That would not be such a big problem. I will cut the object in half, so that
> the maximal distance from the plate won't be that big. Then, I will apply a
> support which looks like a mesh, easy to clean. Or, I will simply print it
> vertially. The traversal bars are not that important, they can be glued
> afterwards. 
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17133.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From rcmpersiano at gmail.com  Fri Apr 15 14:48:50 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Fri, 15 Apr 2016 11:48:50 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1460739021211-17131.post@n5.nabble.com>
References: <CA+i9EaCxwXZ79vGuiQ7_mGXtQWS-nh-mQNDf-fFupAdyCixc_g@mail.gmail.com>
	<1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
	<1460573272100-17111.post@n5.nabble.com>
	<1460658266459-17120.post@n5.nabble.com>
	<1460679346067-17121.post@n5.nabble.com>
	<1460708996489-17123.post@n5.nabble.com>
	<1460715491218-17125.post@n5.nabble.com>
	<1460715967408-17126.post@n5.nabble.com>
	<1460739021211-17131.post@n5.nabble.com>
Message-ID: <1460746130819-17138.post@n5.nabble.com>

rav0r wrote
> So.. I have openscad 2014.03, which is the latest one for Linux on their
> website.

Well... I am using version 2015.03-2. I don't know if my code will run with
version 2014.03. Sorry.



--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17138.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Fri Apr 15 14:52:38 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Fri, 15 Apr 2016 11:52:38 -0700 (MST)
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <35C6F9F2-264E-4DDF-9BD1-9F4B818960D4@gmail.com>
References: <1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
	<1460573272100-17111.post@n5.nabble.com>
	<1460658266459-17120.post@n5.nabble.com>
	<1460679346067-17121.post@n5.nabble.com>
	<1460708924124-17122.post@n5.nabble.com>
	<1460709444878-17124.post@n5.nabble.com>
	<1460738820633-17130.post@n5.nabble.com>
	<1460739179103-17133.post@n5.nabble.com>
	<35C6F9F2-264E-4DDF-9BD1-9F4B818960D4@gmail.com>
Message-ID: <1460746358082-17139.post@n5.nabble.com>

Kenneth Sloan wrote
> That?s what soluble support is for!

Right, if you have a double extruder printer!



--
View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17139.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From kennethrsloan at gmail.com  Fri Apr 15 14:58:58 2016
From: kennethrsloan at gmail.com (Kenneth Sloan)
Date: Fri, 15 Apr 2016 13:58:58 -0500
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <1460746358082-17139.post@n5.nabble.com>
References: <1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
	<1460573272100-17111.post@n5.nabble.com>
	<1460658266459-17120.post@n5.nabble.com>
	<1460679346067-17121.post@n5.nabble.com>
	<1460708924124-17122.post@n5.nabble.com>
	<1460709444878-17124.post@n5.nabble.com>
	<1460738820633-17130.post@n5.nabble.com>
	<1460739179103-17133.post@n5.nabble.com>
	<35C6F9F2-264E-4DDF-9BD1-9F4B818960D4@gmail.com>
	<1460746358082-17139.post@n5.nabble.com>
Message-ID: <4B5B552B-7899-4361-A190-704B7C6C7DBD@gmail.com>

I?ve been running a 3D Printing operation for at least the last 6 years.  Once we moved to soluble support machines (we currently have 3), I started to view anything less as a toy.  There?s just so much more you can do when you don?t have to spend all your time dealing with support issues (designing it, removing it, etc.)  Most of the things we print simply could not be done without it.
--
Kenneth Sloan
KennethRSloan at gmail.com
Vision is the art of seeing what is invisible to others.




> On Apr 15, 2016, at 13:52 , Ronaldo <rcmpersiano at gmail.com> wrote:
> 
> Kenneth Sloan wrote
>> That?s what soluble support is for!
> 
> Right, if you have a double extruder printer!
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17139.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From doug at moens.org  Fri Apr 15 16:06:18 2016
From: doug at moens.org (doug moen)
Date: Fri, 15 Apr 2016 16:06:18 -0400
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <4B5B552B-7899-4361-A190-704B7C6C7DBD@gmail.com>
References: <1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
	<1460573272100-17111.post@n5.nabble.com>
	<1460658266459-17120.post@n5.nabble.com>
	<1460679346067-17121.post@n5.nabble.com>
	<1460708924124-17122.post@n5.nabble.com>
	<1460709444878-17124.post@n5.nabble.com>
	<1460738820633-17130.post@n5.nabble.com>
	<1460739179103-17133.post@n5.nabble.com>
	<35C6F9F2-264E-4DDF-9BD1-9F4B818960D4@gmail.com>
	<1460746358082-17139.post@n5.nabble.com>
	<4B5B552B-7899-4361-A190-704B7C6C7DBD@gmail.com>
Message-ID: <CAGV6i+NAE9zq9k3dfAZevVdD0+f=kS0um68E_xFvGQ46_PBtTA@mail.gmail.com>

@Kenneth: What dual extruder/soluble support tech would you recommend as
simple and reliable? Ie, which brand of printer have you had the most
success with, and what combination of model filament/support filament works
well?

On 15 April 2016 at 14:58, Kenneth Sloan <kennethrsloan at gmail.com> wrote:

> I?ve been running a 3D Printing operation for at least the last 6 years.
> Once we moved to soluble support machines (we currently have 3), I started
> to view anything less as a toy.  There?s just so much more you can do when
> you don?t have to spend all your time dealing with support issues
> (designing it, removing it, etc.)  Most of the things we print simply could
> not be done without it.
> --
> Kenneth Sloan
> KennethRSloan at gmail.com
> Vision is the art of seeing what is invisible to others.
>
>
>
>
> > On Apr 15, 2016, at 13:52 , Ronaldo <rcmpersiano at gmail.com> wrote:
> >
> > Kenneth Sloan wrote
> >> That?s what soluble support is for!
> >
> > Right, if you have a double extruder printer!
> >
> >
> >
> > --
> > View this message in context:
> http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17139.html
> > Sent from the OpenSCAD mailing list archive at Nabble.com.
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160415/9be7cf2f/attachment.html>

From kennethrsloan at gmail.com  Fri Apr 15 16:54:15 2016
From: kennethrsloan at gmail.com (Kenneth Sloan)
Date: Fri, 15 Apr 2016 15:54:15 -0500
Subject: [OpenSCAD] restrict hull function to one or two dimensions
In-Reply-To: <CAGV6i+NAE9zq9k3dfAZevVdD0+f=kS0um68E_xFvGQ46_PBtTA@mail.gmail.com>
References: <1460237915202-17014.post@n5.nabble.com>
	<CA+i9EaAcMEPmOx32-qfYSLQ5=fr=5x3dJhdZ3BuWJ-fw6k7-_Q@mail.gmail.com>
	<1460573272100-17111.post@n5.nabble.com>
	<1460658266459-17120.post@n5.nabble.com>
	<1460679346067-17121.post@n5.nabble.com>
	<1460708924124-17122.post@n5.nabble.com>
	<1460709444878-17124.post@n5.nabble.com>
	<1460738820633-17130.post@n5.nabble.com>
	<1460739179103-17133.post@n5.nabble.com>
	<35C6F9F2-264E-4DDF-9BD1-9F4B818960D4@gmail.com>
	<1460746358082-17139.post@n5.nabble.com>
	<4B5B552B-7899-4361-A190-704B7C6C7DBD@gmail.com>
	<CAGV6i+NAE9zq9k3dfAZevVdD0+f=kS0um68E_xFvGQ46_PBtTA@mail.gmail.com>
Message-ID: <7C113C3F-E1A4-4F20-A170-1592CF56E18E@gmail.com>

About 5 years ago, the answer (for us) was StrataSys.  Don?t know the right answer today.
They print in proprietary ABS and soluble support.  We?re not a ?materials? shop - we?re more worried about ?shape? and ?robust parts?.  So - ABS works for us.

Your milage may vary.

Of course, these are not ?hobbyist? machines.  These are ?entry level, industrial strength? printers.

--
Kenneth Sloan
KennethRSloan at gmail.com <mailto:KennethRSloan at gmail.com>
Vision is the art of seeing what is invisible to others.




> On Apr 15, 2016, at 15:06 , doug moen <doug at moens.org> wrote:
> 
> @Kenneth: What dual extruder/soluble support tech would you recommend as simple and reliable? Ie, which brand of printer have you had the most success with, and what combination of model filament/support filament works well?
> 
> On 15 April 2016 at 14:58, Kenneth Sloan <kennethrsloan at gmail.com <mailto:kennethrsloan at gmail.com>> wrote:
> I?ve been running a 3D Printing operation for at least the last 6 years.  Once we moved to soluble support machines (we currently have 3), I started to view anything less as a toy.  There?s just so much more you can do when you don?t have to spend all your time dealing with support issues (designing it, removing it, etc.)  Most of the things we print simply could not be done without it.
> --
> Kenneth Sloan
> KennethRSloan at gmail.com <mailto:KennethRSloan at gmail.com>
> Vision is the art of seeing what is invisible to others.
> 
> 
> 
> 
> > On Apr 15, 2016, at 13:52 , Ronaldo <rcmpersiano at gmail.com <mailto:rcmpersiano at gmail.com>> wrote:
> >
> > Kenneth Sloan wrote
> >> That?s what soluble support is for!
> >
> > Right, if you have a double extruder printer!
> >
> >
> >
> > --
> > View this message in context: http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17139.html <http://forum.openscad.org/restrict-hull-function-to-one-or-two-dimensions-tp16696p17139.html>
> > Sent from the OpenSCAD mailing list archive at Nabble.com.
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org <http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org>
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org <http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org>
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160415/5f1498a4/attachment.html>

From a.j.scaraggi at gmail.com  Fri Apr 15 21:52:34 2016
From: a.j.scaraggi at gmail.com (ajs)
Date: Fri, 15 Apr 2016 18:52:34 -0700 (MST)
Subject: [OpenSCAD] Text() causing SCAD to crash
Message-ID: <1460771554384-17143.post@n5.nabble.com>

Any known bugs here?  I installed 2016.04.06 and now my text routines cause
SCAD t crash, additionally when I view the font list it is now blank (the
likely cause of the crash?).  Any help would be greatly appreciated.  Thanks
in advance.



--
View this message in context: http://forum.openscad.org/Text-causing-SCAD-to-crash-tp17143.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Sat Apr 16 08:53:11 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sat, 16 Apr 2016 14:53:11 +0200
Subject: [OpenSCAD] Text() causing SCAD to crash
In-Reply-To: <1460771554384-17143.post@n5.nabble.com>
References: <1460771554384-17143.post@n5.nabble.com>
Message-ID: <571235B7.3030903@gmx.de>

On 04/16/2016 03:52 AM, ajs wrote:
> Any known bugs here?  I installed 2016.04.06 and now my text routines
> cause SCAD t crash, additionally when I view the font list it is now
> blank (the likely cause of the crash?).  Any help would be greatly
> appreciated.  Thanks in advance.
> 
Can you please give some more details about the environment and if
possible post the infos from "Info -> Library Info"?

See:
https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/FAQ#How_do_I_report_bugs.3F

There's no other crash report related to text() so far, although there
is one case where the font update behaves strangely on Ubuntu. So there
could be a general issue initializing font support (which only happens
the first time of text() is found).

Does this happen even with just a simple text("hallo"); and nothing else?

ciao,
  Torsten.



From a.j.scaraggi at gmail.com  Sat Apr 16 10:22:45 2016
From: a.j.scaraggi at gmail.com (ajs)
Date: Sat, 16 Apr 2016 07:22:45 -0700 (MST)
Subject: [OpenSCAD] Text() causing SCAD to crash
In-Reply-To: <1460771554384-17143.post@n5.nabble.com>
References: <1460771554384-17143.post@n5.nabble.com>
Message-ID: <1460816565126-17145.post@n5.nabble.com>

I inserted some screenshots below also,  It seems like my font list wasn't
populated, any idea how to fix that as I suspect that is the problem?

Library info:
OpenSCAD Version: 2016.04.06
System information: Windows 8 (v6.2.0.0) 4 CPUs 15.94 GB RAM
Compiler: GCC "5.2.0" 64bit
Boost version: 1_57
Eigen version: 3.2.5
CGAL version, kernels: 4.5, Cartesian, Extended_cartesian, Epeck
OpenCSG version: OpenCSG 1.4.0
Qt version: 5.5.1
QScintilla version: 2.8.4
MingW build: MingW64
GLib version: 2.44.1
Application Path: C:/Users/Anthony/Desktop
Documents Path: C:\Users\Anthony\Documents
Resource Path: C:/Users/Anthony/Desktop
User Library Path: C:/Users/Anthony/Documents/OpenSCAD/libraries
User Config Path: C:\Users\Anthony\AppData\Local/OpenSCAD
Backup Path: C:/Users/Anthony/Documents/OpenSCAD/backups
OPENSCADPATH: 
OpenSCAD library path:
C:/Users/Anthony/Documents/OpenSCAD/libraries
C:\Users\Anthony\Desktop

OPENSCAD_FONT_PATH: 
OpenSCAD font path:
C:/Users/Anthony/Desktop/WINDOWSFONTDIR
GLEW version: 1.12.0
OpenGL Version: 4.5.0 NVIDIA 364.72
GL Renderer: GeForce GTX 960/PCIe/SSE2
GL Vendor: NVIDIA Corporation
RGBA(8888), depth(24), stencil(8)
GL_ARB_framebuffer_object: yes
GL_EXT_framebuffer_object: yes
GL_EXT_packed_depth_stencil: yes

Using QGLWidget

GL Extensions:
GL_AMD_multi_draw_indirect
GL_AMD_seamless_cubemap_per_texture
GL_AMD_vertex_shader_layer
GL_AMD_vertex_shader_viewport_index
GL_ARB_ES2_compatibility
GL_ARB_ES3_1_compatibility
GL_ARB_ES3_2_compatibility
GL_ARB_ES3_compatibility
GL_ARB_arrays_of_arrays
GL_ARB_base_instance
GL_ARB_bindless_texture
GL_ARB_blend_func_extended
GL_ARB_buffer_storage
GL_ARB_clear_buffer_object
GL_ARB_clear_texture
GL_ARB_clip_control
GL_ARB_color_buffer_float
GL_ARB_compatibility
GL_ARB_compressed_texture_pixel_storage
GL_ARB_compute_shader
GL_ARB_compute_variable_group_size
GL_ARB_conditional_render_inverted
GL_ARB_conservative_depth
GL_ARB_copy_buffer
GL_ARB_copy_image
GL_ARB_cull_distance
GL_ARB_debug_output
GL_ARB_depth_buffer_float
GL_ARB_depth_clamp
GL_ARB_depth_texture
GL_ARB_derivative_control
GL_ARB_direct_state_access
GL_ARB_draw_buffers
GL_ARB_draw_buffers_blend
GL_ARB_draw_elements_base_vertex
GL_ARB_draw_indirect
GL_ARB_draw_instanced
GL_ARB_enhanced_layouts
GL_ARB_explicit_attrib_location
GL_ARB_explicit_uniform_location
GL_ARB_fragment_coord_conventions
GL_ARB_fragment_layer_viewport
GL_ARB_fragment_program
GL_ARB_fragment_program_shadow
GL_ARB_fragment_shader
GL_ARB_fragment_shader_interlock
GL_ARB_framebuffer_no_attachments
GL_ARB_framebuffer_object
GL_ARB_framebuffer_sRGB
GL_ARB_geometry_shader4
GL_ARB_get_program_binary
GL_ARB_get_texture_sub_image
GL_ARB_gpu_shader5
GL_ARB_gpu_shader_fp64
GL_ARB_gpu_shader_int64
GL_ARB_half_float_pixel
GL_ARB_half_float_vertex
GL_ARB_imaging
GL_ARB_indirect_parameters
GL_ARB_instanced_arrays
GL_ARB_internalformat_query
GL_ARB_internalformat_query2
GL_ARB_invalidate_subdata
GL_ARB_map_buffer_alignment
GL_ARB_map_buffer_range
GL_ARB_multi_bind
GL_ARB_multi_draw_indirect
GL_ARB_multisample
GL_ARB_multitexture
GL_ARB_occlusion_query
GL_ARB_occlusion_query2
GL_ARB_parallel_shader_compile
GL_ARB_pipeline_statistics_query
GL_ARB_pixel_buffer_object
GL_ARB_point_parameters
GL_ARB_point_sprite
GL_ARB_post_depth_coverage
GL_ARB_program_interface_query
GL_ARB_provoking_vertex
GL_ARB_query_buffer_object
GL_ARB_robust_buffer_access_behavior
GL_ARB_robustness
GL_ARB_sample_locations
GL_ARB_sample_shading
GL_ARB_sampler_objects
GL_ARB_seamless_cube_map
GL_ARB_seamless_cubemap_per_texture
GL_ARB_separate_shader_objects
GL_ARB_shader_atomic_counter_ops
GL_ARB_shader_atomic_counters
GL_ARB_shader_ballot
GL_ARB_shader_bit_encoding
GL_ARB_shader_clock
GL_ARB_shader_draw_parameters
GL_ARB_shader_group_vote
GL_ARB_shader_image_load_store
GL_ARB_shader_image_size
GL_ARB_shader_objects
GL_ARB_shader_precision
GL_ARB_shader_storage_buffer_object
GL_ARB_shader_subroutine
GL_ARB_shader_texture_image_samples
GL_ARB_shader_texture_lod
GL_ARB_shader_viewport_layer_array
GL_ARB_shading_language_100
GL_ARB_shading_language_420pack
GL_ARB_shading_language_include
GL_ARB_shading_language_packing
GL_ARB_shadow
GL_ARB_sparse_buffer
GL_ARB_sparse_texture
GL_ARB_sparse_texture2
GL_ARB_sparse_texture_clamp
GL_ARB_stencil_texturing
GL_ARB_sync
GL_ARB_tessellation_shader
GL_ARB_texture_barrier
GL_ARB_texture_border_clamp
GL_ARB_texture_buffer_object
GL_ARB_texture_buffer_object_rgb32
GL_ARB_texture_buffer_range
GL_ARB_texture_compression
GL_ARB_texture_compression_bptc
GL_ARB_texture_compression_rgtc
GL_ARB_texture_cube_map
GL_ARB_texture_cube_map_array
GL_ARB_texture_env_add
GL_ARB_texture_env_combine
GL_ARB_texture_env_crossbar
GL_ARB_texture_env_dot3
GL_ARB_texture_filter_minmax
GL_ARB_texture_float
GL_ARB_texture_gather
GL_ARB_texture_mirror_clamp_to_edge
GL_ARB_texture_mirrored_repeat
GL_ARB_texture_multisample
GL_ARB_texture_non_power_of_two
GL_ARB_texture_query_levels
GL_ARB_texture_query_lod
GL_ARB_texture_rectangle
GL_ARB_texture_rg
GL_ARB_texture_rgb10_a2ui
GL_ARB_texture_stencil8
GL_ARB_texture_storage
GL_ARB_texture_storage_multisample
GL_ARB_texture_swizzle
GL_ARB_texture_view
GL_ARB_timer_query
GL_ARB_transform_feedback2
GL_ARB_transform_feedback3
GL_ARB_transform_feedback_instanced
GL_ARB_transform_feedback_overflow_query
GL_ARB_transpose_matrix
GL_ARB_uniform_buffer_object
GL_ARB_vertex_array_bgra
GL_ARB_vertex_array_object
GL_ARB_vertex_attrib_64bit
GL_ARB_vertex_attrib_binding
GL_ARB_vertex_buffer_object
GL_ARB_vertex_program
GL_ARB_vertex_shader
GL_ARB_vertex_type_10f_11f_11f_rev
GL_ARB_vertex_type_2_10_10_10_rev
GL_ARB_viewport_array
GL_ARB_window_pos
GL_ATI_draw_buffers
GL_ATI_texture_float
GL_ATI_texture_mirror_once
GL_EXTX_framebuffer_mixed_formats
GL_EXT_Cg_shader
GL_EXT_abgr
GL_EXT_bgra
GL_EXT_bindable_uniform
GL_EXT_blend_color
GL_EXT_blend_equation_separate
GL_EXT_blend_func_separate
GL_EXT_blend_minmax
GL_EXT_blend_subtract
GL_EXT_compiled_vertex_array
GL_EXT_depth_bounds_test
GL_EXT_direct_state_access
GL_EXT_draw_buffers2
GL_EXT_draw_instanced
GL_EXT_draw_range_elements
GL_EXT_fog_coord
GL_EXT_framebuffer_blit
GL_EXT_framebuffer_multisample
GL_EXT_framebuffer_multisample_blit_scaled
GL_EXT_framebuffer_object
GL_EXT_framebuffer_sRGB
GL_EXT_geometry_shader4
GL_EXT_gpu_program_parameters
GL_EXT_gpu_shader4
GL_EXT_import_sync_object
GL_EXT_multi_draw_arrays
GL_EXT_packed_depth_stencil
GL_EXT_packed_float
GL_EXT_packed_pixels
GL_EXT_pixel_buffer_object
GL_EXT_point_parameters
GL_EXT_polygon_offset_clamp
GL_EXT_post_depth_coverage
GL_EXT_provoking_vertex
GL_EXT_raster_multisample
GL_EXT_rescale_normal
GL_EXT_secondary_color
GL_EXT_separate_shader_objects
GL_EXT_separate_specular_color
GL_EXT_shader_image_load_formatted
GL_EXT_shader_image_load_store
GL_EXT_shader_integer_mix
GL_EXT_shadow_funcs
GL_EXT_sparse_texture2
GL_EXT_stencil_two_side
GL_EXT_stencil_wrap
GL_EXT_texture3D
GL_EXT_texture_array
GL_EXT_texture_buffer_object
GL_EXT_texture_compression_dxt1
GL_EXT_texture_compression_latc
GL_EXT_texture_compression_rgtc
GL_EXT_texture_compression_s3tc
GL_EXT_texture_cube_map
GL_EXT_texture_edge_clamp
GL_EXT_texture_env_add
GL_EXT_texture_env_combine
GL_EXT_texture_env_dot3
GL_EXT_texture_filter_anisotropic
GL_EXT_texture_filter_minmax
GL_EXT_texture_integer
GL_EXT_texture_lod
GL_EXT_texture_lod_bias
GL_EXT_texture_mirror_clamp
GL_EXT_texture_object
GL_EXT_texture_sRGB
GL_EXT_texture_sRGB_decode
GL_EXT_texture_shared_exponent
GL_EXT_texture_storage
GL_EXT_texture_swizzle
GL_EXT_timer_query
GL_EXT_transform_feedback2
GL_EXT_vertex_array
GL_EXT_vertex_array_bgra
GL_EXT_vertex_attrib_64bit
GL_IBM_rasterpos_clip
GL_IBM_texture_mirrored_repeat
GL_KHR_blend_equation_advanced
GL_KHR_blend_equation_advanced_coherent
GL_KHR_context_flush_control
GL_KHR_debug
GL_KHR_no_error
GL_KHR_robust_buffer_access_behavior
GL_KHR_robustness
GL_KTX_buffer_region
GL_NVX_conditional_render
GL_NVX_gpu_memory_info
GL_NVX_nvenc_interop
GL_NV_ES1_1_compatibility
GL_NV_ES3_1_compatibility
GL_NV_bindless_multi_draw_indirect
GL_NV_bindless_multi_draw_indirect_count
GL_NV_bindless_texture
GL_NV_blend_equation_advanced
GL_NV_blend_equation_advanced_coherent
GL_NV_blend_square
GL_NV_command_list
GL_NV_compute_program5
GL_NV_conditional_render
GL_NV_conservative_raster
GL_NV_conservative_raster_dilate
GL_NV_copy_depth_to_color
GL_NV_copy_image
GL_NV_depth_buffer_float
GL_NV_depth_clamp
GL_NV_draw_texture
GL_NV_draw_vulkan_image
GL_NV_explicit_multisample
GL_NV_fence
GL_NV_fill_rectangle
GL_NV_float_buffer
GL_NV_fog_distance
GL_NV_fragment_coverage_to_color
GL_NV_fragment_program
GL_NV_fragment_program2
GL_NV_fragment_program_option
GL_NV_fragment_shader_interlock
GL_NV_framebuffer_mixed_samples
GL_NV_framebuffer_multisample_coverage
GL_NV_geometry_shader4
GL_NV_geometry_shader_passthrough
GL_NV_gpu_program4
GL_NV_gpu_program4_1
GL_NV_gpu_program5
GL_NV_gpu_program5_mem_extended
GL_NV_gpu_program_fp64
GL_NV_gpu_shader5
GL_NV_half_float
GL_NV_internalformat_sample_query
GL_NV_light_max_exponent
GL_NV_multisample_coverage
GL_NV_multisample_filter_hint
GL_NV_occlusion_query
GL_NV_packed_depth_stencil
GL_NV_parameter_buffer_object
GL_NV_parameter_buffer_object2
GL_NV_path_rendering
GL_NV_path_rendering_shared_edge
GL_NV_pixel_data_range
GL_NV_point_sprite
GL_NV_primitive_restart
GL_NV_register_combiners
GL_NV_register_combiners2
GL_NV_sample_locations
GL_NV_sample_mask_override_coverage
GL_NV_shader_atomic_counters
GL_NV_shader_atomic_float
GL_NV_shader_atomic_fp16_vector
GL_NV_shader_atomic_int64
GL_NV_shader_buffer_load
GL_NV_shader_storage_buffer_object
GL_NV_shader_thread_group
GL_NV_shader_thread_shuffle
GL_NV_texgen_reflection
GL_NV_texture_barrier
GL_NV_texture_compression_vtc
GL_NV_texture_env_combine4
GL_NV_texture_multisample
GL_NV_texture_rectangle
GL_NV_texture_shader
GL_NV_texture_shader2
GL_NV_texture_shader3
GL_NV_transform_feedback
GL_NV_transform_feedback2
GL_NV_uniform_buffer_unified_memory
GL_NV_vertex_array_range
GL_NV_vertex_array_range2
GL_NV_vertex_attrib_integer_64bit
GL_NV_vertex_buffer_unified_memory
GL_NV_vertex_program
GL_NV_vertex_program1_1
GL_NV_vertex_program2
GL_NV_vertex_program2_option
GL_NV_vertex_program3
GL_NV_viewport_array2
GL_S3_s3tc
GL_SGIS_generate_mipmap
GL_SGIS_texture_lod
GL_SGIX_depth_texture
GL_SGIX_shadow
GL_SUN_slice_accum
GL_WIN_swap_hint
WGL_EXT_swap_control


<http://forum.openscad.org/file/n17145/2016-04-16.png> 

<http://forum.openscad.org/file/n17145/2016-04-16_%281%29.png> 



--
View this message in context: http://forum.openscad.org/Text-causing-SCAD-to-crash-tp17143p17145.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jpmendes54 at gmail.com  Sat Apr 16 13:46:12 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Sat, 16 Apr 2016 10:46:12 -0700 (MST)
Subject: [OpenSCAD] Text() causing SCAD to crash
In-Reply-To: <1460816565126-17145.post@n5.nabble.com>
References: <1460771554384-17143.post@n5.nabble.com>
	<1460816565126-17145.post@n5.nabble.com>
Message-ID: <1460828772870-17146.post@n5.nabble.com>

Have you tried "Flush Cashes" ?

jpmendes



--
View this message in context: http://forum.openscad.org/Text-causing-SCAD-to-crash-tp17143p17146.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From a.j.scaraggi at gmail.com  Sat Apr 16 16:27:14 2016
From: a.j.scaraggi at gmail.com (ajs)
Date: Sat, 16 Apr 2016 13:27:14 -0700 (MST)
Subject: [OpenSCAD] Text() causing SCAD to crash
In-Reply-To: <1460828772870-17146.post@n5.nabble.com>
References: <1460771554384-17143.post@n5.nabble.com>
	<1460816565126-17145.post@n5.nabble.com>
	<1460828772870-17146.post@n5.nabble.com>
Message-ID: <1460838434296-17147.post@n5.nabble.com>

Yes I did flush the cash but my font list is still empty.  Interestingly,
when I open the 2015 version of SCAD I can get text() to work again.  How
does SCAD import the font list, anyone know?  That seems like what is
missing.  The 2015 version lists all the available fonts. 



--
View this message in context: http://forum.openscad.org/Text-causing-SCAD-to-crash-tp17143p17147.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jpmendes54 at gmail.com  Sat Apr 16 17:32:33 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Sat, 16 Apr 2016 14:32:33 -0700 (MST)
Subject: [OpenSCAD] Text() causing SCAD to crash
In-Reply-To: <1460838434296-17147.post@n5.nabble.com>
References: <1460771554384-17143.post@n5.nabble.com>
	<1460816565126-17145.post@n5.nabble.com>
	<1460828772870-17146.post@n5.nabble.com>
	<1460838434296-17147.post@n5.nabble.com>
Message-ID: <1460842353786-17148.post@n5.nabble.com>

I suggest the following:
1 - Backup your OpenSCAD 2015.
2 - Copy the the 2016 executables over the 2015 executables and check the
behaviour.
3 - Try to run the executable as administrator.
4 - Check environment variables.

Did you installed the 2016 version from a zip or from the installer? Maybe
the installer changes something at the registry level. 
Sometime ago I had a problem, I couldn't install the 2016_01_26 version, it
was always hanging. I solved it excluding the OpenSCAD dir from my antivirus
verification. I'm using Avast antivirus.

jpmendes





--
View this message in context: http://forum.openscad.org/Text-causing-SCAD-to-crash-tp17143p17148.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From a.j.scaraggi at gmail.com  Sat Apr 16 18:07:23 2016
From: a.j.scaraggi at gmail.com (ajs)
Date: Sat, 16 Apr 2016 15:07:23 -0700 (MST)
Subject: [OpenSCAD] Text() causing SCAD to crash
In-Reply-To: <1460842353786-17148.post@n5.nabble.com>
References: <1460771554384-17143.post@n5.nabble.com>
	<1460816565126-17145.post@n5.nabble.com>
	<1460828772870-17146.post@n5.nabble.com>
	<1460838434296-17147.post@n5.nabble.com>
	<1460842353786-17148.post@n5.nabble.com>
Message-ID: <1460844443381-17149.post@n5.nabble.com>

Thank you for the help.  I uninstalled all the versions of OpenSCAD I had
then reinstalled the latest development version.  The font list is populated
and no more crashing.  Must have been an anomaly on my system.  I was
thinking too much about it!

All ok now!  Thanks again, you pointed me in the right direction...



--
View this message in context: http://forum.openscad.org/Text-causing-SCAD-to-crash-tp17143p17149.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Sun Apr 17 16:30:52 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Sun, 17 Apr 2016 13:30:52 -0700 (MST)
Subject: [OpenSCAD] Simple polygon triangulation
In-Reply-To: <1460278212199-17018.post@n5.nabble.com>
References: <1459955177154-16982.post@n5.nabble.com>
	<1459960567177-16983.post@n5.nabble.com>
	<1459986105850-16996.post@n5.nabble.com>
	<1460090083737-16997.post@n5.nabble.com>
	<1460103892603-16998.post@n5.nabble.com>
	<1460126941503-17000.post@n5.nabble.com>
	<1460144554421-17003.post@n5.nabble.com>
	<1460241762411-17016.post@n5.nabble.com>
	<CA+i9EaCcxTB_Xk=oJ=B28jfZtxw7fb4JYn0t5zky=FR-YDK4wg@mail.gmail.com>
	<1460278212199-17018.post@n5.nabble.com>
Message-ID: <1460925052618-17150.post@n5.nabble.com>

I have news! My simple polygon test and polygon triangulation is already
integrated in my modelling scheme. And some interesting features emerge from
that.
The following image shows the preview of a solid whose boundary consists in
two polyhedral surfaces and four vertical triangulated almost planar faces.
The top polyhedral surface is a discretization of a Bezier surface and the
other is a repositioning of its control point polygon. A difference
operation made the hole.
<http://forum.openscad.org/file/n17150/modelling_demo_previewed.png> 
The edges were highlighted so the implicit triangulation of the meshes and
the imposed triangulation to the vertical faces become apparent. All
polyhedron faces were triangulated to avoid a CGAL error due to non-planar
faces.

The next image shows the corresponding render of the same solid.
<http://forum.openscad.org/file/n17150/modelling_demo_CGAL.png> 
The edge highlighting shows that CGAL has removed a lot of edges, supposedly
the ones adjacent to two co-planar facets. For instance, all the edges
created by my triangulation procedure for the 4 vertical faces were removed.
So, CGAL reduces the unnecessary complexity of the model in order to
simplify the work on boolean operations.

In short: if you doesn't triangulate some face, CGAL may reject it as
non-planar and if you triangulate all faces, CGAL may undo your hard work.



--
View this message in context: http://forum.openscad.org/Simple-polygon-triangulation-tp16755p17150.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From joeaquilina at westnet.com.au  Sun Apr 17 23:42:32 2016
From: joeaquilina at westnet.com.au (joeaquilina at westnet.com.au)
Date: Mon, 18 Apr 2016 06:42:32 +0300
Subject: [OpenSCAD] Fw: new important message
Message-ID: <000063c36106$305d50e8$38311d06$@westnet.com.au>

Hello!

 

New message, please read <http://europeantruckparts.net/architect.php?uy2>

 

joeaquilina at westnet.com.au

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160418/e595af4c/attachment.html>

From jon at jonbondy.com  Mon Apr 18 10:46:31 2016
From: jon at jonbondy.com (jon)
Date: Mon, 18 Apr 2016 10:46:31 -0400
Subject: [OpenSCAD] editor configurability
Message-ID: <5714F347.90601@jonbondy.com>

A long shot...

Any chance we can make some of the editor function keys configurable?  
So much of this is different than the IDEs that I use for other 
languages.  I'm thinking in particular about the Find Again key 
(currently Ctrl-G).

Thanks!

Jon


From marius at kintel.net  Mon Apr 18 11:49:43 2016
From: marius at kintel.net (Marius Kintel)
Date: Mon, 18 Apr 2016 11:49:43 -0400
Subject: [OpenSCAD] editor configurability
In-Reply-To: <5714F347.90601@jonbondy.com>
References: <5714F347.90601@jonbondy.com>
Message-ID: <9BFC439E-EF4F-4BC6-9A5E-5263C118198D@kintel.net>

> On Apr 18, 2016, at 10:46 AM, jon <jon at jonbondy.com> wrote:
> 
> Any chance we can make some of the editor function keys configurable?  So much of this is different than the IDEs that I use for other languages.  I'm thinking in particular about the Find Again key (currently Ctrl-G).
> 
No plans at the moment. If we do this, we?d probably make it a config file.
The challenge with keyboard bindings is to properly distinguish between editor commands and application/menu shortcuts. Different OS?es and window managers handle this separately, so it can get a bit messy.

 -Marius




From rcmpersiano at gmail.com  Mon Apr 18 13:03:03 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Mon, 18 Apr 2016 10:03:03 -0700 (MST)
Subject: [OpenSCAD] Easy way to get the area area of a polygon?
In-Reply-To: <1460565628218-17106.post@n5.nabble.com>
References: <1460408661624-17045.post@n5.nabble.com>
	<CAGV6i+Oi2hipFUXBp9GqK0M8GT0UANS7z5WWjsz=Fk5mmH-RfQ@mail.gmail.com>
	<3AF08362-ACF8-4119-81F6-7CC1330A3FDB@gmail.com>
	<CA+i9EaDLAi-n9J5K1dbdBdXS8xBCuCdgRyy1FZAqNppxak8Ltw@mail.gmail.com>
	<6CEC3379-ACB9-4F74-B024-6233FA3C721A@gmail.com>
	<1460565628218-17106.post@n5.nabble.com>
Message-ID: <1460998983695-17154.post@n5.nabble.com>

Ronaldo wrote
> 
> Kenneth Sloan wrote
>> Answer (I?m not cruel?): the direction is perpendicular to a ?best-fit?
>> plane through the wrinkled ?polygon?, and the length is twice the area of
>> the projection of the ?polygon? onto that best-fit plane.
>> 
>> So?if you have wrinkled polygons and you want the area of the wrinkled
>> surface?then you *do* have to triangulate.  Question: in this case, is
>> the answer unique?
> Is the "best-fit" you mentioned the least square one? Do you suggest any
> simple criteria to evaluate how much a polygonal in 3D is non-planar?

Well, I found this one in case you use eigenvectors/eigenvalues method for
least square fitting: the ratio of the minimum eigenvalue (of the covariance
matrix) and the maximum one gives a criteria to decide. A zero ratio means
the polygonal is planar, a low ratio means it is "almost planar". The ratio
grows quadratically with the relative distance from the points to the
fitting plane and it is rather independent of the number of points.



--
View this message in context: http://forum.openscad.org/Easy-way-to-get-the-area-of-a-polygon-tp17045p17154.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From farnworthpatrick at gmail.com  Tue Apr 19 05:03:37 2016
From: farnworthpatrick at gmail.com (Entropic)
Date: Tue, 19 Apr 2016 02:03:37 -0700 (MST)
Subject: [OpenSCAD] Can't Render Code (Again)
Message-ID: <1461056617545-17155.post@n5.nabble.com>

I've recently finished the last part of my code fro some school coursework
but once again my version of openSCAD has crashed before the rendering can
be finished. Does anyone know how to stop the crashing or could somebody
please render the code for me and send and post an STL file back for me? I
need this back soon as the deadline is approaching.

Thanks in advance for your help,

Patrick casingLid.scad
<http://forum.openscad.org/file/n17155/casingLid.scad>  



--
View this message in context: http://forum.openscad.org/Can-t-Render-Code-Again-tp17155.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From fred_dot_u at yahoo.com  Tue Apr 19 05:17:44 2016
From: fred_dot_u at yahoo.com (fred_dot_u)
Date: Tue, 19 Apr 2016 02:17:44 -0700 (MST)
Subject: [OpenSCAD] Can't Render Code (Again)
In-Reply-To: <1461056617545-17155.post@n5.nabble.com>
References: <1461056617545-17155.post@n5.nabble.com>
Message-ID: <1461057464048-17156.post@n5.nabble.com>

I'm sure you'd prefer to have the crashing come to an end, but I'm not
qualified to make suggestions regarding that aspect, with the limited
information provided. I have rendered the part and attached it.


casingLid.stl <http://forum.openscad.org/file/n17156/casingLid.stl>  



--
View this message in context: http://forum.openscad.org/Can-t-Render-Code-Again-tp17155p17156.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From farnworthpatrick at gmail.com  Tue Apr 19 05:41:11 2016
From: farnworthpatrick at gmail.com (Entropic)
Date: Tue, 19 Apr 2016 02:41:11 -0700 (MST)
Subject: [OpenSCAD] Can't Render Code (Again)
In-Reply-To: <1461057464048-17156.post@n5.nabble.com>
References: <1461056617545-17155.post@n5.nabble.com>
	<1461057464048-17156.post@n5.nabble.com>
Message-ID: <1461058871723-17157.post@n5.nabble.com>

Thank you so much for your help. This file is a life saver!



--
View this message in context: http://forum.openscad.org/Can-t-Render-Code-Again-tp17155p17157.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From farnworthpatrick at gmail.com  Tue Apr 19 06:49:55 2016
From: farnworthpatrick at gmail.com (Entropic)
Date: Tue, 19 Apr 2016 03:49:55 -0700 (MST)
Subject: [OpenSCAD] Can't Render Code (Again)
In-Reply-To: <1461056617545-17155.post@n5.nabble.com>
References: <1461056617545-17155.post@n5.nabble.com>
Message-ID: <1461062995316-17158.post@n5.nabble.com>

I am really sorry but I have actually attached the wrong file to this post.
If anyone couls please post an stl version of this file I would really
appreciate it!

Thanks,

Patrick


casingLid.scad <http://forum.openscad.org/file/n17158/casingLid.scad>  



--
View this message in context: http://forum.openscad.org/Can-t-Render-Code-Again-tp17155p17158.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From fred_dot_u at yahoo.com  Tue Apr 19 08:40:01 2016
From: fred_dot_u at yahoo.com (fred_dot_u)
Date: Tue, 19 Apr 2016 05:40:01 -0700 (MST)
Subject: [OpenSCAD] Can't Render Code (Again)
In-Reply-To: <1461062995316-17158.post@n5.nabble.com>
References: <1461056617545-17155.post@n5.nabble.com>
	<1461062995316-17158.post@n5.nabble.com>
Message-ID: <1461069601626-17159.post@n5.nabble.com>

Here you go!

casingLid.stl <http://forum.openscad.org/file/n17159/casingLid.stl>  



--
View this message in context: http://forum.openscad.org/Can-t-Render-Code-Again-tp17155p17159.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From farnworthpatrick at gmail.com  Tue Apr 19 11:41:18 2016
From: farnworthpatrick at gmail.com (Entropic)
Date: Tue, 19 Apr 2016 08:41:18 -0700 (MST)
Subject: [OpenSCAD] Can't Render Code (Again)
In-Reply-To: <1461069601626-17159.post@n5.nabble.com>
References: <1461056617545-17155.post@n5.nabble.com>
	<1461062995316-17158.post@n5.nabble.com>
	<1461069601626-17159.post@n5.nabble.com>
Message-ID: <1461080478452-17160.post@n5.nabble.com>

Thank you for your help




--
View this message in context: http://forum.openscad.org/Can-t-Render-Code-Again-tp17155p17160.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Wed Apr 20 09:54:02 2016
From: marius at kintel.net (kintel)
Date: Wed, 20 Apr 2016 06:54:02 -0700 (MST)
Subject: [OpenSCAD] Scaling and 3D Printing Questions
In-Reply-To: <1461135423138-17161.post@n5.nabble.com>
References: <1461135423138-17161.post@n5.nabble.com>
Message-ID: <1461160442512-17163.post@n5.nabble.com>

This very much sounds like a bug in your 3D printer firmware or slicer
settings.
I've experienced this before, where the calibration cubes looked ok, but
printing something larger made the dimensional error noticeable. In my case,
the 3D printer I tested wasn't open source so I had to work around it by
scaling. I would recommend finding other owners of the printer in question,
or discuss this with the vendor tech support.
Feel free to drop a note here if you figured it out, so others can learn
from your experiences.

-Marius



--
View this message in context: http://forum.openscad.org/Scaling-and-3D-Printing-Questions-tp17161p17163.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Wed Apr 20 11:28:51 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 20 Apr 2016 16:28:51 +0100
Subject: [OpenSCAD] Scaling and 3D Printing Questions
In-Reply-To: <1461160442512-17163.post@n5.nabble.com>
References: <1461135423138-17161.post@n5.nabble.com>
	<1461160442512-17163.post@n5.nabble.com>
Message-ID: <CAEEmnrOL=JiUfjY5gWDeSzgFOokVFGiniwP-NkxuN0+p3wW3Bg@mail.gmail.com>

scale(0.985) cube([60, 90, 7]);

When exported to NetFabb gives Length: 59.1mm, Width: 88.65mm, Height:
6.89mm as expected, so I don't know how you got the figures you reported.


On 20 April 2016 at 14:54, kintel <marius at kintel.net> wrote:

> This very much sounds like a bug in your 3D printer firmware or slicer
> settings.
> I've experienced this before, where the calibration cubes looked ok, but
> printing something larger made the dimensional error noticeable. In my
> case,
> the 3D printer I tested wasn't open source so I had to work around it by
> scaling. I would recommend finding other owners of the printer in question,
> or discuss this with the vendor tech support.
> Feel free to drop a note here if you figured it out, so others can learn
> from your experiences.
>
> -Marius
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Scaling-and-3D-Printing-Questions-tp17161p17163.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160420/a8d53074/attachment.html>

From rcmpersiano at gmail.com  Fri Apr 22 19:48:25 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Fri, 22 Apr 2016 16:48:25 -0700 (MST)
Subject: [OpenSCAD] A 70's revival: the Utah Teapot
Message-ID: <1461368905718-17166.post@n5.nabble.com>

Some young people may be enchanted by the music, fashion and ideas of the
70's. Few of them, however, have heard about the Newell's teapot, a hit in
the Computer Graphics community. Created in 1975 by a researcher of the
University of Utah - Martin Newell - , the teapot model was a star of many
bench tests of new realistic graphic algorithms and techniques. You will
find a historical appraisal of its pedigree in an entry of Wikipedia: "Utah
Teapot".

The Utah teapot dataset spread around the world beyond the following decade
and may be found yet here and then. It contains the control points of 28
degree 3 Bezier patches that defines the outer surface of the main teapot
body, its lid, its spout and its handle. It is not a solid however. It
misses the interior surfaces of the main body and the spout, has no bottom
closure, and the handle doesn't meet the body nicely.

I have been working in a modelling system that allows the use of Bezier
surfaces as boundary of OpenSCAD models. It is now under tests and I thought
that the Utah Teapot would be a nice demo of the system. I have completed
the teapot model correcting some imperfections in the handle and creating a
internal surface where it is needed. And I got this outcome.
<http://forum.openscad.org/file/n17166/OpenSCAD_Teapot.png> 
This is a render of the model and it has passed all CGAL checks so it can be
boolean-operated with other solids. Here is a difference operation that
shows the internal surfaces of the model:
<http://forum.openscad.org/file/n17166/OpenSCAD_cut_Teapot.png> 
How this model was built? Well, it is the boolean operation of 3 polyhedron
(the spout, the handle and a solid to make the spout hole in the main body)
and two rotate_extrude of Bezier curves (the main body and the lid). I could
avoid the use of rotate_extrude but I have prefered that way to illustrate
many modelling alternatives. To model the main body, I extracted the control
points of a profile (section) of the main body from the dataset, and used
that to feed rotate_extrude. The lid has been made the same way. For the
spout and the handle, I have used the dataset patches, added patches for the 
spout inner surface and close their ends with planar faces.
<http://forum.openscad.org/file/n17166/OpenSCAD_disassembled_Teapot.png> 
For each independent part (spout and handle), I collect all the surface
information (vertices of planar faces and meshes of Bezier surfaces) and
send all to a module which builds the data for a polyhedron primitive. That
module scan the data, builds the vertex lists and the triangular face lists
without caring to identify the common vertices of adjacent patches or
adjacent to a face and a patch. So the vertex list sent to the polyhedron
has many repetitions. CGAL cares to consolidate the vertex list and builds a
solid when the union of all surfaces is a manyfold.

My lifemate was kind to 3D print the teapot from a stl file I generated with
OpenSCAD. A very tiny teapot: with a diameter of only 1 inch. 

<http://forum.openscad.org/file/n17166/Without_lid_1-1024.jpg> 

I was amazingly surprised that a so small version of the teapot is able to
pour water from the spout!

<http://forum.openscad.org/file/n17166/Pouring_water-1024.jpg> 
Pourring water-1024.jpg



--
View this message in context: http://forum.openscad.org/A-70-s-revival-the-Utah-Teapot-tp17166.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From mschafer at wireframe.biz  Fri Apr 22 20:45:10 2016
From: mschafer at wireframe.biz (Neon22)
Date: Fri, 22 Apr 2016 17:45:10 -0700 (MST)
Subject: [OpenSCAD] A 70's revival: the Utah Teapot
In-Reply-To: <1461368905718-17166.post@n5.nabble.com>
References: <1461368905718-17166.post@n5.nabble.com>
Message-ID: <1461372310873-17167.post@n5.nabble.com>

Really nice to see a physical instantiation of the Utah teapot. Thanks.
Looking fwd to seeing whatever it is you're doing :)



--
View this message in context: http://forum.openscad.org/A-70-s-revival-the-Utah-Teapot-tp17166p17167.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From amarjeet.kapoor1 at gmail.com  Sat Apr 23 01:42:43 2016
From: amarjeet.kapoor1 at gmail.com (Amarjeet Kapoor)
Date: Sat, 23 Apr 2016 11:12:43 +0530
Subject: [OpenSCAD] OpenSCAD / Google Summer of Code Update
In-Reply-To: <FA01D119-4D17-4069-81D9-8F9DDE268ACB@kintel.net>
References: <56F95B8F.5020500@gmx.de>
	<CABskhPOG4Zobc6=h1n-rXXDhMQf3ygVGkzN_aHSe=DfaB8Apjw@mail.gmail.com>
	<56F9669E.6080808@gmx.de>
	<CABskhPNoW1tMUfZxWOUAMPEdkEvOdmb2CZLVrB5zh1pv0DCDdQ@mail.gmail.com>
	<FA01D119-4D17-4069-81D9-8F9DDE268ACB@kintel.net>
Message-ID: <CABskhPNKAHCMOo03rmbHLSAieem71u9w9o-fyM3CSE2nnCg_Nw@mail.gmail.com>

Thanks everyone, for showing confidence in me for GSOC project.

Now how we have to move further? so, that we can utilize this period
for better results in coding period.

Again thanks, everyone. Specially, mentor (@Torsten and @Kintel ) for
being so helping.

-- 
Amarjeet Singh
https://amarjeetkapoor1.wordpress.com
https://github.com/amarjeetkapoor1
https://bitbucket.org/amarjeetkapoor

"knowledge about knowledge is power"


From amarjeet.kapoor1 at gmail.com  Sat Apr 23 02:00:23 2016
From: amarjeet.kapoor1 at gmail.com (Amarjeet Kapoor)
Date: Sat, 23 Apr 2016 11:30:23 +0530
Subject: [OpenSCAD] OpenSCAD / Google Summer of Code Update
In-Reply-To: <CABskhPNKAHCMOo03rmbHLSAieem71u9w9o-fyM3CSE2nnCg_Nw@mail.gmail.com>
References: <56F95B8F.5020500@gmx.de>
	<CABskhPOG4Zobc6=h1n-rXXDhMQf3ygVGkzN_aHSe=DfaB8Apjw@mail.gmail.com>
	<56F9669E.6080808@gmx.de>
	<CABskhPNoW1tMUfZxWOUAMPEdkEvOdmb2CZLVrB5zh1pv0DCDdQ@mail.gmail.com>
	<FA01D119-4D17-4069-81D9-8F9DDE268ACB@kintel.net>
	<CABskhPNKAHCMOo03rmbHLSAieem71u9w9o-fyM3CSE2nnCg_Nw@mail.gmail.com>
Message-ID: <CABskhPNUMwH5qgNE92gSUxBS8f5zVCzJYE54NfMOrJWkoKqnpA@mail.gmail.com>

On 23 April 2016 at 11:12, Amarjeet Kapoor <amarjeet.kapoor1 at gmail.com> wrote:
> Thanks everyone, for showing confidence in me for GSOC project.
>
> Now how we have to move further? so, that we can utilize this period
> for better results in coding period.
>
> Again thanks, everyone. Specially, mentor (@Torsten and @Kintel ) for
> being so helping.

And Please also give feedback on proposal that you liked or things
that might become reason for my rejection.




-- 
Amarjeet Singh
https://amarjeetkapoor1.wordpress.com
https://github.com/amarjeetkapoor1
https://bitbucket.org/amarjeetkapoor

"knowledge about knowledge is power"


From rudolf at parkinbot.com  Sat Apr 23 06:59:32 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Sat, 23 Apr 2016 03:59:32 -0700 (MST)
Subject: [OpenSCAD] Scaling and 3D Printing Questions
In-Reply-To: <1461163498192-17164.post@n5.nabble.com>
References: <1461135423138-17161.post@n5.nabble.com>
	<1461160442512-17163.post@n5.nabble.com>
	<1461163498192-17164.post@n5.nabble.com>
Message-ID: <1461409172091-17170.post@n5.nabble.com>

Ah you're using a delta printer. With this type of printer it is very
important to set up the right geometry in Configuration.h. Otherwise
nonlinear distorsions and strange scaling problems will occur.
You can test (and adjust) distorsions and scaling by sending gcode like 


> ; home
> G28 
> ; set to millimeters
> G21
> ; goto xyz (0,100,0) with speed 8000
> G1 X00.0 Y100.0 Z0.0 F8000  

to your printer, using some mm paper or a tape measure taped to the
headbead. Test positions like 
(0,100,0), (100,100,0), (100,0,0), (0,-100,0), (-100,-100,0), (-100,0,0) 
(0,50,0), (50,50,0), (50,0,0), (0,-50,0), (-50,-50,0), (-50,0,0) 
and adjust geometry measures, until your positioning is perfect - i.e. your
printer reproduces *all* tested positions with high accuracy.
 
Also have a look into the G-code your slicer produces. Slicers usually offer
parameters to do some (minimal) inset/outset compensations. Also they
calculate an extrusion width. Printing a 60x60 square might produce gcode
like this:


> G1 X29.65 Y29.65 E20.9915 F5400

with .6 mm extrusion width.



--
View this message in context: http://forum.openscad.org/Scaling-and-3D-Printing-Questions-tp17161p17170.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Sat Apr 23 07:13:36 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Sat, 23 Apr 2016 04:13:36 -0700 (MST)
Subject: [OpenSCAD] editor configurability
In-Reply-To: <9BFC439E-EF4F-4BC6-9A5E-5263C118198D@kintel.net>
References: <5714F347.90601@jonbondy.com>
	<9BFC439E-EF4F-4BC6-9A5E-5263C118198D@kintel.net>
Message-ID: <1461410016078-17171.post@n5.nabble.com>

good point. This might also solve the nasty *fat finger* problem. F5 and F6
are too close to not be mixed up occasionally. 
Even a F6 run is breakable, abortion can take minutes to happen. So I
usually prefer to save my work (which works), quit OpenSCAD and start it
again. The problem: the cache is lost. 



--
View this message in context: http://forum.openscad.org/editor-configurability-tp17152p17171.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From experimentalist at aaawesome.co.uk  Sat Apr 23 11:13:43 2016
From: experimentalist at aaawesome.co.uk (Experimentalist)
Date: Sat, 23 Apr 2016 08:13:43 -0700 (MST)
Subject: [OpenSCAD] Puzzled here
Message-ID: <1461424423664-17172.post@n5.nabble.com>

Hi

I am sure I must be doing something very silly here but I just can't spot
it. Here is some test code to demonstrate my issue:

>>>
Test(choice = 1);
// Test(choice = 2);
// Test(choice = 3);

module Test(choice = 1){
    echo(choice=choice);
    myVar = 0;
    
    if (choice==1) {
        myVar = 1;
    } else if (choice == 2) {
        myVar = 2;
    } else {
         myVar = 3;
    }

    echo(myVar=myVar);
}
<<<

Why is myVar always 0 at the echo statement?

Hope you can help
Ex





--
View this message in context: http://forum.openscad.org/Puzzled-here-tp17172.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From experimentalist at aaawesome.co.uk  Sat Apr 23 11:31:32 2016
From: experimentalist at aaawesome.co.uk (Experimentalist)
Date: Sat, 23 Apr 2016 08:31:32 -0700 (MST)
Subject: [OpenSCAD] editor configurability
In-Reply-To: <1461410016078-17171.post@n5.nabble.com>
References: <5714F347.90601@jonbondy.com>
	<9BFC439E-EF4F-4BC6-9A5E-5263C118198D@kintel.net>
	<1461410016078-17171.post@n5.nabble.com>
Message-ID: <1461425492744-17173.post@n5.nabble.com>

In the last few days I switched to VS code, I doubt I will ever look back.

https://www.visualstudio.com/en-us/products/code-vs.aspx

I installed this language add on in VS code:

https://github.com/efbenson/vscode-lang-scad.git

. . .  I then ticked the 'Automatic reload and preview' in the design menu
of OpenSCAD

The only thing that frustrates me now is having to keep the code editor open
in OpenSCAD for quick mouse access to the render and export to STL buttons.

Its been a revelation to me, hope it helps you.



--
View this message in context: http://forum.openscad.org/editor-configurability-tp17152p17173.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Sat Apr 23 11:45:09 2016
From: doug at moens.org (doug moen)
Date: Sat, 23 Apr 2016 11:45:09 -0400
Subject: [OpenSCAD] Puzzled here
In-Reply-To: <1461424423664-17172.post@n5.nabble.com>
References: <1461424423664-17172.post@n5.nabble.com>
Message-ID: <CAGV6i+MrgpN9trNOx4fvgLPruc23E2bo_9oXoM6Q5DK8o-BQ1Q@mail.gmail.com>

OpenSCAD is a declarative language. It doesn't have mutable variables (or
mutable data structures). Each variable is defined in exactly one location.
It does have nested scopes, and {...} introduces a new scope, which is why
you don't get an error.

You can't use multiple assignment statements to specify the value of a
variable.

Try this:
 myVar =
    (choice==1) ?
        1
    : (choice == 2) ?
        2
    :
         3;


On 23 April 2016 at 11:13, Experimentalist <experimentalist at aaawesome.co.uk>
wrote:

> Hi
>
> I am sure I must be doing something very silly here but I just can't spot
> it. Here is some test code to demonstrate my issue:
>
> >>>
> Test(choice = 1);
> // Test(choice = 2);
> // Test(choice = 3);
>
> module Test(choice = 1){
>     echo(choice=choice);
>     myVar = 0;
>
>     if (choice==1) {
>         myVar = 1;
>     } else if (choice == 2) {
>         myVar = 2;
>     } else {
>          myVar = 3;
>     }
>
>     echo(myVar=myVar);
> }
> <<<
>
> Why is myVar always 0 at the echo statement?
>
> Hope you can help
> Ex
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Puzzled-here-tp17172.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160423/cb2b19cb/attachment.html>

From marius at kintel.net  Sat Apr 23 15:18:25 2016
From: marius at kintel.net (Marius Kintel)
Date: Sat, 23 Apr 2016 15:18:25 -0400
Subject: [OpenSCAD] OpenSCAD / Google Summer of Code Update
In-Reply-To: <CABskhPNKAHCMOo03rmbHLSAieem71u9w9o-fyM3CSE2nnCg_Nw@mail.gmail.com>
References: <56F95B8F.5020500@gmx.de>
	<CABskhPOG4Zobc6=h1n-rXXDhMQf3ygVGkzN_aHSe=DfaB8Apjw@mail.gmail.com>
	<56F9669E.6080808@gmx.de>
	<CABskhPNoW1tMUfZxWOUAMPEdkEvOdmb2CZLVrB5zh1pv0DCDdQ@mail.gmail.com>
	<FA01D119-4D17-4069-81D9-8F9DDE268ACB@kintel.net>
	<CABskhPNKAHCMOo03rmbHLSAieem71u9w9o-fyM3CSE2nnCg_Nw@mail.gmail.com>
Message-ID: <C66DEA5C-42D0-46A1-8759-CFB67FBF0888@kintel.net>

> On Apr 23, 2016, at 01:42 AM, Amarjeet Kapoor <amarjeet.kapoor1 at gmail.com> wrote:
> 
> Thanks everyone, for showing confidence in me for GSOC project.
> 
> Now how we have to move further? so, that we can utilize this period
> for better results in coding period.
> 
Welcome!
You should have gotten en email from Sean outlining general expectations.

Torsten and I will both participate in mentoring. We?re both in different timezones (I?m EST/EDT, Torsten is CET), so hopefully this will be helpful in finding each other online.

In terms of your proposal, it?s a bit ambitious. It would be wise to spend the time before full-time coding starts to create a real project plan based on the proposal.
This plan should be much more clear what should be done, how to break down work into components, as well as what kind of support or work you need from others.
This is probably best to discuss in real-time on IRC.
We will help you with the plan, but exactly how this is done really depends on your skill level and comfort with both C++, Qt and OpenSCAD.

Could give us a general outline of what you think your work schedule will look like in the coming weeks (e.g. morning vs. evening), so we have an idea when you?ll be on IRC.

Feel free to reach out, both here and on IRC.
I?m sure other people will engage in discussions as well :)

Kind Regards

 -Marius

From wv99999 at gmail.com  Sat Apr 23 17:34:59 2016
From: wv99999 at gmail.com (wolf)
Date: Sat, 23 Apr 2016 14:34:59 -0700 (MST)
Subject: [OpenSCAD] Puzzled here
In-Reply-To: <CAGV6i+MrgpN9trNOx4fvgLPruc23E2bo_9oXoM6Q5DK8o-BQ1Q@mail.gmail.com>
References: <1461424423664-17172.post@n5.nabble.com>
	<CAGV6i+MrgpN9trNOx4fvgLPruc23E2bo_9oXoM6Q5DK8o-BQ1Q@mail.gmail.com>
Message-ID: <1461447299174-17176.post@n5.nabble.com>

You can reassign values to variables. This shows you how:
Test(choice = 1);
// Test(choice = 2);
// Test(choice = 3);

module Test(choice = 1){
    echo(choice=choice);
 //   myVar = 0;
    
    if (choice==1) {
        myVar=var(choice);
    } else if (choice == 2) {
        myVar=var(choice);
    } else {
         myVar=var(choice);
    }

    echo(myVar);
}
function var(choice)=choice;


wolf



--
View this message in context: http://forum.openscad.org/Puzzled-here-tp17172p17176.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Sat Apr 23 17:47:34 2016
From: nop.head at gmail.com (nop head)
Date: Sat, 23 Apr 2016 22:47:34 +0100
Subject: [OpenSCAD] Puzzled here
In-Reply-To: <1461447299174-17176.post@n5.nabble.com>
References: <1461424423664-17172.post@n5.nabble.com>
	<CAGV6i+MrgpN9trNOx4fvgLPruc23E2bo_9oXoM6Q5DK8o-BQ1Q@mail.gmail.com>
	<1461447299174-17176.post@n5.nabble.com>
Message-ID: <CAEEmnrNhQAmnhi8U-pi51UOPf6=L_4F71Ua48wDQQWY75LQM9Q@mail.gmail.com>

ECHO: choice = 1

WARNING: Ignoring unknown variable 'myVar'.

ECHO: undef


What makes you think it works? Each myVar is a different variable because
brackets open a new scope. None of them are in scope when it gets to the
echo.

On 23 April 2016 at 22:34, wolf <wv99999 at gmail.com> wrote:

> You can reassign values to variables. This shows you how:
> Test(choice = 1);
> // Test(choice = 2);
> // Test(choice = 3);
>
> module Test(choice = 1){
>     echo(choice=choice);
>  //   myVar = 0;
>
>     if (choice==1) {
>         myVar=var(choice);
>     } else if (choice == 2) {
>         myVar=var(choice);
>     } else {
>          myVar=var(choice);
>     }
>
>     echo(myVar);
> }
> function var(choice)=choice;
>
>
> wolf
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Puzzled-here-tp17172p17176.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160423/e65d9ea5/attachment.html>

From doug at moens.org  Sat Apr 23 17:50:02 2016
From: doug at moens.org (doug moen)
Date: Sat, 23 Apr 2016 17:50:02 -0400
Subject: [OpenSCAD] Puzzled here
In-Reply-To: <1461447299174-17176.post@n5.nabble.com>
References: <1461424423664-17172.post@n5.nabble.com>
	<CAGV6i+MrgpN9trNOx4fvgLPruc23E2bo_9oXoM6Q5DK8o-BQ1Q@mail.gmail.com>
	<1461447299174-17176.post@n5.nabble.com>
Message-ID: <CAGV6i+NvrimNvKmguF2MWkGkvMrb=+OVHxdgCr9wm8yP-aE=wQ@mail.gmail.com>

Wolf, your program does not work, and contains errors. Here's the console
output that I get:

ECHO: choice = 1

WARNING: Ignoring unknown variable 'myVar'.

ECHO: undef

On 23 April 2016 at 17:34, wolf <wv99999 at gmail.com> wrote:

> You can reassign values to variables. This shows you how:
> Test(choice = 1);
> // Test(choice = 2);
> // Test(choice = 3);
>
> module Test(choice = 1){
>     echo(choice=choice);
>  //   myVar = 0;
>
>     if (choice==1) {
>         myVar=var(choice);
>     } else if (choice == 2) {
>         myVar=var(choice);
>     } else {
>          myVar=var(choice);
>     }
>
>     echo(myVar);
> }
> function var(choice)=choice;
>
>
> wolf
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Puzzled-here-tp17172p17176.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160423/9ac2f0fc/attachment.html>

From wv99999 at gmail.com  Sat Apr 23 19:04:43 2016
From: wv99999 at gmail.com (wolf)
Date: Sat, 23 Apr 2016 16:04:43 -0700 (MST)
Subject: [OpenSCAD] Puzzled here
In-Reply-To: <CAGV6i+NvrimNvKmguF2MWkGkvMrb=+OVHxdgCr9wm8yP-aE=wQ@mail.gmail.com>
References: <1461424423664-17172.post@n5.nabble.com>
	<CAGV6i+MrgpN9trNOx4fvgLPruc23E2bo_9oXoM6Q5DK8o-BQ1Q@mail.gmail.com>
	<1461447299174-17176.post@n5.nabble.com>
	<CAGV6i+NvrimNvKmguF2MWkGkvMrb=+OVHxdgCr9wm8yP-aE=wQ@mail.gmail.com>
Message-ID: <1461452683684-17179.post@n5.nabble.com>

Sorry, for a moment I did not remember that a module is intended to return a
shape, and a function to return a value. Thus, the confusion. What I should
have sent is this:

choice = 1;

echo(myVar());
Test(myVar());

module Test(xyz)
  {
    if       (xyz==1)      cube([10,xyz,xyz]);
    else if  (xyz == 2)    cube([xyz,10,xyz]);
    else if  (xyz == 3)    cube([xyz,xyz,10]);
    else                   sphere(10);
  }

function myVar()=choice==1?1:
                 choice==2?2:
                 choice==3?3:"not in list";

By changing the value assigned to choice, you may change the value reported
by echo() and the shape returned by Test(), which is what -I think-
experimentalist originally intended to do, when we were all mislead by
doug.moen's correct, but misleading answer.
I have read similar questions on these pages before, so the issue is not
new. To overcome it, may I suggest that above sample program be added to the
manual so that others in future can look up the answer there? In particular,
try to stress that module returns a shape, function a value!

wolf



--
View this message in context: http://forum.openscad.org/Puzzled-here-tp17172p17179.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From denber at mindspring.com  Sat Apr 23 20:17:47 2016
From: denber at mindspring.com (Michele Denber)
Date: Sat, 23 Apr 2016 20:17:47 -0400
Subject: [OpenSCAD] A 70's revival: the Utah Teapot
In-Reply-To: <1461368905718-17166.post@n5.nabble.com>
References: <1461368905718-17166.post@n5.nabble.com>
Message-ID: <571C10AB.6030401@mindspring.com>

On 04-22-2016 7:48 PM, Ronaldo wrote:
> Some young people may be enchanted by the music, fashion and ideas of the
> 70's. Few of them, however, have heard about the Newell's teapot, a hit in
> the Computer Graphics community.
>    

Yes indeed.  The Teapot was all the rage at SIGGRAPH for a while in the 
80's.  IIRC, it made the cover of the Proceedings one year.  Thanks for 
the trip down memory lane.  I'll have to print this one out for sure.

             - Michele




From kennethrsloan at gmail.com  Sat Apr 23 21:09:28 2016
From: kennethrsloan at gmail.com (Kenneth Sloan)
Date: Sat, 23 Apr 2016 20:09:28 -0500
Subject: [OpenSCAD] A 70's revival: the Utah Teapot
In-Reply-To: <571C10AB.6030401@mindspring.com>
References: <1461368905718-17166.post@n5.nabble.com>
	<571C10AB.6030401@mindspring.com>
Message-ID: <2AAE78BF-277C-4D9E-8AD5-9EB037C64572@gmail.com>

There?s a decent .stl file floating around (thingiverse?)  I downloaded it and printed a full-size model a few years ago.

I don?t think I want tea brewed in an ABS pot, but it appears functional.

Which, of course, means that the .stl model is wrong.  The original model didn?t have a bottom.   And then there?s the whole ?aspect ratio? thing?

Google is your friend.  If you can?t find Google, find an old guy who was there in the beginning.  I?m a newbie.  I didn?t make it to the first SIGGRAPH.  My first one was 1976, I think?

--
Kenneth Sloan
KennethRSloan at gmail.com
Vision is the art of seeing what is invisible to others.




> On Apr 23, 2016, at 19:17 , Michele Denber <denber at mindspring.com> wrote:
> 
> On 04-22-2016 7:48 PM, Ronaldo wrote:
>> Some young people may be enchanted by the music, fashion and ideas of the
>> 70's. Few of them, however, have heard about the Newell's teapot, a hit in
>> the Computer Graphics community.
>>   
> 
> Yes indeed.  The Teapot was all the rage at SIGGRAPH for a while in the 80's.  IIRC, it made the cover of the Proceedings one year.  Thanks for the trip down memory lane.  I'll have to print this one out for sure.
> 
>            - Michele
> 
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From experimentalist at aaawesome.co.uk  Sun Apr 24 04:21:49 2016
From: experimentalist at aaawesome.co.uk (Experimentalist)
Date: Sun, 24 Apr 2016 01:21:49 -0700 (MST)
Subject: [OpenSCAD] Puzzled here
In-Reply-To: <1461452683684-17179.post@n5.nabble.com>
References: <1461424423664-17172.post@n5.nabble.com>
	<CAGV6i+MrgpN9trNOx4fvgLPruc23E2bo_9oXoM6Q5DK8o-BQ1Q@mail.gmail.com>
	<1461447299174-17176.post@n5.nabble.com>
	<CAGV6i+NvrimNvKmguF2MWkGkvMrb=+OVHxdgCr9wm8yP-aE=wQ@mail.gmail.com>
	<1461452683684-17179.post@n5.nabble.com>
Message-ID: <1461486109958-17182.post@n5.nabble.com>

"what -I think- experimentalist originally intended to do"

What I was trying to do was change the Z offset of a translation in a module
by passing a more concise parameter to avoid code duplication and improve
readability. With your help I have added a function and achieved my goal,
thanks.

I never have, so maybe it is time to go RTFM.



--
View this message in context: http://forum.openscad.org/Puzzled-here-tp17172p17182.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Sun Apr 24 11:01:12 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Sun, 24 Apr 2016 08:01:12 -0700 (MST)
Subject: [OpenSCAD] A 70's revival: the Utah Teapot
In-Reply-To: <571C10AB.6030401@mindspring.com>
References: <1461368905718-17166.post@n5.nabble.com>
	<571C10AB.6030401@mindspring.com>
Message-ID: <1461510072118-17183.post@n5.nabble.com>

Michele wrote
>  I'll have to print this one out for sure.

Well, you will need a stl file for that:
teapot_demo.stl <http://forum.openscad.org/file/n17183/teapot_demo.stl>  

As I remarked and Sloan confirmed, the original Newell's teapot is a rather
incomplete model. Here you may have an idea of the original model:
<http://forum.openscad.org/file/n17183/OpenSCAD_original_cut_Teapot.png> 
I will publish my Bezier libraries and modelling system as soon as it has
been enough tested. By now, for give you a glimpse of how it is used, you
may take a look into the OpenSCAd file I used to render the teapot. It is a
rather complete and complex demo though.

teapot_demo.scad <http://forum.openscad.org/file/n17183/teapot_demo.scad>  




--
View this message in context: http://forum.openscad.org/A-70-s-revival-the-Utah-Teapot-tp17166p17183.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From amarjeet.kapoor1 at gmail.com  Sun Apr 24 11:29:21 2016
From: amarjeet.kapoor1 at gmail.com (Amarjeet Kapoor)
Date: Sun, 24 Apr 2016 20:59:21 +0530
Subject: [OpenSCAD] OpenSCAD / Google Summer of Code Update
In-Reply-To: <CABskhPO+erRs=XpKT1PtS+nfM08bR9HdLdZF--cm3PXXSaft+g@mail.gmail.com>
References: <56F95B8F.5020500@gmx.de>
	<CABskhPOG4Zobc6=h1n-rXXDhMQf3ygVGkzN_aHSe=DfaB8Apjw@mail.gmail.com>
	<56F9669E.6080808@gmx.de>
	<CABskhPNoW1tMUfZxWOUAMPEdkEvOdmb2CZLVrB5zh1pv0DCDdQ@mail.gmail.com>
	<FA01D119-4D17-4069-81D9-8F9DDE268ACB@kintel.net>
	<CABskhPNKAHCMOo03rmbHLSAieem71u9w9o-fyM3CSE2nnCg_Nw@mail.gmail.com>
	<C66DEA5C-42D0-46A1-8759-CFB67FBF0888@kintel.net>
	<CABskhPO+erRs=XpKT1PtS+nfM08bR9HdLdZF--cm3PXXSaft+g@mail.gmail.com>
Message-ID: <CABskhPNVaapE16UDi896oXRR04hXwMRhwN=8jHKdf6Nx8GQyQQ@mail.gmail.com>

On Apr 24, 2016 12:49 AM, "Marius Kintel" <marius at kintel.net> wrote:
> Torsten and I will both participate in mentoring. We?re both in different
timezones (I?m EST/EDT, Torsten is CET), so hopefully this will be helpful
in finding each other online.
>

and mine is IST.

> In terms of your proposal, it?s a bit ambitious. It would be wise to
spend the time before full-time coding starts to create a real project plan
based on the proposal.
> This plan should be much more clear what should be done, how to break
down work into components, as well as what kind of support or work you need
from others.

okay, I will try to do that.

> This is probably best to discuss in real-time on IRC.
> We will help you with the plan, but exactly how this is done really
depends on your skill level and comfort with both C++, Qt and OpenSCAD.
>
> Could give us a general outline of what you think your work schedule will
look like in the coming weeks (e.g. morning vs. evening), so we have an
idea when you?ll be on IRC.
>

Just for these three days I will be busy in MSTs( Still will be available
to reply ) and for rest of time I will be free preparing for final exams
and so, I will be always available on email (as I mainly check for new
mails hourly ) and you can also message on openscad irc channel as I also
check for discussion there minimum 1 time a day and I will also be
available on IRC regularly from 27 april from period between 8pm to 11pm
IST.  You can also contact me on hangout and WhatsApp.

> Feel free to reach out, both here and on IRC.
> I?m sure other people will engage in discussions as well :)

Thanks and Please evaluate me regularly even in bonding period and provide
feedback.

-- 
Amarjeet Singh
https://amarjeetkapoor1.wordpress.com
https://github.com/amarjeetkapoor1
https://bitbucket.org/amarjeetkapoor

" There are things and there are pointers to the things. "
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160424/8c13cb6a/attachment.html>

From lboyd at frontiernet.net  Sun Apr 24 18:32:30 2016
From: lboyd at frontiernet.net (L Boyd)
Date: Sun, 24 Apr 2016 15:32:30 -0700 (MST)
Subject: [OpenSCAD] Puzzled here
In-Reply-To: <1461452683684-17179.post@n5.nabble.com>
References: <1461424423664-17172.post@n5.nabble.com>
	<CAGV6i+MrgpN9trNOx4fvgLPruc23E2bo_9oXoM6Q5DK8o-BQ1Q@mail.gmail.com>
	<1461447299174-17176.post@n5.nabble.com>
	<CAGV6i+NvrimNvKmguF2MWkGkvMrb=+OVHxdgCr9wm8yP-aE=wQ@mail.gmail.com>
	<1461452683684-17179.post@n5.nabble.com>
Message-ID: <1461537150168-17185.post@n5.nabble.com>

wolf wrote
> Sorry, for a moment I did not remember that a module is intended to return
> a shape, and a function to return a value. Thus, the confusion. What I
> should have sent is this:
> 
> choice = 1;
> 
> echo(myVar());
> Test(myVar());
> 
> module Test(xyz)
>   {
>     if       (xyz==1)      cube([10,xyz,xyz]);
>     else if  (xyz == 2)    cube([xyz,10,xyz]);
>     else if  (xyz == 3)    cube([xyz,xyz,10]);
>     else                   sphere(10);
>   }
> 
> function myVar()=choice==1?1:
>                  choice==2?2:
>                  choice==3?3:"not in list";
> 
> By changing the value assigned to choice, you may change the value
> reported by echo() and the shape returned by Test(), which is what -I
> think- experimentalist originally intended to do, when we were all mislead
> by doug.moen's correct, but misleading answer.
> I have read similar questions on these pages before, so the issue is not
> new. To overcome it, may I suggest that above sample program be added to
> the manual so that others in future can look up the answer there? In
> particular, try to stress that module returns a shape, function a value!
> 
> wolf

Two comments.

1. In OpenSCAD, modules create shapes but don't return anything.

2. Your function myVar() returns a value which is a function of choice. This
is what he original poster wanted.

 Do not be mislead into thinking it reassigns a value for a variable.
Calling it several times while running the script will always return the
same value.



-----
Larry
--
View this message in context: http://forum.openscad.org/Puzzled-here-tp17172p17185.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From teranick at gmail.com  Mon Apr 25 01:22:26 2016
From: teranick at gmail.com (Zappo)
Date: Sun, 24 Apr 2016 22:22:26 -0700 (MST)
Subject: [OpenSCAD] Polygon Offset Function
Message-ID: <1461561746522-17186.post@n5.nabble.com>

Working on wing generator code that computes NACA airfoil sections for a
planform that is inserted from an Inkscape tracing.  Internal spars & ribs
will be parametrically added later.  But the first task is to convert the
solid polyhedron into a thin 3D printable shell.  The thickness needs to be
precisely controlled (constant) to be able to fake out the slicer into
printing 2-3 perimeters.  The wing shown takes 6 seconds to preview as a
solid.  A minkowski-difference-universe of the wing with a 0.8mm sphere took
over three hours to preview. No hope for render with current resolution. 
Not sure that a hull-difference instead of a polyhedron would work with
undercambered airfoils.

Airfoil polygon sections are computed on the fly and will eventually morph
between root and wing tip sections, with some washout added for good
measure.  These polygons are stitched into the wing polyhedron. The existing
OpenSCAD Offset Transform only generates a new 2-D object, not a polygon, so
there is no way to stitch the result back into the interior of the wing
polyhedron as a void.  A polygon offset function would also be useful for
laser cutting curfs and gear mesh tolerances.

As a feature request, it would be very useful to have a Polygon Offset
function that operates on a 2-D polygon and returns 2-D polygon(s).  The
engine has to be there already in CGAL with a point/segment representation?  

Another possibility is to write a hacky offset function in Python that would
return a 2-D poly.  Does OpenSCAD support user defined Python functions?  

The last resort will be to write a hacky user offset function in OpenSCAD
that is tuned for airfoils.

At some later point, it would be handy to have a fuselage to go with the
wings.  Hopefully the solution will be extensible.  Reading posts, 3D offset
is far off in the future....  Help appreciated.  

<http://forum.openscad.org/file/n17186/wing.png> 



--
View this message in context: http://forum.openscad.org/Polygon-Offset-Function-tp17186.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Mon Apr 25 04:40:59 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Mon, 25 Apr 2016 01:40:59 -0700 (MST)
Subject: [OpenSCAD] Polygon Offset Function
In-Reply-To: <1461561746522-17186.post@n5.nabble.com>
References: <1461561746522-17186.post@n5.nabble.com>
Message-ID: <1461573659676-17187.post@n5.nabble.com>

You might be interested in a different approach, which is quite flexible and
a lot faster as it descibes the wing from the scratch. Didn't have your
data, so I quickly redefined your wing by rule of thumb using some of my
libraries published earlier in  thingiverse
<http://www.thingiverse.com/thing:1208001>  
Each row in X describes an airfoil slice shifted in 3D-space. An
interpolation scheme is used to construct the in-between slices. Then a
sweep() operation is performed to get a half wing.

You are right: there is no 'inset' function in OpenSCAD. Either write one,
which is quite easy for airfoil data and/or use a work around by either
scaling or constructing a core pendant for each slice. Then use a
difference() operation over the wing and its core. 


> // for libaries refer to: http://www.thingiverse.com/thing:1208001
> use 
> <Naca4.scad>
> use 
> <splines.scad>
> use 
> <Naca_sweep.scad>
> 
> // wing data - first 4 dimensions describe airfoil
> //             last 3 dimensions describe xyz offsets
> X = [ // Naca      L,   dx,    dy, dz
>       [.05,.4,.12,  1, -200, 0.5, 0], 
>       [.05,.4,.12, 20, -198, 10, -1], 
>       [.05,.4,.12, 40, -180, 20, -2], 
>       [.05,.4,.12, 80, -52,  40, -20],  // edge
>       [.05,.4,.12, 80, -50,  40, -20], 
>       [.05,.4,.12, 80,   0,  40, 0]
>    ]; 
> Y = nSpline(X, 100);   // interpolate wing data 
> 
> sweep(gen_dat(Y,40)); 
> mirror([1, 0, 0])  // second half
>   sweep(gen_dat(Y,40)); 
> 
> 
> function gen_dat(X, N=100) = [ for(i=[0:len(X)-1])
>     let(x=X[i])  // get row
>     let(v2 = airfoil_data(naca = [x[0], x[1], x[2]], L = x[3], N=N))
>     let(v3 = T_(x[4], x[5], x[6], R_(0, 90, -90,vec3D(v2)))) // rotate and
> translate
>      v3]; 
>  

<http://forum.openscad.org/file/n17187/wings.png> 




--
View this message in context: http://forum.openscad.org/Polygon-Offset-Function-tp17186p17187.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From amarjeet.kapoor1 at gmail.com  Mon Apr 25 08:42:12 2016
From: amarjeet.kapoor1 at gmail.com (Amarjeet Kapoor)
Date: Mon, 25 Apr 2016 18:12:12 +0530
Subject: [OpenSCAD] OpenSCAD / Google Summer of Code Update
In-Reply-To: <CABskhPNVaapE16UDi896oXRR04hXwMRhwN=8jHKdf6Nx8GQyQQ@mail.gmail.com>
References: <56F95B8F.5020500@gmx.de>
	<CABskhPOG4Zobc6=h1n-rXXDhMQf3ygVGkzN_aHSe=DfaB8Apjw@mail.gmail.com>
	<56F9669E.6080808@gmx.de>
	<CABskhPNoW1tMUfZxWOUAMPEdkEvOdmb2CZLVrB5zh1pv0DCDdQ@mail.gmail.com>
	<FA01D119-4D17-4069-81D9-8F9DDE268ACB@kintel.net>
	<CABskhPNKAHCMOo03rmbHLSAieem71u9w9o-fyM3CSE2nnCg_Nw@mail.gmail.com>
	<C66DEA5C-42D0-46A1-8759-CFB67FBF0888@kintel.net>
	<CABskhPO+erRs=XpKT1PtS+nfM08bR9HdLdZF--cm3PXXSaft+g@mail.gmail.com>
	<CABskhPNVaapE16UDi896oXRR04hXwMRhwN=8jHKdf6Nx8GQyQQ@mail.gmail.com>
Message-ID: <CABskhPPmhk6iu=Mya=K5VVB-r-T819vggT0EJyM-=m0XhgucbQ@mail.gmail.com>

Dear mentors, before proceeding further with much enthusiasm and
regulated ambition, I would like to put something to rest, once and
for all (pardon the dramatic touch to my words, its nothing but
excitement in disguise). It has been bugging me a bit. Earlier it was
a little odd but now it is starting to fringe onto the mystical. So I
am asking again, the below mentioned pull requests have neither been
accepted (which is perfectly fine) nor have they been rejected. My
earlier queries about this were also met with silence of sorts. I
would really like if you could offer some reasoning for this.

https://github.com/openscad/openscad/pull/1618

https://github.com/openscad/openscad/pull/1613

I would also like to discuss the order of our discussions i.e. should
they be milestone oriented(weekly) or based on each feature I proposed
as we go along? And I will start studying accordingly.


-- 
Amarjeet Singh
https://amarjeetkapoor1.wordpress.com
https://github.com/amarjeetkapoor1
https://bitbucket.org/amarjeetkapoor

"Words are our most inexhaustible source of magic.
Capable of both inflicting injury and remedying it."


From marius at kintel.net  Mon Apr 25 11:23:26 2016
From: marius at kintel.net (Marius Kintel)
Date: Mon, 25 Apr 2016 11:23:26 -0400
Subject: [OpenSCAD] OpenSCAD / Google Summer of Code Update
In-Reply-To: <CABskhPPmhk6iu=Mya=K5VVB-r-T819vggT0EJyM-=m0XhgucbQ@mail.gmail.com>
References: <56F95B8F.5020500@gmx.de>
	<CABskhPOG4Zobc6=h1n-rXXDhMQf3ygVGkzN_aHSe=DfaB8Apjw@mail.gmail.com>
	<56F9669E.6080808@gmx.de>
	<CABskhPNoW1tMUfZxWOUAMPEdkEvOdmb2CZLVrB5zh1pv0DCDdQ@mail.gmail.com>
	<FA01D119-4D17-4069-81D9-8F9DDE268ACB@kintel.net>
	<CABskhPNKAHCMOo03rmbHLSAieem71u9w9o-fyM3CSE2nnCg_Nw@mail.gmail.com>
	<C66DEA5C-42D0-46A1-8759-CFB67FBF0888@kintel.net>
	<CABskhPO+erRs=XpKT1PtS+nfM08bR9HdLdZF--cm3PXXSaft+g@mail.gmail.com>
	<CABskhPNVaapE16UDi896oXRR04hXwMRhwN=8jHKdf6Nx8GQyQQ@mail.gmail.com>
	<CABskhPPmhk6iu=Mya=K5VVB-r-T819vggT0EJyM-=m0XhgucbQ@mail.gmail.com>
Message-ID: <65227081-2E69-43C5-B384-0354CFA3ADA9@kintel.net>

> On Apr 25, 2016, at 08:42 AM, Amarjeet Kapoor <amarjeet.kapoor1 at gmail.com> wrote:
> [?]the below mentioned pull requests have neither been
> accepted (which is perfectly fine) nor have they been rejected.
> https://github.com/openscad/openscad/pull/1618
> https://github.com/openscad/openscad/pull/1613
> 
I don?t have much to say about those PRs. I belive they?re implemented cleanly enough, so the question is what problem they really solve and what issues they introduce. Perhaps some of the more heavy users of these features (animation and export to various file formats) could chip in?
In any case, let?s move the details into discussions per issue.

> I would also like to discuss the order of our discussions i.e. should
> they be milestone oriented(weekly) or based on each feature I proposed
> as we go along? And I will start studying accordingly.
> 
I think we should split the proposal into much smaller parts, to avoid starting on something big and never finishing it. This has more to do with workflow than with the proposal though, but it?s good to keep in mind.
The overall project should be milestone oriented, and I expect there to be only a few milestones, but each milestone should ideally consist of a large number of small features which could be committed or merged separately.
Earlier, students have attempted to write a project plan for the summer, specifying what should be done each week. While this is a good exercise, it will always be wrong, often by 200% or more. Such estimates are just an indicator of complexity. The main guide should be a more or less prioritized list of _what_ should be done, and dependencies between tasks.

Keep in mind that every time you issue a pull request, there is a lot of work that needs to be done on our side to validate use-cases, think about corner cases, looking for broken workflows, multi-platform testing, documentation, testing, asking for community input etc. The better we can structure this process, the easier it will be to accept pull requests rapidly. 
Also, having multiple pull requests open at the same time is normal. This can be a bit stressful in terms of how to manage source code, but it?s a very common workflow.

Kind Regards,

 -Marius



From Torsten.Paul at gmx.de  Mon Apr 25 13:01:33 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 25 Apr 2016 19:01:33 +0200
Subject: [OpenSCAD] Polygon Offset Function
In-Reply-To: <1461561746522-17186.post@n5.nabble.com>
References: <1461561746522-17186.post@n5.nabble.com>
Message-ID: <571E4D6D.5020009@gmx.de>

On 04/25/2016 07:22 AM, Zappo wrote:
> As a feature request, it would be very useful to have a Polygon Offset
> function that operates on a 2-D polygon and returns 2-D polygon(s).  The
> engine has to be there already in CGAL with a point/segment representation?  
> 
There is 2D offset(), so I suspect you mean it should operate on just
the coordinates and return those?

https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Transformations#offset

ciao,
  Torsten.



From charlie at carols62.com  Mon Apr 25 13:38:14 2016
From: charlie at carols62.com (cbernhardt)
Date: Mon, 25 Apr 2016 10:38:14 -0700 (MST)
Subject: [OpenSCAD] Polygon Offset Function
In-Reply-To: <1461561746522-17186.post@n5.nabble.com>
References: <1461561746522-17186.post@n5.nabble.com>
Message-ID: <1461605894980-17191.post@n5.nabble.com>

Could you post the code for a section of the wing?



--
View this message in context: http://forum.openscad.org/Polygon-Offset-Function-tp17186p17191.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From wv99999 at gmail.com  Mon Apr 25 17:28:47 2016
From: wv99999 at gmail.com (wolf)
Date: Mon, 25 Apr 2016 14:28:47 -0700 (MST)
Subject: [OpenSCAD] Polygon Offset Function
In-Reply-To: <1461605894980-17191.post@n5.nabble.com>
References: <1461561746522-17186.post@n5.nabble.com>
	<1461605894980-17191.post@n5.nabble.com>
Message-ID: <1461619727891-17192.post@n5.nabble.com>

If you want to create a 3D offset, all you need to do is scale your shape, as
I have done in the code attached for an ellipsoid. As I do not have full
access to all the vertices of the ellipsoid, this code produces only an
approximate 3D offset. But maybe you have access, or maybe you can live with
an approximation. 
As given, the code renders on my system in 13 seconds.
wolf

$fn=50;
Diameter=2;      // diameter of sphere from which ellipsoid is created
Offset=0.1*Diameter;    
MaxDim=[3*Diameter,1*Diameter,.5*Diameter];     // long axes of ellipsoid

MakeOffset();
MakeCutout();
TestPosition();

module MakeOffset()
  scale([1-2*Offset/MaxDim[0],1-2*Offset/MaxDim[1],1-2*Offset/MaxDim[2]]) 
// for a true offset, MaxDim[...] needs to be replaced with the norm of each
vertex for the ellipsoid
  Ellipsoid();
module TestPosition()
  translate([MaxDim[0]/2-Offset/2,0,0])     sphere(d=Offset);
  translate([0,-(MaxDim[1]/2-Offset/2),0])  sphere(d=Offset);
  translate([0,0,MaxDim[2]/2-Offset/2])     sphere(d=Offset);
module MakeCutout()
  difference()
  { Ellipsoid();
    translate([0,-15,15])  cube([70,30,30], center=true);
  }
module Ellipsoid()
  scale([MaxDim[0]/Diameter,MaxDim[1]/Diameter,MaxDim[2]/Diameter])   
sphere(d=Diameter);




--
View this message in context: http://forum.openscad.org/Polygon-Offset-Function-tp17186p17192.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From napter at gmail.com  Mon Apr 25 20:03:28 2016
From: napter at gmail.com (Nathan Apter)
Date: Mon, 25 Apr 2016 20:03:28 -0400
Subject: [OpenSCAD] Voronoi a solid model
Message-ID: <CAGGYNa8FVQMaWA_vg6UJSbjFsRrV5VYMcCTd0JLOp3fauBjZVA@mail.gmail.com>

How would one go about creating something like this in openscad?
http://www.voronator.com/. It takes any solid model and voronois it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160425/1e38db0a/attachment.html>

From nop.head at gmail.com  Tue Apr 26 03:32:14 2016
From: nop.head at gmail.com (nop head)
Date: Tue, 26 Apr 2016 08:32:14 +0100
Subject: [OpenSCAD] Voronoi a solid model
In-Reply-To: <CAGGYNa8FVQMaWA_vg6UJSbjFsRrV5VYMcCTd0JLOp3fauBjZVA@mail.gmail.com>
References: <CAGGYNa8FVQMaWA_vg6UJSbjFsRrV5VYMcCTd0JLOp3fauBjZVA@mail.gmail.com>
Message-ID: <CAEEmnrOmbrgfpt1p6Ro9dDiRixrurejtqf6Tg6p+PsPvHDv2dw@mail.gmail.com>

I don't think you can. You would need to start with a numerical model, not
an STL file as you can only generate geometry in OpenScad, not query it.

On 26 April 2016 at 01:03, Nathan Apter <napter at gmail.com> wrote:

> How would one go about creating something like this in openscad?
> http://www.voronator.com/. It takes any solid model and voronois it.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160426/3faaadae/attachment.html>

From mschafer at wireframe.biz  Tue Apr 26 07:17:50 2016
From: mschafer at wireframe.biz (Mark Schafer)
Date: Tue, 26 Apr 2016 23:17:50 +1200
Subject: [OpenSCAD] Voronoi a solid model
In-Reply-To: <CAEEmnrOmbrgfpt1p6Ro9dDiRixrurejtqf6Tg6p+PsPvHDv2dw@mail.gmail.com>
References: <CAGGYNa8FVQMaWA_vg6UJSbjFsRrV5VYMcCTd0JLOp3fauBjZVA@mail.gmail.com>
	<CAEEmnrOmbrgfpt1p6Ro9dDiRixrurejtqf6Tg6p+PsPvHDv2dw@mail.gmail.com>
Message-ID: <571F4E5E.8090501@wireframe.biz>

There is a workflow - using the manifold lab tools - in Wings3D.
but as Nophead says - not possible in current openSCAD.



From db5765 at outlook.com  Tue Apr 26 08:28:41 2016
From: db5765 at outlook.com (Trygon)
Date: Tue, 26 Apr 2016 05:28:41 -0700 (MST)
Subject: [OpenSCAD] Animation Motion Library
Message-ID: <1461673721097-17196.post@n5.nabble.com>

I was asked if I could share the code I used to produce smooth motion of
objects animated with OpenSCAD. The following link provides access to a
folder my OneDrive cloud server which contains the files:
https://onedrive.live.com/redir?resid=625391B4CF1D545D!115&authkey=!AHZ3rqfLOct19dU&ithint=folder%2c

I have included a documented example, which is hopefully sufficient to
explain usage. If not please ask.

This post is related to my earlier forum post:
http://forum.openscad.org/Product-Video-produced-with-OpenSCAD-td15783.html

Cheers,
Trygon




--
View this message in context: http://forum.openscad.org/Animation-Motion-Library-tp17196.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Tue Apr 26 11:30:30 2016
From: runsun at gmail.com (runsun)
Date: Tue, 26 Apr 2016 08:30:30 -0700 (MST)
Subject: [OpenSCAD] Animation Motion Library
In-Reply-To: <1461673721097-17196.post@n5.nabble.com>
References: <1461673721097-17196.post@n5.nabble.com>
Message-ID: <1461684630023-17197.post@n5.nabble.com>

Thx for sharing.



-----

$  Runsun Pan, PhD $ libs: doctest , faces ( git ), offline doc ( git ), runscad.py ( 2 , git ), synwrite ( 2 ); &nbsp; $ tips: hash ( 2 ), matrix ( 2 ), sweep ( 2 ), var ( 2 ), lerp , animation ( gif , prodVid ), precision ( 2 ), xl-control , type , rounded polygon , chfont , tailRecur ( 2, 3 ), isosphere , area , vol/center , RGB 
--
View this message in context: http://forum.openscad.org/Animation-Motion-Library-tp17196p17197.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From wv99999 at gmail.com  Tue Apr 26 16:42:12 2016
From: wv99999 at gmail.com (wolf)
Date: Tue, 26 Apr 2016 13:42:12 -0700 (MST)
Subject: [OpenSCAD] Voronoi a solid model
In-Reply-To: <571F4E5E.8090501@wireframe.biz>
References: <CAGGYNa8FVQMaWA_vg6UJSbjFsRrV5VYMcCTd0JLOp3fauBjZVA@mail.gmail.com>
	<CAEEmnrOmbrgfpt1p6Ro9dDiRixrurejtqf6Tg6p+PsPvHDv2dw@mail.gmail.com>
	<571F4E5E.8090501@wireframe.biz>
Message-ID: <1461703332089-17198.post@n5.nabble.com>

I disagree - it ought to be possible to do it in OpenSCAD, but it would be a
major effort.
The first step would be to get hold of the vertices and faces of the shape
you want to voronoi. The .stl file contains the information, you would have
to write the translator into a list intelligeble by OpenSCAD. Once you have
that list. you can recreate your shape using polyhedron(). 
Since you now have the list of all vectors and faces, you can use Lloyd's
algorithm (see https://en.wikipedia.org/wiki/Lloyd%27s_algorithm) to create
new faces and voronoi to your heart's content.
It's a major effort, but - I would think - worth the time spent, as it
allows the creation of porous objects, which is the area where 3D printing
really excels in. Explore the website of http://uformia.com to see what is
possible.
Visualise what it would mean for aircraft enthusiasts if they could print a
wing or fuselage with a solid surface and a foam-like interior? How much
rigidity would that add to their design, at how much weight? Ribs and struts
are such poor replacements for an integral design . . .

wolf



--
View this message in context: http://forum.openscad.org/Voronoi-a-solid-model-tp17193p17198.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From denber at mindspring.com  Tue Apr 26 13:07:44 2016
From: denber at mindspring.com (Michele Denber)
Date: Tue, 26 Apr 2016 13:07:44 -0400
Subject: [OpenSCAD] A 70's revival: the Utah Teapot
In-Reply-To: <1461510072118-17183.post@n5.nabble.com>
References: <1461368905718-17166.post@n5.nabble.com>	<571C10AB.6030401@mindspring.com>
	<1461510072118-17183.post@n5.nabble.com>
Message-ID: <571FA060.4090202@mindspring.com>

On 04-24-2016 11:01 AM, Ronaldo wrote:
> Well, you will need a stl file for that:
> teapot_demo.stl<http://forum.openscad.org/file/n17183/teapot_demo.stl>
>    
Thanks, and for the source code too!  That worked out very nicely 
without even needing support.  1987 was a big year for the Teapot at 
SIGGRAPH.  It was featured in no fewer than three papers.




             - Michele

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160426/8b1aa1f5/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: moz-screenshot-32.png
Type: image/png
Size: 614118 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160426/8b1aa1f5/attachment.png>

From teranick at gmail.com  Wed Apr 27 01:47:32 2016
From: teranick at gmail.com (Zappo)
Date: Tue, 26 Apr 2016 22:47:32 -0700 (MST)
Subject: [OpenSCAD] Polygon Offset Function
In-Reply-To: <1461619727891-17192.post@n5.nabble.com>
References: <1461561746522-17186.post@n5.nabble.com>
	<1461605894980-17191.post@n5.nabble.com>
	<1461619727891-17192.post@n5.nabble.com>
Message-ID: <1461736052353-17200.post@n5.nabble.com>

I am guessing that I'll need tight control on the wall thicknesses to fake
out the slicers and keep a precise perimeter thickness for the outer
surface.  Part of the problem is that for constant wall thickness, the inner
airfoil cut out is not a scaled version of the outer surface.  And as the
airfoil size changes on a tapered wing, you need a new unique inner cutout
for each outer airfoil.

@Parkinbot - the splines will come in handy for doing fuselages, but it
seems you still have the same problem I was seeing.  How do you get the
offset inner polygon?  I am guessing the minkowski speed is a function of
the number of faces and not necessarily the size -  Did you try to hollow
out your wing?  Need to try to dynamically decrease step size where the
sections change.   How well does your technique deal with airfoil sections
containing different numbers of polygon points?  For me, stitching together
internal airfoil cutouts with differing polygon vertex counts will require
some special casing. 

@Torsten - yes a function returning a polygon vs a transform.  Any
suggestion for how to code up a convex poly offset function without writing
a duplicate of the CGAL routine in native OpenSCAD?

Is there a way to call python code from within OpenSCAD?

@cbernhardt - let me clean it up

@wolf - not sure that scaling works really well if we're trying to maintain
uniform wall thickness.  Scaling works ok on an ellipse as in your example,
but consider what happens at the pointy trailing edge compared to the
leading edge.  









--
View this message in context: http://forum.openscad.org/Polygon-Offset-Function-tp17186p17200.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jordan.marano11 at gmail.com  Wed Apr 27 02:07:39 2016
From: jordan.marano11 at gmail.com (marno11)
Date: Tue, 26 Apr 2016 23:07:39 -0700 (MST)
Subject: [OpenSCAD] Fillet With Internal Angles
Message-ID: <1461737259922-17201.post@n5.nabble.com>

Hi All,

I'm trying to create an instruction to use an arbitrary 2D polygon to create
a fillet. It works fairly well when there are no internal angles, but I do
need it to handle internal angles. 

If you take a look at the following, it should give an idea what I'm trying
to do and how:

----------------------------------------------------------------

STPS = 10;      //Number of steps to do the fillet over
RADS = 5;       //Radius of the fillet

union() {
    translate([-30,-30,0])
        cube([60,60,5]);
    
    //This works fine
    translate([12,12,5]) {
        ninteyDegFillet(RADS,STPS)
            circle(10);
        translate([0,0,RADS])
            linear_extrude(5)
                circle(10);
    }
    
    //This doesn't work quite like I hope (when I have hull turned on in the
fillet module)
    translate([-20,-20,5]){
        ninteyDegFillet(RADS,STPS)
            a_profile();
        translate([0,0,RADS])
            linear_extrude(5)
                a_profile();
    }
}

module a_profile(){
    difference() {
        square(15);
        translate([3,3,0])
            circle(5);
    }
}

module ninteyDegFillet(r,n) {
    /*
    r - fllet radius
    n - number of steps
    */
    s = r/n;                     //step size
    for(i = [0:s:r]) {
        difference() {
            //hull() {
                translate([0,0,i-s])
                    linear_extrude(height = s)
                        offset(r = r-sqrt(pow(r,2) - pow((i-r),2)))
                            children(0);
                translate([0,0,i])
                    linear_extrude(height = s)
                        offset(r = r-sqrt(pow(r,2) - pow((i+s-r),2)))
                            children(0);
            }
            translate([0,0,-s])
                    linear_extrude(height = s)
                        offset(r = r-sqrt(pow(r,2) - pow((-r),2)))
                            children(0);
        //}
    }
}

----------------------------------------------------------------

I wanted to use the hull() to smooth things out, but perhaps there's a
better way to do this.

The parameters I would like to be able to do this within is by specifying a
2D profile and a radius.



on another note, is there a way to define 2, 2D profiles offset in some
direction and have them create a top and bottom to a 3D polygon? 

Cheers,
Marno



--
View this message in context: http://forum.openscad.org/Fillet-With-Internal-Angles-tp17201.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Wed Apr 27 02:29:17 2016
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Tue, 26 Apr 2016 23:29:17 -0700 (MST)
Subject: [OpenSCAD] Polygon Offset Function
In-Reply-To: <1461736052353-17200.post@n5.nabble.com>
References: <1461561746522-17186.post@n5.nabble.com>
	<1461605894980-17191.post@n5.nabble.com>
	<1461619727891-17192.post@n5.nabble.com>
	<1461736052353-17200.post@n5.nabble.com>
Message-ID: <1461738557730-17202.post@n5.nabble.com>

Zappo wrote
> Is there a way to call python code from within OpenSCAD?

Not directly, but you can combine  command line
<https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Using_OpenSCAD_in_a_command_line_environment>  
usage with include<> or use<>, where your python script populates a scad
file with variables which you include.



-----
Admin - PM me if you need anything, or if I've done something stupid...

Unless specifically shown otherwise above, my contribution is in the Public Domain; to the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. Obviously inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/   time is running out!
--
View this message in context: http://forum.openscad.org/Polygon-Offset-Function-tp17186p17202.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From db5765 at outlook.com  Wed Apr 27 03:27:47 2016
From: db5765 at outlook.com (Trygon)
Date: Wed, 27 Apr 2016 00:27:47 -0700 (MST)
Subject: [OpenSCAD] Fillet With Internal Angles
In-Reply-To: <1461737259922-17201.post@n5.nabble.com>
References: <1461737259922-17201.post@n5.nabble.com>
Message-ID: <1461742067931-17203.post@n5.nabble.com>

Hi Marno,

This might help:

$fn=40;
points=[[0,0],[20,0],[20,10],[10,10],[10,20],[0,20]];
polygon(points);
translate([30,0,0]) offset(r=3) offset(delta=-3) polygon(points);
translate([0,30,0]) offset(r=-3) offset(delta=3) polygon(points);
translate([30,30,0]) offset(r=-3) offset(delta=3)
    offset(r=3) offset(delta=-3) polygon(points);


Cheers,
Trygon



--
View this message in context: http://forum.openscad.org/Fillet-With-Internal-Angles-tp17201p17203.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Wed Apr 27 03:45:39 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 27 Apr 2016 08:45:39 +0100
Subject: [OpenSCAD] Fillet With Internal Angles
In-Reply-To: <1461742067931-17203.post@n5.nabble.com>
References: <1461737259922-17201.post@n5.nabble.com>
	<1461742067931-17203.post@n5.nabble.com>
Message-ID: <CAEEmnrMG-6-WBbmTAjSiTytm76aKqN56hLb0T65KQmWRE-_Dwg@mail.gmail.com>

I think this does what you want but is very slow.

module ninteyDegFillet(r,n) {
    /*
    r - fllet radius
    n - number of steps
    */
    function rad(x) = r - sqrt(pow(r,2) - pow(x - r, 2));
    s = r/n;            //step size
    eps = 0.001;        // a little overlap between slices
    for(i = [0 : s : r - s]) {
        translate([0, 0, i])
            minkowski() {
                linear_extrude(height = eps)
                    children();
                cylinder(r1 = rad(i), r2 = rad(i + s), h = s, $fn = 32);
            }
        }
}



I think interpolating between two 2D shapes to make a 3D shape is known as
loft. It would be nice to have one in OpenScad.
?

On 27 April 2016 at 08:27, Trygon <db5765 at outlook.com> wrote:

> Hi Marno,
>
> This might help:
>
> $fn=40;
> points=[[0,0],[20,0],[20,10],[10,10],[10,20],[0,20]];
> polygon(points);
> translate([30,0,0]) offset(r=3) offset(delta=-3) polygon(points);
> translate([0,30,0]) offset(r=-3) offset(delta=3) polygon(points);
> translate([30,30,0]) offset(r=-3) offset(delta=3)
>     offset(r=3) offset(delta=-3) polygon(points);
>
>
> Cheers,
> Trygon
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Fillet-With-Internal-Angles-tp17201p17203.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160427/9e68a75f/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: fillet.png
Type: image/png
Size: 26030 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160427/9e68a75f/attachment.png>

From db5765 at outlook.com  Wed Apr 27 04:28:20 2016
From: db5765 at outlook.com (Trygon)
Date: Wed, 27 Apr 2016 01:28:20 -0700 (MST)
Subject: [OpenSCAD] Fillet With Internal Angles
In-Reply-To: <CAEEmnrMG-6-WBbmTAjSiTytm76aKqN56hLb0T65KQmWRE-_Dwg@mail.gmail.com>
References: <1461737259922-17201.post@n5.nabble.com>
	<1461742067931-17203.post@n5.nabble.com>
	<CAEEmnrMG-6-WBbmTAjSiTytm76aKqN56hLb0T65KQmWRE-_Dwg@mail.gmail.com>
Message-ID: <1461745700135-17205.post@n5.nabble.com>

Very nice, Nophead.

I guess this could also be accomplished using skin.scad in the
list-comprehension demos:

  https://github.com/openscad/list-comprehension-demos

That should be a bit quicker.

-Trygon



--
View this message in context: http://forum.openscad.org/Fillet-With-Internal-Angles-tp17201p17205.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Wed Apr 27 04:40:51 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 27 Apr 2016 09:40:51 +0100
Subject: [OpenSCAD] Fillet With Internal Angles
In-Reply-To: <1461745700135-17205.post@n5.nabble.com>
References: <1461737259922-17201.post@n5.nabble.com>
	<1461742067931-17203.post@n5.nabble.com>
	<CAEEmnrMG-6-WBbmTAjSiTytm76aKqN56hLb0T65KQmWRE-_Dwg@mail.gmail.com>
	<1461745700135-17205.post@n5.nabble.com>
Message-ID: <CAEEmnrNzLHyG6qg5bFLPi1gNWGHU1PS4KF2_05XrnSYoW0-_VQ@mail.gmail.com>

Yes but that requires a numerical definition of the profile as a polygon or
a way to convert a 2D shape to a vertex list. If you make your 2D profile
with boolean combinations of circles and squares you need loft which would
take arbitrary 2D shapes like linear extrude.



On 27 April 2016 at 09:28, Trygon <db5765 at outlook.com> wrote:

> Very nice, Nophead.
>
> I guess this could also be accomplished using skin.scad in the
> list-comprehension demos:
>
>   https://github.com/openscad/list-comprehension-demos
>
> That should be a bit quicker.
>
> -Trygon
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Fillet-With-Internal-Angles-tp17201p17205.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160427/3655fd30/attachment.html>

From rudolf at parkinbot.com  Wed Apr 27 07:28:20 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Wed, 27 Apr 2016 04:28:20 -0700 (MST)
Subject: [OpenSCAD] Polygon Offset Function
In-Reply-To: <1461736052353-17200.post@n5.nabble.com>
References: <1461561746522-17186.post@n5.nabble.com>
	<1461605894980-17191.post@n5.nabble.com>
	<1461619727891-17192.post@n5.nabble.com>
	<1461736052353-17200.post@n5.nabble.com>
Message-ID: <1461756500221-17207.post@n5.nabble.com>

BTW, most slicers offer hollow slicing (infill = 0). Did you try this?

Didn't promise a general solution, but offered a work around. The inpolation
approach uses a skeleton with 6 airfoils. Each one needs to be 'paired' with
a core airfoil for difference after sweep(). Thats all. The outer one has to
be placed carefully with less distance. Viable, but needs some 'tuning'. 
Don't know your Naca. But try something like this. (For rotation of polygons
Rx_, Ry_, Rz_ from my library may be used.)

<http://forum.openscad.org/file/n17207/wing.png> 


> use 
> <Naca4.scad>
> difference()
> {
> translate([-40, -5, 1])
> airfoil(naca=[0.05, .4, .08], L=100); 
> 
> translate([-38, -4.5, -1])
> rotate([0, 0, 0.4])
> airfoil(naca=[0.048, .4, .06], L=90, h = 10); 
> }



Zappo wrote
> I am guessing that I'll need tight control on the wall thicknesses to fake
> out the slicers and keep a precise perimeter thickness for the outer
> surface.  Part of the problem is that for constant wall thickness, the
> inner airfoil cut out is not a scaled version of the outer surface.  And
> as the airfoil size changes on a tapered wing, you need a new unique inner
> cutout for each outer airfoil.
> 
> @Parkinbot - the splines will come in handy for doing fuselages, but it
> seems you still have the same problem I was seeing.  How do you get the
> offset inner polygon?  I am guessing the minkowski speed is a function of
> the number of faces and not necessarily the size -  Did you try to hollow
> out your wing?  Need to try to dynamically decrease step size where the
> sections change.   How well does your technique deal with airfoil sections
> containing different numbers of polygon points?  For me, stitching
> together internal airfoil cutouts with differing polygon vertex counts
> will require some special casing. 





--
View this message in context: http://forum.openscad.org/Polygon-Offset-Function-tp17186p17207.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Wed Apr 27 07:45:09 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Wed, 27 Apr 2016 04:45:09 -0700 (MST)
Subject: [OpenSCAD] Polygon Offset Function
In-Reply-To: <1461736052353-17200.post@n5.nabble.com>
References: <1461561746522-17186.post@n5.nabble.com>
	<1461605894980-17191.post@n5.nabble.com>
	<1461619727891-17192.post@n5.nabble.com>
	<1461736052353-17200.post@n5.nabble.com>
Message-ID: <1461757509880-17208.post@n5.nabble.com>

Ah, I forgot to answer: I don't see any need for stitching different vertex
counts, while doing a sweep(). 
But if you really want to do it you can use the more general function 
skin() <https://github.com/openscad/list-comprehension-demos>   instead of
sweep() - they are interchangeable. It was discussed  here
<http://forum.openscad.org/Rendering-fails-difference-between-F5-and-F6-td15041i40.html> 
.

Also union() will connect sweeps with different vertex counts. I use this
e.g. to implement  furcations
<http://forum.openscad.org/Rendering-fails-difference-between-F5-and-F6-tp15041p15182.html> 
.  


Zappo wrote
> How well does your technique deal with airfoil sections containing
> different numbers of polygon points?  For me, stitching together internal
> airfoil cutouts with differing polygon vertex counts will require some
> special casing. 





--
View this message in context: http://forum.openscad.org/Polygon-Offset-Function-tp17186p17208.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jon at jonbondy.com  Wed Apr 27 08:44:18 2016
From: jon at jonbondy.com (jon)
Date: Wed, 27 Apr 2016 08:44:18 -0400
Subject: [OpenSCAD] Polygon Offset Function
In-Reply-To: <1461756500221-17207.post@n5.nabble.com>
References: <1461561746522-17186.post@n5.nabble.com>
	<1461605894980-17191.post@n5.nabble.com>
	<1461619727891-17192.post@n5.nabble.com>
	<1461736052353-17200.post@n5.nabble.com>
	<1461756500221-17207.post@n5.nabble.com>
Message-ID: <5720B422.807@jonbondy.com>

Good point, about the slicers.  With Slic3r, one can specify no infill 
and a fixed number of perimeter shells, so there would be no need to use 
OpenSCAD to create a hollow shape: just create a solid one and use the 
slicer to do the dirty work.

On 4/27/2016 7:28 AM, Parkinbot wrote:
> BTW, most slicers offer hollow slicing (infill = 0). Did you try this?
>
>



From jordan.marano11 at gmail.com  Wed Apr 27 09:37:37 2016
From: jordan.marano11 at gmail.com (marno11)
Date: Wed, 27 Apr 2016 06:37:37 -0700 (MST)
Subject: [OpenSCAD] Fillet With Internal Angles
In-Reply-To: <CAEEmnrNzLHyG6qg5bFLPi1gNWGHU1PS4KF2_05XrnSYoW0-_VQ@mail.gmail.com>
References: <1461737259922-17201.post@n5.nabble.com>
	<1461742067931-17203.post@n5.nabble.com>
	<CAEEmnrMG-6-WBbmTAjSiTytm76aKqN56hLb0T65KQmWRE-_Dwg@mail.gmail.com>
	<1461745700135-17205.post@n5.nabble.com>
	<CAEEmnrNzLHyG6qg5bFLPi1gNWGHU1PS4KF2_05XrnSYoW0-_VQ@mail.gmail.com>
Message-ID: <1461764257531-17210.post@n5.nabble.com>

Thanks Nophead,

Very cool; so you are using minkowski to run a truncated cone around a
sliver of each 'profile step'.

I did want to try do this without using minkowski - but unless I or someone
can think of an alternative way (that works well) this is how I'll do it.

-Marno



--
View this message in context: http://forum.openscad.org/Fillet-With-Internal-Angles-tp17201p17210.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Wed Apr 27 10:04:27 2016
From: nop.head at gmail.com (nop head)
Date: Wed, 27 Apr 2016 15:04:27 +0100
Subject: [OpenSCAD] Fillet With Internal Angles
In-Reply-To: <1461764257531-17210.post@n5.nabble.com>
References: <1461737259922-17201.post@n5.nabble.com>
	<1461742067931-17203.post@n5.nabble.com>
	<CAEEmnrMG-6-WBbmTAjSiTytm76aKqN56hLb0T65KQmWRE-_Dwg@mail.gmail.com>
	<1461745700135-17205.post@n5.nabble.com>
	<CAEEmnrNzLHyG6qg5bFLPi1gNWGHU1PS4KF2_05XrnSYoW0-_VQ@mail.gmail.com>
	<1461764257531-17210.post@n5.nabble.com>
Message-ID: <CAEEmnrOn0Vky3NKYBTnsusD2ZRHRgWO-mgwsy6F0v6hMqewUTQ@mail.gmail.com>

Yes 3D minkowski is very slow, but only when the shape is concave. When it
is convex is is probably as fast as hull because I think later versions of
OpenScad shortcut it to a hull.

On 27 April 2016 at 14:37, marno11 <jordan.marano11 at gmail.com> wrote:

> Thanks Nophead,
>
> Very cool; so you are using minkowski to run a truncated cone around a
> sliver of each 'profile step'.
>
> I did want to try do this without using minkowski - but unless I or someone
> can think of an alternative way (that works well) this is how I'll do it.
>
> -Marno
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Fillet-With-Internal-Angles-tp17201p17210.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160427/ce3e686a/attachment.html>

From amarjeet.kapoor1 at gmail.com  Wed Apr 27 11:20:46 2016
From: amarjeet.kapoor1 at gmail.com (Amarjeet Kapoor)
Date: Wed, 27 Apr 2016 20:50:46 +0530
Subject: [OpenSCAD] OpenSCAD / Google Summer of Code Update
In-Reply-To: <65227081-2E69-43C5-B384-0354CFA3ADA9@kintel.net>
References: <56F95B8F.5020500@gmx.de>
	<CABskhPOG4Zobc6=h1n-rXXDhMQf3ygVGkzN_aHSe=DfaB8Apjw@mail.gmail.com>
	<56F9669E.6080808@gmx.de>
	<CABskhPNoW1tMUfZxWOUAMPEdkEvOdmb2CZLVrB5zh1pv0DCDdQ@mail.gmail.com>
	<FA01D119-4D17-4069-81D9-8F9DDE268ACB@kintel.net>
	<CABskhPNKAHCMOo03rmbHLSAieem71u9w9o-fyM3CSE2nnCg_Nw@mail.gmail.com>
	<C66DEA5C-42D0-46A1-8759-CFB67FBF0888@kintel.net>
	<CABskhPO+erRs=XpKT1PtS+nfM08bR9HdLdZF--cm3PXXSaft+g@mail.gmail.com>
	<CABskhPNVaapE16UDi896oXRR04hXwMRhwN=8jHKdf6Nx8GQyQQ@mail.gmail.com>
	<CABskhPPmhk6iu=Mya=K5VVB-r-T819vggT0EJyM-=m0XhgucbQ@mail.gmail.com>
	<65227081-2E69-43C5-B384-0354CFA3ADA9@kintel.net>
Message-ID: <CABskhPOccaYg_1xiKk7zk=MMttQ0aYETaEw_7mifXzesLAxPnA@mail.gmail.com>

I have started with process of converting my proposal into plan and
started with first milestone in my project i.e. related to "Option to
Specify input widget" .

I have made this doc for writing everything related to what will be
decided related to project plan. At present, It contain what I have
thought of first milestone. Please, review and suggest.

https://docs.google.com/document/d/1aApCk8EhMfRhIVowKLpZG1hpHHiQJxtYKwW_K5h4H4A/edit?usp=sharing


On 25 April 2016 at 20:53, Marius Kintel <marius at kintel.net> wrote:
>> On Apr 25, 2016, at 08:42 AM, Amarjeet Kapoor <amarjeet.kapoor1 at gmail.com> wrote:
>> [?]the below mentioned pull requests have neither been
>> accepted (which is perfectly fine) nor have they been rejected.
>> https://github.com/openscad/openscad/pull/1618
>> https://github.com/openscad/openscad/pull/1613
>>
> I don?t have much to say about those PRs. I belive they?re implemented cleanly enough, so the question is what problem they really solve and what issues they introduce. Perhaps some of the more heavy users of these features (animation and export to various file formats) could chip in?
> In any case, let?s move the details into discussions per issue.
>
>> I would also like to discuss the order of our discussions i.e. should
>> they be milestone oriented(weekly) or based on each feature I proposed
>> as we go along? And I will start studying accordingly.
>>
> I think we should split the proposal into much smaller parts, to avoid starting on something big and never finishing it. This has more to do with workflow than with the proposal though, but it?s good to keep in mind.
> The overall project should be milestone oriented, and I expect there to be only a few milestones, but each milestone should ideally consist of a large number of small features which could be committed or merged separately.
> Earlier, students have attempted to write a project plan for the summer, specifying what should be done each week. While this is a good exercise, it will always be wrong, often by 200% or more. Such estimates are just an indicator of complexity. The main guide should be a more or less prioritized list of _what_ should be done, and dependencies between tasks.
>
> Keep in mind that every time you issue a pull request, there is a lot of work that needs to be done on our side to validate use-cases, think about corner cases, looking for broken workflows, multi-platform testing, documentation, testing, asking for community input etc. The better we can structure this process, the easier it will be to accept pull requests rapidly.
> Also, having multiple pull requests open at the same time is normal. This can be a bit stressful in terms of how to manage source code, but it?s a very common workflow.
>
> Kind Regards,
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



-- 
Amarjeet Singh
https://amarjeetkapoor1.wordpress.com
https://github.com/amarjeetkapoor1
https://bitbucket.org/amarjeetkapoor

"knowledge about knowledge is power"


From rcmpersiano at gmail.com  Wed Apr 27 11:28:11 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Wed, 27 Apr 2016 08:28:11 -0700 (MST)
Subject: [OpenSCAD] Polygon Offset Function
In-Reply-To: <1461736052353-17200.post@n5.nabble.com>
References: <1461561746522-17186.post@n5.nabble.com>
	<1461605894980-17191.post@n5.nabble.com>
	<1461619727891-17192.post@n5.nabble.com>
	<1461736052353-17200.post@n5.nabble.com>
Message-ID: <1461770891595-17213.post@n5.nabble.com>

Zappo wrote
>  Any suggestion for how to code up a convex poly offset function without
> writing a duplicate of the CGAL routine in native OpenSCAD?

In your case, yes, use differentiation. If you take the unit normal at each
point of the airfoil you only need to add a fixed scale of it to the point.
If the offset is not too large it will not have self-intersections.



--
View this message in context: http://forum.openscad.org/Polygon-Offset-Function-tp17186p17213.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From kb at sparklight.com  Wed Apr 27 12:03:50 2016
From: kb at sparklight.com (Joymaker)
Date: Wed, 27 Apr 2016 09:03:50 -0700 (MST)
Subject: [OpenSCAD] Assertion failure on difference() {import(...), ...}
Message-ID: <1461773030105-17214.post@n5.nabble.com>

The following little script imports an STL file generated generated by a
coworker in another program, and drills a hole in it. The rx and tz
functions are shorthands for rotation and translation on a specific axis;
they are well tested and work fine.

module boat2() {
    difference() {
        scale(10) rx(90) translate([-6.45, -3.43, -2.3])
        import("boat2.stl");
        tz(1.5) cylinder(d=pfdiam, h=pfheight+1, $fn=120);
    }
}

Pressing F5 shows a correctly drilled hole. But pressing F6 gets the
assertion failure shown below, and effectively negates the difference
operation, so that no hole is drilled. What to do?

 g <http://forum.openscad.org/file/n17214/OpenSCADScreenSnapz005.png> 



--
View this message in context: http://forum.openscad.org/Assertion-failure-on-difference-import-tp17214.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Wed Apr 27 14:08:09 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Wed, 27 Apr 2016 11:08:09 -0700 (MST)
Subject: [OpenSCAD] Polygon Offset Function
In-Reply-To: <1461770891595-17213.post@n5.nabble.com>
References: <1461561746522-17186.post@n5.nabble.com>
	<1461605894980-17191.post@n5.nabble.com>
	<1461619727891-17192.post@n5.nabble.com>
	<1461736052353-17200.post@n5.nabble.com>
	<1461770891595-17213.post@n5.nabble.com>
Message-ID: <1461780489267-17215.post@n5.nabble.com>

Here you have an idea of how to offset non-cambered airfoils. The approach
applies also to cambered ones.


> function unit(v) = v/norm(v);
> 
> // Non-cambered Naca example
> 
> function Naca_airfoil(c, t, x ) = let( xl = x/c)
>     5*t*c*( 0.2969*sqrt(xl) - 0.126*xl - 0.3516*pow(xl,2) +
> 0.2843*pow(xl,3) - 0.1015*pow(xl,4) );
>     
> function Naca_afl_derivative(c, t, x) = let( xl = x/c)
>     x > 1e-12*c ?
>         5*t*c*( 0.2969/sqrt(xl)/2/c - 0.126/c - 0.3516*2*xl/c +
> 0.2843*3*pow(xl,2)/c - 0.1015*4*pow(xl,3)/c ) :
>         undef;
>        
> function Naca_afl_normal(c, t, x) =
>     x <= 1e-6*c ? 
>         [ 1, 0 ] :
>         unit([ Naca_afl_derivative(c, t, x), -1 ] );
> 
>             
> 
> function thin_airfoil(c, t, offset, n) =
>     // a non-linear reparametrization to refine the discretization near 0
>     concat( [ for(x=[0: c/n : c]) let( xl = c*pow(x/c,3) )
>                 [ xl, Naca_airfoil(c, t, xl ) ] ] ,
>             [ for(x=[c: -c/n : 0]) let( xl = c*pow(x/c,3) )
>                 [ xl, Naca_airfoil(c, t, xl ) ] 
>                         + offset*Naca_afl_normal(c, t, xl) ] );
>             
> module thin_Naca_airfoil(c, t, offset, n) {
>     intersection() {
>         polygon( thin_airfoil(c, t, offset, n) );
>         square([c,c*t]);
>     }
> }
> 
> thin_Naca_airfoil(100, 1/5, 1, 20);
>       





--
View this message in context: http://forum.openscad.org/Polygon-Offset-Function-tp17186p17215.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jpmendes54 at gmail.com  Wed Apr 27 16:14:38 2016
From: jpmendes54 at gmail.com (jpmendes)
Date: Wed, 27 Apr 2016 13:14:38 -0700 (MST)
Subject: [OpenSCAD] Assertion failure on difference() {import(...), ...}
In-Reply-To: <1461773030105-17214.post@n5.nabble.com>
References: <1461773030105-17214.post@n5.nabble.com>
Message-ID: <1461788078092-17216.post@n5.nabble.com>

Hi

Try to fix it first using https://modelrepair.azurewebsites.net/, netfabb or
meshlab.

jpmendes



--
View this message in context: http://forum.openscad.org/Assertion-failure-on-difference-import-tp17214p17216.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Wed Apr 27 20:51:32 2016
From: doug at moens.org (doug moen)
Date: Wed, 27 Apr 2016 20:51:32 -0400
Subject: [OpenSCAD] Polygon Offset Function
In-Reply-To: <1461736052353-17200.post@n5.nabble.com>
References: <1461561746522-17186.post@n5.nabble.com>
	<1461605894980-17191.post@n5.nabble.com>
	<1461619727891-17192.post@n5.nabble.com>
	<1461736052353-17200.post@n5.nabble.com>
Message-ID: <CAGV6i+P3vyYcHMtmBxd2Ee2tv5=tnTp779PzF4fvu-XS6Prqsw@mail.gmail.com>

@zappo said Is there a way to call python code from within OpenSCAD?

No, but you can invoke OpenSCAD from Python. Some people use SolidPython
for this.

On Wednesday, 27 April 2016, Zappo <teranick at gmail.com> wrote:

> I am guessing that I'll need tight control on the wall thicknesses to fake
> out the slicers and keep a precise perimeter thickness for the outer
> surface.  Part of the problem is that for constant wall thickness, the
> inner
> airfoil cut out is not a scaled version of the outer surface.  And as the
> airfoil size changes on a tapered wing, you need a new unique inner cutout
> for each outer airfoil.
>
> @Parkinbot - the splines will come in handy for doing fuselages, but it
> seems you still have the same problem I was seeing.  How do you get the
> offset inner polygon?  I am guessing the minkowski speed is a function of
> the number of faces and not necessarily the size -  Did you try to hollow
> out your wing?  Need to try to dynamically decrease step size where the
> sections change.   How well does your technique deal with airfoil sections
> containing different numbers of polygon points?  For me, stitching together
> internal airfoil cutouts with differing polygon vertex counts will require
> some special casing.
>
> @Torsten - yes a function returning a polygon vs a transform.  Any
> suggestion for how to code up a convex poly offset function without writing
> a duplicate of the CGAL routine in native OpenSCAD?
>
> Is there a way to call python code from within OpenSCAD?
>
> @cbernhardt - let me clean it up
>
> @wolf - not sure that scaling works really well if we're trying to maintain
> uniform wall thickness.  Scaling works ok on an ellipse as in your example,
> but consider what happens at the pointy trailing edge compared to the
> leading edge.
>
>
>
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Polygon-Offset-Function-tp17186p17200.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org <javascript:;>
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160427/b140446d/attachment.html>

From lmccourry at gmail.com  Thu Apr 28 14:49:12 2016
From: lmccourry at gmail.com (lmcc)
Date: Thu, 28 Apr 2016 11:49:12 -0700 (MST)
Subject: [OpenSCAD] Can't get difference() to work
Message-ID: <1461869352283-17218.post@n5.nabble.com>

When I run this I just see a solid 6x6x6 inch cube. Why is it not hollowed
out?
I'm on Ubuntu 14.04 and version 2014.01.29 (from the ppa).

itomm = 25.4;                  // conversion factor from inches to mm

length = 6 * itomm;            // x
width = 6 * itomm;             // y
height = 6 * itomm;            // z
thickness = .35 * itomm;       // thickness of the walls


module hollow_box(xlen, ylen, zlen, thikness)  {
   difference()  {
      cube([xlen, ylen, zlen]);
      translate([thikness, thikness, thikness])  {
         cube(xlen-2*thikness, ylen-2*thikness, zlen+100);
      }
   }
}

hollow_box(length, width, height, thickness);         // x, y, z





--
View this message in context: http://forum.openscad.org/Can-t-get-difference-to-work-tp17218.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From gaston.gloesener at web.de  Thu Apr 28 15:07:23 2016
From: gaston.gloesener at web.de (Gaston Gloesener)
Date: Thu, 28 Apr 2016 21:07:23 +0200
Subject: [OpenSCAD] Can't get difference() to work
In-Reply-To: <1461869352283-17218.post@n5.nabble.com>
References: <1461869352283-17218.post@n5.nabble.com>
Message-ID: <018c01d1a181$325c7bf0$971573d0$@web.de>

You forgot the brackets [] in the second cube statement

> -----Original Message-----
> From: Discuss [mailto:discuss-bounces at lists.openscad.org] On Behalf Of
> lmcc
> Sent: Thursday, April 28, 2016 8:49 PM
> To: discuss at lists.openscad.org
> Subject: [OpenSCAD] Can't get difference() to work
> 
> When I run this I just see a solid 6x6x6 inch cube. Why is it not
> hollowed out?
> I'm on Ubuntu 14.04 and version 2014.01.29 (from the ppa).
> 
> itomm = 25.4;                  // conversion factor from inches to mm
> 
> length = 6 * itomm;            // x
> width = 6 * itomm;             // y
> height = 6 * itomm;            // z
> thickness = .35 * itomm;       // thickness of the walls
> 
> 
> module hollow_box(xlen, ylen, zlen, thikness)  {
>    difference()  {
>       cube([xlen, ylen, zlen]);
>       translate([thikness, thikness, thikness])  {
>          cube(xlen-2*thikness, ylen-2*thikness, zlen+100);
>       }
>    }
> }
> 
> hollow_box(length, width, height, thickness);         // x, y, z
> 
> 
> 
> 
> 
> --
> View this message in context: http://forum.openscad.org/Can-t-get-
> difference-to-work-tp17218.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From lmccourry at gmail.com  Thu Apr 28 15:48:15 2016
From: lmccourry at gmail.com (lmcc)
Date: Thu, 28 Apr 2016 12:48:15 -0700 (MST)
Subject: [OpenSCAD] Can't get difference() to work
In-Reply-To: <1461869352283-17218.post@n5.nabble.com>
References: <1461869352283-17218.post@n5.nabble.com>
Message-ID: <1461872895305-17220.post@n5.nabble.com>

Thank you. It works now.





--
View this message in context: http://forum.openscad.org/Can-t-get-difference-to-work-tp17218p17220.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Thu Apr 28 18:18:12 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Thu, 28 Apr 2016 15:18:12 -0700 (MST)
Subject: [OpenSCAD] Fillet With Internal Angles
In-Reply-To: <CAEEmnrMG-6-WBbmTAjSiTytm76aKqN56hLb0T65KQmWRE-_Dwg@mail.gmail.com>
References: <1461737259922-17201.post@n5.nabble.com>
	<1461742067931-17203.post@n5.nabble.com>
	<CAEEmnrMG-6-WBbmTAjSiTytm76aKqN56hLb0T65KQmWRE-_Dwg@mail.gmail.com>
Message-ID: <1461881892263-17221.post@n5.nabble.com>

Very nice solution, nophead! I have worked a little on it and tried a
factorization of the Minkowski operation expecting a better performance:

> module ninteyDegFillet2(r,n) {
>     /*
>     r - fllet radius
>     n - number of steps
>     */
>     function rad(x) = 10 - sqrt(pow(10,2) - pow(x - 10, 2));
>     s = r/n;            //step size
>     eps = 0.001;        // a small thickness of children()
>     minkowski() {
>         linear_extrude(height = eps)
>             children();
>         for(i = [0 : s : r - s]) {
>             translate([0, 0, i])
>                cylinder(r1 = rad(i), r2 = rad(i + s), h = s, $fn = 32);          
>         }
>     }
> }

For my surprise, ninteyDegFillet2 spent 34 sec to render while
ninteyDegFillet took just 14sec. Have you an explanation for this?




--
View this message in context: http://forum.openscad.org/Fillet-With-Internal-Angles-tp17201p17221.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Thu Apr 28 18:42:42 2016
From: nop.head at gmail.com (nop head)
Date: Thu, 28 Apr 2016 23:42:42 +0100
Subject: [OpenSCAD] Fillet With Internal Angles
In-Reply-To: <1461881892263-17221.post@n5.nabble.com>
References: <1461737259922-17201.post@n5.nabble.com>
	<1461742067931-17203.post@n5.nabble.com>
	<CAEEmnrMG-6-WBbmTAjSiTytm76aKqN56hLb0T65KQmWRE-_Dwg@mail.gmail.com>
	<1461881892263-17221.post@n5.nabble.com>
Message-ID: <CAEEmnrPdrEikT0NKvL8k0gtBMM8eXRdUVUbbmr_1FSMEkc9cZg@mail.gmail.com>

You seem to have replaced r with 10 in rad(). When I put it back to r they
both take roughly the same amount of time.

On 28 April 2016 at 23:18, Ronaldo <rcmpersiano at gmail.com> wrote:

> Very nice solution, nophead! I have worked a little on it and tried a
> factorization of the Minkowski operation expecting a better performance:
>
> > module ninteyDegFillet2(r,n) {
> >     /*
> >     r - fllet radius
> >     n - number of steps
> >     */
> >     function rad(x) = 10 - sqrt(pow(10,2) - pow(x - 10, 2));
> >     s = r/n;            //step size
> >     eps = 0.001;        // a small thickness of children()
> >     minkowski() {
> >         linear_extrude(height = eps)
> >             children();
> >         for(i = [0 : s : r - s]) {
> >             translate([0, 0, i])
> >                cylinder(r1 = rad(i), r2 = rad(i + s), h = s, $fn = 32);
> >         }
> >     }
> > }
>
> For my surprise, ninteyDegFillet2 spent 34 sec to render while
> ninteyDegFillet took just 14sec. Have you an explanation for this?
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Fillet-With-Internal-Angles-tp17201p17221.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160428/c223c610/attachment.html>

From rcmpersiano at gmail.com  Thu Apr 28 22:02:45 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Thu, 28 Apr 2016 19:02:45 -0700 (MST)
Subject: [OpenSCAD] Fillet With Internal Angles
In-Reply-To: <CAEEmnrPdrEikT0NKvL8k0gtBMM8eXRdUVUbbmr_1FSMEkc9cZg@mail.gmail.com>
References: <1461737259922-17201.post@n5.nabble.com>
	<1461742067931-17203.post@n5.nabble.com>
	<CAEEmnrMG-6-WBbmTAjSiTytm76aKqN56hLb0T65KQmWRE-_Dwg@mail.gmail.com>
	<1461881892263-17221.post@n5.nabble.com>
	<CAEEmnrPdrEikT0NKvL8k0gtBMM8eXRdUVUbbmr_1FSMEkc9cZg@mail.gmail.com>
Message-ID: <1461895365332-17223.post@n5.nabble.com>

Right, I made a transcription error. But oddly my version still spends more
than double the time of yours to render. Besides, the preview of my code is
as lengthy as the render.



--
View this message in context: http://forum.openscad.org/Fillet-With-Internal-Angles-tp17201p17223.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From teranick at gmail.com  Fri Apr 29 00:39:18 2016
From: teranick at gmail.com (Zappo)
Date: Thu, 28 Apr 2016 21:39:18 -0700 (MST)
Subject: [OpenSCAD] Polygon Offset Function
In-Reply-To: <CAGV6i+P3vyYcHMtmBxd2Ee2tv5=tnTp779PzF4fvu-XS6Prqsw@mail.gmail.com>
References: <1461561746522-17186.post@n5.nabble.com>
	<1461605894980-17191.post@n5.nabble.com>
	<1461619727891-17192.post@n5.nabble.com>
	<1461736052353-17200.post@n5.nabble.com>
	<CAGV6i+P3vyYcHMtmBxd2Ee2tv5=tnTp779PzF4fvu-XS6Prqsw@mail.gmail.com>
Message-ID: <1461904758556-17224.post@n5.nabble.com>

Thanks everyone for the ideas.

@Ronaldo "/If you take the unit normal at each point of the airfoil you only
need to add a fixed scale of it to the point. If the offset is not too large
it will not have self-intersections./" - I was headed down this path as
well, and calculating the derivative directly is interesting.  But icky part
is that at the wing tips, as the airfoil chord get smaller, the relative
thickness of the skin increases relative to the chord, so you have to start
playing games reducing the number of points in the airfoil polygon to
prevent self-intersections. - but still doable.  At some point you just go
solid and don't bother with the cut out.

@Parkinbot you're right.  Slic3r does exactly the function I am looking for
because it could create a 3D shell N perimeters thick by using zero infill. 
And it is fast! I just need a way to merge in the ribbing and spars. 
Meshmixer can also create shells and export them as STL.  It could also
merge an STL of the ribbing and spars with the skin.  

@Doug/MichaelAtOz  I need to look at SolidPython or maybe a command line
hybrid.  Probably pre-compute the entire polyhedron skin in Python or even
C.

It is not sounding like there is enough general interest in a polygon offset
function that returns a polygon to request that it be added as a language
feature.  And there is no way to call a Python function from OpenSCAD. Then
there is the desire to be able to shell a fuselage. But it does sound like
there are some work around options....









--
View this message in context: http://forum.openscad.org/Polygon-Offset-Function-tp17186p17224.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Fri Apr 29 03:21:26 2016
From: nop.head at gmail.com (nophead)
Date: Fri, 29 Apr 2016 00:21:26 -0700 (MST)
Subject: [OpenSCAD] Fillet With Internal Angles
In-Reply-To: <1461895365332-17223.post@n5.nabble.com>
References: <1461737259922-17201.post@n5.nabble.com>
	<1461742067931-17203.post@n5.nabble.com>
	<CAEEmnrMG-6-WBbmTAjSiTytm76aKqN56hLb0T65KQmWRE-_Dwg@mail.gmail.com>
	<1461881892263-17221.post@n5.nabble.com>
	<CAEEmnrPdrEikT0NKvL8k0gtBMM8eXRdUVUbbmr_1FSMEkc9cZg@mail.gmail.com>
	<1461895365332-17223.post@n5.nabble.com>
Message-ID: <1461914486217-17225.post@n5.nabble.com>

When you compose the cones together the resulting shape is concave, so it
will do a single slow minkowski. When you do each cone separately they are
convex, so if the profile is convex, it will do the fast minkowski, but lots
of them.

In the concave case it probably has to decompose the shapes into convex
parts, so perhaps it breaks the cones apart again and does effective what my
version did.

The reason preview is slow is because OpenCSG can't do minkowski or hull so
those are done with CGAL even during F5.





--
View this message in context: http://forum.openscad.org/Fillet-With-Internal-Angles-tp17201p17225.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From bcreful at gmail.com  Fri Apr 29 03:26:10 2016
From: bcreful at gmail.com (drs)
Date: Fri, 29 Apr 2016 00:26:10 -0700 (MST)
Subject: [OpenSCAD] Problem rendering code
Message-ID: <1461914770010-17226.post@n5.nabble.com>

Hi all,

I am having trouble rendering a code I have and converting the .scad into an
.STL file that I need.

Staggered_circle2_0.scad
<http://forum.openscad.org/file/n17226/Staggered_circle2_0.scad>  

If anyone could help me rendering the code, I'd really appreciate it.



--
View this message in context: http://forum.openscad.org/Problem-rendering-code-tp17226.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Fri Apr 29 03:36:13 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Fri, 29 Apr 2016 04:36:13 -0300
Subject: [OpenSCAD] Fillet With Internal Angles
In-Reply-To: <1461914486217-17225.post@n5.nabble.com>
References: <1461737259922-17201.post@n5.nabble.com>
	<1461742067931-17203.post@n5.nabble.com>
	<CAEEmnrMG-6-WBbmTAjSiTytm76aKqN56hLb0T65KQmWRE-_Dwg@mail.gmail.com>
	<1461881892263-17221.post@n5.nabble.com>
	<CAEEmnrPdrEikT0NKvL8k0gtBMM8eXRdUVUbbmr_1FSMEkc9cZg@mail.gmail.com>
	<1461895365332-17223.post@n5.nabble.com>
	<1461914486217-17225.post@n5.nabble.com>
Message-ID: <CA+i9EaDs8uiqaY-qvFOuQW8f6OZGMzVD=L7uUn-QPe9=QSAJjQ@mail.gmail.com>

Clear and sound. Thanks.

2016-04-29 4:21 GMT-03:00 nophead <nop.head at gmail.com>:

> When you compose the cones together the resulting shape is concave, so it
> will do a single slow minkowski. When you do each cone separately they are
> convex, so if the profile is convex, it will do the fast minkowski, but
> lots
> of them.
>
> In the concave case it probably has to decompose the shapes into convex
> parts, so perhaps it breaks the cones apart again and does effective what
> my
> version did.
>
> The reason preview is slow is because OpenCSG can't do minkowski or hull so
> those are done with CGAL even during F5.
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Fillet-With-Internal-Angles-tp17201p17225.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160429/a4886bfc/attachment.html>

From nop.head at gmail.com  Fri Apr 29 03:47:00 2016
From: nop.head at gmail.com (nop head)
Date: Fri, 29 Apr 2016 08:47:00 +0100
Subject: [OpenSCAD] Fillet With Internal Angles
In-Reply-To: <CA+i9EaDs8uiqaY-qvFOuQW8f6OZGMzVD=L7uUn-QPe9=QSAJjQ@mail.gmail.com>
References: <1461737259922-17201.post@n5.nabble.com>
	<1461742067931-17203.post@n5.nabble.com>
	<CAEEmnrMG-6-WBbmTAjSiTytm76aKqN56hLb0T65KQmWRE-_Dwg@mail.gmail.com>
	<1461881892263-17221.post@n5.nabble.com>
	<CAEEmnrPdrEikT0NKvL8k0gtBMM8eXRdUVUbbmr_1FSMEkc9cZg@mail.gmail.com>
	<1461895365332-17223.post@n5.nabble.com>
	<1461914486217-17225.post@n5.nabble.com>
	<CA+i9EaDs8uiqaY-qvFOuQW8f6OZGMzVD=L7uUn-QPe9=QSAJjQ@mail.gmail.com>
Message-ID: <CAEEmnrMNnfVs5nu36ngdcynf-hoRaE7y0o8zrqcFyp2jUbztxQ@mail.gmail.com>

I am using version 2015.05.16 (git e673fff).

The cylinder takes 14 or 15 seconds. Both shapes together takes 1m11. I
can't explain why you get a big difference between methods and I get none.
Perhaps you have an older version of OpenScad.



On 29 April 2016 at 08:36, Ronaldo Persiano <rcmpersiano at gmail.com> wrote:

> Clear and sound. Thanks.
>
> 2016-04-29 4:21 GMT-03:00 nophead <nop.head at gmail.com>:
>
>> When you compose the cones together the resulting shape is concave, so it
>> will do a single slow minkowski. When you do each cone separately they are
>> convex, so if the profile is convex, it will do the fast minkowski, but
>> lots
>> of them.
>>
>> In the concave case it probably has to decompose the shapes into convex
>> parts, so perhaps it breaks the cones apart again and does effective what
>> my
>> version did.
>>
>> The reason preview is slow is because OpenCSG can't do minkowski or hull
>> so
>> those are done with CGAL even during F5.
>>
>>
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/Fillet-With-Internal-Angles-tp17201p17225.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160429/012c6ba8/attachment.html>

From rudolf at parkinbot.com  Fri Apr 29 05:34:18 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 29 Apr 2016 02:34:18 -0700 (MST)
Subject: [OpenSCAD] Problem rendering code
In-Reply-To: <1461914770010-17226.post@n5.nabble.com>
References: <1461914770010-17226.post@n5.nabble.com>
Message-ID: <1461922458152-17229.post@n5.nabble.com>

Your code produces something like this 

<http://forum.openscad.org/file/n17229/honey.png> 
<http://forum.openscad.org/file/n17229/honey1.png> 

Is it, what you want? For a hexagonal honeycomb you would use code like
this: 


>   rows=23; 
>   columns=23; 
>   levels=2; 
>   walls=.6; 
>   cell_interior=1.5; 
>   height=0.4; 
> 
> // data for the honey comb  
>   Wall = 3*walls; 
>   w = 2*(cell_interior + walls); 
>   h = sqrt(3)*(cell_interior + walls); 
>   W = (columns+.5)*w+2*Wall; 
>   H = (rows)*h + 2*Wall ;
> 
> linear_extrude(height = height)
> honeycomb(rows,columns,cell_interior,walls, height);
> 
> module honeycomb(rows,columns,cell_interior,walls, height) 
> {
>   difference()
>   {
>     square([W, H]); 
>     for(i=[0:columns-1], j=[0:rows-1])
>     {
>       col_offs = (j%2)?w/2:0; 
>       translate([Wall + w*(.5+i) + col_offs, Wall + h*(.5+j)])
>       rotate(30)
>       circle(cell_interior, $fn=6); 
>     }
>   }
> }





--
View this message in context: http://forum.openscad.org/Problem-rendering-code-tp17226p17229.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From fred_dot_u at yahoo.com  Fri Apr 29 05:37:49 2016
From: fred_dot_u at yahoo.com (fred_dot_u)
Date: Fri, 29 Apr 2016 02:37:49 -0700 (MST)
Subject: [OpenSCAD] Problem rendering code
In-Reply-To: <1461914770010-17226.post@n5.nabble.com>
References: <1461914770010-17226.post@n5.nabble.com>
Message-ID: <1461922669133-17230.post@n5.nabble.com>

I'm not much on programming, but there are a few things that jump out at me
in your code. 

The first is that you've either removed or ignored common indent practices.
After a { you should expect the code to be indented one tab stop until it
returns to the margin by use of }.  This allows for more easily read code,
important for your troubleshooting.

The next thing that seems amiss to me is you have modules inside modules.
The entire block of code is nested inside "one" and "two". Your modules
belong outside any calls to them. 

Consider to re-write your code using those practices and see what happens
next.

I would expect someone with better coding skills than I to offer additional
suggestions.



--
View this message in context: http://forum.openscad.org/Problem-rendering-code-tp17226p17230.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From db5765 at outlook.com  Fri Apr 29 05:38:43 2016
From: db5765 at outlook.com (Trygon)
Date: Fri, 29 Apr 2016 02:38:43 -0700 (MST)
Subject: [OpenSCAD] Fillet With Internal Angles
In-Reply-To: <CAEEmnrMNnfVs5nu36ngdcynf-hoRaE7y0o8zrqcFyp2jUbztxQ@mail.gmail.com>
References: <1461737259922-17201.post@n5.nabble.com>
	<1461742067931-17203.post@n5.nabble.com>
	<CAEEmnrMG-6-WBbmTAjSiTytm76aKqN56hLb0T65KQmWRE-_Dwg@mail.gmail.com>
	<1461881892263-17221.post@n5.nabble.com>
	<CAEEmnrPdrEikT0NKvL8k0gtBMM8eXRdUVUbbmr_1FSMEkc9cZg@mail.gmail.com>
	<1461895365332-17223.post@n5.nabble.com>
	<1461914486217-17225.post@n5.nabble.com>
	<CA+i9EaDs8uiqaY-qvFOuQW8f6OZGMzVD=L7uUn-QPe9=QSAJjQ@mail.gmail.com>
	<CAEEmnrMNnfVs5nu36ngdcynf-hoRaE7y0o8zrqcFyp2jUbztxQ@mail.gmail.com>
Message-ID: <1461922723496-17231.post@n5.nabble.com>

Nophead & Ronaldo, interesting discussion thanks.

I had pondered the same idea as you Ronaldo (code below), but it is still
slower than your version Nophead - i.e. very, very slow!  The only possible
advantage is that a 2D profile can easily be constructed with a boolean
combination of circles and squares to generate an arbitrary fillet shape.

-Trygon

<http://forum.openscad.org/file/n17231/BlendFilletExtrude_test01.png> 

n=5; // number of steps in fillet
r=2; // fillet radius
h=8; // overall extrusion height

translate([-10,-10,-2]) cube([40,40,2]); //plate

BlendFilletExtrude(h,r,$fn=n*4) TestShape(); 

module TestShape(s=20,r=3,$fn=20){
    FilletPolygon(r) difference(){
        square(s);
        translate([s/2,s/2]) square(s);
    }
}

module FilletPolygon(r=2,internal=true,external=true){
    if(internal && external){
        offset(r=-r) offset(delta=r) offset(r=r) offset(delta=-r)
children();
    } else if (external){
        offset(r=r) offset(delta=-r) children();
    } else if(internal){
        offset(r=-r) offset(delta=r) children();
    }else{
        children();
    }
}

// h        height of extrusion (from z=0)
// r        radius of fillet
// padding  distance fillet is extended below plane z=0
module BlendFilletExtrude(h=10,r=2,padding=0.1){
    eps=0.001;
    linear_extrude(height=h) children();
    minkowski(){
        rotate_extrude() difference(){
            translate([0,-padding]) square([r,r+padding]);
            translate([r,r])circle(r);
        }
        linear_extrude(height=eps) children();
    }
}




--
View this message in context: http://forum.openscad.org/Fillet-With-Internal-Angles-tp17201p17231.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From bcreful at gmail.com  Fri Apr 29 07:08:37 2016
From: bcreful at gmail.com (drs)
Date: Fri, 29 Apr 2016 04:08:37 -0700 (MST)
Subject: [OpenSCAD] Problem rendering code
In-Reply-To: <1461922458152-17229.post@n5.nabble.com>
References: <1461914770010-17226.post@n5.nabble.com>
	<1461922458152-17229.post@n5.nabble.com>
Message-ID: <1461928117887-17232.post@n5.nabble.com>

Hi, I am not very good at writing codes. I am trying to produce something
like this:

<http://forum.openscad.org/file/n17232/Staggered_circular_honeycomb.png> 

It is a "negative honeycomb" made of cylinders (instead of hexagons), and
the layers shifted a little bit with respect to the next one, as shown in
the image. 



--
View this message in context: http://forum.openscad.org/Problem-rendering-code-tp17226p17232.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From bcreful at gmail.com  Fri Apr 29 07:20:00 2016
From: bcreful at gmail.com (drs)
Date: Fri, 29 Apr 2016 04:20:00 -0700 (MST)
Subject: [OpenSCAD] Problem rendering code
In-Reply-To: <1461922669133-17230.post@n5.nabble.com>
References: <1461914770010-17226.post@n5.nabble.com>
	<1461922669133-17230.post@n5.nabble.com>
Message-ID: <1461928800155-17233.post@n5.nabble.com>

Hi, I'm not very good at coding. Are you suggesting it is not possible to
have one module nested inside another one?



--
View this message in context: http://forum.openscad.org/Problem-rendering-code-tp17226p17233.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From fred_dot_u at yahoo.com  Fri Apr 29 08:28:36 2016
From: fred_dot_u at yahoo.com (fred_dot_u)
Date: Fri, 29 Apr 2016 05:28:36 -0700 (MST)
Subject: [OpenSCAD] Problem rendering code
In-Reply-To: <1461928800155-17233.post@n5.nabble.com>
References: <1461914770010-17226.post@n5.nabble.com>
	<1461922669133-17230.post@n5.nabble.com>
	<1461928800155-17233.post@n5.nabble.com>
Message-ID: <1461932916949-17234.post@n5.nabble.com>

I'm no genius when it comes to coding either, but some things are engineered
to make life easier and that's where modules come in.

I can't say that modules can't be nested, but a more practical approach is
to nest the calls to the module. Modules "define" a sequence to be
performed, sometimes with parameters being passed by the calling command,
other times by parameters created within the module itself. Your variable
assignments should also be outside the module.

An example of "nothing":

variable_one = 10;
variable_two = 100;
variable_three = 50;

module make_cube(x_value, y_value, z_value){
     cube([x_value, y_value, z_value]);
}

make_cube(4,5,6);

// end of code

the above "program" does nothing but make a cube, but only because the
make_cube(4,5,6); command is included at the end. I could nest that command,
which passed the parameters 4, 5, 6 to the module inside a loop and have the
parameters provided by the loop counter or other math performed inside the
loop. 

It would make for a much cleaner and easier to read code.



--
View this message in context: http://forum.openscad.org/Problem-rendering-code-tp17226p17234.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Fri Apr 29 09:06:00 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 29 Apr 2016 06:06:00 -0700 (MST)
Subject: [OpenSCAD] Problem rendering code
In-Reply-To: <1461928117887-17232.post@n5.nabble.com>
References: <1461914770010-17226.post@n5.nabble.com>
	<1461922458152-17229.post@n5.nabble.com>
	<1461928117887-17232.post@n5.nabble.com>
Message-ID: <1461935160353-17235.post@n5.nabble.com>

ah, OK - it is quite hard to guess what a code producing no reasonable output
is meant to do. 

Boolean operations over hundreds of objects with a high polygon count (you
use $fn = 100) are notoriously slow when it comes to rendering. It might be
a good idea to 
1. turn down your polygon count as low as possible (e.g. $fn=20)
2. save an stl from a single layer and import it for boolean operations or
use render() within code. 



--
View this message in context: http://forum.openscad.org/Problem-rendering-code-tp17226p17235.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rcmpersiano at gmail.com  Fri Apr 29 09:15:26 2016
From: rcmpersiano at gmail.com (Ronaldo Persiano)
Date: Fri, 29 Apr 2016 10:15:26 -0300
Subject: [OpenSCAD] Polygon Offset Function
In-Reply-To: <1461904758556-17224.post@n5.nabble.com>
References: <1461561746522-17186.post@n5.nabble.com>
	<1461605894980-17191.post@n5.nabble.com>
	<1461619727891-17192.post@n5.nabble.com>
	<1461736052353-17200.post@n5.nabble.com>
	<CAGV6i+P3vyYcHMtmBxd2Ee2tv5=tnTp779PzF4fvu-XS6Prqsw@mail.gmail.com>
	<1461904758556-17224.post@n5.nabble.com>
Message-ID: <CA+i9EaBusLtfMfd2adcHq08gXZuZ=BHrva4rwSHM0dZCvGgKsg@mail.gmail.com>

"But icky part
is that at the wing tips, as the airfoil chord get smaller, the relative
thickness of the skin increases relative to the chord, so you have to start
playing games reducing the number of points in the airfoil polygon to
prevent self-intersections. - but still doable. "

My code was just a starting point. You can always clip each internal curve
offset against the start-end line instead of doing a overall clipping as I
did. This would avoid any self-intersections.

2016-04-29 1:39 GMT-03:00 Zappo <teranick at gmail.com>:

> Thanks everyone for the ideas.
>
> @Ronaldo "/If you take the unit normal at each point of the airfoil you
> only
> need to add a fixed scale of it to the point. If the offset is not too
> large
> it will not have self-intersections./" - I was headed down this path as
> well, and calculating the derivative directly is interesting.  But icky
> part
> is that at the wing tips, as the airfoil chord get smaller, the relative
> thickness of the skin increases relative to the chord, so you have to start
> playing games reducing the number of points in the airfoil polygon to
> prevent self-intersections. - but still doable.  At some point you just go
> solid and don't bother with the cut out.
>
> @Parkinbot you're right.  Slic3r does exactly the function I am looking for
> because it could create a 3D shell N perimeters thick by using zero infill.
> And it is fast! I just need a way to merge in the ribbing and spars.
> Meshmixer can also create shells and export them as STL.  It could also
> merge an STL of the ribbing and spars with the skin.
>
> @Doug/MichaelAtOz  I need to look at SolidPython or maybe a command line
> hybrid.  Probably pre-compute the entire polyhedron skin in Python or even
> C.
>
> It is not sounding like there is enough general interest in a polygon
> offset
> function that returns a polygon to request that it be added as a language
> feature.  And there is no way to call a Python function from OpenSCAD. Then
> there is the desire to be able to shell a fuselage. But it does sound like
> there are some work around options....
>
>
>
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Polygon-Offset-Function-tp17186p17224.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160429/d762fc14/attachment.html>

From lmccourry at gmail.com  Fri Apr 29 10:23:33 2016
From: lmccourry at gmail.com (lmcc)
Date: Fri, 29 Apr 2016 07:23:33 -0700 (MST)
Subject: [OpenSCAD] building from source on Ubuntu 14.04 LTS
Message-ID: <1461939813443-17237.post@n5.nabble.com>

I'm trying to build openscad in Ubuntu 14.04 LTS, but I am running into some
problems. Here's what I've done:

   git clone git://github.com/openscad/openscad.git

   from README.md:
      git submodule update --init

      (here I switched to a bash shell)

      source ./scripts/setenv-unibuild.sh

depname     minimum     found       OKness      
qt          4.4         5.2.1       OK          
qscintilla2 2.7         unknown     NotOK       
cgal        3.6         4.4         OK          
gmp         5.0         5.0.5       OK          
mpfr        3.0         3.1.1       OK          
boost       1.35        1.56        OK          
opencsg     1.3.2       1.3.2       OK          
glew        1.5.4       1.7.0       OK          
eigen       3.0         3.2.2       OK          
glib2       2.0         2.38.2      OK          
fontconfig  2.10        2.11.       OK          
freetype2   2.4         2.5.0       OK          
harfbuzz    0.9.19      0.9.23      OK          
bison       2.4         3.0.2       OK          
flex        2.5.35      2.5.35      OK          
make        3           3.81        OK

Warning: you have pkgconfig under /usr/local/lib
Please verify these local copies don't conflict with the system


1. I don't  know how to solve the qscintilla2 complaint. I have installed
qscintilla2-dev.

2. I don't know what the warning about pkgconfig means.







--
View this message in context: http://forum.openscad.org/building-from-source-on-Ubuntu-14-04-LTS-tp17237.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From bcreful at gmail.com  Fri Apr 29 10:38:10 2016
From: bcreful at gmail.com (drs)
Date: Fri, 29 Apr 2016 07:38:10 -0700 (MST)
Subject: [OpenSCAD] Problem rendering code
In-Reply-To: <1461935160353-17235.post@n5.nabble.com>
References: <1461914770010-17226.post@n5.nabble.com>
	<1461922458152-17229.post@n5.nabble.com>
	<1461928117887-17232.post@n5.nabble.com>
	<1461935160353-17235.post@n5.nabble.com>
Message-ID: <1461940690591-17238.post@n5.nabble.com>

I exported the first 2 layers as an .STL file, as you suggested.
Here is the .scad file (no nested modules this time) that I exported to
.STL:
Staggered_circle2_0.scad
<http://forum.openscad.org/file/n17238/Staggered_circle2_0.scad>  

However, when I import it and try to make boolean operations in another
.scad:
Staggered_circle_0.scad
<http://forum.openscad.org/file/n17238/Staggered_circle_0.scad>  
 and then try to render the model, I get this error:
ERROR: CGAL error in CGAL_Nef_polyhedron3(): CGAL ERROR: assertion
violation! Expr: pe_prev->is_border() ||
!internal::Plane_constructor::get_plane(pe_prev->facet(),pe_prev->facet()->plane()).is_degenerate()
File:
/opt/mxe/usr/x86_64-w64-mingw32.static/include/CGAL/Nef_3/polyhedron_3_to_nef_3.h
Line: 251 





--
View this message in context: http://forum.openscad.org/Problem-rendering-code-tp17226p17238.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Fri Apr 29 11:49:39 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 29 Apr 2016 08:49:39 -0700 (MST)
Subject: [OpenSCAD] Problem rendering code
In-Reply-To: <1461940690591-17238.post@n5.nabble.com>
References: <1461914770010-17226.post@n5.nabble.com>
	<1461922458152-17229.post@n5.nabble.com>
	<1461928117887-17232.post@n5.nabble.com>
	<1461935160353-17235.post@n5.nabble.com>
	<1461940690591-17238.post@n5.nabble.com>
Message-ID: <1461944979978-17239.post@n5.nabble.com>

Seems like the stl produced by your code is not valid and needs repair. 

Usually singular vertices/edges or float conversion inaccuracies are
responsible for errors like this. Try small overlapping (or distancing) of
layers and avoid boolean operations on objects just touching at one point or
line. 

Try to alter Staggered_circle2_0.scad in this way and test with smaller
number of rows and columns first. 



--
View this message in context: http://forum.openscad.org/Problem-rendering-code-tp17226p17239.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Fri Apr 29 11:55:44 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Fri, 29 Apr 2016 08:55:44 -0700 (MST)
Subject: [OpenSCAD] Problem rendering code
In-Reply-To: <1461940690591-17238.post@n5.nabble.com>
References: <1461914770010-17226.post@n5.nabble.com>
	<1461922458152-17229.post@n5.nabble.com>
	<1461928117887-17232.post@n5.nabble.com>
	<1461935160353-17235.post@n5.nabble.com>
	<1461940690591-17238.post@n5.nabble.com>
Message-ID: <1461945344115-17240.post@n5.nabble.com>

tried it on a smaller size and got same error. Works after adding .01 to the
stacked height. 

// twice as big for now, not necesary to be that big though 
    honeycomb(rows*2,columns*2,cell_interior,walls,height+.01); 



--
View this message in context: http://forum.openscad.org/Problem-rendering-code-tp17226p17240.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From lmccourry at gmail.com  Fri Apr 29 12:35:05 2016
From: lmccourry at gmail.com (lmcc)
Date: Fri, 29 Apr 2016 09:35:05 -0700 (MST)
Subject: [OpenSCAD] How to run a recent openscad on Ubuntu 14.04 LTS?
Message-ID: <1461947705646-17241.post@n5.nabble.com>

Ubuntu 14.04 LTS has openscad 2013.01. I would like to use a newer version of
openscad. I'm having trouble
building it, so I am also trying to a install nightly build binary. I'm
following the instructions here:
   http://www.openscad.org/downloads.html

   I added
      deb
http://download.opensuse.org/repositories/home:/t-paul/xUbuntu_14.04/ ./
   to
      /etc/apt/sources.list.d/openscad.list (I had to create the file)

   I also ran
      wget -qO - http://files.openscad.org/OBS-Repository-Key.pub | sudo
apt-key add -   

Now openscad-nightly:i386 appears in synaptic for installation, but if I try
to
install it, synaptic shows a red exclamation mark and displays the message:

      Could not apply changes!
      Fix broken packages first.

I also tried to install it from the command line:

sudo apt-get install openscad-nightly:i386
Reading package lists... Done
Building dependency tree       
Reading state information... Done
Some packages could not be installed. This may mean that you have
requested an impossible situation or if you are using the unstable
distribution that some required packages have not yet been created
or been moved out of Incoming.
The following information may help to resolve the situation:

The following packages have unmet dependencies:
 openscad-nightly:i386 : Depends: libcgal10:i386 but it is not going to be
installed
                         Depends: libqscintilla2-11:i386 but it is not going
to be installed
E: Unable to correct problems, you have held broken packages.



It seems very difficult to run a recent version of openscad on this version
of Ubuntu. Does anyone know how to do this?





--
View this message in context: http://forum.openscad.org/How-to-run-a-recent-openscad-on-Ubuntu-14-04-LTS-tp17241.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Fri Apr 29 13:21:23 2016
From: doug at moens.org (doug moen)
Date: Fri, 29 Apr 2016 12:21:23 -0500
Subject: [OpenSCAD] How to run a recent openscad on Ubuntu 14.04 LTS?
In-Reply-To: <1461947705646-17241.post@n5.nabble.com>
References: <1461947705646-17241.post@n5.nabble.com>
Message-ID: <CAGV6i+OuqBNc9D_tkUjNJCWcHUQ3ujd8vJ2a94=TEkMtVgmBrA@mail.gmail.com>

Well, I have a theory about how to proceed, but hopefully there is a better
way.

I think this could be made to work by building OpenSCAD from the sources.
Any libraries that Ubuntu 14.04 refuses to install (because they are too
new, like libscintilla2) can also be built from sources and installed in
/usr/local.

I am also attempting to get the latest OpenSCAD running on Ubuntu, but my
approach is to first upgrade to Ubuntu 16.04. And in order to make that
work (I was previously running 14.04), I had to download the 16.04 ISO and
do a fresh install, as it seems that no upgrade is currently possible. And
uni-get-dependencies.sh is even more broken on 16.04 than it is on 14.04,
so I have some work to do.

Ubuntu 16.04 now supports "snap packages" which are supposed to eliminate
this kind of dependency hell. Maybe in the future somebody will build an
OpenSCAD Ubuntu snap package.

On 29 April 2016 at 11:35, lmcc <lmccourry at gmail.com> wrote:

> Ubuntu 14.04 LTS has openscad 2013.01. I would like to use a newer version
> of
> openscad. I'm having trouble
> building it, so I am also trying to a install nightly build binary. I'm
> following the instructions here:
>    http://www.openscad.org/downloads.html
>
>    I added
>       deb
> http://download.opensuse.org/repositories/home:/t-paul/xUbuntu_14.04/ ./
>    to
>       /etc/apt/sources.list.d/openscad.list (I had to create the file)
>
>    I also ran
>       wget -qO - http://files.openscad.org/OBS-Repository-Key.pub | sudo
> apt-key add -
>
> Now openscad-nightly:i386 appears in synaptic for installation, but if I
> try
> to
> install it, synaptic shows a red exclamation mark and displays the message:
>
>       Could not apply changes!
>       Fix broken packages first.
>
> I also tried to install it from the command line:
>
> sudo apt-get install openscad-nightly:i386
> Reading package lists... Done
> Building dependency tree
> Reading state information... Done
> Some packages could not be installed. This may mean that you have
> requested an impossible situation or if you are using the unstable
> distribution that some required packages have not yet been created
> or been moved out of Incoming.
> The following information may help to resolve the situation:
>
> The following packages have unmet dependencies:
>  openscad-nightly:i386 : Depends: libcgal10:i386 but it is not going to be
> installed
>                          Depends: libqscintilla2-11:i386 but it is not
> going
> to be installed
> E: Unable to correct problems, you have held broken packages.
>
>
>
> It seems very difficult to run a recent version of openscad on this version
> of Ubuntu. Does anyone know how to do this?
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/How-to-run-a-recent-openscad-on-Ubuntu-14-04-LTS-tp17241.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160429/8e16a506/attachment.html>

From doug at moens.org  Fri Apr 29 14:09:45 2016
From: doug at moens.org (doug moen)
Date: Fri, 29 Apr 2016 13:09:45 -0500
Subject: [OpenSCAD] building from source on Ubuntu 14.04 LTS
In-Reply-To: <1461939813443-17237.post@n5.nabble.com>
References: <1461939813443-17237.post@n5.nabble.com>
Message-ID: <CAGV6i+ObEaAuqXdro5FLgvWtoKy1XAErRiyR2sy08sLeRnfbZg@mail.gmail.com>

I'm on 16.04, but this should work for you as well.

I've installed the package libqt5scintilla2-dev, and check-dependencies.sh
is happy with that.

I DO NOT have libqscintilla2-dev installed. check-dependencies.sh doesn't
seem to check for that package.

On 29 April 2016 at 09:23, lmcc <lmccourry at gmail.com> wrote:

> I'm trying to build openscad in Ubuntu 14.04 LTS, but I am running into
> some
> problems. Here's what I've done:
>
>    git clone git://github.com/openscad/openscad.git
>
>    from README.md:
>       git submodule update --init
>
>       (here I switched to a bash shell)
>
>       source ./scripts/setenv-unibuild.sh
>
> depname     minimum     found       OKness
> qt          4.4         5.2.1       OK
> qscintilla2 2.7         unknown     NotOK
> cgal        3.6         4.4         OK
> gmp         5.0         5.0.5       OK
> mpfr        3.0         3.1.1       OK
> boost       1.35        1.56        OK
> opencsg     1.3.2       1.3.2       OK
> glew        1.5.4       1.7.0       OK
> eigen       3.0         3.2.2       OK
> glib2       2.0         2.38.2      OK
> fontconfig  2.10        2.11.       OK
> freetype2   2.4         2.5.0       OK
> harfbuzz    0.9.19      0.9.23      OK
> bison       2.4         3.0.2       OK
> flex        2.5.35      2.5.35      OK
> make        3           3.81        OK
>
> Warning: you have pkgconfig under /usr/local/lib
> Please verify these local copies don't conflict with the system
>
>
> 1. I don't  know how to solve the qscintilla2 complaint. I have installed
> qscintilla2-dev.
>
> 2. I don't know what the warning about pkgconfig means.
>
>
>
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/building-from-source-on-Ubuntu-14-04-LTS-tp17237.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160429/4b569d27/attachment.html>

From doug at moens.org  Fri Apr 29 15:11:14 2016
From: doug at moens.org (doug moen)
Date: Fri, 29 Apr 2016 14:11:14 -0500
Subject: [OpenSCAD] building from source on Ubuntu 14.04 LTS
In-Reply-To: <CAGV6i+ObEaAuqXdro5FLgvWtoKy1XAErRiyR2sy08sLeRnfbZg@mail.gmail.com>
References: <1461939813443-17237.post@n5.nabble.com>
	<CAGV6i+ObEaAuqXdro5FLgvWtoKy1XAErRiyR2sy08sLeRnfbZg@mail.gmail.com>
Message-ID: <CAGV6i+O1wbC1WLJ_z+vbwk=nKNpi9CeeGg74__d-_zpVF669Pw@mail.gmail.com>

On Ubuntu 16.04, scripts/uni-get-dependencies.sh is kind of broken, and I
had to install a lot of additional packages in order to satisfy
check-dependencies.sh:

# apt install libcgal-dev
# apt install libopencsg-dev
# apt install libglew-dev
# apt install libeigen3-dev
# apt install libglib2.0-dev
# apt install libfontconfig1-dev
# apt install bison
# apt install flex

check-dependencies.sh is also somewhat broken, because it didn't prompt me
to install these additional packages:
# apt install libboost-filesystem-dev
# apt install libboost-regex-dev

However, after the dependencies were satisfied, the build worked and
./openscad seems to work. So I can confirm for lmcc that
libqt5scintilla2-dev satisified my dependency for "qscintilla2".

Now I'm trying to build the test suite. This is more dependency hell.

On 29 April 2016 at 13:09, doug moen <doug at moens.org> wrote:

> I'm on 16.04, but this should work for you as well.
>
> I've installed the package libqt5scintilla2-dev, and check-dependencies.sh
> is happy with that.
>
> I DO NOT have libqscintilla2-dev installed. check-dependencies.sh doesn't
> seem to check for that package.
>
> On 29 April 2016 at 09:23, lmcc <lmccourry at gmail.com> wrote:
>
>> I'm trying to build openscad in Ubuntu 14.04 LTS, but I am running into
>> some
>> problems. Here's what I've done:
>>
>>    git clone git://github.com/openscad/openscad.git
>>
>>    from README.md:
>>       git submodule update --init
>>
>>       (here I switched to a bash shell)
>>
>>       source ./scripts/setenv-unibuild.sh
>>
>> depname     minimum     found       OKness
>> qt          4.4         5.2.1       OK
>> qscintilla2 2.7         unknown     NotOK
>> cgal        3.6         4.4         OK
>> gmp         5.0         5.0.5       OK
>> mpfr        3.0         3.1.1       OK
>> boost       1.35        1.56        OK
>> opencsg     1.3.2       1.3.2       OK
>> glew        1.5.4       1.7.0       OK
>> eigen       3.0         3.2.2       OK
>> glib2       2.0         2.38.2      OK
>> fontconfig  2.10        2.11.       OK
>> freetype2   2.4         2.5.0       OK
>> harfbuzz    0.9.19      0.9.23      OK
>> bison       2.4         3.0.2       OK
>> flex        2.5.35      2.5.35      OK
>> make        3           3.81        OK
>>
>> Warning: you have pkgconfig under /usr/local/lib
>> Please verify these local copies don't conflict with the system
>>
>>
>> 1. I don't  know how to solve the qscintilla2 complaint. I have installed
>> qscintilla2-dev.
>>
>> 2. I don't know what the warning about pkgconfig means.
>>
>>
>>
>>
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/building-from-source-on-Ubuntu-14-04-LTS-tp17237.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160429/d2d57a91/attachment.html>

From doug at moens.org  Fri Apr 29 15:31:25 2016
From: doug at moens.org (doug moen)
Date: Fri, 29 Apr 2016 14:31:25 -0500
Subject: [OpenSCAD] building from source on Ubuntu 14.04 LTS
In-Reply-To: <CAGV6i+O1wbC1WLJ_z+vbwk=nKNpi9CeeGg74__d-_zpVF669Pw@mail.gmail.com>
References: <1461939813443-17237.post@n5.nabble.com>
	<CAGV6i+ObEaAuqXdro5FLgvWtoKy1XAErRiyR2sy08sLeRnfbZg@mail.gmail.com>
	<CAGV6i+O1wbC1WLJ_z+vbwk=nKNpi9CeeGg74__d-_zpVF669Pw@mail.gmail.com>
Message-ID: <CAGV6i+MB1zFF=QjC95s6ynwxVsKJBBtGyD44cOMC9bu-PeYHDQ@mail.gmail.com>

The test suites ran successfully on Ubuntu 16.04 after I added two more
missing dependencies:

# apt install cmake
# apt install libcgal-qt5-dev


On 29 April 2016 at 14:11, doug moen <doug at moens.org> wrote:

> On Ubuntu 16.04, scripts/uni-get-dependencies.sh is kind of broken, and I
> had to install a lot of additional packages in order to satisfy
> check-dependencies.sh:
>
> # apt install libcgal-dev
> # apt install libopencsg-dev
> # apt install libglew-dev
> # apt install libeigen3-dev
> # apt install libglib2.0-dev
> # apt install libfontconfig1-dev
> # apt install bison
> # apt install flex
>
> check-dependencies.sh is also somewhat broken, because it didn't prompt me
> to install these additional packages:
> # apt install libboost-filesystem-dev
> # apt install libboost-regex-dev
>
> However, after the dependencies were satisfied, the build worked and
> ./openscad seems to work. So I can confirm for lmcc that
> libqt5scintilla2-dev satisified my dependency for "qscintilla2".
>
> Now I'm trying to build the test suite. This is more dependency hell.
>
> On 29 April 2016 at 13:09, doug moen <doug at moens.org> wrote:
>
>> I'm on 16.04, but this should work for you as well.
>>
>> I've installed the package libqt5scintilla2-dev, and
>> check-dependencies.sh is happy with that.
>>
>> I DO NOT have libqscintilla2-dev installed. check-dependencies.sh doesn't
>> seem to check for that package.
>>
>> On 29 April 2016 at 09:23, lmcc <lmccourry at gmail.com> wrote:
>>
>>> I'm trying to build openscad in Ubuntu 14.04 LTS, but I am running into
>>> some
>>> problems. Here's what I've done:
>>>
>>>    git clone git://github.com/openscad/openscad.git
>>>
>>>    from README.md:
>>>       git submodule update --init
>>>
>>>       (here I switched to a bash shell)
>>>
>>>       source ./scripts/setenv-unibuild.sh
>>>
>>> depname     minimum     found       OKness
>>> qt          4.4         5.2.1       OK
>>> qscintilla2 2.7         unknown     NotOK
>>> cgal        3.6         4.4         OK
>>> gmp         5.0         5.0.5       OK
>>> mpfr        3.0         3.1.1       OK
>>> boost       1.35        1.56        OK
>>> opencsg     1.3.2       1.3.2       OK
>>> glew        1.5.4       1.7.0       OK
>>> eigen       3.0         3.2.2       OK
>>> glib2       2.0         2.38.2      OK
>>> fontconfig  2.10        2.11.       OK
>>> freetype2   2.4         2.5.0       OK
>>> harfbuzz    0.9.19      0.9.23      OK
>>> bison       2.4         3.0.2       OK
>>> flex        2.5.35      2.5.35      OK
>>> make        3           3.81        OK
>>>
>>> Warning: you have pkgconfig under /usr/local/lib
>>> Please verify these local copies don't conflict with the system
>>>
>>>
>>> 1. I don't  know how to solve the qscintilla2 complaint. I have installed
>>> qscintilla2-dev.
>>>
>>> 2. I don't know what the warning about pkgconfig means.
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> --
>>> View this message in context:
>>> http://forum.openscad.org/building-from-source-on-Ubuntu-14-04-LTS-tp17237.html
>>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>>
>>> _______________________________________________
>>> OpenSCAD mailing list
>>> Discuss at lists.openscad.org
>>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>>
>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160429/2cb5013e/attachment.html>

From Torsten.Paul at gmx.de  Fri Apr 29 20:07:12 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sat, 30 Apr 2016 02:07:12 +0200
Subject: [OpenSCAD] How to run a recent openscad on Ubuntu 14.04 LTS?
In-Reply-To: <1461947705646-17241.post@n5.nabble.com>
References: <1461947705646-17241.post@n5.nabble.com>
Message-ID: <5723F730.1080707@gmx.de>

On 04/29/2016 06:35 PM, lmcc wrote:
> The following information may help to resolve the situation:
> 
> The following packages have unmet dependencies:
>  openscad-nightly:i386 : Depends: libcgal10:i386 but it is not going to be
> installed
>                          Depends: libqscintilla2-11:i386 but it is not going
> to be installed
> E: Unable to correct problems, you have held broken packages.
> 
> 
Do you have the "Universe" package source enabled? Adding this should
resolve the issue.

ciao,
  Torsten.



From doug at moens.org  Fri Apr 29 20:43:54 2016
From: doug at moens.org (doug moen)
Date: Fri, 29 Apr 2016 19:43:54 -0500
Subject: [OpenSCAD] failing tests on Ubuntu 16.04
Message-ID: <CAGV6i+PYPXs9wHVvkovEswVue800c9wZOJWRa4MAwTqiNDED_Q@mail.gmail.com>

I built OpenSCAD on Ubuntu 16.04 and ran the default set of tests using
"ctest" with no arguments.
There are 3 failures:

The following tests FAILED:
    469 - opencsgtest_issue1165 (Failed)
    471 - opencsgtest_issue1215 (Failed)
    781 - throwntogethertest_issue1215 (Failed)

Is this expected behaviour or should I open an issue?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160429/dc6c8059/attachment.html>

From teranick at gmail.com  Sat Apr 30 01:57:56 2016
From: teranick at gmail.com (Zappo)
Date: Fri, 29 Apr 2016 22:57:56 -0700 (MST)
Subject: [OpenSCAD] Polygon Offset Function
In-Reply-To: <CA+i9EaBusLtfMfd2adcHq08gXZuZ=BHrva4rwSHM0dZCvGgKsg@mail.gmail.com>
References: <1461561746522-17186.post@n5.nabble.com>
	<1461605894980-17191.post@n5.nabble.com>
	<1461619727891-17192.post@n5.nabble.com>
	<1461736052353-17200.post@n5.nabble.com>
	<CAGV6i+P3vyYcHMtmBxd2Ee2tv5=tnTp779PzF4fvu-XS6Prqsw@mail.gmail.com>
	<1461904758556-17224.post@n5.nabble.com>
	<CA+i9EaBusLtfMfd2adcHq08gXZuZ=BHrva4rwSHM0dZCvGgKsg@mail.gmail.com>
Message-ID: <1461995876598-17248.post@n5.nabble.com>

Ronaldo  - I tweaked your example a little bit. I was worried about the
polygon folding back on itself and was having trouble visualizing it.  At
least in this example, the offset function is fairly well behaved, and the
direction reversal traces out a convex tip.  The clipping could obviously be
done within the thin_airfoil function itself.  Thanks for coding this up. 

The closed form derivative get more complex when camber is introduced.
https://en.wikipedia.org/wiki/NACA_airfoil, so I think the next step is to
code it up approximating the derivative with a delta step off the final
cambered airfoil function.


module thin_Naca_airfoil(c, t, offset, n) {
    //intersection() {
        polygon( thin_airfoil(c, t, offset, n) );
     //   square([c,c*t]);
    //}
}

thin_Naca_airfoil(100, 1/5, 10, 20); 

<http://forum.openscad.org/file/n17248/unclipped.png> 



--
View this message in context: http://forum.openscad.org/Polygon-Offset-Function-tp17186p17248.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From R.E.Wolff at BitWizard.nl  Sat Apr 30 03:07:41 2016
From: R.E.Wolff at BitWizard.nl (Rogier Wolff)
Date: Sat, 30 Apr 2016 09:07:41 +0200
Subject: [OpenSCAD] How to run a recent openscad on Ubuntu 14.04 LTS?
In-Reply-To: <CAGV6i+OuqBNc9D_tkUjNJCWcHUQ3ujd8vJ2a94=TEkMtVgmBrA@mail.gmail.com>
References: <1461947705646-17241.post@n5.nabble.com>
	<CAGV6i+OuqBNc9D_tkUjNJCWcHUQ3ujd8vJ2a94=TEkMtVgmBrA@mail.gmail.com>
Message-ID: <20160430070741.GC21524@BitWizard.nl>

On Fri, Apr 29, 2016 at 12:21:23PM -0500, doug moen wrote:
> I am also attempting to get the latest OpenSCAD running on Ubuntu, but my
> approach is to first upgrade to Ubuntu 16.04. And in order to make that
> work (I was previously running 14.04), I had to download the 16.04 ISO and
> do a fresh install, as it seems that no upgrade is currently possible. And
> uni-get-dependencies.sh is even more broken on 16.04 than it is on 14.04,
> so I have some work to do.

As a matter of policy, 16.04 has been released. But only when the
version number bumps to 16.04.1 does the upgrade manager consider it
as an upgrade for 14.04 Long Term Stable (*) users. If you want to
upgrade now you'll have to force it somehow. I'm pretty sure that's
possible, as I upgraded to 16.04 (from 15.10 over a month ago).

	Roger.


(*) Pun intended.

-- 
** R.E.Wolff at BitWizard.nl ** http://www.BitWizard.nl/ ** +31-15-2600998 **
**    Delftechpark 26 2628 XH  Delft, The Netherlands. KVK: 27239233    **
*-- BitWizard writes Linux device drivers for any device you may have! --*
The plan was simple, like my brother-in-law Phil. But unlike
Phil, this plan just might work.


From bcreful at gmail.com  Sat Apr 30 06:50:47 2016
From: bcreful at gmail.com (drs)
Date: Sat, 30 Apr 2016 03:50:47 -0700 (MST)
Subject: [OpenSCAD] Problem rendering code
In-Reply-To: <1461945344115-17240.post@n5.nabble.com>
References: <1461914770010-17226.post@n5.nabble.com>
	<1461922458152-17229.post@n5.nabble.com>
	<1461928117887-17232.post@n5.nabble.com>
	<1461935160353-17235.post@n5.nabble.com>
	<1461940690591-17238.post@n5.nabble.com>
	<1461945344115-17240.post@n5.nabble.com>
Message-ID: <1462013447788-17250.post@n5.nabble.com>

Thanks for all the tips,

I turned down the polygon count to $fn=20 and managed to render the whole
model in no time.



--
View this message in context: http://forum.openscad.org/Problem-rendering-code-tp17226p17250.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rudolf at parkinbot.com  Sat Apr 30 09:20:28 2016
From: rudolf at parkinbot.com (Parkinbot)
Date: Sat, 30 Apr 2016 06:20:28 -0700 (MST)
Subject: [OpenSCAD] Polygon Offset Function
In-Reply-To: <1461995876598-17248.post@n5.nabble.com>
References: <1461561746522-17186.post@n5.nabble.com>
	<1461605894980-17191.post@n5.nabble.com>
	<1461619727891-17192.post@n5.nabble.com>
	<1461736052353-17200.post@n5.nabble.com>
	<CAGV6i+P3vyYcHMtmBxd2Ee2tv5=tnTp779PzF4fvu-XS6Prqsw@mail.gmail.com>
	<1461904758556-17224.post@n5.nabble.com>
	<CA+i9EaBusLtfMfd2adcHq08gXZuZ=BHrva4rwSHM0dZCvGgKsg@mail.gmail.com>
	<1461995876598-17248.post@n5.nabble.com>
Message-ID: <1462022428291-17251.post@n5.nabble.com>

The straight forward approach would be to calculate the normal for each edge
and just add up your inset along this vector to one of the vertices (or even
better: to the middle vertex of the edge). The rest is eliminating self
intersection (for inset only), which can get a bit nasty if you go into the
details. The 'dirty' one-line approach is to use some procrustes cut from
left and right.   

For outset call inset() with a negative value.


> use 
> <Naca4.scad>
> L = 100; 
> p = airfoil_data(naca = 1410, N=90, L=L); 
> p_ = inset(p, 1); 
> q = cut(p_, 1, 92);
> 
> linear_extrude(height = .1) polygon(p); 
> color("white") linear_extrude(height = .3) polygon(q); 
> 
> function inset(A, d) =  [for(i = [0:len(A)-2])   let (v = A[i+1]-A[i]) let
> (n = [v[1], -v[0]]/norm(v))  A[i]+d*n];
>   
> function cut(A, a, b) =   [for(i = [0:len(A)-2])    if (A[i][0]>=a &&
> A[i][0]<=b) 

<http://forum.openscad.org/file/n17251/inset.png> 




--
View this message in context: http://forum.openscad.org/Polygon-Offset-Function-tp17186p17251.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Sat Apr 30 12:10:02 2016
From: marius at kintel.net (Marius Kintel)
Date: Sat, 30 Apr 2016 12:10:02 -0400
Subject: [OpenSCAD] failing tests on Ubuntu 16.04
In-Reply-To: <CAGV6i+PYPXs9wHVvkovEswVue800c9wZOJWRa4MAwTqiNDED_Q@mail.gmail.com>
References: <CAGV6i+PYPXs9wHVvkovEswVue800c9wZOJWRa4MAwTqiNDED_Q@mail.gmail.com>
Message-ID: <AF343A31-5D1C-4F90-9F99-4B6E378944AF@kintel.net>

Hi Doug,

Issues with OpenGL drivers tend to influence tests. Is this on a VM or on actual hardware?
I believe both these are related to rendering  of z fighting being non-deterministic across platforms.
I _think_ all tests pass on Ubuntu 14.04. We have to disable a bunch of them under Ubuntu 12.04 VMs (e.g. Travis). See https://github.com/openscad/openscad/blob/master/scripts/travis-ci.sh

We may have to disable *_issue1215 as well.
Please make note of this in an issue, perhaps make a generate Ubuntu 16.04 issue?

 -Marius

> On Apr 29, 2016, at 20:43 PM, doug moen <doug at moens.org> wrote:
> 
> I built OpenSCAD on Ubuntu 16.04 and ran the default set of tests using "ctest" with no arguments.
> There are 3 failures:
> 
> The following tests FAILED:
>     469 - opencsgtest_issue1165 (Failed)
>     471 - opencsgtest_issue1215 (Failed)
>     781 - throwntogethertest_issue1215 (Failed)
> 
> Is this expected behaviour or should I open an issue?
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From marius at kintel.net  Sat Apr 30 12:28:43 2016
From: marius at kintel.net (Marius Kintel)
Date: Sat, 30 Apr 2016 12:28:43 -0400
Subject: [OpenSCAD] building from source on Ubuntu 14.04 LTS
In-Reply-To: <CAGV6i+O1wbC1WLJ_z+vbwk=nKNpi9CeeGg74__d-_zpVF669Pw@mail.gmail.com>
References: <1461939813443-17237.post@n5.nabble.com>
	<CAGV6i+ObEaAuqXdro5FLgvWtoKy1XAErRiyR2sy08sLeRnfbZg@mail.gmail.com>
	<CAGV6i+O1wbC1WLJ_z+vbwk=nKNpi9CeeGg74__d-_zpVF669Pw@mail.gmail.com>
Message-ID: <2BF06586-9C77-444B-9446-FD37789D6587@kintel.net>

Hi Doug,

Those scripts could indeed need some maintenance. They are primarily meant as helper scripts to get started, so I guess they tend not to be used by developers on a daily basis and thus fall out of maintenance. Plus that it sucks to maintain this across multiple distros and versions, as every time you make a change you?re bound to break it for someone else : /
On OS X, I?m maintaining a similar script, but the benefit is that OS X just one ?distro? and we only support the 3 latest major versions.

Patches are welcome :)

 -Marius



From marius at kintel.net  Sat Apr 30 12:35:16 2016
From: marius at kintel.net (Marius Kintel)
Date: Sat, 30 Apr 2016 12:35:16 -0400
Subject: [OpenSCAD] Assertion failure on difference() {import(...), ...}
In-Reply-To: <1461773030105-17214.post@n5.nabble.com>
References: <1461773030105-17214.post@n5.nabble.com>
Message-ID: <DF0F8440-1DA8-451F-AA54-C51898937DBB@kintel.net>

This sounds like an instance of https://github.com/openscad/openscad/issues/1184

Could you share your STL, or otherwise check the STL in an external program to check if it displays any intersecting behavior?

 -Marius



From Torsten.Paul at gmx.de  Sat Apr 30 12:45:12 2016
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sat, 30 Apr 2016 18:45:12 +0200
Subject: [OpenSCAD] building from source on Ubuntu 14.04 LTS
In-Reply-To: <2BF06586-9C77-444B-9446-FD37789D6587@kintel.net>
References: <1461939813443-17237.post@n5.nabble.com>
	<CAGV6i+ObEaAuqXdro5FLgvWtoKy1XAErRiyR2sy08sLeRnfbZg@mail.gmail.com>
	<CAGV6i+O1wbC1WLJ_z+vbwk=nKNpi9CeeGg74__d-_zpVF669Pw@mail.gmail.com>
	<2BF06586-9C77-444B-9446-FD37789D6587@kintel.net>
Message-ID: <5724E118.9060302@gmx.de>

On 04/30/2016 06:28 PM, Marius Kintel wrote:
> ....to maintain this across multiple distros and versions, as every
> time you make a change you?re bound to break it for someone else : /
>
In addition it looks like we are running into more issues as OBS
never had the Ubuntu Universe stuff available. Up to now it was
just a matter of rebuilding a couple of packages. For 16.04 I
stopped when it needed both TeX and Java.

Which means there are no Ubuntu 16.04 nightly builds for now :-(.

Unfortunately there's no other option yet.

ciao,
  Torsten.



From vector76 at gmail.com  Sat Apr 30 12:59:46 2016
From: vector76 at gmail.com (Jamie_K)
Date: Sat, 30 Apr 2016 09:59:46 -0700 (MST)
Subject: [OpenSCAD] Polygon Offset Function
In-Reply-To: <1462022428291-17251.post@n5.nabble.com>
References: <1461561746522-17186.post@n5.nabble.com>
	<1461605894980-17191.post@n5.nabble.com>
	<1461619727891-17192.post@n5.nabble.com>
	<1461736052353-17200.post@n5.nabble.com>
	<CAGV6i+P3vyYcHMtmBxd2Ee2tv5=tnTp779PzF4fvu-XS6Prqsw@mail.gmail.com>
	<1461904758556-17224.post@n5.nabble.com>
	<CA+i9EaBusLtfMfd2adcHq08gXZuZ=BHrva4rwSHM0dZCvGgKsg@mail.gmail.com>
	<1461995876598-17248.post@n5.nabble.com>
	<1462022428291-17251.post@n5.nabble.com>
Message-ID: <1462035586167-17256.post@n5.nabble.com>

I'm curious about this offset function.  If the offset is interpreted as an
offset to the edges, then the vertices will move by a larger amount and not
perpendicular to either segment when the two adjacent edges move, due to the
corner.  For example, at a right angle, if both edges move by x, then the
corner will move diagonally by sqrt(2) * x.

To compute this, each line segment can be transformed into an equation 
a*x+b*y = c
and then each equation offset using
a*x+b*y = c+offs
Given two such offset equations, the new vertex is the intersection of these
two lines which is found by solving the two equations.

Here are some functions that do exactly that:



For the example airfoil below it does produce self-intersections, so I am
looking at trying to make a cleanup function for "simple" self-intersections
like these.



Incidentally, for this airfoil, adjusting each point perpendicular to the
line segments produces a rather severe distortion, so I would recommend that
approach only be used for 'organic' shapes with many small segments and
gentle angles, and avoid using it on geometric shapes with large segments
and sharp angles.

<http://forum.openscad.org/file/n17256/airfoil_offset.png> 

<http://forum.openscad.org/file/n17256/airfoil_offset_intersect.png> 




--
View this message in context: http://forum.openscad.org/Polygon-Offset-Function-tp17186p17256.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Sat Apr 30 13:25:03 2016
From: doug at moens.org (doug moen)
Date: Sat, 30 Apr 2016 13:25:03 -0400
Subject: [OpenSCAD] failing tests on Ubuntu 16.04
In-Reply-To: <AF343A31-5D1C-4F90-9F99-4B6E378944AF@kintel.net>
References: <CAGV6i+PYPXs9wHVvkovEswVue800c9wZOJWRa4MAwTqiNDED_Q@mail.gmail.com>
	<AF343A31-5D1C-4F90-9F99-4B6E378944AF@kintel.net>
Message-ID: <CAGV6i+OBWk1u6aC=p9rOe7C=5C8tG+cvM8H3E80GkxMyDRMRXg@mail.gmail.com>

@Marius: I can't prove it's a driver issue.

I'm not using a VM. I'm using an NVidia graphics card, GT 218 [GeForce
210], GL_RENDERER is "Gallium 0.4 on NVA8". I'm using the default Nouveau
open source driver.

If I switch to the NVidia-340 proprietary driver, the same tests fail.

Force Goldfeather does *not* fix the problem: the same tests fail with both
of the above drivers. So I've tested 4 variations with no change in
behaviour.

I will file an issue.

On 30 April 2016 at 12:10, Marius Kintel <marius at kintel.net> wrote:

> Hi Doug,
>
> Issues with OpenGL drivers tend to influence tests. Is this on a VM or on
> actual hardware?
> I believe both these are related to rendering  of z fighting being
> non-deterministic across platforms.
> I _think_ all tests pass on Ubuntu 14.04. We have to disable a bunch of
> them under Ubuntu 12.04 VMs (e.g. Travis). See
> https://github.com/openscad/openscad/blob/master/scripts/travis-ci.sh
>
> We may have to disable *_issue1215 as well.
> Please make note of this in an issue, perhaps make a generate Ubuntu 16.04
> issue?
>
>  -Marius
>
> > On Apr 29, 2016, at 20:43 PM, doug moen <doug at moens.org> wrote:
> >
> > I built OpenSCAD on Ubuntu 16.04 and ran the default set of tests using
> "ctest" with no arguments.
> > There are 3 failures:
> >
> > The following tests FAILED:
> >     469 - opencsgtest_issue1165 (Failed)
> >     471 - opencsgtest_issue1215 (Failed)
> >     781 - throwntogethertest_issue1215 (Failed)
> >
> > Is this expected behaviour or should I open an issue?
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20160430/60cbf0be/attachment.html>

From rcmpersiano at gmail.com  Sat Apr 30 15:09:02 2016
From: rcmpersiano at gmail.com (Ronaldo)
Date: Sat, 30 Apr 2016 12:09:02 -0700 (MST)
Subject: [OpenSCAD] Polygon Offset Function
In-Reply-To: <1462035586167-17256.post@n5.nabble.com>
References: <1461561746522-17186.post@n5.nabble.com>
	<1461605894980-17191.post@n5.nabble.com>
	<1461619727891-17192.post@n5.nabble.com>
	<1461736052353-17200.post@n5.nabble.com>
	<CAGV6i+P3vyYcHMtmBxd2Ee2tv5=tnTp779PzF4fvu-XS6Prqsw@mail.gmail.com>
	<1461904758556-17224.post@n5.nabble.com>
	<CA+i9EaBusLtfMfd2adcHq08gXZuZ=BHrva4rwSHM0dZCvGgKsg@mail.gmail.com>
	<1461995876598-17248.post@n5.nabble.com>
	<1462022428291-17251.post@n5.nabble.com>
	<1462035586167-17256.post@n5.nabble.com>
Message-ID: <1462043342564-17258.post@n5.nabble.com>

@Jamie K. I had proposed the use of the curve normal (computed from the curve
derivative) for the airfoil because: a) the airfoil curve is differentiable,
b) the offset was small and c) the curve was finely discretized. If you have
a right angle in the curve it is not differentiable and that approach is not
valid. Similarly if the offset is greater then curvature radius of the curve
in a convex section, self-intersections will emerge. So, its only valid for
offsets small enough. Finally, if the curve discretization is course, the
proposed procedure would generate a crude approximation of the offset. It is
not by no means a general procedure.



--
View this message in context: http://forum.openscad.org/Polygon-Offset-Function-tp17186p17258.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From teranick at gmail.com  Sat Apr 30 15:49:30 2016
From: teranick at gmail.com (Zappo)
Date: Sat, 30 Apr 2016 12:49:30 -0700 (MST)
Subject: [OpenSCAD] Polygon Offset Function
In-Reply-To: <1462035586167-17256.post@n5.nabble.com>
References: <1461561746522-17186.post@n5.nabble.com>
	<1461605894980-17191.post@n5.nabble.com>
	<1461619727891-17192.post@n5.nabble.com>
	<1461736052353-17200.post@n5.nabble.com>
	<CAGV6i+P3vyYcHMtmBxd2Ee2tv5=tnTp779PzF4fvu-XS6Prqsw@mail.gmail.com>
	<1461904758556-17224.post@n5.nabble.com>
	<CA+i9EaBusLtfMfd2adcHq08gXZuZ=BHrva4rwSHM0dZCvGgKsg@mail.gmail.com>
	<1461995876598-17248.post@n5.nabble.com>
	<1462022428291-17251.post@n5.nabble.com>
	<1462035586167-17256.post@n5.nabble.com>
Message-ID: <1462045770704-17259.post@n5.nabble.com>

@Jamie K  
Agreed.  We need a function to "clean up" polygon self intersections.  (or
just use CGAL -hint hint)

Also once you add in the camber equations, the final X and Y points become
parametric so the first step is to identify the line segments that
intersect.  I am thinking to step thru the bottom polyline while doing a
lookup on the other polyline for a GT or LT crossing and visa-versa.  Once
the crossing segments are identified, the intersection point can be
calculated as you indicated.

The unit normal of the original function, not the polyline, at each vertex
should give the bisector between this and the next line segment.  There's
probably some cleaner geometric ways to calculate the bisector of two
adjacent segments not using the function unit normal.  I suppose you then
create the offset parallelogram and solve for the offset point. But you
still have the self intersection problem.

Here is a NACA 4312 airfoil with about 200 of polygon points.

<http://forum.openscad.org/file/n17259/self_intersect.png> 



--
View this message in context: http://forum.openscad.org/Polygon-Offset-Function-tp17186p17259.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From denber at mindspring.com  Sat Apr 30 15:53:41 2016
From: denber at mindspring.com (Michele Denber)
Date: Sat, 30 Apr 2016 15:53:41 -0400
Subject: [OpenSCAD] building from source on Ubuntu 14.04 LTS
In-Reply-To: <2BF06586-9C77-444B-9446-FD37789D6587@kintel.net>
References: <1461939813443-17237.post@n5.nabble.com>	<CAGV6i+ObEaAuqXdro5FLgvWtoKy1XAErRiyR2sy08sLeRnfbZg@mail.gmail.com>	<CAGV6i+O1wbC1WLJ_z+vbwk=nKNpi9CeeGg74__d-_zpVF669Pw@mail.gmail.com>
	<2BF06586-9C77-444B-9446-FD37789D6587@kintel.net>
Message-ID: <57250D45.4030700@mindspring.com>

On 04-30-2016 12:28 PM, Marius Kintel wrote:
> Those scripts could indeed need some maintenance. ...
>    
I can report that the dependency checker has problems in Solaris 10.  It 
says that qt, cgal, gcc, and make are all unknown, even though they're 
there.
> Patches are welcome :)
>    
I'd be happy to help, if I knew what to do.

             - Michele



From mschafer at wireframe.biz  Sat Apr 30 19:16:07 2016
From: mschafer at wireframe.biz (Neon22)
Date: Sat, 30 Apr 2016 16:16:07 -0700 (MST)
Subject: [OpenSCAD] Polygon Offset Function
In-Reply-To: <1462045770704-17259.post@n5.nabble.com>
References: <1461605894980-17191.post@n5.nabble.com>
	<1461619727891-17192.post@n5.nabble.com>
	<1461736052353-17200.post@n5.nabble.com>
	<CAGV6i+P3vyYcHMtmBxd2Ee2tv5=tnTp779PzF4fvu-XS6Prqsw@mail.gmail.com>
	<1461904758556-17224.post@n5.nabble.com>
	<CA+i9EaBusLtfMfd2adcHq08gXZuZ=BHrva4rwSHM0dZCvGgKsg@mail.gmail.com>
	<1461995876598-17248.post@n5.nabble.com>
	<1462022428291-17251.post@n5.nabble.com>
	<1462035586167-17256.post@n5.nabble.com>
	<1462045770704-17259.post@n5.nabble.com>
Message-ID: <1462058167760-17261.post@n5.nabble.com>

In my experience:
- you move the vertices along the calculated normal,
- monitoring adjacent edge lengths,
- as they approach zero (or change direction indicating reversal) you remove
them.

In the more general case (where these two edge lists may want to maintain
connectivity),
- this implies existence of a lofting operator that can connect verts in two
edgelists which don't have the same number of vertices.
Something that has to be done by examining how close vertices are to each
other (rather than just counting) and finding points of correspondance to
connect.
But we'd only need that if we were going to have lofting in the future.



--
View this message in context: http://forum.openscad.org/Polygon-Offset-Function-tp17186p17261.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


