From bioinformatics at gringene.org  Fri May  1 04:48:04 2015
From: bioinformatics at gringene.org (David Eccles (gringer))
Date: Fri, 1 May 2015 01:48:04 -0700 (MST)
Subject: [OpenSCAD] .ies volume visualization
In-Reply-To: <1430395163096-12522.post@n5.nabble.com>
References: <1430395163096-12522.post@n5.nabble.com>
Message-ID: <1430470084598-12524.post@n5.nabble.com>

I guess it all depends on what you're willing to give up. Openscad doesn't do
lighting, but the debug operators combined with the intersection might be
good enough, if you don't mind all your lights having a red hue:



[the 'color' operator doesn't seem to affect this debug operator]

If you want a better modelling of lighting and/or colouring transparent
cones, I'd suggest blender:

http://wiki.blender.org/index.php/Doc:2.4/Manual/Lighting/Lamps/Spot



--
View this message in context: http://forum.openscad.org/ies-volume-visualization-tp12522p12524.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrew at plumb.org  Fri May  1 10:15:57 2015
From: andrew at plumb.org (clothbot)
Date: Fri, 1 May 2015 07:15:57 -0700 (MST)
Subject: [OpenSCAD] New 3MF file format
Message-ID: <1430489757472-12525.post@n5.nabble.com>

Hey Everyone,

I've created Issue #1331 (see
https://github.com/openscad/openscad/issues/1331) to gather info and
interest around this new file format being developed by Microsoft and
others:

http://3dprintingindustry.com/2015/04/30/microsoft-announces-3mf-consortium-for-3d-printing-file-format/


Open Source examples (licenses tbd) will apparently be appearing via GitHub:

http://www.3mf.io/what-is-3mf/

--snip--

The code to read or write 3MF is available as open source: Microsoft?s
donated code reads STL/OBJ/3MF, writes 3MF, and can use Web Services for
model repair. The source code will be on Github and cross-platform code is
in development.

--end-snip--


...and apparently it'll be an open standard and will be relatively patent
unencumbered:

http://www.3mf.io/what-is-3mf/3mf-specification/

--snip--

3MF members have agreed to make their necessary patent claims available for
implementations of the 3MF Core Specification and 3MF Materials
Specification on a royalty-free basis.  For details, please review the Joint
Development Foundation Working Group Charter Appendix A, Patent Policy
Option 2, available at http://bit.ly/1KqwpFU.

--end-snip--


Thoughts?

Andrew.




--
View this message in context: http://forum.openscad.org/New-3MF-file-format-tp12525.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From ed.nisley at pobox.com  Fri May  1 10:50:08 2015
From: ed.nisley at pobox.com (Ed Nisley)
Date: Fri, 01 May 2015 10:50:08 -0400
Subject: [OpenSCAD] New 3MF file format
In-Reply-To: <1430489757472-12525.post@n5.nabble.com>
References: <1430489757472-12525.post@n5.nabble.com>
Message-ID: <554392A0.7070702@pobox.com>

> Thoughts?

Proprietary lock-in.

This phrase from Appendix A tells you all you need to know about the 
patent licensing: "on fair, reasonable, and non-discriminatory terms". 
If the FRAND patent model worked, the mobile phone and tablet industry 
would be a happy garden of mutual innovation, rather than a dismal swamp 
of litigation.

The broad exceptions in Item 3 of Option 2 tells you that anything you 
create *will* be deemed infringing, because you'll be innovating in a 
related field that's not covered by the FRAND license. The only question 
will be whether you have enough money to make you a worthwhile target.

I. Am. Not. A. Lawyer.

-- 
Ed
softsolder.com


From doug at moens.org  Fri May  1 11:28:00 2015
From: doug at moens.org (doug moen)
Date: Fri, 1 May 2015 11:28:00 -0400
Subject: [OpenSCAD] New 3MF file format
In-Reply-To: <554392A0.7070702@pobox.com>
References: <1430489757472-12525.post@n5.nabble.com>
	<554392A0.7070702@pobox.com>
Message-ID: <CAGV6i+PnaTDzHWfYN6-wcN7nVy8BnHe04HqK-ghthJDXuS3viw@mail.gmail.com>

I haven't read the 3MF format spec, but it sounds superficially a lot like
AMF, with maybe a few additional features. AMF is also an XML based format,
which means it is easily extensible. Microsoft could have used or extended
AMF, but my experience with Microsoft and standards committees is that they
don't like to play in other people's sandboxes. They generally want to own
the sandbox.

We have a lot of Windows users, so it's possible that at some point, there
could be user demand for the ability to import/export 3MF. Microsoft will
want us to support this feature, in terms of their overall goals for 3MF,
so it's unlikely that they would sue us for implementing 3MF import/export.
Yes, I know it doesn't work that way for open source projects implementing
audio/video codecs, but I think this is different. Microsoft wants to use
3D printer support as a new way to drive people to use Windows, and they
won't succeed if they demand licensing fees from every open source project
that tries to support their 3D printer interface. And I think they
understand that.

I am also not a lawyer.

On 1 May 2015 at 10:50, Ed Nisley <ed.nisley at pobox.com> wrote:

> Thoughts?
>>
>
> Proprietary lock-in.
>
> This phrase from Appendix A tells you all you need to know about the
> patent licensing: "on fair, reasonable, and non-discriminatory terms". If
> the FRAND patent model worked, the mobile phone and tablet industry would
> be a happy garden of mutual innovation, rather than a dismal swamp of
> litigation.
>
> The broad exceptions in Item 3 of Option 2 tells you that anything you
> create *will* be deemed infringing, because you'll be innovating in a
> related field that's not covered by the FRAND license. The only question
> will be whether you have enough money to make you a worthwhile target.
>
> I. Am. Not. A. Lawyer.
>
> --
> Ed
> softsolder.com
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150501/0ae18c6d/attachment.html>

From marius at kintel.net  Fri May  1 11:44:22 2015
From: marius at kintel.net (Marius Kintel)
Date: Fri, 1 May 2015 11:44:22 -0400
Subject: [OpenSCAD] New 3MF file format
In-Reply-To: <CAGV6i+PnaTDzHWfYN6-wcN7nVy8BnHe04HqK-ghthJDXuS3viw@mail.gmail.com>
References: <1430489757472-12525.post@n5.nabble.com>
	<554392A0.7070702@pobox.com>
	<CAGV6i+PnaTDzHWfYN6-wcN7nVy8BnHe04HqK-ghthJDXuS3viw@mail.gmail.com>
Message-ID: <FC3FC5C6-E743-4350-B292-EF77B1673349@kintel.net>

I didn?t read the spec either, but my earlier information on the topic tells me that Microsoft did indeed build their own sandbox, using an XML-based packaging format which includes support for DRM, to ensure that people having access to 3MF files cannot access the content if they don?t have the correct license.
Microsoft released the format spec under an NDA ca. 2 years ago, but I didn?t sign or look at it for obvious reasons.

Let?s see when the reference implementation arrives, and we get to know what Microsoft?s definition of ?cross-platform code? is :)

 -Marius



From runsun at gmail.com  Fri May  1 12:58:01 2015
From: runsun at gmail.com (runsun)
Date: Fri, 1 May 2015 09:58:01 -0700 (MST)
Subject: [OpenSCAD] Sharing: Dump echo output to a file
Message-ID: <1430499481550-12529.post@n5.nabble.com>

Occasionally there might be a need to dump the echo output to a file. For
example, "automatically generate BOMs and debug measurements and information
to files." as described by carlosgs  here
<https://github.com/openscad/openscad/pull/845>   [1], or in the application
of my doctest lib (  here <https://github.com/runsun/openscad_doctest>   ). 

Unfortunately OpenScad can't do that, and there seems to be no plan
(according to [1]) for that feature. 

But there are ways to get around it:

(1) You can dump echo output to a file under command line (Linux):

>>> openscad &lt;scad_file> -o dump.stl -D "&lt;commands_to_execute>" 2>
>>> &lt;output_file> 

For example, one of my uses looks like this:

>>> time openscad mylib.scad -o dump.stl -D "FORHTML=true;runtest()" 2>
>>> mylib_api.htm

(2) The above approach works, but every echo( ) inserts "ECHO: " to the
beginning of output and a trailing " in the end. It is inconvenient to have
multiple execution-unrelated "ECHO: " in an output file, especially if the
main purpose of dumping to a file is for further automatic processing. 

*The easiest way for OpenSCAD to solve this is to have an option to suppress
the display of "ECHO: "*. 

But, before that being considered a feature to add, we can use the following
simple python script. Note that: (1) It is coded on Linux and hasn't been
tested on Win or Mac; (2) It assumes that /all echo output are strings/. It
can be used this way:

>>> time python runscad.py mylib.scad "FORHTML=true;runtest()" mylib_api.htm



> ############################## ## runscad.py## Run an openscad file and
> dump the echo output to a file## >>> python runscad.py &lt;scad_file>
> "&lt;commands_to_execute>" &lt;output_file>## Like:## >>> python
> runscad.py mylib.scad "FORHTML=true;runtest()" mylib_api.htm## by Runsun
> Pan (2015.5.1)############################## 

> import sys, os, reif len(sys.argv)<4:   print 

> '''# runscad.py## Not enough arguments. Required 3 arguments:##    python
> runscad.py &lt;scad_file> "&lt;command(s)>" &lt;output_file>## For
> example:##    python runscad.py myprog.scad "FORHTML=true;MODE=10;run()"
> tests.html'''

> else:   cmd = 

> 'openscad %s -o dump.stl -D "%s" 2> %s'

> % tuple(sys.argv[1:])   os.system( cmd )   output_file= sys.argv[3]  
> lines = open( output_file, 'r').readlines()   

> # Remove the starting 'ECHO: "' and trailing " on each line

>    ptn = re.compile(r'ECHO: \"|"$')   for i,line in enumerate(lines):       
> lines[i] = re.sub( ptn,'', line)   

> # Save to file. Exclude the last line, which reads:   # "Current top level
> object is empty."

>    open( output_file, 'w').write( '\n'.join( lines[:-1] )
> )##############################

 



-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Sharing-Dump-echo-output-to-a-file-tp12529.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150501/3632eda2/attachment.html>

From hyperair at debian.org  Fri May  1 13:09:53 2015
From: hyperair at debian.org (Chow Loong Jin)
Date: Sat, 2 May 2015 01:09:53 +0800
Subject: [OpenSCAD] bend a pipe/tube
In-Reply-To: <1430412723901-12523.post@n5.nabble.com>
References: <20150429082455.GK7774@gmail.com>
	<1430296378422-12506.post@n5.nabble.com>
	<20150429092056.GL7774@gmail.com> <20150429092540.GM7774@gmail.com>
	<1430301473585-12509.post@n5.nabble.com>
	<C4CD6391-5552-402D-A2FD-0FC5C82833F2@kintel.net>
	<1430318377599-12512.post@n5.nabble.com>
	<1430319034981-12513.post@n5.nabble.com>
	<20150430051417.GN7774@gmail.com>
	<1430412723901-12523.post@n5.nabble.com>
Message-ID: <20150501170951.GB2847@gmail.com>

On Thu, Apr 30, 2015 at 09:52:03AM -0700, biskero wrote:
> Ciao,
> 
> I looked at what you said about changing the following code but not sure how
> to do it with the lib you mention:
> 
> translate([0,0,-r2-1]) 
>                         linear_extrude(height=2*r2+2) 
>         polygon([ 
>                             [0,0], 
>                             [trx * cos(a0), try * sin(a0)], 
>                             [trx * cos(a1), try * sin(a1)], 
>                             [trx * cos(a2), try * sin(a2)], 
>                             [trx * cos(a3), try * sin(a3)], 
>                             [trx * cos(a4), try * sin(a4)], 
>                             [0,0] 
>                        ]);

translate([0,0,-r2-1])
linear_extrude(height=2*r2+2)
pieSlice (size = max (trx, try), start_angle = start_angle, end_angle = end_angle);

By the way, I'll just leave this here as another sweep() example:

use <MCAD/general/sweep.scad>
use <MCAD/general/facets.scad>
use <scad-utils/shapes.scad>
use <scad-utils/transformations.scad>

$fs = 0.4;
$fa = 1;


function cot (angle) = 1 / tan (angle);

module elliptical_torus (r_x, r_y, cross_section_r)
{
    cross_section = circle (r = cross_section_r,
        $fn = get_fragments_from_r (cross_section_r));

    // from http://math.stackexchange.com/questions/432902/
    function radius_at_angle (angle) = (
        (r_x * r_y) /
        sqrt (pow (r_x * sin (angle), 2) + pow (r_y * cos (angle), 2))
    );

    // g, flattening factor as per wiki
    flattening_factor = 1 - r_y / r_x;
    function tangential_angle (polar_angle) = (
        ((polar_angle % 360 > 180) ? 180 : 0) +
        atan (-1 / (tan (polar_angle) / pow (1 - flattening_factor, 2)))
    );

    sweep (
        cross_section,
        [
            for (t = gen_facet_series (min (r_x, r_y)))
            let (angle = t * 360)
            translation ([r_x * cos (angle), r_y * sin (angle), 0]) *
            rotation ([0, 0, 90 + tangential_angle (angle)]) *
            rotation ([90, 0, 0])
        ],
        true
    );
}

elliptical_torus (r_x = 40, r_y = 20, cross_section_r = 2);


-- 
Kind regards,
Loong Jin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: Digital signature
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150502/764abaec/attachment.asc>

From jdawgaz at gmail.com  Fri May  1 13:31:10 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Fri, 1 May 2015 10:31:10 -0700
Subject: [OpenSCAD] Sharing: Dump echo output to a file
In-Reply-To: <1430499481550-12529.post@n5.nabble.com>
References: <1430499481550-12529.post@n5.nabble.com>
Message-ID: <CAMyDR6LB=OU6TM-H7ZK0vkJ2ou7nPL3VQyFD8=WdADMiYu2sFQ@mail.gmail.com>

On Fri, May 1, 2015 at 9:58 AM, runsun <runsun at gmail.com> wrote:

> openscad <scad_file> -o dump.stl -D "<commands_to_execute>" 2>
> <output_file>
>


how about this?

openscad testthingie.scad -o junk.stl 2>&1 >/dev/null | sed 's/ECHO: "//' |
sed 's/"$//' > outfile

Jerry

--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150501/c0771d5c/attachment.html>

From ethan.dicks at gmail.com  Fri May  1 13:39:01 2015
From: ethan.dicks at gmail.com (Ethan Dicks)
Date: Fri, 1 May 2015 13:39:01 -0400
Subject: [OpenSCAD] New 3MF file format
In-Reply-To: <CAGV6i+PnaTDzHWfYN6-wcN7nVy8BnHe04HqK-ghthJDXuS3viw@mail.gmail.com>
References: <1430489757472-12525.post@n5.nabble.com>
	<554392A0.7070702@pobox.com>
	<CAGV6i+PnaTDzHWfYN6-wcN7nVy8BnHe04HqK-ghthJDXuS3viw@mail.gmail.com>
Message-ID: <CAALmimmbs6AGrDyKFdXzsp-=H8K=BrNHi+zxHSgWb=6C84Ob6Q@mail.gmail.com>

On Fri, May 1, 2015 at 11:28 AM, doug moen <doug at moens.org> wrote:
> I haven't read the 3MF format spec, but it sounds superficially a lot like
> AMF, with maybe a few additional features. AMF is also an XML based format,
> which means it is easily extensible. Microsoft could have used or extended
> AMF, but my experience with Microsoft and standards committees is that they
> don't like to play in other people's sandboxes. They generally want to own
> the sandbox.

I have zero interest in supporting a vendor-extended "standard".

If Microsoft wants to lead the pack, they have to open this up.  Period.

>> The broad exceptions in Item 3 of Option 2 tells you that anything you
>> create *will* be deemed infringing, because you'll be innovating in a
>> related field that's not covered by the FRAND license. The only question
>> will be whether you have enough money to make you a worthwhile target.

Exactly.

>> I. Am. Not. A. Lawyer.

Ditto.

-ethan


From runsun at gmail.com  Fri May  1 13:55:15 2015
From: runsun at gmail.com (runsun)
Date: Fri, 1 May 2015 10:55:15 -0700 (MST)
Subject: [OpenSCAD] Sharing: Dump echo output to a file
In-Reply-To: <CAMyDR6LB=OU6TM-H7ZK0vkJ2ou7nPL3VQyFD8=WdADMiYu2sFQ@mail.gmail.com>
References: <1430499481550-12529.post@n5.nabble.com>
	<CAMyDR6LB=OU6TM-H7ZK0vkJ2ou7nPL3VQyFD8=WdADMiYu2sFQ@mail.gmail.com>
Message-ID: <1430502915417-12533.post@n5.nabble.com>

Hi Jerry, that's a much shorter one :)

In fact I started this with a sed version, too. Not as elegant as yours but
works. I then move on to the python one 'cos I thought it'd be
cross-platform.

Nonetheless, will steal your idea and make an alias outta it. Thx. 


jdawgaz wrote
> openscad testthingie.scad -o junk.stl 2>&1 >/dev/null | sed 's/ECHO: "//'
> | sed 's/"$//' > outfile
> 
> Jerry





-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Sharing-Dump-echo-output-to-a-file-tp12529p12533.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jdawgaz at gmail.com  Fri May  1 14:32:38 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Fri, 1 May 2015 11:32:38 -0700
Subject: [OpenSCAD] Sharing: Dump echo output to a file
In-Reply-To: <1430502915417-12533.post@n5.nabble.com>
References: <1430499481550-12529.post@n5.nabble.com>
	<CAMyDR6LB=OU6TM-H7ZK0vkJ2ou7nPL3VQyFD8=WdADMiYu2sFQ@mail.gmail.com>
	<1430502915417-12533.post@n5.nabble.com>
Message-ID: <CAMyDR6+twODuvjjeWR5w-s1Gc9knhNGncbipPU=5Wugg6zZEPg@mail.gmail.com>

no problemo.

the python one would work in windoze.

don't get me wrong, I love python too. And ruby.
Before retiring, I did 5 years of every day python work. grew to love it.
Now I play with my raspberry pi and python (and ruby)




Jerry

--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson

On Fri, May 1, 2015 at 10:55 AM, runsun <runsun at gmail.com> wrote:

> Hi Jerry, that's a much shorter one :)
>
> In fact I started this with a sed version, too. Not as elegant as yours but
> works. I then move on to the python one 'cos I thought it'd be
> cross-platform.
>
> Nonetheless, will steal your idea and make an alias outta it. Thx.
>
>
> jdawgaz wrote
> > openscad testthingie.scad -o junk.stl 2>&1 >/dev/null | sed 's/ECHO: "//'
> > | sed 's/"$//' > outfile
> >
> > Jerry
>
>
>
>
>
> -----
>
> $  Runsun Pan, PhD
>
> $ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  )
>
> $ -- hash parameter model: here , here
>
> $ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Sharing-Dump-echo-output-to-a-file-tp12529p12533.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150501/b99ab691/attachment-0001.html>

From alan at lxorguk.ukuu.org.uk  Fri May  1 15:07:26 2015
From: alan at lxorguk.ukuu.org.uk (Alan Cox)
Date: Fri, 1 May 2015 20:07:26 +0100
Subject: [OpenSCAD] New 3MF file format
In-Reply-To: <CAGV6i+PnaTDzHWfYN6-wcN7nVy8BnHe04HqK-ghthJDXuS3viw@mail.gmail.com>
References: <1430489757472-12525.post@n5.nabble.com>
	<554392A0.7070702@pobox.com>
	<CAGV6i+PnaTDzHWfYN6-wcN7nVy8BnHe04HqK-ghthJDXuS3viw@mail.gmail.com>
Message-ID: <20150501200726.126ca3b5@www.etchedpixels.co.uk>

> We have a lot of Windows users, so it's possible that at some point, there
> could be user demand for the ability to import/export 3MF. Microsoft will
> want us to support this feature, in terms of their overall goals for 3MF,
> so it's unlikely that they would sue us for implementing 3MF import/export.

Microsoft will sue or threaten to sue whoever they like for whatever
reasons they like if they calculate it benefits their "shareholder
value". It's not even to condemn them for it. They are US a corporation.
It is their duty to their shareholders to do so.

> Yes, I know it doesn't work that way for open source projects implementing
> audio/video codecs, but I think this is different. Microsoft wants to use
> 3D printer support as a new way to drive people to use Windows, and they
> won't succeed if they demand licensing fees from every open source project
> that tries to support their 3D printer interface. And I think they
> understand that.

Big US corporations also understand that if they get around to having some
proxy company sue people once the standard is well established they win.

> I am also not a lawyer.

I'm just a cynic but I would get close to a Microsoft "standard",
especially a FRAND one approximately the way you'd get close to someone
with ebola.

Alan


From doug at moens.org  Fri May  1 16:16:20 2015
From: doug at moens.org (doug moen)
Date: Fri, 1 May 2015 16:16:20 -0400
Subject: [OpenSCAD] New 3MF file format
In-Reply-To: <554392A0.7070702@pobox.com>
References: <1430489757472-12525.post@n5.nabble.com>
	<554392A0.7070702@pobox.com>
Message-ID: <CAGV6i+PmP-sPxtjkLUbwhBjKx1XTZL1NsCk+FWtdkGaYV0Ht5Q@mail.gmail.com>

It's not FRAND. Option 2 is "RAND-RF (Royalty-Free)", which is different.

In the parent document it says "3MF members have agreed to make their
necessary patent claims available for implementations of the 3MF Core
Specification and 3MF Materials Specification on a royalty-free basis."

The wording you object to means basically something like this: "if your
software already violated our patents, independent of 3MF, then adding 3MF
support to your software doesn't eliminate the prior patent infringement".

I don't advocate living in fear of uknown patents. Refusing to implement
3MF because we don't like Microsoft is one thing, and could be a legitimate
community decision. But I don't see that 3MF support would create any legal
risk for us. The point of the royalty-free patent grant is to eliminate
that risk, after all.

On 1 May 2015 at 10:50, Ed Nisley <ed.nisley at pobox.com> wrote:

> Thoughts?
>>
>
> Proprietary lock-in.
>
> This phrase from Appendix A tells you all you need to know about the
> patent licensing: "on fair, reasonable, and non-discriminatory terms". If
> the FRAND patent model worked, the mobile phone and tablet industry would
> be a happy garden of mutual innovation, rather than a dismal swamp of
> litigation.
>
> The broad exceptions in Item 3 of Option 2 tells you that anything you
> create *will* be deemed infringing, because you'll be innovating in a
> related field that's not covered by the FRAND license. The only question
> will be whether you have enough money to make you a worthwhile target.
>
> I. Am. Not. A. Lawyer.
>
> --
> Ed
> softsolder.com
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150501/2611f065/attachment.html>

From ed.nisley at pobox.com  Fri May  1 16:55:07 2015
From: ed.nisley at pobox.com (Ed Nisley)
Date: Fri, 01 May 2015 16:55:07 -0400
Subject: [OpenSCAD] New 3MF file format
In-Reply-To: <CAGV6i+PmP-sPxtjkLUbwhBjKx1XTZL1NsCk+FWtdkGaYV0Ht5Q@mail.gmail.com>
References: <1430489757472-12525.post@n5.nabble.com>
	<554392A0.7070702@pobox.com>
	<CAGV6i+PmP-sPxtjkLUbwhBjKx1XTZL1NsCk+FWtdkGaYV0Ht5Q@mail.gmail.com>
Message-ID: <5543E82B.5080102@pobox.com>

On 05/01/2015 04:16 PM, doug moen wrote:
> It's not FRAND. Option 2 is "RAND-RF (Royalty-Free)", which is different.

*Fair*, Reasonable, And Non-Discriminatory.

They can omit "Fair" from the acronym if they like, I suppose, but ...

Some background on why FRAND remains a minefield:

http://patentlyo.com/patent/2015/02/amends-patent-policy.html



-- 
Ed
softsolder.com


From doug at moens.org  Fri May  1 17:10:44 2015
From: doug at moens.org (doug moen)
Date: Fri, 1 May 2015 17:10:44 -0400
Subject: [OpenSCAD] New 3MF file format
In-Reply-To: <5543E82B.5080102@pobox.com>
References: <1430489757472-12525.post@n5.nabble.com>
	<554392A0.7070702@pobox.com>
	<CAGV6i+PmP-sPxtjkLUbwhBjKx1XTZL1NsCk+FWtdkGaYV0Ht5Q@mail.gmail.com>
	<5543E82B.5080102@pobox.com>
Message-ID: <CAGV6i+Mod9ojLPe5hB+-g=g9LOrF1E-3Hapwi9=WQWy7A0b_gg@mail.gmail.com>

FRAND, as you describe it, is option 1 of Appendix A. The option used by
3MF is option 2, which is royalty free.

FRAND is a minefield because you have to pay license fees for implementing
the standard, and the negotiations over that have led to law suits, as
described by your link. But 3MF uses a royalty-free model in which you
don't pay license fees for implementing the standard.

On 1 May 2015 at 16:55, Ed Nisley <ed.nisley at pobox.com> wrote:

> On 05/01/2015 04:16 PM, doug moen wrote:
>
>> It's not FRAND. Option 2 is "RAND-RF (Royalty-Free)", which is different.
>>
>
> *Fair*, Reasonable, And Non-Discriminatory.
>
> They can omit "Fair" from the acronym if they like, I suppose, but ...
>
> Some background on why FRAND remains a minefield:
>
> http://patentlyo.com/patent/2015/02/amends-patent-policy.html
>
>
>
>
> --
> Ed
> softsolder.com
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150501/768607eb/attachment.html>

From jerry.ellsworth at gmail.com  Fri May  1 21:29:48 2015
From: jerry.ellsworth at gmail.com (jellsworth)
Date: Fri, 1 May 2015 18:29:48 -0700 (MST)
Subject: [OpenSCAD] Preserve "holes" in module objects
Message-ID: <1430530188357-12539.post@n5.nabble.com>

Apologies if this is an old question or too basic. I have been looking, but I
have not found an answer.

My issue is, I am using a module to create a somewhat complex object, let's
say a cube with a threaded hole. I then want to use that module multiple
times in a union with a larger object, let's say to add feet to a larger
cube that can accept bolts. My obvious problem is that in the union, the
larger object fills in the threaded hole I carefully created in my module.

I realize that I could fix this by creating and calling separate modules for
the smaller cubes and the threaded holes, but that gets unwieldy quickly as
that module object gets more complex.

*Is there a way to preserve critical "empty space" in an object created by a
module, even when embedded in another object?*



--
View this message in context: http://forum.openscad.org/Preserve-holes-in-module-objects-tp12539.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jerry.ellsworth at gmail.com  Fri May  1 21:42:56 2015
From: jerry.ellsworth at gmail.com (jellsworth)
Date: Fri, 1 May 2015 18:42:56 -0700 (MST)
Subject: [OpenSCAD] Preserve "holes" in module objects
In-Reply-To: <1430530188357-12539.post@n5.nabble.com>
References: <1430530188357-12539.post@n5.nabble.com>
Message-ID: <1430530976248-12540.post@n5.nabble.com>

Small example:
union() {         cube([300,300,300]);               translate([100, 100,
220]) { //only leaves 20mm hole            subpart();        }        
}module subpart() {    difference() { //should have 90mm hole       
cube([100,100,100]);        translate([50, 50, 10]) {           
cylinder(r=10, h=100);        }    }}




--
View this message in context: http://forum.openscad.org/Preserve-holes-in-module-objects-tp12539p12540.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150501/9b6905ef/attachment.html>

From marius at kintel.net  Fri May  1 23:21:31 2015
From: marius at kintel.net (Marius Kintel)
Date: Fri, 1 May 2015 23:21:31 -0400
Subject: [OpenSCAD] Preserve "holes" in module objects
In-Reply-To: <1430530188357-12539.post@n5.nabble.com>
References: <1430530188357-12539.post@n5.nabble.com>
Message-ID: <F6C038B9-2A10-4216-A49A-86824065B57A@kintel.net>

On May 1, 2015, at 21:29 PM, jellsworth <jerry.ellsworth at gmail.com> wrote:

> *Is there a way to preserve critical "empty space" in an object created by a
> module, even when embedded in another object?*
> 
Interesting question.
The typical way of solving this is to perform unions first, then differences. This would require you to split up your modular objects in two though.
What you?re after sounds a bit like a ?mask?. Not sure how we would implement that though, but ideas are welcome.

 -Marius



From jdawgaz at gmail.com  Fri May  1 23:27:36 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Fri, 1 May 2015 20:27:36 -0700
Subject: [OpenSCAD] Preserve "holes" in module objects
In-Reply-To: <F6C038B9-2A10-4216-A49A-86824065B57A@kintel.net>
References: <1430530188357-12539.post@n5.nabble.com>
	<F6C038B9-2A10-4216-A49A-86824065B57A@kintel.net>
Message-ID: <CAMyDR6JvNKAGNjj-Fn7WmPLgoWPMVzhTgOwioNQzksvYpG5XVA@mail.gmail.com>

you know, I have wondered this too.
I come from a OO programming background.

I kinda consider a module as an object (sort of). And it would be nice if
whatever the module "produced" remained intact.
So, If I made a union() with that module, it would add whatever the module
produced to the final result.
Same with difference(), whatever the module "produced" would be
differenced() (if it was second ... n in line of course)
etc.

Is that what you are looking for?


Jerry

--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson

On Fri, May 1, 2015 at 8:21 PM, Marius Kintel <marius at kintel.net> wrote:

> On May 1, 2015, at 21:29 PM, jellsworth <jerry.ellsworth at gmail.com> wrote:
>
> > *Is there a way to preserve critical "empty space" in an object created
> by a
> > module, even when embedded in another object?*
> >
> Interesting question.
> The typical way of solving this is to perform unions first, then
> differences. This would require you to split up your modular objects in two
> though.
> What you?re after sounds a bit like a ?mask?. Not sure how we would
> implement that though, but ideas are welcome.
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150501/dfa5d25b/attachment-0001.html>

From oz.at.michael at gmail.com  Fri May  1 23:29:40 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 1 May 2015 20:29:40 -0700 (MST)
Subject: [OpenSCAD] New 3MF file format
In-Reply-To: <CAGV6i+Mod9ojLPe5hB+-g=g9LOrF1E-3Hapwi9=WQWy7A0b_gg@mail.gmail.com>
References: <1430489757472-12525.post@n5.nabble.com>
	<554392A0.7070702@pobox.com>
	<CAGV6i+PmP-sPxtjkLUbwhBjKx1XTZL1NsCk+FWtdkGaYV0Ht5Q@mail.gmail.com>
	<5543E82B.5080102@pobox.com>
	<CAGV6i+Mod9ojLPe5hB+-g=g9LOrF1E-3Hapwi9=WQWy7A0b_gg@mail.gmail.com>
Message-ID: <1430537380830-12543.post@n5.nabble.com>

My 2c worth is that we will need something to support multiple
materials/colours real soon, colour printing is already a reality on
Shapeways etc, and with things like the Diamond head, let alone multi-head
printers now, will have demand for multi-stuff now. 

Given AMF export is implemented in OpenSCAD and in slicers, should the focus
be on implementing multi-stuff-ability in OpenSCAD using AMF, rather than
expanding to other formats and still not be able to make multi-stuff?



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/New-3MF-file-format-tp12525p12543.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sat May  2 01:40:58 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 1 May 2015 22:40:58 -0700 (MST)
Subject: [OpenSCAD] Benchmark, recommended .scad's
In-Reply-To: <20150428042557.GG7774@gmail.com>
References: <1430178263322-12497.post@n5.nabble.com>
	<20150428042557.GG7774@gmail.com>
Message-ID: <1430545258139-12544.post@n5.nabble.com>

Hi, I suspect you are using a new MCAD.

I've managed to map most of it to the old MCAD, but I can't find the
'conv2D_polar2cartesian()' function. 
Where can I find it?



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Benchmark-recommended-scad-s-tp12497p12544.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From temp4pieter at hotmail.com  Sat May  2 08:01:13 2015
From: temp4pieter at hotmail.com (hagen)
Date: Sat, 2 May 2015 05:01:13 -0700 (MST)
Subject: [OpenSCAD] Preserve "holes" in module objects
In-Reply-To: <1430530976248-12540.post@n5.nabble.com>
References: <1430530188357-12539.post@n5.nabble.com>
	<1430530976248-12540.post@n5.nabble.com>
Message-ID: <1430568073833-12545.post@n5.nabble.com>

in theory the following works:

union() 
{ 
        difference()
        {
            cube([300,300,300]);  
            position() hull () subpart();
        }
        position() subpart();         
}

module position()
{
    translate([100,100,220]) children(0);
}

module subpart() 
{
    difference()
    { 
        cube([100,100,100]);
        translate([50, 50, 10]) cylinder(r=10, h=100);
    }
}

in practice it is probably a bit expensive and it could lead to non-manifold
models 



--
View this message in context: http://forum.openscad.org/Preserve-holes-in-module-objects-tp12539p12545.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrew at plumb.org  Sat May  2 10:16:47 2015
From: andrew at plumb.org (Andrew Plumb)
Date: Sat, 2 May 2015 10:16:47 -0400
Subject: [OpenSCAD] New 3MF file format
In-Reply-To: <1430537380830-12543.post@n5.nabble.com>
References: <1430489757472-12525.post@n5.nabble.com>
	<554392A0.7070702@pobox.com>
	<CAGV6i+PmP-sPxtjkLUbwhBjKx1XTZL1NsCk+FWtdkGaYV0Ht5Q@mail.gmail.com>
	<5543E82B.5080102@pobox.com>
	<CAGV6i+Mod9ojLPe5hB+-g=g9LOrF1E-3Hapwi9=WQWy7A0b_gg@mail.gmail.com>
	<1430537380830-12543.post@n5.nabble.com>
Message-ID: <BB8770CC-2122-4F31-9241-D713248204B0@plumb.org>

Thanks for summarizing what I?ve been mulling over in my head.

I?m going to comment+close the Issue with something to this effect.

Andrew.

> On May 1, 2015, at 11:29 PM, MichaelAtOz <oz.at.michael at gmail.com> wrote:
> 
> My 2c worth is that we will need something to support multiple
> materials/colours real soon, colour printing is already a reality on
> Shapeways etc, and with things like the Diamond head, let alone multi-head
> printers now, will have demand for multi-stuff now. 
> 
> Given AMF export is implemented in OpenSCAD and in slicers, should the focus
> be on implementing multi-stuff-ability in OpenSCAD using AMF, rather than
> expanding to other formats and still not be able to make multi-stuff?
> 
> 
> 
> -----
> Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.
> 
> The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
> --
> View this message in context: http://forum.openscad.org/New-3MF-file-format-tp12525p12543.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From jerry.ellsworth at gmail.com  Sat May  2 12:22:16 2015
From: jerry.ellsworth at gmail.com (jellsworth)
Date: Sat, 2 May 2015 09:22:16 -0700 (MST)
Subject: [OpenSCAD] Preserve "holes" in module objects
In-Reply-To: <CAMyDR6JvNKAGNjj-Fn7WmPLgoWPMVzhTgOwioNQzksvYpG5XVA@mail.gmail.com>
References: <1430530188357-12539.post@n5.nabble.com>
	<F6C038B9-2A10-4216-A49A-86824065B57A@kintel.net>
	<CAMyDR6JvNKAGNjj-Fn7WmPLgoWPMVzhTgOwioNQzksvYpG5XVA@mail.gmail.com>
Message-ID: <1430583736559-12547.post@n5.nabble.com>

Yes, that is the thought. Would be nice!

Thanks,
Jerry E



--
View this message in context: http://forum.openscad.org/Preserve-holes-in-module-objects-tp12539p12547.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jerry.ellsworth at gmail.com  Sat May  2 12:26:41 2015
From: jerry.ellsworth at gmail.com (jellsworth)
Date: Sat, 2 May 2015 09:26:41 -0700 (MST)
Subject: [OpenSCAD] Preserve "holes" in module objects
In-Reply-To: <1430568073833-12545.post@n5.nabble.com>
References: <1430530188357-12539.post@n5.nabble.com>
	<1430530976248-12540.post@n5.nabble.com>
	<1430568073833-12545.post@n5.nabble.com>
Message-ID: <1430584001251-12548.post@n5.nabble.com>

Thanks. 

I guess I have confirmed I am not missing something simple, and I found
Jeremie Francois' Part 4 tutorial on children which gives an example
addressing this issue:
http://www.tridimake.com/2014/11/how-to-use-openscad-4-children-and.html

To me that helps minimize the pain, but it is complicated and doesn't fix
the underlying issue. I guess I will get used to working around it.

Thanks,
Jerry E



--
View this message in context: http://forum.openscad.org/Preserve-holes-in-module-objects-tp12539p12548.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From stonysmith at gmail.com  Sat May  2 12:28:43 2015
From: stonysmith at gmail.com (stonysmith)
Date: Sat, 2 May 2015 09:28:43 -0700 (MST)
Subject: [OpenSCAD] Preserve "holes" in module objects
In-Reply-To: <1430583736559-12547.post@n5.nabble.com>
References: <1430530188357-12539.post@n5.nabble.com>
	<F6C038B9-2A10-4216-A49A-86824065B57A@kintel.net>
	<CAMyDR6JvNKAGNjj-Fn7WmPLgoWPMVzhTgOwioNQzksvYpG5XVA@mail.gmail.com>
	<1430583736559-12547.post@n5.nabble.com>
Message-ID: <1430584123364-12549.post@n5.nabble.com>

(humor)

We just need a way to specify the material for each part.

Then you can simply use:
   cylinder(r=1,h=100,material=antimatter);

(/humor)



--
View this message in context: http://forum.openscad.org/Preserve-holes-in-module-objects-tp12539p12549.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jerry.ellsworth at gmail.com  Sat May  2 12:32:35 2015
From: jerry.ellsworth at gmail.com (jellsworth)
Date: Sat, 2 May 2015 09:32:35 -0700 (MST)
Subject: [OpenSCAD] Preserve "holes" in module objects
In-Reply-To: <1430584123364-12549.post@n5.nabble.com>
References: <1430530188357-12539.post@n5.nabble.com>
	<F6C038B9-2A10-4216-A49A-86824065B57A@kintel.net>
	<CAMyDR6JvNKAGNjj-Fn7WmPLgoWPMVzhTgOwioNQzksvYpG5XVA@mail.gmail.com>
	<1430583736559-12547.post@n5.nabble.com>
	<1430584123364-12549.post@n5.nabble.com>
Message-ID: <1430584355575-12550.post@n5.nabble.com>

Now that's funny, but I think it might work! :-)

-Jerry E



--
View this message in context: http://forum.openscad.org/Preserve-holes-in-module-objects-tp12539p12550.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From yvette at dbtgroup.com  Sat May  2 12:41:37 2015
From: yvette at dbtgroup.com (Yvette S. Hirth, CCP, CDP)
Date: Sat, 02 May 2015 09:41:37 -0700
Subject: [OpenSCAD] heart symbol
In-Reply-To: <1430584355575-12550.post@n5.nabble.com>
References: <1430530188357-12539.post@n5.nabble.com>	<F6C038B9-2A10-4216-A49A-86824065B57A@kintel.net>	<CAMyDR6JvNKAGNjj-Fn7WmPLgoWPMVzhTgOwioNQzksvYpG5XVA@mail.gmail.com>	<1430583736559-12547.post@n5.nabble.com>	<1430584123364-12549.post@n5.nabble.com>
	<1430584355575-12550.post@n5.nabble.com>
Message-ID: <5544FE41.7050706@dbtgroup.com>

hi,

i'm trying to 3d print a heart symbol.  i'm using write.scad.

i've tried unicode 2665 and cut-and-pasting a heart symbol.  neither 
work; the space where the heart should go remains blank.

i'm sure the problem is that the heart symbol is not defined in 
"letters.dxf".  i've found other .dxf files but none seem to have a 
heart symbol defined.

i did find a bracelet with hearts on thingiverse, but sadly, only the 
.stl files are downloadable.

anybody have any ideas?  i appreciate all comments!

thanks
-y-



From yvette at dbtgroup.com  Sat May  2 12:43:42 2015
From: yvette at dbtgroup.com (Yvette S. Hirth, CCP, CDP)
Date: Sat, 02 May 2015 09:43:42 -0700
Subject: [OpenSCAD] Preserve "holes" in module objects
In-Reply-To: <1430584123364-12549.post@n5.nabble.com>
References: <1430530188357-12539.post@n5.nabble.com>	<F6C038B9-2A10-4216-A49A-86824065B57A@kintel.net>	<CAMyDR6JvNKAGNjj-Fn7WmPLgoWPMVzhTgOwioNQzksvYpG5XVA@mail.gmail.com>	<1430583736559-12547.post@n5.nabble.com>
	<1430584123364-12549.post@n5.nabble.com>
Message-ID: <5544FEBE.9020009@dbtgroup.com>

On 05/02/2015 09:28 AM, stonysmith wrote:

> Then you can simply use:
>     cylinder(r=1,h=100,material=antimatter);

i prefer using unobtanium.  you can collect antimatter at CERN; 
unobtanium is ... well, unobtainable.  8^O

-y-



From Torsten.Paul at gmx.de  Sat May  2 13:08:11 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sat, 02 May 2015 19:08:11 +0200
Subject: [OpenSCAD] heart symbol
In-Reply-To: <5544FE41.7050706@dbtgroup.com>
References: <1430530188357-12539.post@n5.nabble.com>	<F6C038B9-2A10-4216-A49A-86824065B57A@kintel.net>	<CAMyDR6JvNKAGNjj-Fn7WmPLgoWPMVzhTgOwioNQzksvYpG5XVA@mail.gmail.com>	<1430583736559-12547.post@n5.nabble.com>	<1430584123364-12549.post@n5.nabble.com>	<1430584355575-12550.post@n5.nabble.com>
	<5544FE41.7050706@dbtgroup.com>
Message-ID: <5545047B.6020802@gmx.de>

On 05/02/2015 06:41 PM, Yvette S. Hirth, CCP, CDP wrote:
> i've tried unicode 2665 and cut-and-pasting a heart symbol. neither work;
 > the space where the heart should go remains blank.
>
> i'm sure the problem is that the heart symbol is not defined in "letters.dxf".
 > i've found other .dxf files but none seem to have a heart  symbol defined.
>
Try this version of write.scad: https://github.com/brodykenrick/text_on_OpenSCAD

This is updated to use the new native text() feature.

Or if you really just need the heart:

linear_extrude(height = 2) text("\u2665", 20, font = "Arial");

ciao,
   Torsten.



From Torsten.Paul at gmx.de  Sat May  2 13:10:41 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sat, 02 May 2015 19:10:41 +0200
Subject: [OpenSCAD] Preserve "holes" in module objects
In-Reply-To: <1430584355575-12550.post@n5.nabble.com>
References: <1430530188357-12539.post@n5.nabble.com>	<F6C038B9-2A10-4216-A49A-86824065B57A@kintel.net>	<CAMyDR6JvNKAGNjj-Fn7WmPLgoWPMVzhTgOwioNQzksvYpG5XVA@mail.gmail.com>	<1430583736559-12547.post@n5.nabble.com>	<1430584123364-12549.post@n5.nabble.com>
	<1430584355575-12550.post@n5.nabble.com>
Message-ID: <55450511.9020506@gmx.de>

On 05/02/2015 06:32 PM, jellsworth wrote:
> Now that's funny, but I think it might work! :-)
>
Nope, it wouldn't. It would just explode the model into a huge amount of energy...

ciao,
   Torsten.




From Torsten.Paul at gmx.de  Sat May  2 13:29:35 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sat, 02 May 2015 19:29:35 +0200
Subject: [OpenSCAD] New 3MF file format
In-Reply-To: <1430537380830-12543.post@n5.nabble.com>
References: <1430489757472-12525.post@n5.nabble.com>	<554392A0.7070702@pobox.com>	<CAGV6i+PmP-sPxtjkLUbwhBjKx1XTZL1NsCk+FWtdkGaYV0Ht5Q@mail.gmail.com>	<5543E82B.5080102@pobox.com>	<CAGV6i+Mod9ojLPe5hB+-g=g9LOrF1E-3Hapwi9=WQWy7A0b_gg@mail.gmail.com>
	<1430537380830-12543.post@n5.nabble.com>
Message-ID: <5545097F.4060301@gmx.de>

On 05/02/2015 05:29 AM, MichaelAtOz wrote:
> Given AMF export is implemented in OpenSCAD and in slicers, should the focus
> be on implementing multi-stuff-ability in OpenSCAD using AMF, rather than
> expanding to other formats and still not be able to make multi-stuff?
>
Right, I agree the functionality would be much more useful than just
another import/export format. But then I think the effort spent on a
simple exporter would be not too big, I guess the biggest thing is to
find a nice cross platform solution to read/write the ZIP file (which
would come in useful for AMF handling too).

Still, I guess the best strategy for now is to sit back, fetch some
popcorn and watch what happens :-).

ciao,
   Torsten.




From yvette at dbtgroup.com  Sat May  2 15:00:46 2015
From: yvette at dbtgroup.com (Yvette S. Hirth, CCP, CDP)
Date: Sat, 02 May 2015 12:00:46 -0700
Subject: [OpenSCAD] heart symbol
In-Reply-To: <5545047B.6020802@gmx.de>
References: <1430530188357-12539.post@n5.nabble.com>	<F6C038B9-2A10-4216-A49A-86824065B57A@kintel.net>	<CAMyDR6JvNKAGNjj-Fn7WmPLgoWPMVzhTgOwioNQzksvYpG5XVA@mail.gmail.com>	<1430583736559-12547.post@n5.nabble.com>	<1430584123364-12549.post@n5.nabble.com>	<1430584355575-12550.post@n5.nabble.com>	<5544FE41.7050706@dbtgroup.com>
	<5545047B.6020802@gmx.de>
Message-ID: <55451EDE.7050606@dbtgroup.com>

On 05/02/2015 10:08 AM, Torsten Paul wrote:

>> i'm sure the problem is that the heart symbol is not defined in
>> "letters.dxf".

>>
> Try this version of write.scad:
> https://github.com/brodykenrick/text_on_OpenSCAD
>
> This is updated to use the new native text() feature.
>
> Or if you really just need the heart:
>
> linear_extrude(height = 2) text("\u2665", 20, font = "Arial");

youDaMan!  worked like a champ - thanks!
-y-



From shadowwynd at gmail.com  Sun May  3 07:12:16 2015
From: shadowwynd at gmail.com (Ezra Reynolds)
Date: Sun, 03 May 2015 07:12:16 -0400
Subject: [OpenSCAD] heart symbol
In-Reply-To: <55451EDE.7050606@dbtgroup.com>
References: <1430530188357-12539.post@n5.nabble.com>	<F6C038B9-2A10-4216-A49A-86824065B57A@kintel.net>	<CAMyDR6JvNKAGNjj-Fn7WmPLgoWPMVzhTgOwioNQzksvYpG5XVA@mail.gmail.com>	<1430583736559-12547.post@n5.nabble.com>	<1430584123364-12549.post@n5.nabble.com>	<1430584355575-12550.post@n5.nabble.com>	<5544FE41.7050706@dbtgroup.com>
	<5545047B.6020802@gmx.de> <55451EDE.7050606@dbtgroup.com>
Message-ID: <55460290.60902@gmail.com>

Can also do it this way:

module heart()
{
	// From Inkscape --> OpenSCAD

   scale([25.4/90, -25.4/90, 1]) union()
   {
 
polygon([[191.428575,-43.743294],[191.086969,-34.093746],[190.060750,-25.298315],[188.381989,-17.295250],[186.082757,-10.022800],[183.195124,-3.419214],[179.751161,2.577259],[175.782939,8.028371],[171.322528,12.995872],[166.402000,17.541512],[161.053424,21.727044],[155.308873,25.614219],[149.200415,29.264786],[136.020066,36.103105],[121.768944,42.736008],[106.703613,49.657505],[91.080640,57.361604],[83.140214,61.661506],[75.156590,66.342311],[67.161839,71.465771],[59.188030,77.093637],[51.267235,83.287658],[43.431524,90.109587],[35.712969,97.621175],[28.143640,105.884172],[20.755607,114.960330],[13.580941,124.911399],[6.651714,135.799131],[-0.000005,147.685276],[-5.310523,135.704535],[-11.052693,124.722789],[-17.187685,114.678839],[-23.676665,105.511486],[-30.480801,97.159532],[-37.561262,89.561777],[-44.879215,82.657023],[-52.395827,76.384071],[-60.072267,70.681722],[-67.869701,65.488776],[-75.749299,60.744036],[-83.672227,56.386302],[-99.492747,48.587058],[-115.020603,41.601453],[
-129.945136,34.939896],[-143.955689,28.112797],[-150.521142,24.484171],[-156.741603,20.630563],[-162.578241,16.490774],[-167.992222,12.003605],[-172.944714,7.107857],[-177.396886,1.742331],[-181.309905,-4.154172],[-184.644939,-10.642850],[-187.363155,-17.784902],[-189.425721,-25.641528],[-190.793805,-34.273925],[-191.428575,-43.743294],[-191.276904,-51.104222],[-190.461954,-58.453654],[-189.012029,-65.755332],[-186.955434,-72.972998],[-184.320473,-80.070393],[-181.135451,-87.011260],[-177.428674,-93.759340],[-173.228445,-100.278374],[-168.563069,-106.532106],[-163.460851,-112.484277],[-157.950095,-118.098628],[-152.059107,-123.338901],[-145.816191,-128.168839],[-139.249651,-132.552183],[-132.387793,-136.452675],[-125.258921,-139.834057],[-117.891340,-142.660070],[-110.313354,-144.894457],[-102.553268,-146.500959],[-94.639387,-147.443318],[-86.600016,-147.685276],[-78.463458,-147.190575],[-70.258020,-145.922956],[-62.012005,-143.846163],[-53.753718,-140.923935],[-45.511464,-137.120016
],[-37.313548,-132.398146],[-29.188274,-126.722069],[-21.163947,-120.055525],[-13.268872,-112.362257],[-5.531353,-103.606006],[2.020305,-93.750514],[10.354280,-103.147373],[18.739208,-111.474733],[27.154412,-118.768836],[35.579217,-125.065926],[43.992947,-130.402246],[52.374927,-134.814038],[60.704481,-138.337546],[68.960933,-141.009012],[77.123608,-142.864680],[85.171829,-143.940791],[93.084922,-144.273590],[100.842211,-143.899319],[108.423019,-142.854221],[115.806672,-141.174538],[122.972494,-138.896515],[129.899809,-136.056393],[136.567941,-132.690416],[142.956215,-128.834826],[149.043955,-124.525867],[154.810486,-119.799781],[160.235131,-114.692811],[165.297216,-109.241201],[169.976064,-103.481192],[174.251000,-97.449029],[178.101348,-91.180954],[181.506433,-84.713209],[184.445579,-78.082039],[186.898110,-71.323685],[188.843351,-64.474390],[190.260626,-57.570398],[191.129259,-50.647952],[191.428575,-43.743294]]);
   }
}

heart();




On 5/2/2015 3:00 PM, Yvette S. Hirth, CCP, CDP wrote:
> On 05/02/2015 10:08 AM, Torsten Paul wrote:
>
>>> i'm sure the problem is that the heart symbol is not defined in
>>> "letters.dxf".
>
>>>
>> Try this version of write.scad:
>> https://github.com/brodykenrick/text_on_OpenSCAD
>>
>> This is updated to use the new native text() feature.
>>
>> Or if you really just need the heart:
>>
>> linear_extrude(height = 2) text("\u2665", 20, font = "Arial");
>
> youDaMan!  worked like a champ - thanks!
> -y-
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>


From Torsten.Paul at gmx.de  Sun May  3 08:08:16 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 03 May 2015 14:08:16 +0200
Subject: [OpenSCAD] heart symbol
In-Reply-To: <55460290.60902@gmail.com>
References: <1430530188357-12539.post@n5.nabble.com>	<F6C038B9-2A10-4216-A49A-86824065B57A@kintel.net>	<CAMyDR6JvNKAGNjj-Fn7WmPLgoWPMVzhTgOwioNQzksvYpG5XVA@mail.gmail.com>	<1430583736559-12547.post@n5.nabble.com>	<1430584123364-12549.post@n5.nabble.com>	<1430584355575-12550.post@n5.nabble.com>	<5544FE41.7050706@dbtgroup.com>	<5545047B.6020802@gmx.de>
	<55451EDE.7050606@dbtgroup.com> <55460290.60902@gmail.com>
Message-ID: <55460FB0.8020602@gmx.de>

On 05/03/2015 01:12 PM, Ezra Reynolds wrote:
> Can also do it this way:
>
> module heart()
> {
>      // From Inkscape --> OpenSCAD
>
Or, welcome math :-) ...

// see http://mathworld.wolfram.com/HeartCurve.html
function heart(t) = [ 16 * pow(sin(t), 3), 13 * cos(t) - 5 * cos(2 * t) - 2 * cos(3 * t) - cos(4 * t) ];
polygon([ for (t = [0 : 360 ]) heart(t) ]);

ciao,
   Torsten.



From yvette at dbtgroup.com  Sun May  3 10:13:05 2015
From: yvette at dbtgroup.com (Yvette S. Hirth, CCP, CDP)
Date: Sun, 03 May 2015 07:13:05 -0700
Subject: [OpenSCAD] heart symbol
In-Reply-To: <55460290.60902@gmail.com>
References: <1430530188357-12539.post@n5.nabble.com>	<F6C038B9-2A10-4216-A49A-86824065B57A@kintel.net>	<CAMyDR6JvNKAGNjj-Fn7WmPLgoWPMVzhTgOwioNQzksvYpG5XVA@mail.gmail.com>	<1430583736559-12547.post@n5.nabble.com>	<1430584123364-12549.post@n5.nabble.com>	<1430584355575-12550.post@n5.nabble.com>	<5544FE41.7050706@dbtgroup.com>
	<5545047B.6020802@gmx.de> <55451EDE.7050606@dbtgroup.com>
	<55460290.60902@gmail.com>
Message-ID: <55462CF1.2060109@dbtgroup.com>

On 05/03/2015 04:12 AM, Ezra Reynolds wrote:

> Can also do it this way:

> module heart()
(snippage)
> }
>
> heart();

thanks!
yvette


From yvette at dbtgroup.com  Sun May  3 10:14:14 2015
From: yvette at dbtgroup.com (Yvette S. Hirth, CCP, CDP)
Date: Sun, 03 May 2015 07:14:14 -0700
Subject: [OpenSCAD] heart symbol
In-Reply-To: <55460FB0.8020602@gmx.de>
References: <1430530188357-12539.post@n5.nabble.com>	<F6C038B9-2A10-4216-A49A-86824065B57A@kintel.net>	<CAMyDR6JvNKAGNjj-Fn7WmPLgoWPMVzhTgOwioNQzksvYpG5XVA@mail.gmail.com>	<1430583736559-12547.post@n5.nabble.com>	<1430584123364-12549.post@n5.nabble.com>	<1430584355575-12550.post@n5.nabble.com>	<5544FE41.7050706@dbtgroup.com>	<5545047B.6020802@gmx.de>	<55451EDE.7050606@dbtgroup.com>
	<55460290.60902@gmail.com> <55460FB0.8020602@gmx.de>
Message-ID: <55462D36.6050304@dbtgroup.com>

On 05/03/2015 05:08 AM, Torsten Paul wrote:
> On 05/03/2015 01:12 PM, Ezra Reynolds wrote:
>> Can also do it this way:
>>
>> module heart()
>> {
>>      // From Inkscape --> OpenSCAD
>>
> Or, welcome math :-) ...
>
> // see http://mathworld.wolfram.com/HeartCurve.html
> function heart(t) = [ 16 * pow(sin(t), 3), 13 * cos(t) - 5 * cos(2 * t)
> - 2 * cos(3 * t) - cos(4 * t) ];
> polygon([ for (t = [0 : 360 ]) heart(t) ]);

now we're talking!
yvette


From hyperair at debian.org  Sun May  3 18:23:03 2015
From: hyperair at debian.org (Chow Loong Jin)
Date: Mon, 4 May 2015 06:23:03 +0800
Subject: [OpenSCAD] Benchmark, recommended .scad's
In-Reply-To: <1430545258139-12544.post@n5.nabble.com>
References: <1430178263322-12497.post@n5.nabble.com>
	<20150428042557.GG7774@gmail.com>
	<1430545258139-12544.post@n5.nabble.com>
Message-ID: <20150503222300.GH2847@gmail.com>

On Fri, May 01, 2015 at 10:40:58PM -0700, MichaelAtOz wrote:
> Hi, I suspect you are using a new MCAD.
> 
> I've managed to map most of it to the old MCAD, but I can't find the
> 'conv2D_polar2cartesian()' function. 
> Where can I find it?

Hmm, it might not have been added yet. It looks like gears.scad has a
polar_to_cartesian() function that works the same though.

-- 
Kind regards,
Loong Jin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: Digital signature
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150504/ed57be52/attachment.asc>

From hyperair at debian.org  Sun May  3 18:24:56 2015
From: hyperair at debian.org (Chow Loong Jin)
Date: Mon, 4 May 2015 06:24:56 +0800
Subject: [OpenSCAD] Benchmark, recommended .scad's
In-Reply-To: <20150503222300.GH2847@gmail.com>
References: <1430178263322-12497.post@n5.nabble.com>
	<20150428042557.GG7774@gmail.com>
	<1430545258139-12544.post@n5.nabble.com>
	<20150503222300.GH2847@gmail.com>
Message-ID: <20150503222454.GI2847@gmail.com>

On Mon, May 04, 2015 at 06:23:00AM +0800, Chow Loong Jin wrote:
> On Fri, May 01, 2015 at 10:40:58PM -0700, MichaelAtOz wrote:
> > Hi, I suspect you are using a new MCAD.
> > 
> > I've managed to map most of it to the old MCAD, but I can't find the
> > 'conv2D_polar2cartesian()' function. 
> > Where can I find it?
> 
> Hmm, it might not have been added yet. It looks like gears.scad has a
> polar_to_cartesian() function that works the same though.

Otherwise you could just use this:

function conv2D_polar2cartesian(x) = [ x[0]*cos(x[1]) , x[0]*sin(x[1]) ];

-- 
Kind regards,
Loong Jin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: Digital signature
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150504/a22cc869/attachment.asc>

From drew at DasRogges.com  Sun May  3 20:33:53 2015
From: drew at DasRogges.com (Drew Rogge)
Date: Sun, 03 May 2015 17:33:53 -0700
Subject: [OpenSCAD] allowing center= parameter to be a vector of booleans
Message-ID: <5546BE71.5080103@DasRogges.com>

I often find that I want a cube to be centered about the z axis but sitting on the z = 0 xy plane. What do people think of allowing the center= parameter of 2D and 3D primitives to be a vector of booleans. That way one could center a primitive on whatever axes are desired instead of all or nothing. In my cube example I could use:

cube([10, 20, 5], center=[true, true, false]);

instead of translate([-5, -10, 0]) cube([10, 20, 5]); or translate([0, 0, 2.5]) cube([10, 20, 5]);

Although not clean it would also be handy if booleans could also be represented by zero/non-zero numeric values instead of the verbose "true" and "false".

I'm open to other ways of doing the above if anyone has any suggestions.

Drew



From hyperair at debian.org  Sun May  3 22:02:46 2015
From: hyperair at debian.org (Chow Loong Jin)
Date: Mon, 4 May 2015 10:02:46 +0800
Subject: [OpenSCAD] allowing center= parameter to be a vector of booleans
In-Reply-To: <5546BE71.5080103@DasRogges.com>
References: <5546BE71.5080103@DasRogges.com>
Message-ID: <20150504020244.GB12325@gmail.com>

On Sun, May 03, 2015 at 05:33:53PM -0700, Drew Rogge wrote:
> I often find that I want a cube to be centered about the z axis but sitting on
> the z = 0 xy plane. What do people think of allowing the center= parameter of 2D
> and 3D primitives to be a vector of booleans. That way one could center a
> primitive on whatever axes are desired instead of all or nothing. In my cube
> example I could use:
> 
> cube([10, 20, 5], center=[true, true, false]);
> 
> instead of translate([-5, -10, 0]) cube([10, 20, 5]); or translate([0, 0,
> 2.5]) cube([10, 20, 5]);
> 
> Although not clean it would also be handy if booleans could also be
> represented by zero/non-zero numeric values instead of the verbose "true" and
> "false".
> 
> I'm open to other ways of doing the above if anyone has any suggestions.

This is something that has crossed my mind recently as well, and I quite like
the idea. But the zero/non-zero numeric values should probably not be used, as
that tends to imply a coordinate rather than a bitfield.

-- 
Kind regards,
Loong Jin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: Digital signature
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150504/09af15b9/attachment.asc>

From oz.at.michael at gmail.com  Sun May  3 22:48:52 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sun, 3 May 2015 19:48:52 -0700 (MST)
Subject: [OpenSCAD] allowing center= parameter to be a vector of booleans
In-Reply-To: <5546BE71.5080103@DasRogges.com>
References: <5546BE71.5080103@DasRogges.com>
Message-ID: <1430707732680-12565.post@n5.nabble.com>

> Although not clean it would also be handy if booleans could also be
represented by zero/non-zero numeric values instead of the verbose "true"
and "false".


wiki <https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/General>  
"Most values, when used in a Boolean context, are equivalent to 'true', but
there are a few that are equivalent to 'false'. The values that count as
false are:

    false
    0 and -0
    ""
    []
    undef

Note that nan (Not A Number) counts as true."



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/allowing-center-parameter-to-be-a-vector-of-booleans-tp12563p12565.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Sun May  3 23:38:22 2015
From: marius at kintel.net (Marius Kintel)
Date: Sun, 3 May 2015 23:38:22 -0400
Subject: [OpenSCAD] allowing center= parameter to be a vector of booleans
In-Reply-To: <5546BE71.5080103@DasRogges.com>
References: <5546BE71.5080103@DasRogges.com>
Message-ID: <C4161447-25AC-4C11-95C3-846CF55B3B81@kintel.net>


On May 3, 2015, at 20:33 PM, Drew Rogge <drew at DasRogges.com> wrote:

> [?]
> cube([10, 20, 5], center=[true, true, false]);
> 
See:
https://github.com/openscad/openscad/issues/265
https://github.com/openscad/openscad/pull/753

Not quite resolved yet..

 -Marius



From drew at DasRogges.com  Mon May  4 00:06:17 2015
From: drew at DasRogges.com (Drew Rogge)
Date: Sun, 03 May 2015 21:06:17 -0700
Subject: [OpenSCAD] allowing center= parameter to be a vector of booleans
In-Reply-To: <C4161447-25AC-4C11-95C3-846CF55B3B81@kintel.net>
References: <5546BE71.5080103@DasRogges.com>
	<C4161447-25AC-4C11-95C3-846CF55B3B81@kintel.net>
Message-ID: <5546F039.9000202@DasRogges.com>

@MichaelAtOz: in the center= case in version 2015.03-1, 1 doesn't equate to true. Try:


difference() {
   cylinder(d=10, h=10, center=true);
   cylinder(d=10, h=10, center=1);
}

0 does equate to false:

difference() {
   cylinder(d=10, h=10);
   cylinder(d=10, h=10, center=0);
}

@Marius: thanks for the reference to issue #265. Not sure that I would want anything more than just being able to center on the individual axes. Using the center= parameter to offset to an arbitrary position seems counter intuitive.

It's been almost a year since anythings happened with pull #753. What would it take to move this forward?

Thanks,
Drew

On 5/3/15 8:38 PM, Marius Kintel wrote:
> On May 3, 2015, at 20:33 PM, Drew Rogge <drew at DasRogges.com> wrote:
>
>> [?]
>> cube([10, 20, 5], center=[true, true, false]);
>>
> See:
> https://github.com/openscad/openscad/issues/265
> https://github.com/openscad/openscad/pull/753
>
> Not quite resolved yet..
>
>   -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From oz.at.michael at gmail.com  Mon May  4 00:34:08 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sun, 3 May 2015 21:34:08 -0700 (MST)
Subject: [OpenSCAD] allowing center= parameter to be a vector of booleans
In-Reply-To: <5546F039.9000202@DasRogges.com>
References: <5546BE71.5080103@DasRogges.com>
	<C4161447-25AC-4C11-95C3-846CF55B3B81@kintel.net>
	<5546F039.9000202@DasRogges.com>
Message-ID: <1430714048115-12568.post@n5.nabble.com>

Drew Rogge wrote
> @MichaelAtOz: in the center= case in version 2015.03-1, 1 doesn't equate
> to true. Try:
> 
> 
> difference() {
>    cylinder(d=10, h=10, center=true);
>    cylinder(d=10, h=10, center=1);
> }
> 
> 0 does equate to false:
> 
> difference() {
>    cylinder(d=10, h=10);
>    cylinder(d=10, h=10, center=0);
> }

I'd say that-there is a bug.



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/allowing-center-parameter-to-be-a-vector-of-booleans-tp12563p12568.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Mon May  4 00:44:45 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sun, 3 May 2015 21:44:45 -0700 (MST)
Subject: [OpenSCAD] allowing center= parameter to be a vector of booleans
In-Reply-To: <1430714048115-12568.post@n5.nabble.com>
References: <5546BE71.5080103@DasRogges.com>
	<C4161447-25AC-4C11-95C3-846CF55B3B81@kintel.net>
	<5546F039.9000202@DasRogges.com>
	<1430714048115-12568.post@n5.nabble.com>
Message-ID: <1430714685001-12569.post@n5.nabble.com>

Github issue raised  1333 <https://github.com/openscad/openscad/issues/1333>  



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/allowing-center-parameter-to-be-a-vector-of-booleans-tp12563p12569.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From drew at DasRogges.com  Mon May  4 00:46:17 2015
From: drew at DasRogges.com (Drew Rogge)
Date: Sun, 03 May 2015 21:46:17 -0700
Subject: [OpenSCAD] allowing center= parameter to be a vector of booleans
In-Reply-To: <1430714685001-12569.post@n5.nabble.com>
References: <5546BE71.5080103@DasRogges.com>	<C4161447-25AC-4C11-95C3-846CF55B3B81@kintel.net>	<5546F039.9000202@DasRogges.com>	<1430714048115-12568.post@n5.nabble.com>
	<1430714685001-12569.post@n5.nabble.com>
Message-ID: <5546F999.4020509@DasRogges.com>

Thanks Michael.

On 5/3/15 9:44 PM, MichaelAtOz wrote:
> Github issue raised  1333 <https://github.com/openscad/openscad/issues/1333>
>
>



From oz.at.michael at gmail.com  Mon May  4 01:43:17 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sun, 3 May 2015 22:43:17 -0700 (MST)
Subject: [OpenSCAD] allowing center= parameter to be a vector of booleans
In-Reply-To: <5546F999.4020509@DasRogges.com>
References: <5546BE71.5080103@DasRogges.com>
	<C4161447-25AC-4C11-95C3-846CF55B3B81@kintel.net>
	<5546F039.9000202@DasRogges.com>
	<1430714048115-12568.post@n5.nabble.com>
	<1430714685001-12569.post@n5.nabble.com>
	<5546F999.4020509@DasRogges.com>
Message-ID: <1430718197866-12572.post@n5.nabble.com>

Workaround

translate([0,20,0])
	cylinder(d=10,h=10, center=!!0);
translate([0,-20,0])
	cylinder(d=10,h=10, center=!!1);



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/allowing-center-parameter-to-be-a-vector-of-booleans-tp12563p12572.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From yvette at dbtgroup.com  Tue May  5 11:31:42 2015
From: yvette at dbtgroup.com (Yvette S. Hirth, CCP, CDP)
Date: Tue, 05 May 2015 08:31:42 -0700
Subject: [OpenSCAD] new "Special Variable"?
Message-ID: <5548E25E.6050005@dbtgroup.com>

hi,

any way we can get the filename(s) being built stuffed into a special 
variable?

like, say, $fileName?  or $fileNameArray?

i don't know if you can build more than one input file at a time; all my 
.scad files are "one file per thing being built".  i do use <include> 
and <use>, but only one input file.  so if only one input file can be 
built, then $fileName is more appropriate; if multiple input files can 
be built, then $fileNameArray is more appropriate.

yes?  non?  eh?

rationale:

in each piece i build i stomp an "Engineering Change" (ec) level, along 
with the version.

e.g., a build file for ec0 might be named:  wondafulWidget_003.scad

so i stomp "ec0_003" in the item being built; makes it easier to trace 
"what made this thing?" issues.

now i have to manually change the write() that stomps the ec tag.  while 
i'm not complaining about the workload (!), nonetheless, i've forgotten 
to change the string in the write() several times when i do a "Save As". 
  ex:  Save As "wondafulWidget_004.scad" has the item being built still 
stomped with "ec_003".  <big sigh>  a good waste of time, carbon, and ABS!

with the $fileName special variable, i can substring to the version, 
glom the version into a variable, and stomp the variable.  that ends any 
confusion as to "what made what".

thanks for listening!
yvette


From ari.diacou at gmail.com  Tue May  5 13:08:05 2015
From: ari.diacou at gmail.com (Ari Diacou)
Date: Tue, 5 May 2015 13:08:05 -0400
Subject: [OpenSCAD] new "Special Variable"?
In-Reply-To: <5548E25E.6050005@dbtgroup.com>
References: <5548E25E.6050005@dbtgroup.com>
Message-ID: <CA+HE+0+CWNykfRtsbBXpGhA=WSR281cRn8uRAcgXSud3+-qaww@mail.gmail.com>

I'm not sure about a special variable, but it would be great if there were
any kind of version control. Like one that would count how many times you
hit save, and another one that counted renders.

So each time I hit save and render, it would make a new version number.

e.g. if I have a file called widget, if I have saved it once, and rendered
6 times since that save, it would be automatically saved as e.g.
widget.v1.06 when I hit render. It would also be nice if you could choose
to compress the folder with all of these saves from OpenSCAD.

Or am I really just describing a program that could manage all of this for
me outside of OpenSCAD?

On Tue, May 5, 2015 at 11:31 AM, Yvette S. Hirth, CCP, CDP <
yvette at dbtgroup.com> wrote:

> hi,
>
> any way we can get the filename(s) being built stuffed into a special
> variable?
>
> like, say, $fileName?  or $fileNameArray?
>
> i don't know if you can build more than one input file at a time; all my
> .scad files are "one file per thing being built".  i do use <include> and
> <use>, but only one input file.  so if only one input file can be built,
> then $fileName is more appropriate; if multiple input files can be built,
> then $fileNameArray is more appropriate.
>
> yes?  non?  eh?
>
> rationale:
>
> in each piece i build i stomp an "Engineering Change" (ec) level, along
> with the version.
>
> e.g., a build file for ec0 might be named:  wondafulWidget_003.scad
>
> so i stomp "ec0_003" in the item being built; makes it easier to trace
> "what made this thing?" issues.
>
> now i have to manually change the write() that stomps the ec tag.  while
> i'm not complaining about the workload (!), nonetheless, i've forgotten to
> change the string in the write() several times when i do a "Save As".  ex:
> Save As "wondafulWidget_004.scad" has the item being built still stomped
> with "ec_003".  <big sigh>  a good waste of time, carbon, and ABS!
>
> with the $fileName special variable, i can substring to the version, glom
> the version into a variable, and stomp the variable.  that ends any
> confusion as to "what made what".
>
> thanks for listening!
> yvette
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150505/57743fce/attachment.html>

From gwadej at anomaly.org  Tue May  5 14:33:46 2015
From: gwadej at anomaly.org (G. Wade Johnson)
Date: Tue, 5 May 2015 13:33:46 -0500
Subject: [OpenSCAD] new "Special Variable"?
In-Reply-To: <CA+HE+0+CWNykfRtsbBXpGhA=WSR281cRn8uRAcgXSud3+-qaww@mail.gmail.com>
References: <5548E25E.6050005@dbtgroup.com>
	<CA+HE+0+CWNykfRtsbBXpGhA=WSR281cRn8uRAcgXSud3+-qaww@mail.gmail.com>
Message-ID: <20150505133346.5aade914@cygnus>

I use a real version control system for this (currently, git) But then,
I'm a programmer, so version control makes sense.

Every system I've used in the past with special names or strings built
in to the text has failed because of the extra, independent manual
process of updating it.

So I use a tool built for that purpose.

On Tue, 5 May 2015 13:08:05 -0400
Ari Diacou <ari.diacou at gmail.com> wrote:

> I'm not sure about a special variable, but it would be great if there
> were any kind of version control. Like one that would count how many
> times you hit save, and another one that counted renders.
> 
> So each time I hit save and render, it would make a new version
> number.
> 
> e.g. if I have a file called widget, if I have saved it once, and
> rendered 6 times since that save, it would be automatically saved as
> e.g. widget.v1.06 when I hit render. It would also be nice if you
> could choose to compress the folder with all of these saves from
> OpenSCAD.
> 
> Or am I really just describing a program that could manage all of
> this for me outside of OpenSCAD?
> 
> On Tue, May 5, 2015 at 11:31 AM, Yvette S. Hirth, CCP, CDP <
> yvette at dbtgroup.com> wrote:
> 
> > hi,
> >
> > any way we can get the filename(s) being built stuffed into a
> > special variable?
> >
> > like, say, $fileName?  or $fileNameArray?
> >
> > i don't know if you can build more than one input file at a time;
> > all my .scad files are "one file per thing being built".  i do use
> > <include> and <use>, but only one input file.  so if only one input
> > file can be built, then $fileName is more appropriate; if multiple
> > input files can be built, then $fileNameArray is more appropriate.
> >
> > yes?  non?  eh?
> >
> > rationale:
> >
> > in each piece i build i stomp an "Engineering Change" (ec) level,
> > along with the version.
> >
> > e.g., a build file for ec0 might be named:  wondafulWidget_003.scad
> >
> > so i stomp "ec0_003" in the item being built; makes it easier to
> > trace "what made this thing?" issues.
> >
> > now i have to manually change the write() that stomps the ec tag.
> > while i'm not complaining about the workload (!), nonetheless, i've
> > forgotten to change the string in the write() several times when i
> > do a "Save As".  ex: Save As "wondafulWidget_004.scad" has the item
> > being built still stomped with "ec_003".  <big sigh>  a good waste
> > of time, carbon, and ABS!
> >
> > with the $fileName special variable, i can substring to the
> > version, glom the version into a variable, and stomp the variable.
> > that ends any confusion as to "what made what".
> >
> > thanks for listening!
> > yvette
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> >


-- 
Doing nothing is very hard to do ? you never know when you?re finished.
                                                   -- Leslie Nielsen


From yvette at dbtgroup.com  Tue May  5 15:08:29 2015
From: yvette at dbtgroup.com (Yvette S. Hirth, CCP, CDP)
Date: Tue, 05 May 2015 12:08:29 -0700
Subject: [OpenSCAD] new "Special Variable"?
In-Reply-To: <20150505133346.5aade914@cygnus>
References: <5548E25E.6050005@dbtgroup.com>	<CA+HE+0+CWNykfRtsbBXpGhA=WSR281cRn8uRAcgXSud3+-qaww@mail.gmail.com>
	<20150505133346.5aade914@cygnus>
Message-ID: <5549152D.6020509@dbtgroup.com>

On 05/05/2015 11:33 AM, G. Wade Johnson wrote:

> I use a real version control system for this (currently, git) But then,
> I'm a programmer, so version control makes sense.

well gee gosh, i've been a programmer since 1967, i.e., for 48 years, 
and personally, i loathe version control systems.

> Every system I've used in the past with special names or strings built
> in to the text has failed because of the extra, independent manual
> process of updating it.

which is what i'm trying to avoid.

> So I use a tool built for that purpose.

you use the tool you want; i'll use the tool i want.

also, for ec/code stamping of large, complicated products with lots to 
engineer, one could stomp the entire filename into a piece.  can't do 
that with version control.

yvette



From denber at mindspring.com  Tue May  5 15:21:15 2015
From: denber at mindspring.com (Michele Denber)
Date: Tue, 05 May 2015 15:21:15 -0400
Subject: [OpenSCAD] new "Special Variable"?
In-Reply-To: <5549152D.6020509@dbtgroup.com>
References: <5548E25E.6050005@dbtgroup.com>	<CA+HE+0+CWNykfRtsbBXpGhA=WSR281cRn8uRAcgXSud3+-qaww@mail.gmail.com>	<20150505133346.5aade914@cygnus>
	<5549152D.6020509@dbtgroup.com>
Message-ID: <5549182B.4090103@mindspring.com>

On 05-05-2015 3:08 PM, Yvette S. Hirth, CCP, CDP wrote:
> On 05/05/2015 11:33 AM, G. Wade Johnson wrote:
>
>> I use a real version control system for this (currently, git) But then,
>> I'm a programmer, so version control makes sense.
>
> well gee gosh, i've been a programmer since 1967, i.e., for 48 years, 
> and personally, i loathe version control systems.

Well you've got me beat by five years but I agree 100% with you.  This 
is just a bad idea that Openscad doesn't need.

             - Michele




From gwadej at anomaly.org  Tue May  5 15:33:15 2015
From: gwadej at anomaly.org (G. Wade Johnson)
Date: Tue, 5 May 2015 14:33:15 -0500
Subject: [OpenSCAD] new "Special Variable"?
In-Reply-To: <5549152D.6020509@dbtgroup.com>
References: <5548E25E.6050005@dbtgroup.com>
	<CA+HE+0+CWNykfRtsbBXpGhA=WSR281cRn8uRAcgXSud3+-qaww@mail.gmail.com>
	<20150505133346.5aade914@cygnus> <5549152D.6020509@dbtgroup.com>
Message-ID: <20150505143315.077bfa03@cygnus>

On Tue, 05 May 2015 12:08:29 -0700
"Yvette S. Hirth, CCP, CDP" <yvette at dbtgroup.com> wrote:

> On 05/05/2015 11:33 AM, G. Wade Johnson wrote:
> 
> > I use a real version control system for this (currently, git) But
> > then, I'm a programmer, so version control makes sense.
> 
> well gee gosh, i've been a programmer since 1967, i.e., for 48 years, 
> and personally, i loathe version control systems.

Sorry to hear that they don't work for you. I made the comment mostly
because not all OpenSCAD users are programmers and it has been an issue
before.

I meant it as an explanation for my usage, not to be condescending.

> > Every system I've used in the past with special names or strings
> > built in to the text has failed because of the extra, independent
> > manual process of updating it.
> 
> which is what i'm trying to avoid.
> 
> > So I use a tool built for that purpose.
> 
> you use the tool you want; i'll use the tool i want.
> 
> also, for ec/code stamping of large, complicated products with lots
> to engineer, one could stomp the entire filename into a piece.  can't
> do that with version control.

I just hate working with systems where there are a whole bunch of
copies of the same code with slightly different filenames. But, if it
works for you, I'm happy it works.

G. Wade

> yvette
> 
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


-- 
A 'language' is a dialect with an army.


From yvette at dbtgroup.com  Tue May  5 17:09:11 2015
From: yvette at dbtgroup.com (Yvette S. Hirth, CCP, CDP)
Date: Tue, 05 May 2015 14:09:11 -0700
Subject: [OpenSCAD] new "Special Variable"?
In-Reply-To: <20150505143315.077bfa03@cygnus>
References: <5548E25E.6050005@dbtgroup.com>	<CA+HE+0+CWNykfRtsbBXpGhA=WSR281cRn8uRAcgXSud3+-qaww@mail.gmail.com>	<20150505133346.5aade914@cygnus>	<5549152D.6020509@dbtgroup.com>
	<20150505143315.077bfa03@cygnus>
Message-ID: <55493177.4080109@dbtgroup.com>

On 05/05/2015 12:33 PM, G. Wade Johnson wrote:

> I just hate working with systems where there are a whole bunch of
> copies of the same code with slightly different filenames. But, if it
> works for you, I'm happy it works.

thank you for that!
yvette


From jerry.ellsworth at gmail.com  Tue May  5 18:31:47 2015
From: jerry.ellsworth at gmail.com (jellsworth)
Date: Tue, 5 May 2015 15:31:47 -0700 (MST)
Subject: [OpenSCAD] new "Special Variable"?
In-Reply-To: <20150505143315.077bfa03@cygnus>
References: <5548E25E.6050005@dbtgroup.com>
	<CA+HE+0+CWNykfRtsbBXpGhA=WSR281cRn8uRAcgXSud3+-qaww@mail.gmail.com>
	<20150505133346.5aade914@cygnus> <5549152D.6020509@dbtgroup.com>
	<20150505143315.077bfa03@cygnus>
Message-ID: <1430865107015-12586.post@n5.nabble.com>

My opinion(s), fwiw:

* I love the idea of stamping a version label directly into the 3d model,
even though this would only make sense for a few types of models. The
filename-variable suggestion is nice, simple way to do it.

* Yes, a real version control system is a powerful way to manage your files.
If that works for you, use it! If not, don't!

* The problem here is that this clever approach leaves the version control
users out in the cold, if they can only stamp their models based on
filename. 

* Maybe there is a way to also accommodate the leading version control
systems, or at least git. Now that would be a productive discussion!

Regards,
Jerry E




--
View this message in context: http://forum.openscad.org/new-Special-Variable-tp12579p12586.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Tue May  5 19:25:03 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Tue, 5 May 2015 16:25:03 -0700 (MST)
Subject: [OpenSCAD] new "Special Variable"?
In-Reply-To: <5548E25E.6050005@dbtgroup.com>
References: <5548E25E.6050005@dbtgroup.com>
Message-ID: <1430868303430-12587.post@n5.nabble.com>

Issue 380 <https://github.com/openscad/openscad/issues/380>  



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/new-Special-Variable-tp12579p12587.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Tue May  5 19:36:01 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Tue, 5 May 2015 16:36:01 -0700 (MST)
Subject: [OpenSCAD] Sharing: how to render on command line
In-Reply-To: <CAMyDR6K-HMBdrymnvK+LqQH8h4B_QNUw9KBkiTFzkXotURNp8Q@mail.gmail.com>
References: <CAMyDR6K-HMBdrymnvK+LqQH8h4B_QNUw9KBkiTFzkXotURNp8Q@mail.gmail.com>
Message-ID: <1430868961062-12588.post@n5.nabble.com>

What would be handy for this approach, would be the ability to initiate a
script from the OpenSCAD GUI.
Say F7, with the script command line in preferences with a substitute
parameter of the scad filename.

Would need to make sure you saved changes of course.



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Sharing-how-to-render-on-command-line-tp12515p12588.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From lenbok at gmail.com  Tue May  5 20:39:31 2015
From: lenbok at gmail.com (Len Trigg)
Date: Wed, 6 May 2015 12:39:31 +1200
Subject: [OpenSCAD] new "Special Variable"?
In-Reply-To: <1430865107015-12586.post@n5.nabble.com>
References: <5548E25E.6050005@dbtgroup.com>
	<CA+HE+0+CWNykfRtsbBXpGhA=WSR281cRn8uRAcgXSud3+-qaww@mail.gmail.com>
	<20150505133346.5aade914@cygnus> <5549152D.6020509@dbtgroup.com>
	<20150505143315.077bfa03@cygnus>
	<1430865107015-12586.post@n5.nabble.com>
Message-ID: <CAOGVwe=5hqYKhwkyTsFV49UziamuF7GA=6An1+2PLsscoih0_A@mail.gmail.com>

On 6 May 2015 at 10:31, jellsworth <jerry.ellsworth at gmail.com> wrote:

> * The problem here is that this clever approach leaves the version control
> users out in the cold, if they can only stamp their models based on
> filename.
>

You can pass variables in from outside by using the -D parameter to
openscad. Yvette could thus use a workaround wrapper script when launching
openscad that sets a variable to the current filename. In linux this would
look something like:

if [ "$1" ]; then
  openscad -D fileName=$(basename $1) $1
else
  openscad
fi

Similarly, if you have your files under version control you could
substitute the output of git describe as your version tag.

Cheers,
Len.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150506/c95eb575/attachment.html>

From jerry.ellsworth at gmail.com  Tue May  5 23:01:08 2015
From: jerry.ellsworth at gmail.com (jellsworth)
Date: Tue, 5 May 2015 20:01:08 -0700 (MST)
Subject: [OpenSCAD] new "Special Variable"?
In-Reply-To: <CAOGVwe=5hqYKhwkyTsFV49UziamuF7GA=6An1+2PLsscoih0_A@mail.gmail.com>
References: <5548E25E.6050005@dbtgroup.com>
	<CA+HE+0+CWNykfRtsbBXpGhA=WSR281cRn8uRAcgXSud3+-qaww@mail.gmail.com>
	<20150505133346.5aade914@cygnus> <5549152D.6020509@dbtgroup.com>
	<20150505143315.077bfa03@cygnus>
	<1430865107015-12586.post@n5.nabble.com>
	<CAOGVwe=5hqYKhwkyTsFV49UziamuF7GA=6An1+2PLsscoih0_A@mail.gmail.com>
Message-ID: <1430881268393-12590.post@n5.nabble.com>

Nice!

Thanks,
Jerry E



--
View this message in context: http://forum.openscad.org/new-Special-Variable-tp12579p12590.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Wed May  6 02:48:28 2015
From: runsun at gmail.com (runsun)
Date: Tue, 5 May 2015 23:48:28 -0700 (MST)
Subject: [OpenSCAD] new "Special Variable"?
In-Reply-To: <5548E25E.6050005@dbtgroup.com>
References: <5548E25E.6050005@dbtgroup.com>
Message-ID: <1430894908071-12591.post@n5.nabble.com>

Also, I'd like to have *$date* and *$now*. 

OpenSCAD version is based on date, which I like very much. I've not seen any
other program do so. Very often I find a program on the net, it says version
2.3.1 or something, but who knows it could be as old as 20 years back. 

Using date/time immediately gives a sense of how recent the program is. I'd
prefer it that way. Before I start using git, I labeled my "versions" by
dates like 20150503-1. Year always up front so they can be sorted. 

Another usage of *$date* and *$now*: logging --- if you want to output echo
to a file for logging purpose. 



yvette wrote
> hi,
> 
> any way we can get the filename(s) being built stuffed into a special 
> variable?
> 
> like, say, $fileName?  or $fileNameArray?





-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/new-Special-Variable-tp12579p12591.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From ivo.knutsel at gmail.com  Wed May  6 03:33:48 2015
From: ivo.knutsel at gmail.com (Ivo)
Date: Wed, 6 May 2015 00:33:48 -0700 (MST)
Subject: [OpenSCAD] new "Special Variable"?
In-Reply-To: <1430894908071-12591.post@n5.nabble.com>
References: <5548E25E.6050005@dbtgroup.com>
	<1430894908071-12591.post@n5.nabble.com>
Message-ID: <1430897628525-12592.post@n5.nabble.com>


We already have the stack of modules available as variables:

http://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Other_Language_Features#parent_module.28n.29_and_.24parent_modules

A nice example of this feature is described here :
https://github.com/openscad/openscad/pull/460#issuecomment-23049813

It would have been nice if parent_module() returns a vector of [modulename,
filename], that way we would have better information about the context.
[modulename, filename, path, timestamp] would be even better. It would also
clarify the issue : does file_name() return the file location of declaration
or of use. With that feature :

name = parent_module(0);
echo(name[1]); 

would give you the current module definition

name = parent_module($parent_modules);
echo(name[1]); 

would give you the current file.

As for a "number of times F6 was pressed" counter, there is no place to
store that. It should not go in the file (only i edit the file) and it is
impossible for openscad to decide if this is actually a new version. Version
control systems can output version files which you can include in the
source.

With all this meta information available, it would be nice to get rid of the
"echo" in echo() and be able to format stuff prettier. I'd like to be able
to generate openscad files in openscad.





--
View this message in context: http://forum.openscad.org/new-Special-Variable-tp12579p12592.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From stefan.krister at creative.chaos.de  Wed May  6 04:43:24 2015
From: stefan.krister at creative.chaos.de (Stefan Krister)
Date: Wed, 06 May 2015 10:43:24 +0200
Subject: [OpenSCAD] minkowski - how to keep exact dimensions
Message-ID: <5549D42C.3060709@creative.chaos.de>


Hi,

I'm currently helping a girls high school class to develop a bracelet
which is able to charge a battery by solar cells and give that energy to
a smartphone.

They asked me to do a 3d sketch to play with the design. Here is what I
have so far:

diameter=200;
width=40;
height=10;
roundness=4;

$fn=100;

color("DeepSkyBlue")
minkowski()
{
	sphere(r=roundness);
	hull()
	{
		cylinder(h=height / 2 - roundness, d=width / 2);
		translate([diameter, 0, 0])
			cylinder(h=height / 2 - roundness, d=width / 2);
		
		translate([diameter * 1 / 4, 0, 0])
		 cylinder(h=height - roundness, d=width);
		translate([diameter * 3 / 4, 0, 0])
			cylinder(h=height - roundness, d=width);
	}	
}


I would like to have the lenght of the bracelet the exact value of
"diameter", as well as the middle part should not be greater than
"width" and "height". I did a few experiments by subtracting from these
values but it is not easy to get a exact result. What should I do?

Bonus question: Besides that the bracelet will be printed flat with
NinjaFlex to be bendable, I would like to have it already bended in the
preview. How can I do that?


Regards

Stefan
-- 

Blog: http://bastard-fdb.blogspot.de/
Gallery: http://gallery.port23.de/v/bastard/
Wiki: http://wiki.port23.de/wiki/Benutzer:Bastard


From arnholm at arnholm.org  Wed May  6 08:25:04 2015
From: arnholm at arnholm.org (arnholm at arnholm.org)
Date: Wed, 06 May 2015 14:25:04 +0200
Subject: [OpenSCAD] =?utf-8?q?new_=22Special_Variable=22=3F?=
In-Reply-To: <1430865107015-12586.post@n5.nabble.com>
References: <5548E25E.6050005@dbtgroup.com>
	<CA+HE+0+CWNykfRtsbBXpGhA=WSR281cRn8uRAcgXSud3+-qaww@mail.gmail.com>
	<20150505133346.5aade914@cygnus> <5549152D.6020509@dbtgroup.com>
	<20150505143315.077bfa03@cygnus>
	<1430865107015-12586.post@n5.nabble.com>
Message-ID: <274e5872759ba0765d31c5c617e91ddd@arnholm.org>

On 2015-05-06 00:31, jellsworth wrote:
> * Maybe there is a way to also accommodate the leading version control
> systems, or at least git. Now that would be a productive discussion!

I have used several version control systems.

OpenSCAD is no different than any other programming environment where 
the user's code is stored in text files. OpenSCAD files are already 
accommodated in any system like git, bazaar, subversion, hg, you name it 
(perforce, etc. etc.). Personally I use Bazaar, but anything goes.

I don't think it is the responsibility of OpenSCAD to do anything in 
this area.

Carsten Arnholm


From runsun at gmail.com  Wed May  6 13:01:31 2015
From: runsun at gmail.com (runsun)
Date: Wed, 6 May 2015 10:01:31 -0700 (MST)
Subject: [OpenSCAD] new "Special Variable"?
In-Reply-To: <1430897628525-12592.post@n5.nabble.com>
References: <5548E25E.6050005@dbtgroup.com>
	<1430894908071-12591.post@n5.nabble.com>
	<1430897628525-12592.post@n5.nabble.com>
Message-ID: <1430931691726-12596.post@n5.nabble.com>

Ivo wrote
> With all this meta information available, it would be nice to get rid of
> the "echo" in echo() 

+100 !!

Ivo wrote
> and be able to format stuff prettier. I'd like to be able to generate
> openscad files in openscad.

My  OpenSCAD_DocTest lib <https://github.com/runsun/openscad_doctest>   can
write formatted code to the console. It's, in fact, making use of OpenSCAD's
own features. So OpenSCAD can do some type of formatting.

Recently I recoded my lib to be able to generate html page. See  here
<http://doctestscad.runsun.info/doctest_tool_api.htm>   for example. The
webpage is dynamic and entirely generated by OpenSCAD, including HTML, CSS
and Javascript. The only post-process I need is to get rid of the unwanted
"ECHO: ". (see my  python code
<http://forum.openscad.org/Sharing-Dump-echo-output-to-a-file-td12529.html>  
for this purpose).

So it seems that OpenSCAD is already capable of doing what you want. 

BTW, can you give an example usage of generating openscad files in openscad
? 



-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/new-Special-Variable-tp12579p12596.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From andrew at plumb.org  Wed May  6 15:03:32 2015
From: andrew at plumb.org (clothbot)
Date: Wed, 6 May 2015 12:03:32 -0700 (MST)
Subject: [OpenSCAD] new "Special Variable"?
In-Reply-To: <1430931691726-12596.post@n5.nabble.com>
References: <5548E25E.6050005@dbtgroup.com>
	<1430894908071-12591.post@n5.nabble.com>
	<1430897628525-12592.post@n5.nabble.com>
	<1430931691726-12596.post@n5.nabble.com>
Message-ID: <1430939012432-12597.post@n5.nabble.com>

I'm ok with echo() behaving as it does for quick debug stuff.

I'd rather have an explicit, C++ style 'printf()' supported.  Devil's in the
details, but shouldn't be too difficult to implement using the echo() code
(most likely src file: src/control.cc) as a starting point.

Andrew.




--
View this message in context: http://forum.openscad.org/new-Special-Variable-tp12579p12597.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Wed May  6 15:18:47 2015
From: doug at moens.org (doug moen)
Date: Wed, 6 May 2015 15:18:47 -0400
Subject: [OpenSCAD] How to avoid the 'flatten' function
Message-ID: <CAGV6i+Mh7-tf_0_QiA_OVqnygmqfqu7YG0C0CAWbdyP+z9Mmuw@mail.gmail.com>

Since we introduced list comprehensions, people have been using them to
generate arguments for polyhedron. But they've run into a problem where the
list is nested too deeply. So a convention of using the function 'flatten'
has arisen.

I've been thinking about different ways to eliminate the need for an
auxiliary flatten function, and I've come up with an idiom that works
today, without any language changes.

Here's the "before" code, using flatten (I forget the original author):

r = 10;
h = 20;
w = 2;
s = 2;
step = 4;
vertices = [for (a=[0:step:360]) [
  [r*cos(a), r*sin(a), 0],
  [r*cos(a), r*sin(a), h + s*sin(a*6)],
  [(r-w)*cos(a), (r-w)*sin(a), h + s*sin(a*6)],
  [(r-w)*cos(a), (r-w)*sin(a), 0]
]];
nv = 4*360/step;
indices = [for (a=[0:360/step]) [
  [(4*a+0)%nv, (4*a+1)%nv, (4*a+5)%nv, (4*a+4)%nv],
  [(4*a+1)%nv, (4*a+2)%nv, (4*a+6)%nv, (4*a+5)%nv],
  [(4*a+2)%nv, (4*a+3)%nv, (4*a+7)%nv, (4*a+6)%nv],
  [(4*a+3)%nv, (4*a+0)%nv, (4*a+4)%nv, (4*a+7)%nv]]];
function flatten(list) = [ for (i = list, v = i) v ];
polyhedron(flatten(vertices), flatten(indices));

Now here is the "after" code, which eliminates the need for 'flatten'.

r = 10;
h = 20;
w = 2;
s = 2;
step = 4;
vertices = [
  for (a=[0:step:360])
    for (pt = [
      [r*cos(a), r*sin(a), 0],
      [r*cos(a), r*sin(a), h + s*sin(a*6)],
      [(r-w)*cos(a), (r-w)*sin(a), h + s*sin(a*6)],
      [(r-w)*cos(a), (r-w)*sin(a), 0]
    ]) pt
];
nv = 4*360/step;
indices = [
  for (a=[0:360/step])
    for (pt = [
      [(4*a+0)%nv, (4*a+1)%nv, (4*a+5)%nv, (4*a+4)%nv],
      [(4*a+1)%nv, (4*a+2)%nv, (4*a+6)%nv, (4*a+5)%nv],
      [(4*a+2)%nv, (4*a+3)%nv, (4*a+7)%nv, (4*a+6)%nv],
      [(4*a+3)%nv, (4*a+0)%nv, (4*a+4)%nv, (4*a+7)%nv]
    ]) pt
];
polyhedron(vertices, indices);

I guess it is a matter of personal taste, but I hope some people find this
useful.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150506/c48aa6e2/attachment.html>

From runsun at gmail.com  Wed May  6 16:19:40 2015
From: runsun at gmail.com (runsun)
Date: Wed, 6 May 2015 13:19:40 -0700 (MST)
Subject: [OpenSCAD] new "Special Variable"?
In-Reply-To: <1430939012432-12597.post@n5.nabble.com>
References: <5548E25E.6050005@dbtgroup.com>
	<1430894908071-12591.post@n5.nabble.com>
	<1430897628525-12592.post@n5.nabble.com>
	<1430931691726-12596.post@n5.nabble.com>
	<1430939012432-12597.post@n5.nabble.com>
Message-ID: <1430943580985-12599.post@n5.nabble.com>

I believe the requests about echo() are simply to have an option to turn off
the printing of "ECHO: ", which has no effect at all to those who don't need
it to be turned off.

The difference between that and the "printf()" is that, printf() can be
achieved by user function easily ( I can write one if needed), so having
openscad to include something like printf() is not that critical. 

But the print out of "ECHO: " is something you can't overcome with user
function in openscad.

  



-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/new-Special-Variable-tp12579p12599.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Wed May  6 17:23:48 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Wed, 6 May 2015 14:23:48 -0700 (MST)
Subject: [OpenSCAD] new "Special Variable"?
In-Reply-To: <1430894908071-12591.post@n5.nabble.com>
References: <5548E25E.6050005@dbtgroup.com>
	<1430894908071-12591.post@n5.nabble.com>
Message-ID: <1430947428803-12600.post@n5.nabble.com>

runsun wrote
> Also, I'd like to have 
*
> $date
*
>  and 
*
> $now
*
> . 
> 
> OpenSCAD version is based on date,

I'm not sure what you were after, but there is version().




-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/new-Special-Variable-tp12579p12600.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Wed May  6 18:23:42 2015
From: runsun at gmail.com (runsun)
Date: Wed, 6 May 2015 15:23:42 -0700 (MST)
Subject: [OpenSCAD] new "Special Variable"?
In-Reply-To: <1430947428803-12600.post@n5.nabble.com>
References: <5548E25E.6050005@dbtgroup.com>
	<1430894908071-12591.post@n5.nabble.com>
	<1430947428803-12600.post@n5.nabble.com>
Message-ID: <1430951022222-12601.post@n5.nabble.com>

MichaelAtOz wrote
> 
> runsun wrote
>> Also, I'd like to have 
*
>> $date
*
>>  and 
*
>> $now
*
>> . 
>> 
>> OpenSCAD version is based on date,
> I'm not sure what you were after, but there is version().

The current date and time when file is executed. 



-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/new-Special-Variable-tp12579p12601.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jerry.ellsworth at gmail.com  Wed May  6 22:03:20 2015
From: jerry.ellsworth at gmail.com (jellsworth)
Date: Wed, 6 May 2015 19:03:20 -0700 (MST)
Subject: [OpenSCAD] new "Special Variable"?
In-Reply-To: <274e5872759ba0765d31c5c617e91ddd@arnholm.org>
References: <5548E25E.6050005@dbtgroup.com>
	<CA+HE+0+CWNykfRtsbBXpGhA=WSR281cRn8uRAcgXSud3+-qaww@mail.gmail.com>
	<20150505133346.5aade914@cygnus> <5549152D.6020509@dbtgroup.com>
	<20150505143315.077bfa03@cygnus>
	<1430865107015-12586.post@n5.nabble.com>
	<274e5872759ba0765d31c5c617e91ddd@arnholm.org>
Message-ID: <1430964200392-12602.post@n5.nabble.com>

cacb wrote
> On 2015-05-06 00:31, jellsworth wrote:
>> * Maybe there is a way to also accommodate the leading version control
>> systems, or at least git. Now that would be a productive discussion!
> 
> OpenSCAD is no different than any other programming environment where 
> the user's code is stored in text files. OpenSCAD files are already 
> accommodated in any system like git, bazaar, subversion, hg, you name it 
> (perforce, etc. etc.). Personally I use Bazaar, but anything goes.
> 
> I don't think it is the responsibility of OpenSCAD to do anything in 
> this area.

I agree with you, but I think I did not make my point clear. OpenSCAD
doesn't need to build in it's own version control system. What I liked was
the idea of providing a scad file /access/ to the version info so that it
could be expressed within the 3d model.

Regards,
Jerry E



--
View this message in context: http://forum.openscad.org/new-Special-Variable-tp12579p12602.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From ivo.knutsel at gmail.com  Thu May  7 01:52:31 2015
From: ivo.knutsel at gmail.com (Ivo)
Date: Wed, 6 May 2015 22:52:31 -0700 (MST)
Subject: [OpenSCAD] new "Special Variable"?
In-Reply-To: <1430964200392-12602.post@n5.nabble.com>
References: <5548E25E.6050005@dbtgroup.com>
	<CA+HE+0+CWNykfRtsbBXpGhA=WSR281cRn8uRAcgXSud3+-qaww@mail.gmail.com>
	<20150505133346.5aade914@cygnus> <5549152D.6020509@dbtgroup.com>
	<20150505143315.077bfa03@cygnus>
	<1430865107015-12586.post@n5.nabble.com>
	<274e5872759ba0765d31c5c617e91ddd@arnholm.org>
	<1430964200392-12602.post@n5.nabble.com>
Message-ID: <1430977951653-12603.post@n5.nabble.com>

jellsworth wrote
> OpenSCAD doesn't need to build in it's own version control system. What I
> liked was the idea of providing a scad file 
/
> access
/
>  to the version info so that it could be expressed within the 3d model.

In general, that also is done by the version control system by keyword
expansion, hooks or filters :

git :
http://git-scm.com/book/en/v2/Customizing-Git-Git-Attributes#Keyword-Expansion
svn :
http://stackoverflow.com/questions/18447089/svn-user-defined-property-keyword-expansion-substitution




--
View this message in context: http://forum.openscad.org/new-Special-Variable-tp12579p12603.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu May  7 02:46:16 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Wed, 6 May 2015 23:46:16 -0700 (MST)
Subject: [OpenSCAD] new "Special Variable"?
In-Reply-To: <1430977951653-12603.post@n5.nabble.com>
References: <5548E25E.6050005@dbtgroup.com>
	<CA+HE+0+CWNykfRtsbBXpGhA=WSR281cRn8uRAcgXSud3+-qaww@mail.gmail.com>
	<20150505133346.5aade914@cygnus> <5549152D.6020509@dbtgroup.com>
	<20150505143315.077bfa03@cygnus>
	<1430865107015-12586.post@n5.nabble.com>
	<274e5872759ba0765d31c5c617e91ddd@arnholm.org>
	<1430964200392-12602.post@n5.nabble.com>
	<1430977951653-12603.post@n5.nabble.com>
Message-ID: <1430981176237-12604.post@n5.nabble.com>

That is all well & good for use with a VCS, but the OP wants access to the
filename for a GUI generated model.

Basically the filename, the date and time when F5/6 is performed, and the
already available version() would be sufficient to do basic version
stamping, so the model is marked with the version. 

You could go one step further and append a predefined variable to the "solid
OpenSCAD_Model" line in the exported STL (and presumably equivalent spots in
other formats). i.e

$Version = str($fname,","$datetime,":",version());  // $version value if
defined gets appended.

That would be very handy to make sure you have the version you are looking
for. 

These are not the versions you are looking for...



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/new-Special-Variable-tp12579p12604.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From stefan.krister at creative.chaos.de  Thu May  7 03:30:06 2015
From: stefan.krister at creative.chaos.de (Stefan Krister)
Date: Thu, 07 May 2015 09:30:06 +0200
Subject: [OpenSCAD] minkowski - how to keep exact dimensions
In-Reply-To: <5549D42C.3060709@creative.chaos.de>
References: <5549D42C.3060709@creative.chaos.de>
Message-ID: <554B147E.8050806@creative.chaos.de>

Hi,

Stefan Krister schrieb am 06.05.2015 um 10:43:
> 
> I would like to have the lenght of the bracelet the exact value of
> "diameter", as well as the middle part should not be greater than
> "width" and "height".

a resize([length, width, height]) did it.

> I would like to have it already bended in the
> preview. How can I do that?

That was a challenge ...

Step by step in a for loop I sliced (via an intersection) the long
object and got many slices. Then I rotate each slice and transform it to
the right place along a circle.

At the end, I got this:

https://drive.google.com/folderview?id=0B6LM7uRPVe-sfjFJU3VSVVlfZkloY2dUQkdPNGFGYTFRbjNzc2g4UXJWNGEtdkFocUplQjQ&usp=sharing

Regards

Stefan
-- 

Blog: http://bastard-fdb.blogspot.de/
Gallery: http://gallery.port23.de/v/bastard/
Wiki: http://wiki.port23.de/wiki/Benutzer:Bastard


From arnholm at arnholm.org  Thu May  7 07:05:11 2015
From: arnholm at arnholm.org (arnholm at arnholm.org)
Date: Thu, 07 May 2015 13:05:11 +0200
Subject: [OpenSCAD] minkowski - how to keep exact dimensions
In-Reply-To: <554B147E.8050806@creative.chaos.de>
References: <5549D42C.3060709@creative.chaos.de>
	<554B147E.8050806@creative.chaos.de>
Message-ID: <f41c5f881510ffdf8d7f456b90f6b964@arnholm.org>

On 2015-05-07 09:30, Stefan Krister wrote:
> Step by step in a for loop I sliced (via an intersection) the long
> object and got many slices. Then I rotate each slice and transform it 
> to
> the right place along a circle.

Not sure how that works and it sounds complicated. I admit the result 
looks good, though....

I guess what would be really cool is to perform all modelling just like 
you did in some other 3d parameter space, and then simply describe how 
the 3d parameter space transforms into ordinary 3d cartesian space. In 
this case the parameter space would be cylindrical...

Carsten Arnholm


From nop.head at gmail.com  Thu May  7 07:36:26 2015
From: nop.head at gmail.com (nop head)
Date: Thu, 7 May 2015 12:36:26 +0100
Subject: [OpenSCAD] minkowski - how to keep exact dimensions
In-Reply-To: <f41c5f881510ffdf8d7f456b90f6b964@arnholm.org>
References: <5549D42C.3060709@creative.chaos.de>
	<554B147E.8050806@creative.chaos.de>
	<f41c5f881510ffdf8d7f456b90f6b964@arnholm.org>
Message-ID: <CAEEmnrM4VUo3G+3R+s8u2xVqnFtgNnxs325ikpzaFz7bSDVivQ@mail.gmail.com>

Yes being able to curve 3D space would be useful.

On 7 May 2015 at 12:05, <arnholm at arnholm.org> wrote:

> On 2015-05-07 09:30, Stefan Krister wrote:
>
>> Step by step in a for loop I sliced (via an intersection) the long
>> object and got many slices. Then I rotate each slice and transform it to
>> the right place along a circle.
>>
>
> Not sure how that works and it sounds complicated. I admit the result
> looks good, though....
>
> I guess what would be really cool is to perform all modelling just like
> you did in some other 3d parameter space, and then simply describe how the
> 3d parameter space transforms into ordinary 3d cartesian space. In this
> case the parameter space would be cylindrical...
>
> Carsten Arnholm
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150507/d7a65097/attachment.html>

From oz.at.michael at gmail.com  Thu May  7 07:59:49 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Thu, 7 May 2015 04:59:49 -0700 (MST)
Subject: [OpenSCAD] minkowski - how to keep exact dimensions
In-Reply-To: <CAEEmnrM4VUo3G+3R+s8u2xVqnFtgNnxs325ikpzaFz7bSDVivQ@mail.gmail.com>
References: <5549D42C.3060709@creative.chaos.de>
	<554B147E.8050806@creative.chaos.de>
	<f41c5f881510ffdf8d7f456b90f6b964@arnholm.org>
	<CAEEmnrM4VUo3G+3R+s8u2xVqnFtgNnxs325ikpzaFz7bSDVivQ@mail.gmail.com>
Message-ID: <1430999989882-12608.post@n5.nabble.com>

nophead wrote
> Yes being able to curve 3D space would be useful.

Strong I feel the force within you is...




-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/minkowski-how-to-keep-exact-dimensions-tp12593p12608.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From nop.head at gmail.com  Thu May  7 08:11:22 2015
From: nop.head at gmail.com (nop head)
Date: Thu, 7 May 2015 13:11:22 +0100
Subject: [OpenSCAD] minkowski - how to keep exact dimensions
In-Reply-To: <1430999989882-12608.post@n5.nabble.com>
References: <5549D42C.3060709@creative.chaos.de>
	<554B147E.8050806@creative.chaos.de>
	<f41c5f881510ffdf8d7f456b90f6b964@arnholm.org>
	<CAEEmnrM4VUo3G+3R+s8u2xVqnFtgNnxs325ikpzaFz7bSDVivQ@mail.gmail.com>
	<1430999989882-12608.post@n5.nabble.com>
Message-ID: <CAEEmnrPB=uFabLMJGG++Hfi1uYErgck82YH-oh9Z+GEe0rqVVw@mail.gmail.com>

Of course being able to arbitrarily curve 4D space - time would be even
better. I believe if you get it right using negative energy you can travel
backwards in time.

On 7 May 2015 at 12:59, MichaelAtOz <oz.at.michael at gmail.com> wrote:

> nophead wrote
> > Yes being able to curve 3D space would be useful.
>
> Strong I feel the force within you is...
>
>
>
>
> -----
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; To the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work. This work is
> published globally via the internet. :) Inclusion of works of previous
> authors is not included in the above.
>
> The TPP is no simple "trade agreement."   Fight it!
> http://www.ourfairdeal.org/
> --
> View this message in context:
> http://forum.openscad.org/minkowski-how-to-keep-exact-dimensions-tp12593p12608.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150507/bd46341e/attachment.html>

From gwadej at anomaly.org  Thu May  7 08:12:03 2015
From: gwadej at anomaly.org (G. Wade Johnson)
Date: Thu, 7 May 2015 07:12:03 -0500
Subject: [OpenSCAD] minkowski - how to keep exact dimensions
In-Reply-To: <CAEEmnrM4VUo3G+3R+s8u2xVqnFtgNnxs325ikpzaFz7bSDVivQ@mail.gmail.com>
References: <5549D42C.3060709@creative.chaos.de>
	<554B147E.8050806@creative.chaos.de>
	<f41c5f881510ffdf8d7f456b90f6b964@arnholm.org>
	<CAEEmnrM4VUo3G+3R+s8u2xVqnFtgNnxs325ikpzaFz7bSDVivQ@mail.gmail.com>
Message-ID: <20150507071203.3973e78c@cygnus>

On Thu, 7 May 2015 12:36:26 +0100
nop head <nop.head at gmail.com> wrote:

> Yes being able to curve 3D space would be useful.

<grin/> +1

> On 7 May 2015 at 12:05, <arnholm at arnholm.org> wrote:
> 
> > On 2015-05-07 09:30, Stefan Krister wrote:
> >
> >> Step by step in a for loop I sliced (via an intersection) the long
> >> object and got many slices. Then I rotate each slice and transform
> >> it to the right place along a circle.
> >>
> >
> > Not sure how that works and it sounds complicated. I admit the
> > result looks good, though....
> >
> > I guess what would be really cool is to perform all modelling just
> > like you did in some other 3d parameter space, and then simply
> > describe how the 3d parameter space transforms into ordinary 3d
> > cartesian space. In this case the parameter space would be
> > cylindrical...
> >
> > Carsten Arnholm
> >
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> >


-- 
Why do your people ask if someone's ready right before you are going to
do something massively unwise?       -- Delenn - "The War without End"


From yvette at dbtgroup.com  Thu May  7 12:05:02 2015
From: yvette at dbtgroup.com (Yvette S. Hirth, CCP, CDP)
Date: Thu, 07 May 2015 09:05:02 -0700
Subject: [OpenSCAD] minkowski - how to keep exact dimensions
In-Reply-To: <554B147E.8050806@creative.chaos.de>
References: <5549D42C.3060709@creative.chaos.de>
	<554B147E.8050806@creative.chaos.de>
Message-ID: <554B8D2E.8030008@dbtgroup.com>

On 05/07/2015 12:30 AM, Stefan Krister wrote:

> Step by step in a for loop I sliced (via an intersection) the long
> object and got many slices. Then I rotate each slice and transform it to
> the right place along a circle.
>
> At the end, I got this:
>
> https://drive.google.com/folderview?id=0B6LM7uRPVe-sfjFJU3VSVVlfZkloY2dUQkdPNGFGYTFRbjNzc2g4UXJWNGEtdkFocUplQjQ&usp=sharing

gosh, that's beautiful!  thank you for that!
yvette



From stefan.krister at creative.chaos.de  Thu May  7 12:16:08 2015
From: stefan.krister at creative.chaos.de (Stefan Krister)
Date: Thu, 07 May 2015 18:16:08 +0200
Subject: [OpenSCAD] minkowski - how to keep exact dimensions
In-Reply-To: <554B8D2E.8030008@dbtgroup.com>
References: <5549D42C.3060709@creative.chaos.de>	<554B147E.8050806@creative.chaos.de>
	<554B8D2E.8030008@dbtgroup.com>
Message-ID: <554B8FC8.5030108@creative.chaos.de>

Am 07.05.2015 um 18:05 schrieb Yvette S. Hirth, CCP, CDP:
>> At the end, I got this:
>>
>> https://drive.google.com/folderview?id=0B6LM7uRPVe-sfjFJU3VSVVlfZkloY2dUQkdPNGFGYTFRbjNzc2g4UXJWNGEtdkFocUplQjQ&usp=sharing
>>
> 
> gosh, that's beautiful!  thank you for that!

I wonder, no one want's the code I wrote ...

Regards

Stefan
-- 

Blog: http://bastard-fdb.blogspot.de/
Gallery: http://gallery.port23.de/v/bastard/
Wiki: http://wiki.port23.de/wiki/Benutzer:Bastard


From jerry.ellsworth at gmail.com  Fri May  8 22:03:47 2015
From: jerry.ellsworth at gmail.com (jellsworth)
Date: Fri, 8 May 2015 19:03:47 -0700 (MST)
Subject: [OpenSCAD] new "Special Variable"?
In-Reply-To: <1430977951653-12603.post@n5.nabble.com>
References: <5548E25E.6050005@dbtgroup.com>
	<CA+HE+0+CWNykfRtsbBXpGhA=WSR281cRn8uRAcgXSud3+-qaww@mail.gmail.com>
	<20150505133346.5aade914@cygnus> <5549152D.6020509@dbtgroup.com>
	<20150505143315.077bfa03@cygnus>
	<1430865107015-12586.post@n5.nabble.com>
	<274e5872759ba0765d31c5c617e91ddd@arnholm.org>
	<1430964200392-12602.post@n5.nabble.com>
	<1430977951653-12603.post@n5.nabble.com>
Message-ID: <1431137027301-12613.post@n5.nabble.com>

Ivo wrote
> 
> jellsworth wrote
>> OpenSCAD doesn't need to build in it's own version control system. What I
>> liked was the idea of providing a scad file 
/
>> access
/
>>  to the version info so that it could be expressed within the 3d model.
> In general, that also is done by the version control system by keyword
> expansion, hooks or filters :
> 
> git :
> http://git-scm.com/book/en/v2/Customizing-Git-Git-Attributes#Keyword-Expansion
> svn :
> http://stackoverflow.com/questions/18447089/svn-user-defined-property-keyword-expansion-substitution

Good point and links. Thanks.

- Jerry E




--
View this message in context: http://forum.openscad.org/new-Special-Variable-tp12579p12613.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Sat May  9 12:56:50 2015
From: runsun at gmail.com (runsun)
Date: Sat, 9 May 2015 09:56:50 -0700 (MST)
Subject: [OpenSCAD] Namespace 2
In-Reply-To: <5A7CB291-A735-4E20-AE24-1CF15BB3D986@kintel.net>
References: <1386162082879-6175.post@n5.nabble.com>
	<20131204141834.10d5c5fe@jreinhardt-mobile>
	<1386174760261-6177.post@n5.nabble.com>
	<1386199313759-6183.post@n5.nabble.com>
	<1386200322811-6184.post@n5.nabble.com>
	<1387577716374-6291.post@n5.nabble.com>
	<61FB59BD-6015-447F-A32B-8B4732D3AF07@kintel.net>
	<1387676030182-6309.post@n5.nabble.com>
	<5A7CB291-A735-4E20-AE24-1CF15BB3D986@kintel.net>
Message-ID: <1431190610837-12614.post@n5.nabble.com>

Just follow this thread to check out if there's any movement along this line 



-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Namespace-2-tp6175p12614.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From raigl at g-pb.de  Mon May 11 07:01:44 2015
From: raigl at g-pb.de (Rainer Glaschick)
Date: Mon, 11 May 2015 13:01:44 +0200
Subject: [OpenSCAD] Gear looks weird
Message-ID: <55508C18.4060607@g-pb.de>

Using the code
> include <MCAD/gears.scad>
> gear(number_of_teeth=10,circular_pitch=200);
I get the picture as enclosed, where the teeth do no show a nice curve, and even seem to be larger at the tip than at the bottom.
What did I make wrong? Shouldn't it look like the involute at Wikipedia, i.e. like   
    http://en.wikipedia.org/wiki/Involute_gear

Rainer

-- 
Rainer Glaschick, Paderborn, Germany

-------------- next part --------------
A non-text attachment was scrubbed...
Name: gear10.png
Type: image/png
Size: 8371 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150511/2ea7e9f8/attachment.png>

From oz.at.michael at gmail.com  Mon May 11 07:38:21 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Mon, 11 May 2015 04:38:21 -0700 (MST)
Subject: [OpenSCAD] Gear looks weird
In-Reply-To: <55508C18.4060607@g-pb.de>
References: <55508C18.4060607@g-pb.de>
Message-ID: <1431344301299-12617.post@n5.nabble.com>

Perhaps you want involute_gear_tooth()?



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Gear-looks-weird-tp12616p12617.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From raigl at g-pb.de  Mon May 11 08:17:50 2015
From: raigl at g-pb.de (Rainer Glaschick)
Date: Mon, 11 May 2015 14:17:50 +0200
Subject: [OpenSCAD] Gear looks weird
In-Reply-To: <1431344301299-12617.post@n5.nabble.com>
References: <55508C18.4060607@g-pb.de> <1431344301299-12617.post@n5.nabble.com>
Message-ID: <55509DEE.3040000@g-pb.de>

On 11.05.2015 13:38, MichaelAtOz wrote:
> Perhaps you want involute_gear_tooth()?
Well, the function/module gear() uses involute_gear_tooth() to create the tooth, and I think this is a more or less internal subroutine.

The module test_gears() just uses gear(), but the gears produced look also not encouraging.

So my question is if someone has already successfully created nice working gears with the library, and how this is done.

Rainer



From oz.at.michael at gmail.com  Mon May 11 08:36:24 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Mon, 11 May 2015 05:36:24 -0700 (MST)
Subject: [OpenSCAD] Gear looks weird
In-Reply-To: <55509DEE.3040000@g-pb.de>
References: <55508C18.4060607@g-pb.de> <1431344301299-12617.post@n5.nabble.com>
	<55509DEE.3040000@g-pb.de>
Message-ID: <1431347784719-12619.post@n5.nabble.com>

Perhaps you want MCAD\involute_gears.scad

<http://forum.openscad.org/file/n12619/involute_gears.jpg> 



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Gear-looks-weird-tp12616p12619.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Mon May 11 08:50:21 2015
From: arnholm at arnholm.org (arnholm at arnholm.org)
Date: Mon, 11 May 2015 14:50:21 +0200
Subject: [OpenSCAD] Gear looks weird
In-Reply-To: <1431347784719-12619.post@n5.nabble.com>
References: <55508C18.4060607@g-pb.de>
	<1431344301299-12617.post@n5.nabble.com> <55509DEE.3040000@g-pb.de>
	<1431347784719-12619.post@n5.nabble.com>
Message-ID: <a1b30fa60689fd99d1ef413ff8ab37fc@arnholm.org>

On 2015-05-11 14:36, MichaelAtOz wrote:
> Perhaps you want MCAD\involute_gears.scad
> 
> <http://forum.openscad.org/file/n12619/involute_gears.jpg>

I think that is a good idea. I used it some time ago with success, see 
example at
http://arnholm.org/printing-3d-gears/

I found that the terminology of gears is somewhat (completely?) 
inconsistent and depending on "who you talk to". It makes it hard if you 
have not done this before as was the case for me.

In the example on that page I managed to print a gear that successfully 
replaced a stripped plastic gear in a car ventilation system. It still 
works :-)

Carsten Arnholm


From hyperair at debian.org  Mon May 11 12:00:51 2015
From: hyperair at debian.org (Chow Loong Jin)
Date: Tue, 12 May 2015 00:00:51 +0800
Subject: [OpenSCAD] Gear looks weird
In-Reply-To: <55509DEE.3040000@g-pb.de>
References: <55508C18.4060607@g-pb.de> <1431344301299-12617.post@n5.nabble.com>
	<55509DEE.3040000@g-pb.de>
Message-ID: <20150511160049.GQ6532@gmail.com>

On Mon, May 11, 2015 at 02:17:50PM +0200, Rainer Glaschick wrote:
> On 11.05.2015 13:38, MichaelAtOz wrote:
> > Perhaps you want involute_gear_tooth()?
> Well, the function/module gear() uses involute_gear_tooth() to create the
> tooth, and I think this is a more or less internal subroutine.
> 
> The module test_gears() just uses gear(), but the gears produced look also not encouraging.
> 
> So my question is if someone has already successfully created nice working
> gears with the library, and how this is done.

Here's my replacement shredder gear, scad included:
http://www.thingiverse.com/thing:343602/

It uses the gear from MCAD/gears/involute_gears.scad from the dev branch, but
<MCAD/involute_gears.scad> from the latest MCAD release should work just as
well.

The most confusing thing about the involute_gears.scad module is that gear()'s
circular pitch is defined in terms of actual circular pitch / PI * 180, so you
need to flip that around. For convenience's sake, and to preserve the meaning of
circular_pitch so that older designs may continue working, I have created a
function called convertcp() that handles this for you.

Here's a sample spur gear:

use <MCAD/gears/involute_gears.scad>

gear (
    number_of_teeth = 20,
    circular_pitch = convertcp (5),
    gear_thickness = 5,
    rim_width = 2,
    hub_diameter = 10,
    bore_dimaeter = 8,
    circles = 7
);


-- 
Kind regards,
Loong Jin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: Digital signature
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150512/e0f96f74/attachment.asc>

From doug at moens.org  Tue May 12 16:48:13 2015
From: doug at moens.org (doug moen)
Date: Tue, 12 May 2015 16:48:13 -0400
Subject: [OpenSCAD] Namespace 2
In-Reply-To: <1431190610837-12614.post@n5.nabble.com>
References: <1386162082879-6175.post@n5.nabble.com>
	<20131204141834.10d5c5fe@jreinhardt-mobile>
	<1386174760261-6177.post@n5.nabble.com>
	<1386199313759-6183.post@n5.nabble.com>
	<1386200322811-6184.post@n5.nabble.com>
	<1387577716374-6291.post@n5.nabble.com>
	<61FB59BD-6015-447F-A32B-8B4732D3AF07@kintel.net>
	<1387676030182-6309.post@n5.nabble.com>
	<5A7CB291-A735-4E20-AE24-1CF15BB3D986@kintel.net>
	<1431190610837-12614.post@n5.nabble.com>
Message-ID: <CAGV6i+NM7Ucurwh06p-qQWAe7Z4AYTxsuyQGddsdycst6tMXrQ@mail.gmail.com>

Hi Runsun.

There is movement. Marius and I have been discussing this. Once we can
agree on an initial design proposal, I will create a github repository
with a design document and some code, and start iterating towards a
working prototype. At that point, it will become possible for other
people to get involved. Once the prototype is applied to existing
OpenSCAD code, then we'll have a better idea of how well the proposal
will work.

Doug Moen.

On 09/05/2015, runsun <runsun at gmail.com> wrote:
> Just follow this thread to check out if there's any movement along this line
>
>
>
>
> -----
>
> $  Runsun Pan, PhD
>
> $ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  )
>
> $ -- hash parameter model: here , here
>
> $ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Namespace-2-tp6175p12614.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>


From openscad.org at tzold.net  Tue May 12 17:26:15 2015
From: openscad.org at tzold.net (volkerN)
Date: Tue, 12 May 2015 14:26:15 -0700 (MST)
Subject: [OpenSCAD] transparency bug
Message-ID: <1431465975993-12623.post@n5.nabble.com>

I am new to scad, but I think i hit a bug.
Discription is in the attached file

TransparencyBug.scad
<http://forum.openscad.org/file/n12623/TransparencyBug.scad>  





--
View this message in context: http://forum.openscad.org/transparency-bug-tp12623.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From denber at mindspring.com  Tue May 12 17:28:23 2015
From: denber at mindspring.com (Michele)
Date: Tue, 12 May 2015 14:28:23 -0700 (MST)
Subject: [OpenSCAD] Copy rendering to clipboard?
Message-ID: <1431466103497-12624.post@n5.nabble.com>

Is there any way to copy the contents of the preview window directly to the
Windows clipboard?  That would make it easy to insert the image in an email
for instance.  If not, a "copy to clipboard" button would be nice.  Right
now I'm using a roundabout method of doing a Windows-S, sweeping out the
desired area which copies it to a OneNote window and then copying the
contents of that to the Clipboard.



--
View this message in context: http://forum.openscad.org/Copy-rendering-to-clipboard-tp12624.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From Torsten.Paul at gmx.de  Tue May 12 17:54:34 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Tue, 12 May 2015 23:54:34 +0200
Subject: [OpenSCAD] Copy rendering to clipboard?
In-Reply-To: <1431466103497-12624.post@n5.nabble.com>
References: <1431466103497-12624.post@n5.nabble.com>
Message-ID: <5552769A.5080707@gmx.de>

On 05/12/2015 11:28 PM, Michele wrote:
> Is there any way to copy the contents of the preview window directly to the
> Windows clipboard?  That would make it easy to insert the image in an email
> for instance.  If not, a "copy to clipboard" button would be nice.  Right
> now I'm using a roundabout method of doing a Windows-S, sweeping out the
> desired area which copies it to a OneNote window and then copying the
> contents of that to the Clipboard.
>
Sounds useful :-). I don't think that's currently possible.

But https://github.com/openscad/openscad/pull/1339 should do it.
(Menu: "Export->Export to Clipboard" / only tested on Linux so far)

ciao,
   Torsten.



From runsun at gmail.com  Tue May 12 20:24:44 2015
From: runsun at gmail.com (runsun)
Date: Tue, 12 May 2015 17:24:44 -0700 (MST)
Subject: [OpenSCAD] Namespace 2
In-Reply-To: <CAGV6i+NM7Ucurwh06p-qQWAe7Z4AYTxsuyQGddsdycst6tMXrQ@mail.gmail.com>
References: <20131204141834.10d5c5fe@jreinhardt-mobile>
	<1386174760261-6177.post@n5.nabble.com>
	<1386199313759-6183.post@n5.nabble.com>
	<1386200322811-6184.post@n5.nabble.com>
	<1387577716374-6291.post@n5.nabble.com>
	<61FB59BD-6015-447F-A32B-8B4732D3AF07@kintel.net>
	<1387676030182-6309.post@n5.nabble.com>
	<5A7CB291-A735-4E20-AE24-1CF15BB3D986@kintel.net>
	<1431190610837-12614.post@n5.nabble.com>
	<CAGV6i+NM7Ucurwh06p-qQWAe7Z4AYTxsuyQGddsdycst6tMXrQ@mail.gmail.com>
Message-ID: <1431476684511-12626.post@n5.nabble.com>

Thx man. Much appreciated.



-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Namespace-2-tp6175p12626.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Tue May 12 20:41:29 2015
From: runsun at gmail.com (runsun)
Date: Tue, 12 May 2015 17:41:29 -0700 (MST)
Subject: [OpenSCAD] eval( ) ???
Message-ID: <1431477689364-12627.post@n5.nabble.com>

What do you guys think to have an eval() to evaluate code ?I am thinking that
this would help in area where "function as a variable"  is needed, which
openscad can't do.For example, we can have a module call Line from point P
to Q :

> module Line ( [P,Q], 
*
> formula="sin(x)"
*
> , 
*
> scope=["x",[0,90,180,270]]
*
>   ){      formula to be converted to points :     points0 = 
*
> eval( formula, scope )
*
>     (some other processings to use points0): points = ....    faces= ....   
> polyhedron( points= points, faces=faces)} 

Once this is set, we can have all kinds of different shapes of Lines,
generating from this single Line module.




-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/eval-tp12627.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150512/55c5d83d/attachment.html>

From doug at moens.org  Tue May 12 22:17:20 2015
From: doug at moens.org (doug moen)
Date: Tue, 12 May 2015 22:17:20 -0400
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <1431477689364-12627.post@n5.nabble.com>
References: <1431477689364-12627.post@n5.nabble.com>
Message-ID: <CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>

My feeling is that it's more important to have first class function
values, and eval() is a poor substitute.

FWIW, first class function values is part of the set of changes that I
am currently discussing with Marius.

Doug Moen.

On 12/05/2015, runsun <runsun at gmail.com> wrote:
> What do you guys think to have an eval() to evaluate code ?I am thinking
> that
> this would help in area where "function as a variable"  is needed, which
> openscad can't do.For example, we can have a module call Line from point P
> to Q :
>
>> module Line ( [P,Q],
> *
>> formula="sin(x)"
> *
>> ,
> *
>> scope=["x",[0,90,180,270]]
> *
>>   ){      formula to be converted to points :     points0 =
> *
>> eval( formula, scope )
> *
>>     (some other processings to use points0): points = ....    faces= ....
>>
>> polyhedron( points= points, faces=faces)}
>
> Once this is set, we can have all kinds of different shapes of Lines,
> generating from this single Line module.
>
>
>
>
> -----
>
> $  Runsun Pan, PhD
>
> $ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  )
>
> $ -- hash parameter model: here , here
>
> $ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly
>
>
>
>
> --
> View this message in context: http://forum.openscad.org/eval-tp12627.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Wed May 13 00:03:45 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Tue, 12 May 2015 21:03:45 -0700 (MST)
Subject: [OpenSCAD] transparency bug
In-Reply-To: <1431465975993-12623.post@n5.nabble.com>
References: <1431465975993-12623.post@n5.nabble.com>
Message-ID: <1431489825391-12629.post@n5.nabble.com>

That's how it works ATM. See  issue
<https://github.com/openscad/openscad/issues/310>   for old discussion.



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/transparency-bug-tp12623p12629.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Wed May 13 00:56:42 2015
From: runsun at gmail.com (runsun)
Date: Tue, 12 May 2015 21:56:42 -0700 (MST)
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
References: <1431477689364-12627.post@n5.nabble.com>
	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
Message-ID: <1431493002219-12630.post@n5.nabble.com>

Indeed. A first class function will work pretty well in cases like I post
above. Just thought of something. Since in openscad, parameters and
functions are stored in different places:     abc=3;    function
abc()=...;Assigning abc to a parameter, if possible, will be confusing:    
x = abc; // function or parameter?A possible way out of this is like what
Visual Basic does:    x = something; // assign parameter    *set* x =
something; // assign objectThat is, *set* for object assignment. In
openscad, could be function or module assignment. Not sure how expensive it
is though. 




-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/eval-tp12627p12630.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150512/5ad49170/attachment.html>

From ratep2001 at yahoo.com  Wed May 13 03:29:26 2015
From: ratep2001 at yahoo.com (ratep2001)
Date: Wed, 13 May 2015 00:29:26 -0700 (MST)
Subject: [OpenSCAD] OpenSCAD syntax highligter for Crimson Editor?
Message-ID: <1431502166447-12631.post@n5.nabble.com>

I want to use Crimson Editor as text editor for OpenSCAD, but I am missing a
syntax highlighter. Has anybody already done the job and is willing to share
the highlighter files?



--
View this message in context: http://forum.openscad.org/OpenSCAD-syntax-highligter-for-Crimson-Editor-tp12631.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jon at jonbondy.com  Wed May 13 06:58:41 2015
From: jon at jonbondy.com (jon)
Date: Wed, 13 May 2015 06:58:41 -0400
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <1431493002219-12630.post@n5.nabble.com>
References: <1431477689364-12627.post@n5.nabble.com>	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
	<1431493002219-12630.post@n5.nabble.com>
Message-ID: <55532E61.10105@jonbondy.com>

Oh, god.  Please do not head towards Visual Basic.

On 5/13/2015 12:56 AM, runsun wrote:
> Indeed. A first class function will work pretty well in cases like I post above.
>
> Just thought of something. Since in openscad, parameters and functions are stored in different places:
> |
>      abc=3;
>      function abc()=...;
> |
>
> Assigning|abc|  to a parameter, if possible, will be confusing:
>
> |
>      x = abc; // function or parameter?
> |
>
> A possible way out of this is like what Visual Basic does:
>
> |
>      x = something; // assign parameter
>      *set*  x = something; // assign object
> |
>
> That is,*set*  for object assignment. In openscad, could be function or module assignment. Not sure how expensive it is though.
> $ 
> <http://forum.openscad.org/mailing_list/MailingListOptions.jtp?forum=1> _Runsun 
> Pan, PhD_
> $ -- *OpenScad_DocTest*: doc and unit test ( Github 
> <https://github.com/runsun/openscad_doctest>, Thingiverse 
> <https://www.thingiverse.com/thing:410831> )
> $ -- *hash parameter model*: here 
> <http://forum.openscad.org/parameterized-models-td8303.html#a8306>, 
> here 
> <http://forum.openscad.org/Can-I-get-some-code-review-up-in-here-tp12341p12355.html>
> $ -- _Linux Mint 17.1 Rebecca x64_ + _OpenSCAD 
> 2015.03.15_/_2015.04.01.nightly_
>
> ------------------------------------------------------------------------
> View this message in context: Re: eval( ) ??? 
> <http://forum.openscad.org/eval-tp12627p12630.html>
> Sent from the OpenSCAD mailing list archive 
> <http://forum.openscad.org/> at Nabble.com.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> No virus found in this message.
> Checked by AVG - www.avg.com <http://www.avg.com>
> Version: 2015.0.5863 / Virus Database: 4342/9758 - Release Date: 05/12/15
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150513/910d978a/attachment.html>

From gwadej at anomaly.org  Wed May 13 08:14:49 2015
From: gwadej at anomaly.org (G. Wade Johnson)
Date: Wed, 13 May 2015 07:14:49 -0500
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
References: <1431477689364-12627.post@n5.nabble.com>
	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
Message-ID: <20150513071449.7ff76cce@cygnus>

On Tue, 12 May 2015 22:17:20 -0400
doug moen <doug at moens.org> wrote:

> My feeling is that it's more important to have first class function
> values, and eval() is a poor substitute.

Definitely agree that function values is a better idea. Plus eval()
almost always results in major unintended consequences.

> FWIW, first class function values is part of the set of changes that I
> am currently discussing with Marius.
> 
> Doug Moen.
> 
> On 12/05/2015, runsun <runsun at gmail.com> wrote:
> > What do you guys think to have an eval() to evaluate code ?I am
> > thinking that
> > this would help in area where "function as a variable"  is needed,
> > which openscad can't do.For example, we can have a module call Line
> > from point P to Q :
> >
> >> module Line ( [P,Q],
> > *
> >> formula="sin(x)"
> > *
> >> ,
> > *
> >> scope=["x",[0,90,180,270]]
> > *
> >>   ){      formula to be converted to points :     points0 =
> > *
> >> eval( formula, scope )
> > *
> >>     (some other processings to use points0): points = ....
> >> faces= ....
> >>
> >> polyhedron( points= points, faces=faces)}
> >
> > Once this is set, we can have all kinds of different shapes of
> > Lines, generating from this single Line module.
> >
> >
> >
> >
> > -----
> >
> > $  Runsun Pan, PhD
> >
> > $ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  )
> >
> > $ -- hash parameter model: here , here
> >
> > $ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD
> > 2015.03.15/2015.04.01.nightly
> >
> >
> >
> >
> > --
> > View this message in context:
> > http://forum.openscad.org/eval-tp12627.html Sent from the OpenSCAD
> > mailing list archive at Nabble.com.
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


-- 
Understanding is a three-edged sword.      -- Kosh in "Deathwalker"


From runsun at gmail.com  Wed May 13 12:55:27 2015
From: runsun at gmail.com (runsun)
Date: Wed, 13 May 2015 09:55:27 -0700 (MST)
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <55532E61.10105@jonbondy.com>
References: <1431477689364-12627.post@n5.nabble.com>
	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
	<1431493002219-12630.post@n5.nabble.com>
	<55532E61.10105@jonbondy.com>
Message-ID: <1431536127142-12634.post@n5.nabble.com>

If I didn't use the keyword "Visual Basic", but present it as just an idea,
will you have the same resentment?To me, borrowing idea from other language
doesn't mean the entire openscad is going toward it. It all depends on how
to implement to fit needs. Aside from that, using *set* for func/mod
assignment does have its down side. The following does look weird :      
some_module( arg1, *set* arg2= some_func )     So, alternatively, we can use
a func specifically designed for this (this time I won't say where the idea
is from :) ):       x1 = abc; // assign parameter abc   x2 = function( abc )
; // assign function abc     




-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/eval-tp12627p12634.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150513/da8a0eb5/attachment.html>

From miro at hroncok.cz  Wed May 13 13:16:41 2015
From: miro at hroncok.cz (=?UTF-8?Q?Miro_Hron=C4=8Dok?=)
Date: Wed, 13 May 2015 19:16:41 +0200
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <1431536127142-12634.post@n5.nabble.com>
References: <1431477689364-12627.post@n5.nabble.com>
	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
	<1431493002219-12630.post@n5.nabble.com>
	<55532E61.10105@jonbondy.com>
	<1431536127142-12634.post@n5.nabble.com>
Message-ID: <CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>

I'd rather see that function names and variables are saved in the same
scope, even though it might get backwards incompatible.
Miro Hron?ok

Telefon: +420777974800


2015-05-13 18:55 GMT+02:00 runsun <runsun at gmail.com>:
> If I didn't use the keyword "Visual Basic", but present it as just an idea,
> will you have the same resentment?
>
> To me, borrowing idea from other language doesn't mean the entire openscad
> is going toward it. It all depends on how to implement to fit needs.
>
> Aside from that, using set for func/mod assignment does have its down side.
> The following does look weird :
>
>    some_module( arg1, set arg2= some_func )
>
> So, alternatively, we can use a func specifically designed for this (this
> time I won't say where the idea is from :) ):
>
>    x1 = abc; // assign parameter abc
>    x2 = function( abc ) ; // assign function abc
>
>
>
> $ Runsun Pan, PhD
> $ -- OpenScad_DocTest: doc and unit test ( Github, Thingiverse )
> $ -- hash parameter model: here, here
> $ -- Linux Mint 17.1 Rebecca x64 + OpenSCAD 2015.03.15/2015.04.01.nightly
>
> ________________________________
> View this message in context: Re: eval( ) ???
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>


From jon at jonbondy.com  Wed May 13 13:45:07 2015
From: jon at jonbondy.com (jon)
Date: Wed, 13 May 2015 13:45:07 -0400
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>
References: <1431477689364-12627.post@n5.nabble.com>	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>	<1431493002219-12630.post@n5.nabble.com>	<55532E61.10105@jonbondy.com>	<1431536127142-12634.post@n5.nabble.com>
	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>
Message-ID: <55538DA3.9050108@jonbondy.com>

Agreed

On 5/13/2015 1:16 PM, Miro Hron?ok wrote:
> I'd rather see that function names and variables are saved in the same
> scope, even though it might get backwards incompatible.
> Miro Hron?ok
>
> Telefon: +420777974800
>
>
> 2015-05-13 18:55 GMT+02:00 runsun <runsun at gmail.com>:
>> If I didn't use the keyword "Visual Basic", but present it as just an idea,
>> will you have the same resentment?
>>
>> To me, borrowing idea from other language doesn't mean the entire openscad
>> is going toward it. It all depends on how to implement to fit needs.
>>
>> Aside from that, using set for func/mod assignment does have its down side.
>> The following does look weird :
>>
>>     some_module( arg1, set arg2= some_func )
>>
>> So, alternatively, we can use a func specifically designed for this (this
>> time I won't say where the idea is from :) ):
>>
>>     x1 = abc; // assign parameter abc
>>     x2 = function( abc ) ; // assign function abc
>>
>>
>>
>> $ Runsun Pan, PhD
>> $ -- OpenScad_DocTest: doc and unit test ( Github, Thingiverse )
>> $ -- hash parameter model: here, here
>> $ -- Linux Mint 17.1 Rebecca x64 + OpenSCAD 2015.03.15/2015.04.01.nightly
>>
>> ________________________________
>> View this message in context: Re: eval( ) ???
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> -----
> No virus found in this message.
> Checked by AVG - www.avg.com
> Version: 2015.0.5863 / Virus Database: 4342/9764 - Release Date: 05/13/15



From doug at moens.org  Wed May 13 14:19:24 2015
From: doug at moens.org (doug moen)
Date: Wed, 13 May 2015 14:19:24 -0400
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>
References: <1431477689364-12627.post@n5.nabble.com>
	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
	<1431493002219-12630.post@n5.nabble.com>
	<55532E61.10105@jonbondy.com>
	<1431536127142-12634.post@n5.nabble.com>
	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>
Message-ID: <CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>

Miro said: "I'd rather see that function names and variables are saved in
the same scope".

That's what I want as well. This would allow functions to be first class
values: you can pass them as arguments to functions, return them as
results, and store them as elements of a list. No arbitrary restrictions.

On 13 May 2015 at 13:16, Miro Hron?ok <miro at hroncok.cz> wrote:

> I'd rather see that function names and variables are saved in the same
> scope, even though it might get backwards incompatible.
> Miro Hron?ok
>
> Telefon: +420777974800
>
>
> 2015-05-13 18:55 GMT+02:00 runsun <runsun at gmail.com>:
> > If I didn't use the keyword "Visual Basic", but present it as just an
> idea,
> > will you have the same resentment?
> >
> > To me, borrowing idea from other language doesn't mean the entire
> openscad
> > is going toward it. It all depends on how to implement to fit needs.
> >
> > Aside from that, using set for func/mod assignment does have its down
> side.
> > The following does look weird :
> >
> >    some_module( arg1, set arg2= some_func )
> >
> > So, alternatively, we can use a func specifically designed for this (this
> > time I won't say where the idea is from :) ):
> >
> >    x1 = abc; // assign parameter abc
> >    x2 = function( abc ) ; // assign function abc
> >
> >
> >
> > $ Runsun Pan, PhD
> > $ -- OpenScad_DocTest: doc and unit test ( Github, Thingiverse )
> > $ -- hash parameter model: here, here
> > $ -- Linux Mint 17.1 Rebecca x64 + OpenSCAD 2015.03.15/2015.04.01.nightly
> >
> > ________________________________
> > View this message in context: Re: eval( ) ???
> > Sent from the OpenSCAD mailing list archive at Nabble.com.
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> >
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150513/8743303d/attachment.html>

From arnholm at arnholm.org  Thu May 14 05:58:36 2015
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Thu, 14 May 2015 11:58:36 +0200
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>
References: <1431477689364-12627.post@n5.nabble.com>	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>	<1431493002219-12630.post@n5.nabble.com>	<55532E61.10105@jonbondy.com>	<1431536127142-12634.post@n5.nabble.com>	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>
	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>
Message-ID: <555471CC.2050307@arnholm.org>

On 2015-05-13 20:19, doug moen wrote:
> Miro said: "I'd rather see that function names and variables are saved
> in the same scope".
>
> That's what I want as well. This would allow functions to be first class
> values: you can pass them as arguments to functions, return them as
> results, and store them as elements of a list. No arbitrary restrictions.

Just a point of reflection:

I think it is a mistake that OpenSCAD spends time on defining the syntax 
of a language. All of the resources should be spent on improving 
modelling features. I realise this is much too late given the user base 
of the .scad files, but it strikes me as odd anyway.

A few years ago, I was part of a team that created an modelling 
application with CAD features (it is still significant in its market 
area). It used, and still uses, ACIS as its CAD core, with heavy use of 
boolean operations so it is similar to OpenSCAD in some ways.

The team had a history of creating applications in the past with ad-hoc 
command languages, and we found it was a bad idea in the long run. So 
for the ACIS-based application we decided to use an existing language 
interpreter with a documented syntax. We happened to choose JavaScript 
as the core language and expressed all functionality as JavaScript 
objects. It worked fine.

I am clearly not saying OpenSCAD should adopt JavaScript, but I think it 
would have been easier and better if an existing language had been 
adapted (AngelScript is another example) instead of developing a new one.

Anyway, I realise it is much too late.

What I would like to see is an improvement to the speed of the F6 
rendering, it takes too long in some cases. Plus it would be nice with 
more general sweep options and other common operations in CAD tools 
(lofting is another example).

That said, OpenSCAD is my preferred application for designing 3d printed 
parts! I quite enjoy it.

Carsten Arnholm



From marius at kintel.net  Thu May 14 10:22:12 2015
From: marius at kintel.net (Marius Kintel)
Date: Thu, 14 May 2015 10:22:12 -0400
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <555471CC.2050307@arnholm.org>
References: <1431477689364-12627.post@n5.nabble.com>	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>	<1431493002219-12630.post@n5.nabble.com>	<55532E61.10105@jonbondy.com>	<1431536127142-12634.post@n5.nabble.com>	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>
	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>
	<555471CC.2050307@arnholm.org>
Message-ID: <D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>

Hi Carsten,

OpenSCAD aim to directly describe a 3D design hierarchy, not merely execute code to spit out 3D objects. 
The reason for not choosing an existing language for OpenSCAD is simply that we haven?t found any languages which fit our requirements.
So far, the closest conceptual match I?ve found is XSLT - and virtually everyone I?ve talked to having ever used XSLT would cringe on hearing those 4 letters :/
Once you look further however, you could probably model all of OpenSCAD?s behavior using a pure functional language. The challenge is that said languages tend to be less suitable for non-programmers to both read and write. Once we redefine some of OpenSCAD?s mistakes, we could probably define OpenSCAD as a syntactical front-end to such a pure functional evaluation engine. 

Using a faster and more powerful CAD kernel is indeed on the radar. Sadly, the world of Open Source CAD kernels is severely limited. If we manage to get sufficient contributions or funding, working towards such a kernel would be doable. If you have any spare time, this would be a good place to start: https://github.com/openscad/openscad/wiki/Project%3A-Survey-of-CSG-algorithms

..or if someone has the experience to do so: Evaluate OpenCascade as an option. Most people I?ve talked to who?ve ever used that has strongly recommended me never to touch it though. ..but FreeCAD somehow manages.

 -Marius



From jon at jonbondy.com  Thu May 14 11:40:59 2015
From: jon at jonbondy.com (jon)
Date: Thu, 14 May 2015 11:40:59 -0400
Subject: [OpenSCAD] two bugs
Message-ID: <5554C20B.8050800@jonbondy.com>

If you compile the following code with F5 you will get a part of a mold 
that I am designing.  You will have to revise the "import" code so that 
it can see the STL that I have attached.

Bug 1: if you align the visualization as shown in the screen shot, there 
is a "ghost" that is sometimes visible.  This can be confusing and 
distracting: is it really there or not?

Bug 2: if you now compile with F6, the mold disappears and a triangular 
solid appears.  The "difference" has vanished.  So, the mold is 
effectively useless.

Jon

===

th = 10;
rch = 0.1;
maxX = 47.1/2;
maxY = 28.3/2;
minX = -maxX;
minY = -maxY;
maxXth = maxX + th;
maxYth = maxY + th;
minXth = minX - th;
minYth = minY - th;

module Lock() {
     translate([minX, minY, 0])
         import ("d:/stl files/enigma lock for mold.stl");
     }


  BotM1();

module P1() {
     polygon(points=[[0, 0], [minXth, minYth], [minXth, maxYth]], 
paths=[[0, 1, 2]]);
     }

module BotM1() {
     difference() {
         translate([0, 0, -th])
             linear_extrude(10.3 + th - rch)
                 P1();
         Lock();
         }
     }


-------------- next part --------------
A non-text attachment was scrubbed...
Name: Mold.PNG
Type: image/png
Size: 7129 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150514/fdfb927c/attachment-0001.PNG>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Enigma Lock for Mold.stl
Type: application/vnd.ms-pki.stl
Size: 161984 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150514/fdfb927c/attachment-0001.stl>

From marius at kintel.net  Thu May 14 12:21:43 2015
From: marius at kintel.net (Marius Kintel)
Date: Thu, 14 May 2015 12:21:43 -0400
Subject: [OpenSCAD] two bugs
In-Reply-To: <5554C20B.8050800@jonbondy.com>
References: <5554C20B.8050800@jonbondy.com>
Message-ID: <3F31D5B3-E767-4E36-A848-337B5564552E@kintel.net>

On May 14, 2015, at 11:40 AM, jon <jon at jonbondy.com> wrote:

> Bug 1: if you align the visualization as shown in the screen shot, there is a "ghost" that is sometimes visible.  This can be confusing and distracting: is it really there or not?
> 
Add ?convexity=3? as a parameter to import(). This is to tell OpenSCAD that your imported geometry is has high depth complexity.

> Bug 2: if you now compile with F6, the mold disappears and a triangular solid appears.  The "difference" has vanished.  So, the mold is effectively useless.
> 
This is because your imported STL has degenerate features not supported by OpenSCAD. Typically, this means you have ?zero area triangles? - triangles where we can?t deduce a normal vector. Our geometry engine (CGAL) doesn?t support this. It?s a known issue and pretty annoying indeed.
See https://github.com/openscad/openscad/issues/945 and https://github.com/openscad/openscad/issues/1042

 -Marius



From nop.head at gmail.com  Thu May 14 12:29:24 2015
From: nop.head at gmail.com (nop head)
Date: Thu, 14 May 2015 17:29:24 +0100
Subject: [OpenSCAD] two bugs
In-Reply-To: <5554C20B.8050800@jonbondy.com>
References: <5554C20B.8050800@jonbondy.com>
Message-ID: <CAEEmnrMBJBG+TfJ331G7HXcoZLqn-Ss0KKhe8iij8_wpcNve=A@mail.gmail.com>

The first problem is fixed by setting convexity in the import.

The second problem is:

ERROR: CGAL error in CGAL_Nef_polyhedron3(): CGAL ERROR: assertion
violation! Expr: pe_prev->is_border() ||
!internal::Plane_constructor::get_plane(pe_prev->facet(),pe_prev->facet()->plane()).is_degenerate()
File:
/data/OpenSCAD/libraries-mingw32-master/mxe/usr/i686-w64-mingw32.static/include/CGAL/Nef_3/polyhedron_3_to_nef_3.h
Line: 293

On 14 May 2015 at 16:40, jon <jon at jonbondy.com> wrote:

> If you compile the following code with F5 you will get a part of a mold
> that I am designing.  You will have to revise the "import" code so that it
> can see the STL that I have attached.
>
> Bug 1: if you align the visualization as shown in the screen shot, there
> is a "ghost" that is sometimes visible.  This can be confusing and
> distracting: is it really there or not?
>
> Bug 2: if you now compile with F6, the mold disappears and a triangular
> solid appears.  The "difference" has vanished.  So, the mold is effectively
> useless.
>
> Jon
>
> ===
>
> th = 10;
> rch = 0.1;
> maxX = 47.1/2;
> maxY = 28.3/2;
> minX = -maxX;
> minY = -maxY;
> maxXth = maxX + th;
> maxYth = maxY + th;
> minXth = minX - th;
> minYth = minY - th;
>
> module Lock() {
>     translate([minX, minY, 0])
>         import ("d:/stl files/enigma lock for mold.stl");
>     }
>
>
>  BotM1();
>
> module P1() {
>     polygon(points=[[0, 0], [minXth, minYth], [minXth, maxYth]],
> paths=[[0, 1, 2]]);
>     }
>
> module BotM1() {
>     difference() {
>         translate([0, 0, -th])
>             linear_extrude(10.3 + th - rch)
>                 P1();
>         Lock();
>         }
>     }
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150514/04599bbb/attachment.html>

From jon at jonbondy.com  Thu May 14 12:35:36 2015
From: jon at jonbondy.com (jon)
Date: Thu, 14 May 2015 12:35:36 -0400
Subject: [OpenSCAD] two bugs
In-Reply-To: <3F31D5B3-E767-4E36-A848-337B5564552E@kintel.net>
References: <5554C20B.8050800@jonbondy.com>
	<3F31D5B3-E767-4E36-A848-337B5564552E@kintel.net>
Message-ID: <5554CED8.1060409@jonbondy.com>

Thanks (and to nop head).

The STL was created by SketchUp.  Is there some way to "fix" the STL?  
NetFabb Basic claims the STL is OK.

Jon

On 5/14/2015 12:21 PM, Marius Kintel wrote:
> On May 14, 2015, at 11:40 AM, jon <jon at jonbondy.com> wrote:
>
>> Bug 1: if you align the visualization as shown in the screen shot, there is a "ghost" that is sometimes visible.  This can be confusing and distracting: is it really there or not?
>>
> Add ?convexity=3? as a parameter to import(). This is to tell OpenSCAD that your imported geometry is has high depth complexity.
>
>> Bug 2: if you now compile with F6, the mold disappears and a triangular solid appears.  The "difference" has vanished.  So, the mold is effectively useless.
>>
> This is because your imported STL has degenerate features not supported by OpenSCAD. Typically, this means you have ?zero area triangles? - triangles where we can?t deduce a normal vector. Our geometry engine (CGAL) doesn?t support this. It?s a known issue and pretty annoying indeed.
> See https://github.com/openscad/openscad/issues/945 and https://github.com/openscad/openscad/issues/1042
>
>   -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
> -----
> No virus found in this message.
> Checked by AVG - www.avg.com
> Version: 2015.0.5863 / Virus Database: 4342/9775 - Release Date: 05/14/15
>
>
>



From Torsten.Paul at gmx.de  Thu May 14 12:50:14 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Thu, 14 May 2015 18:50:14 +0200
Subject: [OpenSCAD] two bugs
In-Reply-To: <5554CED8.1060409@jonbondy.com>
References: <5554C20B.8050800@jonbondy.com>	<3F31D5B3-E767-4E36-A848-337B5564552E@kintel.net>
	<5554CED8.1060409@jonbondy.com>
Message-ID: <5554D246.9010507@gmx.de>

On 05/14/2015 06:35 PM, jon wrote:
> The STL was created by SketchUp.  Is there some way to "fix" the STL? NetFabb Basic claims the STL is OK.
>
You could try meshlab:

https://github.com/openscad/openscad/wiki/Frequently-Asked-Questions#why-is-my-imported-stl-file-only-showing-up-with-f5-but-not-f6

ciao,
   Torsten.



From arnholm at arnholm.org  Thu May 14 12:58:39 2015
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Thu, 14 May 2015 18:58:39 +0200
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
References: <1431477689364-12627.post@n5.nabble.com>	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>	<1431493002219-12630.post@n5.nabble.com>	<55532E61.10105@jonbondy.com>	<1431536127142-12634.post@n5.nabble.com>	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>	<555471CC.2050307@arnholm.org>
	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
Message-ID: <5554D43F.2000906@arnholm.org>

Hi Marius!

On 2015-05-14 16:22, Marius Kintel wrote:
> OpenSCAD aim to directly describe a 3D design hierarchy, not merely
> execute code to spit out 3D objects.

I do understand, and any language chosen would obviously have to support 
the design hierarchy. As far as I can tell, many languages should be 
able to do it. Personally, I use modules in OpenSCAD extensively, but I 
would be even happier with a class concept with both member functions 
and data members. A 3d hierarchy can be expressed also that way.

Anyway, this was just my thoughts. OpenSCAD has made decisions long ago, 
which I respect. Perhaps one could keep the OpenSCAD language limited 
and use it as an intermediate representation generated by the kind of 
object oriented language I am dreaming of :-)

> Using a faster and more powerful CAD kernel is indeed on the radar.
 > Sadly, the world of Open Source CAD kernels is severely limited.
> If we manage to get sufficient contributions or funding, working
 > towards such a kernel would be doable. If you have any spare
 > time, this would be a good place to start:
> https://github.com/openscad/openscad/wiki/Project%3A-Survey-of-CSG-algorithms
>
> ..or if someone has the experience to do so: Evaluate OpenCascade as an
> option. Most people I?ve talked to who?ve ever used that has strongly
> recommended me never to touch it though. ..but FreeCAD somehow manages.

The funny thing is, I evaluated CAS.CADE (as it was known at the time) 
in about 1994-1995 for the work previously mentioned. It was marketed by 
Matra Datavision in France and I even went to see them a couple of 
times. They had what we thought was a curious idea of their own 
home-grown language (CDL) encapsulating the C++ kernel. Nowadays it 
looks like some finally agree with our thoughts at the time :
http://dev.opencascade.org/doc/overview/html/occt_dev_guides__cdl.html

"Please note that CDL is considered as obsolete and is to be removed in 
one of future releases of OCCT."   :-)

CAS.CADE was closed source and extremely expensive back then, but we 
still struggled very hard to make use of it. The end result for us was 
that it was dropped and replaced it with ACIS. Only a few years ago, I 
discovered CAS.CADE had become quasi open source as OpenCascade (OCCT). 
I also found there is now something called OCE - Open CASCADE Community 
Edition https://github.com/tpaviot/oce/
I had the idea of trying OCE, but frankly not enough incentive and power 
to do it, and my work is different now. OCE may probably be something to 
be considered for OpenSCAD CAD kernel, I suspect OpenCascade has come a 
long way since I saw it.

Sidenote: One thing that has struck me is that the compilation in 
OpenSCAD is quite fast, but the rendering (F6) is extremely slow. I was 
wondering if the generation of triangles for STL really needs the 
graphical rendering to be completed first? If not, one could imagine a 
function to export the compiled model to STL and use an external viewer 
to speed things up when iterating on a complex design that takes forever 
to render.

Carsten Arnholm




From Torsten.Paul at gmx.de  Thu May 14 13:27:16 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Thu, 14 May 2015 19:27:16 +0200
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <5554D43F.2000906@arnholm.org>
References: <1431477689364-12627.post@n5.nabble.com>	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>	<1431493002219-12630.post@n5.nabble.com>	<55532E61.10105@jonbondy.com>	<1431536127142-12634.post@n5.nabble.com>	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>	<555471CC.2050307@arnholm.org>	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
	<5554D43F.2000906@arnholm.org>
Message-ID: <5554DAF4.5080907@gmx.de>

On 05/14/2015 06:58 PM, Carsten Arnholm wrote:
> Sidenote: One thing that has struck me is that the compilation
 > in OpenSCAD is quite fast, but the rendering (F6) is extremely
 > slow. I was wondering if the generation of triangles for STL
 > really needs the graphical rendering to be completed first? If
 > not, one could imagine a function to export the compiled model
 > to STL and use an external viewer to speed things up when iterating
 > on a complex design that takes forever to render.
 >
No, F6 being slow is mainly due to the CSG processing in CGAL.
While the OpenGL rendering itself is badly in need of improvement
(or should at least get additional support for GPU based rendering)
it's not the biggest factor in most cases.

Preview (F5) is fast as there is no CSG happening on mesh level, but
it's handled by OpenCSG using clever OpenGL rendering.

STL export needs the fully generated mesh which is generally not
available after just doing a preview.

ciao,
   Torsten.



From jon at jonbondy.com  Thu May 14 14:20:10 2015
From: jon at jonbondy.com (jon)
Date: Thu, 14 May 2015 14:20:10 -0400
Subject: [OpenSCAD] two bugs
In-Reply-To: <5554D246.9010507@gmx.de>
References: <5554C20B.8050800@jonbondy.com>	<3F31D5B3-E767-4E36-A848-337B5564552E@kintel.net>	<5554CED8.1060409@jonbondy.com>
	<5554D246.9010507@gmx.de>
Message-ID: <5554E75A.8060009@jonbondy.com>

I gave up and re-invented the STL in OpenSCAD.  The lesson?  Never use 
anything other than OpenSCAD!

On 5/14/2015 12:50 PM, Torsten Paul wrote:
> On 05/14/2015 06:35 PM, jon wrote:
>> The STL was created by SketchUp.  Is there some way to "fix" the STL? 
>> NetFabb Basic claims the STL is OK.
>>
> You could try meshlab:
>
> https://github.com/openscad/openscad/wiki/Frequently-Asked-Questions#why-is-my-imported-stl-file-only-showing-up-with-f5-but-not-f6 
>
>
> ciao,
>   Torsten.



From marius at kintel.net  Thu May 14 21:47:05 2015
From: marius at kintel.net (Marius Kintel)
Date: Thu, 14 May 2015 21:47:05 -0400
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <5554D43F.2000906@arnholm.org>
References: <1431477689364-12627.post@n5.nabble.com>	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>	<1431493002219-12630.post@n5.nabble.com>	<55532E61.10105@jonbondy.com>	<1431536127142-12634.post@n5.nabble.com>	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>	<555471CC.2050307@arnholm.org>
	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
	<5554D43F.2000906@arnholm.org>
Message-ID: <AD08681D-ED61-471D-8B94-424928F29C5F@kintel.net>

On May 14, 2015, at 12:58 PM, Carsten Arnholm <arnholm at arnholm.org> wrote:
> 
> Anyway, this was just my thoughts. OpenSCAD has made decisions long ago, which I respect. Perhaps one could keep the OpenSCAD language limited and use it as an intermediate representation generated by the kind of object oriented language I am dreaming of :-)
> 
There are a number of projects doing this by implementing API front-ends for various programming languages, and generate OpenSCAD code.

Also, in the ongoing language revision discussions, one of the possible features we?re discussing is to allow functions to return shapes (i.e. unify the concept of functions and modules). This would make it possible for programmers to abstract away some of the things which has to be explicit today.

 -Marius



From robert.bielik at dirac.se  Fri May 15 02:07:03 2015
From: robert.bielik at dirac.se (Robert Bielik)
Date: Fri, 15 May 2015 08:07:03 +0200
Subject: [OpenSCAD] Modulo ?
In-Reply-To: <5554C20B.8050800@jonbondy.com>
References: <5554C20B.8050800@jonbondy.com>
Message-ID: <55558D07.9040506@dirac.se>

Hi all,

New to OpenSCAD, fantastic tool! However I miss a modulo operator, or 
have I missed it ? :)

Regards
/Robert



From hyperair at debian.org  Fri May 15 02:43:49 2015
From: hyperair at debian.org (Chow Loong Jin)
Date: Fri, 15 May 2015 14:43:49 +0800
Subject: [OpenSCAD] Modulo ?
In-Reply-To: <55558D07.9040506@dirac.se>
References: <5554C20B.8050800@jonbondy.com>
 <55558D07.9040506@dirac.se>
Message-ID: <20150515064347.GH21469@gmail.com>

On Fri, May 15, 2015 at 08:07:03AM +0200, Robert Bielik wrote:
> Hi all,
> 
> New to OpenSCAD, fantastic tool! However I miss a modulo operator, or have I
> missed it ? :)

You mean arithmetic modulo? That's %.

-- 
Kind regards,
Loong Jin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: Digital signature
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150515/480a4eb0/attachment.asc>

From doug at moens.org  Fri May 15 06:56:53 2015
From: doug at moens.org (doug moen)
Date: Fri, 15 May 2015 06:56:53 -0400
Subject: [OpenSCAD] Modulo ?
In-Reply-To: <20150515064347.GH21469@gmail.com>
References: <5554C20B.8050800@jonbondy.com> <55558D07.9040506@dirac.se>
	<20150515064347.GH21469@gmail.com>
Message-ID: <CAGV6i+O1bXkokb6V9R4CyNzaPFcviOAAK5B0mdETQFFnp9ckiA@mail.gmail.com>

Be warned that if you are looking for the modulus function as it is
normally defined in mathematics
(eg, as defined here: http://mathworld.wolfram.com/Mod.html)
then a % m is only equal to a mod m when the arguments are non-negative.

0 % 3 == 0    0 mod 3 == 0
1 % 3 == 1    1 mod 3 == 1
2 % 3 == 2    2 mod 3 == 2
3 % 3 == 0    3 mod 3 == 0

If the first argument is negative, you won't get the expected result.

-1 % 3 == -1  -1 mod 3 == 2

You can define the mod function like this (with correct behaviour for
negative arguments):

function mod(a,m) = a - m*floor(a/m);



On 15 May 2015 at 02:43, Chow Loong Jin <hyperair at debian.org> wrote:

> On Fri, May 15, 2015 at 08:07:03AM +0200, Robert Bielik wrote:
> > Hi all,
> >
> > New to OpenSCAD, fantastic tool! However I miss a modulo operator, or
> have I
> > missed it ? :)
>
> You mean arithmetic modulo? That's %.
>
> --
> Kind regards,
> Loong Jin
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150515/bf50ced8/attachment.html>

From robert.bielik at dirac.se  Fri May 15 08:37:12 2015
From: robert.bielik at dirac.se (Robert Bielik)
Date: Fri, 15 May 2015 14:37:12 +0200
Subject: [OpenSCAD] Modulo ?
In-Reply-To: <CAGV6i+O1bXkokb6V9R4CyNzaPFcviOAAK5B0mdETQFFnp9ckiA@mail.gmail.com>
References: <5554C20B.8050800@jonbondy.com>
	<55558D07.9040506@dirac.se>	<20150515064347.GH21469@gmail.com>
	<CAGV6i+O1bXkokb6V9R4CyNzaPFcviOAAK5B0mdETQFFnp9ckiA@mail.gmail.com>
Message-ID: <5555E878.3030708@dirac.se>

Thanks guys, the reason I asked was because I have a for(i = [0 : 5]) 
and offset = i % 2 and I think it didn't work but now that I wrote that 
out loud, I think
I know the problem :)

Regards
/Robert

doug moen skrev den 2015-05-15 12:56:
> Be warned that if you are looking for the modulus function as it is 
> normally defined in mathematics
> (eg, as defined here: http://mathworld.wolfram.com/Mod.html)
> then a % m is only equal to a mod m when the arguments are non-negative.
>
> 0 % 3 == 0    0 mod 3 == 0
> 1 % 3 == 1    1 mod 3 == 1
> 2 % 3 == 2    2 mod 3 == 2
> 3 % 3 == 0    3 mod 3 == 0
>
> If the first argument is negative, you won't get the expected result.
>
> -1 % 3 == -1  -1 mod 3 == 2
>
> You can define the mod function like this (with correct behaviour for 
> negative arguments):
>
> function mod(a,m) = a - m*floor(a/m);
>
>
>
> On 15 May 2015 at 02:43, Chow Loong Jin <hyperair at debian.org 
> <mailto:hyperair at debian.org>> wrote:
>
>     On Fri, May 15, 2015 at 08:07:03AM +0200, Robert Bielik wrote:
>     > Hi all,
>     >
>     > New to OpenSCAD, fantastic tool! However I miss a modulo
>     operator, or have I
>     > missed it ? :)
>
>     You mean arithmetic modulo? That's %.
>
>     --
>     Kind regards,
>     Loong Jin
>
>     _______________________________________________
>     OpenSCAD mailing list
>     Discuss at lists.openscad.org <mailto:Discuss at lists.openscad.org>
>     http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150515/2509dc2e/attachment.html>

From arnholm at arnholm.org  Fri May 15 08:38:40 2015
From: arnholm at arnholm.org (arnholm at arnholm.org)
Date: Fri, 15 May 2015 14:38:40 +0200
Subject: [OpenSCAD] =?utf-8?b?ZXZhbCggKSA/Pz8=?=
In-Reply-To: <AD08681D-ED61-471D-8B94-424928F29C5F@kintel.net>
References: <1431477689364-12627.post@n5.nabble.com>
	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
	<1431493002219-12630.post@n5.nabble.com> <55532E61.10105@jonbondy.com>
	<1431536127142-12634.post@n5.nabble.com>
	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>
	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>
	<555471CC.2050307@arnholm.org>
	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
	<5554D43F.2000906@arnholm.org>
	<AD08681D-ED61-471D-8B94-424928F29C5F@kintel.net>
Message-ID: <524a6e3fb58779da119c3b783e203fe8@arnholm.org>

On 2015-05-15 03:47, Marius Kintel wrote:
> There are a number of projects doing this by implementing API
> front-ends for various programming languages, and generate OpenSCAD
> code.

Interesting, any links?

> Also, in the ongoing language revision discussions, one of the
> possible features we?re discussing is to allow functions to return
> shapes (i.e. unify the concept of functions and modules). This would
> make it possible for programmers to abstract away some of the things
> which has to be explicit today.

Better abstraction features would be great, that is in essence what I 
wanted. OpenSCAD is "The Programmers Solid 3D CAD Modeller" and as a 
software engineer I would like to have similar abstraction capabilities 
when "programming 3d models" as when programming applications. So a move 
in that direction is good.

However, improving the modelling capabilities with general sweeping etc. 
is just as important.

Thanks for the great work you are doing!

Carsten Arnholm


From runsun at gmail.com  Fri May 15 14:37:07 2015
From: runsun at gmail.com (runsun)
Date: Fri, 15 May 2015 11:37:07 -0700 (MST)
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <AD08681D-ED61-471D-8B94-424928F29C5F@kintel.net>
References: <CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
	<1431493002219-12630.post@n5.nabble.com>
	<55532E61.10105@jonbondy.com>
	<1431536127142-12634.post@n5.nabble.com>
	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>
	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>
	<555471CC.2050307@arnholm.org>
	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
	<5554D43F.2000906@arnholm.org>
	<AD08681D-ED61-471D-8B94-424928F29C5F@kintel.net>
Message-ID: <1431715027394-12656.post@n5.nabble.com>

kintel wrote
> There are a number of projects doing this by implementing API front-ends
> for various programming languages, and generate OpenSCAD code.

Talking about this, I've been wondering why OpenSCAD doesn't have associated
array like {angle:30,r:3}. 

It's not like OpenSCAD doesn't need it. The existence of lookup() and
search() seems to show that we do have such a need. 


kintel wrote
> Also, in the ongoing language revision discussions, one of the possible
> features we?re discussing is to allow functions to return shapes (i.e.
> unify the concept of functions and modules). This would make it possible
> for programmers to abstract away some of the things which has to be
> explicit today.

Cool. That would be a quantum leap. I'd also like to see the possibility of
local functions inside a function. Maybe like this:

   function f ()=
       let( function insider()=... )
       do something with insider()


          





-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/eval-tp12627p12656.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Fri May 15 15:32:34 2015
From: marius at kintel.net (Marius Kintel)
Date: Fri, 15 May 2015 15:32:34 -0400
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <1431715027394-12656.post@n5.nabble.com>
References: <CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
	<1431493002219-12630.post@n5.nabble.com>
	<55532E61.10105@jonbondy.com>
	<1431536127142-12634.post@n5.nabble.com>
	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>
	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>
	<555471CC.2050307@arnholm.org>
	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
	<5554D43F.2000906@arnholm.org>
	<AD08681D-ED61-471D-8B94-424928F29C5F@kintel.net>
	<1431715027394-12656.post@n5.nabble.com>
Message-ID: <C1E443B6-4D1F-49C6-8520-1C38B307A94A@kintel.net>

On May 15, 2015, at 14:37 PM, runsun <runsun at gmail.com> wrote:
> 
> Talking about this, I've been wondering why OpenSCAD doesn't have associated
> array like {angle:30,r:3}. 
> 
That would be an interesting addition. I?ll keep it on my mental checklist.

> 
> Cool. That would be a quantum leap. I'd also like to see the possibility of
> local functions inside a function.

Yes, support for lambda functions would be part of that redesign.

 -Marius



From marius at kintel.net  Fri May 15 15:59:14 2015
From: marius at kintel.net (Marius Kintel)
Date: Fri, 15 May 2015 15:59:14 -0400
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <524a6e3fb58779da119c3b783e203fe8@arnholm.org>
References: <1431477689364-12627.post@n5.nabble.com>
	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
	<1431493002219-12630.post@n5.nabble.com>
	<55532E61.10105@jonbondy.com>
	<1431536127142-12634.post@n5.nabble.com>
	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>
	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>
	<555471CC.2050307@arnholm.org>
	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
	<5554D43F.2000906@arnholm.org>
	<AD08681D-ED61-471D-8B94-424928F29C5F@kintel.net>
	<524a6e3fb58779da119c3b783e203fe8@arnholm.org>
Message-ID: <851C7882-73F4-45B1-9ABE-9DD3BD947DEE@kintel.net>


On May 15, 2015, at 08:38 AM, arnholm at arnholm.org wrote:

> On 2015-05-15 03:47, Marius Kintel wrote:
>> There are a number of projects doing this by implementing API
>> front-ends for various programming languages, and generate OpenSCAD
>> code.
> 
> Interesting, any links?
> 
I?m not following these very closely, so the state may vary quite a bit and I may have forgotten some:

https://github.com/avalero/OOML
https://github.com/Joaz/CrystalScad
https://github.com/farrellm/scad-clj
https://hackage.haskell.org/package/OpenSCAD-0.2.0.0
https://github.com/smcameron/opencscad
https://github.com/kevinmehall/pyscad

 -Marius



From doug at moens.org  Sat May 16 01:19:27 2015
From: doug at moens.org (doug moen)
Date: Sat, 16 May 2015 01:19:27 -0400
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <1431715027394-12656.post@n5.nabble.com>
References: <CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
	<1431493002219-12630.post@n5.nabble.com>
	<55532E61.10105@jonbondy.com>
	<1431536127142-12634.post@n5.nabble.com>
	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>
	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>
	<555471CC.2050307@arnholm.org>
	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
	<5554D43F.2000906@arnholm.org>
	<AD08681D-ED61-471D-8B94-424928F29C5F@kintel.net>
	<1431715027394-12656.post@n5.nabble.com>
Message-ID: <CAGV6i+PV-nhbD4p_Onhm5a09Uqt+wBonoU+0nK0z24k2j0CtmA@mail.gmail.com>

runsun said:
Talking about this, I've been wondering why OpenSCAD doesn't have
associative
array like {angle:30,r:3}.

It's not like OpenSCAD doesn't need it. The existence of lookup() and
search() seems to show that we do have such a need.

---
I agree. Thanks for mentioning this; I will make sure to incorporate this
idea.

runsun also said:
I'd also like to see the possibility of
local functions inside a function. Maybe like this:

   function f ()=
       let( function insider()=... )
       do something with insider()
---
Nested functions are definitely part of the plan.

On 15 May 2015 at 14:37, runsun <runsun at gmail.com> wrote:

> kintel wrote
> > There are a number of projects doing this by implementing API front-ends
> > for various programming languages, and generate OpenSCAD code.
>
> Talking about this, I've been wondering why OpenSCAD doesn't have
> associated
> array like {angle:30,r:3}.
>
> It's not like OpenSCAD doesn't need it. The existence of lookup() and
> search() seems to show that we do have such a need.
>
>
> kintel wrote
> > Also, in the ongoing language revision discussions, one of the possible
> > features we?re discussing is to allow functions to return shapes (i.e.
> > unify the concept of functions and modules). This would make it possible
> > for programmers to abstract away some of the things which has to be
> > explicit today.
>
> Cool. That would be a quantum leap. I'd also like to see the possibility of
> local functions inside a function. Maybe like this:
>
>    function f ()=
>        let( function insider()=... )
>        do something with insider()
>
>
>
>
>
>
>
>
> -----
>
> $  Runsun Pan, PhD
>
> $ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  )
>
> $ -- hash parameter model: here , here
>
> $ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/eval-tp12627p12656.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150516/e26667fa/attachment.html>

From arnholm at arnholm.org  Sat May 16 06:25:04 2015
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Sat, 16 May 2015 12:25:04 +0200
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <851C7882-73F4-45B1-9ABE-9DD3BD947DEE@kintel.net>
References: <1431477689364-12627.post@n5.nabble.com>	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>	<1431493002219-12630.post@n5.nabble.com>	<55532E61.10105@jonbondy.com>	<1431536127142-12634.post@n5.nabble.com>	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>	<555471CC.2050307@arnholm.org>	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>	<5554D43F.2000906@arnholm.org>	<AD08681D-ED61-471D-8B94-424928F29C5F@kintel.net>	<524a6e3fb58779da119c3b783e203fe8@arnholm.org>
	<851C7882-73F4-45B1-9ABE-9DD3BD947DEE@kintel.net>
Message-ID: <55571B00.1000708@arnholm.org>

On 2015-05-15 21:59, Marius Kintel wrote:
> I?m not following these very closely, so the state may vary quite a bit and I may have forgotten some:
>
> https://github.com/avalero/OOML
> https://github.com/Joaz/CrystalScad
> https://github.com/farrellm/scad-clj
> https://hackage.haskell.org/package/OpenSCAD-0.2.0.0
> https://github.com/smcameron/opencscad
> https://github.com/kevinmehall/pyscad

Thank you!

I will have a look at these. OOML seems superficially similar to what I 
was thinking about, but I just browsed it quickly so I could be wrong. 
It does not seem like it is alive anymore, however. I will check it anyway.

Carsten Arnholm



From doug at moens.org  Sat May 16 12:44:38 2015
From: doug at moens.org (doug moen)
Date: Sat, 16 May 2015 12:44:38 -0400
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <5554D43F.2000906@arnholm.org>
References: <1431477689364-12627.post@n5.nabble.com>
	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
	<1431493002219-12630.post@n5.nabble.com>
	<55532E61.10105@jonbondy.com>
	<1431536127142-12634.post@n5.nabble.com>
	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>
	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>
	<555471CC.2050307@arnholm.org>
	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
	<5554D43F.2000906@arnholm.org>
Message-ID: <CAGV6i+PvHK5y_ndqvGshn2A=MBmQdDV6E3VfPxAn1ApUubY22g@mail.gmail.com>

Carsten said:
Personally, I use modules in OpenSCAD extensively, but I would be even
happier with a class concept with both member functions and data members. A
3d hierarchy can be expressed also that way.
... Perhaps one could keep the OpenSCAD language limited and use it as an
intermediate representation generated by the kind of object oriented
language I am dreaming of :-)

The OpenSCAD2 design that I am working on will have a very simple object
model. Consider a typical OpenSCAD script: it has some named numeric
parameters at the top, then some function and module definitions, then some
top level geometry statements that render the model based on the
parameters. So that's an object. An object is a set of top level
definitions (name/value pairs), plus a list of values (which are normally
geometric shapes). OpenSCAD2 has a syntax for referencing an external
library file as an object, and a syntax for object literals (just an
OpenSCAD script, surrounded by braces). Given an object, you can reference
its named components using dot notation (object.name), or you can reference
the object in a geometric context (as an argument to a geometric
transformation, or at the top level of a script), in which case the object
behaves like its geometry.

There are a few more details, but that's the basic idea. Note that this is
much simpler than object oriented programming. There are no mutable
objects, no classes or user defined types, no support for encapsulation or
data abstraction. But, as I mentioned, objects do have "member functions
and data members", so it may go part way towards satisfying Carsten's
requirements. Objects will also satisfy Runsun's requirement for
associative arrays. I also think that constructing a 3D model as a tree of
objects will give us a better (more declarative) way to support
bill-of-materials.

We want to preserve the simple and declarative nature of OpenSCAD. I
believe that this very simple object model will address some of the main
pain points in doing geometric modelling with OpenSCAD, without turning it
into a complex OOP language.

On 14 May 2015 at 12:58, Carsten Arnholm <arnholm at arnholm.org> wrote:

> Hi Marius!
>
> On 2015-05-14 16:22, Marius Kintel wrote:
>
>> OpenSCAD aim to directly describe a 3D design hierarchy, not merely
>> execute code to spit out 3D objects.
>>
>
> I do understand, and any language chosen would obviously have to support
> the design hierarchy. As far as I can tell, many languages should be able
> to do it. Personally, I use modules in OpenSCAD extensively, but I would be
> even happier with a class concept with both member functions and data
> members. A 3d hierarchy can be expressed also that way.
>
> Anyway, this was just my thoughts. OpenSCAD has made decisions long ago,
> which I respect. Perhaps one could keep the OpenSCAD language limited and
> use it as an intermediate representation generated by the kind of object
> oriented language I am dreaming of :-)
>
>  Using a faster and more powerful CAD kernel is indeed on the radar.
>>
> > Sadly, the world of Open Source CAD kernels is severely limited.
>
>> If we manage to get sufficient contributions or funding, working
>>
> > towards such a kernel would be doable. If you have any spare
> > time, this would be a good place to start:
>
>>
>> https://github.com/openscad/openscad/wiki/Project%3A-Survey-of-CSG-algorithms
>>
>> ..or if someone has the experience to do so: Evaluate OpenCascade as an
>> option. Most people I?ve talked to who?ve ever used that has strongly
>> recommended me never to touch it though. ..but FreeCAD somehow manages.
>>
>
> The funny thing is, I evaluated CAS.CADE (as it was known at the time) in
> about 1994-1995 for the work previously mentioned. It was marketed by Matra
> Datavision in France and I even went to see them a couple of times. They
> had what we thought was a curious idea of their own home-grown language
> (CDL) encapsulating the C++ kernel. Nowadays it looks like some finally
> agree with our thoughts at the time :
> http://dev.opencascade.org/doc/overview/html/occt_dev_guides__cdl.html
>
> "Please note that CDL is considered as obsolete and is to be removed in
> one of future releases of OCCT."   :-)
>
> CAS.CADE was closed source and extremely expensive back then, but we still
> struggled very hard to make use of it. The end result for us was that it
> was dropped and replaced it with ACIS. Only a few years ago, I discovered
> CAS.CADE had become quasi open source as OpenCascade (OCCT). I also found
> there is now something called OCE - Open CASCADE Community Edition
> https://github.com/tpaviot/oce/
> I had the idea of trying OCE, but frankly not enough incentive and power
> to do it, and my work is different now. OCE may probably be something to be
> considered for OpenSCAD CAD kernel, I suspect OpenCascade has come a long
> way since I saw it.
>
> Sidenote: One thing that has struck me is that the compilation in OpenSCAD
> is quite fast, but the rendering (F6) is extremely slow. I was wondering if
> the generation of triangles for STL really needs the graphical rendering to
> be completed first? If not, one could imagine a function to export the
> compiled model to STL and use an external viewer to speed things up when
> iterating on a complex design that takes forever to render.
>
> Carsten Arnholm
>
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150516/0dde7067/attachment.html>

From gwadej at anomaly.org  Sat May 16 13:33:01 2015
From: gwadej at anomaly.org (G. Wade Johnson)
Date: Sat, 16 May 2015 12:33:01 -0500
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <CAGV6i+PvHK5y_ndqvGshn2A=MBmQdDV6E3VfPxAn1ApUubY22g@mail.gmail.com>
References: <1431477689364-12627.post@n5.nabble.com>
	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
	<1431493002219-12630.post@n5.nabble.com>
	<55532E61.10105@jonbondy.com>
	<1431536127142-12634.post@n5.nabble.com>
	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>
	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>
	<555471CC.2050307@arnholm.org>
	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
	<5554D43F.2000906@arnholm.org>
	<CAGV6i+PvHK5y_ndqvGshn2A=MBmQdDV6E3VfPxAn1ApUubY22g@mail.gmail.com>
Message-ID: <20150516123301.7e0c770e@cygnus>

Is there a {beta,alpha,prototype} version of OpenSCAD2 somewhere for
people to play with? Is there a spec to read?

I, for one, would like to see anything you are willing to share on this.

G. Wade

On Sat, 16 May 2015 12:44:38 -0400
doug moen <doug at moens.org> wrote:

> Carsten said:
> Personally, I use modules in OpenSCAD extensively, but I would be even
> happier with a class concept with both member functions and data
> members. A 3d hierarchy can be expressed also that way.
> ... Perhaps one could keep the OpenSCAD language limited and use it
> as an intermediate representation generated by the kind of object
> oriented language I am dreaming of :-)
> 
> The OpenSCAD2 design that I am working on will have a very simple
> object model. Consider a typical OpenSCAD script: it has some named
> numeric parameters at the top, then some function and module
> definitions, then some top level geometry statements that render the
> model based on the parameters. So that's an object. An object is a
> set of top level definitions (name/value pairs), plus a list of
> values (which are normally geometric shapes). OpenSCAD2 has a syntax
> for referencing an external library file as an object, and a syntax
> for object literals (just an OpenSCAD script, surrounded by braces).
> Given an object, you can reference its named components using dot
> notation (object.name), or you can reference the object in a
> geometric context (as an argument to a geometric transformation, or
> at the top level of a script), in which case the object behaves like
> its geometry.
> 
> There are a few more details, but that's the basic idea. Note that
> this is much simpler than object oriented programming. There are no
> mutable objects, no classes or user defined types, no support for
> encapsulation or data abstraction. But, as I mentioned, objects do
> have "member functions and data members", so it may go part way
> towards satisfying Carsten's requirements. Objects will also satisfy
> Runsun's requirement for associative arrays. I also think that
> constructing a 3D model as a tree of objects will give us a better
> (more declarative) way to support bill-of-materials.
> 
> We want to preserve the simple and declarative nature of OpenSCAD. I
> believe that this very simple object model will address some of the
> main pain points in doing geometric modelling with OpenSCAD, without
> turning it into a complex OOP language.
> 
> On 14 May 2015 at 12:58, Carsten Arnholm <arnholm at arnholm.org> wrote:
> 
> > Hi Marius!
> >
> > On 2015-05-14 16:22, Marius Kintel wrote:
> >
> >> OpenSCAD aim to directly describe a 3D design hierarchy, not merely
> >> execute code to spit out 3D objects.
> >>
> >
> > I do understand, and any language chosen would obviously have to
> > support the design hierarchy. As far as I can tell, many languages
> > should be able to do it. Personally, I use modules in OpenSCAD
> > extensively, but I would be even happier with a class concept with
> > both member functions and data members. A 3d hierarchy can be
> > expressed also that way.
> >
> > Anyway, this was just my thoughts. OpenSCAD has made decisions long
> > ago, which I respect. Perhaps one could keep the OpenSCAD language
> > limited and use it as an intermediate representation generated by
> > the kind of object oriented language I am dreaming of :-)
> >
> >  Using a faster and more powerful CAD kernel is indeed on the radar.
> >>
> > > Sadly, the world of Open Source CAD kernels is severely limited.
> >
> >> If we manage to get sufficient contributions or funding, working
> >>
> > > towards such a kernel would be doable. If you have any spare
> > > time, this would be a good place to start:
> >
> >>
> >> https://github.com/openscad/openscad/wiki/Project%3A-Survey-of-CSG-algorithms
> >>
> >> ..or if someone has the experience to do so: Evaluate OpenCascade
> >> as an option. Most people I?ve talked to who?ve ever used that has
> >> strongly recommended me never to touch it though. ..but FreeCAD
> >> somehow manages.
> >>
> >
> > The funny thing is, I evaluated CAS.CADE (as it was known at the
> > time) in about 1994-1995 for the work previously mentioned. It was
> > marketed by Matra Datavision in France and I even went to see them
> > a couple of times. They had what we thought was a curious idea of
> > their own home-grown language (CDL) encapsulating the C++ kernel.
> > Nowadays it looks like some finally agree with our thoughts at the
> > time :
> > http://dev.opencascade.org/doc/overview/html/occt_dev_guides__cdl.html
> >
> > "Please note that CDL is considered as obsolete and is to be
> > removed in one of future releases of OCCT."   :-)
> >
> > CAS.CADE was closed source and extremely expensive back then, but
> > we still struggled very hard to make use of it. The end result for
> > us was that it was dropped and replaced it with ACIS. Only a few
> > years ago, I discovered CAS.CADE had become quasi open source as
> > OpenCascade (OCCT). I also found there is now something called OCE
> > - Open CASCADE Community Edition https://github.com/tpaviot/oce/
> > I had the idea of trying OCE, but frankly not enough incentive and
> > power to do it, and my work is different now. OCE may probably be
> > something to be considered for OpenSCAD CAD kernel, I suspect
> > OpenCascade has come a long way since I saw it.
> >
> > Sidenote: One thing that has struck me is that the compilation in
> > OpenSCAD is quite fast, but the rendering (F6) is extremely slow. I
> > was wondering if the generation of triangles for STL really needs
> > the graphical rendering to be completed first? If not, one could
> > imagine a function to export the compiled model to STL and use an
> > external viewer to speed things up when iterating on a complex
> > design that takes forever to render.
> >
> > Carsten Arnholm
> >
> >
> >
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> >
> >


-- 
Controlling complexity is the essence of computer programming
                                                  -- Brian Kernighan


From bobcousins42 at googlemail.com  Sat May 16 14:13:08 2015
From: bobcousins42 at googlemail.com (bobc)
Date: Sat, 16 May 2015 11:13:08 -0700 (MST)
Subject: [OpenSCAD] Preserve "holes" in module objects
In-Reply-To: <1430584123364-12549.post@n5.nabble.com>
References: <1430530188357-12539.post@n5.nabble.com>
	<F6C038B9-2A10-4216-A49A-86824065B57A@kintel.net>
	<CAMyDR6JvNKAGNjj-Fn7WmPLgoWPMVzhTgOwioNQzksvYpG5XVA@mail.gmail.com>
	<1430583736559-12547.post@n5.nabble.com>
	<1430584123364-12549.post@n5.nabble.com>
Message-ID: <1431799988487-12664.post@n5.nabble.com>

stonysmith wrote
> (humor)
> 
> We just need a way to specify the material for each part.
> 
> Then you can simply use:
>    cylinder(r=1,h=100,material=antimatter);
> 
> (/humor)

I know that was a joke, but I think it might be a way to do it. AMF supports
a material id=0, which is used to indicate a void. In a sense, it's a
material with a density of 0.

Having an explicitly defined void might enable holes to be "added" to other
shapes. 



--
View this message in context: http://forum.openscad.org/Preserve-holes-in-module-objects-tp12539p12664.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Sat May 16 15:09:31 2015
From: doug at moens.org (doug moen)
Date: Sat, 16 May 2015 15:09:31 -0400
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <20150516123301.7e0c770e@cygnus>
References: <1431477689364-12627.post@n5.nabble.com>
	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
	<1431493002219-12630.post@n5.nabble.com>
	<55532E61.10105@jonbondy.com>
	<1431536127142-12634.post@n5.nabble.com>
	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>
	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>
	<555471CC.2050307@arnholm.org>
	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
	<5554D43F.2000906@arnholm.org>
	<CAGV6i+PvHK5y_ndqvGshn2A=MBmQdDV6E3VfPxAn1ApUubY22g@mail.gmail.com>
	<20150516123301.7e0c770e@cygnus>
Message-ID: <CAGV6i+NMbuqMQvXahR7RS6Pc4oeyt7WQTw6ofA=bYdWOkNxJeQ@mail.gmail.com>

Hi G. Wade.

No prototype or spec yet. I've been working on the design for a month, with
feedback from Marius, and for the last week, I've been trying to create a
bison grammar that is backward compatible with current OpenSCAD, and also
free of conflicts.

Now I've reached the point where I need to collaborate with more people.
Once I convert my latest design iteration to bison and resolve the
conflicts, I'll write a spec and send you the link. Thanks for volunteering
to read it.

Doug.



On 16 May 2015 at 13:33, G. Wade Johnson <gwadej at anomaly.org> wrote:

> Is there a {beta,alpha,prototype} version of OpenSCAD2 somewhere for
> people to play with? Is there a spec to read?
>
> I, for one, would like to see anything you are willing to share on this.
>
> G. Wade
>
> On Sat, 16 May 2015 12:44:38 -0400
> doug moen <doug at moens.org> wrote:
>
> > Carsten said:
> > Personally, I use modules in OpenSCAD extensively, but I would be even
> > happier with a class concept with both member functions and data
> > members. A 3d hierarchy can be expressed also that way.
> > ... Perhaps one could keep the OpenSCAD language limited and use it
> > as an intermediate representation generated by the kind of object
> > oriented language I am dreaming of :-)
> >
> > The OpenSCAD2 design that I am working on will have a very simple
> > object model. Consider a typical OpenSCAD script: it has some named
> > numeric parameters at the top, then some function and module
> > definitions, then some top level geometry statements that render the
> > model based on the parameters. So that's an object. An object is a
> > set of top level definitions (name/value pairs), plus a list of
> > values (which are normally geometric shapes). OpenSCAD2 has a syntax
> > for referencing an external library file as an object, and a syntax
> > for object literals (just an OpenSCAD script, surrounded by braces).
> > Given an object, you can reference its named components using dot
> > notation (object.name), or you can reference the object in a
> > geometric context (as an argument to a geometric transformation, or
> > at the top level of a script), in which case the object behaves like
> > its geometry.
> >
> > There are a few more details, but that's the basic idea. Note that
> > this is much simpler than object oriented programming. There are no
> > mutable objects, no classes or user defined types, no support for
> > encapsulation or data abstraction. But, as I mentioned, objects do
> > have "member functions and data members", so it may go part way
> > towards satisfying Carsten's requirements. Objects will also satisfy
> > Runsun's requirement for associative arrays. I also think that
> > constructing a 3D model as a tree of objects will give us a better
> > (more declarative) way to support bill-of-materials.
> >
> > We want to preserve the simple and declarative nature of OpenSCAD. I
> > believe that this very simple object model will address some of the
> > main pain points in doing geometric modelling with OpenSCAD, without
> > turning it into a complex OOP language.
> >
> > On 14 May 2015 at 12:58, Carsten Arnholm <arnholm at arnholm.org> wrote:
> >
> > > Hi Marius!
> > >
> > > On 2015-05-14 16:22, Marius Kintel wrote:
> > >
> > >> OpenSCAD aim to directly describe a 3D design hierarchy, not merely
> > >> execute code to spit out 3D objects.
> > >>
> > >
> > > I do understand, and any language chosen would obviously have to
> > > support the design hierarchy. As far as I can tell, many languages
> > > should be able to do it. Personally, I use modules in OpenSCAD
> > > extensively, but I would be even happier with a class concept with
> > > both member functions and data members. A 3d hierarchy can be
> > > expressed also that way.
> > >
> > > Anyway, this was just my thoughts. OpenSCAD has made decisions long
> > > ago, which I respect. Perhaps one could keep the OpenSCAD language
> > > limited and use it as an intermediate representation generated by
> > > the kind of object oriented language I am dreaming of :-)
> > >
> > >  Using a faster and more powerful CAD kernel is indeed on the radar.
> > >>
> > > > Sadly, the world of Open Source CAD kernels is severely limited.
> > >
> > >> If we manage to get sufficient contributions or funding, working
> > >>
> > > > towards such a kernel would be doable. If you have any spare
> > > > time, this would be a good place to start:
> > >
> > >>
> > >>
> https://github.com/openscad/openscad/wiki/Project%3A-Survey-of-CSG-algorithms
> > >>
> > >> ..or if someone has the experience to do so: Evaluate OpenCascade
> > >> as an option. Most people I?ve talked to who?ve ever used that has
> > >> strongly recommended me never to touch it though. ..but FreeCAD
> > >> somehow manages.
> > >>
> > >
> > > The funny thing is, I evaluated CAS.CADE (as it was known at the
> > > time) in about 1994-1995 for the work previously mentioned. It was
> > > marketed by Matra Datavision in France and I even went to see them
> > > a couple of times. They had what we thought was a curious idea of
> > > their own home-grown language (CDL) encapsulating the C++ kernel.
> > > Nowadays it looks like some finally agree with our thoughts at the
> > > time :
> > > http://dev.opencascade.org/doc/overview/html/occt_dev_guides__cdl.html
> > >
> > > "Please note that CDL is considered as obsolete and is to be
> > > removed in one of future releases of OCCT."   :-)
> > >
> > > CAS.CADE was closed source and extremely expensive back then, but
> > > we still struggled very hard to make use of it. The end result for
> > > us was that it was dropped and replaced it with ACIS. Only a few
> > > years ago, I discovered CAS.CADE had become quasi open source as
> > > OpenCascade (OCCT). I also found there is now something called OCE
> > > - Open CASCADE Community Edition https://github.com/tpaviot/oce/
> > > I had the idea of trying OCE, but frankly not enough incentive and
> > > power to do it, and my work is different now. OCE may probably be
> > > something to be considered for OpenSCAD CAD kernel, I suspect
> > > OpenCascade has come a long way since I saw it.
> > >
> > > Sidenote: One thing that has struck me is that the compilation in
> > > OpenSCAD is quite fast, but the rendering (F6) is extremely slow. I
> > > was wondering if the generation of triangles for STL really needs
> > > the graphical rendering to be completed first? If not, one could
> > > imagine a function to export the compiled model to STL and use an
> > > external viewer to speed things up when iterating on a complex
> > > design that takes forever to render.
> > >
> > > Carsten Arnholm
> > >
> > >
> > >
> > >
> > > _______________________________________________
> > > OpenSCAD mailing list
> > > Discuss at lists.openscad.org
> > > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> > >
> > >
>
>
> --
> Controlling complexity is the essence of computer programming
>                                                   -- Brian Kernighan
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150516/99565ce5/attachment-0001.html>

From gwadej at anomaly.org  Sat May 16 15:50:51 2015
From: gwadej at anomaly.org (G. Wade Johnson)
Date: Sat, 16 May 2015 14:50:51 -0500
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <CAGV6i+NMbuqMQvXahR7RS6Pc4oeyt7WQTw6ofA=bYdWOkNxJeQ@mail.gmail.com>
References: <1431477689364-12627.post@n5.nabble.com>
	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
	<1431493002219-12630.post@n5.nabble.com>
	<55532E61.10105@jonbondy.com>
	<1431536127142-12634.post@n5.nabble.com>
	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>
	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>
	<555471CC.2050307@arnholm.org>
	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
	<5554D43F.2000906@arnholm.org>
	<CAGV6i+PvHK5y_ndqvGshn2A=MBmQdDV6E3VfPxAn1ApUubY22g@mail.gmail.com>
	<20150516123301.7e0c770e@cygnus>
	<CAGV6i+NMbuqMQvXahR7RS6Pc4oeyt7WQTw6ofA=bYdWOkNxJeQ@mail.gmail.com>
Message-ID: <20150516145051.42ff59d3@cygnus>

On Sat, 16 May 2015 15:09:31 -0400
doug moen <doug at moens.org> wrote:

> Hi G. Wade.
> 
> No prototype or spec yet. I've been working on the design for a
> month, with feedback from Marius, and for the last week, I've been
> trying to create a bison grammar that is backward compatible with
> current OpenSCAD, and also free of conflicts.
> 
> Now I've reached the point where I need to collaborate with more
> people. Once I convert my latest design iteration to bison and
> resolve the conflicts, I'll write a spec and send you the link.
> Thanks for volunteering to read it.
> 
> Doug.

Glad to do it. It sounds like an interesting approach that could help
OpenSCAD without breaking what makes it useful in my work.

G. Wade


> On 16 May 2015 at 13:33, G. Wade Johnson <gwadej at anomaly.org> wrote:
> 
> > Is there a {beta,alpha,prototype} version of OpenSCAD2 somewhere for
> > people to play with? Is there a spec to read?
> >
> > I, for one, would like to see anything you are willing to share on
> > this.
> >
> > G. Wade
> >
> > On Sat, 16 May 2015 12:44:38 -0400
> > doug moen <doug at moens.org> wrote:
> >
> > > Carsten said:
> > > Personally, I use modules in OpenSCAD extensively, but I would be
> > > even happier with a class concept with both member functions and
> > > data members. A 3d hierarchy can be expressed also that way.
> > > ... Perhaps one could keep the OpenSCAD language limited and use
> > > it as an intermediate representation generated by the kind of
> > > object oriented language I am dreaming of :-)
> > >
> > > The OpenSCAD2 design that I am working on will have a very simple
> > > object model. Consider a typical OpenSCAD script: it has some
> > > named numeric parameters at the top, then some function and module
> > > definitions, then some top level geometry statements that render
> > > the model based on the parameters. So that's an object. An object
> > > is a set of top level definitions (name/value pairs), plus a list
> > > of values (which are normally geometric shapes). OpenSCAD2 has a
> > > syntax for referencing an external library file as an object, and
> > > a syntax for object literals (just an OpenSCAD script, surrounded
> > > by braces). Given an object, you can reference its named
> > > components using dot notation (object.name), or you can reference
> > > the object in a geometric context (as an argument to a geometric
> > > transformation, or at the top level of a script), in which case
> > > the object behaves like its geometry.
> > >
> > > There are a few more details, but that's the basic idea. Note that
> > > this is much simpler than object oriented programming. There are
> > > no mutable objects, no classes or user defined types, no support
> > > for encapsulation or data abstraction. But, as I mentioned,
> > > objects do have "member functions and data members", so it may go
> > > part way towards satisfying Carsten's requirements. Objects will
> > > also satisfy Runsun's requirement for associative arrays. I also
> > > think that constructing a 3D model as a tree of objects will give
> > > us a better (more declarative) way to support bill-of-materials.
> > >
> > > We want to preserve the simple and declarative nature of
> > > OpenSCAD. I believe that this very simple object model will
> > > address some of the main pain points in doing geometric modelling
> > > with OpenSCAD, without turning it into a complex OOP language.
> > >
> > > On 14 May 2015 at 12:58, Carsten Arnholm <arnholm at arnholm.org>
> > > wrote:
> > >
> > > > Hi Marius!
> > > >
> > > > On 2015-05-14 16:22, Marius Kintel wrote:
> > > >
> > > >> OpenSCAD aim to directly describe a 3D design hierarchy, not
> > > >> merely execute code to spit out 3D objects.
> > > >>
> > > >
> > > > I do understand, and any language chosen would obviously have to
> > > > support the design hierarchy. As far as I can tell, many
> > > > languages should be able to do it. Personally, I use modules in
> > > > OpenSCAD extensively, but I would be even happier with a class
> > > > concept with both member functions and data members. A 3d
> > > > hierarchy can be expressed also that way.
> > > >
> > > > Anyway, this was just my thoughts. OpenSCAD has made decisions
> > > > long ago, which I respect. Perhaps one could keep the OpenSCAD
> > > > language limited and use it as an intermediate representation
> > > > generated by the kind of object oriented language I am dreaming
> > > > of :-)
> > > >
> > > >  Using a faster and more powerful CAD kernel is indeed on the
> > > > radar.
> > > >>
> > > > > Sadly, the world of Open Source CAD kernels is severely
> > > > > limited.
> > > >
> > > >> If we manage to get sufficient contributions or funding,
> > > >> working
> > > >>
> > > > > towards such a kernel would be doable. If you have any spare
> > > > > time, this would be a good place to start:
> > > >
> > > >>
> > > >>
> > https://github.com/openscad/openscad/wiki/Project%3A-Survey-of-CSG-algorithms
> > > >>
> > > >> ..or if someone has the experience to do so: Evaluate
> > > >> OpenCascade as an option. Most people I?ve talked to who?ve
> > > >> ever used that has strongly recommended me never to touch it
> > > >> though. ..but FreeCAD somehow manages.
> > > >>
> > > >
> > > > The funny thing is, I evaluated CAS.CADE (as it was known at the
> > > > time) in about 1994-1995 for the work previously mentioned. It
> > > > was marketed by Matra Datavision in France and I even went to
> > > > see them a couple of times. They had what we thought was a
> > > > curious idea of their own home-grown language (CDL)
> > > > encapsulating the C++ kernel. Nowadays it looks like some
> > > > finally agree with our thoughts at the time :
> > > > http://dev.opencascade.org/doc/overview/html/occt_dev_guides__cdl.html
> > > >
> > > > "Please note that CDL is considered as obsolete and is to be
> > > > removed in one of future releases of OCCT."   :-)
> > > >
> > > > CAS.CADE was closed source and extremely expensive back then,
> > > > but we still struggled very hard to make use of it. The end
> > > > result for us was that it was dropped and replaced it with
> > > > ACIS. Only a few years ago, I discovered CAS.CADE had become
> > > > quasi open source as OpenCascade (OCCT). I also found there is
> > > > now something called OCE
> > > > - Open CASCADE Community Edition https://github.com/tpaviot/oce/
> > > > I had the idea of trying OCE, but frankly not enough incentive
> > > > and power to do it, and my work is different now. OCE may
> > > > probably be something to be considered for OpenSCAD CAD kernel,
> > > > I suspect OpenCascade has come a long way since I saw it.
> > > >
> > > > Sidenote: One thing that has struck me is that the compilation
> > > > in OpenSCAD is quite fast, but the rendering (F6) is extremely
> > > > slow. I was wondering if the generation of triangles for STL
> > > > really needs the graphical rendering to be completed first? If
> > > > not, one could imagine a function to export the compiled model
> > > > to STL and use an external viewer to speed things up when
> > > > iterating on a complex design that takes forever to render.
> > > >
> > > > Carsten Arnholm
> > > >
> > > >
> > > >
> > > >
> > > > _______________________________________________
> > > > OpenSCAD mailing list
> > > > Discuss at lists.openscad.org
> > > > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> > > >
> > > >
> >
> >
> > --
> > Controlling complexity is the essence of computer programming
> >                                                   -- Brian Kernighan
> >
> > _______________________________________________
> > OpenSCAD mailing list
> > Discuss at lists.openscad.org
> > http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> >


-- 
Reality is just a convenient measure of complexity.
                                                   -- Alvy Ray Smith


From bobcousins42 at googlemail.com  Sat May 16 16:34:55 2015
From: bobcousins42 at googlemail.com (bobc)
Date: Sat, 16 May 2015 13:34:55 -0700 (MST)
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
Message-ID: <1431808495763-12667.post@n5.nabble.com>

Hi there,

Spurred by https://github.com/openscad/openscad/issues/1304 I wondered what
the "standard" semantics of CSG are wrt to how surface properties (e.g
color) and interior properties (materials), and also with reference to
https://github.com/openscad/openscad/wiki/Project:-Survey-of-CSG-algorithms

It's already been noted on this list that the CSG ops designed for image
generation don't necessarily match the semantics of solid modelling for
manufacturing. 

For example, difference() paints the cut object with the color of the
cutting object. A reference I've now lost, gave the example "if you cut a
red cube with a blue drill, you don't get a blue hole". Another example,
when taking a section through a model, it would be useful to see the colors
of the cut objects, not the tool that did the cutting.

However, the standard behaviour is also useful in some cases, e.g. to paint
surfaces, or as a diagnostic to see which object did the cutting.
Additionally when you add materials, you could have a cube made of a blue
material but painted red. So then if you take a section, should that expose
a blue surface?

So even a simple op like difference() leads to some complicated
implications. Even more tricky is union or intersection. What properties
should the intersection have? Currently, union create a single meshed
object. If joining two objects with heterogenous materials, then we need to
represent the union with 2 (maybe 3) volumes, in order to preserve the
interior properties.

I am working on some standalone code to explore possible semantics, and
perhaps point the way to an implementation. I would like to collect some use
cases, and get some feedback. Perhaps there are CAD tools that already
implement these type of semantics, but I didn't find any freely available
(not a comprehensive survey). I had a play with FreeCAD, it creates passable
VRML output, but not AMF. I couldn't find any other output formats that are
mesh based and preserve color properties.

Here are some use cases I have identified :

1. create models for 3D printing (output AMF, or multiple STL?)  
2. create models for kicad (VRML output)
3. when taking a section through object, allow difference() to preserve
original colors

Constructive feedback welcome.

Regards



--
View this message in context: http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-tp12667.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From arnholm at arnholm.org  Sat May 16 18:08:29 2015
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Sun, 17 May 2015 00:08:29 +0200
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <20150516123301.7e0c770e@cygnus>
References: <1431477689364-12627.post@n5.nabble.com>	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>	<1431493002219-12630.post@n5.nabble.com>	<55532E61.10105@jonbondy.com>	<1431536127142-12634.post@n5.nabble.com>	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>	<555471CC.2050307@arnholm.org>	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>	<5554D43F.2000906@arnholm.org>	<CAGV6i+PvHK5y_ndqvGshn2A=MBmQdDV6E3VfPxAn1ApUubY22g@mail.gmail.com>
	<20150516123301.7e0c770e@cygnus>
Message-ID: <5557BFDD.40808@arnholm.org>

On 2015-05-16 19:33, G. Wade Johnson wrote:
> Is there a {beta,alpha,prototype} version of OpenSCAD2 somewhere for
> people to play with? Is there a spec to read?
>
> I, for one, would like to see anything you are willing to share on this.

That was my reaction as well.

In my opinion, classes are not there to complicate things. On the 
contrary, it is an important tool for simplification. Being able to name 
a type, encapsulate its data members and provide member functions would 
go a long way towards the goal of being more expressive without 
complicating things.

In my line of thinking, which may be different from OpenSCAD2 (as I have 
not grasped the full idea of it), the main ideas would be:

classes would be used for constructing named parametric objects 
(instantiation) and being able to union, intersect and difference the 
result with other named or unnamed objects (union(), intersect() and 
difference() would be member functions on any class. unlike a module, a 
class may contain data members unique to each instance created.

Below is just a silly example to illustrate: 2 lollipops on a table.
The difference between a module and a class here is that a class may be 
instantiated and may remember its construction parameters so they can be 
re-used later. It also owns its CSG object.

// classes are new
class lollipop {

    // a constructor is a member function with the same name as the class
    lollipop(rad, diam, hei)
    {
       // keep data members
       radius   = rad;
       diameter = diam;
       height   = hei;

       // "this CSG object"
       this = union() {
          translate([0,0,height]) sphere(r=radius);
          cylinder(d=diameter,h=height);
       };
    }

    // data members of the class
    radius;
    diameter;
    height;
};


// modules exist as before
module example_model()
{
    // create 2 lollipops of different sizes
    // the second is dependent on the first

    lolA = lollipop(rad=10,diam=2,hei=50);
    lolB = lollipop(lolA.radius*2,lolA.diameter*3,lolA.height);

    // create a cube representing the table plate. Here,
    // the construction parameters cannot be accessed later
    // since the cube is a primitive only
    table_plate = cube(size=[100,100,5],center=true);

    // union the lollipops with the table plate and return it
    table_plate.union(lolA);
    table_plate.union(lolB);

    // be explicit about what the module returns
    return table_plate;
}

// construct the exmple model and export it as STL
example_model().render().export("STL","lollipops_on_table.stl");


You could go on, classes could have data members being instantiations of 
other classes, or even containers containing such.

The above is just meant as a supplement to what I wrote before, 
illustrating the idea that the OpenSCAD language could be extended in a 
direction which would be immediately recognisable to programmers, while 
still being backwards compatible with existing OpenSCAD code. If you 
want to express things as it is currently being done, you can, but you 
also have other possibilities.

Again, just my thoughts. I don't know if it would be easy to implement.


Carsten



From runsun at gmail.com  Sat May 16 18:24:23 2015
From: runsun at gmail.com (runsun)
Date: Sat, 16 May 2015 15:24:23 -0700 (MST)
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <CAGV6i+PvHK5y_ndqvGshn2A=MBmQdDV6E3VfPxAn1ApUubY22g@mail.gmail.com>
References: <CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
	<1431493002219-12630.post@n5.nabble.com>
	<55532E61.10105@jonbondy.com>
	<1431536127142-12634.post@n5.nabble.com>
	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>
	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>
	<555471CC.2050307@arnholm.org>
	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
	<5554D43F.2000906@arnholm.org>
	<CAGV6i+PvHK5y_ndqvGshn2A=MBmQdDV6E3VfPxAn1ApUubY22g@mail.gmail.com>
Message-ID: <1431815063256-12669.post@n5.nabble.com>

@doug.moen, 

I believe your oop-like idea is exactly what I have in mind. 

The first time I learned about Openscad, I was amazed by how easy it can
produce a shape with simple code. I went on to design a crank, with as
simple as two objects: an arm ( a bar between points A and B) and a wheel.
When the wheel turns, A should follows a point C on the wheel.

Then I realize that openscad object has no way to bear data, so once it's
made, it can't following the coordinate of C. As a result, moving A to
follow C is more difficult than I thought, involving in more complicated
calc, especially if this crank is to be put on some face of some other
object.  

The 2nd thing giving me a surprise is that openscad doesn't have a mind of
drawing a line from A to B. The simplest way is to make a sphere at the
origin, move to A, and another one to move to B, then do a hull() between A
and B. But the result (shape of line) is not very controllable. 

In fact, everything openscad makes is to follow this: (1) make at the
origin, (2) do a rotation, and (3) translate to the target location. Even as
simple as a point in space has to go through these steps. 

To me, an idea modeling tool would be able to: (a) make an object X directly
at any point in spcace; (b) X can report where it is, i.e., contains data,
especially coordinates; and (c) attachment to that object can be made based
on the data of X. That is, given a point A on X, users can make a line, a
wheel ... ect, based on A, but don't have to go through (1~3) steps all over
again. 

To achieve this, it has to rely heavily on *polyhedron-based approach* ---
everything has to be polyhedron, because only polyhedron can bear coordinate
info. 

In the past year, I've spent most of my openscad time on developing a lib
toward that direction (well, other than the doctest lib). The most important
ingredient is the hash parameter to mimic the associated array. Using
something like:

   data= ["angle",30, "r", 3]

makes it possible to pack all parameters of an object. In some sense, this
data becomes THE object. It can be updated with new info, thus produce a
sub-object easily. Without this I can't even start the first step. 

Since a set of data represents an object, in the future we might be able to
do:

  data= [ "angle", 30
            , "r", 3
            , "action", ["bend",  ... ]
            , "merge", some_other_object
            ];

But that's a very long road ahead. 



_______________________________________________
OpenSCAD mailing list
Discuss at .openscad
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org





-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/eval-tp12627p12669.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Sat May 16 19:35:33 2015
From: doug at moens.org (doug moen)
Date: Sat, 16 May 2015 19:35:33 -0400
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <5557BFDD.40808@arnholm.org>
References: <1431477689364-12627.post@n5.nabble.com>
	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
	<1431493002219-12630.post@n5.nabble.com>
	<55532E61.10105@jonbondy.com>
	<1431536127142-12634.post@n5.nabble.com>
	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>
	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>
	<555471CC.2050307@arnholm.org>
	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
	<5554D43F.2000906@arnholm.org>
	<CAGV6i+PvHK5y_ndqvGshn2A=MBmQdDV6E3VfPxAn1ApUubY22g@mail.gmail.com>
	<20150516123301.7e0c770e@cygnus> <5557BFDD.40808@arnholm.org>
Message-ID: <CAGV6i+PLf9qrC2vXDEmiUNypM0y630yXPpn_Tbx79fd=YGx4Zw@mail.gmail.com>

Hi Carsten.

One of my top goals for "OpenSCAD 2" is to stay true to the goals and
philosophy of OpenSCAD. I've tried to figure out what these are by
talking to Marius and reading forum posts for the last few years.

Some OpenSCAD users are computer programmers like you and me, but many
are not. If OpenSCAD is your first experience with computer
programming, then how many new concepts do you need to learn before
you can be productive? OpenSCAD seems to have a low barrier to entry,
and we want to keep it this way.

One philosophical principle I've learned from the community is that
OpenSCAD is intended to be a purely declarative or 'functional'
language, except that it should also be much easier to learn than
serious functional languages such as Haskell. This means that there is
no state. You can't increment a variable or modify a data structure
in-place.

Traditional OOP languages are based on the idea of objects with state,
and there is a lot of additional heavy weight machinery that you need
to learn before you can be productive. But we don't want this: we'll
end up with a language that is easy to use once you have learned
object oriented programming, but it with a higher barrier to entry for
beginners.

In your first example (class lollipop), you defined a class, you
defined a constructor inside the class, you declared data members then
separately assigned them initial values within the constructor, and
you have an assignment to the special variable 'this'. You used a lot
of machinery to accomplish something very simple.

In your second example (module example_module), you create a mutable
object and modify its state, in these lines:
>     table_plate = cube(size=[100,100,5],center=true);
>
>     // union the lollipops with the table plate and return it
>     table_plate.union(lolA);
>     table_plate.union(lolB);
>
>     // be explicit about what the module returns
>     return table_plate;
But we want OpenSCAD to be purely declarative, without state mutation semantics.

When I have more time, maybe I'll try and rewrite your code in
OpenSCAD 2, to demonstrate that the same things can be accomplished in
a simpler way, without all the heavy machinery of OOP.

Doug Moen.

On 16/05/2015, Carsten Arnholm <arnholm at arnholm.org> wrote:
> On 2015-05-16 19:33, G. Wade Johnson wrote:
>> Is there a {beta,alpha,prototype} version of OpenSCAD2 somewhere for
>> people to play with? Is there a spec to read?
>>
>> I, for one, would like to see anything you are willing to share on this.
>
> That was my reaction as well.
>
> In my opinion, classes are not there to complicate things. On the
> contrary, it is an important tool for simplification. Being able to name
> a type, encapsulate its data members and provide member functions would
> go a long way towards the goal of being more expressive without
> complicating things.
>
> In my line of thinking, which may be different from OpenSCAD2 (as I have
> not grasped the full idea of it), the main ideas would be:
>
> classes would be used for constructing named parametric objects
> (instantiation) and being able to union, intersect and difference the
> result with other named or unnamed objects (union(), intersect() and
> difference() would be member functions on any class. unlike a module, a
> class may contain data members unique to each instance created.
>
> Below is just a silly example to illustrate: 2 lollipops on a table.
> The difference between a module and a class here is that a class may be
> instantiated and may remember its construction parameters so they can be
> re-used later. It also owns its CSG object.
>
> // classes are new
> class lollipop {
>
>     // a constructor is a member function with the same name as the class
>     lollipop(rad, diam, hei)
>     {
>        // keep data members
>        radius   = rad;
>        diameter = diam;
>        height   = hei;
>
>        // "this CSG object"
>        this = union() {
>           translate([0,0,height]) sphere(r=radius);
>           cylinder(d=diameter,h=height);
>        };
>     }
>
>     // data members of the class
>     radius;
>     diameter;
>     height;
> };
>
>
> // modules exist as before
> module example_model()
> {
>     // create 2 lollipops of different sizes
>     // the second is dependent on the first
>
>     lolA = lollipop(rad=10,diam=2,hei=50);
>     lolB = lollipop(lolA.radius*2,lolA.diameter*3,lolA.height);
>
>     // create a cube representing the table plate. Here,
>     // the construction parameters cannot be accessed later
>     // since the cube is a primitive only
>     table_plate = cube(size=[100,100,5],center=true);
>
>     // union the lollipops with the table plate and return it
>     table_plate.union(lolA);
>     table_plate.union(lolB);
>
>     // be explicit about what the module returns
>     return table_plate;
> }
>
> // construct the exmple model and export it as STL
> example_model().render().export("STL","lollipops_on_table.stl");
>
>
> You could go on, classes could have data members being instantiations of
> other classes, or even containers containing such.
>
> The above is just meant as a supplement to what I wrote before,
> illustrating the idea that the OpenSCAD language could be extended in a
> direction which would be immediately recognisable to programmers, while
> still being backwards compatible with existing OpenSCAD code. If you
> want to express things as it is currently being done, you can, but you
> also have other possibilities.
>
> Again, just my thoughts. I don't know if it would be easy to implement.
>
>
> Carsten
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>


From hypher at gmail.com  Sat May 16 20:52:03 2015
From: hypher at gmail.com (Yona Appletree)
Date: Sat, 16 May 2015 17:52:03 -0700
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <CAGV6i+PLf9qrC2vXDEmiUNypM0y630yXPpn_Tbx79fd=YGx4Zw@mail.gmail.com>
References: <1431477689364-12627.post@n5.nabble.com>
	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
	<1431493002219-12630.post@n5.nabble.com>
	<55532E61.10105@jonbondy.com>
	<1431536127142-12634.post@n5.nabble.com>
	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>
	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>
	<555471CC.2050307@arnholm.org>
	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
	<5554D43F.2000906@arnholm.org>
	<CAGV6i+PvHK5y_ndqvGshn2A=MBmQdDV6E3VfPxAn1ApUubY22g@mail.gmail.com>
	<20150516123301.7e0c770e@cygnus> <5557BFDD.40808@arnholm.org>
	<CAGV6i+PLf9qrC2vXDEmiUNypM0y630yXPpn_Tbx79fd=YGx4Zw@mail.gmail.com>
Message-ID: <5557E633.7070701@gmail.com>

Doug,

This is a fascinating discussion, and I wanted to chime in about objects 
and mutability (full disclosure, experienced programmer). I have an 
interest in functional, immutable programming styles, but have not 
personally used lisp or Haskell. Most of my experience is with Scala.

I think you can preserve much of the usefulness of objects while keeping 
a simple syntax and immutability. In fact, we don't even really need a 
new keyword. Modules are fine as is, with a few minor extensions. The 
main features that seem useful are:

 1. Combining data, geometry and functions into one variable space
 2. Module mix-ins
 3. Access to module parameters and variables as "fields"
 4. A module "copy" method. I will use the name "with", where you can
    specify overrides to the parameters and variables in the modules.
    This would return a copy of the module with the new values, keeping
    immutability.

Carsten's example would look something like this:

module Lollipop(
    radius,
    diameter,
    height
) extends Geometry /* This could be the default, and not needed to be stated explicitly */ {
    translate([0,0,height]) sphere(r=radius);
    cylinder(d=diameter,h=height
}

// modules exist as before
module example_model()
{
     // create 2 lollipops of different sizes, the second dependent on the first

     lolA = Lollipop(radius = 10, diameter = 2, height = 50);
     lolB = lolA.with(radius = lolA.radius*2, diameter = lolA.diameter*2); // height is omitted -- it stays the same

     // create a cube representing the table plate.
     // cube is a module just like everything else (albeit a native one),
     // and it's parameters ARE accessible, and has a .with() if needed.
     table_plate = cube(size=[100,100,5], center=true);

     // union, a member of the base geometry module, returns an immutable copy of itself
     // unioned with the arguments to union. Since we are a module, any geometry declared is
     // implicitly unioned as before.
     table_plate.union(lolA, lolB);
}

// construct the exmple model and export it as STL
example_model()
    .render() // Produces rendered geometry... more on this later
    .exportStl("lollipops_on_table.stl"); // magic strings are ugly. Use an actual method name for STL


But these extensions would allow far more, but remain mostly, if not 
completely backwards compatible. We can actually implement the 
"geometry" base module using the existing functionality of OpenSCAD:

module GeometryBase {
    unionOf = (args* /*vararg syntax tdb, of course */) ->  { /* Anonymous function syntax TDB */
       union() {
          this
          args
       }
    }

    rendered = (x = 1) ->  render(x) { this }
}


If we consider { ... } to be an "inline module", you get associative 
arrays for free:

data = {
    a = 10;
    b = 20;
}
echo(data.a); // Valid because variables of modules are exposed

// You can create a copy with new values as well
data2 = data.with(b=30, c=100);


Just my two cents, but it would be a simple way to keep backwards 
compatibility and all the desirable current features while giving the 
programmers many of the features that feel natural to us.

- Yona
> doug moen <mailto:doug at moens.org>
> May 16, 2015 at 16:35
> Hi Carsten.
>
> One of my top goals for "OpenSCAD 2" is to stay true to the goals and
> philosophy of OpenSCAD. I've tried to figure out what these are by
> talking to Marius and reading forum posts for the last few years.
>
> Some OpenSCAD users are computer programmers like you and me, but many
> are not. If OpenSCAD is your first experience with computer
> programming, then how many new concepts do you need to learn before
> you can be productive? OpenSCAD seems to have a low barrier to entry,
> and we want to keep it this way.
>
> One philosophical principle I've learned from the community is that
> OpenSCAD is intended to be a purely declarative or 'functional'
> language, except that it should also be much easier to learn than
> serious functional languages such as Haskell. This means that there is
> no state. You can't increment a variable or modify a data structure
> in-place.
>
> Traditional OOP languages are based on the idea of objects with state,
> and there is a lot of additional heavy weight machinery that you need
> to learn before you can be productive. But we don't want this: we'll
> end up with a language that is easy to use once you have learned
> object oriented programming, but it with a higher barrier to entry for
> beginners.
>
> In your first example (class lollipop), you defined a class, you
> defined a constructor inside the class, you declared data members then
> separately assigned them initial values within the constructor, and
> you have an assignment to the special variable 'this'. You used a lot
> of machinery to accomplish something very simple.
>
> In your second example (module example_module), you create a mutable
> object and modify its state, in these lines:
>>      table_plate = cube(size=[100,100,5],center=true);
>>
>>      // union the lollipops with the table plate and return it
>>      table_plate.union(lolA);
>>      table_plate.union(lolB);
>>
>>      // be explicit about what the module returns
>>      return table_plate;
> But we want OpenSCAD to be purely declarative, without state mutation semantics.
>
> When I have more time, maybe I'll try and rewrite your code in
> OpenSCAD 2, to demonstrate that the same things can be accomplished in
> a simpler way, without all the heavy machinery of OOP.
>
> Doug Moen.
>
> On 16/05/2015, Carsten Arnholm<arnholm at arnholm.org>  wrote:
>> On 2015-05-16 19:33, G. Wade Johnson wrote:
>>> Is there a {beta,alpha,prototype} version of OpenSCAD2 somewhere for
>>> people to play with? Is there a spec to read?
>>>
>>> I, for one, would like to see anything you are willing to share on this.
>> That was my reaction as well.
>>
>> In my opinion, classes are not there to complicate things. On the
>> contrary, it is an important tool for simplification. Being able to name
>> a type, encapsulate its data members and provide member functions would
>> go a long way towards the goal of being more expressive without
>> complicating things.
>>
>> In my line of thinking, which may be different from OpenSCAD2 (as I have
>> not grasped the full idea of it), the main ideas would be:
>>
>> classes would be used for constructing named parametric objects
>> (instantiation) and being able to union, intersect and difference the
>> result with other named or unnamed objects (union(), intersect() and
>> difference() would be member functions on any class. unlike a module, a
>> class may contain data members unique to each instance created.
>>
>> Below is just a silly example to illustrate: 2 lollipops on a table.
>> The difference between a module and a class here is that a class may be
>> instantiated and may remember its construction parameters so they can be
>> re-used later. It also owns its CSG object.
>>
>> // classes are new
>> class lollipop {
>>
>>      // a constructor is a member function with the same name as the class
>>      lollipop(rad, diam, hei)
>>      {
>>         // keep data members
>>         radius   = rad;
>>         diameter = diam;
>>         height   = hei;
>>
>>         // "this CSG object"
>>         this = union() {
>>            translate([0,0,height]) sphere(r=radius);
>>            cylinder(d=diameter,h=height);
>>         };
>>      }
>>
>>      // data members of the class
>>      radius;
>>      diameter;
>>      height;
>> };
>>
>>
>> // modules exist as before
>> module example_model()
>> {
>>      // create 2 lollipops of different sizes
>>      // the second is dependent on the first
>>
>>      lolA = lollipop(rad=10,diam=2,hei=50);
>>      lolB = lollipop(lolA.radius*2,lolA.diameter*3,lolA.height);
>>
>>      // create a cube representing the table plate. Here,
>>      // the construction parameters cannot be accessed later
>>      // since the cube is a primitive only
>>      table_plate = cube(size=[100,100,5],center=true);
>>
>>      // union the lollipops with the table plate and return it
>>      table_plate.union(lolA);
>>      table_plate.union(lolB);
>>
>>      // be explicit about what the module returns
>>      return table_plate;
>> }
>>
>> // construct the exmple model and export it as STL
>> example_model().render().export("STL","lollipops_on_table.stl");
>>
>>
>> You could go on, classes could have data members being instantiations of
>> other classes, or even containers containing such.
>>
>> The above is just meant as a supplement to what I wrote before,
>> illustrating the idea that the OpenSCAD language could be extended in a
>> direction which would be immediately recognisable to programmers, while
>> still being backwards compatible with existing OpenSCAD code. If you
>> want to express things as it is currently being done, you can, but you
>> also have other possibilities.
>>
>> Again, just my thoughts. I don't know if it would be easy to implement.
>>
>>
>> Carsten
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> Carsten Arnholm <mailto:arnholm at arnholm.org>
> May 16, 2015 at 15:08
>
>
> That was my reaction as well.
>
> In my opinion, classes are not there to complicate things. On the 
> contrary, it is an important tool for simplification. Being able to 
> name a type, encapsulate its data members and provide member functions 
> would go a long way towards the goal of being more expressive without 
> complicating things.
>
> In my line of thinking, which may be different from OpenSCAD2 (as I 
> have not grasped the full idea of it), the main ideas would be:
>
> classes would be used for constructing named parametric objects 
> (instantiation) and being able to union, intersect and difference the 
> result with other named or unnamed objects (union(), intersect() and 
> difference() would be member functions on any class. unlike a module, 
> a class may contain data members unique to each instance created.
>
> Below is just a silly example to illustrate: 2 lollipops on a table.
> The difference between a module and a class here is that a class may 
> be instantiated and may remember its construction parameters so they 
> can be re-used later. It also owns its CSG object.
>
> // classes are new
> class lollipop {
>
>    // a constructor is a member function with the same name as the class
>    lollipop(rad, diam, hei)
>    {
>       // keep data members
>       radius   = rad;
>       diameter = diam;
>       height   = hei;
>
>       // "this CSG object"
>       this = union() {
>          translate([0,0,height]) sphere(r=radius);
>          cylinder(d=diameter,h=height);
>       };
>    }
>
>    // data members of the class
>    radius;
>    diameter;
>    height;
> };
>
>
> // modules exist as before
> module example_model()
> {
>    // create 2 lollipops of different sizes
>    // the second is dependent on the first
>
>    lolA = lollipop(rad=10,diam=2,hei=50);
>    lolB = lollipop(lolA.radius*2,lolA.diameter*3,lolA.height);
>
>    // create a cube representing the table plate. Here,
>    // the construction parameters cannot be accessed later
>    // since the cube is a primitive only
>    table_plate = cube(size=[100,100,5],center=true);
>
>    // union the lollipops with the table plate and return it
>    table_plate.union(lolA);
>    table_plate.union(lolB);
>
>    // be explicit about what the module returns
>    return table_plate;
> }
>
> // construct the exmple model and export it as STL
> example_model().render().export("STL","lollipops_on_table.stl");
>
>
> You could go on, classes could have data members being instantiations 
> of other classes, or even containers containing such.
>
> The above is just meant as a supplement to what I wrote before, 
> illustrating the idea that the OpenSCAD language could be extended in 
> a direction which would be immediately recognisable to programmers, 
> while still being backwards compatible with existing OpenSCAD code. If 
> you want to express things as it is currently being done, you can, but 
> you also have other possibilities.
>
> Again, just my thoughts. I don't know if it would be easy to implement.
>
>
> Carsten
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> G. Wade Johnson <mailto:gwadej at anomaly.org>
> May 16, 2015 at 10:33
> Is there a {beta,alpha,prototype} version of OpenSCAD2 somewhere for
> people to play with? Is there a spec to read?
>
> I, for one, would like to see anything you are willing to share on this.
>
> G. Wade
>
> On Sat, 16 May 2015 12:44:38 -0400
>
>
> doug moen <mailto:doug at moens.org>
> May 16, 2015 at 09:44
> Carsten said:
> Personally, I use modules in OpenSCAD extensively, but I would be even 
> happier with a class concept with both member functions and data 
> members. A 3d hierarchy can be expressed also that way.
> ... Perhaps one could keep the OpenSCAD language limited and use it as 
> an intermediate representation generated by the kind of object 
> oriented language I am dreaming of :-)
>
> The OpenSCAD2 design that I am working on will have a very simple 
> object model. Consider a typical OpenSCAD script: it has some named 
> numeric parameters at the top, then some function and module 
> definitions, then some top level geometry statements that render the 
> model based on the parameters. So that's an object. An object is a set 
> of top level definitions (name/value pairs), plus a list of values 
> (which are normally geometric shapes). OpenSCAD2 has a syntax for 
> referencing an external library file as an object, and a syntax for 
> object literals (just an OpenSCAD script, surrounded by braces). Given 
> an object, you can reference its named components using dot notation 
> (object.name <http://object.name>), or you can reference the object in 
> a geometric context (as an argument to a geometric transformation, or 
> at the top level of a script), in which case the object behaves like 
> its geometry.
>
> There are a few more details, but that's the basic idea. Note that 
> this is much simpler than object oriented programming. There are no 
> mutable objects, no classes or user defined types, no support for 
> encapsulation or data abstraction. But, as I mentioned, objects do 
> have "member functions and data members", so it may go part way 
> towards satisfying Carsten's requirements. Objects will also satisfy 
> Runsun's requirement for associative arrays. I also think that 
> constructing a 3D model as a tree of objects will give us a better 
> (more declarative) way to support bill-of-materials.
>
> We want to preserve the simple and declarative nature of OpenSCAD. I 
> believe that this very simple object model will address some of the 
> main pain points in doing geometric modelling with OpenSCAD, without 
> turning it into a complex OOP language.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> Carsten Arnholm <mailto:arnholm at arnholm.org>
> May 14, 2015 at 09:58
> Hi Marius!
>
> On 2015-05-14 16:22, Marius Kintel wrote:
>> OpenSCAD aim to directly describe a 3D design hierarchy, not merely
>> execute code to spit out 3D objects.
>
> I do understand, and any language chosen would obviously have to 
> support the design hierarchy. As far as I can tell, many languages 
> should be able to do it. Personally, I use modules in OpenSCAD 
> extensively, but I would be even happier with a class concept with 
> both member functions and data members. A 3d hierarchy can be 
> expressed also that way.
>
> Anyway, this was just my thoughts. OpenSCAD has made decisions long 
> ago, which I respect. Perhaps one could keep the OpenSCAD language 
> limited and use it as an intermediate representation generated by the 
> kind of object oriented language I am dreaming of :-)
>
>> Using a faster and more powerful CAD kernel is indeed on the radar.
> > Sadly, the world of Open Source CAD kernels is severely limited.
>> If we manage to get sufficient contributions or funding, working
> > towards such a kernel would be doable. If you have any spare
> > time, this would be a good place to start:
>> https://github.com/openscad/openscad/wiki/Project%3A-Survey-of-CSG-algorithms 
>>
>>
>> ..or if someone has the experience to do so: Evaluate OpenCascade as an
>> option. Most people I've talked to who've ever used that has strongly
>> recommended me never to touch it though. ..but FreeCAD somehow manages.
>
> The funny thing is, I evaluated CAS.CADE (as it was known at the time) 
> in about 1994-1995 for the work previously mentioned. It was marketed 
> by Matra Datavision in France and I even went to see them a couple of 
> times. They had what we thought was a curious idea of their own 
> home-grown language (CDL) encapsulating the C++ kernel. Nowadays it 
> looks like some finally agree with our thoughts at the time :
> http://dev.opencascade.org/doc/overview/html/occt_dev_guides__cdl.html
>
> "Please note that CDL is considered as obsolete and is to be removed 
> in one of future releases of OCCT."   :-)
>
> CAS.CADE was closed source and extremely expensive back then, but we 
> still struggled very hard to make use of it. The end result for us was 
> that it was dropped and replaced it with ACIS. Only a few years ago, I 
> discovered CAS.CADE had become quasi open source as OpenCascade 
> (OCCT). I also found there is now something called OCE - Open CASCADE 
> Community Edition https://github.com/tpaviot/oce/
> I had the idea of trying OCE, but frankly not enough incentive and 
> power to do it, and my work is different now. OCE may probably be 
> something to be considered for OpenSCAD CAD kernel, I suspect 
> OpenCascade has come a long way since I saw it.
>
> Sidenote: One thing that has struck me is that the compilation in 
> OpenSCAD is quite fast, but the rendering (F6) is extremely slow. I 
> was wondering if the generation of triangles for STL really needs the 
> graphical rendering to be completed first? If not, one could imagine a 
> function to export the compiled model to STL and use an external 
> viewer to speed things up when iterating on a complex design that 
> takes forever to render.
>
> Carsten Arnholm
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150516/dc844f20/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: compose-unknown-contact.jpg
Type: image/jpeg
Size: 770 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150516/dc844f20/attachment-0001.jpg>

From doug at moens.org  Sat May 16 22:27:53 2015
From: doug at moens.org (doug moen)
Date: Sat, 16 May 2015 22:27:53 -0400
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <5557E633.7070701@gmail.com>
References: <1431477689364-12627.post@n5.nabble.com>
	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
	<1431493002219-12630.post@n5.nabble.com>
	<55532E61.10105@jonbondy.com>
	<1431536127142-12634.post@n5.nabble.com>
	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>
	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>
	<555471CC.2050307@arnholm.org>
	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
	<5554D43F.2000906@arnholm.org>
	<CAGV6i+PvHK5y_ndqvGshn2A=MBmQdDV6E3VfPxAn1ApUubY22g@mail.gmail.com>
	<20150516123301.7e0c770e@cygnus> <5557BFDD.40808@arnholm.org>
	<CAGV6i+PLf9qrC2vXDEmiUNypM0y630yXPpn_Tbx79fd=YGx4Zw@mail.gmail.com>
	<5557E633.7070701@gmail.com>
Message-ID: <CAGV6i+M_arN4QtqG_GC-xUTfFbi-8PRbfPu8gMy7VfTP7jd06A@mail.gmail.com>

Hi Yona. I find parts of your post confusing (the term "module" is
overloaded), but we are thinking along the same lines.

A quick way to summarize my thinking is that you don't need classes to do
object oriented programming. The prototype/delegation paradigm used by
Javascript is just as powerful. But if all objects are immutable, then you
don't need delegation, and things get really simple. You just need:

   1. object literals
   2. a way to make a new object by specifying the differences from an old
   object. Or: a way to customize an object, overriding some fields, resulting
   in a new object.
   3. functions

And that's it, you have a functional OOP system. It's simple, more powerful
than it looks, and good enough for our purposes.

OpenSCAD already has the above 3 concepts:

   1. an OpenSCAD script corresponds to an object
   2. you can customize a script, overriding some definitions, by writing
   'include <scriptname>' and then writing new definitions that override some
   of the bindings inherited from <scriptname>. Or, you can override
   definitions within a script from the command line using the -D flag.
   3. OpenSCAD has functions. Also, 'module' definitions are really just
   functions by another name.

OpenSCAD 2 just generalizes these already-existing concepts. It adds object
literals and first class object values. It adds a better syntax for
customizing an object. It unifies "functions" and "modules", using the word
"function" to describe both.

Now I'll copy and paste part of Yona's post, with terminology and syntax
changed to correspond to my current OpenSCAD 2 design:

// If we consider { ... } to be an "inline object", you get associative
> arrays for free:
> data = {
>    a = 10;
>    b = 20;
> }
> echo(data.a);
> // You can create a copy with new values as well
> data2 = data(b=30, c=100);


Doug Moen.

On 16 May 2015 at 20:52, Yona Appletree <hypher at gmail.com> wrote:

> Doug,
>
> This is a fascinating discussion, and I wanted to chime in about objects
> and mutability (full disclosure, experienced programmer). I have an
> interest in functional, immutable programming styles, but have not
> personally used lisp or Haskell. Most of my experience is with Scala.
>
> I think you can preserve much of the usefulness of objects while keeping a
> simple syntax and immutability. In fact, we don't even really need a new
> keyword. Modules are fine as is, with a few minor extensions. The main
> features that seem useful are:
>
>    1. Combining data, geometry and functions into one variable space
>    2. Module mix-ins
>    3. Access to module parameters and variables as "fields"
>    4. A module "copy" method. I will use the name "with", where you can
>    specify overrides to the parameters and variables in the modules. This
>    would return a copy of the module with the new values, keeping immutability.
>
> Carsten's example would look something like this:
>
> module Lollipop(
>    radius,
>    diameter,
>    height
> ) extends Geometry /* This could be the default, and not needed to be stated explicitly */ {
>    translate([0,0,height]) sphere(r=radius);
>    cylinder(d=diameter,h=height
> }
>
> // modules exist as before
> module example_model()
> {
>     // create 2 lollipops of different sizes, the second dependent on the first
>
>     lolA = Lollipop(radius = 10, diameter = 2, height = 50);
>     lolB = lolA.with(radius = lolA.radius*2, diameter = lolA.diameter*2); // height is omitted -- it stays the same
>
>     // create a cube representing the table plate.
>     // cube is a module just like everything else (albeit a native one),
>     // and it's parameters ARE accessible, and has a .with() if needed.
>     table_plate = cube(size=[100,100,5], center=true);
>
>     // union, a member of the base geometry module, returns an immutable copy of itself
>     // unioned with the arguments to union. Since we are a module, any geometry declared is
>     // implicitly unioned as before.
>     table_plate.union(lolA, lolB);
> }
>
> // construct the exmple model and export it as STL
> example_model()
>    .render() // Produces rendered geometry... more on this later
>    .exportStl("lollipops_on_table.stl"); // magic strings are ugly. Use an actual method name for STL
>
>
> But these extensions would allow far more, but remain mostly, if not
> completely backwards compatible. We can actually implement the "geometry"
> base module using the existing functionality of OpenSCAD:
>
> module GeometryBase {
>    unionOf = (args* /*vararg syntax tdb, of course */) -> { /* Anonymous function syntax TDB */
>       union() {
>          this
>          args
>       }
>    }
>
>    rendered = (x = 1) -> render(x) { this }
> }
>
>
> If we consider { ... } to be an "inline module", you get associative
> arrays for free:
>
> data = {
>    a = 10;
>    b = 20;
> }
> echo(data.a); // Valid because variables of modules are exposed
>
> // You can create a copy with new values as well
> data2 = data.with(b=30, c=100);
>
>
> Just my two cents, but it would be a simple way to keep backwards
> compatibility and all the desirable current features while giving the
> programmers many of the features that feel natural to us.
>
> - Yona
>
>   doug moen <doug at moens.org>
>  May 16, 2015 at 16:35
>
> Hi Carsten.
>
> One of my top goals for "OpenSCAD 2" is to stay true to the goals and
> philosophy of OpenSCAD. I've tried to figure out what these are by
> talking to Marius and reading forum posts for the last few years.
>
> Some OpenSCAD users are computer programmers like you and me, but many
> are not. If OpenSCAD is your first experience with computer
> programming, then how many new concepts do you need to learn before
> you can be productive? OpenSCAD seems to have a low barrier to entry,
> and we want to keep it this way.
>
> One philosophical principle I've learned from the community is that
> OpenSCAD is intended to be a purely declarative or 'functional'
> language, except that it should also be much easier to learn than
> serious functional languages such as Haskell. This means that there is
> no state. You can't increment a variable or modify a data structure
> in-place.
>
> Traditional OOP languages are based on the idea of objects with state,
> and there is a lot of additional heavy weight machinery that you need
> to learn before you can be productive. But we don't want this: we'll
> end up with a language that is easy to use once you have learned
> object oriented programming, but it with a higher barrier to entry for
> beginners.
>
> In your first example (class lollipop), you defined a class, you
> defined a constructor inside the class, you declared data members then
> separately assigned them initial values within the constructor, and
> you have an assignment to the special variable 'this'. You used a lot
> of machinery to accomplish something very simple.
>
> In your second example (module example_module), you create a mutable
> object and modify its state, in these lines:
>
>     table_plate = cube(size=[100,100,5],center=true);
>
>     // union the lollipops with the table plate and return it
>     table_plate.union(lolA);
>     table_plate.union(lolB);
>
>     // be explicit about what the module returns
>     return table_plate;
>
> But we want OpenSCAD to be purely declarative, without state mutation semantics.
>
> When I have more time, maybe I'll try and rewrite your code in
> OpenSCAD 2, to demonstrate that the same things can be accomplished in
> a simpler way, without all the heavy machinery of OOP.
>
> Doug Moen.
>
> On 16/05/2015, Carsten Arnholm <arnholm at arnholm.org> <arnholm at arnholm.org> wrote:
>
> On 2015-05-16 19:33, G. Wade Johnson wrote:
>
> Is there a {beta,alpha,prototype} version of OpenSCAD2 somewhere for
> people to play with? Is there a spec to read?
>
> I, for one, would like to see anything you are willing to share on this.
>
> That was my reaction as well.
>
> In my opinion, classes are not there to complicate things. On the
> contrary, it is an important tool for simplification. Being able to name
> a type, encapsulate its data members and provide member functions would
> go a long way towards the goal of being more expressive without
> complicating things.
>
> In my line of thinking, which may be different from OpenSCAD2 (as I have
> not grasped the full idea of it), the main ideas would be:
>
> classes would be used for constructing named parametric objects
> (instantiation) and being able to union, intersect and difference the
> result with other named or unnamed objects (union(), intersect() and
> difference() would be member functions on any class. unlike a module, a
> class may contain data members unique to each instance created.
>
> Below is just a silly example to illustrate: 2 lollipops on a table.
> The difference between a module and a class here is that a class may be
> instantiated and may remember its construction parameters so they can be
> re-used later. It also owns its CSG object.
>
> // classes are new
> class lollipop {
>
>     // a constructor is a member function with the same name as the class
>     lollipop(rad, diam, hei)
>     {
>        // keep data members
>        radius   = rad;
>        diameter = diam;
>        height   = hei;
>
>        // "this CSG object"
>        this = union() {
>           translate([0,0,height]) sphere(r=radius);
>           cylinder(d=diameter,h=height);
>        };
>     }
>
>     // data members of the class
>     radius;
>     diameter;
>     height;
> };
>
>
> // modules exist as before
> module example_model()
> {
>     // create 2 lollipops of different sizes
>     // the second is dependent on the first
>
>     lolA = lollipop(rad=10,diam=2,hei=50);
>     lolB = lollipop(lolA.radius*2,lolA.diameter*3,lolA.height);
>
>     // create a cube representing the table plate. Here,
>     // the construction parameters cannot be accessed later
>     // since the cube is a primitive only
>     table_plate = cube(size=[100,100,5],center=true);
>
>     // union the lollipops with the table plate and return it
>     table_plate.union(lolA);
>     table_plate.union(lolB);
>
>     // be explicit about what the module returns
>     return table_plate;
> }
>
> // construct the exmple model and export it as STL
> example_model().render().export("STL","lollipops_on_table.stl");
>
>
> You could go on, classes could have data members being instantiations of
> other classes, or even containers containing such.
>
> The above is just meant as a supplement to what I wrote before,
> illustrating the idea that the OpenSCAD language could be extended in a
> direction which would be immediately recognisable to programmers, while
> still being backwards compatible with existing OpenSCAD code. If you
> want to express things as it is currently being done, you can, but you
> also have other possibilities.
>
> Again, just my thoughts. I don't know if it would be easy to implement.
>
>
> Carsten
>
>
> _______________________________________________
> OpenSCAD mailing listDiscuss at lists.openscad.orghttp://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
> _______________________________________________
> OpenSCAD mailing listDiscuss at lists.openscad.orghttp://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>   Carsten Arnholm <arnholm at arnholm.org>
>  May 16, 2015 at 15:08
>
>
> That was my reaction as well.
>
> In my opinion, classes are not there to complicate things. On the
> contrary, it is an important tool for simplification. Being able to name a
> type, encapsulate its data members and provide member functions would go a
> long way towards the goal of being more expressive without complicating
> things.
>
> In my line of thinking, which may be different from OpenSCAD2 (as I have
> not grasped the full idea of it), the main ideas would be:
>
> classes would be used for constructing named parametric objects
> (instantiation) and being able to union, intersect and difference the
> result with other named or unnamed objects (union(), intersect() and
> difference() would be member functions on any class. unlike a module, a
> class may contain data members unique to each instance created.
>
> Below is just a silly example to illustrate: 2 lollipops on a table.
> The difference between a module and a class here is that a class may be
> instantiated and may remember its construction parameters so they can be
> re-used later. It also owns its CSG object.
>
> // classes are new
> class lollipop {
>
>    // a constructor is a member function with the same name as the class
>    lollipop(rad, diam, hei)
>    {
>       // keep data members
>       radius   = rad;
>       diameter = diam;
>       height   = hei;
>
>       // "this CSG object"
>       this = union() {
>          translate([0,0,height]) sphere(r=radius);
>          cylinder(d=diameter,h=height);
>       };
>    }
>
>    // data members of the class
>    radius;
>    diameter;
>    height;
> };
>
>
> // modules exist as before
> module example_model()
> {
>    // create 2 lollipops of different sizes
>    // the second is dependent on the first
>
>    lolA = lollipop(rad=10,diam=2,hei=50);
>    lolB = lollipop(lolA.radius*2,lolA.diameter*3,lolA.height);
>
>    // create a cube representing the table plate. Here,
>    // the construction parameters cannot be accessed later
>    // since the cube is a primitive only
>    table_plate = cube(size=[100,100,5],center=true);
>
>    // union the lollipops with the table plate and return it
>    table_plate.union(lolA);
>    table_plate.union(lolB);
>
>    // be explicit about what the module returns
>    return table_plate;
> }
>
> // construct the exmple model and export it as STL
> example_model().render().export("STL","lollipops_on_table.stl");
>
>
> You could go on, classes could have data members being instantiations of
> other classes, or even containers containing such.
>
> The above is just meant as a supplement to what I wrote before,
> illustrating the idea that the OpenSCAD language could be extended in a
> direction which would be immediately recognisable to programmers, while
> still being backwards compatible with existing OpenSCAD code. If you want
> to express things as it is currently being done, you can, but you also have
> other possibilities.
>
> Again, just my thoughts. I don't know if it would be easy to implement.
>
>
> Carsten
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>   G. Wade Johnson <gwadej at anomaly.org>
>  May 16, 2015 at 10:33
> Is there a {beta,alpha,prototype} version of OpenSCAD2 somewhere for
> people to play with? Is there a spec to read?
>
> I, for one, would like to see anything you are willing to share on this.
>
> G. Wade
>
> On Sat, 16 May 2015 12:44:38 -0400
>
>
>   doug moen <doug at moens.org>
>  May 16, 2015 at 09:44
> Carsten said:
> Personally, I use modules in OpenSCAD extensively, but I would be even
> happier with a class concept with both member functions and data members. A
> 3d hierarchy can be expressed also that way.
> ... Perhaps one could keep the OpenSCAD language limited and use it as an
> intermediate representation generated by the kind of object oriented
> language I am dreaming of :-)
>
> The OpenSCAD2 design that I am working on will have a very simple object
> model. Consider a typical OpenSCAD script: it has some named numeric
> parameters at the top, then some function and module definitions, then some
> top level geometry statements that render the model based on the
> parameters. So that's an object. An object is a set of top level
> definitions (name/value pairs), plus a list of values (which are normally
> geometric shapes). OpenSCAD2 has a syntax for referencing an external
> library file as an object, and a syntax for object literals (just an
> OpenSCAD script, surrounded by braces). Given an object, you can reference
> its named components using dot notation (object.name), or you can
> reference the object in a geometric context (as an argument to a geometric
> transformation, or at the top level of a script), in which case the object
> behaves like its geometry.
>
> There are a few more details, but that's the basic idea. Note that this is
> much simpler than object oriented programming. There are no mutable
> objects, no classes or user defined types, no support for encapsulation or
> data abstraction. But, as I mentioned, objects do have "member functions
> and data members", so it may go part way towards satisfying Carsten's
> requirements. Objects will also satisfy Runsun's requirement for
> associative arrays. I also think that constructing a 3D model as a tree of
> objects will give us a better (more declarative) way to support
> bill-of-materials.
>
> We want to preserve the simple and declarative nature of OpenSCAD. I
> believe that this very simple object model will address some of the main
> pain points in doing geometric modelling with OpenSCAD, without turning it
> into a complex OOP language.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>   Carsten Arnholm <arnholm at arnholm.org>
>  May 14, 2015 at 09:58
> Hi Marius!
>
> On 2015-05-14 16:22, Marius Kintel wrote:
>
> OpenSCAD aim to directly describe a 3D design hierarchy, not merely
> execute code to spit out 3D objects.
>
>
> I do understand, and any language chosen would obviously have to support
> the design hierarchy. As far as I can tell, many languages should be able
> to do it. Personally, I use modules in OpenSCAD extensively, but I would be
> even happier with a class concept with both member functions and data
> members. A 3d hierarchy can be expressed also that way.
>
> Anyway, this was just my thoughts. OpenSCAD has made decisions long ago,
> which I respect. Perhaps one could keep the OpenSCAD language limited and
> use it as an intermediate representation generated by the kind of object
> oriented language I am dreaming of :-)
>
> Using a faster and more powerful CAD kernel is indeed on the radar.
>
> > Sadly, the world of Open Source CAD kernels is severely limited.
>
> If we manage to get sufficient contributions or funding, working
>
> > towards such a kernel would be doable. If you have any spare
> > time, this would be a good place to start:
>
>
> https://github.com/openscad/openscad/wiki/Project%3A-Survey-of-CSG-algorithms
>
> ..or if someone has the experience to do so: Evaluate OpenCascade as an
> option. Most people I?ve talked to who?ve ever used that has strongly
> recommended me never to touch it though. ..but FreeCAD somehow manages.
>
>
> The funny thing is, I evaluated CAS.CADE (as it was known at the time) in
> about 1994-1995 for the work previously mentioned. It was marketed by Matra
> Datavision in France and I even went to see them a couple of times. They
> had what we thought was a curious idea of their own home-grown language
> (CDL) encapsulating the C++ kernel. Nowadays it looks like some finally
> agree with our thoughts at the time :
> http://dev.opencascade.org/doc/overview/html/occt_dev_guides__cdl.html
>
> "Please note that CDL is considered as obsolete and is to be removed in
> one of future releases of OCCT."   :-)
>
> CAS.CADE was closed source and extremely expensive back then, but we still
> struggled very hard to make use of it. The end result for us was that it
> was dropped and replaced it with ACIS. Only a few years ago, I discovered
> CAS.CADE had become quasi open source as OpenCascade (OCCT). I also found
> there is now something called OCE - Open CASCADE Community Edition
> https://github.com/tpaviot/oce/
> I had the idea of trying OCE, but frankly not enough incentive and power
> to do it, and my work is different now. OCE may probably be something to be
> considered for OpenSCAD CAD kernel, I suspect OpenCascade has come a long
> way since I saw it.
>
> Sidenote: One thing that has struck me is that the compilation in OpenSCAD
> is quite fast, but the rendering (F6) is extremely slow. I was wondering if
> the generation of triangles for STL really needs the graphical rendering to
> be completed first? If not, one could imagine a function to export the
> compiled model to STL and use an external viewer to speed things up when
> iterating on a complex design that takes forever to render.
>
> Carsten Arnholm
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150516/caaf4398/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: compose-unknown-contact.jpg
Type: image/jpeg
Size: 770 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150516/caaf4398/attachment-0001.jpg>

From rael at xtra.co.nz  Sun May 17 01:41:06 2015
From: rael at xtra.co.nz (. .)
Date: Sun, 17 May 2015 05:41:06 +0000 (UTC)
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <55532E61.10105@jonbondy.com>
References: <1431477689364-12627.post@n5.nabble.com>
	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
	<1431493002219-12630.post@n5.nabble.com>
	<55532E61.10105@jonbondy.com>
Message-ID: <862158208.497595.1431841266916.JavaMail.yahoo@mail.yahoo.com>

I know 'God' is faith based, but application specific too? tut tut tut....{}
 


     On Wednesday, 13 May 2015 10:58 PM, jon <jon at jonbondy.com> wrote:
   

   Oh, god.? Please do not head towards Visual Basic.
 
 On 5/13/2015 12:56 AM, runsun wrote:
 
 Indeed. A first class function will work pretty well in cases like I post above. 

Just thought of something. Since in openscad, parameters and functions are stored in different places: 

    abc=3;
    function abc()=...;


Assigning abc to a parameter, if possible, will be confusing: 


    x = abc; // function or parameter?


A possible way out of this is like what Visual Basic does:


    x = something; // assign parameter
    set x = something; // assign object


That is, set for object assignment. In openscad, could be function or module assignment. Not sure how expensive it is though. 
   $ Runsun Pan, PhD 
 $ -- OpenScad_DocTest: doc and unit test ( Github, Thingiverse )
 $ -- hash parameter model: here, here
 $ -- Linux Mint 17.1 Rebecca x64 + OpenSCAD 2015.03.15/2015.04.01.nightly
   
  View this message in context: Re: eval( ) ???
 Sent from the OpenSCAD mailing list archive at Nabble.com.
 
  
 _______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
 
  
 No virus found in this message.
 Checked by AVG - www.avg.com
 Version: 2015.0.5863 / Virus Database: 4342/9758 - Release Date: 05/12/15 
 
 
_______________________________________________
OpenSCAD mailing list
Discuss at lists.openscad.org
http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150517/ab66b60b/attachment.html>

From arnholm at arnholm.org  Sun May 17 17:34:21 2015
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Sun, 17 May 2015 23:34:21 +0200
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <CAGV6i+PLf9qrC2vXDEmiUNypM0y630yXPpn_Tbx79fd=YGx4Zw@mail.gmail.com>
References: <1431477689364-12627.post@n5.nabble.com>	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>	<1431493002219-12630.post@n5.nabble.com>	<55532E61.10105@jonbondy.com>	<1431536127142-12634.post@n5.nabble.com>	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>	<555471CC.2050307@arnholm.org>	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>	<5554D43F.2000906@arnholm.org>	<CAGV6i+PvHK5y_ndqvGshn2A=MBmQdDV6E3VfPxAn1ApUubY22g@mail.gmail.com>	<20150516123301.7e0c770e@cygnus>
	<5557BFDD.40808@arnholm.org>
	<CAGV6i+PLf9qrC2vXDEmiUNypM0y630yXPpn_Tbx79fd=YGx4Zw@mail.gmail.com>
Message-ID: <5559095D.50908@arnholm.org>

Hello Doug,

Interesting discussion! Please understand that if you find I present 
alternative viewpoints I very much respect the work being done. I just 
want to add my perspective.

On 2015-05-17 01:35, doug moen wrote:
> One of my top goals for "OpenSCAD 2" is to stay true to the goals and
> philosophy of OpenSCAD. I've tried to figure out what these are by
> talking to Marius and reading forum posts for the last few years.

I have followed the posts for only a few months, so I do not have the 
full picture. I apologise if I repeat important discussions you may have 
had already. I have noted the stated goal of "functional language", but 
I have yet to see a truly convincing explanation of why that is a good 
thing as seen from the user point of view. More on that below.

> Some OpenSCAD users are computer programmers like you and me, but many
> are not.

On the top of the front page of http://www.openscad.org/ it says "The 
Programmers Solid 3D CAD Modeller". Programmers are the stated primary 
target for OpenSCAD. There are many CAD packages around, most target 
non-programmers first and foremost. OpenSCAD targets programmers and 
that should influence the way capabilities are improved. This is not in 
conflict with accommodating also users with a different background, in 
my opinion.

The unique thing about OpenSCAD is its capability to express unambiguous 
models in a programming language, a very powerful capability. I believe 
the challenge is to make the language sufficiently expressive: As simple 
as possible, but no simpler.

> If OpenSCAD is your first experience with computer
> programming, then how many new concepts do you need to learn before
> you can be productive?

See above. If I had no experience in programming, I would use a 
different modelling tool than OpenSCAD, there are many. I disagree if 
the idea is to discard universally accepted programming idioms in order 
to accommodate people with no programming background. Note I explicitly 
do not mean to suggest making OpenSCAD a large language like e.g. C++. 
On the contrary, I think you might be running the risk of creating a 
large language precisely because the most common and most expressive 
idioms are left out.

 > OpenSCAD seems to have a low barrier to entry,
> and we want to keep it this way.

I would challenge anyone to define what "low barrier to entry" really 
means. What I indicated explicitly accommodated current idioms ("If you 
want to express things as it is currently being done, you can, but you 
also have other possibilities.").

If you can't express what you think, or only with difficulty because of 
limitations in the language, the barrier is high, not low.

 > One philosophical principle I've learned from the community is that
 > OpenSCAD is intended to be a purely declarative or 'functional'
 > language, except that it should also be much easier to learn than
 > serious functional languages such as Haskell. This means that there is
 > no state. You can't increment a variable or modify a data structure
 > in-place.

I think an important goal of OpenSCAD is to provide a language giving 
the average programmer an efficient way to express 3d models. Such a 
goal does not, in my opinion, automatically imply that common idioms 
known from other languages should be discarded.

As you say, in OpenSCAD you are not allowed to modify the value of 
variable. As seen from a user point of view, this is not a 
simplification, it is a constraint that makes things harder for the 
user. It is as if you tell a C++ programmer to use ONLY template code, 
where everything must be defined at compile time. Of course, this 
constraint makes life easer for the implementer, no doubt about that, 
but I don't think that is the argument presented.

> Traditional OOP languages are based on the idea of objects with state,
> and there is a lot of additional heavy weight machinery that you need
> to learn before you can be productive.

I do not agree with that, see my previous simple example.

> But we don't want this: we'll
> end up with a language that is easy to use once you have learned
> object oriented programming, but it with a higher barrier to entry for
> beginners.

See above notes on target audience.

> In your first example (class lollipop), you defined a class, you
> defined a constructor inside the class, you declared data members then
> separately assigned them initial values within the constructor, and
> you have an assignment to the special variable 'this'. You used a lot
> of machinery to accomplish something very simple.

Yes, I did use an over-simplified example that could be solved using 
other techniques. However, the idea was to convey the idea of a very 
simple object model that could be used for much more complicated 
examples that would be difficult to express with the current language 
features.

> In your second example (module example_module), you create a mutable
> object and modify its state, in these lines:
>>      table_plate = cube(size=[100,100,5],center=true);
>>
>>      // union the lollipops with the table plate and return it
>>      table_plate.union(lolA);
>>      table_plate.union(lolB);
>>
>>      // be explicit about what the module returns
>>      return table_plate;
> But we want OpenSCAD to be purely declarative, without state mutation semantics.

As noted above, I have come across this statement several times, I am 
fully aware it exists. I just have not seen arguments that have 
convinced me it is consistent with how I perceive OpenSCADs overall goals.

> When I have more time, maybe I'll try and rewrite your code in
> OpenSCAD 2, to demonstrate that the same things can be accomplished in
> a simpler way, without all the heavy machinery of OOP.

I think it would be useful to see alternative code, indeed. It makes it 
easier to get a factual impression of what it is.

I will consider also some alternatives to what we have discussed. I need 
to understand a few more things in OpenSCAD as it currently stands, I am 
still learning here.

I would like to thank you for a thought provoking debate and for the 
work done!

Carsten Arnholm


From gwadej at anomaly.org  Sun May 17 17:50:35 2015
From: gwadej at anomaly.org (G. Wade Johnson)
Date: Sun, 17 May 2015 16:50:35 -0500
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <5559095D.50908@arnholm.org>
References: <1431477689364-12627.post@n5.nabble.com>
	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
	<1431493002219-12630.post@n5.nabble.com>
	<55532E61.10105@jonbondy.com>
	<1431536127142-12634.post@n5.nabble.com>
	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>
	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>
	<555471CC.2050307@arnholm.org>
	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
	<5554D43F.2000906@arnholm.org>
	<CAGV6i+PvHK5y_ndqvGshn2A=MBmQdDV6E3VfPxAn1ApUubY22g@mail.gmail.com>
	<20150516123301.7e0c770e@cygnus> <5557BFDD.40808@arnholm.org>
	<CAGV6i+PLf9qrC2vXDEmiUNypM0y630yXPpn_Tbx79fd=YGx4Zw@mail.gmail.com>
	<5559095D.50908@arnholm.org>
Message-ID: <20150517165035.00947dc8@cygnus>

On Sun, 17 May 2015 23:34:21 +0200
Carsten Arnholm <arnholm at arnholm.org> wrote:

> Hello Doug,
> 
> Interesting discussion! Please understand that if you find I present 
> alternative viewpoints I very much respect the work being done. I
> just want to add my perspective.
> 
> On 2015-05-17 01:35, doug moen wrote:
> > One of my top goals for "OpenSCAD 2" is to stay true to the goals
> > and philosophy of OpenSCAD. I've tried to figure out what these are
> > by talking to Marius and reading forum posts for the last few years.
> 
> I have followed the posts for only a few months, so I do not have the 
> full picture. I apologise if I repeat important discussions you may
> have had already. I have noted the stated goal of "functional
> language", but I have yet to see a truly convincing explanation of
> why that is a good thing as seen from the user point of view. More on
> that below.

Hi Carsten,

Sorry to butt in here, but after reading your comments, I think part of
the context you may not have seen is another ongoing topic of discussion
about OpenSCAD.

A really strong argument for the declarative nature of OpenSCAD versus
a more traditional language is the fact that there is no _time_ in the
OpenSCAD output. Almost all programming languages execute over a period
of time, this gives rise to assumptions about mutability and cause and
effect relationships.

OpenSCAD /programs/ (I'll use the term loosely) are not executing. They
are describing a physical shape. The result of the program is static,
there is no real concept of time in the code. If OpenSCAD were designed
as a more traditional language, the programmer would likely make
assumptions based on their understanding of how programs execute in
time. This causes a fairly significant disconnect in the mental model
of how the code works.

The declarative, immutable nature of OpenSCAD code mirrors the mental
model of a description of a static object better (in my opinion).

G. Wade

> > Some OpenSCAD users are computer programmers like you and me, but
> > many are not.
> 
> On the top of the front page of http://www.openscad.org/ it says "The 
> Programmers Solid 3D CAD Modeller". Programmers are the stated
> primary target for OpenSCAD. There are many CAD packages around, most
> target non-programmers first and foremost. OpenSCAD targets
> programmers and that should influence the way capabilities are
> improved. This is not in conflict with accommodating also users with
> a different background, in my opinion.
> 
> The unique thing about OpenSCAD is its capability to express
> unambiguous models in a programming language, a very powerful
> capability. I believe the challenge is to make the language
> sufficiently expressive: As simple as possible, but no simpler.
> 
> > If OpenSCAD is your first experience with computer
> > programming, then how many new concepts do you need to learn before
> > you can be productive?
> 
> See above. If I had no experience in programming, I would use a 
> different modelling tool than OpenSCAD, there are many. I disagree if 
> the idea is to discard universally accepted programming idioms in
> order to accommodate people with no programming background. Note I
> explicitly do not mean to suggest making OpenSCAD a large language
> like e.g. C++. On the contrary, I think you might be running the risk
> of creating a large language precisely because the most common and
> most expressive idioms are left out.
> 
>  > OpenSCAD seems to have a low barrier to entry,
> > and we want to keep it this way.
> 
> I would challenge anyone to define what "low barrier to entry" really 
> means. What I indicated explicitly accommodated current idioms ("If
> you want to express things as it is currently being done, you can,
> but you also have other possibilities.").
> 
> If you can't express what you think, or only with difficulty because
> of limitations in the language, the barrier is high, not low.
> 
>  > One philosophical principle I've learned from the community is that
>  > OpenSCAD is intended to be a purely declarative or 'functional'
>  > language, except that it should also be much easier to learn than
>  > serious functional languages such as Haskell. This means that
>  > there is no state. You can't increment a variable or modify a data
>  > structure in-place.
> 
> I think an important goal of OpenSCAD is to provide a language giving 
> the average programmer an efficient way to express 3d models. Such a 
> goal does not, in my opinion, automatically imply that common idioms 
> known from other languages should be discarded.
> 
> As you say, in OpenSCAD you are not allowed to modify the value of 
> variable. As seen from a user point of view, this is not a 
> simplification, it is a constraint that makes things harder for the 
> user. It is as if you tell a C++ programmer to use ONLY template
> code, where everything must be defined at compile time. Of course,
> this constraint makes life easer for the implementer, no doubt about
> that, but I don't think that is the argument presented.
> 
> > Traditional OOP languages are based on the idea of objects with
> > state, and there is a lot of additional heavy weight machinery that
> > you need to learn before you can be productive.
> 
> I do not agree with that, see my previous simple example.
> 
> > But we don't want this: we'll
> > end up with a language that is easy to use once you have learned
> > object oriented programming, but it with a higher barrier to entry
> > for beginners.
> 
> See above notes on target audience.
> 
> > In your first example (class lollipop), you defined a class, you
> > defined a constructor inside the class, you declared data members
> > then separately assigned them initial values within the
> > constructor, and you have an assignment to the special variable
> > 'this'. You used a lot of machinery to accomplish something very
> > simple.
> 
> Yes, I did use an over-simplified example that could be solved using 
> other techniques. However, the idea was to convey the idea of a very 
> simple object model that could be used for much more complicated 
> examples that would be difficult to express with the current language 
> features.
> 
> > In your second example (module example_module), you create a mutable
> > object and modify its state, in these lines:
> >>      table_plate = cube(size=[100,100,5],center=true);
> >>
> >>      // union the lollipops with the table plate and return it
> >>      table_plate.union(lolA);
> >>      table_plate.union(lolB);
> >>
> >>      // be explicit about what the module returns
> >>      return table_plate;
> > But we want OpenSCAD to be purely declarative, without state
> > mutation semantics.
> 
> As noted above, I have come across this statement several times, I am 
> fully aware it exists. I just have not seen arguments that have 
> convinced me it is consistent with how I perceive OpenSCADs overall
> goals.
> 
> > When I have more time, maybe I'll try and rewrite your code in
> > OpenSCAD 2, to demonstrate that the same things can be accomplished
> > in a simpler way, without all the heavy machinery of OOP.
> 
> I think it would be useful to see alternative code, indeed. It makes
> it easier to get a factual impression of what it is.
> 
> I will consider also some alternatives to what we have discussed. I
> need to understand a few more things in OpenSCAD as it currently
> stands, I am still learning here.
> 
> I would like to thank you for a thought provoking debate and for the 
> work done!
> 
> Carsten Arnholm
> 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org


-- 
There are two ways of constructing a software design: One way is to
make it so simple that there are obviously no deficiencies and the
other way is to make it so complicated that there are no obvious
deficiencies. -- C. A. R. Hoare


From arnholm at arnholm.org  Sun May 17 18:11:58 2015
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Mon, 18 May 2015 00:11:58 +0200
Subject: [OpenSCAD] Specification of CSG file format?
Message-ID: <5559122E.2010807@arnholm.org>

Hi,

The following is an attempt to understand exactly the nature and formal 
definition of *.csg files, formulated through a few questions.

Background: In OpenSCAD we have a capability to export a design to a 
*.csg file. OpenSCAD can also open such files via File -> Open ... or 
via a command line parameter.

My first question is whether *.csg files are specific to OpenSCAD or 
whether they represent some kind of universal standardised CSG tree 
representation. I have not found a clear answer, but when I inspect the 
OpenSCAD-generated *.csg files, it seems to me they are is OpenSCAD 
specific. Is this a correct understanding? I know other programs have 
made import filters for such files, but then the only "contract" is 
OpenSCAD documentation, right?

Second, is it correct to say that the contents of a *.csg file generated 
or read by OpenSCAD is a subset of the *.scad language, where only 
literal values exist and transformations are expressed as 4x4 
homogeneous transformation matrices *only* ("multmatrix")? If this is 
correct, is the subset language used in *.csg files documented anywhere?

Third, there also seems to be an extension "group()" to the *.scad 
language. Is it correct to say that "group()" in *.csg is a direct 1:1 
unnamed equivalent to a "module" in *.scad? And, is there any difference 
at all between "group()" and "union()" in *.csg files? It seems to me 
the answer is no, apart from "group()" indicating what used to be a module?

Carsten Arnholm


From Torsten.Paul at gmx.de  Sun May 17 18:15:45 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 18 May 2015 00:15:45 +0200
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <5559095D.50908@arnholm.org>
References: <1431477689364-12627.post@n5.nabble.com>	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>	<1431493002219-12630.post@n5.nabble.com>	<55532E61.10105@jonbondy.com>	<1431536127142-12634.post@n5.nabble.com>	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>	<555471CC.2050307@arnholm.org>	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>	<5554D43F.2000906@arnholm.org>	<CAGV6i+PvHK5y_ndqvGshn2A=MBmQdDV6E3VfPxAn1ApUubY22g@mail.gmail.com>	<20150516123301.7e0c770e@cygnus>	<5557BFDD.40808@arnholm.org>	<CAGV6i+PLf9qrC2vXDEmiUNypM0y630yXPpn_Tbx79fd=YGx4Zw@mail.gmail.com>
	<5559095D.50908@arnholm.org>
Message-ID: <55591311.2030808@gmx.de>

On 05/17/2015 11:34 PM, Carsten Arnholm wrote:
> On the top of the front page of http://www.openscad.org/ it
 > says "The Programmers Solid 3D CAD Modeller". Programmers
 > are the stated primary target for OpenSCAD. There are many
 > CAD packages around, most target non-programmers first and
 > foremost. OpenSCAD targets programmers and that should
 > influence the way capabilities are improved. This is not
 > in conflict with accommodating also users with a different
> background, in my opinion.
 >
I'm not so sure about the main target audience. Also note it
still says "Modeller" not "Programming language".

The interesting thing is that programmers have the tendency
trying to fit OpenSCAD scripts into the same behavior they
expect from the language they are using normally. This is
what Alan teasingly calls "iterative programmer disease" :-).

I think there's room for both things, a modeller like
OpenSCAD and a programming language to generate models
for special use like generating models based on data
stored in a database or something similar. Just like
HTML5 + CSS is the descriptive way and can produce even
extremely cool and interactive stuff without running code,
but there is still a range of topics where JavaScript is
needed in addition.

One very impressive example for how low the entry barrier
actually is after diving into it is the video from that
post:
http://forum.openscad.org/just-fun-4th-graders-openSCAD-in-schools-td12077.html

ciao,
   Torsten.



From Torsten.Paul at gmx.de  Sun May 17 18:28:51 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 18 May 2015 00:28:51 +0200
Subject: [OpenSCAD] Specification of CSG file format?
In-Reply-To: <5559122E.2010807@arnholm.org>
References: <5559122E.2010807@arnholm.org>
Message-ID: <55591623.7000506@gmx.de>

On 05/18/2015 12:11 AM, Carsten Arnholm wrote:
> My first question is whether *.csg files are specific to OpenSCAD
 >
Yes, they are OpenSCAD specific. I don't think there's a clear
documentation for the file content.

> Second, is it correct to say that the contents of a *.csg file
 > generated or read by OpenSCAD is a subset of the *.scad language
 >
Yes, actually the test framework now validates that. There are
some corner cases that do not work though (mainly inf/nan
values).
I think it would make the format even more useful to define
some additional 2D modules so things like text() and the
upcoming trace() could be resolved. Right now the program
reading *.csg would need to render text or trace bitmaps
itself.

> Third, there also seems to be an extension "group()" to the
 > *.scad language. Is it correct to say that "group()" in *.csg
 > is a direct 1:1 unnamed equivalent to a "module" in *.scad?
 > And, is there any difference at all between "group()" and
 > "union()" in *.csg files? It seems to me the answer is no,
 > apart from "group()" indicating what used to be a module?
>
I'm not sure about that one, I think currently group() does
behave like union() due to the implicit union happening
automatically. That might change with the removal of implicit
unions (https://github.com/openscad/openscad/issues/350).

ciao,
   Torsten.




From bobcousins42 at googlemail.com  Sun May 17 18:44:38 2015
From: bobcousins42 at googlemail.com (bobc)
Date: Sun, 17 May 2015 15:44:38 -0700 (MST)
Subject: [OpenSCAD] OpenSCAD 2015.03 released
In-Reply-To: <AA00DEA8-0515-4969-A98E-856568FF0778@kintel.net>
References: <AA00DEA8-0515-4969-A98E-856568FF0778@kintel.net>
Message-ID: <1431902678209-12679.post@n5.nabble.com>

This message didn't seem to make it to the list so I repost it here,
apologies if you see it twice :)

----------

I just tried the new version, I'm really impressed! The GUI is really nice
and easy to use, cool new features like text(), and documentation looks good
too.

I probably don't say "thanks" often enough, but this certainly deserves it.

Nice work and thanks to all concerned :) 

Bob.



--
View this message in context: http://forum.openscad.org/OpenSCAD-2015-03-released-tp11959p12679.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Sun May 17 18:50:30 2015
From: doug at moens.org (doug moen)
Date: Sun, 17 May 2015 18:50:30 -0400
Subject: [OpenSCAD] Specification of CSG file format?
In-Reply-To: <5559122E.2010807@arnholm.org>
References: <5559122E.2010807@arnholm.org>
Message-ID: <CAGV6i+N02VRmCzEfmyMgyrKG53_4fdD8wDhvh+XzkQOgEX9HbQ@mail.gmail.com>

A group is a list of shapes and groups. 'group' is an undocumented,
built-in OpenSCAD module that returns a group.

A module is a function with two argument lists. The inner argument list is
a list of values, while the outer argument list is either a primitive
shape, or a group of shapes. In the case of a user-defined module, the
outer argument list is always converted to a group, this group is what
children() returns.

The result returned by a module is either a shape or a group. Currently,
only built-in modules like 'cube' and 'scale' return shapes; user defined
modules return a group.

The behaviour of user-defined modules may change in the future, especially
if some of the ideas in OpenSCAD2 are implemented. It will be possible for
a user-defined module to return a single shape, instead of a group. Also,
the current behaviour of the builtin module 'for()' is to always return a
group, but Marius and I would like to change that. So the CSG tree might be
flatter in the future, due to fewer intermediate groups being generated.

On 17 May 2015 at 18:11, Carsten Arnholm <arnholm at arnholm.org> wrote:

> Hi,
>
> The following is an attempt to understand exactly the nature and formal
> definition of *.csg files, formulated through a few questions.
>
> Background: In OpenSCAD we have a capability to export a design to a *.csg
> file. OpenSCAD can also open such files via File -> Open ... or via a
> command line parameter.
>
> My first question is whether *.csg files are specific to OpenSCAD or
> whether they represent some kind of universal standardised CSG tree
> representation. I have not found a clear answer, but when I inspect the
> OpenSCAD-generated *.csg files, it seems to me they are is OpenSCAD
> specific. Is this a correct understanding? I know other programs have made
> import filters for such files, but then the only "contract" is OpenSCAD
> documentation, right?
>
> Second, is it correct to say that the contents of a *.csg file generated
> or read by OpenSCAD is a subset of the *.scad language, where only literal
> values exist and transformations are expressed as 4x4 homogeneous
> transformation matrices *only* ("multmatrix")? If this is correct, is the
> subset language used in *.csg files documented anywhere?
>
> Third, there also seems to be an extension "group()" to the *.scad
> language. Is it correct to say that "group()" in *.csg is a direct 1:1
> unnamed equivalent to a "module" in *.scad? And, is there any difference at
> all between "group()" and "union()" in *.csg files? It seems to me the
> answer is no, apart from "group()" indicating what used to be a module?
>
> Carsten Arnholm
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150517/0dbbadc6/attachment.html>

From bobcousins42 at googlemail.com  Sun May 17 18:53:29 2015
From: bobcousins42 at googlemail.com (bobc)
Date: Sun, 17 May 2015 15:53:29 -0700 (MST)
Subject: [OpenSCAD] Specification of CSG file format?
In-Reply-To: <5559122E.2010807@arnholm.org>
References: <5559122E.2010807@arnholm.org>
Message-ID: <1431903209137-12681.post@n5.nabble.com>

I am interested in this too, I am just thinking of writing a parser, so a
grammar would be useful. If there is nothing already, I will try to put one
together.

bob



--
View this message in context: http://forum.openscad.org/Specification-of-CSG-file-format-tp12676p12681.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Mon May 18 00:43:35 2015
From: runsun at gmail.com (runsun)
Date: Sun, 17 May 2015 21:43:35 -0700 (MST)
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <20150517165035.00947dc8@cygnus>
References: <CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>
	<555471CC.2050307@arnholm.org>
	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
	<5554D43F.2000906@arnholm.org>
	<CAGV6i+PvHK5y_ndqvGshn2A=MBmQdDV6E3VfPxAn1ApUubY22g@mail.gmail.com>
	<20150516123301.7e0c770e@cygnus> <5557BFDD.40808@arnholm.org>
	<CAGV6i+PLf9qrC2vXDEmiUNypM0y630yXPpn_Tbx79fd=YGx4Zw@mail.gmail.com>
	<5559095D.50908@arnholm.org> <20150517165035.00947dc8@cygnus>
Message-ID: <1431924215191-12682.post@n5.nabble.com>

G. Wade Johnson wrote
> OpenSCAD /programs/ (I'll use the term loosely) are not executing. They
> are describing a physical shape. The result of the program is static,
> there is no real concept of time in the code. If OpenSCAD were designed
> as a more traditional language, the programmer would likely make
> assumptions based on their understanding of how programs execute in
> time. This causes a fairly significant disconnect in the mental model
> of how the code works.

Indeed the openscad language itself doesn't consider time. However, the
existence of $t and animation feature seems to show that dynamic modeling 
is in the mind of openscad. 





-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/eval-tp12627p12682.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From hypher at gmail.com  Mon May 18 02:01:28 2015
From: hypher at gmail.com (Yona Appletree)
Date: Sun, 17 May 2015 23:01:28 -0700
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <CAGV6i+M_arN4QtqG_GC-xUTfFbi-8PRbfPu8gMy7VfTP7jd06A@mail.gmail.com>
References: <1431477689364-12627.post@n5.nabble.com>
	<CAGV6i+OiZGhSXwM8g4edixfPoWhb2NxjnoeerS7t4A5Qah=w+A@mail.gmail.com>
	<1431493002219-12630.post@n5.nabble.com>
	<55532E61.10105@jonbondy.com>
	<1431536127142-12634.post@n5.nabble.com>
	<CAG7fsRTzduGNL52SHyYrg90fuNzDehEN2nzMuQbgVcObZYtiYw@mail.gmail.com>
	<CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>
	<555471CC.2050307@arnholm.org>
	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
	<5554D43F.2000906@arnholm.org>
	<CAGV6i+PvHK5y_ndqvGshn2A=MBmQdDV6E3VfPxAn1ApUubY22g@mail.gmail.com>
	<20150516123301.7e0c770e@cygnus> <5557BFDD.40808@arnholm.org>
	<CAGV6i+PLf9qrC2vXDEmiUNypM0y630yXPpn_Tbx79fd=YGx4Zw@mail.gmail.com>
	<5557E633.7070701@gmail.com>
	<CAGV6i+M_arN4QtqG_GC-xUTfFbi-8PRbfPu8gMy7VfTP7jd06A@mail.gmail.com>
Message-ID: <55598038.1080003@gmail.com>

Doug,

I am also interested in any design documents or grammars you have for 
OpenSCAD2 -- it's quite an undertaking to bring these new concepts to 
the language, thanks for your effort.

Like you said, I think we're on the same page, mostly. The main 
difference is that it sounds like you're thinking of OpenSCAD files as 
the class-like thing, whereas I imagined modules/functions to be fairly 
easily extensible into class-like objects. In the end, it doesn't matter 
much.

If there is a public discussion forum about these ideas, I would enjoy 
participating in the discussion, exploring specific use cases, etc... 
This thread seems a bit overcrowded for that discussion, however.

- Yona

> doug moen <mailto:doug at moens.org>
> May 16, 2015 at 19:27
> Hi Yona. I find parts of your post confusing (the term "module" is 
> overloaded), but we are thinking along the same lines.
>
> A quick way to summarize my thinking is that you don't need classes to 
> do object oriented programming. The prototype/delegation paradigm used 
> by Javascript is just as powerful. But if all objects are immutable, 
> then you don't need delegation, and things get really simple. You just 
> need:
>
>  1. object literals
>  2. a way to make a new object by specifying the differences from an
>     old object. Or: a way to customize an object, overriding some
>     fields, resulting in a new object.
>  3. functions
>
> And that's it, you have a functional OOP system. It's simple, more 
> powerful than it looks, and good enough for our purposes.
>
> OpenSCAD already has the above 3 concepts:
>
>  1. an OpenSCAD script corresponds to an object
>  2. you can customize a script, overriding some definitions, by
>     writing 'include <scriptname>' and then writing new definitions
>     that override some of the bindings inherited from <scriptname>.
>     Or, you can override definitions within a script from the command
>     line using the -D flag.
>  3. OpenSCAD has functions. Also, 'module' definitions are really just
>     functions by another name.
>
> OpenSCAD 2 just generalizes these already-existing concepts. It adds 
> object literals and first class object values. It adds a better syntax 
> for customizing an object. It unifies "functions" and "modules", using 
> the word "function" to describe both.
>
> Now I'll copy and paste part of Yona's post, with terminology and 
> syntax changed to correspond to my current OpenSCAD 2 design:
>
>
> Doug Moen.
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> Yona Appletree <mailto:hypher at gmail.com>
> May 16, 2015 at 17:52
> Doug,
>
> This is a fascinating discussion, and I wanted to chime in about 
> objects and mutability (full disclosure, experienced programmer). I 
> have an interest in functional, immutable programming styles, but have 
> not personally used lisp or Haskell. Most of my experience is with Scala.
>
> I think you can preserve much of the usefulness of objects while 
> keeping a simple syntax and immutability. In fact, we don't even 
> really need a new keyword. Modules are fine as is, with a few minor 
> extensions. The main features that seem useful are:
>
>  1. Combining data, geometry and functions into one variable space
>  2. Module mix-ins
>  3. Access to module parameters and variables as "fields"
>  4. A module "copy" method. I will use the name "with", where you can
>     specify overrides to the parameters and variables in the modules.
>     This would return a copy of the module with the new values,
>     keeping immutability.
>
> Carsten's example would look something like this:
> module Lollipop(
> radius,
> diameter,
> height
> ) extends Geometry /* This could be the default, and not needed to be 
> stated explicitly */ {
> translate([0,0,height]) sphere(r=radius);
> cylinder(d=diameter,h=height
> }
>
> // modules exist as before
> module example_model()
> {
> // create 2 lollipops of different sizes, the second dependent on the 
> first
>
> lolA = Lollipop(radius = 10, diameter = 2, height = 50);
> lolB = lolA.with(radius = lolA.radius*2, diameter = lolA.diameter*2); 
> // height is omitted -- it stays the same
>
> // create a cube representing the table plate.
> // cube is a module just like everything else (albeit a native one),
> // and it's parameters ARE accessible, and has a .with() if needed.
> table_plate = cube(size=[100,100,5], center=true);
>
> // union, a member of the base geometry module, returns an immutable 
> copy of itself
> // unioned with the arguments to union. Since we are a module, any 
> geometry declared is
> // implicitly unioned as before.
> table_plate.union(lolA, lolB);
> }
>
> // construct the exmple model and export it as STL
> example_model()
> .render() // Produces rendered geometry... more on this later
> .exportStl("lollipops_on_table.stl"); // magic strings are ugly. Use 
> an actual method name for STL
>
> But these extensions would allow far more, but remain mostly, if not 
> completely backwards compatible. We can actually implement the 
> "geometry" base module using the existing functionality of OpenSCAD:
> module GeometryBase {
> unionOf = (args* /*vararg syntax tdb, of course */) -> { /* Anonymous 
> function syntax TDB */
> union() {
> this
> args
> }
> }
>
> rendered = (x = 1) -> render(x) { this }
> }
>
> If we consider { ... } to be an "inline module", you get associative 
> arrays for free:
>
> data = {
>     a = 10;
>     b = 20;
> }
> echo(data.a); // Valid because variables of modules are exposed
>
> // You can create a copy with new values as well
> data2 = data.with(b=30, c=100);
>
> Just my two cents, but it would be a simple way to keep backwards 
> compatibility and all the desirable current features while giving the 
> programmers many of the features that feel natural to us.
>
> - Yona
> doug moen <mailto:doug at moens.org>
> May 16, 2015 at 16:35
> Hi Carsten.
>
> One of my top goals for "OpenSCAD 2" is to stay true to the goals and
> philosophy of OpenSCAD. I've tried to figure out what these are by
> talking to Marius and reading forum posts for the last few years.
>
> Some OpenSCAD users are computer programmers like you and me, but many
> are not. If OpenSCAD is your first experience with computer
> programming, then how many new concepts do you need to learn before
> you can be productive? OpenSCAD seems to have a low barrier to entry,
> and we want to keep it this way.
>
> One philosophical principle I've learned from the community is that
> OpenSCAD is intended to be a purely declarative or 'functional'
> language, except that it should also be much easier to learn than
> serious functional languages such as Haskell. This means that there is
> no state. You can't increment a variable or modify a data structure
> in-place.
>
> Traditional OOP languages are based on the idea of objects with state,
> and there is a lot of additional heavy weight machinery that you need
> to learn before you can be productive. But we don't want this: we'll
> end up with a language that is easy to use once you have learned
> object oriented programming, but it with a higher barrier to entry for
> beginners.
>
> In your first example (class lollipop), you defined a class, you
> defined a constructor inside the class, you declared data members then
> separately assigned them initial values within the constructor, and
> you have an assignment to the special variable 'this'. You used a lot
> of machinery to accomplish something very simple.
>
> In your second example (module example_module), you create a mutable
> object and modify its state, in these lines:
>>      table_plate = cube(size=[100,100,5],center=true);
>>
>>      // union the lollipops with the table plate and return it
>>      table_plate.union(lolA);
>>      table_plate.union(lolB);
>>
>>      // be explicit about what the module returns
>>      return table_plate;
> But we want OpenSCAD to be purely declarative, without state mutation semantics.
>
> When I have more time, maybe I'll try and rewrite your code in
> OpenSCAD 2, to demonstrate that the same things can be accomplished in
> a simpler way, without all the heavy machinery of OOP.
>
> Doug Moen.
>
> On 16/05/2015, Carsten Arnholm<arnholm at arnholm.org>  wrote:
>> On 2015-05-16 19:33, G. Wade Johnson wrote:
>>> Is there a {beta,alpha,prototype} version of OpenSCAD2 somewhere for
>>> people to play with? Is there a spec to read?
>>>
>>> I, for one, would like to see anything you are willing to share on this.
>> That was my reaction as well.
>>
>> In my opinion, classes are not there to complicate things. On the
>> contrary, it is an important tool for simplification. Being able to name
>> a type, encapsulate its data members and provide member functions would
>> go a long way towards the goal of being more expressive without
>> complicating things.
>>
>> In my line of thinking, which may be different from OpenSCAD2 (as I have
>> not grasped the full idea of it), the main ideas would be:
>>
>> classes would be used for constructing named parametric objects
>> (instantiation) and being able to union, intersect and difference the
>> result with other named or unnamed objects (union(), intersect() and
>> difference() would be member functions on any class. unlike a module, a
>> class may contain data members unique to each instance created.
>>
>> Below is just a silly example to illustrate: 2 lollipops on a table.
>> The difference between a module and a class here is that a class may be
>> instantiated and may remember its construction parameters so they can be
>> re-used later. It also owns its CSG object.
>>
>> // classes are new
>> class lollipop {
>>
>>      // a constructor is a member function with the same name as the class
>>      lollipop(rad, diam, hei)
>>      {
>>         // keep data members
>>         radius   = rad;
>>         diameter = diam;
>>         height   = hei;
>>
>>         // "this CSG object"
>>         this = union() {
>>            translate([0,0,height]) sphere(r=radius);
>>            cylinder(d=diameter,h=height);
>>         };
>>      }
>>
>>      // data members of the class
>>      radius;
>>      diameter;
>>      height;
>> };
>>
>>
>> // modules exist as before
>> module example_model()
>> {
>>      // create 2 lollipops of different sizes
>>      // the second is dependent on the first
>>
>>      lolA = lollipop(rad=10,diam=2,hei=50);
>>      lolB = lollipop(lolA.radius*2,lolA.diameter*3,lolA.height);
>>
>>      // create a cube representing the table plate. Here,
>>      // the construction parameters cannot be accessed later
>>      // since the cube is a primitive only
>>      table_plate = cube(size=[100,100,5],center=true);
>>
>>      // union the lollipops with the table plate and return it
>>      table_plate.union(lolA);
>>      table_plate.union(lolB);
>>
>>      // be explicit about what the module returns
>>      return table_plate;
>> }
>>
>> // construct the exmple model and export it as STL
>> example_model().render().export("STL","lollipops_on_table.stl");
>>
>>
>> You could go on, classes could have data members being instantiations of
>> other classes, or even containers containing such.
>>
>> The above is just meant as a supplement to what I wrote before,
>> illustrating the idea that the OpenSCAD language could be extended in a
>> direction which would be immediately recognisable to programmers, while
>> still being backwards compatible with existing OpenSCAD code. If you
>> want to express things as it is currently being done, you can, but you
>> also have other possibilities.
>>
>> Again, just my thoughts. I don't know if it would be easy to implement.
>>
>>
>> Carsten
>>
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> Carsten Arnholm <mailto:arnholm at arnholm.org>
> May 16, 2015 at 15:08
>
>
> That was my reaction as well.
>
> In my opinion, classes are not there to complicate things. On the 
> contrary, it is an important tool for simplification. Being able to 
> name a type, encapsulate its data members and provide member functions 
> would go a long way towards the goal of being more expressive without 
> complicating things.
>
> In my line of thinking, which may be different from OpenSCAD2 (as I 
> have not grasped the full idea of it), the main ideas would be:
>
> classes would be used for constructing named parametric objects 
> (instantiation) and being able to union, intersect and difference the 
> result with other named or unnamed objects (union(), intersect() and 
> difference() would be member functions on any class. unlike a module, 
> a class may contain data members unique to each instance created.
>
> Below is just a silly example to illustrate: 2 lollipops on a table.
> The difference between a module and a class here is that a class may 
> be instantiated and may remember its construction parameters so they 
> can be re-used later. It also owns its CSG object.
>
> // classes are new
> class lollipop {
>
>    // a constructor is a member function with the same name as the class
>    lollipop(rad, diam, hei)
>    {
>       // keep data members
>       radius   = rad;
>       diameter = diam;
>       height   = hei;
>
>       // "this CSG object"
>       this = union() {
>          translate([0,0,height]) sphere(r=radius);
>          cylinder(d=diameter,h=height);
>       };
>    }
>
>    // data members of the class
>    radius;
>    diameter;
>    height;
> };
>
>
> // modules exist as before
> module example_model()
> {
>    // create 2 lollipops of different sizes
>    // the second is dependent on the first
>
>    lolA = lollipop(rad=10,diam=2,hei=50);
>    lolB = lollipop(lolA.radius*2,lolA.diameter*3,lolA.height);
>
>    // create a cube representing the table plate. Here,
>    // the construction parameters cannot be accessed later
>    // since the cube is a primitive only
>    table_plate = cube(size=[100,100,5],center=true);
>
>    // union the lollipops with the table plate and return it
>    table_plate.union(lolA);
>    table_plate.union(lolB);
>
>    // be explicit about what the module returns
>    return table_plate;
> }
>
> // construct the exmple model and export it as STL
> example_model().render().export("STL","lollipops_on_table.stl");
>
>
> You could go on, classes could have data members being instantiations 
> of other classes, or even containers containing such.
>
> The above is just meant as a supplement to what I wrote before, 
> illustrating the idea that the OpenSCAD language could be extended in 
> a direction which would be immediately recognisable to programmers, 
> while still being backwards compatible with existing OpenSCAD code. If 
> you want to express things as it is currently being done, you can, but 
> you also have other possibilities.
>
> Again, just my thoughts. I don't know if it would be easy to implement.
>
>
> Carsten
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> G. Wade Johnson <mailto:gwadej at anomaly.org>
> May 16, 2015 at 10:33
> Is there a {beta,alpha,prototype} version of OpenSCAD2 somewhere for
> people to play with? Is there a spec to read?
>
> I, for one, would like to see anything you are willing to share on this.
>
> G. Wade
>
> On Sat, 16 May 2015 12:44:38 -0400
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150517/eba0eb9f/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: compose-unknown-contact.jpg
Type: image/jpeg
Size: 770 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150517/eba0eb9f/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: postbox-contact.jpg
Type: image/jpeg
Size: 1152 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150517/eba0eb9f/attachment-0003.jpg>

From marius at kintel.net  Mon May 18 03:56:21 2015
From: marius at kintel.net (Marius Kintel)
Date: Mon, 18 May 2015 03:56:21 -0400
Subject: [OpenSCAD] Specification of CSG file format?
In-Reply-To: <5559122E.2010807@arnholm.org>
References: <5559122E.2010807@arnholm.org>
Message-ID: <BC01E583-E984-422B-BBD6-73319634FD2C@kintel.net>

On May 17, 2015, at 18:11 PM, Carsten Arnholm <arnholm at arnholm.org> wrote:

> I know other programs have made import filters for such files, but then the only "contract" is OpenSCAD documentation, right?
> 
.csg export was added specifically to support some research being done in the RepRap project on inlining CSG operation with slicing for 3D printing.
Since then, people have started to use it as some sort of interoperability format (e.g. FreeCAD has a .csg parser for importing static OpenSCAD content).
There has been discussions on changing some aspects of .csg output; replacing multmatrix with logical transformations, replacing import() with polygon()/polyhedron(), or even replacing more advanced built-in modules like hull() and minkowski() with their results, making it easier to read or import such files.

 -Marius



From arnholm at arnholm.org  Mon May 18 05:04:34 2015
From: arnholm at arnholm.org (arnholm at arnholm.org)
Date: Mon, 18 May 2015 11:04:34 +0200
Subject: [OpenSCAD] =?utf-8?q?Specification_of_CSG_file_format=3F?=
In-Reply-To: <BC01E583-E984-422B-BBD6-73319634FD2C@kintel.net>
References: <5559122E.2010807@arnholm.org>
	<BC01E583-E984-422B-BBD6-73319634FD2C@kintel.net>
Message-ID: <7e51d0ccff05af7b5a8538524983e8a9@arnholm.org>

On 2015-05-18 09:56, Marius Kintel wrote:
> On May 17, 2015, at 18:11 PM, Carsten Arnholm <arnholm at arnholm.org> 
> wrote:
> 
>> I know other programs have made import filters for such files, but 
>> then the only "contract" is OpenSCAD documentation, right?
>> 
> .csg export was added specifically to support some research being done
> in the RepRap project on inlining CSG operation with slicing for 3D
> printing.
> Since then, people have started to use it as some sort of
> interoperability format (e.g. FreeCAD has a .csg parser for importing
> static OpenSCAD content).
> There has been discussions on changing some aspects of .csg output;
> replacing multmatrix with logical transformations, replacing import()
> with polygon()/polyhedron(), or even replacing more advanced built-in
> modules like hull() and minkowski() with their results, making it
> easier to read or import such files.

Thanks for the input!

It matches more or less what I thought. My personal recommendation would 
be to keep multmatrix as is, this is by far the most general way of 
handling transformations on this level. Similarly, I think it would 
definitely make sense to optionally do
- expand import() with polygon()/polyhedron()
- expand hull() and minkowski() to basic primitives
- expand text() to basic 3d primitives

In summary, it would be very useful to optionally expand all high level 
objects to their basic primitives when exporting to .csg. For 
transformations, the basic primitive is the 4x4 matrix already 
implemented as multmatrix, so I would keep that.

With such options, OpenSCAD models could be more easily exchanged with 
e.g. FreeCAD. I tested FreeCAD .csg import yesterday and it failed on a 
very simple model because I had used hull() in OpenSCAD.

The way I look at this is that OpenSCAD provides a "user interface" 
language with some primitives (cube,cylinder etc.) and some high level 
features (hull() and minkowski() are 2 examples). The high level 
features are very useful "user interface" idioms, but not suitable for 
reliable interoperability of model data between applications. To make 
interoperability more reliable, it would make sense to (optionally!) 
store *only basic model primitives* on the .csg file together with only 
basic transformation primitives (i.e. multimatrix).

You could then change the language in any way you like, plus add more 
primitives without compromising data exchange with other applications. 
The contract would be the set of primitives only.

Carsten Arnholm




From kaefert at gmail.com  Mon May 18 06:51:58 2015
From: kaefert at gmail.com (kaefert at gmail.com)
Date: Mon, 18 May 2015 12:51:58 +0200
Subject: [OpenSCAD] Visually and by inspecting code: surface looks perfect -
 But: "Object may not be a valid 2-manifold and may need repair"
Message-ID: <CACDumsT_eWLgZ7OYM0goBerfTg1mHy6NFCBvpUCo3yK8Myscqg@mail.gmail.com>

Hi there!

I've found a quite complicated piece of openSCAD code here:
http://www.thingiverse.com/thing:172801

which I wanted to modify and export to STL.

My resulting scad script can be found as attachment. Now my problem
is, even though both when trying to understand the code and when
looking at the preview in OpenSCAD this object looks fine, but when
pressing F6 and exporting to an STL I get this message:

Trying the same with the original script taken from thingiverse
results in the same Problem.

WARNING: Object may not be a valid 2-manifold and may need repair! See
http://en.wikibooks.org/wiki/OpenSCAD_User_Manual/STL_Import_and_Export

Opening the resulting STL in Meshlab shows that my propellor blades
seem to be missing caps, which they defeniltly aren't inside OpenSCAD.

Could someone help me? I've tried for a few hours myself but could not
find a workaround.


Thank you, kind regards,
Thomas K?fer
-------------- next part --------------
A non-text attachment was scrubbed...
Name: screwprop_mod_v2.scad
Type: application/x-openscad
Size: 6104 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150518/e7218423/attachment.scad>

From marius at kintel.net  Mon May 18 11:43:00 2015
From: marius at kintel.net (Marius Kintel)
Date: Mon, 18 May 2015 11:43:00 -0400
Subject: [OpenSCAD] Visually and by inspecting code: surface looks
	perfect - But: "Object may not be a valid 2-manifold and may
	need repair"
In-Reply-To: <CACDumsT_eWLgZ7OYM0goBerfTg1mHy6NFCBvpUCo3yK8Myscqg@mail.gmail.com>
References: <CACDumsT_eWLgZ7OYM0goBerfTg1mHy6NFCBvpUCo3yK8Myscqg@mail.gmail.com>
Message-ID: <97E1056A-48E8-4029-8E40-2CA7A086D486@kintel.net>

On May 18, 2015, at 06:51 AM, kaefert at gmail.com wrote:

> Could someone help me? I've tried for a few hours myself but could not
> find a workaround.
> 
The inner end of your screwprop isn?t closed properly; you have some reversed polygons.
If you put an exclamation mark in front of an object, you can render that object alone, e.g.:

  !screwprop(65, mitte_innen_oben/2, 4, 10);

If you then turn on Throwntogether mode (F12), you can see reversed polygons colored magenta.

 -Marius



From marius at kintel.net  Mon May 18 11:51:43 2015
From: marius at kintel.net (Marius Kintel)
Date: Mon, 18 May 2015 11:51:43 -0400
Subject: [OpenSCAD] Specification of CSG file format?
In-Reply-To: <7e51d0ccff05af7b5a8538524983e8a9@arnholm.org>
References: <5559122E.2010807@arnholm.org>
	<BC01E583-E984-422B-BBD6-73319634FD2C@kintel.net>
	<7e51d0ccff05af7b5a8538524983e8a9@arnholm.org>
Message-ID: <03F30054-1B35-45E7-A495-41EC4D6E3ED1@kintel.net>

On May 18, 2015, at 05:04 AM, arnholm at arnholm.org wrote:
> 
> With such options, OpenSCAD models could be more easily exchanged with e.g. FreeCAD. I tested FreeCAD .csg import yesterday and it failed on a very simple model because I had used hull() in OpenSCAD.
> 
The challenge is that such a model might not be very useful - you?ve effectively stripped away most of the value OpenSCAD provides, and it might end up being marginally better than STL.
..then comes the challenge that lots of CAD tools don?t even support importing meshes, and would need higher level shapes and their relationships (e.g. STEP).

Anyway, one step at a time. We usually add features where it hurts the most. If you have cool ideas, you can always give implementing it a shot - having examples and someone willing to write code greatly improves the chances of it happening.

 -Marius



From kaefert at gmail.com  Mon May 18 12:19:29 2015
From: kaefert at gmail.com (kaefert at gmail.com)
Date: Mon, 18 May 2015 18:19:29 +0200
Subject: [OpenSCAD] Visually and by inspecting code: surface looks
 perfect - But: "Object may not be a valid 2-manifold and may need repair"
In-Reply-To: <97E1056A-48E8-4029-8E40-2CA7A086D486@kintel.net>
References: <CACDumsT_eWLgZ7OYM0goBerfTg1mHy6NFCBvpUCo3yK8Myscqg@mail.gmail.com>
	<97E1056A-48E8-4029-8E40-2CA7A086D486@kintel.net>
Message-ID: <CACDumsS+hUdOd6bAAPUKrBqMQCttxyr8250zYNUgXUsCQn8XLQ@mail.gmail.com>

Hi there Marius!

Thanks for your response! Okey, I've actually removed this part as
part of my simplifications of the original design since I thought it
would be unnecessary because this side is never visible because of the
implicit union with the central cylinder. But fixing this doesn't
solve my problem.

I've attached another version where you can't find any magenta
polygons when pressing F12 but still get this error. Any more ideas?

Thanks, Kind regards,
Thomas K.



2015-05-18 17:43 GMT+02:00 Marius Kintel <marius at kintel.net>:
> On May 18, 2015, at 06:51 AM, kaefert at gmail.com wrote:
>
>> Could someone help me? I've tried for a few hours myself but could not
>> find a workaround.
>>
> The inner end of your screwprop isn?t closed properly; you have some reversed polygons.
> If you put an exclamation mark in front of an object, you can render that object alone, e.g.:
>
>   !screwprop(65, mitte_innen_oben/2, 4, 10);
>
> If you then turn on Throwntogether mode (F12), you can see reversed polygons colored magenta.
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: screwprop_mod_v3.scad
Type: application/x-openscad
Size: 7518 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150518/c1f0afe7/attachment.scad>

From arnholm at arnholm.org  Mon May 18 13:52:14 2015
From: arnholm at arnholm.org (arnholm at arnholm.org)
Date: Mon, 18 May 2015 19:52:14 +0200
Subject: [OpenSCAD] =?utf-8?q?Specification_of_CSG_file_format=3F?=
In-Reply-To: <03F30054-1B35-45E7-A495-41EC4D6E3ED1@kintel.net>
References: <5559122E.2010807@arnholm.org>
	<BC01E583-E984-422B-BBD6-73319634FD2C@kintel.net>
	<7e51d0ccff05af7b5a8538524983e8a9@arnholm.org>
	<03F30054-1B35-45E7-A495-41EC4D6E3ED1@kintel.net>
Message-ID: <3af2367149c7a17ab26ea162b8f1e018@arnholm.org>

On 2015-05-18 17:51, Marius Kintel wrote:
> Anyway, one step at a time. We usually add features where it hurts the
> most. If you have cool ideas, you can always give implementing it a
> shot - having examples and someone willing to write code greatly
> improves the chances of it happening.

I do have some very concrete ideas, even if it is possible that I am 
alone thinking they are cool. I hope to realise them over a couple of 
months, some time is needed. I will report when there is something 
implemented.

Carsten Arnholm


From arnholm at arnholm.org  Mon May 18 13:54:28 2015
From: arnholm at arnholm.org (arnholm at arnholm.org)
Date: Mon, 18 May 2015 19:54:28 +0200
Subject: [OpenSCAD] =?utf-8?q?Specification_of_CSG_file_format=3F?=
In-Reply-To: <CAGV6i+N02VRmCzEfmyMgyrKG53_4fdD8wDhvh+XzkQOgEX9HbQ@mail.gmail.com>
References: <5559122E.2010807@arnholm.org>
	<CAGV6i+N02VRmCzEfmyMgyrKG53_4fdD8wDhvh+XzkQOgEX9HbQ@mail.gmail.com>
Message-ID: <c769dc8847c775608503f14d12d55f99@arnholm.org>

On 2015-05-18 00:50, doug moen wrote:
> 'group' is an undocumented,
> built-in OpenSCAD module that returns a group.

Okay :-)


From ed.nisley at pobox.com  Mon May 18 14:20:39 2015
From: ed.nisley at pobox.com (Ed Nisley)
Date: Mon, 18 May 2015 14:20:39 -0400
Subject: [OpenSCAD] Visually and by inspecting code: surface looks
 perfect - But: "Object may not be a valid 2-manifold and may need repair"
In-Reply-To: <CACDumsS+hUdOd6bAAPUKrBqMQCttxyr8250zYNUgXUsCQn8XLQ@mail.gmail.com>
References: <CACDumsT_eWLgZ7OYM0goBerfTg1mHy6NFCBvpUCo3yK8Myscqg@mail.gmail.com>
	<97E1056A-48E8-4029-8E40-2CA7A086D486@kintel.net>
	<CACDumsS+hUdOd6bAAPUKrBqMQCttxyr8250zYNUgXUsCQn8XLQ@mail.gmail.com>
Message-ID: <555A2D77.7090109@pobox.com>

On 05/18/2015 12:19 PM, kaefert at gmail.com wrote:
> Any more ideas?

According to Meshlab, the blades are inside-out: the surface normals 
point the wrong way. Selecting non-manifold edges lights up the blades.

Perhaps a polygon winding order error?

-- 
Ed
softsolder.com


From arnholm at arnholm.org  Mon May 18 14:38:17 2015
From: arnholm at arnholm.org (Carsten Arnholm)
Date: Mon, 18 May 2015 20:38:17 +0200
Subject: [OpenSCAD] Specification of CSG file format?
In-Reply-To: <03F30054-1B35-45E7-A495-41EC4D6E3ED1@kintel.net>
References: <5559122E.2010807@arnholm.org>	<BC01E583-E984-422B-BBD6-73319634FD2C@kintel.net>	<7e51d0ccff05af7b5a8538524983e8a9@arnholm.org>
	<03F30054-1B35-45E7-A495-41EC4D6E3ED1@kintel.net>
Message-ID: <555A3199.6080808@arnholm.org>

On 2015-05-18 17:51, Marius Kintel wrote:
> On May 18, 2015, at 05:04 AM, arnholm at arnholm.org wrote:
>>
>> With such options, OpenSCAD models could be more easily exchanged
>> with e.g. FreeCAD. I tested FreeCAD .csg import yesterday and it
 >> failed on a very simple model because I had used hull() in OpenSCAD.
>>
> The challenge is that such a model might not be very useful

Notice I emphasized such features to be entirely optional.

The current model failed for what I tried, it had to be discarded. 
Interoperability is useful, the way I see it. That was for the most part 
the motivation behind my suggested improvements.

Carsten Arnholm





From kaefert at gmail.com  Mon May 18 14:51:37 2015
From: kaefert at gmail.com (kaefert at gmail.com)
Date: Mon, 18 May 2015 20:51:37 +0200
Subject: [OpenSCAD] Visually and by inspecting code: surface looks
 perfect - But: "Object may not be a valid 2-manifold and may need repair"
In-Reply-To: <555A2D77.7090109@pobox.com>
References: <CACDumsT_eWLgZ7OYM0goBerfTg1mHy6NFCBvpUCo3yK8Myscqg@mail.gmail.com>
	<97E1056A-48E8-4029-8E40-2CA7A086D486@kintel.net>
	<CACDumsS+hUdOd6bAAPUKrBqMQCttxyr8250zYNUgXUsCQn8XLQ@mail.gmail.com>
	<555A2D77.7090109@pobox.com>
Message-ID: <CACDumsSHmG2dwJ5e66CXLg6Jd8FsLmZTJ9c9=Mr58wo_2WbThA@mail.gmail.com>

Hi there Ed! Thanks for your reply!

2015-05-18 20:20 GMT+02:00 Ed Nisley <ed.nisley at pobox.com>:
>
> According to Meshlab, the blades are inside-out: the surface normals point
> the wrong way. Selecting non-manifold edges lights up the blades.
>
> Perhaps a polygon winding order error?
> ...

I apologize for my ignorance, but sadly I don't know if you mean by
that, that there is something wrong in my code, or something wrong in
the way OpenSCAD renders my code.
Please elaborate.

Thanks, Regards,
Thomas K.


From bobcousins42 at googlemail.com  Mon May 18 15:41:22 2015
From: bobcousins42 at googlemail.com (Bob Cousins)
Date: Mon, 18 May 2015 20:41:22 +0100
Subject: [OpenSCAD] Specification of CSG file format?
In-Reply-To: <1431903209137-12681.post@n5.nabble.com>
References: <5559122E.2010807@arnholm.org>
	<1431903209137-12681.post@n5.nabble.com>
Message-ID: <CAOcn1AsgS7+x85wGc8=DMq1Yn1hLMajzhn7wHbxF6fOp_w4Urg@mail.gmail.com>

I extracted a YACC style grammar from importCSG.py in FreeCAD. It's a bit
long to post so I have put it into github.
https://github.com/bobc/csg_tool/blob/master/grammar/CSG.y I have run the
file through yacc and it seems ok, otherwise I have not verified the syntax.

FreeCAD seems to support most of the CSG functions, notable exceptions are
hull, minkowksi and a handful of others including glide, offset, resize,
subdiv.

bob

On 17 May 2015 at 23:53, bobc <bobcousins42 at googlemail.com> wrote:

> I am interested in this too, I am just thinking of writing a parser, so a
> grammar would be useful. If there is nothing already, I will try to put one
> together.
>
> bob
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Specification-of-CSG-file-format-tp12676p12681.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150518/4cb67ec0/attachment-0001.html>

From Torsten.Paul at gmx.de  Mon May 18 16:20:40 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Mon, 18 May 2015 22:20:40 +0200
Subject: [OpenSCAD] Specification of CSG file format?
In-Reply-To: <CAOcn1AsgS7+x85wGc8=DMq1Yn1hLMajzhn7wHbxF6fOp_w4Urg@mail.gmail.com>
References: <5559122E.2010807@arnholm.org>	<1431903209137-12681.post@n5.nabble.com>
	<CAOcn1AsgS7+x85wGc8=DMq1Yn1hLMajzhn7wHbxF6fOp_w4Urg@mail.gmail.com>
Message-ID: <555A4998.8040905@gmx.de>

On 05/18/2015 09:41 PM, Bob Cousins wrote:
> FreeCAD seems to support most of the CSG functions, notable
 > exceptions are hull, minkowksi and a handful of others including
 > glide, offset, resize, subdiv.
>
Both glide and subdiv are not implemented in OpenSCAD (only
throw an assertion error).

With the latest release there is at least also text().

Note there is also a Google Summer of Code project going on which
plans to create an importer for BRL-CAD that will read CSG files.
(http://brlcad.org//wiki/User:Andrei.ilinca24)

ciao,
   Torsten.



From marius at kintel.net  Mon May 18 16:28:41 2015
From: marius at kintel.net (Marius Kintel)
Date: Mon, 18 May 2015 16:28:41 -0400
Subject: [OpenSCAD] Visually and by inspecting code: surface looks
	perfect - But: "Object may not be a valid 2-manifold and may
	need repair"
In-Reply-To: <CACDumsS+hUdOd6bAAPUKrBqMQCttxyr8250zYNUgXUsCQn8XLQ@mail.gmail.com>
References: <CACDumsT_eWLgZ7OYM0goBerfTg1mHy6NFCBvpUCo3yK8Myscqg@mail.gmail.com>
	<97E1056A-48E8-4029-8E40-2CA7A086D486@kintel.net>
	<CACDumsS+hUdOd6bAAPUKrBqMQCttxyr8250zYNUgXUsCQn8XLQ@mail.gmail.com>
Message-ID: <331C928E-660F-4B85-88EB-A006A339B79F@kintel.net>

On May 18, 2015, at 12:19 PM, kaefert at gmail.com wrote:
> 
> I've attached another version where you can't find any magenta
> polygons when pressing F12 but still get this error. Any more ideas?
> 
I think it?s because your propeller blades touch part of the surface of the hub. This could create non-manifold geometry. In some cases, it?s just a warning since the non-manifoldness goes away when converting down to floating point coordinates, but our analysis is done with infinite resolution.
Analyzing and potentially repairing such issues after rendering is on the wishlist..

 -Marius



From ed.nisley at pobox.com  Mon May 18 16:30:52 2015
From: ed.nisley at pobox.com (Ed Nisley)
Date: Mon, 18 May 2015 16:30:52 -0400
Subject: [OpenSCAD] Visually and by inspecting code: surface looks
 perfect - But: "Object may not be a valid 2-manifold and may need repair"
In-Reply-To: <CACDumsSHmG2dwJ5e66CXLg6Jd8FsLmZTJ9c9=Mr58wo_2WbThA@mail.gmail.com>
References: <CACDumsT_eWLgZ7OYM0goBerfTg1mHy6NFCBvpUCo3yK8Myscqg@mail.gmail.com>
	<97E1056A-48E8-4029-8E40-2CA7A086D486@kintel.net>
	<CACDumsS+hUdOd6bAAPUKrBqMQCttxyr8250zYNUgXUsCQn8XLQ@mail.gmail.com>
	<555A2D77.7090109@pobox.com>
	<CACDumsSHmG2dwJ5e66CXLg6Jd8FsLmZTJ9c9=Mr58wo_2WbThA@mail.gmail.com>
Message-ID: <555A4BFC.7070301@pobox.com>

On 05/18/2015 02:51 PM, kaefert at gmail.com wrote:
> something wrong in my code

It's not exactly *wrong*, but the order in which you specify the points 
of a polygon / polyhedron determine which way the surface normals point:

http://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Primitive_Solids

"When looking at the face from the outside inwards, the points must be 
clockwise. You can rearrange the order of the points or the order they 
are referenced in each tuple. [...] Note that if your polygons are not 
all oriented the same way OpenSCAD will either print an error or crash 
completely"

Given the way that you're generating the points, at least some of the 
polyhedrons may be wound backwards.

The reason this doesn't show up in thrown-together mode may be due to 
the way the polyhedrons combine: everything looks fine from the outside, 
but some inside (invisible) faces wind backwards. Perhaps assembling one 
polyhedron at a time will be productive.

Using Meshlab (or something similar) to check your work may also help 
pin this down.

It's a nice-looking prop, though!

-- 
Ed
softsolder.com


From kaefert at gmail.com  Mon May 18 16:53:50 2015
From: kaefert at gmail.com (kaefert at gmail.com)
Date: Mon, 18 May 2015 22:53:50 +0200
Subject: [OpenSCAD] Visually and by inspecting code: surface looks
 perfect - But: "Object may not be a valid 2-manifold and may need repair"
In-Reply-To: <555A4BFC.7070301@pobox.com>
References: <CACDumsT_eWLgZ7OYM0goBerfTg1mHy6NFCBvpUCo3yK8Myscqg@mail.gmail.com>
	<97E1056A-48E8-4029-8E40-2CA7A086D486@kintel.net>
	<CACDumsS+hUdOd6bAAPUKrBqMQCttxyr8250zYNUgXUsCQn8XLQ@mail.gmail.com>
	<555A2D77.7090109@pobox.com>
	<CACDumsSHmG2dwJ5e66CXLg6Jd8FsLmZTJ9c9=Mr58wo_2WbThA@mail.gmail.com>
	<555A4BFC.7070301@pobox.com>
Message-ID: <CACDumsR6XNQW9=SKoZ2Ggy5POLbf6=mrD2EjkiGRnAB-UH2e3Q@mail.gmail.com>

2015-05-18 22:30 GMT+02:00 Ed Nisley <ed.nisley at pobox.com>:
>
> It's not exactly *wrong*, but the order in which you specify the points of a
> polygon / polyhedron determine which way the surface normals point:
>
> http://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Primitive_Solids
>
> "When looking at the face from the outside inwards, the points must be
> clockwise. You can rearrange the order of the points or the order they are
> referenced in each tuple. [...] Note that if your polygons are not all
> oriented the same way OpenSCAD will either print an error or crash
> completely"
>
> Given the way that you're generating the points, at least some of the
> polyhedrons may be wound backwards.
>
> The reason this doesn't show up in thrown-together mode may be due to the
> way the polyhedrons combine: everything looks fine from the outside, but
> some inside (invisible) faces wind backwards. Perhaps assembling one
> polyhedron at a time will be productive.

hmm, well the "if else if else" variant with 3 different polyhedrons
being drawn (1 for begin, 1 for middle 1 for end) does not have any
faces on the inside as far as I can tell.

>
> Using Meshlab (or something similar) to check your work may also help pin
> this down.

Yes, I've found by trial and error that I can produce a STL that I can
slice into something useful with slic3r by opening the STL produced by
OpenSCAD in MeshLab and apply the Filter "Cleaning and Repairing" ->
"Remove Duplicate Faces". It still gives errors on some triangles
where the wings hit the center cylinder but who cares if I can slice
it ;)

I had to increasing the calculation resolutions of my loop from 15 to
30 (variables rad_res & chord_res) for those errors at the
intersection between wings and the center cylinder to be small enough
to not have a negative effect on the slicing process.

>
> It's a nice-looking prop, though!

Yes! Thats what I thought as well ;) But any congratulations need to
go to user DMeyer from the thingiverse.com - he did the hard part of
designing that propeller wing.

Thanks & Regards,
Thomas K.


From runsun at gmail.com  Mon May 18 17:14:43 2015
From: runsun at gmail.com (runsun)
Date: Mon, 18 May 2015 14:14:43 -0700 (MST)
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <CAGV6i+M_arN4QtqG_GC-xUTfFbi-8PRbfPu8gMy7VfTP7jd06A@mail.gmail.com>
References: <CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>
	<555471CC.2050307@arnholm.org>
	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
	<5554D43F.2000906@arnholm.org>
	<CAGV6i+PvHK5y_ndqvGshn2A=MBmQdDV6E3VfPxAn1ApUubY22g@mail.gmail.com>
	<20150516123301.7e0c770e@cygnus> <5557BFDD.40808@arnholm.org>
	<CAGV6i+PLf9qrC2vXDEmiUNypM0y630yXPpn_Tbx79fd=YGx4Zw@mail.gmail.com>
	<5557E633.7070701@gmail.com>
	<CAGV6i+M_arN4QtqG_GC-xUTfFbi-8PRbfPu8gMy7VfTP7jd06A@mail.gmail.com>
Message-ID: <1431983683897-12700.post@n5.nabble.com>

doug.moen wrote
> Now I'll copy and paste part of Yona's post, with terminology and syntax
> changed to correspond to my current OpenSCAD 2 design:
> 
> // If we consider { ... } to be an "inline object", you get associative
>> arrays for free:
>> data = {
>>    a = 10;
>>    b = 20;
>> }
>> echo(data.a);
>> // You can create a copy with new values as well
>> data2 = data(b=30, c=100);

I like this idea. For the on-the-fly local var assignment in data(b=30,
c=100), openscad seems to already have this capacity:

  echo( b=30, c=100 );

b,c are local variables created at the run time. 

Also would be great if, other than *data.a*, we can do *x=data["a"]*,
*x=data("a")* (in case it needs to contain space) or even *x=data(a)*.

One more thing, variable name like 3a, 4b are allowed in openscad. Will
data.3a also be allowed ?

And, on top of that, we also need:

   keys(data) ==> ["a","b"]  
   values(data) ==> [10,20]

or data.keys, data.values, such that they can be iterated over. 

This brings up: if we do *[ for(x=data) ...]*, what would x stands for.



-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/eval-tp12627p12700.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Mon May 18 21:37:25 2015
From: doug at moens.org (doug moen)
Date: Mon, 18 May 2015 21:37:25 -0400
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <1431983683897-12700.post@n5.nabble.com>
References: <CAGV6i+OqG4hUoVSv35khTvx+zYvGFyMwt8ruH5XsZVWX7bpgaw@mail.gmail.com>
	<555471CC.2050307@arnholm.org>
	<D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
	<5554D43F.2000906@arnholm.org>
	<CAGV6i+PvHK5y_ndqvGshn2A=MBmQdDV6E3VfPxAn1ApUubY22g@mail.gmail.com>
	<20150516123301.7e0c770e@cygnus> <5557BFDD.40808@arnholm.org>
	<CAGV6i+PLf9qrC2vXDEmiUNypM0y630yXPpn_Tbx79fd=YGx4Zw@mail.gmail.com>
	<5557E633.7070701@gmail.com>
	<CAGV6i+M_arN4QtqG_GC-xUTfFbi-8PRbfPu8gMy7VfTP7jd06A@mail.gmail.com>
	<1431983683897-12700.post@n5.nabble.com>
Message-ID: <CAGV6i+NXGvOyy3UOD26tQOOSkoV4=CvY0L=VDXEAY5SgsnyYjg@mail.gmail.com>

Runsun said:

> Also would be great if, other than *data.a*, we can do *x=data["a"]*,
> *x=data("a")* (in case it needs to contain space) or even *x=data(a)*.


I would vote for data["a"] or data.("a")


> One more thing, variable name like 3a, 4b are allowed in openscad. Will
> data.3a also be allowed ?


Of course.


> And, on top of that, we also need:
>    keys(data) ==> ["a","b"]
>    values(data) ==> [10,20]
> or data.keys, data.values, such that they can be iterated over.


I'll grant the need for keys(data). But values is just
   [for (k=keys(data)) data[k]]
and I don't know that it would be needed often enough to justify as a
builtin.

This brings up: if we do *[ for(x=data) ...]*, what would x stands for.


OpenSCAD scripts are the model for what objects are. An object is a set of
named fields, and a sequence of shapes. Consider:

lollypop = {

  radius = 3;

  diameter = 1;

  height = 10;


  translate([0,0,height]) sphere(r=radius);

  cylinder(d=diameter,h=height);

};


You can use 'lollypop' in any context expecting a shape.

Or you can customize lollypop, eg with a longer stick:

   lollypop(height=20)


You can accomplish something similar with a module definition, but objects
are easier to understand and use.


So lollypop contains two shapes, and behaves like a list of those shapes.

   len(lollypop) == 2

   lollypop[0] == translate([0,0,10]) sphere(r=3)

   lollypop[1] == cylinder(d=1,h=10)

and this answers what "for (x=lollypop) ..." means.


Doug.

On 18 May 2015 at 17:14, runsun <runsun at gmail.com> wrote:

> doug.moen wrote
> > Now I'll copy and paste part of Yona's post, with terminology and syntax
> > changed to correspond to my current OpenSCAD 2 design:
> >
> > // If we consider { ... } to be an "inline object", you get associative
> >> arrays for free:
> >> data = {
> >>    a = 10;
> >>    b = 20;
> >> }
> >> echo(data.a);
> >> // You can create a copy with new values as well
> >> data2 = data(b=30, c=100);
>
> I like this idea. For the on-the-fly local var assignment in data(b=30,
> c=100), openscad seems to already have this capacity:
>
>   echo( b=30, c=100 );
>
> b,c are local variables created at the run time.
>
> Also would be great if, other than *data.a*, we can do *x=data["a"]*,
> *x=data("a")* (in case it needs to contain space) or even *x=data(a)*.
>
> One more thing, variable name like 3a, 4b are allowed in openscad. Will
> data.3a also be allowed ?
>
> And, on top of that, we also need:
>
>    keys(data) ==> ["a","b"]
>    values(data) ==> [10,20]
>
> or data.keys, data.values, such that they can be iterated over.
>
> This brings up: if we do *[ for(x=data) ...]*, what would x stands for.
>
>
>
> -----
>
> $  Runsun Pan, PhD
>
> $ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  )
>
> $ -- hash parameter model: here , here
>
> $ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/eval-tp12627p12700.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150518/1bf1e959/attachment-0001.html>

From runsun at gmail.com  Tue May 19 00:12:44 2015
From: runsun at gmail.com (runsun)
Date: Mon, 18 May 2015 21:12:44 -0700 (MST)
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <CAGV6i+NXGvOyy3UOD26tQOOSkoV4=CvY0L=VDXEAY5SgsnyYjg@mail.gmail.com>
References: <D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
	<5554D43F.2000906@arnholm.org>
	<CAGV6i+PvHK5y_ndqvGshn2A=MBmQdDV6E3VfPxAn1ApUubY22g@mail.gmail.com>
	<20150516123301.7e0c770e@cygnus> <5557BFDD.40808@arnholm.org>
	<CAGV6i+PLf9qrC2vXDEmiUNypM0y630yXPpn_Tbx79fd=YGx4Zw@mail.gmail.com>
	<5557E633.7070701@gmail.com>
	<CAGV6i+M_arN4QtqG_GC-xUTfFbi-8PRbfPu8gMy7VfTP7jd06A@mail.gmail.com>
	<1431983683897-12700.post@n5.nabble.com>
	<CAGV6i+NXGvOyy3UOD26tQOOSkoV4=CvY0L=VDXEAY5SgsnyYjg@mail.gmail.com>
Message-ID: <1432008764380-12703.post@n5.nabble.com>

That's an interesting approach. It'd be great to see it work in the near
future. Thoughts:

1) There will be some way to add new component or remove existing one, right
?

2) One thing that I'd like to see (for any new design in openscad) is for
shapes to bear coordinate info. Unfortunately this new design doesn't have
it. There's a "translate(...)" from which we know where it is, but that's by
reading the code. 

In my coding all the shapes I design have the coordinates as the first
argument. The openscad default usage ( i.e., everything starts from [0,0,0]
) is just a special case. With that, I can build my shape starting on any
coordiate. That saves a lot of brain power trying to figure out how to
rotate and move a new part to fit the existing one. 



doug.moen wrote
> Runsun said:
> 
>> Also would be great if, other than *data.a*, we can do *x=data["a"]*,
>> *x=data("a")* (in case it needs to contain space) or even *x=data(a)*.
> 
> I would vote for data["a"] or data.("a")
> 
>> One more thing, variable name like 3a, 4b are allowed in openscad. Will
>> data.3a also be allowed ?
> 
> Of course.
> 
>> And, on top of that, we also need:
>>    keys(data) ==> ["a","b"]
>>    values(data) ==> [10,20]
>> or data.keys, data.values, such that they can be iterated over.
> 
> I'll grant the need for keys(data). But values is just
>    [for (k=keys(data)) data[k]]
> and I don't know that it would be needed often enough to justify as a
> builtin.
> 
> This brings up: if we do *[ for(x=data) ...]*, what would x stands for.
> 
> OpenSCAD scripts are the model for what objects are. An object is a set of
> named fields, and a sequence of shapes. Consider:
> 
> lollypop = {
>   radius = 3;
>   diameter = 1;
>   height = 10;
> 
>   translate([0,0,height]) sphere(r=radius);
>   cylinder(d=diameter,h=height);
> };
> 
> You can use 'lollypop' in any context expecting a shape.
> Or you can customize lollypop, eg with a longer stick:
> 
>    lollypop(height=20)
> 
> You can accomplish something similar with a module definition, but objects
> are easier to understand and use.
> 
> So lollypop contains two shapes, and behaves like a list of those shapes.
> 
>    len(lollypop) == 2
>    lollypop[0] == translate([0,0,10]) sphere(r=3)
>    lollypop[1] == cylinder(d=1,h=10)
> 
> and this answers what "for (x=lollypop) ..." means.
> 
> Doug.





-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/eval-tp12627p12703.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Tue May 19 08:53:59 2015
From: doug at moens.org (doug moen)
Date: Tue, 19 May 2015 08:53:59 -0400
Subject: [OpenSCAD] eval( ) ???
In-Reply-To: <1432008764380-12703.post@n5.nabble.com>
References: <D79A93C4-C454-4DC4-8BC5-EFC9A6F58DBB@kintel.net>
	<5554D43F.2000906@arnholm.org>
	<CAGV6i+PvHK5y_ndqvGshn2A=MBmQdDV6E3VfPxAn1ApUubY22g@mail.gmail.com>
	<20150516123301.7e0c770e@cygnus> <5557BFDD.40808@arnholm.org>
	<CAGV6i+PLf9qrC2vXDEmiUNypM0y630yXPpn_Tbx79fd=YGx4Zw@mail.gmail.com>
	<5557E633.7070701@gmail.com>
	<CAGV6i+M_arN4QtqG_GC-xUTfFbi-8PRbfPu8gMy7VfTP7jd06A@mail.gmail.com>
	<1431983683897-12700.post@n5.nabble.com>
	<CAGV6i+NXGvOyy3UOD26tQOOSkoV4=CvY0L=VDXEAY5SgsnyYjg@mail.gmail.com>
	<1432008764380-12703.post@n5.nabble.com>
Message-ID: <CAGV6i+NYoD6gvJxUAkaPbcoGE3GnH_ENiCyZKZZ4nicBt3dLtA@mail.gmail.com>

runsun said:
> 1) There will be some way to add new component or remove existing one,
> right?

Yes. An object literal can include all or part of another object, then
define additional components.

> 2) One thing that I'd like to see (for any new design in openscad) is for
> shapes to bear coordinate info. Unfortunately this new design doesn't have
> it. There's a "translate(...)" from which we know where it is, but that's
> by reading the code.
>
> In my coding all the shapes I design have the coordinates as the first
> argument. The openscad default usage ( i.e., everything starts from [0,0,0]
> ) is just a special case. With that, I can build my shape starting on any
> coordiate. That saves a lot of brain power trying to figure out how to
> rotate and move a new part to fit the existing one.

Redefining the way that existing shape primitives work is outside the
scope of my project. (It's already a very big project, and also,
backward compatibility is a requirement.)

However, the object facility that we've been discussing gives you the
ability to add named fields to a shape. So, it should be possible to
create a library that redefines all of the built-in shape primitives,
adding coordinate data as new fields to every shape object created by
the library.


From bobcousins42 at googlemail.com  Tue May 19 14:36:03 2015
From: bobcousins42 at googlemail.com (bobc)
Date: Tue, 19 May 2015 11:36:03 -0700 (MST)
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <1431808495763-12667.post@n5.nabble.com>
References: <1431808495763-12667.post@n5.nabble.com>
Message-ID: <1432060563590-12705.post@n5.nabble.com>

Hmm, no takers. Never mind, I will press on. :)

Just a reminder, the scope here is to look at semantics and what sort of
language extensions might be required, to guide future implementation.

I've been looking at how color is handled on difference() and intersect().
The main issue is how the "cut" face of the result should be colored.
Conventionally, the color is that of the contributing surface. Illustrated
here
http://en.wikipedia.org/wiki/Constructive_solid_geometry#Workings_of_CSG

In various cases, it would be useful to have different behaviour
https://github.com/openscad/openscad/issues/501

After playing around with a version of csg.js (csg.cs), I would like to
propose a simple extension to difference() and union() to allow colors of
the result to be defined in a more flexible way. The method is to add an
"alpha" parameter, which works in the same way as alpha color blending.

For an operation such difference() {a(); b();}, then the color of the cut
surface is color(A).alpha + color(B).(1-alpha), where alpha = [0:1].

The default value would be zero, which corresponds to standard behaviour,
with alpha=1, the color of the original objects is preserved.

If an object has no defined color, then the object with a defined color
takes precedence.

Adding color preservation to csg.cs was quite easy, as there is a property
which can be attached to polygons. With that type of feature, I think it
should be relatively easy to create boolean ops which allow the user to
express a full range of color properties to the result.



--
View this message in context: http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-tp12667p12705.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Tue May 19 16:40:45 2015
From: doug at moens.org (doug moen)
Date: Tue, 19 May 2015 16:40:45 -0400
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <1432060563590-12705.post@n5.nabble.com>
References: <1431808495763-12667.post@n5.nabble.com>
	<1432060563590-12705.post@n5.nabble.com>
Message-ID: <CAGV6i+MiPSxrJgFH4q3YhQQXCXzrGe3mXH8DWoeoniqW+vnEeA@mail.gmail.com>

My interest in OpenSCAD is in constructing solid models for 3D printing. I
have access to multicolor printers, although I've not used the color()
operator for that purpose (in fact I don't think it's supported for that
purpose).

You said "It's already been noted on this list that the CSG ops designed
for image
generation don't necessarily match the semantics of solid modelling for
manufacturing."

Since I only care about solid modelling for manufacturing, I'd like the
color() operator to apply a color to an entire solid volume. My
understanding after reading the color() entry in the documentation was that
it does colour an entire volume. But I could be wrong: apparently right now
it effectively applies color to surfaces or faces, and has surprising (to
me) semantics for difference, but that behaviour only manifests during
preview, and it's to help with debugging.

I looked at the AMF file format documentation, and that standard does
support applying color to a solid volume, but also to a triangle or vertex.
There are 3D printer toolchains (eg Cura) that support AMF color for
multicolor printing, but apparently our AMF export doesn't support that
yet? For AMF Cura support, I assume we want color() to apply to volumes,
not to surfaces. It's theoretically possible that other people might want
the ability to apply colour to surfaces for AMF export, but I'm not aware
of what actual use cases, if any, that would support.

In issue 1304, Marius Kintel said "The challenge is that color information
isn't preserved across CSG operation boundaries", and bobc said "'the main
challenge is to get the CSG operations to support colors/materials' -- I
think that challenge is extremely hard, both semantically and
implementation wise. So hard that I suggest avoiding it. In the case of
union, what properties should the intersection have? Remember we want to
support material properties other than color. We would need a blending
function to specify the properties of the intersection. Even providing a
sensible default is problematic."

I could live with a simple minded approach to solving this problem.

   1. A multi-material object is represented as a group of shapes, where
   each shape in the group has a single material/colour.
   2. On conversion to AMF, I expect each shape in the group to be
   converted to a separate volume in AMF. If there are overlapping shapes,
   then it is up to the AMF consumer to decide what to do.
   3. Union cheats: it refuses to union two shapes with different
   colour/material. But if two shapes in the group have the same material,
   they are unioned. So union may return a group. Yes, it's true that two
   objects of different colour might overlap, and union isn't dealing with the
   situation, but I'm prepared to live with that.
   4. Difference removes the first shape from each remaining shape in the
   group. The color of the first shape has no effect on the colour of the
   shapes in the output.
   5. Intersection, Hull and Minkowski are more difficult, since there is
   no mathematically preferred behaviour. So we arbitrarily choose the colour
   and material of the first object, and that is applied to the result.


On 19 May 2015 at 14:36, bobc <bobcousins42 at googlemail.com> wrote:

> Hmm, no takers. Never mind, I will press on. :)
>
> Just a reminder, the scope here is to look at semantics and what sort of
> language extensions might be required, to guide future implementation.
>
> I've been looking at how color is handled on difference() and intersect().
> The main issue is how the "cut" face of the result should be colored.
> Conventionally, the color is that of the contributing surface. Illustrated
> here
> http://en.wikipedia.org/wiki/Constructive_solid_geometry#Workings_of_CSG
>
> In various cases, it would be useful to have different behaviour
> https://github.com/openscad/openscad/issues/501
>
> After playing around with a version of csg.js (csg.cs), I would like to
> propose a simple extension to difference() and union() to allow colors of
> the result to be defined in a more flexible way. The method is to add an
> "alpha" parameter, which works in the same way as alpha color blending.
>
> For an operation such difference() {a(); b();}, then the color of the cut
> surface is color(A).alpha + color(B).(1-alpha), where alpha = [0:1].
>
> The default value would be zero, which corresponds to standard behaviour,
> with alpha=1, the color of the original objects is preserved.
>
> If an object has no defined color, then the object with a defined color
> takes precedence.
>
> Adding color preservation to csg.cs was quite easy, as there is a property
> which can be attached to polygons. With that type of feature, I think it
> should be relatively easy to create boolean ops which allow the user to
> express a full range of color properties to the result.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-tp12667p12705.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150519/d96cf9b3/attachment.html>

From marius at kintel.net  Wed May 20 10:28:45 2015
From: marius at kintel.net (kintel)
Date: Wed, 20 May 2015 07:28:45 -0700 (MST)
Subject: [OpenSCAD] gui doesn't work in new version
In-Reply-To: <1432110453836-12707.post@n5.nabble.com>
References: <1432110453836-12707.post@n5.nabble.com>
Message-ID: <1432132125109-12708.post@n5.nabble.com>

What specifically do you mean by "does not work" ?
Any errors? does it just quit? does it crash?

For the Event Log, see e.g.
http://windows.microsoft.com/en-us/windows/open-event-viewer

Could you try without using an USB-display adapter, to see if that causes
the problem?

 -Marius




--
View this message in context: http://forum.openscad.org/gui-doesn-t-work-in-new-version-tp12707p12708.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Wed May 20 11:59:46 2015
From: runsun at gmail.com (runsun)
Date: Wed, 20 May 2015 08:59:46 -0700 (MST)
Subject: [OpenSCAD] Coordinate flips between right/left-handed
Message-ID: <1432137586152-12709.post@n5.nabble.com>

I notice that the coordinate in the preview window sometimes flips between
right-handed and left handed during rotation (by mouse). The coordinate
symbol on the left-bottom corner flips as well: 
         z                             |                              |                         
o------ y             /                            /                       
x                    z                             |                             
|                          o------ x             /                           
/                        y        
In some of my designs, the handedness is crucial. Flipping in the middle of
rotation is annoying. The data inside as well as calculation involved
remains correct (took me a while to verify that), but it just looks wrong
sometimes, and looks right sometimes.

Is it a bug or by design ? I can't see the benefit of this flipping. 

Observed with OpenSCAD linux 64 in both of the following versions:

 -- 2015.03 
 -- 2015.04.16.nightly (git 4d3800c) 




-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Coordinate-flips-between-right-left-handed-tp12709.html
Sent from the OpenSCAD mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150520/1fe3e8ae/attachment.html>

From marius at kintel.net  Wed May 20 12:25:54 2015
From: marius at kintel.net (Marius Kintel)
Date: Wed, 20 May 2015 12:25:54 -0400
Subject: [OpenSCAD] Coordinate flips between right/left-handed
In-Reply-To: <1432137586152-12709.post@n5.nabble.com>
References: <1432137586152-12709.post@n5.nabble.com>
Message-ID: <E8C99626-92D8-481C-A647-07C87EE004A3@kintel.net>

On May 20, 2015, at 11:59 AM, runsun <runsun at gmail.com> wrote:

> I notice that the coordinate in the preview window sometimes flips between right-handed and left handed during rotation (by mouse).
[?]

> Is it a bug or by design ? I can't see the benefit of this flipping. 
> 
We don?t flip.
Are you sure this is just not you being confused about the camera position?
Not sure how we could make the visualization more clear..

 -Marius



From runsun at gmail.com  Wed May 20 14:11:06 2015
From: runsun at gmail.com (runsun)
Date: Wed, 20 May 2015 11:11:06 -0700 (MST)
Subject: [OpenSCAD] Coordinate flips between right/left-handed
In-Reply-To: <E8C99626-92D8-481C-A647-07C87EE004A3@kintel.net>
References: <1432137586152-12709.post@n5.nabble.com>
	<E8C99626-92D8-481C-A647-07C87EE004A3@kintel.net>
Message-ID: <1432145466611-12711.post@n5.nabble.com>

It could be an optical illusion on my sight. I'll see if I can come up with
something to prove me wrong. 



-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Coordinate-flips-between-right-left-handed-tp12709p12711.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From bobcousins42 at googlemail.com  Wed May 20 14:31:23 2015
From: bobcousins42 at googlemail.com (Bob Cousins)
Date: Wed, 20 May 2015 19:31:23 +0100
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <CAGV6i+MiPSxrJgFH4q3YhQQXCXzrGe3mXH8DWoeoniqW+vnEeA@mail.gmail.com>
References: <1431808495763-12667.post@n5.nabble.com>
	<1432060563590-12705.post@n5.nabble.com>
	<CAGV6i+MiPSxrJgFH4q3YhQQXCXzrGe3mXH8DWoeoniqW+vnEeA@mail.gmail.com>
Message-ID: <CAOcn1Au2xVDZr4WsJjmy7pg0mmX1Poj4bZ0Wpxp6mQi=vEBOYA@mail.gmail.com>

Thanks for your thoughts, some good ideas there I think.

You are right about AMF, the color attribute is supported at all levels
from object down to vertex. Materials can be specified at the object or
volume level. Although we are dealing with materials in FDM/FFF, I was
hoping to create a general purpose solution. In principle, FDM can support
colored surfaces in the slicer.

I was hoping that handling surface colors would be a little easier than
handling volumes but I think that was optimistic, it appears preserving
surface colors depends on preserving volume boundaries. I will need to
bring forward the rework required in my csg code to support volumes to
further investigate.

On 3), AMF requires volumes to be non-overlapping, so I think that would
need to be preserved in the internal representation.

I found Don Bright's blog, he discusses some of the issues quite well
https://sozvyezdami.wordpress.com/2013/02/03/on-adding-colors-to-cgals-nef-polyhedron/
He suggests a new operation "color_union", to reflect the different
semantics. I would prefer to use union() if that can be made backward
compatible, but I'm not sure it can.

bob

On 19 May 2015 at 21:40, doug moen <doug at moens.org> wrote:

> My interest in OpenSCAD is in constructing solid models for 3D printing. I
> have access to multicolor printers, although I've not used the color()
> operator for that purpose (in fact I don't think it's supported for that
> purpose).
>
> You said "It's already been noted on this list that the CSG ops designed
> for image
> generation don't necessarily match the semantics of solid modelling for
> manufacturing."
>
> Since I only care about solid modelling for manufacturing, I'd like the
> color() operator to apply a color to an entire solid volume. My
> understanding after reading the color() entry in the documentation was that
> it does colour an entire volume. But I could be wrong: apparently right now
> it effectively applies color to surfaces or faces, and has surprising (to
> me) semantics for difference, but that behaviour only manifests during
> preview, and it's to help with debugging.
>
> I looked at the AMF file format documentation, and that standard does
> support applying color to a solid volume, but also to a triangle or vertex.
> There are 3D printer toolchains (eg Cura) that support AMF color for
> multicolor printing, but apparently our AMF export doesn't support that
> yet? For AMF Cura support, I assume we want color() to apply to volumes,
> not to surfaces. It's theoretically possible that other people might want
> the ability to apply colour to surfaces for AMF export, but I'm not aware
> of what actual use cases, if any, that would support.
>
> In issue 1304, Marius Kintel said "The challenge is that color
> information isn't preserved across CSG operation boundaries", and bobc
> said "'the main challenge is to get the CSG operations to support
> colors/materials' -- I think that challenge is extremely hard, both
> semantically and implementation wise. So hard that I suggest avoiding it.
> In the case of union, what properties should the intersection have?
> Remember we want to support material properties other than color. We would
> need a blending function to specify the properties of the intersection.
> Even providing a sensible default is problematic."
>
> I could live with a simple minded approach to solving this problem.
>
>    1. A multi-material object is represented as a group of shapes, where
>    each shape in the group has a single material/colour.
>    2. On conversion to AMF, I expect each shape in the group to be
>    converted to a separate volume in AMF. If there are overlapping shapes,
>    then it is up to the AMF consumer to decide what to do.
>    3. Union cheats: it refuses to union two shapes with different
>    colour/material. But if two shapes in the group have the same material,
>    they are unioned. So union may return a group. Yes, it's true that two
>    objects of different colour might overlap, and union isn't dealing with the
>    situation, but I'm prepared to live with that.
>    4. Difference removes the first shape from each remaining shape in the
>    group. The color of the first shape has no effect on the colour of the
>    shapes in the output.
>    5. Intersection, Hull and Minkowski are more difficult, since there is
>    no mathematically preferred behaviour. So we arbitrarily choose the colour
>    and material of the first object, and that is applied to the result.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150520/3b15be3a/attachment.html>

From bobcousins42 at googlemail.com  Wed May 20 14:35:55 2015
From: bobcousins42 at googlemail.com (Bob Cousins)
Date: Wed, 20 May 2015 19:35:55 +0100
Subject: [OpenSCAD] Coordinate flips between right/left-handed
In-Reply-To: <E8C99626-92D8-481C-A647-07C87EE004A3@kintel.net>
References: <1432137586152-12709.post@n5.nabble.com>
	<E8C99626-92D8-481C-A647-07C87EE004A3@kintel.net>
Message-ID: <CAOcn1Au7AzQQtcsh+baEd7JewU+aMWbWosg=gA-ybhmbKnVa+Q@mail.gmail.com>

> Not sure how we could make the visualization more clear..

I guess this is classic problem with 3d in 2d, like the Necker cube
illusion.

Perhaps resize the axis letters to indicate if they are going "in" or "out"
of the screen. Maybe also could do something with shading of the colors in
the axis lines.

On 20 May 2015 at 17:25, Marius Kintel <marius at kintel.net> wrote:

> On May 20, 2015, at 11:59 AM, runsun <runsun at gmail.com> wrote:
>
> > I notice that the coordinate in the preview window sometimes flips
> between right-handed and left handed during rotation (by mouse).
> [?]
>
> > Is it a bug or by design ? I can't see the benefit of this flipping.
> >
> We don?t flip.
> Are you sure this is just not you being confused about the camera position?
> Not sure how we could make the visualization more clear..
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150520/61d34020/attachment.html>

From runsun at gmail.com  Wed May 20 15:01:21 2015
From: runsun at gmail.com (runsun)
Date: Wed, 20 May 2015 12:01:21 -0700 (MST)
Subject: [OpenSCAD] Coordinate flips between right/left-handed
In-Reply-To: <E8C99626-92D8-481C-A647-07C87EE004A3@kintel.net>
References: <1432137586152-12709.post@n5.nabble.com>
	<E8C99626-92D8-481C-A647-07C87EE004A3@kintel.net>
Message-ID: <1432148481365-12714.post@n5.nabble.com>

You are right. I see what happened now. The two coordinates I show are
actually the same thing, the top one has the origin farther away from the
plane XYZ (concave), the bottom one has it near viewer (convex). 

kintel wrote
> Not sure how we could make the visualization more clear..

There might be a way, inspired by the structure display in organic chemistry
text book:

<http://forum.openscad.org/file/n12714/openscad_concaveness.png> 



-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Coordinate-flips-between-right-left-handed-tp12709p12714.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Thu May 21 01:33:38 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Wed, 20 May 2015 22:33:38 -0700 (MST)
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <CAOcn1Au2xVDZr4WsJjmy7pg0mmX1Poj4bZ0Wpxp6mQi=vEBOYA@mail.gmail.com>
References: <1431808495763-12667.post@n5.nabble.com>
	<1432060563590-12705.post@n5.nabble.com>
	<CAGV6i+MiPSxrJgFH4q3YhQQXCXzrGe3mXH8DWoeoniqW+vnEeA@mail.gmail.com>
	<CAOcn1Au2xVDZr4WsJjmy7pg0mmX1Poj4bZ0Wpxp6mQi=vEBOYA@mail.gmail.com>
Message-ID: <1432186418462-12718.post@n5.nabble.com>

Focusing on Volumes would support FFF/FDM where multiple nozzles are used for
multi colour/material where each volume represents one material/colour and
hence any 'bit' of space is one or the other. However, and I'm sure I'm not
telling you how to suck eggs, it is more complicated.

There are however multiple material/colour extruders  (1)
<http://richrap.blogspot.com/2012/08/3-way-quick-fit-extruder-and-colour.html>  
(2) <http://reprap.org/wiki/Diamond_Hotend>   with a single mixing nozzle
where the properties of a particular 'bit' of space is some combination of
materials/colours based (in one simplistic way) as a ratio of the inputs,
but could presumably be expressed in many ways. (I think Don's blog was
written before these became more available). 

Other technology has a white powder base and then uses an ink-jet printer to
colour & bind the layer.

This  paper
<http://reprap.org/mediawiki/images/a/a5/Pia-taubert-material-mixing-report.pdf>  
proposes a reprap style six feed mixer with CMY + B + W for full spectrum
colour output.

color() is currently RGB which is not so suited to FFF/FDM colour
specification as it is additive (255,255,255 = white, whereas in plastic
that = black). A subtractive colour space  CMYK
<http://en.wikipedia.org/wiki/CMYK_color_model>   is more suited to FFF/FDM
colour mixing, but not to the likes of the ink-jet machines. Apparently
conversion between RGB & CMYK is not straight forward.

Also colour is one attribute of a material, ie blue PLA, red ABS, black
NijaFlex, white Nylon. The mixing nozzles can combine both materials and
colours. Other technology can mix material (which is white/transparent) with
different properties, then add colour, so for example, you could have a
gradual shift of flexibility/hardness, irrespective of the colour pattern
across that span. (transparency introduces alpha as another property)

Then there is surface colours, I haven't look into this much, but  Shapeways
<https://www.shapeways.com/tutorials/exporting_to_vrml_and_x3d_for_color_printing>  
for example can use either per face colour (easy?) or  UV texture maps
<http://en.wikipedia.org/w/index.php?title=UV_mapping>  . Which may be more
in the realm of other 3D modelling software.

I don't have the solution, but it looks like material & colour (& alpha?)
are required, there is probably more that I haven't conceived.







-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-tp12667p12718.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Thu May 21 10:46:57 2015
From: doug at moens.org (doug moen)
Date: Thu, 21 May 2015 10:46:57 -0400
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <1432186418462-12718.post@n5.nabble.com>
References: <1431808495763-12667.post@n5.nabble.com>
	<1432060563590-12705.post@n5.nabble.com>
	<CAGV6i+MiPSxrJgFH4q3YhQQXCXzrGe3mXH8DWoeoniqW+vnEeA@mail.gmail.com>
	<CAOcn1Au2xVDZr4WsJjmy7pg0mmX1Poj4bZ0Wpxp6mQi=vEBOYA@mail.gmail.com>
	<1432186418462-12718.post@n5.nabble.com>
Message-ID: <CAGV6i+OzhO-jwnAP_uegtENO257nckiTgTqQr=Ft6=th6HSRrQ@mail.gmail.com>

Yes, these are all issues that need to be dealt with at some point in the
3D printer toolchain. However, unless we are inventing a new 3D model file
format, we only worry about supporting features that are present in popular
3D model file formats that we currently export or would like to export in
the future.

You talk about different color spaces (RGB vs CMYK for example), but I
think we are too high up in the toolchain to worry about this. The only
color space supported by AMF is sRGB, which is the standard RGB colour
space that everybody in the computer industry uses. Are there any popular
3D model file formats that support anything other than sRGB? I haven't
found that, but maybe someone else has deeper insight.

Multi-material 3D printers have the potential ability to build objects out
of composite materials that are created on the fly by alternating between
different materials at the sub-millimeter scale, or by fusing together
different materials in varying ratios. And that's fascinating, but what
toolchains exist that let you do this? AMF has some features for supporting
this, but are there any slicers that support these features of AMF? If
there are, then we have a target that we can work towards. If not, then it
might be premature for us to design language features that can't be used by
any toolchain.

Shapeways has designed the SVX voxel file format that supports multiple
materials and RGB colours. It looks like it supports fine grained
composites and objects with fine grained structure. This is a real
toolchain that we could consider supporting. The types of models that would
benefit from this format have huge numbers of triangles, and I wonder if
the OpenSCAD geometry engine is up to the task of creating the necessary
meshes in the first place. To quote Shapeways, *"One promise of 3D printing
is that complexity is free. Sadly with STL files we?ve had the disconnect
that more complexity equals more triangles equals larger files. Above a
certain limit you just can?t use triangles to specify the details you want
in a 3D printed model."*

The Shapeways quote suggests that OpenSCAD needs to move beyond triangular
meshes in order to fully support complex 3D printed models with fine
grained structure. For example, we could support a hybrid system where
coarse grained features are specified by solids, represented by meshes, as
today, but fine grained features are specified "procedurally" by continuous
functions that map (x,y,z) onto materials. OpenSCAD could export this kind
of model to SVX by using an internal slicing engine.

If we use this approach, then we'll have an operation that attaches a
material function to a solid. Then we are left with the problem of
generalizing the CSG operations so that union, intersection, etc of solids
with attached material functions does something predictable, which is not
that different from Bob's original goal at the start of this thread.

As before, I am not sure that the way forward involves defining CSG
operations on colours and materials. What is the union of red and blue? Is
it different from the intersection of red and blue? What is the
intersection of PLA and Ninjaflex? I don't see how these questions make
sense, or that a system that gave answers would be useful. So I would be
happy with a simple CSG implementation that sidesteps these issues, as I
suggested earlier.

On 21 May 2015 at 01:33, MichaelAtOz <oz.at.michael at gmail.com> wrote:

> Focusing on Volumes would support FFF/FDM where multiple nozzles are used
> for
> multi colour/material where each volume represents one material/colour and
> hence any 'bit' of space is one or the other. However, and I'm sure I'm not
> telling you how to suck eggs, it is more complicated.
>
> There are however multiple material/colour extruders  (1)
> <
> http://richrap.blogspot.com/2012/08/3-way-quick-fit-extruder-and-colour.html
> >
> (2) <http://reprap.org/wiki/Diamond_Hotend>   with a single mixing nozzle
> where the properties of a particular 'bit' of space is some combination of
> materials/colours based (in one simplistic way) as a ratio of the inputs,
> but could presumably be expressed in many ways. (I think Don's blog was
> written before these became more available).
>
> Other technology has a white powder base and then uses an ink-jet printer
> to
> colour & bind the layer.
>
> This  paper
> <
> http://reprap.org/mediawiki/images/a/a5/Pia-taubert-material-mixing-report.pdf
> >
> proposes a reprap style six feed mixer with CMY + B + W for full spectrum
> colour output.
>
> color() is currently RGB which is not so suited to FFF/FDM colour
> specification as it is additive (255,255,255 = white, whereas in plastic
> that = black). A subtractive colour space  CMYK
> <http://en.wikipedia.org/wiki/CMYK_color_model>   is more suited to
> FFF/FDM
> colour mixing, but not to the likes of the ink-jet machines. Apparently
> conversion between RGB & CMYK is not straight forward.
>
> Also colour is one attribute of a material, ie blue PLA, red ABS, black
> NijaFlex, white Nylon. The mixing nozzles can combine both materials and
> colours. Other technology can mix material (which is white/transparent)
> with
> different properties, then add colour, so for example, you could have a
> gradual shift of flexibility/hardness, irrespective of the colour pattern
> across that span. (transparency introduces alpha as another property)
>
> Then there is surface colours, I haven't look into this much, but
> Shapeways
> <
> https://www.shapeways.com/tutorials/exporting_to_vrml_and_x3d_for_color_printing
> >
> for example can use either per face colour (easy?) or  UV texture maps
> <http://en.wikipedia.org/w/index.php?title=UV_mapping>  . Which may be
> more
> in the realm of other 3D modelling software.
>
> I don't have the solution, but it looks like material & colour (& alpha?)
> are required, there is probably more that I haven't conceived.
>
>
>
>
>
>
>
> -----
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; To the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work. This work is
> published globally via the internet. :) Inclusion of works of previous
> authors is not included in the above.
>
> The TPP is no simple ?trade agreement.?   Fight it!
> http://www.ourfairdeal.org/
> --
> View this message in context:
> http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-tp12667p12718.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150521/900562da/attachment.html>

From alejandro at sur3d.com  Thu May 21 10:58:03 2015
From: alejandro at sur3d.com (loskiorama)
Date: Thu, 21 May 2015 07:58:03 -0700 (MST)
Subject: [OpenSCAD] How to chenge the background color when exporting PNGs.
Message-ID: <1432220283331-12721.post@n5.nabble.com>

I'm using the command line export to PNG option.
and I'd like the background color to be white on the exported images insted
of the yelowwish that comes by default.

How could I do this?

Best!



--
View this message in context: http://forum.openscad.org/How-to-chenge-the-background-color-when-exporting-PNGs-tp12721.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From biskero at gmail.com  Thu May 21 17:56:31 2015
From: biskero at gmail.com (biskero)
Date: Thu, 21 May 2015 14:56:31 -0700 (MST)
Subject: [OpenSCAD] Multi material support and AMF
Message-ID: <1432245391300-12722.post@n5.nabble.com>

Ciao,

I read the wifi and some other threads about multi material supports
Any more details about this topic?
Did not found any module/function in Openscad to define multi material.




--
View this message in context: http://forum.openscad.org/Multi-material-support-and-AMF-tp12722.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Thu May 21 18:41:22 2015
From: doug at moens.org (doug moen)
Date: Thu, 21 May 2015 18:41:22 -0400
Subject: [OpenSCAD] Multi material support and AMF
In-Reply-To: <1432245391300-12722.post@n5.nabble.com>
References: <1432245391300-12722.post@n5.nabble.com>
Message-ID: <CAGV6i+PvjVQt-YJMvE=no068mLb1JNOQzmGjt-kisze4neU8jw@mail.gmail.com>

There's another active thread, "Semantics CSG ops with respect to color,
materials", where we are trying to agree on how this would work. So not yet.

On 21 May 2015 at 17:56, biskero <biskero at gmail.com> wrote:

> Ciao,
>
> I read the wifi and some other threads about multi material supports
> Any more details about this topic?
> Did not found any module/function in Openscad to define multi material.
>
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Multi-material-support-and-AMF-tp12722.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150521/6795cf1a/attachment.html>

From oz.at.michael at gmail.com  Fri May 22 04:31:25 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 22 May 2015 01:31:25 -0700 (MST)
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <CAGV6i+OzhO-jwnAP_uegtENO257nckiTgTqQr=Ft6=th6HSRrQ@mail.gmail.com>
References: <1431808495763-12667.post@n5.nabble.com>
	<1432060563590-12705.post@n5.nabble.com>
	<CAGV6i+MiPSxrJgFH4q3YhQQXCXzrGe3mXH8DWoeoniqW+vnEeA@mail.gmail.com>
	<CAOcn1Au2xVDZr4WsJjmy7pg0mmX1Poj4bZ0Wpxp6mQi=vEBOYA@mail.gmail.com>
	<1432186418462-12718.post@n5.nabble.com>
	<CAGV6i+OzhO-jwnAP_uegtENO257nckiTgTqQr=Ft6=th6HSRrQ@mail.gmail.com>
Message-ID: <1432283485194-12724.post@n5.nabble.com>

Note previous discussions  (1)
<http://forum.openscad.org/Multi-material-support-was-Re-OpenSCAD-3000-td8613.html>  

Lets talk practicality, not theory.

I'm building my second 3D printer, an  Ordbot 300x300
<http://3dtek.xyz/products/ordbot-3d-printer?variant=1016428807>  , but have
not selected my extruder yet.

I want to expand beyond single material, so two main options, 
a. multiple extruder/hotend sets (the old main material plus support
material or two+ colour setup)
b. multiple extruder with mixing hotend. (for this discussion say  Diamond
Hotend <http://reprap.org/wiki/Diamond_Hotend>  )

At the moment a. is supported, for support material this is in the slicer,
or using two+ STLs merged in some slicers. 
While b. would similarly be supported when not mixing, but just using one
extruder at a time.
So there is the c. case where it could mix up to three materials, this is
where smart things can happen.

Let"s have a simple example. No difference() or intersection() & just
implicit union()

color("red") 
	linear_extrude(height=2)
		translate([0,1,0])
		text("Hello");
color("grey",1)
	cube([32,12,2]);

<http://forum.openscad.org/file/n12724/multi_a.jpg> 
Which currently has issues with co-planar faces. Ideally it should be
printable without too much embellishment.

Note also a variation of this where the grey has an alpha < 1. This
currently displays for F5 nicely (except co-planar faces) to reflect what
would happen if a translucent material is used.
<http://forum.openscad.org/file/n12724/multi_b.jpg> 

Q? Can we, should we, automajically fix co-planar faces? Based on order?
Probably not.

So to fix the co-planar issue and clearly define what I want, it looks like
something like this is required:

module t(h=2,zAdjust=0) {
color("red") 
	translate([0,0,-zAdjust])
		linear_extrude(height=h+zAdjust*2, convexity=10)
			translate([0,1,0])
			text("Hello");
}

module c(h=2)
color("grey",0.5) // note alpha is lost 
	cube([32,12,h]);

union() { // showing to represent the implicit
		difference() { // the grey volume
			c();
			t(zAdjust=0.2);
		}
		t(); // the red volume

<http://forum.openscad.org/file/n12724/multi_c.jpg> 
Of course F6 render loses all that so something like:

module t(h=2,zAdjust=0) {
echo(h=h,zAdjust);
color("red") 
	translate([0,0,-zAdjust])
		linear_extrude(height=h+zAdjust*2, convexity=10)
			translate([0,1,0])
			text("Hello");
}

module c(h=2)
color("grey",0.5) // note alpha is lost 
	cube([32,12,h]);

module part(p=0)
	if (p==MainPart)
		children();

MainPart=0;
union() { // showing to represent the implicit
		part(p=0) difference() { // the grey volume
			c();
			t(zAdjust=0.2);
		}
		part(p=1) t(); // the red volume
}

With an export to STL for each part.

So for AMF or other multi-aware formats a simplistic approach would be to
flag the material with something similar to part() and let the user manually
make the distinct parts, as above.

Or we could try to make the union() intersection() etc, material aware. 

The simple approach would support extruder options a. & b. above, but would
not be able to control c. the mixed extruder. (baring difficult manually
slicing using a range of materials, a PITA).

(time to take a break)









-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-tp12667p12724.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From biskero at gmail.com  Fri May 22 04:34:42 2015
From: biskero at gmail.com (biskero)
Date: Fri, 22 May 2015 01:34:42 -0700 (MST)
Subject: [OpenSCAD] Multi material support and AMF
In-Reply-To: <CAGV6i+PvjVQt-YJMvE=no068mLb1JNOQzmGjt-kisze4neU8jw@mail.gmail.com>
References: <1432245391300-12722.post@n5.nabble.com>
	<CAGV6i+PvjVQt-YJMvE=no068mLb1JNOQzmGjt-kisze4neU8jw@mail.gmail.com>
Message-ID: <1432283682569-12725.post@n5.nabble.com>

Ciao,

thanks a lot I will look into the thread.




--
View this message in context: http://forum.openscad.org/Multi-material-support-and-AMF-tp12722p12725.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From biskero at gmail.com  Fri May 22 04:45:37 2015
From: biskero at gmail.com (biskero)
Date: Fri, 22 May 2015 01:45:37 -0700 (MST)
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <1432283485194-12724.post@n5.nabble.com>
References: <1431808495763-12667.post@n5.nabble.com>
	<1432060563590-12705.post@n5.nabble.com>
	<CAGV6i+MiPSxrJgFH4q3YhQQXCXzrGe3mXH8DWoeoniqW+vnEeA@mail.gmail.com>
	<CAOcn1Au2xVDZr4WsJjmy7pg0mmX1Poj4bZ0Wpxp6mQi=vEBOYA@mail.gmail.com>
	<1432186418462-12718.post@n5.nabble.com>
	<CAGV6i+OzhO-jwnAP_uegtENO257nckiTgTqQr=Ft6=th6HSRrQ@mail.gmail.com>
	<1432283485194-12724.post@n5.nabble.com>
Message-ID: <1432284337044-12726.post@n5.nabble.com>

Ciao,

I read the thread and looks very interesting. I am new here so hopefully I
am not out of space in what I say! :)
I am building a large 3D printer with multi materials and I am interested in
a Openscad solution to this.

So the first idea that would come to my mind is to have multi material per
different layers based on a simple %. Let say you have an object with hight
or thickness of 10mm, I would specify to have 25% layers alternate the
materials between the one you choose. Does it make sense?

Right know I have a very large object 1000mm and I need to alternate 2 or 3
materials based on layers so that I would have a sandwich of 3 layers with 3
materials.

Isn't the AMF format suitable for that?
Thanks in advance!



--
View this message in context: http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-tp12667p12726.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From doug at moens.org  Fri May 22 09:15:40 2015
From: doug at moens.org (doug moen)
Date: Fri, 22 May 2015 09:15:40 -0400
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <1432284337044-12726.post@n5.nabble.com>
References: <1431808495763-12667.post@n5.nabble.com>
	<1432060563590-12705.post@n5.nabble.com>
	<CAGV6i+MiPSxrJgFH4q3YhQQXCXzrGe3mXH8DWoeoniqW+vnEeA@mail.gmail.com>
	<CAOcn1Au2xVDZr4WsJjmy7pg0mmX1Poj4bZ0Wpxp6mQi=vEBOYA@mail.gmail.com>
	<1432186418462-12718.post@n5.nabble.com>
	<CAGV6i+OzhO-jwnAP_uegtENO257nckiTgTqQr=Ft6=th6HSRrQ@mail.gmail.com>
	<1432283485194-12724.post@n5.nabble.com>
	<1432284337044-12726.post@n5.nabble.com>
Message-ID: <CAGV6i+NQKU1UQg+_nRWpxYOc17Yng7Lvuuw26s1dwsE8RUp6BA@mail.gmail.com>

Hi, Biskero, that's an interesting requirement.

I'm not sure if AMF is suitable for this. You could explicitly break up
your object into a series of layers, with each layer represented as a
triangle mesh, but that would kind of suck: you'd get a huge file, and you
might run into some limits on model size (either OpenSCAD or the slicer
might choke on the number of triangles). There might be a clever way to
encode this in AMF, where you configure the slicer to generate alternate
layers of different materials if it sees [something clever] in the AMF
representation, but I don't have a specific proposal.

It's easy to see how to do this with the SVX file format, since the object
is represented as a stack of layers.

I'm quite enthusiastic about SVX, because it's so simple and yet so
powerful. It should be a lot easier to write a slicer that converts SVX to
gcode than to convert STL to gcode. I'm not sure if anybody in the open
source community is working on this yet, but I think SVX support will open
up new possibilities for multi-material printing on open source 3D printers.

On 22 May 2015 at 04:45, biskero <biskero at gmail.com> wrote:

> Ciao,
>
> I read the thread and looks very interesting. I am new here so hopefully I
> am not out of space in what I say! :)
> I am building a large 3D printer with multi materials and I am interested
> in
> a Openscad solution to this.
>
> So the first idea that would come to my mind is to have multi material per
> different layers based on a simple %. Let say you have an object with hight
> or thickness of 10mm, I would specify to have 25% layers alternate the
> materials between the one you choose. Does it make sense?
>
> Right know I have a very large object 1000mm and I need to alternate 2 or 3
> materials based on layers so that I would have a sandwich of 3 layers with
> 3
> materials.
>
> Isn't the AMF format suitable for that?
> Thanks in advance!
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-tp12667p12726.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150522/1ada57a9/attachment.html>

From biskero at gmail.com  Fri May 22 09:27:38 2015
From: biskero at gmail.com (biskero)
Date: Fri, 22 May 2015 06:27:38 -0700 (MST)
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <CAGV6i+NQKU1UQg+_nRWpxYOc17Yng7Lvuuw26s1dwsE8RUp6BA@mail.gmail.com>
References: <1431808495763-12667.post@n5.nabble.com>
	<1432060563590-12705.post@n5.nabble.com>
	<CAGV6i+MiPSxrJgFH4q3YhQQXCXzrGe3mXH8DWoeoniqW+vnEeA@mail.gmail.com>
	<CAOcn1Au2xVDZr4WsJjmy7pg0mmX1Poj4bZ0Wpxp6mQi=vEBOYA@mail.gmail.com>
	<1432186418462-12718.post@n5.nabble.com>
	<CAGV6i+OzhO-jwnAP_uegtENO257nckiTgTqQr=Ft6=th6HSRrQ@mail.gmail.com>
	<1432283485194-12724.post@n5.nabble.com>
	<1432284337044-12726.post@n5.nabble.com>
	<CAGV6i+NQKU1UQg+_nRWpxYOc17Yng7Lvuuw26s1dwsE8RUp6BA@mail.gmail.com>
Message-ID: <1432301258982-12728.post@n5.nabble.com>

Ciao Doug,

thanks for the answer.
As I am approaching 3D printing I put my mind is thinking of "layers" more
than objects/volume as 3d printing is based on layers.
Now you could go further and say one layer can be done with multiple
color/material but that's more an extension. But the base are layers.

Here is a great example on why this "layer thinking" in 3D is important:
https://www.youtube.com/watch?v=nbuu7UD2GVk

Carbon Fiber, Nylon, Kevlar, Fiber Glass and more materials are printed to
get production parts.
I am working on a project that is based on using Carbon Fiber and Nylon
filaments and need to layer these materials in a logical way to achieve the
strength I want on different parts of the object.

Alessandro



--
View this message in context: http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-tp12667p12728.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From bobcousins42 at googlemail.com  Fri May 22 10:01:04 2015
From: bobcousins42 at googlemail.com (Bob Cousins)
Date: Fri, 22 May 2015 15:01:04 +0100
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <1432284337044-12726.post@n5.nabble.com>
References: <1431808495763-12667.post@n5.nabble.com>
	<1432060563590-12705.post@n5.nabble.com>
	<CAGV6i+MiPSxrJgFH4q3YhQQXCXzrGe3mXH8DWoeoniqW+vnEeA@mail.gmail.com>
	<CAOcn1Au2xVDZr4WsJjmy7pg0mmX1Poj4bZ0Wpxp6mQi=vEBOYA@mail.gmail.com>
	<1432186418462-12718.post@n5.nabble.com>
	<CAGV6i+OzhO-jwnAP_uegtENO257nckiTgTqQr=Ft6=th6HSRrQ@mail.gmail.com>
	<1432283485194-12724.post@n5.nabble.com>
	<1432284337044-12726.post@n5.nabble.com>
Message-ID: <CAOcn1AvG6t+-q3PfW39HUTkk_M+c3w_aRO_E38Wkz+3S_3F_Jg@mail.gmail.com>

AMF does have a way to support that, by specifying a composite material
with a function depending on z axis. That is a use case outside what I have
considered so far, and I'm not sure how many slicers support that sort of
"advanced AMF". I will add it to the list though.

On 22 May 2015 at 09:45, biskero <biskero at gmail.com> wrote:

> Ciao,
>
> I read the thread and looks very interesting. I am new here so hopefully I
> am not out of space in what I say! :)
> I am building a large 3D printer with multi materials and I am interested
> in
> a Openscad solution to this.
>
> So the first idea that would come to my mind is to have multi material per
> different layers based on a simple %. Let say you have an object with hight
> or thickness of 10mm, I would specify to have 25% layers alternate the
> materials between the one you choose. Does it make sense?
>
> Right know I have a very large object 1000mm and I need to alternate 2 or 3
> materials based on layers so that I would have a sandwich of 3 layers with
> 3
> materials.
>
> Isn't the AMF format suitable for that?
> Thanks in advance!
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-tp12667p12726.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150522/2848675d/attachment-0001.html>

From biskero at gmail.com  Fri May 22 13:37:32 2015
From: biskero at gmail.com (biskero)
Date: Fri, 22 May 2015 10:37:32 -0700 (MST)
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <CAOcn1AvG6t+-q3PfW39HUTkk_M+c3w_aRO_E38Wkz+3S_3F_Jg@mail.gmail.com>
References: <1431808495763-12667.post@n5.nabble.com>
	<1432060563590-12705.post@n5.nabble.com>
	<CAGV6i+MiPSxrJgFH4q3YhQQXCXzrGe3mXH8DWoeoniqW+vnEeA@mail.gmail.com>
	<CAOcn1Au2xVDZr4WsJjmy7pg0mmX1Poj4bZ0Wpxp6mQi=vEBOYA@mail.gmail.com>
	<1432186418462-12718.post@n5.nabble.com>
	<CAGV6i+OzhO-jwnAP_uegtENO257nckiTgTqQr=Ft6=th6HSRrQ@mail.gmail.com>
	<1432283485194-12724.post@n5.nabble.com>
	<1432284337044-12726.post@n5.nabble.com>
	<CAOcn1AvG6t+-q3PfW39HUTkk_M+c3w_aRO_E38Wkz+3S_3F_Jg@mail.gmail.com>
Message-ID: <1432316252142-12730.post@n5.nabble.com>

Ciao,

thanks for the infos,

Here another video on what it means printing with different
layers/materials, in this case kevlar and nylon:

https://youtu.be/qaieXVIOMc8

Alessandro




--
View this message in context: http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-tp12667p12730.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From yvette at dbtgroup.com  Fri May 22 14:07:53 2015
From: yvette at dbtgroup.com (Yvette S. Hirth, CCP, CDP)
Date: Fri, 22 May 2015 11:07:53 -0700
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <1432316252142-12730.post@n5.nabble.com>
References: <1431808495763-12667.post@n5.nabble.com>	<1432060563590-12705.post@n5.nabble.com>	<CAGV6i+MiPSxrJgFH4q3YhQQXCXzrGe3mXH8DWoeoniqW+vnEeA@mail.gmail.com>	<CAOcn1Au2xVDZr4WsJjmy7pg0mmX1Poj4bZ0Wpxp6mQi=vEBOYA@mail.gmail.com>	<1432186418462-12718.post@n5.nabble.com>	<CAGV6i+OzhO-jwnAP_uegtENO257nckiTgTqQr=Ft6=th6HSRrQ@mail.gmail.com>	<1432283485194-12724.post@n5.nabble.com>	<1432284337044-12726.post@n5.nabble.com>	<CAOcn1AvG6t+-q3PfW39HUTkk_M+c3w_aRO_E38Wkz+3S_3F_Jg@mail.gmail.com>
	<1432316252142-12730.post@n5.nabble.com>
Message-ID: <555F7079.4080106@dbtgroup.com>

On 05/22/2015 10:37 AM, biskero wrote:

> Here another video on what it means printing with different
> layers/materials, in this case kevlar and nylon:

> https://youtu.be/qaieXVIOMc8

what printer was used?  please let us know!

thanks
yvette



From biskero at gmail.com  Fri May 22 14:10:03 2015
From: biskero at gmail.com (biskero)
Date: Fri, 22 May 2015 11:10:03 -0700 (MST)
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <555F7079.4080106@dbtgroup.com>
References: <1432060563590-12705.post@n5.nabble.com>
	<CAGV6i+MiPSxrJgFH4q3YhQQXCXzrGe3mXH8DWoeoniqW+vnEeA@mail.gmail.com>
	<CAOcn1Au2xVDZr4WsJjmy7pg0mmX1Poj4bZ0Wpxp6mQi=vEBOYA@mail.gmail.com>
	<1432186418462-12718.post@n5.nabble.com>
	<CAGV6i+OzhO-jwnAP_uegtENO257nckiTgTqQr=Ft6=th6HSRrQ@mail.gmail.com>
	<1432283485194-12724.post@n5.nabble.com>
	<1432284337044-12726.post@n5.nabble.com>
	<CAOcn1AvG6t+-q3PfW39HUTkk_M+c3w_aRO_E38Wkz+3S_3F_Jg@mail.gmail.com>
	<1432316252142-12730.post@n5.nabble.com>
	<555F7079.4080106@dbtgroup.com>
Message-ID: <1432318203953-12732.post@n5.nabble.com>

Ciao,

the printer is made by a company based in Cambridge/Boston, here a video

https://www.youtube.com/watch?v=nbuu7UD2GVk

They are doing special filaments development too.

Alessandro



--
View this message in context: http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-tp12667p12732.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From rael at xtra.co.nz  Fri May 22 16:37:47 2015
From: rael at xtra.co.nz (fluidity)
Date: Fri, 22 May 2015 13:37:47 -0700 (MST)
Subject: [OpenSCAD] Terrain modeling
In-Reply-To: <1393852217941-7083.post@n5.nabble.com>
References: <1393285778856-6985.post@n5.nabble.com>
	<CAMFpZrjy-jniF_+fJcd+_Skg4Swv89tyPn5SJKc8cL0EzeqG0A@mail.gmail.com>
	<CAH0WD3poJXBhL0oZXD3XSeaijeuiCEgUr+78ETdhqyBZdBHX4A@mail.gmail.com>
	<1393850270192-7081.post@n5.nabble.com>
	<1393852217941-7083.post@n5.nabble.com>
Message-ID: <1432327067267-12733.post@n5.nabble.com>

Polyhedron is very fast with my version 2014.10.02
I had originally made solids with multiple polyhedron statements and
successfully printed off the result with mattercontrol but then was
investigating an issue after some time and discovered my models had multiple
intersecting vertices. After converting my code to make a single polyhedron
with a superset of all data, I found my renders were changed from hour long
to a few seconds. Now I routinely run renders with 100,000 + facets and get
times of around a minute or less.



--
View this message in context: http://forum.openscad.org/Terrain-modeling-tp6985p12733.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From stempeldergeschichte at googlemail.com  Sat May 23 05:14:54 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Sat, 23 May 2015 11:14:54 +0200
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <1432318203953-12732.post@n5.nabble.com>
References: <1432060563590-12705.post@n5.nabble.com>
	<CAGV6i+MiPSxrJgFH4q3YhQQXCXzrGe3mXH8DWoeoniqW+vnEeA@mail.gmail.com>
	<CAOcn1Au2xVDZr4WsJjmy7pg0mmX1Poj4bZ0Wpxp6mQi=vEBOYA@mail.gmail.com>
	<1432186418462-12718.post@n5.nabble.com>
	<CAGV6i+OzhO-jwnAP_uegtENO257nckiTgTqQr=Ft6=th6HSRrQ@mail.gmail.com>
	<1432283485194-12724.post@n5.nabble.com>
	<1432284337044-12726.post@n5.nabble.com>
	<CAOcn1AvG6t+-q3PfW39HUTkk_M+c3w_aRO_E38Wkz+3S_3F_Jg@mail.gmail.com>
	<1432316252142-12730.post@n5.nabble.com>
	<555F7079.4080106@dbtgroup.com>
	<1432318203953-12732.post@n5.nabble.com>
Message-ID: <CAJgOqAAXBrNsa5cyRCmvx5Lqt0GP28pwbQWRFysznSWwaMJXXw@mail.gmail.com>

b. multiple extruder with mixing hotend. (for this discussion say  Diamond
Hotend <http://reprap.org/wiki/Diamond_Hotend>


Please be aware that a nozzle like Diamond Hotend does not do a color
mixing.
There is no mixing chamber.
The 3 colors meet in the center and come out together like toothpaste, one
color one one side.

See: https://www.youtube.com/watch?v=_g0fiWx8RyM




2015-05-22 20:10 GMT+02:00 biskero <biskero at gmail.com>:

> Ciao,
>
> the printer is made by a company based in Cambridge/Boston, here a video
>
> https://www.youtube.com/watch?v=nbuu7UD2GVk
>
> They are doing special filaments development too.
>
> Alessandro
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-tp12667p12732.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>



-- 
stempeldergeschichte at googlemail.com <karsten at rohrbach.de>

P.S. Falls meine E-Mail k?rzer ausf?llt als Dir angenehm ist:
Ich probiere gerade aus kurze Antworten statt gar keine Antworten zu
schreiben.
Wenn Du gerne mehr lesen m?chtest, dann lass es mich bitte wissen.

P.S. In case my e-mail is shorter than you enjoy:
I am currently trying short replies instead of no replies at all.
Please let me know, if you like to read more.

Enjoy!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150523/0d638c24/attachment.html>

From runsun at gmail.com  Sat May 23 20:55:38 2015
From: runsun at gmail.com (runsun)
Date: Sat, 23 May 2015 17:55:38 -0700 (MST)
Subject: [OpenSCAD] Reverse chr()?
Message-ID: <1432428938411-12735.post@n5.nabble.com>

There's a not-yet documented function chr(97) => "a". Is there a reversed
function of it, like ichr("a")=>97 ?



-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Reverse-chr-tp12735.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sat May 23 21:13:52 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 23 May 2015 18:13:52 -0700 (MST)
Subject: [OpenSCAD] Reverse chr()?
In-Reply-To: <1432428938411-12735.post@n5.nabble.com>
References: <1432428938411-12735.post@n5.nabble.com>
Message-ID: <1432430032695-12736.post@n5.nabble.com>

No.

But  nophead
<http://forum.openscad.org/How-to-detect-chr-0-tp12351p12418.html>   wrote
one:

function asc(c, n = 0) = c == chr(n) ? n : asc(c, n + 1);

Remember this is unicode not ASCII. Check what happens > 7F.

Also chr() IS  documented
<https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/String_Functions#chr>  .



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Reverse-chr-tp12735p12736.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sat May 23 21:16:31 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 23 May 2015 18:16:31 -0700 (MST)
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <CAJgOqAAXBrNsa5cyRCmvx5Lqt0GP28pwbQWRFysznSWwaMJXXw@mail.gmail.com>
References: <CAOcn1Au2xVDZr4WsJjmy7pg0mmX1Poj4bZ0Wpxp6mQi=vEBOYA@mail.gmail.com>
	<1432186418462-12718.post@n5.nabble.com>
	<CAGV6i+OzhO-jwnAP_uegtENO257nckiTgTqQr=Ft6=th6HSRrQ@mail.gmail.com>
	<1432283485194-12724.post@n5.nabble.com>
	<1432284337044-12726.post@n5.nabble.com>
	<CAOcn1AvG6t+-q3PfW39HUTkk_M+c3w_aRO_E38Wkz+3S_3F_Jg@mail.gmail.com>
	<1432316252142-12730.post@n5.nabble.com>
	<555F7079.4080106@dbtgroup.com>
	<1432318203953-12732.post@n5.nabble.com>
	<CAJgOqAAXBrNsa5cyRCmvx5Lqt0GP28pwbQWRFysznSWwaMJXXw@mail.gmail.com>
Message-ID: <1432430191353-12737.post@n5.nabble.com>

Peter Falke wrote
> Please be aware that a nozzle like Diamond Hotend does not do a color
> mixing.
> There is no mixing chamber.
> The 3 colors meet in the center and come out together like toothpaste, one
> color one one side.

I'm still doing my research. That can still be useful for different material
properties, such as ABS & NinjaFlex to have variable flexibility.

So for colours in this discussion, say the one  here
<http://reprap.org/mediawiki/images/a/a5/Pia-taubert-material-mixing-report.pdf>  
(skip to [pdf page num] 32 if you don't want history of 3D printing, or pg
18 if you want to read about colour theory). It uses active mixing ie
motorised.

It also proposes a G-code method to control multiple extruders at varying
rates of output. Basically all the extruder ratios (0-1) add up to 1, and
they are extruded at those rates to the overall E extrude number, at any
point in time. See pg 40+.

So when such a technique progresses some means of representing those ratios
in the material specification is needed.



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-tp12667p12737.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From runsun at gmail.com  Sat May 23 21:41:43 2015
From: runsun at gmail.com (runsun)
Date: Sat, 23 May 2015 18:41:43 -0700 (MST)
Subject: [OpenSCAD] Reverse chr()?
In-Reply-To: <1432430032695-12736.post@n5.nabble.com>
References: <1432428938411-12735.post@n5.nabble.com>
	<1432430032695-12736.post@n5.nabble.com>
Message-ID: <1432431703037-12738.post@n5.nabble.com>

Got it. Thx



-----

$  Runsun Pan, PhD 

$ -- OpenScad_DocTest: doc and unit test ( Github , Thingiverse  ) 

$ -- hash parameter model: here , here 

$ -- Linux Mint 17.1 Rebecca x64  + OpenSCAD 2015.03.15/2015.04.01.nightly 




--
View this message in context: http://forum.openscad.org/Reverse-chr-tp12735p12738.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sat May 23 23:40:31 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Sat, 23 May 2015 20:40:31 -0700 (MST)
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <CAJgOqAAXBrNsa5cyRCmvx5Lqt0GP28pwbQWRFysznSWwaMJXXw@mail.gmail.com>
References: <CAOcn1Au2xVDZr4WsJjmy7pg0mmX1Poj4bZ0Wpxp6mQi=vEBOYA@mail.gmail.com>
	<1432186418462-12718.post@n5.nabble.com>
	<CAGV6i+OzhO-jwnAP_uegtENO257nckiTgTqQr=Ft6=th6HSRrQ@mail.gmail.com>
	<1432283485194-12724.post@n5.nabble.com>
	<1432284337044-12726.post@n5.nabble.com>
	<CAOcn1AvG6t+-q3PfW39HUTkk_M+c3w_aRO_E38Wkz+3S_3F_Jg@mail.gmail.com>
	<1432316252142-12730.post@n5.nabble.com>
	<555F7079.4080106@dbtgroup.com>
	<1432318203953-12732.post@n5.nabble.com>
	<CAJgOqAAXBrNsa5cyRCmvx5Lqt0GP28pwbQWRFysznSWwaMJXXw@mail.gmail.com>
Message-ID: <1432438831490-12739.post@n5.nabble.com>

Peter Falke wrote
> b. multiple extruder with mixing hotend. (for this discussion say  Diamond
> Hotend &lt;http://reprap.org/wiki/Diamond_Hotend&gt;
> 
> 
> Please be aware that a nozzle like Diamond Hotend does not do a color
> mixing.
> There is no mixing chamber.

Actually have a look at  mixing
<https://www.youtube.com/watch?v=saryph9t9L8>   with the diamond head. Looks
promising.



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-tp12667p12739.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From jdawgaz at gmail.com  Mon May 25 07:50:59 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Mon, 25 May 2015 04:50:59 -0700
Subject: [OpenSCAD] 3d people
Message-ID: <CAMyDR6+E8x=ee9k6cB6Gu2gogZO5uo0wT0jF458QW92Z70aN+Q@mail.gmail.com>

I am making a z scale train layout, and would like to make some people
(they have to be 1/200th scale, which would be about 9 mm.  I have no
problem with scaling part, but I am having trouble finding any ready made
people.

I have found some taekwondo figurines, but I would like just a little more
detail.

Anyone, seen a module somewhere that might fit the bill?

Jerry

--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150525/93d68a44/attachment.html>

From alan at lxorguk.ukuu.org.uk  Mon May 25 08:17:17 2015
From: alan at lxorguk.ukuu.org.uk (Alan Cox)
Date: Mon, 25 May 2015 13:17:17 +0100
Subject: [OpenSCAD] 3d people
In-Reply-To: <CAMyDR6+E8x=ee9k6cB6Gu2gogZO5uo0wT0jF458QW92Z70aN+Q@mail.gmail.com>
References: <CAMyDR6+E8x=ee9k6cB6Gu2gogZO5uo0wT0jF458QW92Z70aN+Q@mail.gmail.com>
Message-ID: <20150525131717.60ab2162@www.etchedpixels.co.uk>

On Mon, 25 May 2015 04:50:59 -0700
Jerry Davis <jdawgaz at gmail.com> wrote:

> I am making a z scale train layout, and would like to make some people
> (they have to be 1/200th scale, which would be about 9 mm.  I have no
> problem with scaling part, but I am having trouble finding any ready made
> people.
> 
> I have found some taekwondo figurines, but I would like just a little more
> detail.
> 
> Anyone, seen a module somewhere that might fit the bill?

I suspect your problem will be fragility even with a commercial printer.

http://www.makehuman.org/

may be a better starting point, although it's much more oriented towards
rendering/animation.

Alan


From kc8ste at gmail.com  Mon May 25 09:25:16 2015
From: kc8ste at gmail.com (Curt)
Date: Mon, 25 May 2015 09:25:16 -0400
Subject: [OpenSCAD] 3d people
In-Reply-To: <CAMyDR6+E8x=ee9k6cB6Gu2gogZO5uo0wT0jF458QW92Z70aN+Q@mail.gmail.com>
References: <CAMyDR6+E8x=ee9k6cB6Gu2gogZO5uo0wT0jF458QW92Z70aN+Q@mail.gmail.com>
Message-ID: <556322BC.9010609@gmail.com>

Jerry, have you explored Thingiverse? You might find at least a partial 
solution there.

Curt

Curt Givens GCAC Earthdog Director/GCDOC Barn Hunt Director
"do not meddle in the affairs of dragons for you are crunchy and taste good with ketchup"
Motorcyclist know why dogs hang their heads out of car windows

On 5/25/2015 7:50 AM, Jerry Davis wrote:
> I am making a z scale train layout, and would like to make some people 
> (they have to be 1/200th scale, which would be about 9 mm.  I have no 
> problem with scaling part, but I am having trouble finding any ready 
> made people.
>
> I have found some taekwondo figurines, but I would like just a little 
> more detail.
>
> Anyone, seen a module somewhere that might fit the bill?
>
> Jerry
>
> --
> Extra Ham Operator: K7AZJ
> Registered Linux User: 275424
> Raspberry Pi and Arduino developer
>
> /The most exciting phrase to hear in science - the one that heralds 
> new discoveries - is not "Eureka!" but "That's funny...".
> /- Isaac. Asimov
>
> /I//f you give someone a program, you will frustrate them for a day; 
> if you teach them how to program, you will frustrate them for a lifetime.
> /- Anonymous
>
> /If writing good code requires very little comments, then writing 
> really excellent code requires no comments at all!
> /- Ken Thompson
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150525/39110dce/attachment.html>

From jdawgaz at gmail.com  Mon May 25 10:25:41 2015
From: jdawgaz at gmail.com (Jerry Davis)
Date: Mon, 25 May 2015 07:25:41 -0700
Subject: [OpenSCAD] 3d people
In-Reply-To: <556322BC.9010609@gmail.com>
References: <CAMyDR6+E8x=ee9k6cB6Gu2gogZO5uo0wT0jF458QW92Z70aN+Q@mail.gmail.com>
	<556322BC.9010609@gmail.com>
Message-ID: <CAMyDR6KipwwLPGzo5M1KuKhFghLdcxBi6RXjSH7FOq_XuX6a7w@mail.gmail.com>

yep. but I didn't put the right words in the search box.
because of this thread, it clicked that I should just put the word "human"
in there instead of people like I did before.
and do you know? I found something that would work.

But I did like the make human thing too.

thanks to both of y'all.

Jerry


Jerry

--
Extra Ham Operator: K7AZJ
Registered Linux User: 275424
Raspberry Pi and Arduino developer


*The most exciting phrase to hear in science - the one that heralds new
discoveries - is not "Eureka!" but "That's funny...".*- Isaac. Asimov

*I*
*f you give someone a program, you will frustrate them for a day; if you
teach them how to program, you will frustrate them for a lifetime. *-
Anonymous


*If writing good code requires very little comments, then writing really
excellent code requires no comments at all!*- Ken Thompson

On Mon, May 25, 2015 at 6:25 AM, Curt <kc8ste at gmail.com> wrote:

>  Jerry, have you explored Thingiverse? You might find at least a partial
> solution there.
>
> Curt
>
> Curt Givens GCAC Earthdog Director/GCDOC Barn Hunt Director
> "do not meddle in the affairs of dragons for you are crunchy and taste good with ketchup"
> Motorcyclist know why dogs hang their heads out of car windows
>
> On 5/25/2015 7:50 AM, Jerry Davis wrote:
>
> I am making a z scale train layout, and would like to make some people
> (they have to be 1/200th scale, which would be about 9 mm.  I have no
> problem with scaling part, but I am having trouble finding any ready made
> people.
>
>  I have found some taekwondo figurines, but I would like just a little
> more detail.
>
>  Anyone, seen a module somewhere that might fit the bill?
>
>  Jerry
>
>  --
> Extra Ham Operator: K7AZJ
> Registered Linux User: 275424
> Raspberry Pi and Arduino developer
>
>
> *The most exciting phrase to hear in science - the one that heralds new
> discoveries - is not "Eureka!" but "That's funny...". *- Isaac. Asimov
>
> *I*
> *f you give someone a program, you will frustrate them for a day; if you
> teach them how to program, you will frustrate them for a lifetime.  *-
> Anonymous
>
>
> *If writing good code requires very little comments, then writing really
> excellent code requires no comments at all! *- Ken Thompson
>
>
> _______________________________________________
> OpenSCAD mailing listDiscuss at lists.openscad.orghttp://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150525/3ccdd2c8/attachment.html>

From whosawhatsis at gmail.com  Mon May 25 15:25:53 2015
From: whosawhatsis at gmail.com (whosawhatsis)
Date: Mon, 25 May 2015 12:25:53 -0700
Subject: [OpenSCAD] 3d people
In-Reply-To: <CAMyDR6+E8x=ee9k6cB6Gu2gogZO5uo0wT0jF458QW92Z70aN+Q@mail.gmail.com>
References: <CAMyDR6+E8x=ee9k6cB6Gu2gogZO5uo0wT0jF458QW92Z70aN+Q@mail.gmail.com>
Message-ID: <9E7BE02364D348C3880A715BF3CF3570@gmail.com>

https://www.thingiverse.com/fredini/designs/page:3 


On Monday, May 25, 2015 at 04:50, Jerry Davis wrote:

> I am making a z scale train layout, and would like to make some people (they have to be 1/200th scale, which would be about 9 mm.  I have no problem with scaling part, but I am having trouble finding any ready made people.
> 
> I have found some taekwondo figurines, but I would like just a little more detail.
> 
> Anyone, seen a module somewhere that might fit the bill?
> 
> Jerry
> 
> --
> Extra Ham Operator: K7AZJ
> Registered Linux User: 275424
> Raspberry Pi and Arduino developer
> 
> The most exciting phrase to hear in science - the one that heralds new discoveries - is not "Eureka!" but "That's funny...".
> - Isaac. Asimov
> If you give someone a program, you will frustrate them for a day; if you teach them how to program, you will frustrate them for a lifetime. 
> - Anonymous
> If writing good code requires very little comments, then writing really excellent code requires no comments at all!
> - Ken Thompson 
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org (mailto:Discuss at lists.openscad.org)
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
> 
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150525/40635909/attachment.html>

From marius at kintel.net  Mon May 25 17:09:45 2015
From: marius at kintel.net (Marius Kintel)
Date: Mon, 25 May 2015 17:09:45 -0400
Subject: [OpenSCAD] How to chenge the background color when exporting
	PNGs.
In-Reply-To: <1432220283331-12721.post@n5.nabble.com>
References: <1432220283331-12721.post@n5.nabble.com>
Message-ID: <DACF5E33-5B35-4022-A0C3-2C6271855308@kintel.net>

On May 21, 2015, at 10:58 AM, loskiorama <alejandro at sur3d.com> wrote:

> I'm using the command line export to PNG option.
> and I'd like the background color to be white on the exported images insted
> of the yelowwish that comes by default.
> 
> How could I do this?
> 
It?s possible to specify which color scheme to use on the cmd-line, e.g: openscad ?colorscheme=Metallic
It?s also possible to add new color schemes, but this currently has to be done manually by adding JSON files to the color-schemes folder in your OpenSCAD installation.

Adding a cmd-line option to override the background color could be interesting though.

 -Marius



From miro at hroncok.cz  Mon May 25 17:12:30 2015
From: miro at hroncok.cz (=?UTF-8?Q?Miro_Hron=C4=8Dok?=)
Date: Mon, 25 May 2015 23:12:30 +0200
Subject: [OpenSCAD] How to chenge the background color when exporting
	PNGs.
In-Reply-To: <DACF5E33-5B35-4022-A0C3-2C6271855308@kintel.net>
References: <1432220283331-12721.post@n5.nabble.com>
	<DACF5E33-5B35-4022-A0C3-2C6271855308@kintel.net>
Message-ID: <CAG7fsRSD1Ed4vnJLCf7GybocFD_A5H=EKon37zXZp910NEMwdg@mail.gmail.com>

> Adding a cmd-line option to override the background color could be interesting though.

Best thing would be to be able to export with transparent background.


From marius at kintel.net  Mon May 25 17:19:03 2015
From: marius at kintel.net (Marius Kintel)
Date: Mon, 25 May 2015 17:19:03 -0400
Subject: [OpenSCAD] How to chenge the background color when exporting
	PNGs.
In-Reply-To: <CAG7fsRSD1Ed4vnJLCf7GybocFD_A5H=EKon37zXZp910NEMwdg@mail.gmail.com>
References: <1432220283331-12721.post@n5.nabble.com>
	<DACF5E33-5B35-4022-A0C3-2C6271855308@kintel.net>
	<CAG7fsRSD1Ed4vnJLCf7GybocFD_A5H=EKon37zXZp910NEMwdg@mail.gmail.com>
Message-ID: <8FA7D57E-B463-4A1B-8195-3349C8468361@kintel.net>

On May 25, 2015, at 17:12 PM, Miro Hron?ok <miro at hroncok.cz> wrote:

>> Adding a cmd-line option to override the background color could be interesting though.
> 
> Best thing would be to be able to export with transparent background.
> 
Yep, such an option should be able to take an alpha parameter

 -Marius



From stempeldergeschichte at googlemail.com  Tue May 26 05:18:15 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Tue, 26 May 2015 11:18:15 +0200
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <1432438831490-12739.post@n5.nabble.com>
References: <CAOcn1Au2xVDZr4WsJjmy7pg0mmX1Poj4bZ0Wpxp6mQi=vEBOYA@mail.gmail.com>
	<1432186418462-12718.post@n5.nabble.com>
	<CAGV6i+OzhO-jwnAP_uegtENO257nckiTgTqQr=Ft6=th6HSRrQ@mail.gmail.com>
	<1432283485194-12724.post@n5.nabble.com>
	<1432284337044-12726.post@n5.nabble.com>
	<CAOcn1AvG6t+-q3PfW39HUTkk_M+c3w_aRO_E38Wkz+3S_3F_Jg@mail.gmail.com>
	<1432316252142-12730.post@n5.nabble.com>
	<555F7079.4080106@dbtgroup.com>
	<1432318203953-12732.post@n5.nabble.com>
	<CAJgOqAAXBrNsa5cyRCmvx5Lqt0GP28pwbQWRFysznSWwaMJXXw@mail.gmail.com>
	<1432438831490-12739.post@n5.nabble.com>
Message-ID: <CAJgOqADPoC=1RLALRPVjCy+Two49igjj1XCtWUQZriW-F-TUJg@mail.gmail.com>

With the partly transparent PLA there doesnt seem to be a toothpaste effect.
But if you look at the print with (non-transparent) black and copper you`ll
see it quiet clearly:
https://www.youtube.com/watch?v=cr88NUZ6XnY



2015-05-24 5:40 GMT+02:00 MichaelAtOz <oz.at.michael at gmail.com>:

> Peter Falke wrote
> > b. multiple extruder with mixing hotend. (for this discussion say
> Diamond
> > Hotend &lt;http://reprap.org/wiki/Diamond_Hotend&gt;
> >
> >
> > Please be aware that a nozzle like Diamond Hotend does not do a color
> > mixing.
> > There is no mixing chamber.
>
> Actually have a look at  mixing
> <https://www.youtube.com/watch?v=saryph9t9L8>   with the diamond head.
> Looks
> promising.
>
>
>
> -----
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; To the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work. This work is
> published globally via the internet. :) Inclusion of works of previous
> authors is not included in the above.
>
> The TPP is no simple ?trade agreement.?   Fight it!
> http://www.ourfairdeal.org/
> --
> View this message in context:
> http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-tp12667p12739.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>



-- 
stempeldergeschichte at googlemail.com <karsten at rohrbach.de>

P.S. Falls meine E-Mail k?rzer ausf?llt als Dir angenehm ist:
Ich probiere gerade aus kurze Antworten statt gar keine Antworten zu
schreiben.
Wenn Du gerne mehr lesen m?chtest, dann lass es mich bitte wissen.

P.S. In case my e-mail is shorter than you enjoy:
I am currently trying short replies instead of no replies at all.
Please let me know, if you like to read more.

Enjoy!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150526/aba41958/attachment.html>

From stempeldergeschichte at googlemail.com  Tue May 26 05:36:25 2015
From: stempeldergeschichte at googlemail.com (Peter Falke)
Date: Tue, 26 May 2015 11:36:25 +0200
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <CAJgOqADPoC=1RLALRPVjCy+Two49igjj1XCtWUQZriW-F-TUJg@mail.gmail.com>
References: <CAOcn1Au2xVDZr4WsJjmy7pg0mmX1Poj4bZ0Wpxp6mQi=vEBOYA@mail.gmail.com>
	<1432186418462-12718.post@n5.nabble.com>
	<CAGV6i+OzhO-jwnAP_uegtENO257nckiTgTqQr=Ft6=th6HSRrQ@mail.gmail.com>
	<1432283485194-12724.post@n5.nabble.com>
	<1432284337044-12726.post@n5.nabble.com>
	<CAOcn1AvG6t+-q3PfW39HUTkk_M+c3w_aRO_E38Wkz+3S_3F_Jg@mail.gmail.com>
	<1432316252142-12730.post@n5.nabble.com>
	<555F7079.4080106@dbtgroup.com>
	<1432318203953-12732.post@n5.nabble.com>
	<CAJgOqAAXBrNsa5cyRCmvx5Lqt0GP28pwbQWRFysznSWwaMJXXw@mail.gmail.com>
	<1432438831490-12739.post@n5.nabble.com>
	<CAJgOqADPoC=1RLALRPVjCy+Two49igjj1XCtWUQZriW-F-TUJg@mail.gmail.com>
Message-ID: <CAJgOqACcNnrm=ej1FSJQzQ7F+JBpKd66URy=U4yxK8i+v6cR0A@mail.gmail.com>

http://reprap.org/mediawiki/images/a/a5/Pia-taubert-material-mixing-report.pdf
is very interesting. It uses a a vertical rod of hexagonal shape that
rotates continuously and actively mixes
two (or in this design up to six different colors) colors together:
[image: Inline-Bild 1]


2015-05-26 11:18 GMT+02:00 Peter Falke <stempeldergeschichte at googlemail.com>
:

> With the partly transparent PLA there doesnt seem to be a toothpaste
> effect.
> But if you look at the print with (non-transparent) black and copper
> you`ll see it quiet clearly:
> https://www.youtube.com/watch?v=cr88NUZ6XnY
>
>
>
> 2015-05-24 5:40 GMT+02:00 MichaelAtOz <oz.at.michael at gmail.com>:
>
>> Peter Falke wrote
>> > b. multiple extruder with mixing hotend. (for this discussion say
>> Diamond
>> > Hotend &lt;http://reprap.org/wiki/Diamond_Hotend&gt;
>> >
>> >
>> > Please be aware that a nozzle like Diamond Hotend does not do a color
>> > mixing.
>> > There is no mixing chamber.
>>
>> Actually have a look at  mixing
>> <https://www.youtube.com/watch?v=saryph9t9L8>   with the diamond head.
>> Looks
>> promising.
>>
>>
>>
>> -----
>> Unless specifically shown otherwise above, my contribution is in the
>> Public Domain; To the extent possible under law, I have waived all
>> copyright and related or neighbouring rights to this work. This work is
>> published globally via the internet. :) Inclusion of works of previous
>> authors is not included in the above.
>>
>> The TPP is no simple ?trade agreement.?   Fight it!
>> http://www.ourfairdeal.org/
>> --
>> View this message in context:
>> http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-tp12667p12739.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
>
> --
> stempeldergeschichte at googlemail.com <karsten at rohrbach.de>
>
> P.S. Falls meine E-Mail k?rzer ausf?llt als Dir angenehm ist:
> Ich probiere gerade aus kurze Antworten statt gar keine Antworten zu
> schreiben.
> Wenn Du gerne mehr lesen m?chtest, dann lass es mich bitte wissen.
>
> P.S. In case my e-mail is shorter than you enjoy:
> I am currently trying short replies instead of no replies at all.
> Please let me know, if you like to read more.
>
> Enjoy!
>



-- 
stempeldergeschichte at googlemail.com <karsten at rohrbach.de>

P.S. Falls meine E-Mail k?rzer ausf?llt als Dir angenehm ist:
Ich probiere gerade aus kurze Antworten statt gar keine Antworten zu
schreiben.
Wenn Du gerne mehr lesen m?chtest, dann lass es mich bitte wissen.

P.S. In case my e-mail is shorter than you enjoy:
I am currently trying short replies instead of no replies at all.
Please let me know, if you like to read more.

Enjoy!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150526/f8908177/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image.png
Type: image/png
Size: 73382 bytes
Desc: not available
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150526/f8908177/attachment-0001.png>

From oz.at.michael at gmail.com  Tue May 26 07:05:19 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Tue, 26 May 2015 04:05:19 -0700 (MST)
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <CAJgOqACcNnrm=ej1FSJQzQ7F+JBpKd66URy=U4yxK8i+v6cR0A@mail.gmail.com>
References: <1432283485194-12724.post@n5.nabble.com>
	<1432284337044-12726.post@n5.nabble.com>
	<CAOcn1AvG6t+-q3PfW39HUTkk_M+c3w_aRO_E38Wkz+3S_3F_Jg@mail.gmail.com>
	<1432316252142-12730.post@n5.nabble.com>
	<555F7079.4080106@dbtgroup.com>
	<1432318203953-12732.post@n5.nabble.com>
	<CAJgOqAAXBrNsa5cyRCmvx5Lqt0GP28pwbQWRFysznSWwaMJXXw@mail.gmail.com>
	<1432438831490-12739.post@n5.nabble.com>
	<CAJgOqADPoC=1RLALRPVjCy+Two49igjj1XCtWUQZriW-F-TUJg@mail.gmail.com>
	<CAJgOqACcNnrm=ej1FSJQzQ7F+JBpKd66URy=U4yxK8i+v6cR0A@mail.gmail.com>
Message-ID: <1432638319793-12752.post@n5.nabble.com>

Yes. So what I'm trying to say is that this capability is incoming, so
whatever internal mechanisms need to be designed with this as a future
possibility, not necessarily now, but choosing an implementation now, needs
to recognise that this will be a next step. 

Although it may be Real-Soon-Now (TM).

I'm looking into slicers support, to be documented shortly, but so far, they
seem to be single material only. But my searches are in early stages.

I note a comment at reprep.org from 2012, basically saying multi-stuff is
chicken and egg, without support in slicers/firmware multi-stuff is not
needed in OpenSCAD, while without support in OpenSCAD mutli-stuff, does not
need to be supported in slicers/firmware.

So at least, slic3r, supports AMF with multi materials (details to follow),
so to advance, we need OpenSCAD to support multi-materials in AMF export,
soonish.



-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-tp12667p12752.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From drew at DasRogges.com  Tue May 26 23:32:10 2015
From: drew at DasRogges.com (Drew Rogge)
Date: Tue, 26 May 2015 20:32:10 -0700
Subject: [OpenSCAD] OpenSCAD regression tests
Message-ID: <55653ABA.2030505@DasRogges.com>

I've been making some changes to OpenSCAD and was wondering if there's an automated way to run the regression tests? I didn't see anything in the Makefile.

Drew



From drew at DasRogges.com  Tue May 26 23:35:49 2015
From: drew at DasRogges.com (Drew Rogge)
Date: Tue, 26 May 2015 20:35:49 -0700
Subject: [OpenSCAD] OpenSCAD regression tests
In-Reply-To: <55653ABA.2030505@DasRogges.com>
References: <55653ABA.2030505@DasRogges.com>
Message-ID: <55653B95.1030807@DasRogges.com>

Asked too soon :-( I found the test document in doc dir.

On 5/26/15 8:32 PM, Drew Rogge wrote:
> I've been making some changes to OpenSCAD and was wondering if there's an automated way to run the regression tests? I didn't see anything in the Makefile.
>
> Drew
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org



From drifter.frank at gmail.com  Wed May 27 03:02:43 2015
From: drifter.frank at gmail.com (frankv)
Date: Wed, 27 May 2015 00:02:43 -0700 (MST)
Subject: [OpenSCAD] New 3MF file format
In-Reply-To: <CAGV6i+Mod9ojLPe5hB+-g=g9LOrF1E-3Hapwi9=WQWy7A0b_gg@mail.gmail.com>
References: <1430489757472-12525.post@n5.nabble.com>
	<554392A0.7070702@pobox.com>
	<CAGV6i+PmP-sPxtjkLUbwhBjKx1XTZL1NsCk+FWtdkGaYV0Ht5Q@mail.gmail.com>
	<5543E82B.5080102@pobox.com>
	<CAGV6i+Mod9ojLPe5hB+-g=g9LOrF1E-3Hapwi9=WQWy7A0b_gg@mail.gmail.com>
Message-ID: <1432710163995-12755.post@n5.nabble.com>

A skim through http://bit.ly/1KqwpFU suggests that the "royalty-free patent
license" requires a "conformant application" to be produced, and I have no
doubt that "conformant" will require DRM, so that a 3MF derivative without
DRM would be subject to lawsuits and monetization.



--
View this message in context: http://forum.openscad.org/New-3MF-file-format-tp12525p12755.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From bobcousins42 at googlemail.com  Wed May 27 05:28:21 2015
From: bobcousins42 at googlemail.com (Bob Cousins)
Date: Wed, 27 May 2015 10:28:21 +0100
Subject: [OpenSCAD] New 3MF file format
In-Reply-To: <1432710163995-12755.post@n5.nabble.com>
References: <1430489757472-12525.post@n5.nabble.com>
	<554392A0.7070702@pobox.com>
	<CAGV6i+PmP-sPxtjkLUbwhBjKx1XTZL1NsCk+FWtdkGaYV0Ht5Q@mail.gmail.com>
	<5543E82B.5080102@pobox.com>
	<CAGV6i+Mod9ojLPe5hB+-g=g9LOrF1E-3Hapwi9=WQWy7A0b_gg@mail.gmail.com>
	<1432710163995-12755.post@n5.nabble.com>
Message-ID: <CAOcn1AtcyNg17HnJxgG5OVMdot8TyDiKkXdLZwVBbW9YC7D2mA@mail.gmail.com>

The DRM relevant features of the spec are all optional, the only required
part is the 3D model. So I think a conformant implementation need not
process any DRM.

I understand there is great suspicion of Microsoft, but in my reading 3MF
is a genuinely open spec, there are no strings attached. It actually makes
clear it is royalty free, unlike AMF. It also can be freely downloaded,
unlike AMF which costs $49 and you have to agree to inspection of your
premises and computer systems by a third party to ensure you are complying
with the copyright (i.e. not made ANY copies), otherwise the agreement is
cancelled and you must destroy all copies.

Personally I find it a lot easier to implement 3MF than AMF.

On 27 May 2015 at 08:02, frankv <drifter.frank at gmail.com> wrote:

> A skim through http://bit.ly/1KqwpFU suggests that the "royalty-free
> patent
> license" requires a "conformant application" to be produced, and I have no
> doubt that "conformant" will require DRM, so that a 3MF derivative without
> DRM would be subject to lawsuits and monetization.
>
>
>
> --
> View this message in context:
> http://forum.openscad.org/New-3MF-file-format-tp12525p12755.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150527/a28e0c13/attachment.html>

From doug at moens.org  Wed May 27 07:34:37 2015
From: doug at moens.org (doug moen)
Date: Wed, 27 May 2015 07:34:37 -0400
Subject: [OpenSCAD] New 3MF file format
In-Reply-To: <CAOcn1AtcyNg17HnJxgG5OVMdot8TyDiKkXdLZwVBbW9YC7D2mA@mail.gmail.com>
References: <1430489757472-12525.post@n5.nabble.com>
	<554392A0.7070702@pobox.com>
	<CAGV6i+PmP-sPxtjkLUbwhBjKx1XTZL1NsCk+FWtdkGaYV0Ht5Q@mail.gmail.com>
	<5543E82B.5080102@pobox.com>
	<CAGV6i+Mod9ojLPe5hB+-g=g9LOrF1E-3Hapwi9=WQWy7A0b_gg@mail.gmail.com>
	<1432710163995-12755.post@n5.nabble.com>
	<CAOcn1AtcyNg17HnJxgG5OVMdot8TyDiKkXdLZwVBbW9YC7D2mA@mail.gmail.com>
Message-ID: <CAGV6i+OdHbVZwywjhczM1Jv-afCdu68MdUrC-ey93OUxnoy9tw@mail.gmail.com>

The only version of the AMF spec that I've studied is the 0.47 draft from
this URL:

http://creativemachines.cornell.edu/sites/default/files/AMF_V0.47.pdf

If there are substantive differences in the $49 version, I have no way of
finding about them. The legal risks involved in obtaining the actual
standard sound too high. If I create a context diff comparing 0.47 with
1.0, I'm breaking the law. On the other hand, most of the other people
implementing AMF are probably also basing their implementation on V0.47, so
whatever text happens to be in the pay version of the AMF standard probably
doesn't matter all that much.

I agree that Microsoft has done a better job, in making their standard
freely available and explicitly royalty free.

On 27 May 2015 at 05:28, Bob Cousins <bobcousins42 at googlemail.com> wrote:

> The DRM relevant features of the spec are all optional, the only required
> part is the 3D model. So I think a conformant implementation need not
> process any DRM.
>
> I understand there is great suspicion of Microsoft, but in my reading 3MF
> is a genuinely open spec, there are no strings attached. It actually makes
> clear it is royalty free, unlike AMF. It also can be freely downloaded,
> unlike AMF which costs $49 and you have to agree to inspection of your
> premises and computer systems by a third party to ensure you are complying
> with the copyright (i.e. not made ANY copies), otherwise the agreement is
> cancelled and you must destroy all copies.
>
> Personally I find it a lot easier to implement 3MF than AMF.
>
> On 27 May 2015 at 08:02, frankv <drifter.frank at gmail.com> wrote:
>
>> A skim through http://bit.ly/1KqwpFU suggests that the "royalty-free
>> patent
>> license" requires a "conformant application" to be produced, and I have no
>> doubt that "conformant" will require DRM, so that a 3MF derivative without
>> DRM would be subject to lawsuits and monetization.
>>
>>
>>
>> --
>> View this message in context:
>> http://forum.openscad.org/New-3MF-file-format-tp12525p12755.html
>> Sent from the OpenSCAD mailing list archive at Nabble.com.
>>
>> _______________________________________________
>> OpenSCAD mailing list
>> Discuss at lists.openscad.org
>> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>>
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150527/5190036b/attachment.html>

From Torsten.Paul at gmx.de  Wed May 27 08:16:40 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Wed, 27 May 2015 14:16:40 +0200
Subject: [OpenSCAD] New 3MF file format
In-Reply-To: <CAGV6i+OdHbVZwywjhczM1Jv-afCdu68MdUrC-ey93OUxnoy9tw@mail.gmail.com>
References: <1430489757472-12525.post@n5.nabble.com>
	<554392A0.7070702@pobox.com>
	<CAGV6i+PmP-sPxtjkLUbwhBjKx1XTZL1NsCk+FWtdkGaYV0Ht5Q@mail.gmail.com>
	<5543E82B.5080102@pobox.com>
	<CAGV6i+Mod9ojLPe5hB+-g=g9LOrF1E-3Hapwi9=WQWy7A0b_gg@mail.gmail.com>
	<1432710163995-12755.post@n5.nabble.com>
	<CAOcn1AtcyNg17HnJxgG5OVMdot8TyDiKkXdLZwVBbW9YC7D2mA@mail.gmail.com>,
	<CAGV6i+OdHbVZwywjhczM1Jv-afCdu68MdUrC-ey93OUxnoy9tw@mail.gmail.com>
Message-ID: <trinity-ed57696f-ab2b-4d0a-b0f0-490888011d14-1432729000253@3capp-gmx-bs37>

Von:?"doug moen" <doug at moens.org>
> On the other hand, most of the other people implementing AMF are probably
> also basing their implementation on V0.47, so whatever text happens to be
> in the pay version of the AMF standard probably doesn't matter all that much.
>
Actually there are some details that are fairly important for interoperability
across different programs. In general the file structure is pretty well
explained in Wikipedia and most information (especially the XML schema is
freely available).
Also Hod Lipson, technical contact and ASTM F42 Task group chair is pretty
helpful and also answers specific questions in the google group. Unfortunately
he failed to convince others to make the specification freely available.
This is likey an ASTM/ISO issue and not related to the actual specification,
but still it's hugely annoying.

>From what I know, both cura and slic3r implementations are not based on the
released spec version. Last time I looked, the netfabb implementation did
not follow the specification regarding the actual file storage when using
ZIPed format.

> On 27 May 2015 at 05:28, Bob Cousins <bobcousins42 at googlemail.com[bobcousins42 at googlemail.com]> wrote:
>?> Personally I find it a lot easier to implement 3MF than AMF.
> >
I can't see much difference there and AMF is pretty trivial when ignoring
the curved triangles (where I'm still not convinced that's extremely useful,
especially due to the fixed 5 level recursion, but I might be wrong here
as I did not dig into the details).

And basic AMF support is already implemented, the export is included in
the release version. The restrictions are mainly coming from limitations
present in current OpenSCAD and are not related to AMF.

ciao,
  Torsten.


From bobcousins42 at googlemail.com  Thu May 28 17:15:51 2015
From: bobcousins42 at googlemail.com (bobc)
Date: Thu, 28 May 2015 14:15:51 -0700 (MST)
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <1432060563590-12705.post@n5.nabble.com>
References: <1431808495763-12667.post@n5.nabble.com>
	<1432060563590-12705.post@n5.nabble.com>
Message-ID: <1432847751849-12759.post@n5.nabble.com>

I'm making some slow but steady progress with a "CSG prototype", I wanted to
share some results I have got so far.

This test case looks at difference() wrt to surface and interior colors. I
have a color per triangle, as well as color per volume. Subtracting a blue
object leaves a blue face. Subtracting a volume with no color reveals the
internal color.

Openscad view : 

<http://forum.openscad.org/file/n12759/openscad.png> 

In CSGtest : 

<http://forum.openscad.org/file/n12759/csgtest.png> 

The top-level tree has two volumes, these are output as two volumes to AMF : 

<http://forum.openscad.org/file/n12759/amftool.png> 

Note the AMF output uses triangle colors, currently I don't output the
volume color (to be fixed).

I am not yet dealing with materials, that and the more tricky operations of
union and intersection are for future study :)

(Apologies if the images are excessive, I can link to image server if
preferred).



--
View this message in context: http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-tp12667p12759.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Thu May 28 18:03:29 2015
From: marius at kintel.net (Marius Kintel)
Date: Thu, 28 May 2015 18:03:29 -0400
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <1432847751849-12759.post@n5.nabble.com>
References: <1431808495763-12667.post@n5.nabble.com>
	<1432060563590-12705.post@n5.nabble.com>
	<1432847751849-12759.post@n5.nabble.com>
Message-ID: <BAC0C283-0E2C-44FA-9A4B-308339F3A61B@kintel.net>

On May 28, 2015, at 17:15 PM, bobc <bobcousins42 at googlemail.com> wrote:

> I'm making some slow but steady progress with a "CSG prototype", I wanted to
> share some results I have got so far.
> 
Interesting..
What is CSGtest? 

 -Marius



From bobcousins42 at googlemail.com  Fri May 29 05:13:52 2015
From: bobcousins42 at googlemail.com (Bob Cousins)
Date: Fri, 29 May 2015 10:13:52 +0100
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <BAC0C283-0E2C-44FA-9A4B-308339F3A61B@kintel.net>
References: <1431808495763-12667.post@n5.nabble.com>
	<1432060563590-12705.post@n5.nabble.com>
	<1432847751849-12759.post@n5.nabble.com>
	<BAC0C283-0E2C-44FA-9A4B-308339F3A61B@kintel.net>
Message-ID: <CAOcn1AvqN5rLEuggrs3PfAVUrO1t-uRHnz07QXiW+y+wzx+amA@mail.gmail.com>

CSGTest is a C# application I have cobbled together using csg.cs (derived
from csg.js) and some code I had written before. It's quicker and easier
for me to explore ideas and issues with this. In principle the techniques
should be transferable to Openscad code later. It also gives me a better
idea of what enhancements would be required to the CSG engine, or what to
look for when considering a different CSG engine.

On 28 May 2015 at 23:03, Marius Kintel <marius at kintel.net> wrote:

> On May 28, 2015, at 17:15 PM, bobc <bobcousins42 at googlemail.com> wrote:
>
> > I'm making some slow but steady progress with a "CSG prototype", I
> wanted to
> > share some results I have got so far.
> >
> Interesting..
> What is CSGtest?
>
>  -Marius
>
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150529/9b0d069d/attachment.html>

From drew at DasRogges.com  Fri May 29 20:21:57 2015
From: drew at DasRogges.com (Drew Rogge)
Date: Fri, 29 May 2015 17:21:57 -0700
Subject: [OpenSCAD] regression test failures in latest github
Message-ID: <556902A5.6000108@DasRogges.com>

I've cloned the latest greatest OpenSCAD on github and get three 
failures when I run the regression tests:

	456 - opencsgtest_issue1215 (Failed)
	477 - opencsgtest_issue1165 (Failed)
	758 - throwntogethertest_issue1215 (Failed)

Is this a known problem?

Drew


From oz.at.michael at gmail.com  Sat May 30 02:17:08 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 29 May 2015 23:17:08 -0700 (MST)
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <CAOcn1AvqN5rLEuggrs3PfAVUrO1t-uRHnz07QXiW+y+wzx+amA@mail.gmail.com>
References: <1431808495763-12667.post@n5.nabble.com>
	<1432060563590-12705.post@n5.nabble.com>
	<1432847751849-12759.post@n5.nabble.com>
	<BAC0C283-0E2C-44FA-9A4B-308339F3A61B@kintel.net>
	<CAOcn1AvqN5rLEuggrs3PfAVUrO1t-uRHnz07QXiW+y+wzx+amA@mail.gmail.com>
Message-ID: <1432966628278-12763.post@n5.nabble.com>

Some notes:

a. Terminology

Seems the terms heterogeneous object for one material/colour and graded
material object or composite material object are the terms for mixed output
(e.g. concurrent extrusion via one nozzle) that I have seen in academic
literature.

b. This is what Slic3r produces when merging two .STLs to .AMF (collapsed)

<http://forum.openscad.org/file/n12763/slic3r_amf.jpg> 

c. OpenSCAD export to .AMF has an extra char at EOL

<http://forum.openscad.org/file/n12763/OpenSCAD_AMF.jpg> 

d. Multiple concurrent extrusion is supported in reprap  Firmware
<http://www.reprap.org/wiki/RepRap_Firmware>  

The particular code is  here
<https://github.com/dc42/RepRapFirmware/blob/master/GCodes.cpp#L375>  ,
basically uses multiple floats added to G1 for other extruders. 

Still looking into other firmwares.

I'm still tracing multiple *concurrent* extrusion support in slicers and
CAD/CAM tools.

d. Multiple extruders supported:

Slic3r: many extruders (I stopped at 17), either loading an .AMF (with
material id defined - needing support in OpenSCAD etc), or via building an
.AMF (material id is set sequentially from 0 for each .STL loaded), or using
different extruders for perimeter/infill/support/interface (which doesn't
needs support in CAD/CAM - ie OpenSCAD))

Simplify3D: 6 extruders, outline, infill, support. Seems to only support two
colour by loading 2 .STLs.

CuraEngine: 16 extruders. Either load an .AMF which sets extruder number for
the volume, or load multiple .STLs and assign an extruder to each. Does not
seem to have the option to set different extruders for infill, support etc.

Repetier Host seems to work well for both Slic3r and CuraEngine for multi
extruders.
<http://forum.openscad.org/file/n12763/repetier.jpg> 

e. Some examples of multi-material printing

REPRAP (Meddel?) Continuously variable 2 colour Blue/White
https://www.youtube.com/watch?v=MrFaNBNdKk0

LulzBot Taz3  FlexiDuelie (std extruder & FlexiExtruder)
(Part1 intro ABS & NinjaFlex but not as a composite)
https://www.youtube.com/watch?v=8RXIGjRG-Gc
(Part2 Alien Hand - interesting design evolution)
https://www.youtube.com/watch?v=Vd4KW0MpwLs

Voxel8 Multi-Material 3D Printer - print plastic and conductive ink and add
imbeded parts
https://www.youtube.com/watch?v=JNyeBeyR6hg 

f. What Blender does:

http://wiki.blender.org/index.php/Doc:2.4/Manual/Materials/Multiple_Materials

object has multiple material(s) (a default and optional others)
material has a colour
mesh has multiple material(s)
mesh has face(s) (and edges & vertices)
face (part of the mesh that reflects colour)
face has a material, default material is assigned on creation.

http://wiki.blender.org/index.php/Doc:2.4/Tutorials/Materials/Nodes/Mixing_Materials

Node(s) can define mixed materials, with a factor (0-1) defining the blend.
Node can have a texture map influencing the blend.

material can be linked to an object or to a mesh. ("Short explanation: If 
connected to the object, you can have several instances of the same obData 
using different materials. If linked to mesh data, you can?t")

Object Render Format (menu). This menu has four options which define how the 
object is to be rendered:
Surface - Material applied to object planes.
Wire    - Material applied to wires following the object edges
Volume  - Material applied to the object volume.
Halos   - Material applied to halos around each object vertex. (??)






-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-tp12667p12763.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From oz.at.michael at gmail.com  Sat May 30 02:37:57 2015
From: oz.at.michael at gmail.com (MichaelAtOz)
Date: Fri, 29 May 2015 23:37:57 -0700 (MST)
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <1432966628278-12763.post@n5.nabble.com>
References: <1431808495763-12667.post@n5.nabble.com>
	<1432060563590-12705.post@n5.nabble.com>
	<1432847751849-12759.post@n5.nabble.com>
	<BAC0C283-0E2C-44FA-9A4B-308339F3A61B@kintel.net>
	<CAOcn1AvqN5rLEuggrs3PfAVUrO1t-uRHnz07QXiW+y+wzx+amA@mail.gmail.com>
	<1432966628278-12763.post@n5.nabble.com>
Message-ID: <1432967877751-12764.post@n5.nabble.com>


Some notes: update

a. Terminology

Seems the terms heterogeneous is also used when the multiple colours are
mixed at a fixed ratio.

d. Multiple concurrent extrusion is supported in reprap  Firmware
<http://www.reprap.org/wiki/RepRap_Firmware>  
 
as used on the RepRapPro Duet controller board, used on the Ormerod 3D
printer.





-----
Unless specifically shown otherwise above, my contribution is in the Public Domain; To the extent possible under law, I have waived all copyright and related or neighbouring rights to this work. This work is published globally via the internet. :) Inclusion of works of previous authors is not included in the above.

The TPP is no simple ?trade agreement.?   Fight it! http://www.ourfairdeal.org/
--
View this message in context: http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-tp12667p12764.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From marius at kintel.net  Sat May 30 10:41:33 2015
From: marius at kintel.net (Marius Kintel)
Date: Sat, 30 May 2015 10:41:33 -0400
Subject: [OpenSCAD] regression test failures in latest github
In-Reply-To: <556902A5.6000108@DasRogges.com>
References: <556902A5.6000108@DasRogges.com>
Message-ID: <FFA2BE37-1014-46CD-BCA7-A03751B5B796@kintel.net>

On May 29, 2015, at 20:21 PM, Drew Rogge <drew at DasRogges.com> wrote:

> I've cloned the latest greatest OpenSCAD on github and get three failures when I run the regression tests:
> 
> 	456 - opencsgtest_issue1215 (Failed)
> 	477 - opencsgtest_issue1165 (Failed)
> 	758 - throwntogethertest_issue1215 (Failed)
> 
> Is this a known problem?
> 
They shouldn?t fail. Could you upload the HTML test report somewhere?

 -Marius



From drew at DasRogges.com  Sat May 30 13:08:36 2015
From: drew at DasRogges.com (Drew Rogge)
Date: Sat, 30 May 2015 10:08:36 -0700
Subject: [OpenSCAD] regression test failures in latest github
In-Reply-To: <FFA2BE37-1014-46CD-BCA7-A03751B5B796@kintel.net>
References: <556902A5.6000108@DasRogges.com>
	<FFA2BE37-1014-46CD-BCA7-A03751B5B796@kintel.net>
Message-ID: <5569EE94.5090509@DasRogges.com>

On 05/30/2015 07:41 AM, Marius Kintel wrote:
> On May 29, 2015, at 20:21 PM, Drew Rogge <drew at DasRogges.com> wrote:
>
>> I've cloned the latest greatest OpenSCAD on github and get three failures when I run the regression tests:
>>
>> 	456 - opencsgtest_issue1215 (Failed)
>> 	477 - opencsgtest_issue1165 (Failed)
>> 	758 - throwntogethertest_issue1215 (Failed)
>>
>> Is this a known problem?
>>
> They shouldn?t fail. Could you upload the HTML test report somewhere?
>
>   -Marius
>

Here you go:

https://drive.google.com/open?id=0B0yzafJzzaBMMmNZdUExb3pHZk0&authuser=0



From drew at DasRogges.com  Sat May 30 14:47:09 2015
From: drew at DasRogges.com (Drew Rogge)
Date: Sat, 30 May 2015 11:47:09 -0700
Subject: [OpenSCAD] allowing center= parameter to be a vector of booleans
In-Reply-To: <C4161447-25AC-4C11-95C3-846CF55B3B81@kintel.net>
References: <5546BE71.5080103@DasRogges.com>
	<C4161447-25AC-4C11-95C3-846CF55B3B81@kintel.net>
Message-ID: <556A05AD.30500@DasRogges.com>

On 05/03/2015 08:38 PM, Marius Kintel wrote:
>
> On May 3, 2015, at 20:33 PM, Drew Rogge <drew at DasRogges.com> wrote:
>
>> [?]
>> cube([10, 20, 5], center=[true, true, false]);
>>
> See:
> https://github.com/openscad/openscad/issues/265
> https://github.com/openscad/openscad/pull/753
>
> Not quite resolved yet..
>
>   -Marius
>

It looks like the pull request listed above has been idle for a year so 
I'm going to go ahead and implement the feature myself. The items in the 
vector are going to be anything that can be converted to a boolean.
I'm not going to implement more fine grain positioning as discussed in 
issue 265.

Right now the centering behavior for the different primitives that 
accept the center= parameter are equivalent to:

		center == false		center == true

cube		[false, false, false]	[true, true, true]
cylinder	[true, true, false]	[true, true, true]
square		[false, false, true]	[true, true, true]
surface		[false, false, ???]	[true, true, ???]
linear_extrude	[false, false, false]	[false, false, true]

For primitives that don't take a center parameter:

sphere		[true, true, true]	[true, true, true]
circle		[true, true, true]	[true, true, true]
polygon		[false, false, true]	[false, false, true]
polyhedron	[false, false, false]	[false, false, false]

Note that the 2D prims square, circle and polygon only center in Z 
because the default is that they have a height of 1 if not extruded.

One question is if all primitives should be changed to take the center 
parameter and to center in all three axes. For example the default for 
cylinder would still be [true, true, false] but one could be able to 
specify [false, false, true] if a cylinder in the ++ quadrant and 
centered in Z was desired. Sphere could could also do the same thing.

I think it's more orthogonal if all primitives could be centered in all 
axes. In fact their default non-centered location should be in the +++ 
octant. However that would break existing programs.

Prims that are specified by coordinates like surface, polygon, etc are a 
bit more problematic. Since the user is specifying the actual coords of 
the components does centering make sense?

So anyway, thoughts on expanding centering to all prims in all axes?

Drew




From louijp at yahoo.com  Sun May 31 00:38:07 2015
From: louijp at yahoo.com (Jean-Paul Louis)
Date: Sun, 31 May 2015 00:38:07 -0400
Subject: [OpenSCAD] OS X issues with version() and version_num()
Message-ID: <FD437A53-A289-4B64-B9D5-AFD560E2921B@yahoo.com>

I downloaded the latest files for OpenSCAD on OS X, and I get nothing with version functions.


version() returns [0,0,0]
version_num returns 0.

Anyone else noticed this, or it is a problem on my side?

I am using a macbook pro with retina display, and Yosemite.

Jean-Paul
AC9GH

From Torsten.Paul at gmx.de  Sun May 31 06:13:19 2015
From: Torsten.Paul at gmx.de (Torsten Paul)
Date: Sun, 31 May 2015 12:13:19 +0200
Subject: [OpenSCAD] OS X issues with version() and version_num()
In-Reply-To: <FD437A53-A289-4B64-B9D5-AFD560E2921B@yahoo.com>
References: <FD437A53-A289-4B64-B9D5-AFD560E2921B@yahoo.com>
Message-ID: <556ADEBF.4030107@gmx.de>

Hi!

On 05/31/2015 06:38 AM, Jean-Paul Louis wrote:
> Anyone else noticed this, or it is a problem on my side?
>
That should be fixed but it's not yet included in the MacOSX
build.
( https://github.com/openscad/openscad/issues/1329 )

ciao,
   Torsten.




From bobcousins42 at googlemail.com  Sun May 31 11:07:22 2015
From: bobcousins42 at googlemail.com (Bob Cousins)
Date: Sun, 31 May 2015 16:07:22 +0100
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <1432966628278-12763.post@n5.nabble.com>
References: <1431808495763-12667.post@n5.nabble.com>
	<1432060563590-12705.post@n5.nabble.com>
	<1432847751849-12759.post@n5.nabble.com>
	<BAC0C283-0E2C-44FA-9A4B-308339F3A61B@kintel.net>
	<CAOcn1AvqN5rLEuggrs3PfAVUrO1t-uRHnz07QXiW+y+wzx+amA@mail.gmail.com>
	<1432966628278-12763.post@n5.nabble.com>
Message-ID: <CAOcn1AvrLab9cUXtDeZ_7TXqwCxBKjSfVh8S5vZn=OvcTCFHiA@mail.gmail.com>

Thanks for the research notes, that's really useful!

b) the slic3r output does not meet AMF spec, material id ="0" is reserved
for "void", i.e. a hole. Would be worth raising a bug on that, if not
already.

f) Blender's "material" seems to be an extended surface color, perhaps like
VRML material, rather than a specification of internal properties ( I might
be wrong ).

I have been looking for source material on volumetric properties in CAD,
and not finding much. Even AMF is deficient in this regard, composite
material specification can use x,y.z coords. One article I did find was New
Trends in Computer Graphics,
http://link.springer.com/chapter/10.1007/978-3-642-83492-9_22 Not sure if
it worth paying for access, seems like there would be some more recent
research?


On 30 May 2015 at 07:17, MichaelAtOz <oz.at.michael at gmail.com> wrote:

> Some notes:
>
> a. Terminology
>
> Seems the terms heterogeneous object for one material/colour and graded
> material object or composite material object are the terms for mixed output
> (e.g. concurrent extrusion via one nozzle) that I have seen in academic
> literature.
>
> b. This is what Slic3r produces when merging two .STLs to .AMF (collapsed)
>
> <http://forum.openscad.org/file/n12763/slic3r_amf.jpg>
>
> c. OpenSCAD export to .AMF has an extra char at EOL
>
> <http://forum.openscad.org/file/n12763/OpenSCAD_AMF.jpg>
>
> d. Multiple concurrent extrusion is supported in reprap  Firmware
> <http://www.reprap.org/wiki/RepRap_Firmware>
>
> The particular code is  here
> <https://github.com/dc42/RepRapFirmware/blob/master/GCodes.cpp#L375>  ,
> basically uses multiple floats added to G1 for other extruders.
>
> Still looking into other firmwares.
>
> I'm still tracing multiple *concurrent* extrusion support in slicers and
> CAD/CAM tools.
>
> d. Multiple extruders supported:
>
> Slic3r: many extruders (I stopped at 17), either loading an .AMF (with
> material id defined - needing support in OpenSCAD etc), or via building an
> .AMF (material id is set sequentially from 0 for each .STL loaded), or
> using
> different extruders for perimeter/infill/support/interface (which doesn't
> needs support in CAD/CAM - ie OpenSCAD))
>
> Simplify3D: 6 extruders, outline, infill, support. Seems to only support
> two
> colour by loading 2 .STLs.
>
> CuraEngine: 16 extruders. Either load an .AMF which sets extruder number
> for
> the volume, or load multiple .STLs and assign an extruder to each. Does not
> seem to have the option to set different extruders for infill, support etc.
>
> Repetier Host seems to work well for both Slic3r and CuraEngine for multi
> extruders.
> <http://forum.openscad.org/file/n12763/repetier.jpg>
>
> e. Some examples of multi-material printing
>
> REPRAP (Meddel?) Continuously variable 2 colour Blue/White
> https://www.youtube.com/watch?v=MrFaNBNdKk0
>
> LulzBot Taz3  FlexiDuelie (std extruder & FlexiExtruder)
> (Part1 intro ABS & NinjaFlex but not as a composite)
> https://www.youtube.com/watch?v=8RXIGjRG-Gc
> (Part2 Alien Hand - interesting design evolution)
> https://www.youtube.com/watch?v=Vd4KW0MpwLs
>
> Voxel8 Multi-Material 3D Printer - print plastic and conductive ink and add
> imbeded parts
> https://www.youtube.com/watch?v=JNyeBeyR6hg
>
> f. What Blender does:
>
>
> http://wiki.blender.org/index.php/Doc:2.4/Manual/Materials/Multiple_Materials
>
> object has multiple material(s) (a default and optional others)
> material has a colour
> mesh has multiple material(s)
> mesh has face(s) (and edges & vertices)
> face (part of the mesh that reflects colour)
> face has a material, default material is assigned on creation.
>
>
> http://wiki.blender.org/index.php/Doc:2.4/Tutorials/Materials/Nodes/Mixing_Materials
>
> Node(s) can define mixed materials, with a factor (0-1) defining the blend.
> Node can have a texture map influencing the blend.
>
> material can be linked to an object or to a mesh. ("Short explanation: If
> connected to the object, you can have several instances of the same obData
> using different materials. If linked to mesh data, you can?t")
>
> Object Render Format (menu). This menu has four options which define how
> the
> object is to be rendered:
> Surface - Material applied to object planes.
> Wire    - Material applied to wires following the object edges
> Volume  - Material applied to the object volume.
> Halos   - Material applied to halos around each object vertex. (??)
>
>
>
>
>
>
> -----
> Unless specifically shown otherwise above, my contribution is in the
> Public Domain; To the extent possible under law, I have waived all
> copyright and related or neighbouring rights to this work. This work is
> published globally via the internet. :) Inclusion of works of previous
> authors is not included in the above.
>
> The TPP is no simple ?trade agreement.?   Fight it!
> http://www.ourfairdeal.org/
> --
> View this message in context:
> http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-tp12667p12763.html
> Sent from the OpenSCAD mailing list archive at Nabble.com.
>
> _______________________________________________
> OpenSCAD mailing list
> Discuss at lists.openscad.org
> http://lists.openscad.org/mailman/listinfo/discuss_lists.openscad.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.openscad.org/pipermail/discuss_lists.openscad.org/attachments/20150531/1618fc87/attachment.html>

From bobcousins42 at googlemail.com  Sun May 31 12:33:21 2015
From: bobcousins42 at googlemail.com (bobc)
Date: Sun, 31 May 2015 09:33:21 -0700 (MST)
Subject: [OpenSCAD] Semantics CSG ops with respect to color, materials
In-Reply-To: <1432847751849-12759.post@n5.nabble.com>
References: <1431808495763-12667.post@n5.nabble.com>
	<1432060563590-12705.post@n5.nabble.com>
	<1432847751849-12759.post@n5.nabble.com>
Message-ID: <1433090001894-12771.post@n5.nabble.com>

Further adventures with color!

Firstly, a new parameter "mix", which takes values 0 to 1. This specifies
the degree of mixing in an intersection or union. Mix = 0 means take color
of left operand, mix = 1 takes color of second operand.

Some examples of intersection, with a = red cube, b = blue sphere:

<http://forum.openscad.org/file/n12771/csgtest.png> 

>From left, mix not specified (openscad default), mix=0, mix= 0.5, mix = 1

For this exercise, color mix is computed from ratio of RGB colors. Other
methods are possible, and probably would make more sense.

Intersection of colors to create new colors may not have many use cases, but
it is an important ingredient when considering unions, and the same mixing
principle can be extended to materials.

For unions, use cases are :
mix = 0. create an "overmould". For example, adding rubber material to a
case for hand grips.
mix = 1, create an inset. For example, embossing a pattern into a surface.
0 < mix < 1, create a blend. I don't have a use case for this...!

Here are the 3 cases, from left, mix = 0, mix=0.5, mix = 1. The resulting
AMF file has 7 volumes.

<http://forum.openscad.org/file/n12771/csg_unions.png> 

That doesn't show the intersections, so here is an exploded view:

<http://forum.openscad.org/file/n12771/unions.png> 

The next thing I want to do is to evaluate whether the AMF output files will
work well (or at all!) with slicers.




--
View this message in context: http://forum.openscad.org/Semantics-CSG-ops-with-respect-to-color-materials-tp12667p12771.html
Sent from the OpenSCAD mailing list archive at Nabble.com.


From louijp at yahoo.com  Sun May 31 13:08:28 2015
From: louijp at yahoo.com (Jean-Paul Louis)
Date: Sun, 31 May 2015 13:08:28 -0400
Subject: [OpenSCAD] Errors loading dxf files on OpenSCAD - OS X
Message-ID: <84591542-8C44-4005-BD9E-1A25AA3908A7@yahoo.com>

Hi Developers,

I really love your product. I use the OS X latest available files.

While trying to extrude a profile downloaded from the 8020 website, I get the errors listed below when I load the DXF file: 

Compiling design (CSG Products generation)...
WARNING: Unsupported DXF Entity 'POINT' (2) in "../../OpenSCAD/libraries/DXF/25-2525.dxf". 
WARNING: Unsupported DXF Entity 'ATTDEF' (11) in "../../OpenSCAD/libraries/DXF/25-2525.dxf". 
Geometries in cache: 146

Is that something I should worry about?

Regards,
Jean-Paul
AC9GH




